MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: OpenEye <mattg@eyesopen.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade -y &&     apt-get install -y wget libcairo2-dev
      npm nodejs nodejs-legacy &&     apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y build-dep pam && export CONFIGURE_OPTS=--disable-audit
      && cd /root && apt-get -b source pam &&     dpkg -i libpam-doc*.deb libpam-modules*.deb
      libpam-runtime*.deb libpam0g*.deb &&     apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      &&     bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda &&     rm Miniconda3-latest-Linux-x86_64.sh
      &&     /opt/conda/bin/conda update --quiet --yes conda &&     /opt/conda/bin/conda
      install --yes sqlalchemy tornado jinja2 traitlets requests pip &&     /opt/conda/bin/pip
      install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g configurable-http-proxy && rm -rf ~/.npm
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install jupyterhub
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'numpy'     'scipy'     'pandas'     'matplotlib'     'seaborn'     'scikit-learn'     'sympy'     'patsy'     'statsmodels'     'jupyter'     'ipywidgets'     'bokeh'     &&
      conda clean -yt
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -p $CONDA_DIR/envs/py2 python=2.7     'numpy'     'scipy'     'pandas'     'matplotlib'     'seaborn'     'scikit-learn'     'sympy'     'patsy'     'statsmodels'     'jupyter'     'ipywidgets'     'bokeh'     &&
      conda clean -yt
    Name: run
    PrependShell: true
  - CmdLine:
    - $CONDA_DIR/envs/py2/bin/python     $CONDA_DIR/envs/py2/bin/jupyter     kernelspec
      install-self
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/requirements.txt
  - CmdLine:
    - pip --no-cache-dir install -r /tmp/requirements.txt &&     pip --no-cache-dir
      install --pre --extra-index-url https://pypi.anaconda.org/OpenEye/channel/beta/simple
      OpenEye-oenotebook &&     pip --no-cache-dir install -U --pre -i https://pypi.anaconda.org/OpenEye/channel/rc/simple
      OpenEye-toolkits
    Name: run
    PrependShell: true
  - CmdLine:
    - $CONDA_DIR/envs/py2/bin/pip --no-cache-dir install -r /tmp/requirements.txt
      &&     $CONDA_DIR/envs/py2/bin/pip --no-cache-dir install --pre --extra-index-url
      https://pypi.anaconda.org/OpenEye/channel/beta/simple OpenEye-oenotebook
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source activate py2 && ipython kernel install && source deactivate"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: volume
    Volumes:
    - /opt/hub_data
  - Env:
    - Key: OE_LICENSE
      Value: /opt/hub_data/oe_license.txt
    Name: env
  - CmdLine:
    - mkdir /srv/oauthenticator
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /srv/oauthenticator
  - Env:
    - Key: OAUTHENTICATOR_DIR
      Value: /srv/oauthenticator
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssl
    - /srv/oauthenticator/ssl
  - Chown: ""
    Name: add
    SourcesAndDest:
    - local_jupyterhub_config.py
    - /srv/jupyterhub/jupyterhub_config.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cull_idle_servers.py
    - /tmp/cull_idle_servers.py
  - CmdLine:
    - chmod 700 /srv/oauthenticator
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - add_user.sh
    - /tmp/add_user.sh
  - CmdLine:
    - jupyterhub
    - -f
    - /srv/jupyterhub/jupyterhub_config.py
    - --port
    - "80"
    - --no-ssl
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
