{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Cole Howard \u003ccole@webmapp.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install     gcc     g++     make     wget     curl     ca-certificates     apt-transport-https     zip     unzip     locales     python-dev     libspatialite-dev     sqlite3     libpq-dev     libcurl4-gnutls-dev     libexpat1-dev     libfreexl-dev     libproj-dev     libxml2-dev     libgeos-dev     libnetcdf-dev     libpoppler-dev     libhdf4-alt-dev     libhdf5-serial-dev \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     curl --silent --show-error --retry 3 https://bootstrap.pypa.io/get-pip.py | python \u0026\u0026     mkdir -p /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error     https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \u0026\u0026     curl --silent --show-error     https://packages.microsoft.com/config/ubuntu/16.04/prod.list \u003e /etc/apt/sources.list.d/mssql-release.list \u0026\u0026     apt-get update \u0026\u0026     ACCEPT_EULA=Y DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install     unixodbc-dev     msodbcsql     mssql-tools \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FGDB_SOURCE",
              "Value": "https://raw.githubusercontent.com/Esri/file-geodatabase-api/master/FileGDB_API_1.5/FileGDB_API_1_5_64gcc51.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --silent --show-error -o /usr/local/src/filgdb_api.tar.gz ${FGDB_SOURCE} \u0026\u0026     tar -xzvf /usr/local/src/filgdb_api.tar.gz -C /usr/local \u0026\u0026     rm /usr/local/FileGDB_API-64gcc51/lib/libstdc++.so.6 \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/local/FileGDB_API-64gcc51/lib/libstdc++.so.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"${LD_LIBRARY_PATH}:/usr/local/FileGDB_API-64gcc51/lib\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GDAL_SOURCE",
              "Value": "https://github.com/OSGeo/gdal/archive/master.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O /usr/local/src/gdal-master.zip ${GDAL_SOURCE} \u0026\u0026     unzip /usr/local/src/gdal-master.zip -d /usr/local/src \u0026\u0026     cd /usr/local/src/gdal-master/gdal \u0026\u0026     ./configure     --with-python     --with-geos     --with-spatialite     --with-pg     --with-freexl     --with-curl     --with-libkml     --with-wfs     --with-odbc=/opt/microsoft/msodbcsql/lib64     --with-fgdb=/usr/local/FileGDB_API-64gcc51     --with-static-proj4 \u0026\u0026     make \u0026\u0026 make install \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:/opt/mssql-tools/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ogr2ogr",
            "--formats"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}