{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Maintainer": "jlisic@gmail.com",
          "Name": "maintainer"
        },
        {
          "Key": "R_VER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "R_VER",
              "Value": "${R_VER:-3.3.3}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y install epel-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LANG=en_US.utf8\" \u003e\u003e /etc/locale.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -c -f UTF-8 -i en_US en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export LC_ALL=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install wget make bzip2-devel gcc-c++ gcc-gfortran libX11-devel libicu-devel libxml2   libxml2-devel openssl-devel pcre-devel pkgconfig tcl-devel texinfo-tex tk-devel tre-devel   xz-devel zlib-devel bzip2-libs cpp expat-devel fontconfig-devel freetype-devel   gcc glib2 glibc-devel glibc-headers kernel-headers libX11 libXau libXau-devel libXft-devel   libXrender-devel libffi libgcc libicu libmpc libquadmath-devel libselinux libsepol libstdc++   libstdc++-devel libxcb libxcb-devel mpfr pcre perl perl-Data-Dumper perl-Text-Unidecode   perl-libintl texinfo texlive-epsf xorg-x11-proto-devel xz-libs zlib which   \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://mran.blob.core.windows.net/install/mro/${R_VER}/microsoft-r-open-${R_VER}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xf microsoft-r-open-${R_VER}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./microsoft-r-open/install.sh -u -a"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages(c('littler','stringr'))\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LIBLOC",
              "Value": "/usr/lib64/R/library"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/lib64/R/library"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ln -s /usr/lib64/microsoft-r/`ls /usr/lib64/microsoft-r/`/lib64/R/library/littler/examples/install.r /usr/local/bin/install.r \u003e /install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ln -s /usr/lib64/microsoft-r/`ls /usr/lib64/microsoft-r/`/lib64/R/library/littler/examples/install2.r /usr/local/bin/install2.r \u003e\u003e /install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ln -s /usr/lib64/microsoft-r/`ls /usr/lib64/microsoft-r/`/lib64/R/library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \u003e\u003e /install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ln -s /usr/lib64/microsoft-r/`ls /usr/lib64/microsoft-r/`/lib64/R/library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \u003e\u003e /install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ln -s /usr/lib64/microsoft-r/`ls /usr/lib64/microsoft-r/`/lib64/R/library/littler/bin/r /usr/local/bin/r \u003e\u003e /install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ln -s /usr/lib64/microsoft-r/`ls /usr/lib64/microsoft-r/`/lib64/R/library /usr/lib64/R/library  \u003e\u003e /install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash /install-littler.sh \u0026\u0026 install.r docopt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf microsoft-r-open-${R_VER}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf microsoft-r-open"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf install-littler.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}