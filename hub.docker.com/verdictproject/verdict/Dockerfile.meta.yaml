MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y vim redis curl openjdk-11-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -o /root/Miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash /root/Miniconda.sh -b -p /root/miniconda
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/miniconda/bin:${PATH}"'
    Name: env
  - CmdLine:
    - conda install -y pyhive[presto] pyhive[hive] jupyterlab pandas nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c anaconda psutil python-daemon
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c plotly plotly==4.1.1
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install jupyterlab=1.0 "ipywidgets=7.5"
    Name: run
    PrependShell: true
  - CmdLine:
    - export NODE_OPTIONS=--max-old-space-size=4096
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install @jupyter-widgets/jupyterlab-manager@1.0 --no-build
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install plotlywidget@1.1.1 --no-build
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install jupyterlab-plotly@1.1.2 --no-build
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install jupyterlab-chart-editor@1.2 --no-build
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter lab build
    Name: run
    PrependShell: true
  - CmdLine:
    - unset NODE_OPTIONS
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/notebooks
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -o /root/zeppelin-0.8.1-bin-all.tgz http://apache.cs.utah.edu/zeppelin/zeppelin-0.8.1/zeppelin-0.8.1-bin-all.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xzf /root/zeppelin-0.8.1-bin-all.tgz -C /root
    Name: run
    PrependShell: true
  - CmdLine:
    - "chown -R root:root /root/zeppelin-0.8.1-bin-all\t\t# weirdly, the owner is
      set to 503 after unzip"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/verdict
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - verdict
    - /root/verdict/verdict
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LICENSE
    - /root/verdict/LICENSE
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup.py
    - /root/verdict/setup.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - README.md
    - /root/verdict/README.md
  - CmdLine:
    - pip install /root/verdict
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/var/verdict
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/var/verdict/cache
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/var/verdict/log
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/bootstrap
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/*.sh
    - /root/bootstrap/
  - CmdLine:
    - chown root:root /root/bootstrap/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /root/bootstrap/*.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/*.py
    - /root/bootstrap/
  - CmdLine:
    - mkdir /root/zeppelin-0.8.1-bin-all/notebook/2EMM5HJDB /root/zeppelin-0.8.1-bin-all/notebook/2ESF1KHY9
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/zeppelin_notebook/2EMM5HJDB/note.json
    - /root/zeppelin-0.8.1-bin-all/notebook/2EMM5HJDB/note.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/zeppelin_notebook/2ESF1KHY9/note.json
    - /root/zeppelin-0.8.1-bin-all/notebook/2ESF1KHY9/note.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/jupyter_notebook
    - /opt/notebooks/
  - Env:
    - Key: PATH
      Value: '"/root/bootstrap:${PATH}"'
    Name: env
  - CmdLine:
    - /root/bootstrap/start_services.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8180"
    - "8888"
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
