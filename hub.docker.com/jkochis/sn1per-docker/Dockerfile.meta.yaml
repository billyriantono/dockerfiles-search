MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: menzo@menzo.io
    Name: maintainer
  - Key: APT_CACHE_HOST
    Name: arg
    Value: null
  - Key: APT_CACHE_PORT
    Name: arg
    Value: null
  - Key: ENABLE_APT_CACHE
    Name: arg
    Value: null
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: INSTALL_DIR
      Value: /usr/share/sniper
    Name: env
  - Env:
    - Key: LOOT_DIR
      Value: /usr/share/sniper/loot
    Name: env
  - Env:
    - Key: PLUGINS_DIR
      Value: /usr/share/sniper/plugins
    Name: env
  - Env:
    - Key: SNIPER_SKIP_DEPENDENCIES
      Value: "true"
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :99
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "if [ \"$ENABLE_APT_CACHE\" ]; \tthen \t\techo \"Acquire::http::Proxy \\\"http://${APT_CACHE_HOST}:${APT_CACHE_PORT}\\\";\"
      \t\t\t  > /etc/apt/apt.conf.d/30autoproxy \\ && \t\t\t  echo  \"Using apt-cache
      proxy: $(cat /etc/apt/apt.conf.d/30autoproxy)\"   \t; else   \t\techo \"Disabled
      local apt-cache proxy for build. Enable using --build-arg ENABLE_APT_CACHE=true\"
      \t; fi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" \t\t
      >> /etc/apt/sources.list.d/kali.sources.list && \tgpg --keyserver pgpkeys.mit.edu
      --recv-key  ED444FF07D8D0BF6 && \tgpg -a --export ED444FF07D8D0BF6 | apt-key
      add - && \t\tapt-get update && apt-get install -y \t\truby \t\trubygems \t\tdos2unix
      \t\tpython \t\tzenmap \t\tsslyze \t\tuniscan \t\txprobe2 \t\tcutycapt \t\tunicornscan
      \t\twaffit \t\thost \t\twhois \t\tiputils-ping \t\txvfb \t\tdirb \t\tdnsrecon
      \t\tcurl \t\tnmap \t\tphp \t\tphp-curl \t\thydra \t\ticeweasel \t\twpscan \t\tsqlmap
      \t\tnbtscan \t\tenum4linux \t\tcisco-torch \t\tmetasploit-framework \t\ttheharvester
      \t\truby-dev \t\tdnsenum \t\tlibsqlite3-dev \t\tnikto \t\tsmtp-user-enum \t\twhatweb
      \t\tdnsutils \t\tsslscan \t\tamap \t\tarachni     \tbsdmainutils && \tmv /usr/bin/python
      /usr/bin/python.unknown && \tln -s /usr/bin/python2.7 /usr/bin/python && \tcurl
      https://bootstrap.pypa.io/get-pip.py | python && \tgem install  \t\tmechanize
      \t\tbcrypt \t\tsqlite3 \t\tnet-http-persistent \t\trake \t\truby-nmap \t\ttext-table
      && \tpip install  \t\tcolorama \t\tdnspython \t\tipaddress \t\ttldextract \t\turllib3
      && \tgit clone https://github.com/1N3/Sn1per.git && \tcd Sn1per && \tprintf
      'yes\\nyes\\nyes\\n' | /bin/bash ./install.sh && \techo Cleaning up package
      index && \t\tapt-get clean && \t\trm -rf /etc/apt/apt.conf.d/30autoproxy &&
      \t\trm -rf /var/lib/apt/lists/* && \techo \"Image creation complete\""
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir
    - /usr/share/sniper/loot/{screenshots,nmap,domains,reports,imports,notes,web}
    Name: run
    PrependShell: false
  - Name: volume
    Volumes:
    - /usr/share/sniper/loot
  - Name: volume
    Volumes:
    - /usr/share/sniper/wordlists
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /root/
  - CmdLine:
    - /root/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
