{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.owasp.oshp.url",
              "Value": "\"https://www.owasp.org/index.php/OWASP_Secure_Headers_Project\""
            },
            {
              "Key": "org.owasp.oshp.name",
              "Value": "\"Owasp SecureHeaders Project\""
            },
            {
              "Key": "org.owasp.oshp.description",
              "Value": "\"Front-end from SecureHeaders Project\""
            },
            {
              "Key": "org.owasp.oshp.version",
              "Value": "\"v3.x\""
            },
            {
              "Key": "org.owasp.oshp.maintainer",
              "Value": "\"alexandre menezes \u003calexandre.fmenezes@owasp.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "APP_DIR",
              "Value": "/opt/headers"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NEW_RELIC_LICENSE_KEY",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BRANCH",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "URL",
          "Name": "arg",
          "Value": "https://github.com/oshp/headers.git"
        },
        {
          "Name": "workdir",
          "Path": "$APP_DIR"
        },
        {
          "CmdLine": [
            "apk add --no-cache py2-pip py-setuptools gcc make build-base python2-dev git curl   \u0026\u0026 git clone --depth 1 $URL -b $BRANCH .   \u0026\u0026 pip2 install --upgrade pip   \u0026\u0026 pip2 install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/secureheaders/docker-entrypoint-apm.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Health": {
            "Interval": 10000000000,
            "Retries": 4,
            "StartPeriod": 30000000000,
            "Test": [
              "CMD-SHELL",
              "curl http://localhost:5000/ || exit 1"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}