MetaArgs: null
Stages:
- BaseName: miko2u/ruby
  Commands:
  - Maintainer: miko@cafelounge.net
    Name: maintainer
  - Env:
    - Key: VERSION
      Value: 3.0.3
    - Key: REDMINE_HOME
      Value: /var/lib/redmine
    - Key: REDMINE_DATA
      Value: /var/www/redmine
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - redmine/*
    - /tmp/
  - CmdLine:
    - cd /tmp  && printf "[cafelounge]\nname=cafelounge repository for CentOS \$releasever
      - \$basearch\nbaseurl=http://repo.cafelounge.net/yum/el/\$releasever/\$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=http://repo.cafelounge.net/yum/el/\$releasever/RPM-GPG-KEY-cafelounge\n"
      > /etc/yum.repos.d/cafelounge.repo  && curl -OL http://repo.mysql.com/mysql-community-release-el6.rpm  &&
      yum -y localinstall mysql-community-release-el6.rpm  && yum -y --enablerepo=cafelounge
      install nginx  && yum -y install telnet sudo which tree dstat tar ssmtp  &&
      yum -y install git openssl-devel readline-devel zlib-devel curl-devel libyaml-devel         ImageMagick
      ImageMagick-devel ipa-pgothic-fonts  && yum -y groupinstall "Development Tools"  &&
      yum -y install mysql-community-devel  && yum -y --enablerepo=cafelounge clean
      all  && find / -group nginx -exec chgrp 498 {} \;; groupmod -g 498 nginx  &&
      find / -user nginx -exec chown 498 {} \;; usermod -u 498 nginx  && mv /etc/nginx/nginx.conf
      /etc/nginx/nginx.conf.dist  && sed -e "s/^mailhub=.*$/mailhub=172.17.42.1/g"         -i.dist
      /etc/ssmtp/ssmtp.conf  && chkconfig messagebus off  && chkconfig nginx on
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p ${REDMINE_HOME}  && curl -OL \"http://www.redmine.org/releases/redmine-${VERSION}.tar.gz\"
      \ && tar -zxf redmine-${VERSION}.tar.gz --strip=1 -C ${REDMINE_HOME}  && rm
      -f redmine-${VERSION}.tar.gz  && sh /tmp/package-patch.sh  && echo \"${VERSION}\"
      > ${REDMINE_HOME}/VERSION  && cp ${REDMINE_HOME}/config/database.yml.example
      ${REDMINE_HOME}/config/database.yml  && mv /tmp/configuration.yml ${REDMINE_HOME}/config/configuration.yml
      \ && mv /tmp/unicorn.rb ${REDMINE_HOME}/config/unicorn.rb  && mv /tmp/Gemfile.local
      ${REDMINE_HOME}/Gemfile.local  && mv /tmp/redmine.init /etc/rc.d/init.d/redmine
      \ && mv /tmp/redmine.logrotate /etc/logrotate.d/redmine  && cd ${REDMINE_HOME}
      \ && rm -rf public/plugin_assets  && ln -sf ${REDMINE_DATA}/tmp/plugin_assets
      public/plugin_assets  && rm -rf tmp/thumbnails  && ln -sf ${REDMINE_DATA}/tmp/thumbnails
      tmp/thumbnails  && ln -sf ${REDMINE_DATA}/tmp/secret_token.rb config/initializers/secret_token.rb
      \ && useradd redmine && echo \"redmine:redmine\" | chpasswd  && echo \"redmine
      ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/redmine  && echo \"Defaults:root\t!requiretty\"
      >> /etc/sudoers.d/root  && chkconfig redmine on"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd ${REDMINE_HOME}  && chown -R redmine:redmine ${REDMINE_HOME}  && gem install
      bundler --no-rdoc --no-ri  && sudo -u redmine -H echo "install: --no-document"
      > /home/redmine/.gemrc  && sudo -u redmine -H echo "update: --no-document" >>
      /home/redmine/.gemrc  && sudo -u redmine -H bundle install -j4 --without development
      test --path vendor/bundle  && mv /tmp/database.yml ${REDMINE_HOME}/config/database.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/redmine ${REDMINE_DATA}  && rm -rf ${REDMINE_HOME}/log  &&
      ln -sf /var/log/redmine ${REDMINE_HOME}/log  && chown redmine:redmine /var/log/redmine
      ${REDMINE_DATA}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/default.d/*
    - /etc/nginx/default.d/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/conf.d/*
    - /etc/nginx/conf.d/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - boot/*
    - /boot/
  - Name: expose
    Ports:
    - "3000"
  From:
    Image: miko2u/ruby
  Name: ""
  Platform: ""
  SourceCode: FROM miko2u/ruby
