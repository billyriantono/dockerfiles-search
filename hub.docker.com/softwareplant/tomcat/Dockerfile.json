{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "PHANTOM_JS",
          "Name": "arg",
          "Value": "phantomjs-2.1.1-linux-x86_64"
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y gettext wget less curl build-essential software-properties-common python-software-properties vim unzip \u0026\u0026         add-apt-repository ppa:openjdk-r/ppa \u0026\u0026         apt-get update \u0026\u0026         apt-get -y install openjdk-8-jdk \u0026\u0026         update-alternatives --config java \u0026\u0026         export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre \u0026\u0026         export JRE_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x         \u0026\u0026 wget --progress=dot:mega https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOM_JS.tar.bz2         \u0026\u0026 tar xvjf $PHANTOM_JS.tar.bz2         \u0026\u0026 mv $PHANTOM_JS /usr/local/share         \u0026\u0026 ln -sf /usr/local/share/$PHANTOM_JS/bin/phantomjs /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd tomcat \u0026\u0026         useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat \u0026\u0026         cd /tmp \u0026\u0026         wget --progress=dot:mega https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.30/bin/apache-tomcat-8.5.30.tar.gz \u0026\u0026         mkdir /opt/tomcat \u0026\u0026         tar xzvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1 \u0026\u0026         cd /opt/tomcat \u0026\u0026         chgrp -R tomcat /opt/tomcat \u0026\u0026         chmod -R g+r conf \u0026\u0026         chmod g+x conf \u0026\u0026         chown -R tomcat /opt/tomcat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \u0026\u0026 \t\tdpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install \u0026\u0026         curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026         apt-get install -y nodejs \u0026\u0026         npm install -g --allow-root --unsafe-perm=true puppeteer@1.0.0 \u0026\u0026         chmod -R a+rwx /usr/lib/node_modules/puppeteer/.local-chromium \u0026\u0026         cd /opt/tomcat/temp/ \u0026\u0026         npm link puppeteer \u0026\u0026 \tnpm install --global yarn@1.17.3 \u0026\u0026         echo \"export NODE_PATH=$(npm root --quiet -g)\" \u003e\u003e /etc/profile.d/lib.sh \u0026\u0026         echo \"alias node='node -e \\\"\\`cat $1 | sed \\\"s/var config = {};/var config = {args: \\[\\'--no-sandbox\\'\\]};/\\\"\\`' \" \u003e\u003e /etc/profile.d/lib.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "tomcat-users.xml",
            "/opt/tomcat/conf/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "manager.xml",
            "/opt/tomcat/conf/Catalina/localhost/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "server.xml",
            "/opt/tomcat/conf/"
          ]
        },
        {
          "Env": [
            {
              "Key": "CATALINA_HOME",
              "Value": "/opt/tomcat"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$CATALINA_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8009"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "\"/opt/tomcat/webapps\""
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/tomcat"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "m3-java-capstone-1.0.war",
            "/opt/tomcat/webapps/m3-java-capstone-1.0.war"
          ]
        },
        {
          "CmdLine": [
            "add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" \u0026\u0026         wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \u0026\u0026         apt-get update \u0026\u0026 apt-get install -y postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "/etc/init.d/postgresql start \u0026\u0026        psql --command \"CREATE USER cloud WITH SUPERUSER PASSWORD 'cloud';\" \u0026\u0026        createdb -O cloud cloud -E 'UTF8'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /bin/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pg_hba.conf",
            "/etc/postgresql/9.6/main/"
          ]
        },
        {
          "CmdLine": [
            "echo \"listen_addresses='*'\" \u003e\u003e /etc/postgresql/9.6/main/postgresql.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/postgresql",
            "/var/log/postgresql",
            "/var/lib/postgresql/data"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Europe/Warsaw /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}