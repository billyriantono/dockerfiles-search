MetaArgs: null
Stages:
- BaseName: httpd:2.4
  Commands:
  - Maintainer: Jason V jasonmakescoolstuff@gmail.com
    Name: maintainer
  - CmdLine:
    - mkdir -p /usr/share/man/man1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update         && apt-get install -y           nano apt-utils net-tools
      openssl curl wget procps locate           git python         && echo "apt-get
      install nano apt-utils net-tools openssl curl wget procps locate git python"
      >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install gnupg -yq         && echo "apt-get install -yq gnupg" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -f default-jre         && echo "apt-get install -y -f default-jre"
      >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias ll="ls -la --color=auto"' >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Fix httpd hostname warnings' >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /etc/hosts /etc/hosts.new         && perl -pi -e "s|`hostname`|`hostname`.shaka.local|g"
      /etc/hosts.new         && echo "Fixing /etc/hosts file"         && cat /etc/hosts.new
      > /etc/hosts         && echo "Fixing /etc/hostname file"         && echo `hostname`.shaka.local
      > /etc/hostname         && cp /usr/local/apache2/conf/httpd.conf /usr/local/apache2/conf/httpd.conf.OLD         &&
      perl -pi -e "s|#ServerName www.example.com:80|ServerName `hostname`.shaka.local:80|g"
      /usr/local/apache2/conf/httpd.conf         && echo "`hostname`.shaka.local"
      >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#"
      >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "install nodejs using wget and curl" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://deb.nodesource.com/setup_10.x         && chmod +x setup_10.x         &&
      ./setup_10.x         apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb https://deb.nodesource.com/node_10.x stretch main' > /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb-src https://deb.nodesource.com/node_10.x stretch main' >> /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update; apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "NODE PART DONE" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#"
      >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install latest shaka-player" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/google/shaka-player.git   && echo "Git pull"  >>
      /root/install.LOG
    Name: run
    PrependShell: true
  - Name: workdir
    Path: shaka-player
  - CmdLine:
    - python build/all.py   && echo "python build/all.py" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Make shaka-player demo accessible via browser" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - chgrp -R www-data ../shaka-player
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r ../shaka-player /usr/local/apache2/htdocs/.
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - rm -rf ../shaka-player
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "SSL Self-signed Certs"  >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -new -x509 -newkey rsa:2048 -nodes         -out /usr/local/apache2/conf/server.crt
      -days 365         -keyout /usr/local/apache2/conf/server.key         -subj "/C=US/ST=WA/L=Seattle/O=IT/OU=SHAKA/CN=shaka.local"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Customize httpd.conf to pick up ssl certs" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i         -e 's/^#\(Include .*httpd-ssl.conf\)/\1/'         -e 's/^#\(LoadModule
      .*mod_ssl.so\)/\1/'         -e 's/^#\(LoadModule .*mod_socache_shmcb.so\)/\1/'         /usr/local/apache2/conf/httpd.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -pi -e "s|VirtualHost _default_:443|VirtualHost *:443|g" /usr/local/apache2/conf/extra/httpd-ssl.conf         &&
      perl -pi -e "s|ServerName www.example.com:443|ServerName `hostname`.shaka.local:443|g"
      /usr/local/apache2/conf/extra/httpd-ssl.conf         && echo `hostname`.shaka.local
      > /etc/hostname         && perl -pi -e 's|#SSLCertificateChainFile "/usr/local/apache2/conf/server-ca.crt"|SSLCertificateChainFile
      "/usr/local/apache2/conf/server.crt"|g' /usr/local/apache2/conf/extra/httpd-ssl.conf         &&
      apachectl restart
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 443/tcp
  - Name: workdir
    Path: /usr/local/apache2/htdocs/
  - CmdLine:
    - echo "Copy and untar content"  >> /root/install.LOG
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - llama.tgz
    - .
  - CmdLine:
    - tar -xzf llama.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "*************************Shaka Demo Config**************************"  >>
      /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Customize the shaka config to pick up IPs and content" >> /root/install.LOG
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets.js
    - /usr/local/apache2/htdocs/shaka-player/demo/common/.
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.sh'
    - /usr/local/apache2/htdocs/shaka-player/demo/common/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fixAssetsJsHelper.py
    - /usr/local/apache2/htdocs/shaka-player/demo/common/.
  - CmdLine:
    - chmod +x /usr/local/apache2/htdocs/shaka-player/demo/common/*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: MACHINE_IP
      Value: '"0.0.0.0"'
    Name: env
  - CmdLine:
    - updatedb
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Use https://proxy.uat.widevine.com/proxy for your" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "license server if you are not running one locally!" >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install complete." >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "First login runs /usr/local/apache2/htdocs/shaka-player/demo/common/one-way-door.sh"
      >> /root/install.LOG
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - /usr/local/apache2/htdocs/shaka-player/demo/common/one-way-door.sh
    Name: cmd
    PrependShell: false
  From:
    Image: httpd:2.4
  Name: ""
  Platform: ""
  SourceCode: FROM httpd:2.4
