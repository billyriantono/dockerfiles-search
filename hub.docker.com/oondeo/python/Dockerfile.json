{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7-alpine3.8",
      "SourceCode": "FROM python:3.7-alpine3.8",
      "Platform": "",
      "From": {
        "Image": "python:3.7-alpine3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ALPINE_VERSION",
              "Value": "'3.8'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "'3.7'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SUMMARY",
              "Value": "\"python alpine base image\""
            },
            {
              "Key": "DESCRIPTION",
              "Value": "\"Alpine base image. The image use scripts and configurations compatible         with redhat openshift.\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "summary",
              "Value": "\"$SUMMARY\""
            },
            {
              "Key": "description",
              "Value": "\"$DESCRIPTION\""
            },
            {
              "Key": "io.k8s.description",
              "Value": "\"$DESCRIPTION\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"python\""
            },
            {
              "Key": "io.openshift.s2i.scripts-url",
              "Value": "image:///usr/libexec/s2i"
            },
            {
              "Key": "io.s2i.scripts-url",
              "Value": "image:///usr/libexec/s2i"
            },
            {
              "Key": "com.redhat.component",
              "Value": "\"core\""
            },
            {
              "Key": "name",
              "Value": "\"oondeo/python\""
            },
            {
              "Key": "version",
              "Value": "$ALPINE_VERSION"
            },
            {
              "Key": "release",
              "Value": "\"1\""
            },
            {
              "Key": "maintainer",
              "Value": "\"OONDEO \u003cinfo@oondeo.es\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "STI_SCRIPTS_URL",
              "Value": "image:///usr/libexec/s2i"
            },
            {
              "Key": "STI_SCRIPTS_PATH",
              "Value": "/usr/libexec/s2i"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/opt/app-root/src"
            },
            {
              "Key": "PATH",
              "Value": "/opt/app-root/src/bin:/opt/app-root/bin:$STI_SCRIPTS_PATH:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASH_ENV",
              "Value": "/opt/app-root/etc/scl_enable"
            },
            {
              "Key": "ENV",
              "Value": "/opt/app-root/etc/scl_enable"
            },
            {
              "Key": "XDG_DATA_HOME",
              "Value": "$HOME/.local/share"
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "PROMPT_COMMAND",
              "Value": "\". /opt/app-root/etc/scl_enable\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 echo \"@edgecommunity http://nl.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 apk add --no-cache tini dash bash rsync git     \u0026\u0026 ln /usr/bin/dash /bin/dash     \u0026\u0026 ln /bin/bash /usr/bin/bash     \u0026\u0026 chmod g=u /etc/passwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/root/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/skel /opt/app-root/src /opt/app-root/etc /opt/app-root/bin /opt/app-root/lib         /opt/app-root/var/log /opt/app-root/var/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "Env": [
            {
              "Key": "VENV_HOME",
              "Value": "\"$HOME/.env\""
            },
            {
              "Key": "PYTHON_BIN",
              "Value": "\"python\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_NO_CACHE_DIR",
              "Value": "off"
            },
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            },
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            },
            {
              "Key": "PYTHONDONTWRITEBYTECODE",
              "Value": "''"
            },
            {
              "Key": "PIP_BIN",
              "Value": "\"pip\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "RUN_DEPS",
          "Name": "arg",
          "Value": "'curl rsync git'"
        },
        {
          "CmdLine": [
            "apk-install -t .run-deps $RUN_DEPS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUILD_DEPS",
              "Value": "'         bzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tfindutils \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlibnsl-dev \t\tlibressl-dev \t\tlibtirpc-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\tutil-linux-dev \t\txz-dev         zlib-dev         git         unzip         xmlsec-dev         libxslt-dev         jpeg-dev         cyrus-sasl-dev         openldap-dev         fontconfig-dev         libxml2-dev         postgresql-dev         mariadb-dev     '"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "PYTHON_MODULES",
          "Name": "arg",
          "Value": "\"      Babel      cffi      codecov      coverage      coveralls      crypto      gevent      greenlet      Jinja2      lxml      lasso      num2words      numpy      oauthlib      ofxparse      paramiko      passlib      phonenumbers      Pillow      psycopg2      pydot      pyldap      PyMySQL      pyopenssl      pyserial      python-dateutil      python-stdnum      pytz      pyusb      PyYAML      requests      simplejson      tz      unicodecsv      unidecode      unittest2      uwsgi      Werkzeug      wheel      ptvsd      \""
        },
        {
          "CmdLine": [
            "apk-install -t .build-deps $BUILD_DEPS     \u0026\u0026 pip install --no-cache-dir $PYTHON_MODULES     \u0026\u0026 python -m compileall /usr/local/lib || true     \u0026\u0026 install-deps /usr/local     \u0026\u0026 rm -rf ~/.cache/pip  /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 1001 -r -g 0 -d ${HOME} -s /sbin/nologin       -c \"Default Application User\" default  || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -u 1001 -s /bin/dash -G root -h ${HOME} default || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R 1001:0 /opt/app-root     \u0026\u0026 chmod -R g+w /opt/app-root     \u0026\u0026 chmod ug+s /opt/app-root/*     \u0026\u0026 mkdir -p ${HOME}/.pki/nssdb     \u0026\u0026 chown -R 1001:0 ${HOME}/.pki     \u0026\u0026 chown -R 1001:0 /var/log     \u0026\u0026 chmod -R 777 /var/log     \u0026\u0026 chmod 777 /var/run \u0026\u0026 chmod 775 /run     \u0026\u0026 chmod ug+s /run /var/run     \u0026\u0026 chown 1001 /var/run /run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "-g",
            "--",
            "container-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python3"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "1001"
        }
      ]
    }
  ]
}