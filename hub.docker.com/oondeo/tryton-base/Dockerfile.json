{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "LANG",
              "Value": "es_ES.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "es_ES.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "es_ES.UTF-8"
            },
            {
              "Key": "XDG_DATA_HOME",
              "Value": "\"/var/lib/trytond/.local/share\""
            },
            {
              "Key": "TRYTON_HOME",
              "Value": "\"/var/lib/trytond\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/main$/main contrib non-free/g' /etc/apt/sources.list   \u0026\u0026 useradd -d $TRYTON_HOME tryton   \u0026\u0026 mkdir -p $XDG_DATA_HOME $TRYTON_HOME/.ssh /var/run/sshd    \u0026\u0026 chown -R tryton $TRYTON_HOME $XDG_DATA_HOME   \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends locales ca-certificates wget   \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen   \u0026\u0026 echo $LANG UTF-8 \u003e\u003e /etc/locale.gen   \u0026\u0026 locale-gen    \u0026\u0026 apt-get install -y --no-install-recommends dash libyaml-dev freetds-dev   libldap2-dev libsasl2-dev libpq-dev autoconf libtool automake   libmariadb-client-lgpl-dev-compat libmariadb-client-lgpl-dev libmariadbd-dev   sqlite sqlite3 libsqlite3-dev libmagic-dev   libxml2-dev libxslt-dev libjpeg-dev mercurial git build-essential libreadline-dev   gcc libffi-dev libncurses5-dev ttf-mscorefonts-installer rabbitmq-server   \u0026\u0026 rm -rf /var/cache/apt/* /var/lib/apt/* /var/tmp/* /tmp/* /var/log/* /usr/share/doc/* /usr/share/man/* /root/.npm || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 wget -O - https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 apt-get install -y --no-install-recommends nodejs     \u0026\u0026 npm install -g grunt bower gulp yarn     \u0026\u0026 rm -rf /var/cache/apt/* /var/lib/apt/* /var/tmp/* /tmp/* /var/log/* /usr/share/doc/* /usr/share/man/* /root/.npm || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/mariadb_config /usr/bin/mysql_config || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/nodejs /usr/bin/node || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "-g",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "SASSC_VERSION",
              "Value": "3.4.2"
            },
            {
              "Key": "LIBSASS_VERSION",
              "Value": "3.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O - https://github.com/sass/libsass/archive/$LIBSASS_VERSION.tar.gz  | tar -zvxf- -C /tmp      \u0026\u0026 wget -O - https://github.com/sass/sassc/archive/$SASSC_VERSION.tar.gz | tar -zvxf- -C /tmp      \u0026\u0026 cd /tmp/libsass-$LIBSASS_VERSION \u0026\u0026 autoreconf --force --install \u0026\u0026 ./configure --enable-shared --prefix=/usr/local      \u0026\u0026 cd /tmp/sassc-$SASSC_VERSION \u0026\u0026 SASS_LIBSASS_PATH=/tmp/libsass-$LIBSASS_VERSION \u0026\u0026 make -j5 \u0026\u0026 make install      \u0026\u0026 cd libsass-$LIBSASS_VERSION \u0026\u0026 make install      \u0026\u0026 rm -rf /var/cache/apt/* /var/lib/apt/* /var/tmp/* /tmp/* /var/log/* /usr/share/doc/* /usr/share/man/* /root/.npm || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends python-uno python-stdnum     python-support python-cairo python-pil python-dev python-virtualenv virtualenv python-pip     \u0026\u0026 rm -rf /var/cache/apt/* /var/lib/apt/* /var/tmp/* /tmp/* /var/log/* /usr/share/doc/* /usr/share/man/* /root/.npm || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libreoffice-writer     \u0026\u0026 rm -rf /var/cache/apt/* /var/lib/apt/* /var/tmp/* /tmp/* /var/log/* /usr/share/doc/* /usr/share/man/* /root/.npm || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "unoconv",
            "/usr/local/bin"
          ]
        },
        {
          "Env": [
            {
              "Key": "TRYTON_VERSION",
              "Value": "4.0"
            },
            {
              "Key": "ENVIRONMENT",
              "Value": "\"dev\""
            },
            {
              "Key": "PYTHON_BIN",
              "Value": "\"/app/.env/bin/python\""
            },
            {
              "Key": "TRYTOND_BIN",
              "Value": "\"trytond/bin/trytond\""
            },
            {
              "Key": "TRYTOND_CONFIG",
              "Value": "\"trytond.conf\""
            },
            {
              "Key": "TRYTOND_LOGCONFIG",
              "Value": "\"trytond-log.conf\""
            },
            {
              "Key": "TRYTOND_ARGS",
              "Value": "\"\""
            },
            {
              "Key": "DB_NAME",
              "Value": "\"\""
            },
            {
              "Key": "TRYTOND_DATABASE_URI",
              "Value": "\"postgresql://tryton:tryton@postgres:5432/\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "tryton"
        },
        {
          "CmdLine": [
            "/bin/dash",
            "-c",
            "${PYTHON_BIN} ${TRYTOND_BIN} -c ${TRYTOND_CONFIG} --logconf ${TRYTOND_LOGCONFIG} -v"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}