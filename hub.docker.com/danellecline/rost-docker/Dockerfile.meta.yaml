MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Danelle Cline <dcline@mbari.org>
    Name: maintainer
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y dist-upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential cmake wget unzip python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y qt5-default libvtk6-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libopenexr-dev libgdal-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev
      libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev
      libopencore-amrwb-dev libv4l-dev libxine2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libtbb-dev libeigen3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk
      python3-numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ant default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y doxygen
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libboost-all-dev libflann-dev libfftw3-dev libopencv-dev
      libsndfile1-dev
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - Env:
    - Key: VERSION
      Value: 3.0.0
    Name: env
  - CmdLine:
    - wget http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/${VERSION}/opencv-${VERSION}.zip/download
      -O opencv-${VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip opencv-${VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code/opencv-${VERSION}/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code/opencv-${VERSION}/build
  - CmdLine:
    - cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON
      -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -DCMAKE_INSTALL_PREFIX=$CV_ROOT ..
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4 && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pysrt
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://gitlab.com/warplab/rost-cli.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code/rost-cli/build
  - CmdLine:
    - sed -i 's/OpenCV_INCLUDE_DIR/OpenCV_INCLUDE_DIRS/g' /code/rost-cli/sunshine/CMakeLists.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cmake ..
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mjpeg_client.patch
    - .
  - CmdLine:
    - patch /code/rost-cli/utils/src/mjpg_client.cpp mjpeg_client.patch
    Name: run
    PrependShell: true
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: ROSTPATH
      Value: /code/rost-cli
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:/code/rost-cli/bin:$PATH
    Name: env
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
