{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install     locales     rsync     openssh-server     sudo     procps     wget     unzip     mc     ca-certificates     curl     software-properties-common     python-software-properties     build-essential     autoconf automake autotools-dev libtool xutils-dev libpq-dev pkg-config openssl libssl-dev     bash-completion \u0026\u0026     mkdir /var/run/sshd \u0026\u0026     sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \u0026\u0026     echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     useradd -u 1000 -G users,sudo,root -d /home/user --shell /bin/bash -m user \u0026\u0026     usermod -p \"*\" user \u0026\u0026     add-apt-repository ppa:git-core/ppa \u0026\u0026     apt-get update \u0026\u0026     sudo apt-get install git subversion -y \u0026\u0026     apt-get clean \u0026\u0026     apt-get -y autoremove \u0026\u0026     sudo update-ca-certificates -f \u0026\u0026     apt-get -y clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/user"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/user/.cargo/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/projects"
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf |     sh -s -- --default-toolchain stable -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cargo install diesel_cli --no-default-features --features postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cargo install wasm-bindgen-cli --version 0.2.40"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rustup target add wasm32-unknown-unknown"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cargo install cargo-watch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cargo install systemfd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for f in \"/home/user\" \"/etc/passwd\" \"/etc/group\" \"/projects\"; do           sudo chgrp -R 0 ${f} \u0026\u0026            sudo chmod -R g+rwX ${f};         done \u0026\u0026         cat /etc/passwd |         sed s#user:x.*#user:x:\\${USER_ID}:\\${GROUP_ID}::\\${HOME}:/bin/bash#g         \u003e /home/user/passwd.template \u0026\u0026         cat /etc/group |         sed s#root:x:0:#root:x:0:0,\\${USER_ID}:#g         \u003e /home/user/group.template \u0026\u0026         sudo sed -ri 's/StrictModes yes/StrictModes no/g' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUSTFLAGS",
              "Value": "\"-Aproc-macro-derive-resolution-fallback\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/home/user/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/home/user/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "tail -f /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}