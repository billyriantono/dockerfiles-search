MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-devel
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.7.1
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: PYTHON_ROOT
      Value: $HOME/local/python-$PYTHON_VERSION
    Name: env
  - Env:
    - Key: PATH
      Value: $PYTHON_ROOT/bin:$PATH
    Name: env
  - Env:
    - Key: PYENV_ROOT
      Value: $HOME/.pyenv
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade -y  && apt-get install -y     gdebi     git     make     build-essential     libssl-dev     zlib1g-dev     libbz2-dev     libreadline-dev     libsqlite3-dev     wget     unzip     curl     llvm     libncurses5-dev     libncursesw5-dev     xz-utils     tk-dev     libffi-dev     liblzma-dev  &&
      git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT  && $PYENV_ROOT/plugins/python-build/install.sh  &&
      /usr/local/bin/python-build -v $PYTHON_VERSION $PYTHON_ROOT  && rm -rf $PYENV_ROOT
    Name: run
    PrependShell: true
  - CmdLine:
    - apt remove --allow-change-held-packages -y libcudnn7 libcudnn7-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7_7.5.0.56-1+cuda10.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7-dev_7.5.0.56-1+cuda10.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i libcudnn7_7.5.0.56-1+cuda10.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i libcudnn7-dev_7.5.0.56-1+cuda10.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tensorflow-gpu==1.13.1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /protoc_3.3 &&     cd protoc_3.3 &&     wget https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip
      &&     chmod 775 protoc-3.3.0-linux-x86_64.zip &&     unzip protoc-3.3.0-linux-x86_64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y protobuf-compiler python-pil python-lxml python-tk
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --user Cython contextlib2 pillow lxml matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/tensorflow/models.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/cocodataset/cocoapi.git &&     cd cocoapi/PythonAPI
      &&     make &&     cp -r pycocotools /models/research/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /models/research &&     /protoc_3.3/bin/protoc object_detection/protos/*.proto
      --python_out=.
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: $PYTHONPATH:/models/research:/models/research/slim
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils/create_tf_record.py
    - /models/research/object_detection/dataset_tools/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils/shell_script
    - /models/reserach/.
  - CmdLine:
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" |
      tee /etc/apt/sources.list.d/coral-edgetpu.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y edgetpu
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:10.0-cudnn7-devel
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-devel
