{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:9.6-alpine",
      "SourceCode": "FROM postgres:9.6-alpine",
      "Platform": "",
      "From": {
        "Image": "postgres:9.6-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Jeremy Nauta \u003cjeremy@myshowpass.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"http://dl-2.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-3.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAX_CONNECTIONS",
              "Value": "500"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_WAL_KEEP_SEGMENTS",
              "Value": "256"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_MAX_WAL_SENDERS",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPLICATION_ROLE",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPLICATION_USER",
              "Value": "replication"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPLICATION_PASSWORD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_HOST",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_DB",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_USER",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_PASSWORD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_PORT",
              "Value": "5432"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_VERSION",
              "Value": "2.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_SHA256",
              "Value": "afa91ef89f827de317c7d7fe259e4a2ca4a57837c94a08e9040cbba77ad3e938"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex         \u0026\u0026 apk add --no-cache --virtual .fetch-deps         ca-certificates         openssl         tar         \u0026\u0026 wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\"     \u0026\u0026 echo \"$POSTGIS_SHA256 *postgis.tar.gz\" | sha256sum -c -     \u0026\u0026 mkdir -p /usr/src/postgis     \u0026\u0026 tar         --extract         --file postgis.tar.gz         --directory /usr/src/postgis         --strip-components 1     \u0026\u0026 rm postgis.tar.gz         \u0026\u0026 apk add --no-cache --virtual .build-deps         autoconf         automake         g++         json-c-dev         libtool         libxml2-dev         make         perl         \u0026\u0026 apk add --no-cache --virtual .build-deps-testing         --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing         gdal-dev         geos-dev         proj4-dev     \u0026\u0026 cd /usr/src/postgis     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 apk add --no-cache --virtual .postgis-rundeps         json-c     \u0026\u0026 apk add --no-cache --virtual .postgis-rundeps-testing         --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing         geos         gdal         proj4     \u0026\u0026 cd /     \u0026\u0026 rm -rf /usr/src/postgis     \u0026\u0026 apk del .fetch-deps .build-deps .build-deps-testing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./10-replication-config.sh",
            "/docker-entrypoint-initdb.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./20-replication-setup.sh",
            "/docker-entrypoint-initdb.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./30-initdb-postgis.sh",
            "/docker-entrypoint-initdb.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./update-postgis.sh",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint-initdb.d/10-replication-config.sh     /docker-entrypoint-initdb.d/20-replication-setup.sh     /docker-entrypoint-initdb.d/30-initdb-postgis.sh     /usr/local/bin/update-postgis.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}