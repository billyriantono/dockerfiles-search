MetaArgs: null
Stages:
- BaseName: postgres:11-alpine
  Commands:
  - CmdLine:
    - "set -x \t&& apk update && apk add ca-certificates curl \t&& curl -L https://github.com/odise/go-cron/releases/download/v0.0.7/go-cron-linux.gz
      | zcat > /usr/local/bin/go-cron \t&& chmod a+x /usr/local/bin/go-cron \t&& apk
      del ca-certificates curl"
    Name: run
    PrependShell: true
  - Env:
    - Key: POSTGRES_DB
      Value: '**None**'
    Name: env
  - Env:
    - Key: POSTGRES_HOST
      Value: '**None**'
    Name: env
  - Env:
    - Key: POSTGRES_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: '**None**'
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: '**None**'
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD_FILE
      Value: '**None**'
    Name: env
  - Env:
    - Key: POSTGRES_EXTRA_OPTS
      Value: '''-Z9'''
    Name: env
  - Env:
    - Key: SCHEDULE
      Value: '''@daily'''
    Name: env
  - Env:
    - Key: BACKUP_DIR
      Value: '''/backups'''
    Name: env
  - Env:
    - Key: BACKUP_KEEP_DAYS
      Value: "7"
    Name: env
  - Env:
    - Key: BACKUP_KEEP_WEEKS
      Value: "4"
    Name: env
  - Env:
    - Key: BACKUP_KEEP_MONTHS
      Value: "6"
    Name: env
  - Env:
    - Key: HEALTHCHECK_PORT
      Value: "8080"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup.sh
    - /backup.sh
  - Name: volume
    Volumes:
    - /backups
  - CmdLine:
    - /bin/sh
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - exec /usr/local/bin/go-cron -s "$SCHEDULE" -p "$HEALTHCHECK_PORT" -- /backup.sh
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 300000000000
      Test:
      - CMD-SHELL
      - curl -f "http://localhost:$HEALTHCHECK_PORT/" || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: postgres:11-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM postgres:11-alpine
