{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Maintainer": "Stevesbrain",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"stevesbrain version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "D5823CACB477191CAC0075555AE420CC0209989E"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "CONFIGUREFLAGS",
          "Name": "arg",
          "Value": "\"--prefix=/opt/znc --enable-cyrus --enable-perl --enable-python --disable-ipv6\""
        },
        {
          "Key": "MAKEFLAGS",
          "Name": "arg",
          "Value": "\"-j\""
        },
        {
          "Env": [
            {
              "Key": "ZNC_VERSION",
              "Value": "1.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "clean_py.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk add --no-cache --virtual runtime-dependencies         ca-certificates         cyrus-sasl         icu         openssl         tini \tpy3-requests \tgit \ttzdata     \u0026\u0026 apk add --no-cache --virtual build-dependencies         build-base         curl         cyrus-sasl-dev         gnupg         icu-dev         openssl-dev         perl-dev         python3-dev     \u0026\u0026 mkdir /znc-src \u0026\u0026 cd /znc-src     \u0026\u0026 curl -fsSL \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz\" -o znc.tgz     \u0026\u0026 curl -fsSL \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz.sig\" -o znc.tgz.sig     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 curl https://gist.githubusercontent.com/stevesbrain/e0cb404d3a31fde8cd23a36fadebe2e8/raw/bc06cd01785b371b3beb3408ff1b25fdecbcbe48/DarthGandalfKey.asc | gpg --import     \u0026\u0026 gpg --batch --verify znc.tgz.sig znc.tgz     \u0026\u0026 rm -rf \"$GNUPGHOME\"     \u0026\u0026 tar -zxf znc.tgz --strip-components=1     \u0026\u0026 PYTHONDONTWRITEBYTECODE=yes     \u0026\u0026 mkdir build \u0026\u0026 cd build     \u0026\u0026 ../configure ${CONFIGUREFLAGS}     \u0026\u0026 make $MAKEFLAGS     \u0026\u0026 make install     \u0026\u0026 rm -rf /src     \u0026\u0026 apk del --purge build-dependencies     \u0026\u0026 rm -rf /znc-src; exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir /docker     \u0026\u0026 apk add --no-cache --virtual build-dependencies         build-base \ticu-dev \topenssl-dev \tcurl     \u0026\u0026 cd /docker     \u0026\u0026 git clone https://github.com/jreese/znc-push.git     \u0026\u0026 cd /docker/znc-push     \u0026\u0026 PATH=$PATH:/opt/znc/bin     \u0026\u0026 make     \u0026\u0026 mkdir -p /docker/modules     \u0026\u0026 cp /docker/znc-push/push.so /docker/modules/     \u0026\u0026 cd /docker     \u0026\u0026 git clone https://github.com/moshee/modignore     \u0026\u0026 cd /docker/modignore     \u0026\u0026 znc-buildmod ignore.cc     \u0026\u0026 cp ignore.so /docker/modules/     \u0026\u0026 cd /docker     \u0026\u0026 mkdir /docker/simple_disconnect     \u0026\u0026 cd /docker/simple_disconnect     \u0026\u0026 curl -fsSL https://gist.githubusercontent.com/maxpowa/57e5d6fb3afb944671f5/raw/8158ec1e4325c5d04078ff77143f7ca5bdd8ed67/simple_disconnect.cpp -o simple_disconnect.cpp     \u0026\u0026 znc-buildmod simple_disconnect.cpp     \u0026\u0026 cp /docker/simple_disconnect/simple_disconnect.so /docker/modules/     \u0026\u0026 cd /docker     \u0026\u0026 rm -rf /docker/znc-push     \u0026\u0026 rm -rf /docker/modignore     \u0026\u0026 rm -rf /src     \u0026\u0026 apk del --purge build-dependencies build-base curl     \u0026\u0026 /clean_py.sh; exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -u 1000 -S znc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g 1000 -S znc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /znc-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "znc.conf.example",
            "/docker"
          ]
        },
        {
          "CmdLine": [
            "chown -R znc:znc /znc-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R znc:znc /docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "znc"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/znc-data"
          ]
        },
        {
          "Env": [
            {
              "Key": "BUILD",
              "Value": "0.3.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}