MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Maintainer: Stevesbrain
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"stevesbrain version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Env:
    - Key: GPG_KEY
      Value: D5823CACB477191CAC0075555AE420CC0209989E
    Name: env
  - Key: CONFIGUREFLAGS
    Name: arg
    Value: '"--prefix=/opt/znc --enable-cyrus --enable-perl --enable-python --disable-ipv6"'
  - Key: MAKEFLAGS
    Name: arg
    Value: '"-j"'
  - Env:
    - Key: ZNC_VERSION
      Value: 1.7.1
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - clean_py.sh
    - /
  - CmdLine:
    - "set -x     && apk add --no-cache --virtual runtime-dependencies         ca-certificates
      \        cyrus-sasl         icu         openssl         tini \tpy3-requests
      \tgit \ttzdata     && apk add --no-cache --virtual build-dependencies         build-base
      \        curl         cyrus-sasl-dev         gnupg         icu-dev         openssl-dev
      \        perl-dev         python3-dev     && mkdir /znc-src && cd /znc-src     &&
      curl -fsSL \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz\" -o znc.tgz
      \    && curl -fsSL \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz.sig\"
      -o znc.tgz.sig     && export GNUPGHOME=\"$(mktemp -d)\"     && curl https://gist.githubusercontent.com/stevesbrain/e0cb404d3a31fde8cd23a36fadebe2e8/raw/bc06cd01785b371b3beb3408ff1b25fdecbcbe48/DarthGandalfKey.asc
      | gpg --import     && gpg --batch --verify znc.tgz.sig znc.tgz     && rm -rf
      \"$GNUPGHOME\"     && tar -zxf znc.tgz --strip-components=1     && PYTHONDONTWRITEBYTECODE=yes
      \    && mkdir build && cd build     && ../configure ${CONFIGUREFLAGS}     &&
      make $MAKEFLAGS     && make install     && rm -rf /src     && apk del --purge
      build-dependencies     && rm -rf /znc-src; exit 0"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x     && mkdir /docker     && apk add --no-cache --virtual build-dependencies
      \        build-base \ticu-dev \topenssl-dev \tcurl     && cd /docker     &&
      git clone https://github.com/jreese/znc-push.git     && cd /docker/znc-push
      \    && PATH=$PATH:/opt/znc/bin     && make     && mkdir -p /docker/modules
      \    && cp /docker/znc-push/push.so /docker/modules/     && cd /docker     &&
      git clone https://github.com/moshee/modignore     && cd /docker/modignore     &&
      znc-buildmod ignore.cc     && cp ignore.so /docker/modules/     && cd /docker
      \    && mkdir /docker/simple_disconnect     && cd /docker/simple_disconnect
      \    && curl -fsSL https://gist.githubusercontent.com/maxpowa/57e5d6fb3afb944671f5/raw/8158ec1e4325c5d04078ff77143f7ca5bdd8ed67/simple_disconnect.cpp
      -o simple_disconnect.cpp     && znc-buildmod simple_disconnect.cpp     && cp
      /docker/simple_disconnect/simple_disconnect.so /docker/modules/     && cd /docker
      \    && rm -rf /docker/znc-push     && rm -rf /docker/modignore     && rm -rf
      /src     && apk del --purge build-dependencies build-base curl     && /clean_py.sh;
      exit 0"
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -u 1000 -S znc
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -g 1000 -S znc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /znc-data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - znc.conf.example
    - /docker
  - CmdLine:
    - chown -R znc:znc /znc-data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R znc:znc /docker
    Name: run
    PrependShell: true
  - Name: user
    User: znc
  - Name: volume
    Volumes:
    - /znc-data
  - Env:
    - Key: BUILD
      Value: 0.3.6
    Name: env
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
