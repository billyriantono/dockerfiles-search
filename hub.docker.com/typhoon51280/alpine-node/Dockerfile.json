{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "v4.1.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update curl make gcc g++ python linux-headers paxctl libgcc libstdc++ \u0026\u0026   curl -sSL https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.gz | tar -xz \u0026\u0026   cd /node-${VERSION} \u0026\u0026   ./configure --prefix=/usr ${CONFIG_FLAGS} \u0026\u0026   make -j$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) \u0026\u0026   make install \u0026\u0026   paxctl -cm /usr/bin/node \u0026\u0026   cd / \u0026\u0026   if [ -x /usr/bin/npm ]; then     npm install -g npm@2 \u0026\u0026     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;   fi \u0026\u0026   apk del curl make gcc g++ python linux-headers paxctl ${DEL_PKGS} \u0026\u0026   rm -rf /etc/ssl /node-${VERSION} ${RM_DIRS}     /usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp     /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}