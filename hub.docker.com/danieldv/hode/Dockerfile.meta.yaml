MetaArgs:
- DefaultValue: 3.11.3
  Key: PETSC_VERSION
  ProvidedValue: null
  Value: 3.11.3
- DefaultValue: 3.11.0
  Key: PETSC4PY_VERSION
  ProvidedValue: null
  Value: 3.11.0
- DefaultValue: null
  Key: MAKEFLAGS
  ProvidedValue: null
  Value: null
- DefaultValue: '"-02 -g"'
  Key: PETSC_OPTFLAGS
  ProvidedValue: null
  Value: '"-02 -g"'
- DefaultValue: '"yes"'
  Key: PETSC_DEBUGGING
  ProvidedValue: null
  Value: '"yes"'
Stages:
- As: base
  BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"D. de Vries <daniel.devries@darcorop.com>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Base image for HPC Optimization Development Environment (HODE)"'
    Name: label
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: PYTHONIOENCODING
      Value: '"UTF-8"'
    Name: env
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive &&     apt-get -qq update &&     apt-get
      -yq --with-new-pkgs -o Dpkg::Options::="--force-confold" upgrade &&     apt-get
      -y install         cmake         g++         gfortran         libboost-dev         libboost-filesystem-dev         libboost-iostreams-dev         libboost-math-dev         libboost-program-options-dev         libboost-system-dev         libboost-thread-dev         libboost-timer-dev         libeigen3-dev         libhdf5-mpich-dev         liblapack-dev         libmpich-dev         libopenblas-dev         mpich         ninja-build         pkg-config         python3-dev         python3-pip         python3-setuptools
      &&     apt-get -y install         doxygen         git         graphviz         sudo         valgrind         wget
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir numpy scipy mpi4py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  From:
    Image: ubuntu:18.04
  Name: base
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as base
- As: dev-env
  BaseName: base
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"D. de Vries <daniel.devries@darcorop.com>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Development environment with working PETSc installation."'
    Name: label
  - Key: PETSC_VERSION
    Name: arg
    Value: null
  - Key: PETSC4PY_VERSION
    Name: arg
    Value: null
  - Key: MAKEFLAGS
    Name: arg
    Value: null
  - Key: PETSC_OPTFLAGS
    Name: arg
    Value: null
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt-get -qq update &&     apt-get -y install bison flex python &&     wget -nc
      --quiet http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz
      -O petsc-${PETSC_VERSION}.tar.gz &&     mkdir -p petsc-src && tar -xf petsc-${PETSC_VERSION}.tar.gz
      -C petsc-src --strip-components 1 &&     cd petsc-src &&     ./configure         --COPTFLAGS=${PETSC_SLEPC_OPTFLAGS}         --CXXOPTFLAGS=${PETSC_SLEPC_OPTFLAGS}         --FOPTFLAGS=${PETSC_SLEPC_OPTFLAGS}         --with-debugging=${PETSC_SLEPC_DEBUGGING}         --with-fortran-bindings=no         --download-blacs         --download-hypre         --download-metis         --download-mumps         --download-ptscotch         --download-scalapack         --download-spai         --download-suitesparse         --download-superlu         --with-scalar-type=real         --prefix=/usr/local/petsc
      &&     make ${MAKEFLAGS} &&     make install &&     export PETSC_DIR=/usr/local/petsc
      &&     apt-get -y purge bison flex python &&     apt-get -y autoremove &&     apt-get
      clean &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PETSC_DIR
      Value: /usr/local/petsc
    Name: env
  - CmdLine:
    - pip3 install --no-cache-dir petsc4py==${PETSC4PY_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  From:
    Stage:
      Index: 0
      Named: base
  Name: dev-env
  Platform: ""
  SourceCode: FROM base as dev-env
- As: hode
  BaseName: dev-env
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"D. de Vries <daniel.devries@darcorop.com>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"HPC Optimization Development Environment (HODE)"'
    Name: label
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - pip3 install --no-cache-dir openmdao platypus-opt psutil
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update &&     apt-get -y install swig unzip &&     wget -O pyoptsparse.zip
      https://github.com/mdolab/pyoptsparse/archive/master.zip &&     unzip pyoptsparse.zip
      &&     cd pyoptsparse-master &&     python3 setup.py install &&     apt-get
      -y purge swig unzip &&     apt-get -y autoremove &&     apt-get clean &&     rm
      -rf /tmp/* &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  From:
    Stage:
      Index: 1
      Named: dev-env
  Name: hode
  Platform: ""
  SourceCode: FROM dev-env as hode
