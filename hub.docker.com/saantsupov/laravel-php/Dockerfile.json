{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y     git     libfreetype6-dev     libjpeg62-turbo-dev     zlib1g-dev     libpq-dev     libjpeg-dev     libssl-dev     libmcrypt-dev     libz-dev     libmemcached-dev     build-essential  \u0026\u0026 docker-php-ext-install -j$(nproc) iconv mcrypt  \u0026\u0026 docker-php-ext-configure gd     --enable-gd-native-ttf     --with-jpeg-dir=/usr/lib     --with-freetype-dir=/usr/include/freetype2  \u0026\u0026 docker-php-ext-install gd  \u0026\u0026 docker-php-ext-install exif  \u0026\u0026 docker-php-ext-install mbstring  \u0026\u0026 docker-php-ext-install pdo_pgsql  \u0026\u0026 docker-php-ext-install pdo_mysql  \u0026\u0026 docker-php-ext-install zip  \u0026\u0026 docker-php-ext-install bcmath  \u0026\u0026 a2enmod rewrite  \u0026\u0026 sed -i 's!/var/www/html!/var/www/public!g' /etc/apache2/apache2.conf  \u0026\u0026 sed -i 's!/var/www/html!/var/www/public!g' /etc/apache2/sites-available/000-default.conf  \u0026\u0026 sed -i 's!/var/www/html!/var/www/public!g' /etc/apache2/sites-available/default-ssl.conf  \u0026\u0026 curl -sS https://getcomposer.org/installer   | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo 'date.timezone=UTC';     echo 'display_errors=Off';     echo 'log_errors=On';     echo 'memory_limit = 1G';     echo 'upload_max_filesize = 2048M';     echo 'post_max_size = 2048M';  } \u003e /usr/local/etc/php/conf.d/laravel.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.idekey = PHPSTORM\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.default_enable = 1\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable = 1\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart = 1\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back = 1\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.profiler_enable = 0\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_host = dockerhost\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/internal   \u0026\u0026 curl -s https://raw.githubusercontent.com/rlerdorf/opcache-status/master/opcache.php \u003e /var/www/internal/opcache.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "confs/clear_cache.php",
            "/var/www/internal/clear_cache.php"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}