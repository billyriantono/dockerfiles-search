MetaArgs: null
Stages:
- BaseName: buildpack-deps:eoan
  Commands:
  - Labels:
    - Key: maintainer
      Value: zoltan.erdos@me.com
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TZ
      Value: Europe/London
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install --no-install-recommends -y     software-properties-common     apt-utils     ssh-client     make     gcc     gpg     htop     dos2unix     g++     libvips     python2.7     xz-utils     libx11-dev     dirmngr     curl     xz-utils     apt-transport-https     nano     mc     zsh     tzdata     sudo     locales     &&
      localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8     &&
      addgroup --gid 1024 devgroup     && adduser --uid 1024 --disabled-password --gecos
      "" --force-badname --shell /usr/bin/zsh --ingroup devgroup developer     &&
      adduser developer sudo     && chown developer:devgroup -R /home/developer     &&
      echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers     && touch /usr/bin/startx
      /usr/bin/startWithBash     && chmod +x /usr/bin/startx /usr/bin/startWithBash     &&
      echo "sudo sysctl fs.inotify.max_user_watches=524288 fs.inotify.max_user_instances=524288
      net.core.somaxconn=524288 scache.object_max_active=524288 && sudo sysctl -p"
      >> /usr/bin/startx     && echo "bash /usr/bin/startx">> /usr/bin/startWithBash
      && chmod +x /usr/bin/startWithBash     && apt-get autoremove -y     && apt-get
      clean -y     && rm -rf /var/lib/apt/lists/*     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Env:
    - Key: DEV_VERSION
      Value: "2020-01-08"
    Name: env
  - CmdLine:
    - "apt-get update \t&& apt-get dist-upgrade -y \t&& apt-get autoremove -y \t&&
      apt-get clean -y \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:git-core/ppa && apt-get update && apt-get install --no-install-recommends
      -y     git && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 13.6.0
    Name: env
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64)
      ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo
      "unsupported architecture"; exit 1 ;;   esac   && set -ex   && for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ;
      do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1
      --no-same-owner   && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
      SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.21.1
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir yarn && chown developer:devgroup /yarn
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_CACHE_FOLDER
      Value: /yarn
    Name: env
  - CmdLine:
    - wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb
      -O packages-microsoft-prod.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i packages-microsoft-prod.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y          libc6         libgcc1         libgssapi-krb5-2         libicu-dev         liblttng-ust0         libssl-dev         libstdc++6         apt-transport-https         zlib1g;
    Name: run
    PrependShell: true
  - Env:
    - Key: ASPNETCORE_VERSION
      Value: 2.1.14
    Name: env
  - CmdLine:
    - curl -SL --output aspnetcore.tar.gz https://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/$ASPNETCORE_VERSION/aspnetcore-runtime-$ASPNETCORE_VERSION-linux-x64.tar.gz     &&
      aspnetcore_sha512='85728bd9701a6db5743c495aaf87c859b697300b668afc01d0edd3814ce50929219c5a70745ee8bd9b2c478613cbba323c5e5834c7c5f0af792712f8070df763'     &&
      echo "$aspnetcore_sha512  aspnetcore.tar.gz" | sha512sum -c -     && mkdir -p
      /usr/share/dotnet2     && tar -zxf aspnetcore.tar.gz -C /usr/share/dotnet2     &&
      rm aspnetcore.tar.gz     && ln -s /usr/share/dotnet2/dotnet /usr/bin/dotnet2
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_SDK_VERSION
      Value: 3.1.100
    Name: env
  - CmdLine:
    - curl -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz     &&
      dotnet_sha512='5217ae1441089a71103694be8dd5bb3437680f00e263ad28317665d819a92338a27466e7d7a2b1f6b74367dd314128db345fa8fff6e90d0c966dea7a9a43bd21'     &&
      echo "$dotnet_sha512 dotnet.tar.gz" | sha512sum -c -     && mkdir -p /usr/share/dotnet     &&
      tar -zxf dotnet.tar.gz -C /usr/share/dotnet     && rm dotnet.tar.gz     && ln
      -s /usr/share/dotnet/dotnet /usr/bin/dotnet
    Name: run
    PrependShell: true
  - Env:
    - Key: ASPNETCORE_URLS
      Value: http://+:80
    - Key: DOTNET_RUNNING_IN_CONTAINER
      Value: "true"
    - Key: NUGET_XMLDOC_MODE
      Value: skip
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install --no-install-recommends -y     autocutsel     xfwm4     libgtk-3-0     xvfb     novnc     websockify     dbus-x11     nano     mc     htop     procps     terminator     tigervnc-standalone-server
      tigervnc-xorg-extension   &&  cp /usr/share/novnc/vnc.html /usr/share/novnc/index.html   &&
      sed -i -e '1 aautocutsel -fork' /etc/X11/Xvnc-session   && sed -i -e 's/iconic/nowin/g'
      /etc/X11/Xvnc-session   && sed -i -e 's/workspace_count=4/workspace_count=1/g'
      /usr/share/xfwm4/defaults   && sed -i -e 's/use_compositing=true/use_compositing=false/g'
      /usr/share/xfwm4/defaults   && sed -i -e '1 aterminator &' /etc/X11/Xvnc-session   &&
      apt-get autoremove -y   && apt-get clean -y   && rm -rf /var/lib/apt/lists/*   &&
      echo "(chmod 644 ~/.ssh/*.pub && chmod 600 ~/.ssh/id_rsa && chmod 600 ~/.gitconfig
      || true ) && (vncserver -SecurityTypes none -cleanstale -useold :1 -localhost
      no --I-KNOW-THIS-IS-INSECURE && websockify --web=/usr/share/novnc/ --wrap-mode=ignore
      6080 localhost:5901 || echo ok)" >> /usr/bin/startx
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install --no-install-recommends -y         xfce4         xfce4-goodies      &&
      apt-get autoremove -y     && apt-get clean -y     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL  https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add
      -     && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable
      main" >> /etc/apt/sources.list.d/google-chrome.list     && apt-get update &&
      apt-get install  -y google-chrome-stable      && apt-get autoremove -y   &&
      apt-get clean -y   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://packages.microsoft.com/keys/microsoft.asc | apt-key add -     &&
      echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
      >> /etc/apt/sources.list.d/vscode.list     && apt-get update && apt-get install
      -y code      && apt-get autoremove -y   && apt-get clean -y   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -     &&
      add-apt-repository             "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      bionic stable"     && apt-get update     && apt-get install -y         docker-ce         docker-ce-cli     &&
      curl -L          https://github.com/docker/compose/releases/download/1.25.1/docker-compose-`uname
      -s`-`uname -m`         -o /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/docker-compose     &&
      adduser developer docker     && apt-get autoremove -y     && apt-get clean -y     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: developer
  - Env:
    - Key: HOME
      Value: /home/developer
    Name: env
  - Name: workdir
    Path: /home/developer
  - Env:
    - Key: SHELL
      Value: /usr/bin/zsh
    Name: env
  - CmdLine:
    - sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"     &&
      sed -i -e 's/plugins=(git)/plugins=(git gitfast git-extras npm yarn)/g' .zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - startWithBash
    Name: cmd
    PrependShell: true
  - CmdLine:
    - bash startx
    Name: cmd
    PrependShell: true
  From:
    Image: buildpack-deps:eoan
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:eoan
