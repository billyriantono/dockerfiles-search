{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -q --no-install-recommends -y \tautoconf \tautomake \tautotools-dev \tbc \tbsdmainutils \tbuild-essential \tclang \tcurl \tdirmngr \tgettext \tgit \tgpg \tgpg-agent \tjq \tlibboost-all-dev \twget \tlibcurl4-openssl-dev \tlibev-dev \tlibevent-dev \tlibgmp-dev \tlibjansson-dev \tlibsecp256k1-dev \tlibsodium-dev \tlibsqlite3-dev \tlibssl-dev \tlibtool \tlibzmq3-dev \tminiupnpc \tnet-tools \topenjdk-11-jdk \tpkg-config \tpython \tpython3 \tpython3-mako \tpython3-pip \tpython3-setuptools \tzlib1g-dev \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "BITCOIN_VERSION",
          "Name": "arg",
          "Value": "0.17.1"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_TARBALL",
              "Value": "bitcoin-$BITCOIN_VERSION-x86_64-linux-gnu.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_URL",
              "Value": "https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/$BITCOIN_TARBALL"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_ASC_URL",
              "Value": "https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/SHA256SUMS.asc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_PGP_KEY",
              "Value": "01EA5486DE18A882D4C2684590C8019E36C2E964"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MVN_VERSION",
              "Value": "3.6.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION",
              "Value": "1.12.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 wget -qO $BITCOIN_TARBALL \"$BITCOIN_URL\"     \u0026\u0026 gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$BITCOIN_PGP_KEY\"     \u0026\u0026 wget -qO bitcoin.asc \"$BITCOIN_ASC_URL\"     \u0026\u0026 gpg --verify bitcoin.asc     \u0026\u0026 grep $BITCOIN_TARBALL bitcoin.asc | tee SHA256SUMS.asc     \u0026\u0026 sha256sum -c SHA256SUMS.asc     \u0026\u0026 BD=bitcoin-$BITCOIN_VERSION/bin     \u0026\u0026 tar -xzvf $BITCOIN_TARBALL     \u0026\u0026 cp bitcoin-$BITCOIN_VERSION/bin/bitcoin* /usr/bin/     \u0026\u0026 rm -rf $BITCOIN_TARBALL bitcoin-$BITCOIN_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 wget -qO mvn.tar.gz https://www-us.apache.org/dist/maven/maven-3/${MVN_VERSION}/binaries/apache-maven-${MVN_VERSION}-bin.tar.gz     \u0026\u0026 tar -xzf mvn.tar.gz     \u0026\u0026 rm mvn.tar.gz     \u0026\u0026 mv apache-maven-${MVN_VERSION} /usr/local/maven     \u0026\u0026 ln -s /usr/local/maven/bin/mvn /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz     \u0026\u0026 tar -xf go${GO_VERSION}.linux-amd64.tar.gz     \u0026\u0026 mv go /usr/local     \u0026\u0026 rm go${GO_VERSION}.linux-amd64.tar.gz     \u0026\u0026 ln -s /usr/local/go/bin/go /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/lightning-integration/reports"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/lightning-integration/output"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/lightning-integration"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/root/lightning-integration/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /usr/bin/python3 /usr/bin/python   \u0026\u0026 ln -sf /usr/bin/pip3 /usr/bin/pip   \u0026\u0026 pip install -r /root/lightning-integration/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEST_DEBUG",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/root/lightning-integration/"
          ]
        },
        {
          "CmdLine": [
            "make",
            "update",
            "clients",
            "test"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}