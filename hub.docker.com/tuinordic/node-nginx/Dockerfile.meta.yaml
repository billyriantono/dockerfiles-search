MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Env:
    - Key: NODE_VERSION
      Value: 7.9.0
    Name: env
  - CmdLine:
    - addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     &&
      apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         binutils-gold         curl         g++         gcc         gnupg         libgcc         linux-headers         make         python   &&
      for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ||     gpg
      --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com
      --recv-keys "$key" ;   done     && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"     &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && tar -xf
      "node-v$NODE_VERSION.tar.xz"     && cd "node-v$NODE_VERSION"     && ./configure     &&
      make -j$(getconf _NPROCESSORS_ONLN)     && make install     && apk del .build-deps     &&
      cd ..     && rm -Rf "node-v$NODE_VERSION"     && rm "node-v$NODE_VERSION.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 0.23.2
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual .build-deps-yarn curl gnupg   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ||     gpg
      --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com
      --recv-keys "$key" ;   done   && curl -fSL -o yarn.js "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-legacy-$YARN_VERSION.js"   &&
      curl -fSL -o yarn.js.asc "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-legacy-$YARN_VERSION.js.asc"   &&
      gpg --batch --verify yarn.js.asc yarn.js   && rm yarn.js.asc   && mv yarn.js
      /usr/local/bin/yarn   && chmod +x /usr/local/bin/yarn   && apk del .build-deps-yarn
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.11.13
    Name: env
  - CmdLine:
    - "CONFIG=\"\t\t--prefix=/home/node/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules
      \t\t--conf-path=/home/node/nginx/nginx.conf \t\t--error-log-path=/home/node/nginx/log/error.log
      \t\t--http-log-path=/home/node/nginx/log/access.log \t\t--pid-path=/home/node/nginx/nginx.pid
      \t\t--lock-path=/home/node/nginx/nginx.lock \t\t--http-client-body-temp-path=/home/node/nginx/cache/client_temp
      \t\t--http-proxy-temp-path=/home/node/nginx/cache/proxy_temp \t\t--http-fastcgi-temp-path=/home/node/nginx/cache/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/home/node/nginx/cache/uwsgi_temp \t\t--http-scgi-temp-path=/home/node/nginx/cache/scgi_temp
      \t\t--user=node \t\t--group=node \t\t--with-http_ssl_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-threads \t\t--with-stream \t\t--with-compat
      \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& apk add --no-cache --virtual
      .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev
      \t\tlinux-headers \t\tcurl \t\tgnupg \t&& curl -fSL https://github.com/rdngr/nginx-background/archive/v$NGINX_VERSION-bgpatch.tar.gz
      -o nginx.tar.gz \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz
      \t&& rm nginx.tar.gz   && ls -al /usr/src \t&& cd /usr/src/nginx-background-$NGINX_VERSION-bgpatch
      \  && ls -al \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN)
      \t&& mv objs/nginx objs/nginx-debug \t&& ./configure $CONFIG \t&& make -j$(getconf
      _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /home/node/nginx/html/ \t&&
      mkdir /home/node/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install
      -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html
      /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& strip /usr/sbin/nginx* \t&& rm -rf /usr/src/nginx-background-$NGINX_VERSION-bgpatch
      \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'
      \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\"
      \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps
      \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& ln -sf /dev/stdout
      /home/node/nginx/log/access.log \t&& ln -sf /dev/stderr /home/node/nginx/log/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R node:node /home/node/nginx
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: NODE_PORT
      Value: "8081"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /home/node/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /home/node/
  - Expression: WORKDIR /home/node/app
    Name: onbuild
  - Expression: COPY package.json yarn.lock ./
    Name: onbuild
  - Expression: RUN yarn install --production   && yarn cache clean
    Name: onbuild
  - Expression: COPY . .
    Name: onbuild
  - Expression: USER node
    Name: onbuild
  - CmdLine:
    - ../start.sh
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
