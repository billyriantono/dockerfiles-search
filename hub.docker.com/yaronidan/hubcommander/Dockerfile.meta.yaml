MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"netflixoss@netflix.com"'
    Name: label
  - CmdLine:
    - apt-get update &&   apt-get upgrade -y &&   apt-get install python3 python3-venv
      nano curl -y
    Name: run
    PrependShell: true
  - Key: RTM_VERSION
    Name: arg
    Value: '"0.4.0"'
  - Key: RTM_PATH
    Name: arg
    Value: '"python-rtmbot-${RTM_VERSION}"'
  - CmdLine:
    - curl -L https://github.com/slackhq/python-rtmbot/archive/${RTM_VERSION}.tar.gz
      > /${RTM_PATH}.tar.gz && tar xvzf python-rtmbot-0.4.0.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /
    - /python-rtmbot-${RTM_VERSION}/hubcommander
  - CmdLine:
    - mv /python-rtmbot-${RTM_VERSION} /rtmbot &&   pyvenv /venv &&   /bin/bash -c
      "source /venv/bin/activate && pip install --upgrade pip" &&   /bin/bash -c "source
      /venv/bin/activate && pip install --upgrade setuptools" &&   /bin/bash -c "source
      /venv/bin/activate && pip install wheel" &&   /bin/bash -c "source /venv/bin/activate
      && pip install /rtmbot/hubcommander" &&   mv /rtmbot/hubcommander/launch_in_docker.sh
      / && chmod +x /launch_in_docker.sh &&   rm /python-rtmbot-${RTM_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: SLACK_TOKEN
      Value: '"REPLACEMEINCMDLINE"'
    - Key: GITHUB_TOKEN
      Value: '"REPLACEMEINCMDLINE"'
    - Key: TRAVIS_PRO_USER
      Value: '"REPLACEMEINCMDLINE"'
    - Key: TRAVIS_PRO_ID
      Value: '"REPLACEMEINCMDLINE"'
    - Key: TRAVIS_PRO_TOKEN
      Value: '"REPLACEMEINCMDLINE"'
    - Key: TRAVIS_PUBLIC_USER
      Value: '"REPLACEMEINCMDLINE"'
    - Key: TRAVIS_PUBLIC_ID
      Value: '"REPLACEMEINCMDLINE"'
    - Key: TRAVIS_PUBLIC_TOKEN
      Value: '"REPLACEMEINCMDLINE"'
    - Key: DUO_HOST
      Value: '"REPLACEMEINCMDLINE"'
    - Key: DUO_IKEY
      Value: '"REPLACEMEINCMDLINE"'
    - Key: DUO_SKEY
      Value: '"REPLACEMEINCMDLINE"'
    Name: env
  - CmdLine:
    - /bin/bash
    - -c
    - ./launch_in_docker.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
