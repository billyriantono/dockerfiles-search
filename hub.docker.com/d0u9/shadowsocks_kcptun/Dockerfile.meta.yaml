MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - CmdLine:
    - "set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates
      \t\tgpg \t\tgpg-agent \t\tdirmngr \t\tsudo \t\twget; \trm -fr /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \texport GOSU_VERSION=1.11; \tGPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4;
      \tsavedAptMark=\"$(apt-mark showmanual)\"; \tif ! command -v gpg; then \t\tapt-get
      install -y --no-install-recommends gnupg2 dirmngr; \tfi; \trm -rf /var/lib/apt/lists/*;
      \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget
      -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t(  gpg --keyserver ipv4.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEYS\" \t|| gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEYS\"
      \t|| gpg --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEYS\" ); \tgpg --batch
      --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf &&
      gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t\tapt-mark
      auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;
      \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \t\tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \texport KCPTUN_VERSION=20190515; \twget -O /tmp/kcptun.tar.gz \"https://github.com/xtaci/kcptun/releases/download/v$KCPTUN_VERSION/kcptun-linux-$(dpkg
      --print-architecture)-$KCPTUN_VERSION.tar.gz\"; \ttar -xf /tmp/kcptun.tar.gz
      -C /tmp; \trm -fr /tmp/kcptun.tar.gz; \tmv /tmp/client_linux_$(dpkg --print-architecture)
      /usr/local/bin/kcp-client; \tmv /tmp/server_linux_$(dpkg --print-architecture)
      /usr/local/bin/kcp-server"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \texport SS_VERSION=3.2.5; \tapt-get update; \tapt-get install -y
      --no-install-recommends gettext build-essential autoconf libtool libpcre3-dev
      asciidoc xmlto automake libsodium-dev git; \tapt-get install -y --no-install-recommends
      libc-ares-dev libmbedtls-dev libev-dev; \t\texport LIBSODIUM_VER=1.0.16; \twget
      https://download.libsodium.org/libsodium/releases/libsodium-$LIBSODIUM_VER.tar.gz;
      \ttar xvf libsodium-$LIBSODIUM_VER.tar.gz; \tcd libsodium-$LIBSODIUM_VER; \t./configure
      --prefix=/usr && make; \tmake install; \tcd ..; \trm -fr libsodium-$LIBSODIUM_VER.tar.gz
      libsodium-$LIBSODIUM_VER; \t\texport MBEDTLS_VER=2.6.0; \twget https://tls.mbed.org/download/mbedtls-$MBEDTLS_VER-gpl.tgz;
      \ttar xvf mbedtls-$MBEDTLS_VER-gpl.tgz; \tcd mbedtls-$MBEDTLS_VER; \tmake SHARED=1
      CFLAGS=-fPIC; \tsudo make DESTDIR=/usr install; \tcd ..; \trm -fr mbedtls-$MBEDTLS_VER
      mbedtls-$MBEDTLS_VER-gpl.tgz; \t\tldconfig; \tgit clone https://github.com/shadowsocks/shadowsocks-libev.git;
      \tcd shadowsocks-libev; \tgit checkout v$SS_VERSION; \tgit submodule update
      --init --recursive; \t./autogen.sh && ./configure && make; \tmake install; \tcd
      ..; \trm -fr shadowsocks-libev; \tapt-get purge -y --auto-remove build-essential
      autoconf libtool asciidoc git gettext xmlto libpcre3-dev automake libsodium-dev;
      \trm -fr /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \texport JQ_VERSION=1.5; \twget -O /usr/local/bin/jq \"https://github.com/stedolan/jq/releases/download/jq-$JQ_VERSION/jq-linux$(dpkg
      --print-architecture | tr -d 'amd')\"; \tchmod a+x /usr/local/bin/jq; \tapt-get
      purge -y --auto-remove ca-certificates wget dirmngr gpg"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 1080/tcp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
