MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - CmdLine:
    - "set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tdeluged
      \t\tdeluge-webui \t\tca-certificates \t\tgpg \t\tgpg-agent \t\tdirmngr \t\twget;
      \trm -fr /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \texport GOSU_VERSION=1.11; \tGPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4;
      \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install
      -y --no-install-recommends ca-certificates wget; \tif ! command -v gpg; then
      \t\tapt-get install -y --no-install-recommends gnupg2 dirmngr; \tfi; \trm -rf
      /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{
      print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t(  gpg --keyserver ipv4.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEYS\" \t|| gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEYS\"
      \t|| gpg --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEYS\" ); \tgpg --batch
      --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf &&
      gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t\tapt-mark
      auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;
      \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \t\tchmod +x /usr/local/bin/gosu; \tgosu --version; \tgosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - "FILE=$(find /usr/lib -path \"*/deluge/ui/web/json_api.py\") \t&& sed -i -r
      's|^(\\s*)(response = json\\.dumps\\(response\\))|\\1try:\\n\\1    \\2\\n\\1except
      Exception:\\n\\1    response = json.dumps(response,ensure_ascii=False)|g' $FILE"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 8112/tcp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin
  - CmdLine:
    - docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
