MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: ES_VERSION
      Value: 5.2.1
    Name: env
  - Env:
    - Key: KIBANA_VERSION
      Value: 5.2.1
    Name: env
  - CmdLine:
    - adduser
    - -D
    - es
    Name: run
    PrependShell: false
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk/jre
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8-jre \t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\"
      ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apk update \t&& apk add --no-cache nodejs curl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& curl -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ES_VERSION.tar.gz
      > /elasticsearch-$ES_VERSION.tar.gz \t&& tar -xzf /elasticsearch-$ES_VERSION.tar.gz
      \t&& mv /elasticsearch-$ES_VERSION /elasticsearch \t&& curl -sSL https://artifacts.elastic.co/downloads/kibana/kibana-$KIBANA_VERSION-linux-x86_64.tar.gz
      > /kibana-$KIBANA_VERSION.tar.gz \t&& tar -xzf /kibana-$KIBANA_VERSION.tar.gz
      \t&& mv /kibana-$KIBANA_VERSION-linux-x86_64 /kibana"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& sed -i 's/^#network\\.host:.*$/network.host: 0.0.0.0/' /elasticsearch/config/elasticsearch.yml
      \t&& grep -x \"network.host: 0.0.0.0\" /elasticsearch/config/elasticsearch.yml
      \t&& sed -i 's/^#server\\.host:.*$/server.host: 0.0.0.0/' /kibana/config/kibana.yml
      \t&& grep -x \"server.host: 0.0.0.0\" /kibana/config/kibana.yml \t&& sed -i
      's/^#elasticsearch\\.url:.*$/elasticsearch.url: \"http:\\/\\/0.0.0.0:9200\"/'
      /kibana/config/kibana.yml \t&& grep -x \"elasticsearch.url: \\\"http://0.0.0.0:9200\\\"\"
      /kibana/config/kibana.yml \t&& sed -i 's/^NODE=\".*$/NODE=\"\\/usr\\/bin\\/node\"/'
      /kibana/bin/kibana* \t&& grep -x \"NODE=\\\"/usr/bin/node\\\"\" /kibana/bin/kibana*
      \t&& rm /kibana-$KIBANA_VERSION.tar.gz /elasticsearch-$ES_VERSION.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'sh /elasticsearch/bin/elasticsearch &'; \t\techo
      'sleep 30'; \t\techo 'sh /kibana/bin/kibana'; \t} > /startup.sh \t&& chmod +x
      /startup.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown
    - -R
    - es:es
    - /elasticsearch
    Name: run
    PrependShell: false
  - CmdLine:
    - chown
    - -R
    - es:es
    - /kibana
    Name: run
    PrependShell: false
  - CmdLine:
    - chown
    - -R
    - es:es
    - /startup.sh
    Name: run
    PrependShell: false
  - Name: user
    User: es
  - CmdLine:
    - sh /startup.sh
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
