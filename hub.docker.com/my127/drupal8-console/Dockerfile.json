{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "redis",
      "BaseName": "redis:5.0",
      "SourceCode": "FROM redis:5.0 AS redis",
      "Platform": "",
      "As": "redis",
      "From": {
        "Image": "redis:5.0"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "my127/drupal8:7.2-fpm-stretch",
      "SourceCode": "FROM my127/drupal8:7.2-fpm-stretch",
      "Platform": "",
      "From": {
        "Image": "my127/drupal8:7.2-fpm-stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'APT::Install-Recommends 0;' \u003e\u003e /etc/apt/apt.conf.d/01norecommends  \u0026\u0026 echo 'APT::Install-Suggests 0;' \u003e\u003e /etc/apt/apt.conf.d/01norecommends  \u0026\u0026 apt-get update -qq  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -qq -y --no-install-recommends install    autoconf    automake    build-essential    ca-certificates    curl    git    iproute2    mysql-client    nano    nasm    patch    rsync    wget    zlib1g-dev  \u0026\u0026 apt-get auto-remove -qq -y  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid 1000 build  \u0026\u0026 useradd --uid 1000 --gid build --shell /bin/bash --create-home build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/home/build/.nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "build"
        },
        {
          "CmdLine": [
            "cd /home/build  \u0026\u0026 mkdir .nvm  \u0026\u0026 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash  \u0026\u0026 . /home/build/.nvm/nvm.sh  \u0026\u0026 nvm install lts/dubnium  \u0026\u0026 npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "redis",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/redis-cli",
            "/usr/local/bin/redis-cli"
          ]
        },
        {
          "CmdLine": [
            "curl --silent --fail --location --retry 3 --output /tmp/installer.php --url https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer  \u0026\u0026 php -r \"     \\$signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5';     \\$hash = hash('sha384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=1.8.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "build"
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:/app/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}