{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         apt-transport-https         curl         git         python-software-properties         software-properties-common         libldap2-dev         libsasl2-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 add-apt-repository \"deb http://archive.ubuntu.com/ubuntu/ xenial multiverse\"     \u0026\u0026 add-apt-repository \"deb http://archive.ubuntu.com/ubuntu/ xenial-security universe\"     \u0026\u0026 add-apt-repository \"deb http://archive.ubuntu.com/ubuntu/ xenial-updates multiverse\"     \u0026\u0026 add-apt-repository \"ppa:jonathonf/ffmpeg-3\"     \u0026\u0026 add-apt-repository \"ppa:jonathonf/python-3.6\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         python3.6         python3.6-dev         libpython3-dev         python3-pip         python3.6-venv         python3-setuptools         ffmpeg         libavcodec-ffmpeg56         imagemagick         libevent-dev         libjansson4         libxml2-utils         md5deep         rsync         tree         uuid         supervisor         flex         sqlite3         uwsgi         uwsgi-plugin-python         libtiff5-dev         libjpeg8-dev         zlib1g-dev         libmysqlcppconn-dev         libfreetype6-dev         liblcms2-dev         libreadline6         libreadline6-dev         libwebp-dev         tcl8.6-dev         tk8.6-dev         python-tk         libmysqlclient-dev         mysql-client-5.7         libmagic-dev         tesseract-ocr         libssl-dev         autoconf         automake         libtool         gfortran         autoconf-archive         g++     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -L https://bitbucket.org/mhulden/foma/downloads/foma-0.9.18.tar.gz --output foma-0.9.18.tar.gz     \u0026\u0026 tar -xvzf foma-0.9.18.tar.gz     \u0026\u0026 cd foma-0.9.18     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -r foma-0.9.18*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -L http://tedlab.mit.edu/~dr/DRUtils/drutils.tgz --output drutils.tgz     \u0026\u0026 tar -xvzf drutils.tgz     \u0026\u0026 cd DRUtils     \u0026\u0026 sed -i '/CC = gcc -Wall -O4 -march=i486/c\\CC = gcc -Wall -O4' Makefile     \u0026\u0026 make     \u0026\u0026 cd ..     \u0026\u0026 rm drutils.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -L http://tedlab.mit.edu/~dr/Tgrep2/tgrep2.tgz --output tgrep2.tgz     \u0026\u0026 tar -xvzf tgrep2.tgz     \u0026\u0026 cd TGrep2     \u0026\u0026 sed -i '/UTIL_DIR= ${HOME}\\/DRUtils/c\\UTIL_DIR= /DRUtils' Makefile     \u0026\u0026 make     \u0026\u0026 ln -s /TGrep2/tgrep2 /usr/local/sbin/tgrep2     \u0026\u0026 cd ..     \u0026\u0026 rm tgrep2.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 git clone https://github.com/mitlm/mitlm.git     \u0026\u0026 cd mitlm     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 rm /usr/local/bin/estimate-ngram     \u0026\u0026 ln -s /mitlm/estimate-ngram /usr/local/bin/estimate-ngram"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python3.6 -m venv /venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/venv/bin/pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/venv/bin/pip install wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/old"
          ]
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/src/old"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/venv/bin/pip install -r /usr/src/old/requirements/test.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /venv/lib/python3.6/site-packages \u0026\u0026 /venv/bin/python /usr/src/old/setup.py develop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/old/"
        },
        {
          "CmdLine": [
            "/venv/bin/pserve",
            "--reload",
            "config.ini",
            "http_port=8000",
            "http_host=0.0.0.0"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}