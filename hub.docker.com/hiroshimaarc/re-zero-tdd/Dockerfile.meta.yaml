MetaArgs: null
Stages:
- BaseName: amazonlinux:1
  Commands:
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - yum update -y &&     yum install -y git                    curl                    build-essential                    libssl-dev                    tar                     which                    zip                    unzip                    gcc                    gcc-c++                     make                     openssl-devel                     bzip2-devel                     zlib-devel                     readline-devel                     sqlite-devel                     python-devel                     python3-dev                     bzip2                     automake                     autoconf                     ncurses-devel                     procps
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py &&     python get-pip.py
      &&     pip install awscli
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_VER
      Value: 2.5.5
    Name: env
  - CmdLine:
    - git clone https://github.com/sstephenson/rbenv $HOME/.rbenv
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/ruby-build.git $HOME/.rbenv/plugins/ruby-build
    Name: run
    PrependShell: true
  - CmdLine:
    - $HOME/.rbenv/plugins/ruby-build/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="/$HOME/.rbenv/bin:$PATH"' >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(rbenv init -)"' >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - . $HOME/.bash_profile &&             rbenv install $RUBY_VER  &&             rbenv
      global $RUBY_VER
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.rbenv/shims:$PATH
    Name: env
  - CmdLine:
    - gem install bundler                 rake                 minitest-reporters                 simplecov
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: $HOME/.nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.10.0
    Name: env
  - CmdLine:
    - git clone https://github.com/creationix/nvm.git $NVM_DIR &&     cd $NVM_DIR
      &&     git checkout `git describe --abbrev=0 --tags`
    Name: run
    PrependShell: true
  - CmdLine:
    - . $NVM_DIR/nvm.sh &&     nvm install v$NODE_VERSION &&     nvm alias default
      v$NODE_VERSION &&     nvm use default
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ". ${NVM_DIR}/nvm.sh" > $HOME/.bashrc &&     . $HOME/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
    Name: env
  - Env:
    - Key: PYTHON_VER
      Value: 3.6.0
    Name: env
  - CmdLine:
    - curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="/$HOME/.pyenv/bin:$PATH"' >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(pyenv init -)"' >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(pyenv virtualenv-init -)"' >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - .  $HOME/.bash_profile &&             pyenv install $PYTHON_VER  &&             pyenv
      global $PYTHON_VER
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.pyenv/shims:$PATH
    Name: env
  - CmdLine:
    - pip install --upgrade pip &&     pip install coverage
    Name: run
    PrependShell: true
  - Env:
    - Key: ERLANG_VER
      Value: 21.1.1
    Name: env
  - Env:
    - Key: ELIXIR_VER
      Value: 1.7.4
    Name: env
  - CmdLine:
    - git clone https://github.com/asdf-vm/asdf.git $HOME/.asdf --branch v0.6.0
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="/$HOME/.asdf/bin:$PATH"' >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\n. $HOME/.asdf/asdf.sh' >> ~/.bashrc_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\n. $HOME/.asdf/completions/asdf.bash' >> $HOME/.bashrc_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - .  $HOME/.bash_profile &&             asdf plugin-add erlang  &&             asdf
      plugin-add elixir  &&             asdf install erlang $ERLANG_VER  &&             asdf
      global erlang $ERLANG_VER  &&             asdf install elixir $ELIXIR_VER  &&             asdf
      global elixir $ELIXIR_VER
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.asdf/shims:$PATH
    Name: env
  - CmdLine:
    - yum -y install php72
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VER
      Value: 8.0.212-amzn
    Name: env
  - Env:
    - Key: MAVEN_VER
      Value: 3.5.4
    Name: env
  - Env:
    - Key: GRADLE_VER
      Value: 5.3.1
    Name: env
  - Env:
    - Key: SDKMAN_DIR
      Value: $HOME/.sdkman
    Name: env
  - CmdLine:
    - curl -s api.sdkman.io | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/sdkman_auto_answer=false/sdkman_auto_answer=true/' $SDKMAN_DIR/etc/config
    Name: run
    PrependShell: true
  - CmdLine:
    - . $SDKMAN_DIR/bin/sdkman-init.sh &&     sdk use maven $MAVEN_VER &&     sdk
      use java $JAVA_VER &&     sdk use gradle $GRADLE_VER
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.sdkman/candidates/java/current/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /root/.sdkman/candidates/maven/current/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /root/.sdkman/candidates/gradle/current/bin:$PATH
    Name: env
  - Env:
    - Key: JAVA_TOOL_OPTIONS
      Value: -Dfile.encoding=UTF8
    Name: env
  From:
    Image: amazonlinux:1
  Name: ""
  Platform: ""
  SourceCode: FROM amazonlinux:1
