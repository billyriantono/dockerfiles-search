{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:fpm",
      "SourceCode": "FROM php:fpm",
      "Platform": "",
      "From": {
        "Image": "php:fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"php-fpm + nginx + composer\""
            },
            {
              "Key": "Vendor",
              "Value": "\"ivanets\""
            },
            {
              "Key": "Version",
              "Value": "\"1.0\""
            },
            {
              "Key": "maintainer",
              "Value": "\"evgeniyivanets@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install libicu52 libicu-dev git vim zlib1g-dev --no-install-recommends     \u0026\u0026 apt-get -yqq install ssh     \u0026\u0026 docker-php-ext-install -j$(nproc) intl     \u0026\u0026 docker-php-ext-install -j$(nproc) opcache     \u0026\u0026 pecl install apcu-5.1.8 \u0026\u0026 docker-php-ext-enable apcu     \u0026\u0026 docker-php-ext-install -j$(nproc) zip     \u0026\u0026 docker-php-ext-install -j$(nproc) mysqli     \u0026\u0026 docker-php-ext-install -j$(nproc) pdo_mysql     \u0026\u0026 apt-get purge -y icu-devtools libicu-dev zlib1g-dev     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y nginx     \u0026\u0026 echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.composer/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "BITBUCKET_KEY",
          "Name": "arg",
          "Value": "./keys/remote_access"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${BITBUCKET_KEY}",
            "/root/.ssh/id_rsa"
          ]
        },
        {
          "CmdLine": [
            "touch /root/.ssh/known_hosts \u0026\u0026 ssh-keyscan \"bitbucket.org\" \u003e\u003e /root/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '{\"github-oauth\": {\"github.com\": \"d8a6f5d51e25ac5fd21775f5c261ca1295c0d788\"}}' \u003e /root/.composer/auth.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/bin --filename=composer     \u0026\u0026 rm composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 {     echo '[global]';     echo 'error_log = /proc/self/fd/2';     echo 'daemonize = yes';     echo;     echo '[www]';     echo 'listen = [::]:9000';     echo 'access.log = /proc/self/fd/2';     } | tee /usr/local/etc/php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p noserver/web \u0026\u0026 echo \"\u003ch1\u003eNoServer\u003c/h1\u003e\" \u003e noserver/web/index.html     \u0026\u0026 mkdir -p default/web \u0026\u0026 echo \"\u003c?php phpinfo();?\u003e\" \u003e default/web/index.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx/default.nginx.conf",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "CmdLine": [
            "php-fpm \u0026\u0026 nginx"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}