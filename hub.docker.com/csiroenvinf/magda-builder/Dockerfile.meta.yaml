MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common curl sudo apt-transport-https
      ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | sudo bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs openjdk-8-jdk docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sbt=0.13.16
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g lerna
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" && echo "deb http://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
      - && apt-get update && apt-get install -y google-cloud-sdk kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get |
      bash
    Name: run
    PrependShell: true
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
