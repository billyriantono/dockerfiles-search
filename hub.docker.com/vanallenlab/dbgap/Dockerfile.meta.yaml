MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: base_image
      Value: '"ubuntu:16.04"'
    Name: label
  - Labels:
    - Key: version
      Value: '"4"'
    Name: label
  - Labels:
    - Key: software
      Value: '"Biocontainers base Image"'
    Name: label
  - Labels:
    - Key: software.version
      Value: '"1.0.0"'
    Name: label
  - Labels:
    - Key: about.summary
      Value: '"Base image for BioDocker"'
    Name: label
  - Labels:
    - Key: about.home
      Value: '"http://biocontainers.pro"'
    Name: label
  - Labels:
    - Key: about.documentation
      Value: '"https://github.com/BioContainers/specs/wiki"'
    Name: label
  - Labels:
    - Key: about.license_file
      Value: '"https://github.com/BioContainers/containers/blob/master/LICENSE"'
    Name: label
  - Labels:
    - Key: about.license
      Value: '"SPDX:Apache-2.0"'
    Name: label
  - Labels:
    - Key: about.tags
      Value: '"Genomics,Proteomics,Transcriptomics,General,Metabolomics"'
    Name: label
  - Maintainer: Felipe da Veiga Leprevost <felipe@leprevost.com.br>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - mv /etc/apt/sources.list /etc/apt/sources.list.bkp &&     bash -c 'echo -e "deb
      mirror://mirrors.ubuntu.com/mirrors.txt xenial main restricted universe multiverse\ndeb
      mirror://mirrors.ubuntu.com/mirrors.txt xenial-updates main restricted universe
      multiverse\ndeb mirror://mirrors.ubuntu.com/mirrors.txt xenial-backports main
      restricted universe multiverse\ndeb mirror://mirrors.ubuntu.com/mirrors.txt
      xenial-security main restricted universe multiverse\n\n" > /etc/apt/sources.list'
      &&     cat /etc/apt/sources.list.bkp >> /etc/apt/sources.list &&     cat /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get clean all &&     apt-get update &&     apt-get upgrade -y &&     apt-get
      install -y          autotools-dev           automake                cmake                   curl
      \                   grep                    sed                     dpkg                    fuse
      \                   git                     wget                    zip                     openjdk-8-jre
      \          build-essential         pkg-config              python          \tpython-dev
      \             python-pip              bzip2                   ca-certificates
      \        libglib2.0-0            libxext6                libsm6                  libxrender1
      \            git                     mercurial               subversion              zlib1g-dev
      &&           apt-get clean &&         apt-get purge &&         rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/miniconda/Miniconda2-4.0.5-Linux-x86_64.sh
      -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm
      ~/miniconda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o
      "/v.*\"" | sed 's:^..\(.*\).$:\1:'` &&     curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb"
      > tini.deb &&     dpkg -i tini.deb &&     rm tini.deb &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data /config
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 -R /opt/conda/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/conda/bin
    Name: env
  - CmdLine:
    - conda config --add channels r
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels bioconda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda upgrade conda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install bwa=0.7.15
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /
  - CmdLine:
    - apt-get update -y && apt-get install -y wget &&     apt-get clean && rm -rf
      /var/cache/apt/archives/* /var/lib/apt/lists/* &&     wget -P /usr/bin "https://raw.githubusercontent.com/inutano/pfastq-dump/master/bin/pfastq-dump"
      &&     chmod +x /usr/bin/pfastq-dump &&     wget -P / "http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.9.2/sratoolkit.2.9.2-ubuntu64.tar.gz"
      &&     tar zxf /sratoolkit.2.9.2-ubuntu64.tar.gz &&     cp -r /sratoolkit.2.9.2-ubuntu64/bin/*
      /usr/bin &&     rm -fr /sratoolkit.2.9.2-ubuntu64*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apt-get update && apt-get install -y         wget         unzip         build-essential         apt-utils
      --yes --force-yes         openssh-client         curl         zlib1g-dev         libncurses5-dev         git
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - http://download.asperasoft.com/download/sw/ascp-client/3.5.4/ascp-install-3.5.4.102989-linux-64.sh
    - /opt/
  - CmdLine:
    - test $(sha1sum /opt/ascp-install-3.5.4.102989-linux-64.sh |cut -f1 -d\ ) = a99a63a85fee418d16000a1a51cc70b489755957
      &&     sh /opt/ascp-install-3.5.4.102989-linux-64.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://download.asperasoft.com/download/sw/connect/3.8.1/ibm-aspera-connect-3.8.1.161274-linux-g2.12-64.tar.gz
    - /opt/
  - Name: workdir
    Path: /opt/
  - CmdLine:
    - mkdir -p /home/data/.aspera/connect
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 777 /home/data/.aspera/connect/
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvf ibm-aspera-connect-3.8.1.161274-linux-g2.12-64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd data
    Name: run
    PrependShell: true
  - Name: user
    User: data
  - CmdLine:
    - ./ibm-aspera-connect-3.8.1.161274-linux-g2.12-64.sh
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /
  - Env:
    - Key: samtools_version
      Value: "1.9"
    Name: env
  - Env:
    - Key: bcftools_version
      Value: "1.9"
    Name: env
  - Env:
    - Key: htslib_version
      Value: "1.9"
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get install -y     bzip2     build-essential     zlib1g-dev     libncurses5-dev     libncursesw5-dev     libnss-sss     libbz2-dev     liblzma-dev
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/samtools/samtools/releases/download/${samtools_version}/samtools-${samtools_version}.tar.bz2
    - /usr/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/samtools/bcftools/releases/download/${bcftools_version}/bcftools-${bcftools_version}.tar.bz2
    - /usr/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/samtools/htslib/releases/download/${htslib_version}/htslib-${htslib_version}.tar.bz2
    - /usr/bin/
  - CmdLine:
    - tar -xjf /usr/bin/samtools-${samtools_version}.tar.bz2 -C /usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xjf /usr/bin/bcftools-${bcftools_version}.tar.bz2 -C /usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xjf /usr/bin/htslib-${htslib_version}.tar.bz2 -C /usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/htslib-${htslib_version}/ && ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/htslib-${htslib_version}/ && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/htslib-${htslib_version}/ && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/samtools-${samtools_version}/ && ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/samtools-${samtools_version}/ && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/samtools-${samtools_version}/ && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/bcftools-${bcftools_version}/ && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin/bcftools-${bcftools_version}/ && make install
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
