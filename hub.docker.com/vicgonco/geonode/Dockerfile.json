{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Víctor González \u003cvictor.gonzalez@geomati.co\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_VERSION",
              "Value": "8.5.23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEONODE_REPO_BRANCH",
              "Value": "2.6.x"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEOSERVER_DATA_DIR",
              "Value": "/opt/gs_data_dir"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y        \u0026\u0026 apt-get install -y --no-install-recommends     apache2                    build-essential            gdal-bin                   git-core                   libapache2-mod-wsgi        libgeos-dev                libjpeg-dev                libpng12-dev               libpq-dev                  libproj-dev                libxml2-dev                libxslt1-dev               openjdk-8-jre-headless     patch                      python                     python-dev                 python-gdal                python-pycurl              python-imaging             python-pastescript         python-pip                 python-psycopg2            python-urlgrabber          wget                     \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 pip install --upgrade pip   \u0026\u0026 wget http://www-eu.apache.org/dist/tomcat/tomcat-8/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz   \u0026\u0026 tar xzf apache-tomcat-${TOMCAT_VERSION}.tar.gz   \u0026\u0026 mv apache-tomcat-${TOMCAT_VERSION} /var/lib/tomcat8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "geonode.conf",
            "/etc/apache2/sites-available/geonode.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "geoserver",
            "${GEOSERVER_DATA_DIR}"
          ]
        },
        {
          "CmdLine": [
            "git clone https://github.com/GeoNode/geonode.git --branch ${GEONODE_REPO_BRANCH} /var/geonode"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/geonode"
        },
        {
          "CmdLine": [
            "pip install -e .   \u0026\u0026 paver setup   \u0026\u0026 cp downloaded/geoserver-2.9.x-oauth2.war /var/lib/tomcat8/webapps/geoserver.war   \u0026\u0026 python manage.py collectstatic --noinput   \u0026\u0026 mkdir -p geonode/uploaded/thumbs   \u0026\u0026 mkdir -p geonode/uploaded/layers   \u0026\u0026 chmod -Rf 777 geonode/uploaded/thumbs   \u0026\u0026 chmod -Rf 777 geonode/uploaded/layers   \u0026\u0026 chown -R www-data: .   \u0026\u0026 python manage.py migrate   \u0026\u0026 a2enmod proxy_http   \u0026\u0026 a2dissite 000-default   \u0026\u0026 a2ensite geonode   \u0026\u0026 service apache2 restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/var/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/var/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}