{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOWNLOAD_URL",
              "Value": "https://github.com/YetiForceCompany/YetiForceCRM/releases/download/5.2.0/YetiForceCRM-5.2.0-complete.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOWNLOAD_FILE",
              "Value": "YetiForceCRM-5.2.0-complete.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXTRACT_FOLDER",
              "Value": "YetiForceCRM"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WWW_FOLDER",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WWW_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WWW_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget libfreetype6-dev libxml2-dev libjpeg62-turbo-dev libpng-dev libmcrypt-dev libcurl4-gnutls-dev     libssl-dev libc-client2007e-dev libkrb5-dev unzip cron re2c python tree memcached exif libldap2-dev imagemagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure imap --with-imap-ssl --with-kerberos \u0026\u0026     docker-php-ext-configure intl \u0026\u0026     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \u0026\u0026     docker-php-ext-install ldap exif soap curl gd zip mbstring imap mysqli pdo pdo_mysql gd iconv opcache intl bcmath \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget ${DOWNLOAD_URL}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip $DOWNLOAD_FILE -d $EXTRACT_FOLDER \u0026\u0026     rm $DOWNLOAD_FILE \u0026\u0026     rm -rf ${WWW_FOLDER}/* \u0026\u0026     cp -R ${EXTRACT_FOLDER}/* ${WWW_FOLDER}/ \u0026\u0026     chown -R ${WWW_USER}:${WWW_GROUP} ${WWW_FOLDER}/* \u0026\u0026     chown -R ${WWW_USER}:${WWW_GROUP} ${WWW_FOLDER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod allowmethods \u0026\u0026     echo \"\u003cLocation \\\"/var/www/html\\\"\u003e\" \u003e\u003e /etc/apache2/apache2.conf  \u0026\u0026     echo \"  AllowMethods GET POST PUT OPTIONS PATCH PROPFIND REPORT LOCK DELETE COPY MOVE\" \u003e\u003e /etc/apache2/apache2.conf  \u0026\u0026     echo \"  Require all granted\" \u003e\u003e /etc/apache2/apache2.conf  \u0026\u0026     echo \"\u003c/Location\u003e\" \u003e\u003e /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init.sh",
            "/usr/local/bin/init.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod u+x /usr/local/bin/init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "crons.conf",
            "/root/crons.conf"
          ]
        },
        {
          "CmdLine": [
            "crontab /root/crons.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}