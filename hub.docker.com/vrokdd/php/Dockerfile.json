{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4-fpm",
      "SourceCode": "FROM php:7.4-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.4-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "company",
              "Value": "\"Vrok\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.0.1\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends       cron       gnupg       libfreetype6-dev       libicu-dev       libjpeg-dev       libpng-dev       libssl-dev       libzip-dev       locales       lsb-release       python3       supervisor       wget     \u0026\u0026 rm -rf /var/lib/apt/lists*     \u0026\u0026 curl --silent --show-error --retry 3 https://bootstrap.pypa.io/get-pip.py | python     \u0026\u0026 pip install setuptools     \u0026\u0026 pip install supervisor-stdout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu mongodb redis \u0026\u0026     pecl clear-cache \u0026\u0026     docker-php-ext-enable apcu mongodb redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-jpeg --with-freetype"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd intl opcache pdo_mysql zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_13.x | bash \u0026\u0026     apt-get install -yq --no-install-recommends       nodejs     \u0026\u0026 npm install -g npm     \u0026\u0026 npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"de_DE.UTF8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026 locale-gen \u0026\u0026     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/log/supervisor \u0026\u0026 chown -R www-data:www-data /var/www/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./php.ini",
            "/usr/local/etc/php/conf.d/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./install-composer.sh",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "/tmp/install-composer.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}