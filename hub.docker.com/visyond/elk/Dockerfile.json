{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "visyond/jelastic",
      "SourceCode": "FROM visyond/jelastic",
      "Platform": "",
      "From": {
        "Image": "visyond/jelastic"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update  -y \u0026\u0026 apt-get install -y wget apt-transport-https gnupg2 \u0026\u0026     wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - \u0026\u0026    echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" \u003e /etc/apt/sources.list.d/elastic-7.x.list \u0026\u0026     apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x \u003e /tmp/nodesource_setup.sh  \u0026\u0026 bash /tmp/nodesource_setup.sh  \u0026\u0026 rm /tmp/nodesource_setup.sh  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y default-jre procps python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y elasticsearch kibana apm-server logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install \"elastalert\u003e=0.2.0b\" \u0026\u0026 wget https://github.com/bitsensor/elastalert/archive/master.zip -O /tmp/elasalert-server.zip \u0026\u0026 unzip  /tmp/elasalert-server.zip -d /opt/elastalert-server \u0026\u0026 cd /opt/elastalert-server/elastalert-master \u0026\u0026 npm install --production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.json",
            "/opt/elastalert-server/elastalert-master/config/config.json"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/elk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /etc/elasticsearch/ /etc/elk \u0026\u0026 ln -s /etc/elk/elasticsearch/ /etc/elasticsearch \u0026\u0026   mv /etc/kibana/ /etc/elk \u0026\u0026 ln -s /etc/elk/kibana/ /etc/kibana \u0026\u0026   mv /etc/apm-server/ /etc/elk \u0026\u0026 ln -s /etc/elk/apm-server/ /etc/apm-server \u0026\u0026   mv /etc/logstash/ /etc/elk \u0026\u0026 ln -s /etc/elk/logstash/ /etc/logstash \u0026\u0026   mkdir -p /etc/elk/elasalert/rules \u0026\u0026 ln -s /etc/elk/elasalert/rules /usr/local/bin/rules \u0026\u0026  ln -s /etc/elk/elasalert/config.yaml /usr/local/bin/config.yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start",
            "/start"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.yaml",
            "/etc/elk/elasalert/config.yaml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elastalert-kibana-plugin-1.0.4-7.1.1.zip",
            "/tmp/elastalert-kibana-plugin-1.0.4-7.1.1.zip"
          ]
        },
        {
          "CmdLine": [
            "/usr/share/kibana/bin/kibana-plugin install file:///tmp/elastalert-kibana-plugin-1.0.4-7.1.1.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/elk"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5601"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9200"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8200"
          ]
        },
        {
          "CmdLine": [
            "/start"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}