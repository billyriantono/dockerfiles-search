MetaArgs: null
Stages:
- As: build
  BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: Author
      Value: '"nooldey@gmail.com"'
    Name: label
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.12.4
    Name: env
  - CmdLine:
    - 'echo "installing go version $GOLANG_VERSION...";         apk add --no-cache
      ca-certificates;         [ ! -e /etc/nsswitch.conf ] && echo ''hosts: files
      dns'' > /etc/nsswitch.conf;         set -eux;         apk add --no-cache --virtual
      .build-deps bash gcc musl-dev openssl go;         export                 GOROOT_BOOTSTRAP="$(go
      env GOROOT)"                 GOOS="$(go env GOOS)"                 GOARCH="$(go
      env GOARCH)"                 GOHOSTOS="$(go env GOHOSTOS)"                 GOHOSTARCH="$(go
      env GOHOSTARCH)"         ;         wget -O go.tgz "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz";         tar
      -C /usr/local -xzf go.tgz && rm go.tgz;         cd /usr/local/go/src/ && ./make.bash;         rm
      -rf                 /usr/local/go/pkg/bootstrap                 /usr/local/go/pkg/obj         ;         apk
      del .build-deps;         export PATH="/usr/local/go/bin:$PATH";'
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - CmdLine:
    - go
    - version
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "80"
  From:
    Image: alpine:latest
  Name: build
  Platform: ""
  SourceCode: FROM alpine:latest AS build
