{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos/systemd",
      "SourceCode": "FROM centos/systemd",
      "Platform": "",
      "From": {
        "Image": "centos/systemd"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root/"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_IP",
              "Value": "127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": "root@appinside"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INET",
              "Value": "eth0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REBUILD",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/java/jdk-10.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/local/apache-maven-3.5.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TARS_INSTALL",
              "Value": "/usr/local/tars/cpp/deploy"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rpm -ivh https://repo.mysql.com/mysql57-community-release-el7.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y mysql mysql-devel \t\u0026\u0026 yum -y install epel-release \t\u0026\u0026 yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \t\u0026\u0026 yum -y install yum-utils \u0026\u0026 yum-config-manager --enable remi-php72 \t\u0026\u0026 yum -y install yum-utils psmisc net-tools wget unzip telnet zlib-devel openssl-devel git gcc gcc-c++ \t\u0026\u0026 yum -y install golang make cmake unzip iproute which glibc-devel flex bison ncurses-devel \t\u0026\u0026 yum -y install protobuf-devel kde-l10n-Chinese glibc-common boost boost-devel \t\u0026\u0026 yum -y install php php-cli php-devel php-mcrypt php-cli php-gd php-curl php-mysql php-zip php-fileinfo php-phpiredis php-seld-phar-utils tzdata     \u0026\u0026 mkdir -p /usr/local/mysql \u0026\u0026 ln -s /usr/lib64/mysql /usr/local/mysql/lib \u0026\u0026 ln -s /usr/include/mysql /usr/local/mysql/include \u0026\u0026 echo \"/usr/local/mysql/lib/\" \u003e\u003e /etc/ld.so.conf \u0026\u0026 ldconfig \t\u0026\u0026 cd /root/ \u0026\u0026 git clone https://github.com/TarsCloud/Tars \t\u0026\u0026 cd /root/Tars/ \u0026\u0026 git submodule update --init --recursive framework \t\u0026\u0026 git submodule update --init --recursive web \t\u0026\u0026 git submodule update --init --recursive php \t\u0026\u0026 git submodule update --init --recursive go \t\u0026\u0026 git submodule update --init --recursive java \t\u0026\u0026 mkdir -p /data \u0026\u0026 chmod u+x /root/Tars/framework/build/build.sh \t\u0026\u0026 sed -i '32s/rt/rt crypto ssl/' /root/Tars/framework/CMakeLists.txt     \u0026\u0026 cd /root/Tars/framework/build/ \u0026\u0026 ./build.sh all \t\u0026\u0026 ./build.sh install \t\u0026\u0026 make clean \t\u0026\u0026 cd /tmp \u0026\u0026 curl -fsSL https://getcomposer.org/installer | php \t\u0026\u0026 chmod +x composer.phar \u0026\u0026 mv composer.phar /usr/local/bin/composer \t\u0026\u0026 cd /root/Tars/php/tars-extension/ \u0026\u0026 phpize --clean \u0026\u0026 phpize \t\u0026\u0026 ./configure --enable-phptars --with-php-config=/usr/bin/php-config \u0026\u0026 make \u0026\u0026 make install \t\u0026\u0026 echo \"extension=phptars.so\" \u003e /etc/php.d/phptars.ini \t\u0026\u0026 cd /root \u0026\u0026 wget -c -t 0 https://github.com/swoole/swoole-src/archive/v2.2.0.tar.gz \t\u0026\u0026 tar zxf v2.2.0.tar.gz \u0026\u0026 cd swoole-src-2.2.0 \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t\u0026\u0026 echo \"extension=swoole.so\" \u003e /etc/php.d/swoole.ini \t\u0026\u0026 cd /root \u0026\u0026 rm -rf v2.2.0.tar.gz swoole-src-2.2.0 \t\u0026\u0026 mkdir -p /root/phptars \u0026\u0026 cp -f /root/Tars/php/tars2php/src/tars2php.php /root/phptars \t\u0026\u0026 go get github.com/TarsCloud/TarsGo/tars \t\u0026\u0026 cd $GOPATH/src/github.com/TarsCloud/TarsGo/tars/tools/tars2go \u0026\u0026 go build . \t\u0026\u0026 wget https://github.com/nvm-sh/nvm/archive/v0.35.1.zip \u0026\u0026 unzip v0.35.1.zip \u0026\u0026 cp -rf nvm-0.35.1 /root/.nvm \t\u0026\u0026 echo \". /root/.nvm/nvm.sh\" \u003e\u003e /root/.bashrc \t\u0026\u0026 echo \". /root/.nvm/bash_completion\" \u003e\u003e /root/.bashrc \t\u0026\u0026 source /root/.bashrc \t\u0026\u0026 nvm install v12.13.0 \t\u0026\u0026 npm install -g npm pm2 \t\u0026\u0026 cp -Rf /root/Tars/web /usr/local/tars/cpp/deploy/ \t\u0026\u0026 cd /usr/local/tars/cpp/deploy/web \u0026\u0026 npm install \t\u0026\u0026 cd /usr/local/tars/cpp/deploy/web/demo \u0026\u0026 npm install \t\u0026\u0026 source /root/.bashrc \u0026\u0026 npm install -g pm2 @tars/deploy @tars/stream @tars/rpc @tars/logs @tars/config @tars/monitor @tars/notify @tars/utils @tars/dyeing @tars/registry \t\u0026\u0026 mkdir -p /root/init \u0026\u0026 cd /root/init/ \t\u0026\u0026 wget https://mirror.its.sfu.ca/mirror/CentOS-Third-Party/RCG/common/x86_64/jdk-10.0.2_linux-x64_bin.rpm \t\u0026\u0026 rpm -ivh /root/init/jdk-10.0.2_linux-x64_bin.rpm \u0026\u0026 rm -rf /root/init/jdk-10.0.2_linux-x64_bin.rpm \t\u0026\u0026 echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"CLASSPATH=\\$JAVA_HOME/lib/dt.jar:\\$JAVA_HOME/lib/tools.jar\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"PATH=\\$JAVA_HOME/bin:\\$PATH\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"export PATH JAVA_HOME CLASSPATH\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" \u003e\u003e /root/.bashrc \t\u0026\u0026 echo \"CLASSPATH=\\$JAVA_HOME/lib/dt.jar:\\$JAVA_HOME/lib/tools.jar\" \u003e\u003e /root/.bashrc \t\u0026\u0026 echo \"PATH=\\$JAVA_HOME/bin:\\$PATH\" \u003e\u003e /root/.bashrc \t\u0026\u0026 echo \"export PATH JAVA_HOME CLASSPATH\" \u003e\u003e /root/.bashrc \t\u0026\u0026 rm -rf /root/Tars \t\u0026\u0026 yum clean all \u0026\u0026 rm -rf /var/cache/yum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${TARS_INSTALL}/tar-server.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/tars/cpp/deploy/docker-init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3001"
          ]
        }
      ]
    }
  ]
}