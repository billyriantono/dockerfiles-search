MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: ingmapping <contact@ingmapping.com>
    Name: maintainer
  - CmdLine:
    - apt-get update -y     && apt-get install -y software-properties-common python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y     && apt-get install -y libboost-all-dev git-core tar unzip
      wget npm bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libgeos++-dev
      libpq-dev libbz2-dev libproj-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler
      libfreetype6-dev libpng12-dev libtiff5-dev libicu-dev libgdal-dev libcairo-dev
      libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev lua5.1 liblua5.1-dev
      libgeotiff-epsg postgresql-client-9.5
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y     && apt-get install -y make cmake g++ libboost-dev libboost-system-dev
      libboost-filesystem-dev libexpat1-dev zlib1g-dev libbz2-dev libpq-dev libgeos-dev
      libgeos++-dev libproj-dev lua5.2 liblua5.2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/src     && cd ~/src     && git clone git://github.com/openstreetmap/osm2pgsql.git     &&
      cd osm2pgsql     && mkdir build && cd build     && cmake ..     && make     &&
      make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev
      libgeos++-dev libproj-dev gdal-bin libgdal1-dev libmapnik-dev mapnik-utils python-mapnik
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c 'import mapnik'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/src     && wget https://ingmapping.com/osm-blossom/osm-blossom.zip     &&
      unzip osm-blossom     && find ~/src/ \( -type f -iname "*.zip" -o -iname "*.tgz"
      \) -delete
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - apt-get install -y ttf-ubuntu-font-family ttf-dejavu ttf-unifont
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i npm-font-open-sans --save
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - chmod a+rx /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./osm-blossom.xml
    - /root/src/osm-blossom/osm-blossom.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./generate_tiles.py
    - /root/src/osm-blossom/generate_tiles.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./index.html
    - /root/src/osm-blossom/index.html
  - Env:
    - Key: PGPASSWORD
      Value: mysecretpassword
    Name: env
  - Env:
    - Key: PGUSER
      Value: postgres
    Name: env
  - Env:
    - Key: PGHOST
      Value: postgis
    Name: env
  - Env:
    - Key: PBFFile
      Value: europe/netherlands-latest.osm.pbf
    Name: env
  - Env:
    - Key: MIN_ZOOM
      Value: "0"
    Name: env
  - Env:
    - Key: MAX_ZOOM
      Value: "16"
    Name: env
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
