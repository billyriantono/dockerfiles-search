{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8",
      "SourceCode": "FROM java:8",
      "Platform": "",
      "From": {
        "Image": "java:8"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get --yes update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get --yes install libgtk2.0-0 libgconf-2-4 libasound2 libxtst6 libxss1 libnss3 xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANT_VERSION",
              "Value": "1.9.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANT_FOLDER",
              "Value": "apache-ant-${ANT_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANT_ARCHIVE",
              "Value": "${ANT_FOLDER}-bin.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANT_URL",
              "Value": "https://www.apache.org/dist/ant/binaries/${ANT_ARCHIVE}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget -q ${ANT_URL} \u0026\u0026 \ttar -xzf ${ANT_ARCHIVE} \u0026\u0026 \tmv ${ANT_FOLDER} ant \u0026\u0026 \trm ${ANT_ARCHIVE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/ant/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -n \"Ant version: \" \u0026\u0026 ant -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.15.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_FOLDER",
              "Value": "node-v${NODE_VERSION}-linux-x64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ARCHIVE",
              "Value": "${NODE_FOLDER}.tar.xz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_URL",
              "Value": "https://nodejs.org/dist/v${NODE_VERSION}/${NODE_ARCHIVE}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget -q ${NODE_URL} \u0026\u0026 \ttar -xJf ${NODE_ARCHIVE} \u0026\u0026 \tmv ${NODE_FOLDER} node \u0026\u0026 \trm ${NODE_ARCHIVE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/node/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 777 /.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -n \"Node version: \" \u0026\u0026 node --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 unzip \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HASH",
              "Value": "781b6226969b20d353a5c5b5257b759d"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q \"https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026     echo \"${GRADLE_HASH} gradle-${GRADLE_VERSION}-bin.zip\" \u003e gradle-${GRADLE_VERSION}-bin.zip.md5 \u0026\u0026     md5sum -c gradle-${GRADLE_VERSION}-bin.zip.md5 \u0026\u0026     unzip -q \"gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026     ln -s \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}\" \u0026\u0026     rm \"gradle-${GRADLE_VERSION}-bin.zip\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_HASH",
              "Value": "444e22ce8ca0f67353bda4b85175ed3731cae3ffa695ca18119cbacef1c1bea0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_FILENAME",
              "Value": "sdk-tools-linux-3859397.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q ${ANDROID_SDK_URL} \u0026\u0026     echo \"${ANDROID_SDK_HASH} ${ANDROID_SDK_FILENAME}\" \u003e ${ANDROID_SDK_FILENAME}.sha256 \u0026\u0026     sha256sum -c ${ANDROID_SDK_FILENAME}.sha256 \u0026\u0026     mkdir -p ${ANDROID_HOME} \u0026\u0026     unzip -q ${ANDROID_SDK_FILENAME} -d ${ANDROID_HOME} \u0026\u0026     rm \"${ANDROID_SDK_FILENAME}\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.android \u0026\u0026     touch /root/.android/repositories.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     (sleep 60; while true; do echo \"y\"; sleep 10; done) |     sdkmanager         \"platform-tools\"         \"platforms;android-27\"         \"build-tools;27.0.0\"         \"add-ons;addon-google_apis-google-24\"         \"extras;google;google_play_services\"         \"extras;android;m2repository\"         \"extras;google;m2repository\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /work"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "bash",
            "-c",
            "sdkmanager --list; gradle -version;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}