MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Maintainer: JimyRyan
    Name: maintainer
  - CmdLine:
    - "set -e \t&& apk add --update --no-cache --virtual .persistent-deps \t\tbash
      \t\ttzdata \t\tca-certificates \t\tcurl \t\tletsencrypt \t\tapk-cron"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& cp -f /usr/share/zoneinfo/Europe/Paris /etc/localtime \t&& echo
      \"Europe/Paris\" > /etc/timezone"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data\t\t&& mkdir -p /var/www/html"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& mkdir -p /etc/periodic/1min \t&& mkdir -p /etc/periodic/5min \t&&
      mkdir -p /etc/periodic/10min \t&& echo -e \"*/1\\t*\\t*\\t*\\t*\\trun-parts
      /etc/periodic/1min\" >> /etc/crontabs/root \t&& echo -e \"*/5\\t*\\t*\\t*\\t*\\trun-parts
      /etc/periodic/5min\" >> /etc/crontabs/root \t&& echo -e \"*/10\\t*\\t*\\t*\\t*\\trun-parts
      /etc/periodic/10min\" >> /etc/crontabs/root"
    Name: run
    PrependShell: true
  - Env:
    - Key: LETSENCRYPT_ENABLE_CRON_FOR_AUTO_RENEW
      Value: "true"
    Name: env
  - Name: volume
    Volumes:
    - /var/log/cron
  - Name: workdir
    Path: /var/www/html
  - Name: volume
    Volumes:
    - /var/www/html
  - CmdLine:
    - mkdir -p /usr/local/etc/nginx/conf.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/*.conf
    - /usr/local/etc/nginx/conf.d/
  - Name: volume
    Volumes:
    - /etc/nginx/conf.d
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: 0.1.0
    Name: env
  - Env:
    - Key: DOCKERIZE_TIMEOUT
      Value: "1800"
    Name: env
  - Env:
    - Key: DOCKERIZE_WAIT_SERVICES
      Value: ""
    Name: env
  - Env:
    - Key: CONTAINER_TCP_SERVICES_READY_PORT
      Value: "5000"
    Name: env
  - Env:
    - Key: LETSENCRYPT_HTTPS_CERTS_OK_TCP_SERVICES_READY_PORT
      Value: "5002"
    Name: env
  - Name: expose
    Ports:
    - $CONTAINER_TCP_SERVICES_READY_PORT
  - Name: expose
    Ports:
    - $LETSENCRYPT_HTTPS_CERTS_OK_TCP_SERVICES_READY_PORT
  - CmdLine:
    - "set -xe \t&& curl -fSL \"https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\"
      -o /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz \t&& tar -C /usr/local/bin
      -xzvf /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /*.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/waitsig
    - /usr/bin/
  - CmdLine:
    - "set -e \t&& chmod 700 /*.sh \t&& chmod 700 /usr/bin/waitsig"
    Name: run
    PrependShell: true
  - Env:
    - Key: DRUPAL_VERSION
      Value: 8.0.6
    Name: env
  - Env:
    - Key: DRUPAL_MD5
      Value: 952c14d46f0b02bcb29de5c3349c19ee
    Name: env
  - Env:
    - Key: SITE_SECURE
      Value: "false"
    Name: env
  - Env:
    - Key: SITE_NAME
      Value: www.example.com
    Name: env
  - Env:
    - Key: NGINX_SERVER_NAME_MAIN_DOMAINS
      Value: example.com www.example.com
    Name: env
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: LETSENCRYPT_DEBUG
      Value: "false"
    Name: env
  - Env:
    - Key: LETSENCRYPT_EMAIL
      Value: contact@example.com
    Name: env
  - Env:
    - Key: LETSENCRYPT_DOMAINS_STRING_PARAM
      Value: -d example.com -d www.example.com
    Name: env
  - Env:
    - Key: LETSENCRYPT_KEY_SIZE
      Value: "4096"
    Name: env
  - Name: volume
    Volumes:
    - /var/log/letsencrypt
  - Name: volume
    Volumes:
    - /etc/letsencrypt/live
  - Name: volume
    Volumes:
    - /etc/letsencrypt
  - Env:
    - Key: CALL_API_URL_TRIGGER_WHEN_READY
      Value: ""
    Name: env
  - CmdLine:
    - /my-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - waitsig
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
