{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:fpm",
      "SourceCode": "FROM php:fpm",
      "Platform": "",
      "From": {
        "Image": "php:fpm"
      },
      "Commands": [
        {
          "Maintainer": "JimyRyan",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "fr_FR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "fr_FR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "fr_FR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Paris"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     \u0026\u0026 sed -i -e 's/# '$LANG' UTF-8/'$LANG' UTF-8/' /etc/locale.gen     \u0026\u0026 locale-gen     \u0026\u0026 update-locale LANG=$LANG     \u0026\u0026 ln -snf /usr/share/zoneinfo/$TZ /etc/localtime     \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpng12-dev libjpeg-dev \t\u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \t\u0026\u0026 docker-php-ext-install gd mysqli opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_VERSION",
              "Value": "4.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_SHA1",
              "Value": "7444099fec298b599eb026e83227462bcdf312a6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o wordpress.tar.gz -SL https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz \t\u0026\u0026 echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \t\u0026\u0026 tar -xzf wordpress.tar.gz -C /usr/src/ \t\u0026\u0026 rm wordpress.tar.gz \t\u0026\u0026 chown -R www-data:www-data /usr/src/wordpress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_SECURE",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_MAIN_DOMAIN",
              "Value": "www.example.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_STATIC_DOMAIN",
              "Value": "static.cdn.com"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 buildDeps=\" \t\tlibmcrypt-dev         libtidy-dev \t\";     buildExt=\"         mcrypt         mbstring         tidy     \"; \tapt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 docker-php-ext-install -j$(nproc) $buildExt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'date.timezone='$TZ \u003e /usr/local/etc/php/conf.d/date.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/etc/php/conf.d/*.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "chmod 644 /usr/local/etc/php/conf.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/apply-security.sh",
            "/apply-security_entrypoint-launcher.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /apply-security_entrypoint-launcher.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/var/www/html/robots.txt",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/var/www/html/wordpress/wp-myconfig.php",
            "/tmp/wp-myconfig.php"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/php"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/apply-security_entrypoint-launcher.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}