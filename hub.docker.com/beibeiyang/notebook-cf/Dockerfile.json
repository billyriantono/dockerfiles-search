{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/ubuntu_14_04_locale_fix",
      "SourceCode": "FROM jupyter/ubuntu_14_04_locale_fix",
      "Platform": "",
      "From": {
        "Image": "jupyter/ubuntu_14_04_locale_fix"
      },
      "Commands": [
        {
          "Maintainer": "Project Jupyter \u003cjupyter@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/notebooks"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/notebooks"
        },
        {
          "CmdLine": [
            "mkdir -p /root/notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R a+wx /root/notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get remove -yq         python3-minimal         python3.4         python3.4-minimal         libpython3-stdlib         libpython3.4-stdlib         libpython3.4-minimal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         build-essential         ca-certificates         curl         git         language-pack-en         libcurl4-openssl-dev         libffi-dev         libsqlite3-dev         libzmq3-dev         pandoc         python         python3         python-dev         python3-dev         sqlite3         texlive-fonts-recommended         texlive-latex-base         texlive-latex-extra         docker.io         zlib1g-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini \u003e tini \u0026\u0026     echo \"d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b *tini\" | sha256sum -c - \u0026\u0026     mv tini /usr/local/bin/tini \u0026\u0026     chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python2 get-pip.py \u0026\u0026     python3 get-pip.py \u0026\u0026     rm get-pip.py \u0026\u0026     pip2 --no-cache-dir install requests[security] \u0026\u0026     pip3 --no-cache-dir install requests[security] \u0026\u0026     rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 --no-cache-dir install ipykernel \u0026\u0026     pip3 --no-cache-dir install ipykernel \u0026\u0026         python2 -m ipykernel.kernelspec \u0026\u0026     python3 -m ipykernel.kernelspec \u0026\u0026     rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/usr/src/jupyter-notebook"
          ]
        },
        {
          "CmdLine": [
            "git config --global url.\"https://\".insteadOf git:// \u0026\u0026     BUILD_DEPS=\"nodejs npm\" \u0026\u0026     apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq $BUILD_DEPS \u0026\u0026         pip3 install --no-cache-dir notebook \u0026\u0026     pip2 install --no-cache-dir ipywidgets \u0026\u0026     pip3 install --no-cache-dir ipywidgets \u0026\u0026         npm cache clean \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /root/.npm \u0026\u0026     rm -rf /root/.cache \u0026\u0026     rm -rf /root/.config \u0026\u0026     rm -rf /root/.local \u0026\u0026     rm -rf /root/tmp \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get purge -y --auto-remove         -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir notebook[test] \u0026\u0026 nosetests -v notebook"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p -m 700 /root/.jupyter/ \u0026\u0026     echo \"c.NotebookApp.ip = \\\"*\\\"\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--no-browser",
            "--port=8080"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}