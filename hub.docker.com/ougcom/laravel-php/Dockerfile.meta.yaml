MetaArgs:
- DefaultValue: "7.3"
  Key: PHP_VERSION
  ProvidedValue: null
  Value: "7.3"
Stages:
- BaseName: php:${PHP_VERSION}-fpm-alpine
  Commands:
  - Key: TZ
    Name: arg
    Value: UTC
  - Key: DOCKER_APP_ROOT_PATH
    Name: arg
    Value: /app
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: PATH
      Value: ./vendor/bin:/composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: DOCKER_APP_ROOT_PATH
      Value: $DOCKER_APP_ROOT_PATH
    Name: env
  - Name: workdir
    Path: $DOCKER_APP_ROOT_PATH
  - Name: volume
    Volumes:
    - $DOCKER_APP_ROOT_PATH
  - CmdLine:
    - set -xe &&         mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
      &&         apk update &&         apk upgrade &&         apk add --no-cache --update
      --virtual .build-deps         $PHPIZE_DEPS         curl-dev         cyrus-sasl-dev         libtool         libxml2-dev         openssl-dev         pcre-dev
      &&         apk add --no-cache --update         bash         curl         coreutils         git         file         findutils         cksfv         icu         icu-dev         libxslt-dev         libevent-dev         libintl         libmemcached-dev         libssh2-dev         libzip-dev         libbz2         mysql-client         bzip2-dev         tzdata         unrar         zip         zlib-dev         zstd-dev
      &&         docker-php-ext-configure zip --with-libzip &&         docker-php-ext-install
      -j$(nproc)         bz2         bcmath         intl         opcache         pcntl         pdo_mysql         soap         sockets         tokenizer         xsl         zip
      &&         echo '' | pecl install -f igbinary &&     docker-php-ext-enable igbinary
      &&         yes | pecl install -f redis &&     docker-php-ext-enable redis &&         echo
      '' | pecl install -f event &&     docker-php-ext-enable --ini-name zz-event.ini
      event &&         (         pecl install --nobuild memcached &&         cd "$(pecl
      config-get temp_dir)/memcached" &&         docker-php-ext-configure "$(pecl
      config-get temp_dir)/memcached"         --enable-memcached-session --enable-memcached-igbinary
      --enable-memcached-json &&         docker-php-ext-install "$(pecl config-get
      temp_dir)/memcached"     ) &&         curl -sS https://getcomposer.org/installer
      |     php -- --install-dir=/usr/local/bin --filename=composer &&         composer
      global require hirak/prestissimo -n --prefer-source &&         apk del -f --purge
      --no-network .build-deps &&         rm -rf /tmp/* /var/cache/apk/* /usr/src/*
      &&         composer clear-cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/*
    - $PHP_INI_DIR/conf.d/
  - CmdLine:
    - sed -i "s|root:/bin/ash|root:/bin/bash|i" /etc/passwd
    Name: run
    PrependShell: true
  From:
    Image: php:${PHP_VERSION}-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION}-fpm-alpine
