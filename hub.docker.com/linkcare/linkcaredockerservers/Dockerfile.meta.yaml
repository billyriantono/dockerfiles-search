MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - chmod 755 /usr/local/bin/php-ext-*   && apt-get update   && apt-get install
      -y autoconf file g++ gcc libc-dev make pkg-config re2c --no-install-recommends   &&
      apt-get install -y ca-certificates curl libedit2 libsqlite3-0 libxml2 --no-install-recommends
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y apache2 --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/html   && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2
      /var/www/html   && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2
      /var/log/apache2 /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - "a2dismod mpm_event && a2enmod mpm_prefork   && mv /etc/apache2/apache2.conf
      /etc/apache2/apache2.conf.dist   && rm /etc/apache2/conf-enabled/* /etc/apache2/sites-enabled/*
      \  && mv /etc/apache2/mods-available/ssl* /etc/apache2/mods-enabled/   && mv
      /etc/apache2/mods-available/socache* /etc/apache2/mods-enabled/   && {   echo
      'Mutex file:/var/lock/apache2 default';   echo 'PidFile /var/run/apache2/apache2.pid';
      \  echo 'Timeout 300';   echo 'KeepAlive On';   echo 'MaxKeepAliveRequests 100';
      \  echo 'KeepAliveTimeout 5';   echo 'User www-data';   echo 'Group www-data';
      \  echo 'HostnameLookups Off';   echo 'ErrorLog /proc/self/fd/2';   echo 'LogLevel
      warn';   echo ' ';   echo 'IncludeOptional mods-enabled/*.load';   echo 'IncludeOptional
      mods-enabled/*.conf';   echo ' ';   echo '# ports.conf';   echo \"Listen 80\";
      \  echo ' ';   echo '<Directory />';   echo '\tOptions FollowSymLinks';   echo
      '\tAllowOverride None';   echo '\tRequire all denied';   echo '</Directory>';
      \  echo ' ';   echo '<Directory /var/www/>';   echo '\tAllowOverride All';   echo
      '\tRequire all granted';   echo '</Directory>';   echo ' ';   echo 'DocumentRoot
      /var/www/html';   echo ' ';   echo 'AccessFileName .htaccess';   echo '<FilesMatch
      \"^\\.ht\">';   echo '\tRequire all denied';   echo '</FilesMatch>';   echo
      ' ';   echo 'LogFormat \"%v:%p %h %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\"
      \\\"%{User-Agent}i\\\"\" vhost_combined';   echo 'LogFormat \"%h %l %u %t \\\"%r\\\"
      %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined';   echo 'LogFormat
      \"%h %l %u %t \\\"%r\\\" %>s %O\" common';   echo 'LogFormat \"%{Referer}i ->
      %U\" referer';   echo 'LogFormat \"%{User-agent}i\" agent';   echo ' ';   echo
      'CustomLog /var/log/apache2/custom_log combined';   echo ' ';   echo '<FilesMatch
      \\.php$>';   echo '\tSetHandler application/x-httpd-php';   echo '</FilesMatch>';
      \  echo ' ';   echo '# Multiple DirectoryIndex directives within the same context
      will add';   echo '# to the list of resources to look for rather than replace';
      \  echo '# https://httpd.apache.org/docs/current/mod/mod_dir.html#directoryindex';
      \  echo 'DirectoryIndex disabled';   echo 'DirectoryIndex index.php index.html';
      \  echo ' ';   echo 'IncludeOptional conf-enabled/*.conf';   echo 'IncludeOptional
      sites-enabled/*.conf';   } > /etc/apache2/apache2.conf"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_BUILD_DEPS
      Value: apache2-dev
    Name: env
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --with-apxs2
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: CBAF69F173A0FEA4B537F470D66C9593118BCCB6
    Name: env
  - Env:
    - Key: PHP_FILENAME
      Value: php-7.3.8.tar.xz
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: f6046b2ae625d8c04310bda0737ac660dc5563a8e04e8a46c1ee24ea414ad5a5
    Name: env
  - CmdLine:
    - set -xe;   buildDeps="$PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev
      libsqlite3-dev libssl-dev  libxml2-dev  xz-utils";   apt-get install -y $buildDeps
      --no-install-recommends;   curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror"
      -o "$PHP_FILENAME";   echo "$PHP_SHA256 *$PHP_FILENAME" | sha256sum -c -;   curl
      -fSL "http://php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o "$PHP_FILENAME.asc";   export
      GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key";   done;   gpg --batch --verify "$PHP_FILENAME.asc" "$PHP_FILENAME";   rm
      -r "$GNUPGHOME" "$PHP_FILENAME.asc";   mkdir -p /usr/src/php;   tar -xf "$PHP_FILENAME"
      -C /usr/src/php --strip-components=1;   rm "$PHP_FILENAME"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/php;   ./configure     --with-config-file-path="$PHP_INI_DIR"     --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"     $PHP_EXTRA_CONFIGURE_ARGS     --disable-cgi     --enable-mysqlnd     --enable-mbstring     --with-curl     --with-libedit     --with-openssl     --with-zlib;   make
      -j"$(nproc)";   make install;   { find /usr/local/bin /usr/local/sbin -type
      f -executable -exec strip --strip-all '{}' + || true; };   make clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - OracleClient/*
    - /tmp/
  - CmdLine:
    - apt-get install -y unzip   && unzip /tmp/instantclient-basic-linux.x64-12.1.0.2.0.zip
      -d /usr/local/   && unzip /tmp/instantclient-sdk-linux.x64-12.1.0.2.0.zip -d
      /usr/local/   && unzip /tmp/instantclient-sqlplus-linux.x64-12.1.0.2.0.zip -d
      /usr/local/   && ln -s /usr/local/instantclient_12_1 /usr/local/instantclient   &&
      ln -s /usr/local/instantclient/libclntsh.so.12.1 /usr/local/instantclient/libclntsh.so   &&
      ln -s /usr/local/instantclient/sqlplus /usr/bin/sqlplus
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-utils git curl libxml2-dev libbz2-dev re2c libpng++-dev
      libpng3 libjpeg-dev libvpx-dev zlib1g-dev   libgd-dev libssl-dev libtidy-dev
      libxslt1-dev libmagic-dev libexif-dev file libssh2-1-dev libaio-dev libbz2-dev
      libpng-dev   libpcre3-dev libfreetype6-dev libmcrypt-dev libxslt-dev xfonts-base
      xfonts-75dpi fonts-texgyre   fonts-wqy-microhei ttf-wqy-microhei fonts-wqy-zenhei
      ttf-wqy-zenhei libzip-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.2 && php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/   && php-ext-configure oci8 --with-oci8=instantclient,/usr/local/instantclient   &&
      php-ext-install iconv mbstring xsl soap bcmath bz2 calendar exif shmop gd oci8
      zip   && php-ext-enable mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install redis && php-ext-enable redis
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install oauth   && php-ext-enable oauth
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libxrender1
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/
      --filename=composer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2-foreground
    - /usr/local/bin/
  - CmdLine:
    - chmod 755 /usr/local/bin/apache2-foreground
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y autoconf file g++ gcc libc-dev make pkg-config
      re2c zlib1g-dev git imagemagick --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir -p /usr/local/etc;   {     echo ''install: --no-document'';     echo
      ''update: --no-document'';   } >> /usr/local/etc/gemrc'
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_MAJOR
      Value: "2.3"
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.3.1
    Name: env
  - Env:
    - Key: RUBY_DOWNLOAD_SHA256
      Value: b87c738cb2032bf4920fef8e3864dc5cf8eae9d89d8d523ce0236945c5797dcd
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: 2.6.8
    Name: env
  - CmdLine:
    - set -ex;   buildDeps='bison libgdbm-dev ruby curl libssl-dev  libxml2-dev';   apt-get
      update;   apt-get install -y --no-install-recommends $buildDeps;   rm -rf /var/lib/apt/lists/*;   curl
      -fSL -o ruby.tar.gz "http://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz";   echo
      "$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz" | sha256sum -c -;   mkdir -p /usr/src/ruby;   tar
      -xzf ruby.tar.gz -C /usr/src/ruby --strip-components=1;   rm ruby.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/ruby;   { echo '#define ENABLE_PATH_CHECK 0'; echo; cat file.c;
      } > file.c.new;   mv file.c.new file.c;   autoconf;   ./configure --disable-install-doc;   make
      -j"$(nproc)";   make install;   apt-get purge -y --auto-remove $buildDeps;   gem
      update --system $RUBYGEMS_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~;   rm -r /usr/src/ruby
    Name: run
    PrependShell: true
  - Env:
    - Key: BUNDLER_VERSION
      Value: 1.17.2
    Name: env
  - CmdLine:
    - gem install bundler --version "$BUNDLER_VERSION"
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: BUNDLE_BIN
      Value: '"$GEM_HOME/bin"'
    Name: env
  - Env:
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    Name: env
  - Env:
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $BUNDLE_BIN:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GEM_HOME" "$BUNDLE_BIN";   chmod 777 "$GEM_HOME" "$BUNDLE_BIN"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 5.1.0
    Name: env
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --verify SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.gz\$"
      SHASUMS256.txt.asc | sha256sum -c -   && tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.gz"
      SHASUMS256.txt.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y redis-server
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
    - "80"
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
