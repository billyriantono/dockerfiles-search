{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Markus Rainer \"maxrainer18@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     git     iproute2     less     locales     lsb-release     make     openssh-client     openssh-server     python-coverage     python-dbus     python-httplib2     python-jinja2     python-keyczar     python-mock     python-mysqldb     python-nose     python-paramiko     python-pip     python-setuptools     python-virtualenv     python-wheel     python-yaml     sudo     unzip     vim     virtualenv     zip     \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/apt/apt.conf.d/docker-clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/ansible/     /opt/apps     /opt/apps/ansible-programmatic     /opt/apps/ansible     /opt/apps/ansible/playbooks     /opt/apps/etc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa \u0026\u0026     cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \u0026\u0026     for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" \u003e\u003e /root/.ssh/known_hosts; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Flask Ansible elasticsearch redis pytz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/maxrainer/ansible-programmatic.git /opt/apps/ansible-programmatic/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch.py",
            "/usr/local/lib/python2.7/dist-packages/ansible/plugins/callback/"
          ]
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_SERVER",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_PORT",
              "Value": "9200"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_TIMEOUT",
              "Value": "3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_INDEX",
              "Value": "ansible_logs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_SERVER",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_PORT",
              "Value": "6379"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DB",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_ENABLED",
              "Value": "False"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/apps/etc"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/apps/ansible/playbooks"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "PYTHONPATH=/opt/apps/ansible-programmatic /usr/bin/python2 /opt/apps/ansible-programmatic/api/jobapi.py -c /opt/apps/etc/config.xml"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}