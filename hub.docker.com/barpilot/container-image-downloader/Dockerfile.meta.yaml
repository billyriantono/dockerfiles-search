MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10-alpine
  Commands:
  - CmdLine:
    - adduser container-image-downloader -S -D -H -s /usr/sbin/nologin
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update build-base gpgme-dev git
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/v[[:digit:]]\.[[:digit:]]/edge/g' /etc/apk/repositories && apk
      add --update dep
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.lock
    - Gopkg.toml
    - /go/src/github.com/barpilot/container-image-downloader/
  - Name: workdir
    Path: /go/src/github.com/barpilot/container-image-downloader
  - CmdLine:
    - dep ensure -v --vendor-only
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/barpilot/container-image-downloader
  - CmdLine:
    - go build -a -o app
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10-alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10-alpine AS build
- BaseName: alpine
  Commands:
  - CmdLine:
    - apk add --update gpgme ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /etc/passwd
    - /etc/passwd
  - Name: user
    User: container-image-downloader
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/barpilot/container-image-downloader/app
    - /container-image-downloader
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /container-image-downloader
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
