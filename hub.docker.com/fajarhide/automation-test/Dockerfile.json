{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:stretch-scm",
      "SourceCode": "FROM buildpack-deps:stretch-scm",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:stretch-scm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tbzip2 \t\tunzip \t\txz-utils \t\twget \t\tvim   \t\tcurl \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} \u003e /usr/local/bin/docker-java-home \t\u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -svT \"/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)\" /docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/docker-java-home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u141"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_DEBIAN_VERSION",
              "Value": "8u141-b15-1~deb9u1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CA_CERTIFICATES_JAVA_VERSION",
              "Value": "20170531+nmu1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tif [ ! -d /usr/share/man/man1 ]; then \t\tmkdir -p /usr/share/man/man1; \tfi; \t\tapt-get update; \tapt-get install -y \t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\" \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t; \trm -rf /var/lib/apt/lists/*; \t\t[ \"$(readlink -f \"$JAVA_HOME\")\" = \"$(docker-java-home)\" ]; \t\tupdate-alternatives --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }'; \tupdate-alternatives --query java | grep -q 'Status: manual'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share   \u0026\u0026 mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven   \u0026\u0026 ln -s /usr/share/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/share/maven"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex         \u0026\u0026 for key in                 7937DFD2AB06298B2293C3187D33FF9D0246406D                 114F43EE0176B71C7BC219DD50A3051F888C628D         ; do                 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";         done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`     \u0026\u0026 wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/     \u0026\u0026 unzip ~/chromedriver_linux64.zip -d ~/     \u0026\u0026 rm ~/chromedriver_linux64.zip     \u0026\u0026 mv -f ~/chromedriver /usr/local/bin/chromedriver     \u0026\u0026 chown root:root /usr/local/bin/chromedriver     \u0026\u0026 chmod 0755 /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get install -y         apt-transport-https         ca-certificates         curl   gnupg         --no-install-recommends         \u0026\u0026 curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add -         \u0026\u0026 echo \"deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google-chrome.list         \u0026\u0026 apt-get -y update \u0026\u0026 apt-get install -y         google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends         curl  \u0026\u0026 mkdir /tmp/phantomjs  \u0026\u0026 curl -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2         | tar -xj --strip-components=1 -C /tmp/phantomjs  \u0026\u0026 mv /tmp/phantomjs/bin/phantomjs /usr/local/bin  \u0026\u0026 curl -Lo /tmp/dumb-init.deb https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64.deb  \u0026\u0026 dpkg -i /tmp/dumb-init.deb  \u0026\u0026 apt-get purge --auto-remove -y         curl  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /tmp/* /var/lib/apt/lists/*      \u0026\u0026 useradd --system --uid 72379 -m --shell /usr/sbin/nologin phantomjs  \u0026\u0026 su phantomjs -s /bin/sh -c \"phantomjs --version\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sd /usr/local/bin/phantomjs /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "java -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mvn -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phantomjs -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/phantomjs -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chromedriver -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d /home/mmall -m mmall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/mmall/workspace"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/mmall/workspace/automation-test-lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/mmall/workspace/automation-web"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R mmall /home/mmall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chgrp -R mmall /home/mmall"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}