MetaArgs: null
Stages:
- BaseName: openjdk:8u151-jdk-alpine3.7
  Commands:
  - CmdLine:
    - apk add --no-cache tzdata
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: Asia/Jakarta
    Name: env
  - CmdLine:
    - "apk add --no-cache git python rsync jq wget openssl coreutils ansible openssh-client
      curl unzip bash ttf-dejavu \tcoreutils tini php7 php7-gd php7-curl \tphp7-iconv
      php7-phar php7-json php7-openssl php7-mbstring php7-xsl php7-pdo php7-mysqli
      \tphp7-ctype php7-xml php7-xmlreader php7-common \tphp7-dom php7-xmlreader php7-zip
      php7-zlib php7-session php7-pdo_mysql \tphp7-mcrypt php7-gettext php7-exif php7-sockets
      \tphp7-ctype php7-bcmath php7-tokenizer php7-fileinfo php7-xmlwriter php7-simplexml
      \tphp7-intl php7-bcmath php7-redis php7-soap php7-xdebug php7-imagick"
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 11.10.0
    Name: env
  - CmdLine:
    - apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make   &&
      for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ;
      do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done     && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"     &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && tar -xf
      "node-v$NODE_VERSION.tar.xz"     && cd "node-v$NODE_VERSION"     && ./configure     &&
      make -j$(getconf _NPROCESSORS_ONLN)     && make install     && apk del .build-deps     &&
      cd ..     && rm -Rf "node-v$NODE_VERSION"     && rm "node-v$NODE_VERSION.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.12.3
    Name: env
  - CmdLine:
    - "set -eux; \tapk add --no-cache --virtual .build-deps \tmusl-dev \tgo \t; \texport
      \tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \tGOOS=\"$(go env GOOS)\" \tGOARCH=\"$(go
      env GOARCH)\" \tGOHOSTOS=\"$(go env GOHOSTOS)\" \tGOHOSTARCH=\"$(go env GOHOSTARCH)\"
      \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \tarmhf) export
      GOARM='6' ;; \tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\";
      \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz'
      | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src;
      \t./make.bash; \t\trm -rf \t/usr/local/go/pkg/bootstrap \t/usr/local/go/pkg/obj
      \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo
      version"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/ansible && touch /var/ansible/keys_root
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer && chmod +x /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -S devteam && adduser -S -G devteam devteam
    Name: run
    PrependShell: true
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Key: http_port
    Name: arg
    Value: "8080"
  - Key: agent_port
    Name: arg
    Value: "50000"
  - Key: JENKINS_HOME
    Name: arg
    Value: /var/jenkins_home
  - Env:
    - Key: JENKINS_HOME
      Value: $JENKINS_HOME
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: ${agent_port}
    Name: env
  - CmdLine:
    - mkdir -p $JENKINS_HOME   && chown ${uid}:${gid} $JENKINS_HOME   && addgroup
      -g ${gid} ${group}   && adduser -h "$JENKINS_HOME" -u ${uid} -G ${group} -s
      /bin/bash -D ${user}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $JENKINS_HOME
  - CmdLine:
    - mkdir -p /usr/share/jenkins/ref/init.groovy.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - Key: JENKINS_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: JENKINS_VERSION
      Value: ${JENKINS_VERSION:-2.164.1}
    Name: env
  - Key: JENKINS_SHA
    Name: arg
    Value: 65543f5632ee54344f3351b34b305702df12393b3196a95c3771ddb3819b220b
  - Key: JENKINS_URL
    Name: arg
    Value: https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war
  - CmdLine:
    - curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war   && echo "${JENKINS_SHA}  /usr/share/jenkins/jenkins.war"
      | sha256sum -c -
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_UC
      Value: https://updates.jenkins.io
    Name: env
  - Env:
    - Key: JENKINS_UC_EXPERIMENTAL
      Value: https://updates.jenkins.io/experimental
    Name: env
  - Env:
    - Key: JENKINS_INCREMENTALS_REPO_MIRROR
      Value: https://repo.jenkins-ci.org/incrementals
    Name: env
  - CmdLine:
    - chown -R ${user} "$JENKINS_HOME" /usr/share/jenkins/ref
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${http_port}
  - Name: expose
    Ports:
    - ${agent_port}
  - Env:
    - Key: COPY_REFERENCE_FILE_LOG
      Value: $JENKINS_HOME/copy_reference_file.log
    Name: env
  - Name: user
    User: ${user}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-support
    - /usr/local/bin/jenkins-support
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins.sh
    - /usr/local/bin/jenkins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tini-shim.sh
    - /bin/tini
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/local/bin/jenkins.sh
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.sh
    - /usr/local/bin/plugins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-plugins.sh
    - /usr/local/bin/install-plugins.sh
  From:
    Image: openjdk:8u151-jdk-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8u151-jdk-alpine3.7
