MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y sudo wget
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /root
  - CmdLine:
    - sudo apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python-software-properties software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python-pip git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b 2.6.x https://github.com/GeoNode/geonode.git
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python-shapely
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip install -e geonode && sudo pip install -r geonode/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip install --upgrade Shapely==1.5.17
    Name: run
    PrependShell: true
  - CmdLine:
    - cd geonode && paver setup
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python-gdal
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y                         postgresql-9.5                              postgresql-client-9.5                       postgresql-contrib-9.5                      postgis                                     postgresql-9.5-postgis-scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget --quiet --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u152-b16/aa0333dd3019491ca4f6ddbe78cdb6d0/jdk-8u152-linux-x64.tar.gz
      -O jdk.tar.gz'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -zxf jdk.tar.gz -C /opt/jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_152/bin/java
      100
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_152/bin/javac
      100
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sh -c "sed -e 's/local   all             all                                     peer/local   all             all                                     trust/'
      < /etc/postgresql/9.5/main/pg_hba.conf > /etc/postgresql/9.5/main/pg_hba.conf.tmp"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mv /etc/postgresql/9.5/main/pg_hba.conf.tmp /etc/postgresql/9.5/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/9.5/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "listen_addresses='*'" >> /etc/postgresql/9.5/main/postgresql.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/postgresql restart
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/postgresql start && sleep 30     && sudo -u postgres psql -c "CREATE
      USER geonode WITH PASSWORD 'geonode'"     && sudo -u postgres createdb -O geonode
      geonode     && sudo -u postgres createdb -O geonode geonode_data     && sudo
      -u postgres psql -d geonode_data -c 'CREATE EXTENSION postgis;'     && sudo
      -u postgres psql -d geonode_data -c 'GRANT ALL ON geometry_columns TO PUBLIC;'     &&
      sudo -u postgres psql -d geonode_data -c 'GRANT ALL ON spatial_ref_sys TO PUBLIC;'
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/postgresql start && cd /root && python manage.py migrate
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/postgresql start && sleep 30     && cd /root && echo "from django.contrib.auth
      import get_user_model; User = get_user_model(); User.objects.create_superuser('admin',
      'admin@example.com', 'nimda')" | python manage.py shell
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8000"
  - Name: workdir
    Path: /root
  - CmdLine:
    - /etc/init.d/postgresql start && /bin/bash
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
