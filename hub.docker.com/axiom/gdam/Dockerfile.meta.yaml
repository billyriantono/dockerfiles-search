MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.9.21
  Commands:
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - Env:
    - Key: KILL_PROCESS_TIMEOUT
      Value: "30"
    Name: env
  - Env:
    - Key: KILL_ALL_PROCESSES_TIMEOUT
      Value: "30"
    Name: env
  - Maintainer: Kyle Wilcox <kyle@axiomdatascience.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y         binutils         build-essential         bzip2         ca-certificates         libglib2.0-0         libsm6         libxext6         libxrender1         pwgen         wget         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.2.12
    Name: env
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     curl
      -k -o /miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-Linux-x86_64.sh
      &&     /bin/bash /miniconda.sh -b -p /opt/conda &&     rm /miniconda.sh &&     /opt/conda/bin/conda
      config         --set always_yes yes         --set changeps1 no         --set
      show_channel_urls True         &&     /opt/conda/bin/conda config         --add
      channels conda-forge         --add channels axiom-data-science         &&     /opt/conda/bin/conda
      clean -a -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements*.txt
    - /tmp/
  - CmdLine:
    - conda install -y         --file /tmp/requirements.txt         &&     conda clean
      -a -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/init/*
    - /etc/my_init.d/
  - Env:
    - Key: GDB_DATA_DIR
      Value: /data
    Name: env
  - Name: volume
    Volumes:
    - $GDB_DATA_DIR
  - Env:
    - Key: GDAM2NC_OUTPUT
      Value: /output
    Name: env
  - Name: volume
    Volumes:
    - $GDAM2NC_OUTPUT
  - Env:
    - Key: GDAM2NC_CONFIG
      Value: /config
    Name: env
  - Name: volume
    Volumes:
    - $GDAM2NC_CONFIG
  - Name: expose
    Ports:
    - "44444"
  - Env:
    - Key: GDAM_VERSION
      Value: 1.2.3
    Name: env
  - Env:
    - Key: PROJECT_ROOT
      Value: /code
    Name: env
  - CmdLine:
    - mkdir -p "$PROJECT_ROOT"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $PROJECT_ROOT
  - Name: workdir
    Path: $PROJECT_ROOT
  - CmdLine:
    - pip install .
    Name: run
    PrependShell: true
  From:
    Image: phusion/baseimage:0.9.21
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.9.21
