MetaArgs: null
Stages:
- BaseName: unidata/tomcat-docker:8.5
  Commands:
  - Maintainer: Kyle Wilcox <kyle@axiomdatascience.com>
    Name: maintainer
  - CmdLine:
    - apt-get update &&     apt-get install -y         git         maven         unzip         &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\ndeb-src
      http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main" > /etc/apt/sources.list.d/webupd8team-java.list
      &&      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
      &&      apt-get update &&      echo debconf shared/accepted-oracle-license-v1-1
      select true | debconf-set-selections &&      echo debconf shared/accepted-oracle-license-v1-1
      seen true | debconf-set-selections &&      apt-get install -y oracle-java8-installer
      &&      update-java-alternatives -s java-8-oracle &&      export JAVA_HOME=/usr/lib/jvm/java-8-oracle
    Name: run
    PrependShell: true
  - Env:
    - Key: EDAL_VERSION
      Value: edal-1.4.0
    Name: env
  - CmdLine:
    - mkdir /edal &&     cd /edal &&     git clone https://github.com/axiom-data-science/edal-java.git
      &&     cd edal-java &&     git checkout axiom-develop &&     JAVA_HOME=/usr/lib/jvm/java-8-oracle
      mvn clean install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pom.xml
    - .
  - CmdLine:
    - mvn clean test dependency:go-offline
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /ncWMS
  - CmdLine:
    - cd /ncWMS &&     JAVA_HOME=/usr/lib/jvm/java-8-oracle mvn clean install &&     mkdir
      -p /srv/ncwms &&     unzip target/ncWMS2.war -d /srv/ncwms/ &&     rm -rf /edal
      &&     rm -rf /ncWMS/target
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/DIGEST/BASIC/' /srv/ncwms/WEB-INF/web.xml &&     cp /ncWMS/config/setenv.sh
      $CATALINA_HOME/bin/setenv.sh &&     cp /ncWMS/config/ehcache.xml $CATALINA_HOME/conf/ehcache.xml
      &&     cp /ncWMS/config/tomcat-users.xml $CATALINA_HOME/conf/tomcat-users.xml
      &&     mkdir -p $CATALINA_HOME/conf/Catalina/localhost/ &&     mkdir -p $CATALINA_HOME/.ncWMS2
      &&     cp /ncWMS/config/config.xml $CATALINA_HOME/.ncWMS2/config.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '<?xml version="1.0" encoding="UTF-8"?>\n<Context docBase="/srv/ncwms"
      path="" />'     > $CATALINA_HOME/conf/Catalina/localhost/ROOT.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - /ncWMS/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8080"
    - "8443"
    - "9090"
  - CmdLine:
    - catalina.sh
    - run
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 120000000000
      Retries: 3
      Test:
      - CMD-SHELL
      - curl -fsIo /dev/null "http://localhost:8080/wms?REQUEST=GetLegendGraphic&COLORBARONLY=true"
        || exit 1
      Timeout: 1000000000
    Name: healthcheck
  From:
    Image: unidata/tomcat-docker:8.5
  Name: ""
  Platform: ""
  SourceCode: FROM unidata/tomcat-docker:8.5
