MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Kyle Wilcox <kyle@axiomdatascience.com>"'
    - Key: description
      Value: '''Replay a netCDF file onto a kafka topic in a container'''
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y         binutils         build-essential         bzip2         ca-certificates         curl         libglib2.0-0         libsm6         libxext6         libxrender1         wget         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: MINICONDA_VERSION
      Value: latest
    Name: env
  - Key: PYTHON_VERSION
    Name: arg
    Value: "3.7"
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     curl
      -k -o /miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-Linux-x86_64.sh
      &&     /bin/bash /miniconda.sh -b -p /opt/conda &&     rm /miniconda.sh &&     /opt/conda/bin/conda
      config         --set always_yes yes         --set changeps1 no         --set
      show_channel_urls True         &&     /opt/conda/bin/conda config         --add
      channels axiom-data-science         --add channels conda-forge         &&     /opt/conda/bin/conda
      install python=$PYTHON_VERSION &&     /opt/conda/bin/conda clean -a -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/
  - CmdLine:
    - conda install -y         --file /tmp/requirements.txt         &&     conda clean
      -a -y
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: PROJECT_ROOT
      Value: /code
    Name: env
  - CmdLine:
    - mkdir -p "$PROJECT_ROOT"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $PROJECT_ROOT
  - CmdLine:
    - cd $PROJECT_ROOT && pip install --no-deps .
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - CmdLine:
    - '[''ncreplay'', ''batch'']'
    Name: cmd
    PrependShell: true
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
