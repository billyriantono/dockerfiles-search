{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "jccf091",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'deb http://httpredir.debian.org/debian jessie-backports main' \u003e /etc/apt/sources.list.d/jessie-backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl wget locales vim \u0026\u0026   echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026   locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.erlang-solutions.com/debian trusty contrib\" \u003e\u003e /etc/apt/sources.list \u0026\u0026     apt-key adv --fetch-keys http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc \u0026\u0026     apt-get -qq update \u0026\u0026 apt-get install -y     esl-erlang     git     unzip     build-essential     wget \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ELIXIR_VERSION",
              "Value": "v1.2.5"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/elixir"
        },
        {
          "CmdLine": [
            "wget -q https://github.com/elixir-lang/elixir/releases/download/$ELIXIR_VERSION/Precompiled.zip \u0026\u0026     unzip Precompiled.zip \u0026\u0026     rm -f Precompiled.zip \u0026\u0026     ln -s /elixir/bin/elixirc /usr/local/bin/elixirc \u0026\u0026     ln -s /elixir/bin/elixir /usr/local/bin/elixir \u0026\u0026     ln -s /elixir/bin/mix /usr/local/bin/mix \u0026\u0026     ln -s /elixir/bin/iex /usr/local/bin/iex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/mix local.hex --force \u0026\u0026     /usr/local/bin/mix local.rebar --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Env": [
            {
              "Key": "PHOENIX_VERSION",
              "Value": "1.1.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mix archive.install --force https://github.com/phoenixframework/archives/raw/master/phoenix_new-$PHOENIX_VERSION.ez"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u66"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_DEBIAN_VERSION",
              "Value": "8u72-b15-1~bpo8+1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CA_CERTIFICATES_JAVA_VERSION",
              "Value": "20140324"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends     wget     curl     ca-certificates     zip     openssh-client     unzip     openjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\"     ca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\"     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_SHA",
              "Value": "066ad710107dc7ee05d3aa6e4974f01dc98f3888"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static -o /bin/tini \u0026\u0026 chmod +x /bin/tini   \u0026\u0026 echo \"$TINI_SHA /bin/tini\" | sha1sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SLAVE_AGENT_PORT",
              "Value": "50000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "1.651.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SHA",
              "Value": "f61b8b604acba5076a93dcde28c0be2561d17bde"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins-ci.org"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-Xmx8192m\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_OPTS",
              "Value": "\"--handlerCountStartup=100 --handlerCountMax=300 --logfile=/var/log/jenkins/jenkins.log  --webroot=/var/cache/jenkins/war\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -d \"$JENKINS_HOME\" -u 1000 -m -s /bin/bash jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fL http://mirrors.jenkins-ci.org/war-stable/$JENKINS_VERSION/jenkins.war -o /usr/share/jenkins/jenkins.war   \u0026\u0026 echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/log/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/cache/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins:jenkins /var/log/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins:jenkins /var/cache/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.sh",
            "/usr/local/bin/plugins.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/plugins.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/jenkins.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}