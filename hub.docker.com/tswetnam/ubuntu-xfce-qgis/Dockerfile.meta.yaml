MetaArgs: null
Stages:
- BaseName: tswetnam/ubuntu-xfce-vnc:18.04
  Commands:
  - Labels:
    - Key: authors
      Value: '"Tyson L Swetnam"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"tswetnam@cyverse.org"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DATA_DIR
      Value: /data
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update     && apt-get install -y build-essential software-properties-common     &&
      apt-get update && apt-get install -y --no-install-recommends --no-install-suggests         libblas-dev         libbz2-dev         libcairo2-dev         libfftw3-dev         libfreetype6-dev         libgdal-dev         libgeos-dev         libglu1-mesa-dev         libgsl0-dev         libjpeg-dev         liblapack-dev         libncurses5-dev         libnetcdf-dev         libopenjp2-7         libopenjp2-7-dev         libpdal-dev
      pdal         libpdal-plugin-python         libpng-dev         libpq-dev         libproj-dev         libreadline-dev         libsqlite3-dev         libtiff-dev         libxmu-dev         libzstd-dev         bison         bzip2         flex         g++         gettext         gdal-bin         git         libfftw3-bin         make         ncurses-bin         netcdf-bin         proj-bin         proj-data         python3-pip         python3-dev         python-virtualenv         python         python-dev         python-numpy         python-pil         python-ply         python-requests         sqlite3         subversion         sudo         wget         unixodbc-dev         xfce4-terminal         zlib1g-dev     &&
      apt-get autoremove -y     && apt-get clean     && mkdir -p $DATA_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - echo LANG="en_US.UTF-8" > /etc/default/locale
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - mkdir -p /code/grass
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -nv --no-check-certificate https://grass.osgeo.org/grass76/source/grass-7.6.0.tar.gz
      \t  && tar xzf grass-7.6.0.tar.gz -C /code/grass --strip-components=1"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code/grass
  - Env:
    - Key: MYCFLAGS
      Value: '"-O2 -std=gnu99 -m64"'
    Name: env
  - Env:
    - Key: MYLDFLAGS
      Value: '"-s"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/local/lib"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"$MYLDFLAGS"'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"$MYCFLAGS"'
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '"$MYCXXFLAGS"'
    Name: env
  - Env:
    - Key: NUMTHREADS
      Value: "14"
    Name: env
  - CmdLine:
    - cd /code/grass && ./configure     --enable-largefile     --with-cxx     --with-nls     --with-readline     --with-sqlite     --with-bzlib     --with-zstd     --with-cairo
      --with-cairo-ldflags=-lfontconfig     --with-freetype --with-freetype-includes="/usr/include/freetype2/"     --with-fftw     --with-netcdf     --with-pdal     --with-proj
      --with-proj-share=/usr/share/proj     --with-geos=/usr/bin/geos-config     --with-postgres
      --with-postgres-includes="/usr/include/postgresql"     --with-opengl-libs=/usr/include/GL     --with-openmp     --enable-64bit     &&
      make -j $NUMTHREADS && make install && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/bin/grass* /usr/local/bin/grass
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean -y
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - chmod -R a+rwx $DATA_DIR
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $DATA_DIR
  - Name: workdir
    Path: $DATA_DIR
  - CmdLine:
    - rm -rf /code/grass
    Name: run
    PrependShell: true
  - CmdLine:
    - grass -text -c epsg:3857 ${PWD}/mytmp_wgs84 -e &&     echo "g.extension -s extension=r.sun.mp
      ; g.extension -s extension=r.sun.hourly ; g.extension -s extension=r.sun.daily"
      | grass -text ${PWD}/mytmp_wgs84/PERMANENT
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gtk2-engines-pixbuf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code/saga-gis &&     wget -nv --no-check-certificate https://cfhcable.dl.sourceforge.net/project/saga-gis/SAGA%20-%207/SAGA%20-%207.2.0/saga-7.2.0.tar.gz
      &&     tar xzf saga-7.2.0.tar.gz -C /code/saga-gis --strip-components=1 && rm
      saga-7.2.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libwxgtk3.0-dev libtiff5-dev libgdal-dev libproj-dev     libexpat-dev
      wx-common libogdi3.2-dev unixodbc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /code/saga-gis         && ./configure         && make -j 12         && make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update && apt-get -f install     && echo "deb https://qgis.org/ubuntu
      bionic main" >> /etc/apt/sources.list     && echo "deb-src https://qgis.org/ubuntu
      bionic main" >> /etc/apt/sources.list     && apt-key adv --keyserver keyserver.ubuntu.com
      --recv-key CAEB3DC3BDF7FB45
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update     && apt-get install -y         python-qgis-common         python-qgis         qgis-plugin-grass         qgis-providers         qgis     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /usr/share/xfce4/helpers/debian-sensible-browser.desktop
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository --yes ppa:jonathonf/firefox-esr && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y --purge firefox && apt-get install -y firefox-esr
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y lsb wget gnupg apt-transport-https
      python-requests curl     && apt-get clean     && rm -rf /usr/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://packages.irods.org/irods-signing-key.asc | apt-key add -     &&
      echo "deb [arch=amd64] https://packages.irods.org/apt/ xenial main" | sudo tee
      /etc/apt/sources.list.d/renci-irods.list     && apt-get update     && apt-get
      install -y irods-icommands     && apt-get clean     && rm -rf /usr/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: qgis_user
    Name: env
  - Env:
    - Key: PASSWORD
      Value: qgis
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash ${USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${USER}:${PASSWORD}" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - gpasswd -a ${USER} sudo
    Name: run
    PrependShell: true
  - Name: user
    User: qgis_user
  - Name: workdir
    Path: ${HOME}
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./qgis/qgis-canvas.desktop
    - Desktop/qgis-canvas.desktop
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./qgis/vice_wallpaper_blank-01.jpg
    - /usr/share/backgrounds/images/vice.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./qgis/vice_wallpaper_retro.jpg
    - /usr/share/backgrounds/images/vice_retro.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/xfce4
    - .config/xfce4
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./install/chromium-wrapper
    - install/chromium-wrapper
  - Name: user
    User: root
  - CmdLine:
    - chown -R qgis_user:qgis_user .config Desktop install
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /home/qgis_user/Desktop/qgis-canvas.desktop
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./install/vnc_startup.sh
    - /dockerstartup/vnc_startup.sh
  - CmdLine:
    - chmod a+x /dockerstartup/vnc_startup.sh
    Name: run
    PrependShell: true
  - Name: user
    User: qgis_user
  - Env:
    - Key: VNC_RESOLUTION
      Value: 1920x1200
    Name: env
  - Env:
    - Key: VNC_PW
      Value: qgis
    Name: env
  - CmdLine:
    - cp /headless/wm_startup.sh ${HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - /dockerstartup/vnc_startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --tail-log
    Name: cmd
    PrependShell: false
  From:
    Image: tswetnam/ubuntu-xfce-vnc:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM tswetnam/ubuntu-xfce-vnc:18.04
