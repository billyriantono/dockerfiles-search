{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker",
      "SourceCode": "FROM docker",
      "Platform": "",
      "From": {
        "Image": "docker"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates curl zlib libgcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     curl -Lo /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \u0026\u0026     curl -Lo /tmp/glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk \u0026\u0026     apk add --no-cache /tmp/glibc.apk \u0026\u0026     rm /tmp/glibc.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/lib:/usr/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     DOCKER_COMPOSE_URL=\"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-Linux-x86_64\" \u0026\u0026     wget -O /usr/local/bin/docker-compose $DOCKER_COMPOSE_URL \u0026\u0026     chmod a+rx /usr/local/bin/docker-compose \u0026\u0026     docker-compose version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     KUBECTL_VERSION=v1.14.0 \u0026\u0026     curl -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl \u0026\u0026     chmod a+rx /usr/local/bin/kubectl \u0026\u0026     kubectl version --client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk add --no-cache gettext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk add --no-cache -t .deps openssl bash \u0026\u0026     wget https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get \u0026\u0026     chmod +x get \u0026\u0026     ./get --version v2.13.1 \u0026\u0026     rm get \u0026\u0026     apk del --purge .deps \u0026\u0026     helm version --client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH:-/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin}\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "beroux-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/sh",
            "-e",
            "/usr/local/bin/beroux-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}