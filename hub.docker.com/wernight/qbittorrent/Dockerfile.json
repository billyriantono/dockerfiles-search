{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache         boost-system         boost-thread         ca-certificates         dumb-init         libressl         qt5-qtbase"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x  \u0026\u0026 apk add --no-cache -t .build-deps         boost-dev         curl         cmake         g++         make         libressl-dev  \u0026\u0026 LIBTORRENT_RASTERBAR_URL=$(curl -sSL https://api.github.com/repos/arvidn/libtorrent/releases/latest | grep browser_download_url  | head -n 1 | cut -d '\"' -f 4)  \u0026\u0026 mkdir /tmp/libtorrent-rasterbar  \u0026\u0026 curl -sSL $LIBTORRENT_RASTERBAR_URL | tar xzC /tmp/libtorrent-rasterbar  \u0026\u0026 cd /tmp/libtorrent-rasterbar/*  \u0026\u0026 mkdir build  \u0026\u0026 cd build  \u0026\u0026 cmake ..  \u0026\u0026 make install  \u0026\u0026 cd /  \u0026\u0026 apk del --purge .build-deps  \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x  \u0026\u0026 apk add --no-cache -t .build-deps         boost-dev         g++         git         make         libressl-dev         qt5-qttools-dev  \u0026\u0026 git clone https://github.com/qbittorrent/qBittorrent.git /tmp/qbittorrent  \u0026\u0026 cd /tmp/qbittorrent  \u0026\u0026 latesttag=$(git describe --tags `git rev-list --tags --max-count=1`)  \u0026\u0026 git checkout $latesttag  \u0026\u0026 PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure --disable-gui --disable-stacktrace  \u0026\u0026 make install  \u0026\u0026 cd /  \u0026\u0026 apk del --purge .build-deps  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 adduser -S -D -u 520 -g 520 -s /sbin/nologin qbittorrent  \u0026\u0026 mkdir -p /home/qbittorrent/.config/qBittorrent  \u0026\u0026 mkdir -p /home/qbittorrent/.local/share/data/qBittorrent  \u0026\u0026 mkdir /downloads  \u0026\u0026 chmod go+rw -R /home/qbittorrent /downloads  \u0026\u0026 ln -s /home/qbittorrent/.config/qBittorrent /config  \u0026\u0026 ln -s /home/qbittorrent/.local/share/data/qBittorrent /torrents  \u0026\u0026 su qbittorrent -s /bin/sh -c 'qbittorrent-nox -v'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qBittorrent.conf",
            "/default/qBittorrent.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/torrents",
            "/downloads"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/qbittorrent"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "qbittorrent"
        },
        {
          "Name": "expose",
          "Ports": [
            "6881",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "dumb-init",
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "qbittorrent-nox"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}