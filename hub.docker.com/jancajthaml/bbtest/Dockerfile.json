{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "amd64/debian:stretch-slim",
      "SourceCode": "FROM amd64/debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "amd64/debian:stretch-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/local/openjdk-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE",
              "Value": "no"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${JAVA_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y --no-install-recommends     apt-utils     ca-certificates\u003e=20161130     curl     gnupg     at     git     tar     gcc     lsof     make     udev     dbus     cron     bison     bzip2     autoconf     tk-dev     uuid-dev     dpkg-dev     libicu57     libuv1     initscripts     libbz2-dev     libffi-dev     libgdbm-dev     libgdbm3     libglib2.0-dev     libreadline-dev     libssl-dev     libsystemd0     libudev1     logrotate     lsb-release     netcat-openbsd     procps     rsyslog     ssmtp     systemd     sysvinit-utils     util-linux     xz-utils     zlib1g-dev     apt-transport-https     libzmq5\u003e=4.2.1~     libzmq3-dev\u003e=4.2.1~     init-system-helpers\u003e=1.18~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"installing nodejs\" \u0026\u0026   curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \u0026\u0026     echo 'deb [ arch=amd64 ] https://deb.nodesource.com/node_10.x xenial main' \u003e /etc/apt/sources.list.d/nodesource.list \u0026\u0026     echo 'deb-src https://deb.nodesource.com/node_10.x xenial main' \u003e\u003e /etc/apt/sources.list.d/nodesource.list \u0026\u0026     echo \"installing openjdk\" \u0026\u0026   mkdir -p ${JAVA_HOME} \u0026\u0026   curl -fsL \"https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u212-b04/OpenJDK8U-x64_linux_8u212b04.tar.gz\" | tar xfz - -C /tmp \u0026\u0026   mv /tmp/openjdk-8u212-b04/* ${JAVA_HOME}/ \u0026\u0026   rm -rf /tmp/openjdk-8u212-b04 \u0026\u0026   ln -s ${JAVA_HOME}/bin/java /bin/java \u0026\u0026   echo \"OK\" \u0026\u0026     echo \"installing mongodb\" \u0026\u0026   curl -s https://www.mongodb.org/static/pgp/server-4.0.asc | apt-key add - \u0026\u0026     echo 'deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse' \u003e /etc/apt/sources.list.d/mongodb-org-4.0.list \u0026\u0026   :"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s \"https://mirrors.mediatemple.net/debian-archive/debian/pool/main/o/openssl/libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb\" -O \u0026\u0026     dpkg -i libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb \u0026\u0026     rm libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y     python3     python3-pip     nodejs     mongodb-org   \u0026\u0026 :"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install           behave==1.2.6       pymongo==3.9.0       psycopg2-binary==2.8.3       requests==2.19.1       ujson==1.35       docker==3.7.0       pyzmq==18.0.2       matplotlib==2.2.2       scipy==1.3.0       numpy==1.16.4       pynng==0.4.0       behave2cucumber==1.0.3     \u0026\u0026     :"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/imklog/{s/^/#/}' /etc/rsyslog.conf \u0026\u0026     sed -ri /etc/systemd/journald.conf -e 's!^#?Storage=.*!Storage=volatile!' \u0026\u0026         systemctl mask --       tmp.mount       etc-hostname.mount       etc-hosts.mount       etc-resolv.conf.mount       -.mount       getty.target       getty-static.service       dev-mqueue.mount       cgproxy.service       apt-daily.service       systemd-tmpfiles-setup-dev.service       systemd-timesyncd.service       systemd-timedated.service       systemd-ask-password-wall.path       systemd-logind.service \u0026\u0026         echo \"root:Docker!\" | chpasswd \u0026\u0026         rm -f       /lib/systemd/system/multi-user.target.wants/*       /etc/systemd/system/*.wants/*       /lib/systemd/system/local-fs.target.wants/*       /lib/systemd/system/sockets.target.wants/*udev*       /lib/systemd/system/sockets.target.wants/*initctl*       /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup*       /lib/systemd/system/systemd-update-utmp* \u0026\u0026         (systemctl set-default multi-user.target || :) \u0026\u0026     (systemctl enable mongod || :)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "amd64/docker:18",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/docker",
            "/usr/bin/docker"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/bbtest"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup",
            "/run",
            "/run/lock"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}