{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "deps",
      "BaseName": "node:10.15.1",
      "SourceCode": "FROM node:10.15.1 AS deps",
      "Platform": "",
      "As": "deps",
      "From": {
        "Image": "node:10.15.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \tlibxkbfile-dev \tlibsecret-1-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yarn@1.13"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "yarn \u0026\u0026 NODE_ENV=production yarn task build:server:binary"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "docker",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04 AS docker",
      "Platform": "",
      "As": "docker",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get install -y docker-ce-cli"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \tcurl \tdumb-init \tgit \tlocales \topenssl \tnet-tools \tsudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser --gecos '' --disabled-password coder \u0026\u0026 \techo \"coder ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers.d/nopasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "coder"
        },
        {
          "CmdLine": [
            "mkdir -p /home/coder/project"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/coder/project"
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "CmdLine": [
            "dumb-init",
            "code-server"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "docker",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/docker",
            "/usr/local/bin/docker"
          ]
        },
        {
          "Chown": "",
          "From": "deps",
          "Name": "copy",
          "SourcesAndDest": [
            "/src/packages/server/cli-linux-x64",
            "/usr/local/bin/code-server"
          ]
        }
      ]
    }
  ]
}