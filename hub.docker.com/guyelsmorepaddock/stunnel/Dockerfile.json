{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Key": "STUNNEL_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "IMAGE_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "set -x  \u0026\u0026 addgroup -S stunnel  \u0026\u0026 adduser -S -G stunnel stunnel  \u0026\u0026 apk update  \u0026\u0026 apk add --update --no-cache         ca-certificates         gettext         libintl         openssl-dev         wget         build-base         linux-headers         openssl  \u0026\u0026 cp -v /usr/bin/envsubst /usr/local/bin/  \u0026\u0026 apk del --purge gettext  \u0026\u0026 mkdir -p /tmp/src  \u0026\u0026 cd /tmp/src  \u0026\u0026 wget https://www.stunnel.org/downloads/stunnel-${STUNNEL_VERSION}.tar.gz  \u0026\u0026 tar -zxvf stunnel-${STUNNEL_VERSION}.tar.gz  \u0026\u0026 cd stunnel-${STUNNEL_VERSION}  \u0026\u0026 ./configure  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 apk del --purge          openssl-dev          wget          build-base          linux-headers  \u0026\u0026 rm -rf /var/cache/apk /tmp/src  \u0026\u0026 apk --no-network info openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.template",
            "openssl.cnf",
            "/srv/stunnel/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/srv/"
          ]
        },
        {
          "CmdLine": [
            "set -x  \u0026\u0026 chmod +x /srv/entrypoint.sh  \u0026\u0026 mkdir -p /var/run/stunnel /etc/stunnel  \u0026\u0026 chown -vR stunnel:stunnel /var/run/stunnel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/srv/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "stunnel",
            "/etc/stunnel/stunnel.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Inveniem - Guy Elsmore-Paddock\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/guypaddock/stunnel\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"STunnel Docker Container\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$IMAGE_VERSION"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/guypaddock/stunnel.git\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.license",
              "Value": "\"MIT\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}