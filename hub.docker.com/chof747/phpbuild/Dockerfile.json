{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.5",
      "SourceCode": "FROM ubuntu:14.04.5",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.5"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_BUCKET",
              "Value": "\"download.docker.com\""
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "\"17.09.0-ce\""
            },
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "\"stable\""
            },
            {
              "Key": "DOCKER_SHA256",
              "Value": "\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\""
            },
            {
              "Key": "DIND_COMMIT",
              "Value": "\"3b5fac462d21ca164b3778647420016315289034\""
            },
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "\"1.21.2\""
            },
            {
              "Key": "GITVERSION_VERSION",
              "Value": "\"3.6.5\""
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "\"noninteractive\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 echo 'Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/99use-gzip-compression     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install software-properties-common -y --no-install-recommends     \u0026\u0026 apt-add-repository ppa:git-core/ppa     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install git=1:2.* -y --no-install-recommends     \u0026\u0026 git version     \u0026\u0026 apt-get install -y --no-install-recommends openssh-client=1:6.6*     \u0026\u0026 mkdir ~/.ssh     \u0026\u0026 touch ~/.ssh/known_hosts     \u0026\u0026 ssh-keyscan -t rsa,dsa -H github.com \u003e\u003e ~/.ssh/known_hosts     \u0026\u0026 ssh-keyscan -t rsa,dsa -H bitbucket.org \u003e\u003e ~/.ssh/known_hosts     \u0026\u0026 chmod 600 ~/.ssh/known_hosts     \u0026\u0026 apt-get install -y --no-install-recommends        wget=1.15-* python=2.7.* python2.7-dev=2.7.* fakeroot=1.20-* ca-certificates        tar=1.27.* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.*        bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.*        libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* libdb-dev=1:5.3.*        libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.*        libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.*        libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.*        libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-*        libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.*        libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-*        patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* unzip=6.0-* curl=7.35.*        e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.*        mono-mcs=3.2.* less=458-* groff=1.22.* liberror-perl=0.17-*        asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.*        libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-*        libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-*        libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.*        sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.*     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip     \u0026\u0026 mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION}     \u0026\u0026 unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION}     \u0026\u0026 rm /tmp/GitVersion_${GITVERSION_VERSION}.zip     \u0026\u0026 echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe \\$@\" \u003e\u003e /usr/local/bin/gitversion     \u0026\u0026 chmod +x /usr/local/bin/gitversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz     \u0026\u0026 echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c -     \u0026\u0026 tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     \u0026\u0026 rm docker.tgz     \u0026\u0026 docker -v     \u0026\u0026 addgroup dockremap     \u0026\u0026 useradd -g dockremap dockremap     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subuid     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subgid     \u0026\u0026 wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind     \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 \u003e /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     \u0026\u0026 docker-compose version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget \"https://bootstrap.pypa.io/2.6/get-pip.py\" -O /tmp/get-pip.py     \u0026\u0026 python /tmp/get-pip.py     \u0026\u0026 pip install awscli==1.*     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerd-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SRC_DIR",
              "Value": "\"/usr/src\""
            },
            {
              "Key": "PHP_VERSION",
              "Value": "5.6.33"
            },
            {
              "Key": "PHP_DOWNLOAD_SHA",
              "Value": "\"9004995fdf55f111cd9020e8b8aff975df3d8d4191776c601a46988c375f3553\""
            },
            {
              "Key": "PHPPATH",
              "Value": "\"/php\""
            },
            {
              "Key": "PHP_INI_DIR",
              "Value": "\"/usr/local/etc/php\""
            },
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector -fpic -fpie -O2\""
            },
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            },
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.6.3"
            },
            {
              "Key": "COMPOSER_DOWNLOAD_SHA",
              "Value": "\"52cb7bbbaee720471e3b34c8ae6db53a38f0b759c06078a80080db739e4dcab6\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_SRC_DIR",
              "Value": "\"$SRC_DIR/php\""
            },
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"$PHP_CFLAGS\""
            },
            {
              "Key": "COMPOSER_URL",
              "Value": "\"https://getcomposer.org/download/$COMPOSER_VERSION/composer.phar\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y mysql-server default-jdk rsync     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apt-get install -y language-pack-en-base     \u0026\u0026 LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends                php7.2 php7.2-mysql php7.2-cli php7.2-xml php7.2-curl php7.2-dom php7.2-gd php7.2-mbstring php7.2-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 echo 'date.timezone=\"Europe/Vienna\"' \u003e\u003e /etc/php/7.2/cli/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 cp /usr/share/zoneinfo/Europe/Vienna /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe;     wget $COMPOSER_URL;     echo \"$COMPOSER_DOWNLOAD_SHA *composer.phar\" | sha256sum -c -;     mv ./composer.phar /usr/local/bin/composer;     chmod +x /usr/local/bin/composer;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe      \u0026\u0026 find /var/lib/mysql -type f -exec touch {} \\;      \u0026\u0026 sed '/^\\[mysqld\\]/a secure_file_priv=' -i /etc/mysql/my.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends        python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 pip3 install --upgrade pip     \u0026\u0026 pip3 install dbversions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$PHPPATH"
        }
      ]
    }
  ]
}