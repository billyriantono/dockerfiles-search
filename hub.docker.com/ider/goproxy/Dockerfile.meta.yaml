MetaArgs: null
Stages:
- As: builder
  BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.10.3
    Name: env
  - CmdLine:
    - "set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev
      \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go
      env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\"
      \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\";
      \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387'
      ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\";
      \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz'
      | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src;
      \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch
      -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del
      .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - Key: GOPROXY_VERSION
    Name: arg
    Value: master
  - CmdLine:
    - "apk update; apk upgrade;     apk add --no-cache git;     cd /go/src/;     mkdir
      github.com;     mkdir github.com/snail007;     cd github.com/snail007;     git
      clone https://github.com/snail007/goproxy.git; \tcd goproxy;     git checkout
      ${GOPROXY_VERSION};     CGO_ENABLED=0 GOOS=linux go build -ldflags \"-s -w\"
      -a -installsuffix cgo -o proxy;     chmod 0777 proxy"
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: builder
  Platform: ""
  SourceCode: FROM alpine:3.7 AS builder
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - mkdir /proxy && chmod 0777 /proxy
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/snail007/goproxy/proxy
    - /proxy/
  - CmdLine:
    - cd /proxy  && ./proxy ${OPTS}
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
