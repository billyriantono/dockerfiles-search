{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Darren Wurf \u003cgithub@darrenwurf.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"v1.0.0\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get -y install --no-install-recommends         python3         build-essential         python3-dev         python3-pip         python3-setuptools         cython3         libsnappy-dev         nodejs         npm         freetds-bin         golang         git         libzmq3-dev         pkg-config   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache     jupyterlab \tpandas \tpandas-msgpack \tfeather-format \tfastparquet \tparquet     plotly \tgraphviz \tseaborn \tpymssql     psycopg2 \tsqlalchemy-redshift     path.py     requests     python-dateutil     pytz     sh     lxml     beautifulsoup4     jmespath     sqlalchemy     pyyaml     chardet     boto3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LGOPATH",
              "Value": "/lgo"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $GOPATH  \u0026\u0026 go get github.com/yunabe/lgo/cmd/lgo  \u0026\u0026 go get -d github.com/yunabe/lgo/cmd/lgo-internal  \u0026\u0026 $(go env GOPATH)/bin/lgo install  \u0026\u0026 python3 $(go env GOPATH)/src/github.com/yunabe/lgo/bin/install_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install     @jupyter-widgets/jupyterlab-manager     @jupyter-widgets/jupyterlab-sidecar     @jupyterlab/plotly-extension     jupyterlab_bokeh     qgrid     pylantern     jupyter-leaflet     @jupyterlab/git     @jupyterlab/toc     @jupyterlab/statusbar  \u0026\u0026 npm cache clean --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m ubuntu  \u0026\u0026 mkdir /notebooks  \u0026\u0026 chown ubuntu.ubuntu /notebooks  \u0026\u0026 chown -R ubuntu.ubuntu /go /lgo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebooks"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "Name": "user",
          "User": "ubuntu"
        },
        {
          "CmdLine": [
            "jupyter lab --no-browser --ip 0.0.0.0 --port 8888 /notebooks"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}