MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: Harsh Vakharia <harshjv@gmail.com>
    Name: maintainer
  - CmdLine:
    - groupadd -r mongodb && useradd -r -g mongodb mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r postgres && useradd -r -g postgres postgres
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.9"
    Name: env
  - CmdLine:
    - set -x &&     apt-get update &&     apt-get install -y --no-install-recommends
      ca-certificates wget &&     dpkgArch="$(dpkg --print-architecture | awk -F-
      '{ print $NF }')" &&     wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"
      &&     wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"
      &&     export GNUPGHOME="$(mktemp -d)" &&     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 &&     gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu &&     rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc
      &&     chmod +x /usr/local/bin/gosu &&     gosu nobody true
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales &&     localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias
      en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - apt-get install -y --no-install-recommends git curl nano vim supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: DFFA3DCF326E302C4787673A01C4E7FAAAB2461C     42F3E95A2C4F08279C4960ADD68FA50FEA312927     B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    Name: env
  - CmdLine:
    - set -ex &&     for key in $GPG_KEYS; do       apt-key adv --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key";     done
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "insecure" >> ~/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "gem: --no-ri --no-rdoc" > ~/.gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source /etc/profile.d/rvm.sh &&     rvm requirements &&     rvm
      install 2.2.2 &&     gem install rake bundler &&     bundle config mirror.https://rubygems.org
      http://104.155.147.226:9292 &&     bundle config mirror.https://rubygems.org.fallback_timeout
      3"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /etc/profile.d/rvm.sh" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.6/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      && nvm install 6
    Name: run
    PrependShell: true
  - Env:
    - Key: MONGO_MAJOR
      Value: "3.2"
    Name: env
  - Env:
    - Key: MONGO_VERSION
      Value: 3.2.9
    Name: env
  - CmdLine:
    - echo "deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/$MONGO_MAJOR
      main" > /etc/apt/sources.list.d/mongodb-org.list
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.5"
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.5.4-1.pgdg80+1
    Name: env
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main" $PG_MAJOR
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&     apt-get update &&     apt-get install -y --no-install-recommends     mongodb-org=$MONGO_VERSION     mongodb-org-server=$MONGO_VERSION     mongodb-org-shell=$MONGO_VERSION     mongodb-org-mongos=$MONGO_VERSION     mongodb-org-tools=$MONGO_VERSION
      &&     rm -rf /var/lib/mongodb &&     mv /etc/mongod.conf /etc/mongod.conf.orig
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/db /data/configdb &&     chown -R mongodb:mongodb /data/db /data/configdb
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&     apt-get install -y --no-install-recommends postgresql-common &&     sed
      -ri "s/#(create_main_cluster) .*$/\1 = false/" /etc/postgresql-common/createcluster.conf
      &&     apt-get install -y     postgresql-$PG_MAJOR=$PG_VERSION     postgresql-contrib-$PG_MAJOR=$PG_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends build-essential     libpq-dev libxml2-dev
      cmake     libxslt1-dev libmagickwand-dev libjpeg-dev     libpng-dev libgmp3-dev
      libqtwebkit-dev     qt4-qmake libqt4-webkit libqt4-dev xvfb     advancecomp
      gifsicle jhead jpegoptim libjpeg-progs     optipng pngcrush pngquant     libcurl4-openssl-dev     libedit-dev
      libssl-dev libxml2-dev     libsqlite3-dev sqlite3     git curl vim nano     postgresql-client
      redis-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/
      &&     ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ &&     sed
      -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/share/postgresql/postgresql.conf.sample
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start_postgres
    - /start_postgres
  - CmdLine:
    - chmod +x /start_postgres
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - mkdir /adwyze
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /adwyze
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
