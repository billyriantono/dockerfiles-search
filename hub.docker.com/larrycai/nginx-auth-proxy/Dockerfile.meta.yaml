MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -q     && apt-get install -yf build-essential python-software-properties
      software-properties-common     && add-apt-repository ppa:nginx/stable     &&
      apt-get update -q     && apt-get -y install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libpcre3-dev zlib1g-dev libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -s http://nginx.org/download/nginx-1.6.2.tar.gz | tar -xz -C /tmp \t&&
      cd /tmp/nginx-1.6.2 \t&& ./configure --with-http_ssl_module --with-http_auth_request_module
      && make && make install"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - server.crt
    - /etc/ssl/certs/docker-registry
  - Chown: ""
    Name: add
    SourcesAndDest:
    - server.key
    - /etc/ssl/private/docker-registry
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/nginx.conf
    - /usr/local/nginx/conf/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/docker-registry.htpasswd
    - /usr/local/nginx/conf/docker-registry.htpasswd
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/nginx.default
    - /usr/local/nginx/conf/sites-enabled/default
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /start.sh
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
