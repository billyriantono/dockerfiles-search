MetaArgs: null
Stages:
- BaseName: python:3.7.2-slim-stretch
  Commands:
  - CmdLine:
    - apt-get update -y && apt-get install -y --no-install-recommends curl=7.52.1-5+deb9u9
      make=4.1-9.1                                                  software-properties-common=0.96.20.2-1                                                  build-essential=12.3                                                  git=1:2.11.0-3+deb9u4                                                  wget                       &&
      apt-get clean                       && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: '"/root"'
    Name: env
  - CmdLine:
    - mkdir -p ${HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c 'curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
      | python'
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${HOME}/.poetry/bin:${PATH}"'
    Name: env
  - CmdLine:
    - poetry --version
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: WORKON_HOME
      Value: '"${HOME}/.virtualenvs"'
    Name: env
  - CmdLine:
    - mkdir -p "${WORKON_HOME}"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install virtualenvwrapper
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source virtualenvwrapper.sh && mkvirtualenv fastlane"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R root:root ${WORKON_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: VENV_PATH
      Value: '"${WORKON_HOME}/fastlane/bin"'
    Name: env
  - Env:
    - Key: VIRTUAL_ENV
      Value: ${WORKON_HOME}/fastlane
    Name: env
  - Env:
    - Key: PATH
      Value: '"${WORKON_HOME}/fastlane/bin:${PATH}"'
    Name: env
  - CmdLine:
    - pip install honcho==1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pyproject.toml
    - /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - poetry.lock
    - /app
  - CmdLine:
    - poetry install --no-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - poetry install --no-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Verifying fastlane version..." && poetry run fastlane version
    Name: run
    PrependShell: true
  - Env:
    - Key: REDIS_URL
      Value: '"redis://redis:6379/0"'
    Name: env
  - Env:
    - Key: DOCKER_HOSTS
      Value: '"[{\"match\": \"\", \"hosts\": [\"localhost:2376\"], \"maxRunning\":2}]"'
    Name: env
  - Env:
    - Key: MONGODB_CONFIG
      Value: '"{\"host\": \"mongodb://mongo:27017/fastlane\", \"db\": \"fastlane\",
        \"serverSelectionTimeoutMS\": 100, \"connect\": false}"'
    Name: env
  - Env:
    - Key: MONGODB_HOST
      Value: '"mongo:27017"'
    Name: env
  - Env:
    - Key: REDIS_HOST
      Value: '"redis:6379"'
    Name: env
  - CmdLine:
    - dockerize -wait tcp://$MONGODB_HOST -wait tcp://$REDIS_HOST honcho --no-colour
      start
    Name: cmd
    PrependShell: true
  From:
    Image: python:3.7.2-slim-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7.2-slim-stretch
