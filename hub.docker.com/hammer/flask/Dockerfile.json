{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"takemi.ohama@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -yq dist-upgrade  \u0026\u0026 apt-get install -yq --no-install-recommends     git wget curl libreadline-dev  bzip2 vim ca-certificates     sudo locales fonts-liberation libxrender1 mysql-client     language-pack-ja-base language-pack-ja fonts-mplus ssh     graphviz gcc python-pip  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/\" /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-locale LANG=ja_JP.UTF-8 LANGUAGE=\"ja_JP:ja\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/var/lib/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_VERSION",
              "Value": "/var/lib/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash docker \u0026\u0026     usermod -G users docker \u0026\u0026     usermod -G users root \u0026\u0026     echo '%users ALL=(ALL:ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers \u0026\u0026     mkdir /home/docker/.ssh \u0026\u0026 chown docker.docker /home/docker/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \u0026\u0026     /bin/bash Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Miniconda3-latest-Linux-x86_64.sh \u0026\u0026     ln -s $CONDA_DIR/bin/conda /usr/bin/conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes conda \u0026\u0026     conda config --system --add channels conda-forge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     'conda-build'     'readline'     'cython'     'mysql-connector-python'     'pymysql'     'gensim'     'xgboost'     'tensorflow'     'imbalanced-learn'     'flask'     \u0026\u0026 conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026     pip install awscli \u0026\u0026     pip install --upgrade awscli \u0026\u0026     echo \"complete -C aws_completer aws\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "tail",
            "-f",
            "/dev/null"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}