MetaArgs: null
Stages:
- BaseName: tiangolo/uwsgi-nginx:python3.7
  Commands:
  - CmdLine:
    - apt-get update     && apt-get install -y         build-essential         cmake         git         wget         unzip         yasm         pkg-config         libswscale-dev         libtbb2         libtbb-dev         libjpeg-dev         libpng-dev         libtiff-dev         libavformat-dev         libpq-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Env:
    - Key: OPENCV_VERSION
      Value: '"4.0.1"'
    Name: env
  - CmdLine:
    - wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && unzip
      ${OPENCV_VERSION}.zip && mkdir /opencv-${OPENCV_VERSION}/cmake_binary && cd
      /opencv-${OPENCV_VERSION}/cmake_binary && cmake -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -DWITH_CUDA=OFF   -DWITH_OPENGL=ON   -DWITH_OPENCL=ON   -DWITH_IPP=ON   -DWITH_TBB=ON   -DWITH_EIGEN=ON   -DWITH_V4L=ON   -DBUILD_TESTS=OFF   -DBUILD_PERF_TESTS=OFF   -DCMAKE_BUILD_TYPE=RELEASE   -DCMAKE_INSTALL_PREFIX=$(python3.7
      -c "import sys; print(sys.prefix)")   -DPYTHON_EXECUTABLE=$(which python3.7)   -DPYTHON_INCLUDE_DIR=$(python3.7
      -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")   -DPYTHON_PACKAGES_PATH=$(python3.7
      -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")   ..
      && make install && rm /${OPENCV_VERSION}.zip && rm -r /opencv-${OPENCV_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s   /usr/local/python/cv2/python-3.7/cv2.cpython-37m-x86_64-linux-gnu.so   /usr/local/lib/python3.7/site-packages/cv2.so
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --fix-missing     gfortran     curl     graphicsmagick     libgraphicsmagick1-dev     libatlas-dev     libavcodec-dev     libgtk2.0-dev     liblapack-dev     python3-dev     python3-numpy     software-properties-common     zip
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ &&     mkdir -p dlib &&     git clone -b 'v19.17' --single-branch https://github.com/davisking/dlib.git
      dlib/ &&     cd  dlib/ && python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install face_recognition
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask_cors
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Pillow
    Name: run
    PrependShell: true
  - Env:
    - Key: STATIC_URL
      Value: /static
    Name: env
  - Env:
    - Key: STATIC_PATH
      Value: /app/static
    Name: env
  - Env:
    - Key: STATIC_INDEX
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app
    - /app
  - Name: workdir
    Path: /app
  - Env:
    - Key: PYTHONPATH
      Value: /app
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /entrypoint.sh /uwsgi-nginx-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LISTEN_PORT
      Value: "8081"
    Name: env
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: tiangolo/uwsgi-nginx:python3.7
  Name: ""
  Platform: ""
  SourceCode: FROM tiangolo/uwsgi-nginx:python3.7
