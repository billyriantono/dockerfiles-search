MetaArgs: null
Stages:
- BaseName: ruby:2.6.5
  Commands:
  - Env:
    - Key: DISCOURSE_VERSION
      Value: 2.3.6
    Name: env
  - Env:
    - Key: PG_MAJOR
      Value: "11"
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    - Key: TERM
      Value: xterm-256color
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "curl -sL https://deb.nodesource.com/setup_10.x | bash - && \tapt-get -qq update
      && apt-get -qq install --upgrade -y nodejs > /dev/null && \tnpm install --global
      webpack yarn semver svgo && \tapt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-imagemagick
    - /tmp/install-imagemagick
  - CmdLine:
    - /tmp/install-imagemagick     && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/* /etc/ImageMagick-*/policy.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - ruby -Eutf-8 -e "v = \`convert -version\`; %w{png tiff jpeg freetype}.each {
      |f| unless v.include?(f); STDERR.puts('no ' + f +  ' support in imagemagick');
      exit(-1); end }"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-pngcrush
    - /tmp/install-pngcrush
  - CmdLine:
    - /tmp/install-pngcrush     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-gifsicle
    - /tmp/install-gifsicle
  - CmdLine:
    - /tmp/install-gifsicle     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-pngquant
    - /tmp/install-pngquant
  - CmdLine:
    - /tmp/install-pngquant     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update   && apt-get -qq install --upgrade -y --no-install-recommends     brotli     build-essential     gawk     gifsicle     git     jhead     jpegoptim     libcurl4-openssl-dev     libpq-dev     libreadline-dev     libssl-dev     libtcmalloc-minimal4     libtool     libunwind-dev     libxml2-dev     libxslt-dev     libyaml-dev     optipng     parallel     postgresql-client-${PG_MAJOR}     postgresql-contrib     rsync     sudo     vim     wget     >
      /dev/null   && apt-get -qq clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup --gid 1000 discourse     && adduser --system --uid 1000 --ingroup discourse
      --shell /bin/bash discourse     && cd /home/discourse     && mkdir -p tmp     &&
      git clone --branch v${DISCOURSE_VERSION} https://github.com/discourse/discourse.git     &&
      chown -R discourse:discourse .     && cd /home/discourse/discourse     && git
      remote set-branches --add origin tests-passed
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/discourse/discourse
  - Name: user
    User: discourse:discourse
  - Env:
    - Key: DISCOURSE_SERVE_STATIC_ASSETS
      Value: "true"
    - Key: RAILS_ENV
      Value: production
    Name: env
  - CmdLine:
    - bundle config build.nokogiri --use-system-libraries     && bundle install --deployment
      --without test development --retry 3 --jobs 4     && bundle exec rake maxminddb:get     &&
      find ./vendor/bundle -name tmp -type d -exec rm -rf {} +
    Name: run
    PrependShell: true
  - Env:
    - Key: RAILS_LOG_TO_STDOUT
      Value: "true"
    - Key: RUBY_GC_HEAP_GROWTH_MAX_SLOTS
      Value: "40000"
    - Key: RUBY_GC_HEAP_INIT_SLOTS
      Value: "400000"
    - Key: RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR
      Value: "1.5"
    - Key: RUBY_GLOBAL_METHOD_CACHE_SIZE
      Value: "131072"
    - Key: SPROCKETS_CONCURRENT
      Value: "1"
    - Key: UNICORN_BIND_ALL
      Value: "true"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/environments/production.rb
    - config/environments/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/unicorn.conf.rb
    - config/
  From:
    Image: ruby:2.6.5
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.6.5
