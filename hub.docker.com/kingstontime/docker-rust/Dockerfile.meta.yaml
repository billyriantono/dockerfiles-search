MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Jonathan Kingston <j@kingston.me>
    Name: maintainer
  - Env:
    - Key: RUST_DIR
      Value: rust-1.14.0-x86_64-unknown-linux-gnu
    Name: env
  - Env:
    - Key: RUST_PACKAGE
      Value: $RUST_DIR.tar.gz
    Name: env
  - Env:
    - Key: RUST_DOWNLOAD
      Value: https://static.rust-lang.org/dist/$RUST_PACKAGE
    Name: env
  - Name: workdir
    Path: /rust
  - CmdLine:
    - apk add --no-cache gnupg curl ca-certificates     && curl -fSOL $RUST_DOWNLOAD.asc     &&
      curl -fSOL https://keybase.io/rust/pgp_keys.asc     && curl -fOSL $RUST_DOWNLOAD     &&
      curl -s $RUST_DOWNLOAD.sha256 | sha256sum -c -     && if [ $(gpg pgp_keys.asc
      | grep 108F66205EAEB0AAA8DD5E1C85AB96E6FA1BE5FE | wc -l ) != 1 ]; then       exit
      1;     fi     && gpg --import pgp_keys.asc     && if [ $(gpg2 --logger-fd 1
      --status-fd 1 --always-trust --with-fingerprint --verify $RUST_PACKAGE.asc |
      grep 'Primary key fingerprint' | wc -l) != 1 ]; then       exit 2;     fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzvf $RUST_PACKAGE     && mv $RUST_DIR/* .     && rm -rf $RUST_DIR     &&
      rm -f $RUST_PACKAGE     && rm -f $RUST_PACKAGE.asc     && apk del curl     &&
      ./install.sh;
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
