{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "google/cloud-sdk:slim",
      "SourceCode": "FROM google/cloud-sdk:slim",
      "Platform": "",
      "From": {
        "Image": "google/cloud-sdk:slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -x   \u0026\u0026 HELM_VERSION=\"v2.9.1\"   \u0026\u0026 STERN_VERSION=\"1.6.0\"   \u0026\u0026 JQ_VERSION=\"1.5\"   \u0026\u0026 apt upgrade -y \u0026\u0026 apt update   \u0026\u0026 apt install -y vim bash-completion kubectl git   \u0026\u0026 : \"--- kubectx \u0026 kubens\"   \u0026\u0026 git clone https://github.com/ahmetb/kubectx /tmp/kubectx   \u0026\u0026 mv /tmp/kubectx/kubectx /usr/local/bin/kubectx   \u0026\u0026 mv /tmp/kubectx/kubens /usr/local/bin/kubens   \u0026\u0026 mv /tmp/kubectx/completion/kubectx.bash /etc/bash_completion.d/kubectx   \u0026\u0026 mv /tmp/kubectx/completion/kubens.bash /etc/bash_completion.d/kubens   \u0026\u0026 : \"--- helm\"   \u0026\u0026 curl -L https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar zxv -C /tmp   \u0026\u0026 mv /tmp/linux-amd64/helm /usr/local/bin/helm   \u0026\u0026 : \"--- kube_ps1\"   \u0026\u0026 curl -L -o /usr/local/bin/kube-ps1.sh https://raw.githubusercontent.com/jonmosco/kube-ps1/master/kube-ps1.sh   \u0026\u0026 : \"--- stern\"   \u0026\u0026 curl -L -o /usr/local/bin/stern https://github.com/wercker/stern/releases/download/${STERN_VERSION}/stern_linux_amd64 \u0026\u0026 chmod +x /usr/local/bin/stern   \u0026\u0026 : \"--- jq\"   \u0026\u0026 curl -L -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64   \u0026\u0026 : \"--- fzf\"   \u0026\u0026 git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf   \u0026\u0026 yes y | ~/.fzf/install   \u0026\u0026 : \"--- /root/.bashrc\"   \u0026\u0026 cat /dev/null \u003e /root/.bashrc   \u0026\u0026 echo '. /etc/bash_completion' \u003e\u003e /root/.bashrc   \u0026\u0026 echo '. \u003c(kubectl completion bash)' \u003e\u003e /root/.bashrc   \u0026\u0026 echo '. /usr/local/bin/kube-ps1.sh' \u003e\u003e /root/.bashrc   \u0026\u0026 echo '# . ~/.fzf.bash' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PS1=\"\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PS1+=\"[\\$(date +'\\''%Y-%m-%dT%H:%M:%S%z'\\'')] \"'\u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PS1+=\"\\e[0;34mgcp:\\$(cat /root/.config/gcloud/configurations/config_default | grep project | awk '\\''{print \\$3}'\\'' | grep -e '\\''.*'\\'' || echo \\\"\\e[0;90m project unselected\\\")\\e[0m \"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PS1+=\"\\$(kube_ps1) \"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PS1+=\"\\w \"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PS1+=\"\\\\n# \"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export LC_ALL=\"C.UTF-8\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export HISTSIZE=500000' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export HISTTIMEFORMAT=\"%Y/%m/%d %H:%M:%S\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export PATH=\"$PATH:/root/.fzf/bin\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'export FZF_DEFAULT_OPTS=\"--height 40% --reverse --border --ansi\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias rm=\"rm -i\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias cp=\"cp -i\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias mv=\"mv -i\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias ls=\"ls --color=auto\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias ll=\"ls -lat --color=always\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias grep=\"grep --color\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias ..=\"cd ..\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias d=\"docker\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'alias k=\"kubectl\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo \"bind '\\\"\\eh\\\": backward-kill-word'\" \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo ====================================================================================================' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo Sample Commands.' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* authorize GCP\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ gcloud auth login\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* set default project\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ gcloud projects list\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ gcloud config set project \u003cPROJECT ID\u003e\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* set default region\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ gcloud config set compute/zone asia-northeast1-a\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* list existing clusters\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ gcloud container clusters list\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* fetch Kubernetes credentials\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ gcloud container clusters get-credentials \u003cCLUSTER NAME\u003e\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* list existing Kubernetes resources\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ kubectl get all\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* rename current context\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ kubectx \u003cNEW CONTEXT NAME\u003e=.\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"* change Kubernetes Namespace\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo \"  - $ kubens \u003cNAMESPACE\u003e\"' \u003e\u003e /root/.bashrc   \u0026\u0026 echo 'echo ====================================================================================================' \u003e\u003e /root/.bashrc   \u0026\u0026 : \"--- /root/.vimrc\"   \u0026\u0026 echo 'set encoding=utf-8\"' \u003e\u003e ~/.vimrc   \u0026\u0026 echo 'set fenc=utf-8\"' \u003e\u003e ~/.vimrc   \u0026\u0026 echo ':syntax on\"' \u003e\u003e ~/.vimrc   \u0026\u0026 : \"--- clean cache\"   \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}