MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libtool zlib1g-dev tofrodos sharutils doxygen ncurses-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tcl8.4 xsltproc libstdc++5 subversion autotools-dev tftp-hpa
      tftpd-hpa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zlib1g-dev sharutils patch mysql-common mtd-utils m4 libtool
      libsvn1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y diffstat libneon27-gnutls libpq5 liblzo2-2 libapr1 libaprutil1
      libltdl7-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libxml-xpath-perl libclone-perl libdata-compare-perl libxml-libxml-simple-perl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y cifs-utils lzop gtk-doc-tools xsltproc libncurses-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y quilt xutils-dev expat graphviz autopoint
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gawk build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y byobu curl htop man unzip vim wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y flex bison tcl automake autoconf xsltproc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y squashfs-tools libtool autotools-dev libncurses-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tofrodos cifs-utils libxml2-utils subversion
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y quilt graphviz expat diffstat autopoint
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zlibc zlib1g zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y lzop
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libexpat1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libdbus-1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git-buildpackage
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y parallel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y bc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mtd-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-yaml
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libtool-bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y kmod
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libxml2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -MCPAN -e 'install Algorithm::Diff'
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -MCPAN -e 'install Clone'
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -MCPAN -e 'install Data::Compare'
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -MCPAN -e 'install URI::Split'
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -MCPAN -e 'install XML::LibXML'
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -MCPAN -e 'install XML::XPath'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y vera++
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gemini-cross-toolchains/mips-sphairon-linux-uclibc-v2013.03.tar.bz2
    - /opt
  - CmdLine:
    - chown -R root:root /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y jq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y cmake
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - git-lfs-install-script.deb.sh
    - .
  - CmdLine:
    - bash git-lfs-install-script.deb.sh     && rm git-lfs-install-script.deb.sh     &&
      apt-get install git-lfs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://getcli.jfrog.io | sh     && chmod a+rx jfrog     && mv jfrog
      /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Key: user
    Name: arg
    Value: heinzm
  - CmdLine:
    - groupadd -r -g ${gid} ${user}     && useradd -r -u ${uid} -g ${user} -s /usr/sbin/nologin
      -m -d /home/${user} ${user}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /work
    Name: run
    PrependShell: true
  - CmdLine:
    - chown ${uid}:${gid} /work
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf bash /bin/sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_docker_tests.sh
    - /work
  - CmdLine:
    - chmod a+rx /work/run_docker_tests.sh
    Name: run
    PrependShell: true
  - Name: user
    User: $user
  - Name: workdir
    Path: /work/gemini
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
