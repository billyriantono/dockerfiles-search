MetaArgs:
- DefaultValue: '"fleshgrinder/debian:stretch-build"'
  Key: SHELLCHECK_BUILDER_BASE_IMAGE
  ProvidedValue: null
  Value: '"fleshgrinder/debian:stretch-build"'
- DefaultValue: '"fleshgrinder/debian:stretch"'
  Key: SHELLCHECK_BASE_IMAGE
  ProvidedValue: null
  Value: '"fleshgrinder/debian:stretch"'
Stages:
- As: shellcheck-build
  BaseName: ${SHELLCHECK_BUILDER_BASE_IMAGE}
  Commands:
  - Key: SHELLCHECK_VERSION_REF
    Name: arg
    Value: '"master"'
  - Name: workdir
    Path: /usr/src/shellcheck
  - CmdLine:
    - apt-install git ghc cabal-install  && git clone https://github.com/koalaman/shellcheck.git
      .  && git checkout ${SHELLCHECK_VERSION_REF}  && cabal update && cabal install
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/root/.cabal/bin"'
    Name: env
  - CmdLine:
    - mkdir -p  /package/bin /package/lib  && cp "$(command -v shellcheck)" /package/bin/  &&
      ldd "$(command -v shellcheck)" | grep "=> /" | awk '{print $3}' | xargs -I '{}'
      cp -v '{}' /package/lib/
    Name: run
    PrependShell: true
  From:
    Image: ${SHELLCHECK_BUILDER_BASE_IMAGE}
  Name: shellcheck-build
  Platform: ""
  SourceCode: FROM ${SHELLCHECK_BUILDER_BASE_IMAGE} AS shellcheck-build
- As: shellcheck
  BaseName: ${SHELLCHECK_BASE_IMAGE}
  Commands:
  - Chown: ""
    From: shellcheck-build
    Name: copy
    SourcesAndDest:
    - /package/bin/
    - /usr/local/bin/
  - Chown: ""
    From: shellcheck-build
    Name: copy
    SourcesAndDest:
    - /package/lib/
    - /usr/local/lib/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/docker/bin/shellcheckw
    - /usr/local/bin/shellcheckw
  - CmdLine:
    - apt-install bash file  && ldconfig /usr/local/lib
    Name: run
    PrependShell: true
  - CmdLine:
    - shellcheckw
    Name: entrypoint
    PrependShell: false
  From:
    Image: ${SHELLCHECK_BASE_IMAGE}
  Name: shellcheck
  Platform: ""
  SourceCode: FROM ${SHELLCHECK_BASE_IMAGE} AS shellcheck
