{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LIBRDKAFKA_VERSION",
              "Value": "0.11.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CPLUS_INCLUDE_PATH",
              "Value": "/usr/local/include"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y -qq curl     \u0026\u0026 apt-get install -y -qq         $DEBIAN_PACKAGES         $DEBIAN_DEV_PACKAGES     \u0026\u0026 curl -Lk -o /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz     \u0026\u0026 tar -xzf /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz -C /root     \u0026\u0026 cd /root/librdkafka-${LIBRDKAFKA_VERSION}     \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 make clean \u0026\u0026 ./configure --clean     \u0026\u0026 cd /     \u0026\u0026 pip install requests confluent-kafka==0.11.0     \u0026\u0026 apt-get -qq -y --purge remove         $DEBIAN_DEV_PACKAGES     \u0026\u0026 apt-get -qq -y autoremove     \u0026\u0026 apt-get -qq -y clean     \u0026\u0026 rm /var/lib/apt/lists/* -Rf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Expression": "COPY requirements.txt /app",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN pip3 install -r /app/requirements.txt",
          "Name": "onbuild"
        }
      ]
    }
  ]
}