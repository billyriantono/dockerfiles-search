MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Justin DeMartino <jdemarti@gmail.com>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"Docker image for building arm-embedded projects"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:team-gcc-arm-embedded/ppa &&     add-apt-repository ppa:git-core/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y   git   cmake   make   automake   autoconf   libtool   g++   ninja-build   python-dev   ccache   unzip   python-setuptools   python-dev   curl   srecord   gcc-arm-embedded   locales
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     git-lfs
    Name: run
    PrependShell: true
  - CmdLine:
    - git lfs install
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install gitchangelog pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install nrfutil
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jumper
    Name: run
    PrependShell: true
  - Env:
    - Key: PROTOBUF_VERSION
      Value: '"3.1.0"'
    Name: env
  - Env:
    - Key: PROTOBUF_CPP
      Value: protobuf-cpp-${PROTOBUF_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: PROTOBUF_URL
      Value: https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/${PROTOBUF_CPP}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${PROTOBUF_URL}
    - ${PROTOBUF_CPP}
  - CmdLine:
    - tar -zxf ${PROTOBUF_CPP} -C /tmp &&     cd /tmp/protobuf-${PROTOBUF_VERSION}
      &&     ./configure &&     make &&     make install &&     ldconfig &&     easy_install
      protobuf &&     cd - &&     rm -rf ${PROTOBUF_CPP} /tmp/protobuf-${PROTOBUF_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&   rm -rf /var/lib/apt
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
