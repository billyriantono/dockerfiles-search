{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Justin DeMartino \u003cjdemarti@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Docker image for building arm-embedded projects\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:team-gcc-arm-embedded/ppa \u0026\u0026     add-apt-repository ppa:git-core/ppa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   git   cmake   make   automake   autoconf   libtool   g++   ninja-build   python-dev   ccache   unzip   python-setuptools   python-dev   curl   srecord   gcc-arm-embedded   locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     git-lfs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git lfs install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install gitchangelog pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install nrfutil"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jumper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PROTOBUF_VERSION",
              "Value": "\"3.1.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOBUF_CPP",
              "Value": "protobuf-cpp-${PROTOBUF_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOBUF_URL",
              "Value": "https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/${PROTOBUF_CPP}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${PROTOBUF_URL}",
            "${PROTOBUF_CPP}"
          ]
        },
        {
          "CmdLine": [
            "tar -zxf ${PROTOBUF_CPP} -C /tmp \u0026\u0026     cd /tmp/protobuf-${PROTOBUF_VERSION} \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     ldconfig \u0026\u0026     easy_install protobuf \u0026\u0026     cd - \u0026\u0026     rm -rf ${PROTOBUF_CPP} /tmp/protobuf-${PROTOBUF_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026   rm -rf /var/lib/apt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -i en_US -f UTF-8 en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}