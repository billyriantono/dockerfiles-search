{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:mainline-alpine",
      "SourceCode": "FROM nginx:mainline-alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:mainline-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Florian Wartner \u003cflorian@wartner.io\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk --update --no-cache add ca-certificates     bash supervisor git nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://php.codecasts.rocks/php-alpine.rsa.pub",
            "/etc/apk/keys/php-alpine.rsa.pub"
          ]
        },
        {
          "Key": "PHP_VERSION",
          "Name": "arg",
          "Value": "7.3"
        },
        {
          "Key": "ALPINE_VERSION",
          "Name": "arg",
          "Value": "3.9"
        },
        {
          "Key": "COMPOSER_HASH",
          "Name": "arg",
          "Value": "48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5"
        },
        {
          "Key": "NGINX_HTTP_PORT",
          "Name": "arg",
          "Value": "80"
        },
        {
          "Key": "NGINX_HTTPS_PORT",
          "Name": "arg",
          "Value": "443"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/v${ALPINE_VERSION}/main\" \u003e /etc/apk/repositories \u0026\u0026     echo \"http://dl-cdn.alpinelinux.org/alpine/v${ALPINE_VERSION}/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@php https://php.codecasts.rocks/v${ALPINE_VERSION}/php-${PHP_VERSION}\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps     autoconf     gcc     libc-dev     make     openssl-dev     pcre-dev     zlib-dev     linux-headers     curl     gnupg     libxslt-dev     gd-dev     geoip-dev     perl-dev     luajit-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update php7-dev@php     php-fpm@php     php7-pear@php     libmcrypt-dev     freetype-dev     libpng-dev     libpq     php@php     php-openssl@php     php-pdo@php     php-pdo_mysql@php     php-mbstring@php     php-phar@php     php-exif@php     php-mysqlnd@php     php-session@php     php-dom@php     php-ctype@php     php-posix@php     php-zlib@php     php-json@php     php-bcmath@php     php-curl@php     php-pcntl@php     php-xml@php     php-zip@php     \u0026\u0026 ln -s /usr/bin/php7 /usr/bin/php     \u0026\u0026 pecl install pecl.php.net/mcrypt-1.0.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www \u0026\u0026     mkdir -p /run/php \u0026\u0026     mkdir -p /run/nginx \u0026\u0026     mkdir -p /var/log/supervisor \u0026\u0026     mkdir -p /etc/nginx/sites-enabled \u0026\u0026     mkdir -p /etc/nginx/sites-available \u0026\u0026     rm /etc/nginx/nginx.conf \u0026\u0026     rm /etc/php7/php-fpm.d/www.conf \u0026\u0026     rm /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php -r \"if (hash_file('SHA384', 'composer-setup.php') === '${COMPOSER_HASH}') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \u0026\u0026     php composer-setup.php --install-dir=/usr/bin --filename=composer \u0026\u0026     php -r \"unlink('composer-setup.php');\"     \u0026\u0026 composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/supervisor/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/supervisor/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/nginx/site.conf",
            "/etc/nginx/sites-available/default.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/php/php.ini",
            "/etc/php7/php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/php-fpm/www.conf",
            "/etc/php7/php-fpm.d/www.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "${NGINX_HTTPS_PORT}",
            "${NGINX_HTTP_PORT}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}