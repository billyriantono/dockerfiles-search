MetaArgs: null
Stages:
- BaseName: alpine:3.11
  Commands:
  - Key: VERSION
    Name: arg
    Value: 0.0.5
  - Labels:
    - Key: maintainer
      Value: '"zgist"'
    - Key: org.label-schema.name
      Value: '"Simple-obfs"'
    - Key: org.label-schema.version
      Value: $VERSION
    Name: label
  - Env:
    - Key: SERVER_ADDR
      Value: 0.0.0.0
    - Key: SERVER_PORT
      Value: "8388"
    - Key: DNS_SERVER
      Value: 8.8.8.8
    - Key: OBFS_OPTS
      Value: http
    - Key: FORWARD
      Value: 127.0.0.1:8388
    - Key: FAILOVER
      Value: www.163.com:80
    Name: env
  - CmdLine:
    - set -ex &&     apk add --no-cache         --virtual .build-deps         autoconf         automake         build-base         curl         libev-dev         libtool         linux-headers         openssl-dev         pcre-dev         tar
      &&     mkdir -p /tmp/obfs &&     cd /tmp/obfs &&     curl -sSL https://github.com/shadowsocks/simple-obfs/archive/486bebd.tar.gz
      | tar xz --strip 1 &&     curl -sSL https://github.com/shadowsocks/libcork/archive/29d7cbafc4b983192baeb0c962ab1ff591418f56.tar.gz
      | tar xz --strip 1 -C libcork &&     ./autogen.sh &&     ./configure --prefix=/usr
      --disable-documentation &&     make install &&     runDeps="$(         scanelf
      --needed --nobanner /usr/bin/obfs-*             | awk '{ gsub(/,/, "\nso:",
      $2); print "so:" $2 }'             | xargs -r apk info --installed             |
      sort -u     )" &&     apk add --no-cache --virtual .run-deps $runDeps &&     apk
      del .build-deps &&     cd / && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - $SERVER_PORT
  - CmdLine:
    - obfs-server         --fast-open         -a nobody         -s $SERVER_ADDR         -p
      $SERVER_PORT         -d $DNS_SERVER         --obfs $OBFS_OPTS         -r $FORWARD
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.11
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.11
