MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - Maintainer: '"Kostiantyn Iarovyi" <kiarovyi@cisco.com>'
    Name: maintainer
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: CONSUL_VERSION
      Value: 0.6.4
    Name: env
  - Env:
    - Key: AMBARI_REPO_URL
      Value: http://128.107.33.156/repo/7/ambari/2.2.0/RPMS/ambari.repo
    Name: env
  - Env:
    - Key: JDK
      Value: jdk-8u60-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JDK_VER
      Value: jdk1.8.0_60
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/jdk64/$JDK_VER/
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/pgsql/data
    Name: env
  - CmdLine:
    - yum -y update; yum clean all;     (cd /lib/systemd/system/sysinit.target.wants/;
      for i in *; do [ $i ==         systemd-tmpfiles-setup.service ] || rm -f $i;
      done);     rm -f /lib/systemd/system/multi-user.target.wants/*;    rm -f /etc/systemd/system/*.wants/*;    rm
      -f /lib/systemd/system/local-fs.target.wants/*;     rm -f /lib/systemd/system/sockets.target.wants/*udev*;     rm
      -f /lib/systemd/system/sockets.target.wants/*initctl*;     rm -f /lib/systemd/system/basic.target.wants/*;    rm
      -f /lib/systemd/system/anaconda.target.wants/*;
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /sys/fs/cgroup
  - CmdLine:
    - /usr/sbin/init
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - yum -y install wget &&     wget $AMBARI_REPO_URL -O /etc/yum.repos.d/ambari.repo
      &&     yum -y install epel-release python-pip curl tar initscripts unzip ambari-server
      openssh-clients dnsmasq
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/jdk64 &&     cd /usr/jdk64 &&     wget http://public-repo-1.hortonworks.com/ARTIFACTS/$JDK
      &&     tar -xf $JDK &&     rm -f $JDK
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://public-repo-1.hortonworks.com/ARTIFACTS/jce_policy-8.zip -P /var/lib/ambari-server/resources/
      &&     cd /var/lib/ambari-server/resources &&     unzip jce_policy-8.zip &&     rm
      -f jce_policy-8.zip &&     mv UnlimitedJCEPolicyJDK8/*.jar . &&     rm -rf UnlimitedJCEPolicyJDK8
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://128.107.33.156/repo/7/mantl.tar.gz -P /var/lib/ambari-server/resources/stacks/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://128.107.33.156/repo/ambari-views.tar.gz -P /var/lib/ambari-server/resources/views/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://128.107.33.156/repo/7/pangea_kubernetes.tar.gz -P /var/lib/ambari-server/resources/stacks/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://128.107.33.156/repo/7/pangea_kubernetes_views.tar.gz -P /var/lib/ambari-server/resources/views/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/lib/ambari-server/resources/stacks && for file in *.tar.gz; do tar -zxf
      $file; done && rm -rf *.tar.gz &&     cd /var/lib/ambari-server/resources/views
      && for file in *.tar.gz; do tar -zxf $file; done && rm -rf *.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./service-stub.sh
    - /usr/bin/
  - CmdLine:
    - sed -i 's/\/usr\/bin\/env service/\/usr\/bin\/service-stub.sh/g'         /usr/lib/python2.6/site-packages/ambari_server/dbConfiguration_linux.py
      &&     sed -i 's/exit 1/PGDATA=\/var\/lib\/pgsql\/data; PGPORT=5432/g'         /usr/bin/postgresql-setup
      && service-stub.sh postgresql initdb && service-stub.sh postgresql start
    Name: run
    PrependShell: true
  - CmdLine:
    - ambari-server setup -s -j /usr/jdk64/$JDK_VER/
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/if Script.is_hdp_stack_greater_or_equal.*$/if config:/g'     /var/lib/ambari-server/resources/common-services/ZOOKEEPER/3.4.5.2.0/package/scripts/params_linux.py
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y consul consul-ui
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./consul.json
    - /etc/consul/consul.json
  - CmdLine:
    - touch /etc/dnsmasq.d/10-consul && chmod 777 /etc/dnsmasq.d/10-consul &&     echo
      "server=/consul/127.0.0.1#8600" > /etc/dnsmasq.d/10-consul &&     echo "server=/consul/in-addr.arpa/127.0.0.1#8600"
      >> /etc/dnsmasq.d/10-consul &&     (echo "server=8.8.8.8"; echo "server=8.8.4.4")
      >> /etc/dnsmasq.d/10-consul &&     chsh -s /bin/bash consul
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./ifup-local.sh
    - /sbin/ifup-local
  - CmdLine:
    - chmod +x /sbin/ifup-local
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./ambari-server.service
    - /usr/lib/systemd/system/
  - CmdLine:
    - systemctl enable consul &&     systemctl enable ambari-server &&     systemctl
      enable dnsmasq
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "53"
    - "6181"
    - "8080"
    - "8300"
    - "8301"
    - "8302"
    - "8400"
    - "8500"
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
