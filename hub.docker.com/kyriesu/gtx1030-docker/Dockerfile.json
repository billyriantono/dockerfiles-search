{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "cuda",
              "Value": "cuda_8.0.61_375.26_linux-run"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "cudnn",
              "Value": "cudnn-8.0-linux-x64-v6.0.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y sudo curl wget vim git software-properties-common \u0026\u0026     apt-get install -y perl make build-essential pkg-config cmake g++ \u0026\u0026     apt-get install -y libglu1-mesa libxi-dev libxmu-dev libglu1-mesa-dev python3 python3-pip libsm6 libxrender1 libxext-dev \u0026\u0026     add-apt-repository -y ppa:graphics-drivers/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get -y upgrade \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt install --no-install-recommends -y nvidia-390 nvidia-390-dev libcuda1-390 \u0026\u0026     wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/${cuda} \u0026\u0026     chmod +x ${cuda} \u0026\u0026     ./${cuda} --silent --toolkit --samples \u0026\u0026     echo \"/usr/local/cuda-8.0/lib64\" \u003e\u003e /etc/ld.so.conf \u0026\u0026     echo \"export PATH=$PATH:/usr/local/cuda-8.0/bin\" \u003e\u003e ~/.bashrc \u0026\u0026     wget http://developer.download.nvidia.com/compute/redist/cudnn/v6.0/${cudnn} \u0026\u0026     tar -xzvf ${cudnn} \u0026\u0026     cp -P cuda/include/cudnn.h /usr/local/cuda-8.0/include \u0026\u0026     cp -P cuda/lib64/libcudnn* /usr/local/cuda-8.0/lib64/ \u0026\u0026     chmod a+r /usr/local/cuda-8.0/lib64/libcudnn* \u0026\u0026     echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\" \u003e\u003e ~/.bashrc \u0026\u0026     pip3 install --upgrade pip \u0026\u0026     pip3 install tensorflow_gpu==1.4.1 \u0026\u0026     pip3 install keras==2.1.2 \u0026\u0026     pip3 install opencv-contrib-python pillow h5py pandas matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}