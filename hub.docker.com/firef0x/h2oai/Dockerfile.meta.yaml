MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: h2oai "h2o.ai"
    Name: maintainer
  - Key: R_VERSIONS
    Name: arg
    Value: '''3.4.1,3.3.3'''
  - Key: PYTHON_VERSIONS
    Name: arg
    Value: '''3.6,3.5,2.7'''
  - Key: JENKINS_UID
    Name: arg
    Value: '''2117'''
  - Key: JENKINS_GID
    Name: arg
    Value: '''2117'''
  - Key: H2O_BRANCH
    Name: arg
    Value: '''master'''
  - Env:
    - Key: H2O_DATA_DIR
      Value: '"/data"'
    Name: env
  - CmdLine:
    - echo 'DPkg::Post-Invoke {"/bin/rm -f /var/cache/apt/archives/*.deb || true";};'
      | tee /etc/apt/apt.conf.d/no-cache &&   echo "deb http://ap-northeast-1.ec2.archive.ubuntu.com/ubuntu
      xenial main universe" >> /etc/apt/sources.list &&   echo "deb http://cran.mtu.edu/bin/linux/ubuntu
      xenial/" >> /etc/apt/sources.list.d/cran.list &&   apt-key adv --keyserver keyserver.ubuntu.com
      --recv-keys 51716619E084DAB9 &&   apt-get update -q -y &&   apt-get dist-upgrade
      -y &&   apt-get clean &&   rm -rf /var/cache/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y wget curl s3cmd libffi-dev
      libxml2-dev libssl-dev   libcurl4-openssl-dev libfreetype6 libfreetype6-dev
      libfontconfig1 libfontconfig1-dev build-essential chrpath   libssl-dev libxft-dev
      git unzip python-pip python-dev python-virtualenv libmysqlclient-dev texlive   texlive-fonts-extra
      texlive-htmlxml python3 python3-dev python3-pip python3-virtualenv software-properties-common   python-software-properties
      texinfo texlive-bibtex-extra texlive-formats-extra texlive-generic-extra nodejs-legacy
      npm &&   apt-get -y build-dep r-base
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:deadsnakes &&   apt-get update -q -y
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/install_java
    - /usr/sbin
  - CmdLine:
    - chmod 700 /usr/sbin/install_java &&   sync &&   /usr/sbin/install_java
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    - Key: PATH
      Value: /usr/lib/jvm/java-8-oracle/bin:${PATH}
    Name: env
  - CmdLine:
    - wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
      &&   tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/share/ &&   rm
      phantomjs-2.1.1-linux-x86_64.tar.bz2 &&   ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs
      /usr/local/bin &&   wget https://github.com/jgm/pandoc/releases/download/2.3/pandoc-2.3-linux.tar.gz
      &&   tar -xvzf pandoc-2.3-linux.tar.gz --strip-components 1 -C /usr/local/ &&   which
      pandoc &&   rm -rf pandoc-2.3-linux.tar.gz &&   apt-get clean &&   apt-get autoremove
      &&   apt-get autoclean
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/install_python_versions
    - /usr/sbin/
  - CmdLine:
    - chmod 700 /usr/sbin/install_python_versions
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/install_python_versions
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p /opt/h2o-3/logs &&   cd /opt/h2o-3 &&   wget http://h2o-release.s3.amazonaws.com/h2o/rel-wright/7/h2o-3.20.0.7.zip
      &&   unzip /opt/h2o-3/h2o-3.20.0.7.zip &&   mv /opt/h2o-3/h2o-3.20.0.7/h2o.jar
      /opt/h2o-3/ &&   rm /opt/h2o-3/h2o-3.20.0.7.zip &&   chmod -R 777 /opt/h2o-3
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
