{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gitlab/dind:latest",
      "SourceCode": "FROM gitlab/dind:latest",
      "Platform": "",
      "From": {
        "Image": "gitlab/dind:latest"
      },
      "Commands": [
        {
          "Maintainer": "Firef0x \u003cFirefgx {aT} gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_CI_MULTI_RUNNER_VERSION",
              "Value": "1.1.4"
            },
            {
              "Key": "GITLAB_CI_MULTI_RUNNER_USER",
              "Value": "gitlab_ci_multi_runner"
            },
            {
              "Key": "GITLAB_CI_MULTI_RUNNER_HOME_DIR",
              "Value": "\"/home/gitlab_ci_multi_runner\""
            },
            {
              "Key": "DOCKER_DATA_DIR",
              "Value": "\"/var/lib/docker\""
            },
            {
              "Key": "GITLAB_CI_MULTI_RUNNER_DATA_DIR",
              "Value": "\"${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/data\""
            },
            {
              "Key": "PATH",
              "Value": "${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/bin:$PATH"
            },
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24  \u0026\u0026 echo 'APT::Install-Recommends 0;' \u003e\u003e /etc/apt/apt.conf.d/01norecommends  \u0026\u0026 echo 'APT::Install-Suggests 0;' \u003e\u003e /etc/apt/apt.conf.d/01norecommends  \u0026\u0026 echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 sed -i 's/^deb-src/# deb-src/g' /etc/apt/sources.list  \u0026\u0026 apt-get update  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y       vim wget net-tools ca-certificates unzip git-core openssh-client curl libapparmor1 build-essential libssl-dev  \u0026\u0026 wget -O /usr/local/bin/gitlab-ci-multi-runner       https://gitlab-ci-multi-runner-downloads.s3.amazonaws.com/v${GITLAB_CI_MULTI_RUNNER_VERSION}/binaries/gitlab-ci-multi-runner-linux-amd64  \u0026\u0026 chmod 0755 /usr/local/bin/gitlab-ci-multi-runner  \u0026\u0026 wget -O /usr/local/bin/gosu       https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)  \u0026\u0026 wget -O /usr/local/bin/gosu.asc       https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4  \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu  \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc  \u0026\u0026 chmod +x /usr/local/bin/gosu  \u0026\u0026 gosu nobody true  \u0026\u0026 adduser --disabled-login --gecos 'GitLab CI Runner' ${GITLAB_CI_MULTI_RUNNER_USER}  \u0026\u0026 gosu ${GITLAB_CI_MULTI_RUNNER_USER} ln -sf ${GITLAB_CI_MULTI_RUNNER_DATA_DIR}/.ssh ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.ssh  \u0026\u0026 gpasswd -a ${GITLAB_CI_MULTI_RUNNER_USER} docker  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install.sh",
            "${GITLAB_CI_MULTI_RUNNER_USER}/install.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 ${GITLAB_CI_MULTI_RUNNER_USER}/install.sh \u0026\u0026 gosu ${GITLAB_CI_MULTI_RUNNER_USER} bash ${GITLAB_CI_MULTI_RUNNER_USER}/install.sh  \u0026\u0026 gosu ${GITLAB_CI_MULTI_RUNNER_USER} echo \"[[ -s ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh  ]] \u0026\u0026 . ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh\" \u003e\u003e ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.bashrc  \u0026\u0026 bash -c \"echo \\\"[[ -s \\${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh  ]] \u0026\u0026 . \\${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh\\\" \u003e\u003e /etc/profile.d/npm.sh\"  \u0026\u0026 rm -f ${GITLAB_CI_MULTI_RUNNER_USER}/install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${GITLAB_CI_MULTI_RUNNER_DATA_DIR}",
            "${DOCKER_DATA_DIR}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"${GITLAB_CI_MULTI_RUNNER_HOME_DIR}\""
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}