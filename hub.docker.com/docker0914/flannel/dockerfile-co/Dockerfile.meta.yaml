MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tcurl \t\tdirmngr \t\tgnupg \t\tiproute2 \t\topenssh-client \t\ttelnet \t\tunzip
      \t\twget \t\txz-utils \t&& rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& echo nullmailer shared/mailname string me | debconf-set-selections
      \t&& DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install
      nullmailer \t&& rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tbison \t\tgit
      \t\tmake \t\tnmap \t\tsshpass \t&& rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sL https://deb.nodesource.com/setup_9.x | bash - \t&& apt-get update
      && apt-get install -y --no-install-recommends \t\tnodejs \t&& rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \t{ \t\techo 'Package: php*'; \t\techo 'Pin: release *'; \t\techo
      'Pin-Priority: -1'; \t} > /etc/apt/preferences.d/no-debian-php"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tpkg-config
        \t\tre2c"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends $PHPIZE_DEPS \t&&
      rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tlibmemcached11
      \t\tlibmemcached-dev \t\tzlib1g-dev \t\t \t&& rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: ENTRYPOINT_COMMAND
      Value: php
    Name: env
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tapache2
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod --shell $(which bash) www-data
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_CONFDIR
      Value: /etc/apache2
    Name: env
  - Env:
    - Key: APACHE_ENVVARS
      Value: $APACHE_CONFDIR/envvars
    Name: env
  - CmdLine:
    - "set -ex \t\t&& sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'
      \"$APACHE_ENVVARS\" \t\t&& . \"$APACHE_ENVVARS\" \t&& for dir in \t\t\"$APACHE_LOCK_DIR\"
      \t\t\"$APACHE_RUN_DIR\" \t\t\"$APACHE_LOG_DIR\" \t\t/var/www/html \t; do \t\trm
      -rvf \"$dir\" \t\t&& mkdir -p \"$dir\" \t\t&& chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\"
      \"$dir\"; \tdone"
    Name: run
    PrependShell: true
  - CmdLine:
    - a2dismod mpm_event && a2enmod mpm_prefork
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& . \"$APACHE_ENVVARS\" \t&& ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\"
      \t&& ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \t&& ln -sfT /dev/stdout
      \"$APACHE_LOG_DIR/other_vhosts_access.log\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '<FilesMatch \\.php$>'; \t\techo '\\tSetHandler application/x-httpd-php';
      \t\techo '</FilesMatch>'; \t\techo; \t\techo 'DirectoryIndex disabled'; \t\techo
      'DirectoryIndex index.php index.html'; \t\techo; \t\techo '<Directory /var/www/>';
      \t\techo '\\tOptions -Indexes'; \t\techo '\\tAllowOverride All'; \t\techo '</Directory>';
      \t} | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \t&& a2enconf docker-php"
    Name: run
    PrependShell: true
  - Env:
    - Key: ENTRYPOINT_COMMAND
      Value: docker-apache-start
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 5.6.40
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-5.6.40.tar.bz2/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-5.6.40.tar.bz2.asc/from/this/mirror"'
    - Key: PHP_FILENAME
      Value: '"php.tar.bz2"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"ffd025d34623553ab2f7fd8fb21d0c9e6f9fa30dc565ca03a1d7b763023fba00"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -xe; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O ${PHP_FILENAME}
      \"$PHP_URL\"; \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *${PHP_FILENAME}\"
      | sha256sum -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *${PHP_FILENAME}\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O ${PHP_FILENAME}.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --no-tty --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\";
      \t\tdone; \t\tgpg --batch --verify ${PHP_FILENAME}.asc ${PHP_FILENAME}; \t\trm
      -rf \"$GNUPGHOME\"; \tfi;"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - usr/
    - /usr/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - var/
    - /var/
  - CmdLine:
    - "set -eux; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get
      install -y --no-install-recommends \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibedit-dev
      \t\tlibicu-dev \t\tlibjpeg-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibsqlite3-dev
      \t\tlibtidy-dev \t\tlibxml2-dev \t\tlibxslt1-dev \t\tlibzip-dev \t\t libmcrypt-dev
      libssl1.0-dev apache2-dev \t; \trm -rf /var/lib/apt/lists/*; \t\texport \t\tCFLAGS=\"$PHP_CFLAGS\"
      \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source
      extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\";
      \tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \tif [
      ! -d /usr/include/curl ]; then \t\tln -sT \"/usr/include/$debMultiarch/curl\"
      /usr/local/include/curl; \tfi; \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t--enable-option-checking=fatal
      \t\t\t\t--disable-cgi \t\t\t\t--enable-ftp \t\t--enable-hash \t\t--enable-json
      \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t--enable-pdo \t\t--enable-phar
      \t\t--with-libedit \t\t--with-mhash \t\t--with-openssl=/usr \t\t--with-zlib
      \t\t\t\t--enable-ctype=shared \t\t--enable-dom=shared \t\t--enable-exif=shared
      \t\t--enable-fileinfo=shared \t\t--enable-filter=shared \t\t--enable-intl=shared
      \t\t--enable-pcntl=shared \t\t--enable-posix=shared \t\t--enable-session \t\t--enable-simplexml=shared
      \t\t--enable-soap=shared \t\t--enable-sockets=shared \t\t--enable-tokenizer=shared
      \t\t--enable-xmlreader=shared \t\t--enable-xmlwriter=shared \t\t--enable-zip=shared
      \t\t--with-bz2=shared \t\t--with-curl=shared \t\t--with-gd=shared \t\t--with-gettext=shared
      \t\t--with-iconv=shared \t\t--with-jpeg-dir=/usr/local \t\t--with-mysqli=shared
      \t\t--with-pdo_mysql=shared \t\t--with-pdo_pgsql=shared \t\t--with-pdo_sqlite=shared,/usr
      \t\t--with-pgsql=shared \t\t--with-readline=shared \t\t--with-sqlite3=shared
      \t\t--with-tidy=shared \t\t--with-xsl=shared \t\t --with-mcrypt=shared --with-mysql=shared
      --with-apxs2 \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-gnu' && echo '--without-pcre-jit')
      \t\t--with-libdir=\"lib/$debMultiarch\" \t; \tmake -j \"$(nproc)\"; \tmake install;
      \tfind /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all
      '{}' + || true; \tmake clean; \tcd /; \tdocker-php-source delete; \t\tapt-mark
      auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;
      \tfind /usr/local -type f -executable -exec ldd '{}' ';' \t\t| awk '/=>/ { print
      $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1
      \t\t| sort -u \t\t| xargs -r apt-mark manual \t; \tapt-get purge -y --auto-remove
      -o APT::AutoRemove::RecommendsImportant=false; \t\tphp --version; \t\tpecl update-channels;
      \trm -rf /tmp/pear ~/.pearrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install --force \tmemcached-2.2.0 \txdebug-2.5.5"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://getcomposer.org/installer -O - -q \t\t| php -- --force --install-dir=/usr/local/bin
      --filename=composer"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - docker-apache-start
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
