MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-alpine
  Commands:
  - Name: workdir
    Path: /usr/src/clustercode
  - Env:
    - Key: CC_DEFAULT_DIR
      Value: '"/usr/src/clustercode/default"'
    - Key: CC_CONFIG_FILE
      Value: '"/usr/src/clustercode/config/clustercode.properties"'
    - Key: CC_CONFIG_DIR
      Value: '"/usr/src/clustercode/config"'
    - Key: CC_LOG_CONFIG_FILE
      Value: '"default/config/log4j2.xml"'
    - Key: JAVA_ARGS
      Value: '""'
    Name: env
  - Key: GRADLE_VERSION
    Name: arg
    Value: '"4.0.1"'
  - Name: volume
    Volumes:
    - /input
    - /output
    - /profiles
    - /var/tmp/clustercode
    - $CC_CONFIG_DIR
  - Name: expose
    Ports:
    - 7600/tcp
    - 7600/udp
    - "8080"
  - CmdLine:
    - /usr/src/clustercode/docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - echo "#### Installing alpine packages" &&     apk update &&     apk upgrade
      &&     apk add --no-cache ffmpeg nginx supervisor openssl tree nodejs-npm unzip
      &&     mkdir /run/nginx &&     echo "#### Installing Gradle" &&     wget -O
      gradle.zip "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
      &&     unzip -q gradle.zip &&     rm gradle.zip &&     echo "#### Building clustercode"
      &&     gradle-${GRADLE_VERSION}/bin/gradle -w fullBuild generateSwaggerDocumentation
      &&     mv build/libs/clustercode.jar clustercode.jar &&     mv build/swagger/*
      static/ &&     echo "#### Installing node packages" &&     npm install --quiet
      --no-optional &&     echo "#### Bulding clustercode-admin" &&     npm run build
      &&     echo "#### Configuring" &&     mv docker/nginx.conf /etc/nginx/nginx.conf
      &&     mv docker/default . &&     mv docker/docker-entrypoint.sh . &&     mv
      docker/supervisord.conf . &&     echo "#### Cleaning up" &&     apk del nodejs-npm
      unzip &&     rm -r ~/.npm &&     rm -r node_modules &&     rm -r package*.json
      &&     rm -r .postcssrc.js &&     rm -r .babelrc &&     rm -r webpack* &&     rm
      -r test &&     rm -r static &&     rm -r src &&     rm -r *gradle* &&     rm
      -r .gradle &&     rm -r ~/.gradle &&     rm -r build &&     rm -r docker &&     rm
      -r Dockerfile &&     echo "#### Final file structure:" &&     tree
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine
