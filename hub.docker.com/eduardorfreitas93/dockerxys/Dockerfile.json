{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Eduardo Ramos \u003ceduardorfreitas93@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y         wget         vim         git         unzip         gnupg2         libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y         postgresql-server-dev-9.5         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         zlib1g-dev         libicu-dev         g++         unixodbc-dev         libxml2-dev         libaio-dev         libmemcached-dev         freetds-dev \tlibssl-dev \topenssl         libgearman-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/wcgallego/pecl-gearman.git \u0026\u0026     cd pecl-gearman \u0026\u0026     phpize \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     rm -rf /tmp/pecl-gearman"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php --         --install-dir=/usr/local/bin         --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu     \u0026\u0026 pecl install sqlsrv-4.1.6.1     \u0026\u0026 pecl install pdo_sqlsrv-4.1.6.1     \u0026\u0026 pecl install redis     \u0026\u0026 pecl install memcached     \u0026\u0026 docker-php-ext-install             iconv             mbstring             intl             mcrypt             gd             pgsql             mysqli             pdo_pgsql             pdo_mysql             pdo_dblib             soap             sockets             zip             pcntl             ftp             exif             bcmath     \u0026\u0026 docker-php-ext-enable             sqlsrv             pdo_sqlsrv             redis             memcached             opcache             gearman.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu     \u0026\u0026 pecl install apcu_bc-1.0.3     \u0026\u0026 docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini     \u0026\u0026 docker-php-ext-enable apc --ini-name 20-docker-php-ext-apc.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini     \u0026\u0026 printf '\\n\\ndate.timezone = \"America/Sao_Paulo\"' \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}