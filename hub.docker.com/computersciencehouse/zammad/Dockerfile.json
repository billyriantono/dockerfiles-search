{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.1-slim",
      "SourceCode": "FROM ruby:2.3.1-slim",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.1-slim"
      },
      "Commands": [
        {
          "Maintainer": "Computer Science House",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ZAMMAD_DIR",
              "Value": "/opt/zammad"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZAMMAD_USER",
              "Value": "zammad"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_URL",
              "Value": "https://github.com/zammad/zammad.git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_BRANCH",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "BUILD_DEPENDENCIES=\"git nginx build-essential libffi-dev libpq5 libpq-dev libmysqlclient-dev\"     set -ex   \t  \u0026\u0026 apt-get update       \u0026\u0026 apt-get install -y --force-yes --no-install-recommends ${BUILD_DEPENDENCIES}       \u0026\u0026 gem install foreman       \u0026\u0026 apt-get clean       \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*       \u0026\u0026 sed -i \"s/^user.*$/daemon off;/\" /etc/nginx/nginx.conf       \u0026\u0026 rm -f /etc/nginx/conf.d/* /etc/nginx/sites-*/*       \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log       \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log       \u0026\u0026 mkdir -p /var/cache/nginx /var/lib/nginx       \u0026\u0026 chmod -R og+rwx /etc/nginx/conf.d /var/*/nginx       \u0026\u0026 chmod og+rwx /var/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex       \u0026\u0026 useradd -M -d ${ZAMMAD_DIR} ${ZAMMAD_USER}       \u0026\u0026 cd $(dirname ${ZAMMAD_DIR})       \u0026\u0026 git clone --depth 1 -b \"${GIT_BRANCH}\" \"${GIT_URL}\"       \u0026\u0026 cd ${ZAMMAD_DIR}       \u0026\u0026 bundle install --without test development       \u0026\u0026 contrib/packager.io/fetch_locales.rb       \u0026\u0026 sed -e 's#.*adapter: postgresql#  adapter: nulldb#g' -e 's#.*username:.*#  username: postgres#g' -e 's#.*password:.*#  password: \\n  host: zammad-postgresql\\n#g' \u003c config/database.yml.pkgr \u003e config/database.yml       \u0026\u0026 bundle exec rake assets:precompile       \u0026\u0026 rm -f config/database.yml       \u0026\u0026 rm -rf tmp/cache       \u0026\u0026 mkdir -p ${ZAMMAD_DIR}/storage       \u0026\u0026 chown -R ${ZAMMAD_USER}:${ZAMMAD_USER} ${ZAMMAD_DIR}       \u0026\u0026 chmod -R og+rwx ${ZAMMAD_DIR}/log       \u0026\u0026 chmod -R og+rwx ${ZAMMAD_DIR}/tmp       \u0026\u0026 chmod -R og+rwx ${ZAMMAD_DIR}/storage       \u0026\u0026 chmod -R og+rwx ${ZAMMAD_DIR}/public/assets/images"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Procfile*",
            "${ZAMMAD_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "database.yml",
            "${ZAMMAD_DIR}/config/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zammad.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chown ${ZAMMAD_USER}:${ZAMMAD_USER} /entrypoint.sh     \u0026\u0026 chmod +x /entrypoint.sh     \u0026\u0026 ln -sf /dev/stdout ${ZAMMAD_DIR}/log/production.log     \u0026\u0026 ln -sf /dev/stdout ${ZAMMAD_DIR}/log/scheduler_out.log     \u0026\u0026 ln -sf /dev/stderr ${ZAMMAD_DIR}/log/scheduler_err.log     \u0026\u0026 ln -sf /dev/stdout ${ZAMMAD_DIR}/log/websocket-server_out.log     \u0026\u0026 ln -sf /dev/stderr ${ZAMMAD_DIR}/log/websocket-server_err.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "user",
          "User": "${ZAMMAD_USER}"
        },
        {
          "Name": "workdir",
          "Path": "${ZAMMAD_DIR}"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}