MetaArgs: null
Stages:
- BaseName: python:slim
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /bd_build
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: '"teletype"'
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LANGUAGE
      Value: '"en_US:en"'
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - "apt-get update && \t/bd_build/system_services.sh && \tapt-get install -y --no-install-recommends
      \tgdebi-core \ttelnet \tlibpq5 \tlibhiredis0.10 \tlibevent-core-2.0-5 \tlibevent-extra-2.0-5
      \tlibevent-openssl-2.0-5 \tlibevent-pthreads-2.0-5 \tmysql-common \tlibmysqlclient18
      \tcurl && \tapt-get install -y \tgcc && \t/bd_build/cleanup.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: COTURN_VER
      Value: 4.4.5.3
    Name: env
  - CmdLine:
    - cd /tmp/ && curl -sL http://turnserver.open-sys.org/downloads/v${COTURN_VER}/turnserver-${COTURN_VER}-debian-wheezy-ubuntu-mint-x86-64bits.tar.gz
      | tar -xzv
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd turnserver
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -g turnserver turnserver
    Name: run
    PrependShell: true
  - CmdLine:
    - gdebi -n /tmp/coturn*.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/turnserver
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - turnserver.sh
    - /etc/service/turnserver/run
  - CmdLine:
    - chmod a+x /etc/service/turnserver/run
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/turnutils
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - turnutils.sh
    - /etc/service/turnutils/run
  - CmdLine:
    - chmod a+x /etc/service/turnutils/run
    Name: run
    PrependShell: true
  - Expression: COPY requirements.txt /root/.
    Name: onbuild
  - Expression: RUN cd /root && pip3 install -r requirements.txt
    Name: onbuild
  - Expression: RUN mkdir /etc/service/pythonserver
    Name: onbuild
  - Expression: ADD pythonserver.sh /etc/service/pythonserver/run
    Name: onbuild
  - Expression: RUN chmod +x /etc/service/pythonserver/run
    Name: onbuild
  - Expression: COPY . /root/
    Name: onbuild
  From:
    Image: python:slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:slim
