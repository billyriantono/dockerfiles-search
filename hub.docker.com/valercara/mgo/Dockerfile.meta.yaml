MetaArgs: null
Stages:
- As: build
  BaseName: golang
  Commands:
  - Env:
    - Key: ROOT
      Value: '"/go/src/github.com/valer-cara/mgo"'
    Name: env
  - Name: workdir
    Path: $ROOT
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Gopkg.lock
    - Gopkg.toml
    - ./
  - CmdLine:
    - go get -u github.com/golang/dep/cmd/dep  && dep ensure --vendor-only
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  From:
    Image: golang
  Name: build
  Platform: ""
  SourceCode: FROM golang AS build
- BaseName: ubuntu
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y ca-certificates git curl make
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --output - https://storage.googleapis.com/kubernetes-helm/helm-v2.13.1-linux-amd64.tar.gz
      | tar zxvf -  && mv linux-amd64/helm /usr/local/bin/helm
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_HOME
      Value: /root/.helm
    Name: env
  - CmdLine:
    - helm init --client-only
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./script/start.sh
    - /start.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/bin/mgo
    - /mgo
  - CmdLine:
    - /mgo
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
