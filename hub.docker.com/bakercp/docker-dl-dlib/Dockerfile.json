{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "floydhub/dl-docker:cpu",
      "SourceCode": "FROM floydhub/dl-docker:cpu",
      "Platform": "",
      "From": {
        "Image": "floydhub/dl-docker:cpu"
      },
      "Commands": [
        {
          "Maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "DLIB_VERSION",
          "Name": "arg",
          "Value": "19.3"
        },
        {
          "CmdLine": [
            "pip install opencv-python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     graphicsmagick     libatlas-dev     libgraphicsmagick1-dev     libgtk2.0-dev     python-protobuf     zip     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "luarocks install dpnn \u0026\u0026     luarocks install image \u0026\u0026     luarocks install optim \u0026\u0026     luarocks install csvigo \u0026\u0026     luarocks install torchx \u0026\u0026     luarocks install tds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026     mkdir -p dlib-tmp \u0026\u0026     cd dlib-tmp \u0026\u0026     curl -L          https://github.com/davisking/dlib/archive/v${DLIB_VERSION}.tar.gz          -o dlib.tar.bz2 \u0026\u0026     tar xf dlib.tar.bz2 \u0026\u0026     cd dlib-${DLIB_VERSION}/python_examples \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake ../../tools/python \u0026\u0026     cmake --build . --config Release \u0026\u0026     cp dlib.so /usr/local/lib/python2.7/dist-packages \u0026\u0026     rm -rf /root/dlib-tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/cmusatyalab/openface.git /root/openface --recursive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/openface \u0026\u0026     ./models/get-models.sh \u0026\u0026     pip2 install -r requirements.txt \u0026\u0026     python2 setup.py install \u0026\u0026     pip2 install -r demos/web/requirements.txt \u0026\u0026     pip2 install -r training/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install imagehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install instaLooter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/root\""
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}