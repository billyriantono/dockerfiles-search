{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:trusty",
      "SourceCode": "FROM buildpack-deps:trusty",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Oscar Rocha \u003corocha@healthefilings.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/.local/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -q \u0026\u0026     apt-get install -qy libgmp-dev git-core curl zlib1g-dev build-essential     libssl-dev libreadline-dev libyaml-dev libxml2-dev libxslt1-dev     libcurl4-openssl-dev python-software-properties libffi-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "POSTGRESQL_VERSION",
              "Value": "9.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "S3_BUCKET",
              "Value": "musicglue-buildpacks"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_LOCATION",
              "Value": "/vendor/postgresql"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGE",
              "Value": "https://$S3_BUCKET.s3.amazonaws.com/postgres/cedar-14/$POSTGRESQL_VERSION.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$PG_LOCATION/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PG_LOCATION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl $PACKAGE -s -o - | tar xzf - -C $PG_LOCATION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUBY_BASE_VERSION",
              "Value": "2.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "1.9.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian wheezy main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://ftp.ruby-lang.org/pub/ruby/$RUBY_BASE_VERSION/ruby-$RUBY_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf ruby-$RUBY_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ruby-$RUBY_VERSION/ \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -g install bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -g install phantomjs@$PHANTOMJS_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026 sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026 rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /override_lib \u0026\u0026 cp /etc/hosts /var/ \u0026\u0026 cp /lib/x86_64-linux-gnu/libnss_files.so.2 /override_lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ie 's:/etc/hosts:/var/hosts:g' /override_lib/libnss_files.so.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/override_lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm /var/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"127.0.0.1    localhost\" \u003e\u003e /var/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}