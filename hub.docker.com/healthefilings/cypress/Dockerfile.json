{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/passenger-ruby24:latest",
      "SourceCode": "FROM phusion/passenger-ruby24:latest",
      "Platform": "",
      "From": {
        "Image": "phusion/passenger-ruby24:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\"     \u0026\u0026 apt-get install -y nodejs tzdata     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y build-essential libssl-dev     apt-transport-https systemd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -lc 'rvm install ruby-2.4.5'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -lc 'rvm --default use ruby-2.4.5'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RAILS_SERVE_STATIC_FILES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SECRET_KEY_BASE",
              "Value": "25c111009b55154d7570898ef7c33699a2886fa4e1a8ba034099bc33be67d21157a91d24932deaf5940132728482b5a42ffb1c7d87dd5e7978a1a21c525182a9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source $NVM_DIR/nvm.sh     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 nvm alias default $NODE_VERSION     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "node -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/projectcypress/cypress.git /home/app/cypress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/app/cypress"
        },
        {
          "CmdLine": [
            "git checkout -b v4.0.4 v4.0.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app:app ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su app -c 'bundle install --without development test'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p temp tmp/cache tmp/bundles tmp/delayed_pids data public/data/upload"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app:app ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "defaults/initializers/smtp.rb",
            "/home/app/cypress/config/initializers/smtp.rb"
          ]
        },
        {
          "CmdLine": [
            "rake assets:precompile RAILS_ENV=production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b master https://github.com/projectcypress/js-ecqm-engine.git /home/app/js-ecqm-engine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn install --cwd /home/app/js-ecqm-engine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/js-ecqm-engine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "services/js-ecqm-engine.sh",
            "/etc/service/js-ecqm-engine/run"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /etc/service/js-ecqm-engine/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm log/*.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/unicorn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp docker_unicorn_start.sh /etc/service/unicorn/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /etc/service/unicorn/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/cypress_delayed_job_1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp docker_delayed_job.sh /etc/service/cypress_delayed_job_1/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /etc/service/cypress_delayed_job_1/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "WORKER_COUNT",
          "Name": "arg",
          "Value": "4"
        },
        {
          "CmdLine": [
            "if [ $WORKER_COUNT -gt 1 ]; then       for i in $(seq 2 1 $WORKER_COUNT); do         cp -R /etc/service/cypress_delayed_job_1 /etc/service/cypress_delayed_job_$i;       done;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        }
      ]
    }
  ]
}