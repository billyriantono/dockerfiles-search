MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - 'sed s:deb:deb-src: /etc/apt/sources.list >> /etc/apt/sources.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get build-dep -y squid3 && apt-get install -y wget tar
      xz-utils libssl-dev
    Name: run
    PrependShell: true
  - Key: SQUID_VERSION
    Name: arg
    Value: 4.0.18
  - CmdLine:
    - mkdir /src     && cd /src     && wget http://www.squid-cache.org/Versions/v4/squid-$SQUID_VERSION.tar.xz     &&
      mkdir squid     && tar -C squid --strip-components=1 -xvf squid-$SQUID_VERSION.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /src/squid &&     ./configure         --prefix=/usr         --datadir=/usr/share/squid4
      \t\t--sysconfdir=/etc/squid4 \t\t--localstatedir=/var \t\t--mandir=/usr/share/man
      \t\t--enable-inline \t\t--enable-async-io=8 \t\t--enable-storeio=\"ufs,aufs,diskd,rock\"
      \t\t--enable-removal-policies=\"lru,heap\" \t\t--enable-delay-pools \t\t--enable-cache-digests
      \t\t--enable-underscores \t\t--enable-icap-client \t\t--enable-follow-x-forwarded-for
      \t\t--enable-auth-basic=\"DB,fake,getpwnam,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB\"
      \t\t--enable-auth-digest=\"file,LDAP\" \t\t--enable-auth-negotiate=\"kerberos,wrapper\"
      \t\t--enable-auth-ntlm=\"fake\" \t\t--enable-external-acl-helpers=\"file_userip,kerberos_ldap_group,LDAP_group,session,SQL_session,unix_group,wbinfo_group\"
      \t\t--enable-url-rewrite-helpers=\"fake\" \t\t--enable-eui \t\t--enable-esi
      \t\t--enable-icmp \t\t--enable-zph-qos \t\t--with-openssl \t\t--enable-ssl \t\t--enable-ssl-crtd
      \t\t--disable-translation \t\t--with-swapdir=/var/spool/squid4 \t\t--with-logdir=/var/log/squid4
      \t\t--with-pidfile=/var/run/squid4.pid \t\t--with-filedescriptors=65536 \t\t--with-large-files
      \t\t--with-default-user=proxy         \t--disable-arch-native"
    Name: run
    PrependShell: true
  - Key: CONCURRENCY
    Name: arg
    Value: "1"
  - CmdLine:
    - cd /src/squid &&     make -j$CONCURRENCY &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/p2     https://github.com/wrouesnel/p2cli/releases/download/r1/p2
      &&     chmod +x /usr/local/bin/p2
    Name: run
    PrependShell: true
  - Key: PROXYCHAINS_COMMITTISH
    Name: arg
    Value: aea917265349880f6cc5dffc9d4afa61227fd330
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/rofl0r/proxychains-ng.git /src/proxychains-ng &&     cd
      /src/proxychains-ng &&     git checkout $PROXYCHAINS_COMMITTISH &&     ./configure
      --prefix=/usr --sysconfdir=/etc &&     make -j$CONCURRENCY && make install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - squid.conf.p2
    - /squid.conf.p2
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - squid.sh
    - /squid.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - myca.pem
    - /etc/squid4/ssl_cert/
  - CmdLine:
    - chown root:proxy /etc/squid4/ssl_cert/myca.pem
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 7.7.2
    Name: env
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$"
      SHASUMS256.txt | sha256sum -c -   && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g forever
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y iptables
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/fishtanksuite/mandarinfish-router.git
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install ./mandarinfish-router/
    Name: run
    PrependShell: true
  - Env:
    - Key: HTTP_PORT
      Value: "3128"
    - Key: MAX_CACHE_SIZE
      Value: "40000"
    - Key: MAX_OBJECT_SIZE
      Value: '"1536 MB"'
    - Key: MEM_CACHE_SIZE
      Value: '"128 MB"'
    Name: env
  - Name: expose
    Ports:
    - "3000"
    - "3128"
  - CmdLine:
    - /squid.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
