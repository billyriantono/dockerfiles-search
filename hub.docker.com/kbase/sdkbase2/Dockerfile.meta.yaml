MetaArgs: null
Stages:
- BaseName: kbase/kb_minideb:stretch
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BRANCH
    Name: arg
    Value: develop
  - CmdLine:
    - "apt-get update -y \t&& apt-get install -y apt-transport-https ca-certificates
      make software-properties-common     \tgit apt-utils bzip2 unzip xz-utils ant
      rsync curl sudo gnupg \t&& apt-get install -y --no-install-recommends \t\tbzip2
      \t\tunzip \t\txz-utils \t&& apt-get clean"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u181
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u181-b13-1~deb9u1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: 20170531+nmu1
    Name: env
  - CmdLine:
    - "set -ex; \t\tif [ ! -d /usr/share/man/man1 ]; then \t\tmkdir -p /usr/share/man/man1;
      \tfi; \t\tapt-get install -y \t\topenjdk-8-jdk-headless=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t\tjetty9 \t; \t[
      \"$(readlink -f \"$JAVA_HOME\")\" = \"$(docker-java-home)\" ]; \t\tupdate-alternatives
      --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3,
      home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\"
      }'; \tupdate-alternatives --query java | grep -q 'Status: manual' ; \tapt-get
      clean"
    Name: run
    PrependShell: true
  - Env:
    - Key: JETTY_HOME
      Value: /usr/share/jetty9
    Name: env
  - CmdLine:
    - curl https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh >
      miniconda.sh &&     bash miniconda.sh -b -p /miniconda
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /miniconda/bin:${PATH}
    Name: env
  - CmdLine:
    - "mkdir /root/src \t&& cd /root/src \t&& git clone https://github.com/kbase/kb_sdk.git
      \t&& cd kb_sdk \t&& git checkout aa2b6f2eb5d7b28cfd1ce2197764076a09050972 \t&&
      make \t&& cp bin/kb-sdk /usr/local/bin \t&& mkdir -p /kb/deployment/lib /kb/deployment/lib"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - user-env.sh
    - /kb/deployment/user-env.sh
  - CmdLine:
    - "pip install pyopenssl ndg-httpsclient pyasn1 pyyaml gitpython     && pip install
      requests --upgrade     && pip install requests_toolbelt --upgrade     && pip
      install 'requests[security]' --upgrade     && pip install coverage nose nose2
      \t&& pip install --upgrade sphinx \t&& pip install jsonrpcbase"
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge uwsgi
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install biopython
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp \t&& git clone https://github.com/kbase/workspace_deluxe \t&& cd workspace_deluxe
      \t&& cp -vr lib/* /kb/deployment/lib/ \t&& cd /tmp \t&& git clone https://github.com/kbase/auth
      \t&& cd auth \t&& cp -vr python-libs/biokbase /kb/deployment/lib/ \t&& cp -vr
      Bio-KBase-Auth/lib/Bio /kb/deployment/lib/ \t&& cd /tmp \t&& cd /tmp \t&& git
      clone https://github.com/kbase/handle_mngr \t&& cd handle_mngr \t&& cp -vr lib/*
      /kb/deployment/lib/ \t&& cd ~/src/kb_sdk \t&& cp -vr lib/biokbase /kb/deployment/lib/
      \t&& cp -vr lib/Bio /kb/deployment/lib/ \t&& cd /tmp \t&& git clone https://github.com/kbase/jars
      \t&& cd /tmp/jars \t&& cp -vr lib/jars /kb/deployment/lib/ \t&& rm -rf /tmp/*
      \t&& rm -rf /root/.cpanm"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - lib/biokbase/
    - /kb/deployment/lib/biokbase/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - log.py
    - /kb/deployment/lib/biokbase/
  - Env:
    - Key: PERL5LIB
      Value: /kb/deployment/lib
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /kb/deployment/lib
    Name: env
  - Env:
    - Key: ANT_HOME
      Value: /usr/share/ant
    Name: env
  - Env:
    - Key: KB_RUNTIME
      Value: /usr
    Name: env
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/kbase/sdkbase.git"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.schema-version
      Value: '"1.0.0-rc1"'
    - Key: us.kbase.vcs-branch
      Value: $BRANCH
    - Key: maintainer
      Value: '"Steve Chan sychan@lbl.gov"'
    Name: label
  From:
    Image: kbase/kb_minideb:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM kbase/kb_minideb:stretch
