MetaArgs: null
Stages:
- BaseName: kbase/runtime:latest
  Commands:
  - Maintainer: Shane Canon scanon@lbl.gov
    Name: maintainer
  - CmdLine:
    - apt-get update &&    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y &&    DEBIAN_FRONTEND=noninteractive
      apt-get install -y         python-pip libcurl4-gnutls-dev python-dev ncurses-dev
      software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ''|add-apt-repository ppa:nginx/stable &&    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv 7F0CEB10 &&    echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart
      dist 10gen'           > /etc/apt/sources.list.d/mongodb.list &&    curl -sL
      https://deb.nodesource.com/setup_4.x | bash &&    DEBIAN_FRONTEND=noninteractive
      apt-get install -y      lua5.1 luarocks liblua5.1-0 liblua5.1-0-dev liblua5.1-json
      liblua5.1-lpeg2      nginx nginx-extras nodejs      mongodb-10gen=2.4.14 apt-transport-https
      &&    npm install -g grunt-cli &&    apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys 58118E89F3A912897C070ADBF76221572C52609D &&    echo "deb https://apt.dockerproject.org/repo
      ubuntu-trusty main" >> /etc/apt/sources.list.d/docker.list &&    apt-get update
      && apt-get install -y docker-engine=1.7.1-0~trusty &&    pip install --upgrade
      sphinx &&    pip install docker-py gitpython pyyaml        pyopenssl ndg-httpsclient
      pyasn1 &&    sed -i 's/not cert.get..subjectAltName., .../False/' /usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/connection.py
      &&    cpanm -i Config::IniFiles
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install luasocket;    luarocks install luajson;    luarocks install
      penlight;    luarocks install lua-spore;    luarocks install luacrypto
    Name: run
    PrependShell: true
  - Env:
    - Key: TARGET
      Value: /kb/deployment
    Name: env
  - Env:
    - Key: PATH
      Value: ${TARGET}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - cpanm -i REST::Client && cpanm -i Time::ParseDate
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build.trigger
    - /tmp/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./scripts/githashes
    - /tmp/githashes
  - CmdLine:
    - ( echo "Git clone";date) > /tmp/git.log
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /kb &&      git clone https://github.com/kbase/dev_container &&      cd dev_container/modules
      &&      git clone --recursive https://github.com/kbase/kbapi_common &&      git
      clone --recursive https://github.com/kbase/typecomp &&      git clone --recursive
      https://github.com/kbase/jars &&      git clone --recursive https://github.com/kbase/auth
      -b develop &&      git clone --recursive https://github.com/kbase/kbrest_common
      &&      git clone --recursive https://github.com/kbase/kb_sdk -b develop &&      /tmp/githashes
      /kb/dev_container/modules > /tmp/tags &&      rm -rf /kb/dev_container/modules/*/.git
      &&      cd /kb/dev_container &&      grep -lr kbase.us/services /kb/| grep -v
      docs/ |        xargs sed -ri 's|https?://kbase.us/services|https://public.hostname.org:8443/services|g'
      &&      ./bootstrap /kb/runtime &&      . ./user-env.sh && make && make deploy
      &&      rm -rf modules/kb_sdk
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./awe.fix
    - /tmp/awe.fix
  - CmdLine:
    - cd /kb/dev_container/modules &&      git clone --recursive https://github.com/kbase/handle_service
      -b develop &&      git clone --recursive https://github.com/kbase/narrative_method_store
      -b develop &&      git clone --recursive https://github.com/kbase/narrative_job_service
      -b develop &&      git clone --recursive https://github.com/kbase/handle_mngr
      -b develop &&      git clone --recursive https://github.com/kbase/njs_wrapper
      -b develop &&      git clone --recursive https://github.com/kbase/narrative_job_proxy
      -b develop &&      git clone --recursive https://github.com/kbase/shock_service
      &&      git clone --recursive https://github.com/kbase/auth_service &&      git
      clone --recursive https://github.com/kbase/workspace_deluxe -b develop &&      git
      clone --recursive https://github.com/kbase/awe_service &&      (cd /kb/dev_container/modules/awe_service
      &&  cat /tmp/awe.fix|patch -p1) &&      git clone --recursive https://github.com/kbase/search
      &&      git clone --recursive https://github.com/kbase/java_type_generator &&      git
      clone --recursive https://github.com/kbase/user_profile -b develop &&      git
      clone --recursive https://github.com/kbase/user_and_job_state -b develop &&      git
      clone --recursive https://github.com/kbase/catalog -b develop &&      git clone
      --recursive https://github.com/kbaseincubator/service_wizard -b develop &&      git
      clone --recursive https://github.com/kbase/data_import_export -b dev &&      git
      clone --recursive https://github.com/kbase/kbwf_common &&      /tmp/githashes
      /kb/dev_container/modules >> /tmp/tags &&      grep -lr kbase.us/services /kb/|
      grep -v docs/ |         xargs sed -ri 's|https?://kbase.us/services|https://public.hostname.org:8443/services|g'
      &&      find /kb/dev_container/modules -iname ".git" | grep -v communities_api
      | grep -v m5nr | xargs rm -rf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - autodeploy.cfg
    - /kb/dev_container/autodeploy.cfg
  - CmdLine:
    - cd /kb/dev_container &&      . ./user-env.sh && PATH=/kb/deployment/bin:$PATH
      && make &&      perl auto-deploy ./autodeploy.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /kb/dev_container/modules &&         grep -lr kbase.us/services /kb/| grep
      -v docs/ |           xargs sed -ri 's|https?://kbase.us/services|https://public.hostname.org:8443/services|g'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-gevent &&         wget https://github.com/rancher/rancher-compose/releases/download/v0.8.5/rancher-compose-linux-amd64-v0.8.5.tar.gz
      &&         tar xzf rancher-compose-linux-amd64-v0.8.5.tar.gz  &&         mv
      ./rancher-compose-v0.8.5/rancher-compose  /usr/bin/ &&         pip install semantic_version
      &&         pip install gdapi-python
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/--daemonize [^ ]*log//' /kb/deployment/services/catalog/start_service
      &&         sed -i 's/--daemonize [^ ]*log//' /kb/deployment/services/narrativejobproxy/start_service
      &&         sed -i 's/--daemonize [^ ]*log//' /kb/deployment/services/service_wizard/start_service
      &&         sed -i 's/--daemonize//' /kb/deployment/services/*/start_service
      &&         sed -i 's/--error-log [^ "]*//' /kb/deployment/services/*/start_service
      &&         sed -i 's/--pid [^ "]*//' /kb/deployment/services/*/start_service
      &&         sed -i 's/\/kb\/runtime\/sbin\/daemonize .*\/kb/\/kb/' /kb/deployment/services/*/start_service
      &&         sed -i 's/>.*//' /kb/deployment/services/njs_wrapper/start_service
      &&         sed -i 's/nohup //' /kb/deployment/services/*/start_service
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /kb/dev_container/modules/auth_service && . ../../user-env.sh &&     mv authorization_server/oauth.py
      authorization_server/koauth.py &&     sed -i 's/from oauth/from koauth/' authorization_server/authorization_server/urls.py  &&     sed
      -i 's/oauth/koauth/' authorization_server/authorization_server/settings.py  &&     sed
      -i 's/.\/start_service/echo done/' Makefile  &&     sed -i 's/from django.conf.urls.d/#from
      django.conf.urls.d/' authorization_server/authorization_server/urls.py  &&     make
      deploy-services &&     sed -i 's/server.err/server.err daemonize=false/' /kb/deployment/services/authorization_server/start_service
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./scripts
    - /kb/scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config
    - /kb/config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - lets-encrypt-x3-cross-signed.der
    - /tmp/lets.der
  - CmdLine:
    - keytool -import -keystore /kb/runtime/glassfish3/glassfish/lib/templates/cacerts.jks
      -storepass changeit -noprompt -trustcacerts -alias letsencryptauthorityx3 -file
      /tmp/lets.der &&         chmod a+rx /kb/scripts /kb/config /kb/scripts/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /kb/
  - Env:
    - Key: USER
      Value: root
    Name: env
  - CmdLine:
    - /kb/scripts/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: kbase/runtime:latest
  Name: ""
  Platform: ""
  SourceCode: FROM kbase/runtime:latest
