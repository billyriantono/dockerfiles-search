MetaArgs:
- DefaultValue: 0.4.0
  Key: UPSTREAM_VERSION
  ProvidedValue: null
  Value: 0.4.0
- DefaultValue: https://archive.apache.org/dist
  Key: MIRROR
  ProvidedValue: null
  Value: https://archive.apache.org/dist
Stages:
- As: build
  BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: stage
      Value: build
    Name: label
  - Key: UPSTREAM_VERSION
    Name: arg
    Value: null
  - Key: MIRROR
    Name: arg
    Value: null
  - Env:
    - Key: PROJECT_BASE_DIR
      Value: /opt/nifi-registry
    Name: env
  - Env:
    - Key: PROJECT_HOME
      Value: ${PROJECT_BASE_DIR}/nifi-registry-${UPSTREAM_VERSION}
    Name: env
  - Env:
    - Key: UPSTREAM_BINARY_URL
      Value: nifi/nifi-registry/nifi-registry-${UPSTREAM_VERSION}/nifi-registry-${UPSTREAM_VERSION}-bin.tar.gz
    Name: env
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - CmdLine:
    - apk --update add --no-cache   &&   apk add --no-cache ca-certificates openssl
      curl wget   &&   update-ca-certificates   &&   rm -rf /var/lib/apt/lists/*   &&   rm
      -f /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${PROJECT_BASE_DIR}     && curl -fSL ${MIRROR}/${UPSTREAM_BINARY_URL}
      -o ${PROJECT_BASE_DIR}/nifi-registry-${UPSTREAM_VERSION}-bin.tar.gz     && echo
      "$(curl ${MIRROR}/${UPSTREAM_BINARY_URL}.sha256) *${PROJECT_BASE_DIR}/nifi-registry-${UPSTREAM_VERSION}-bin.tar.gz"
      | sha256sum -c -     && tar -xvzf ${PROJECT_BASE_DIR}/nifi-registry-${UPSTREAM_VERSION}-bin.tar.gz
      -C ${PROJECT_BASE_DIR}     && rm ${PROJECT_BASE_DIR}/nifi-registry-${UPSTREAM_VERSION}-bin.tar.gz     &&
      rm -fr ${PROJECT_HOME}/docs
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.9
  Name: build
  Platform: ""
  SourceCode: FROM alpine:3.9 as build
- As: final-root
  BaseName: openjdk:8-jdk-alpine
  Commands:
  - Key: BRANCH
    Name: arg
    Value: null
  - Key: COMMIT
    Name: arg
    Value: null
  - Key: DATE
    Name: arg
    Value: null
  - Key: URL
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: site
      Value: '"https://hub.docker.com/r/michalklempa/nifi-registry"'
    - Key: maintainer
      Value: '"michal.klempa@gmail.com"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.build-date
      Value: $DATE
    - Key: org.label-schema.vendor
      Value: '"Michal Klempa"'
    - Key: org.label-schema.name
      Value: '"michalklempa/nifi-registry"'
    - Key: org.label-schema.description
      Value: '"michalklempa/nifi-registry docker image is an alternative and unofficial
        image for NiFi Registry project"'
    - Key: org.label-schema.url
      Value: '"https://hub.docker.com/r/michalklempa/nifi-registry"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -p 18080:18080 --name nifi-registry -d michalklempa/nifi-registry:latest"'
    - Key: org.label-schema.docker.cmd.devel
      Value: '"docker run -p 8000:8000 -p 18080:18080 -e''BOOTSTRAP_JAVA_ARG_DEBUG=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000''
        --name nifi-registry -d michalklempa/nifi-registry:latest"'
    - Key: org.label-schema.version
      Value: '"$VERSION"'
    - Key: org.label-schema.vcs-url
      Value: $URL
    - Key: org.label-schema.vcs-branch
      Value: $BRANCH
    - Key: org.label-schema.vcs-ref
      Value: $COMMIT
    Name: label
  - Key: UPSTREAM_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: PROJECT_BASE_DIR
      Value: /opt/nifi-registry
    Name: env
  - Env:
    - Key: PROJECT_HOME
      Value: ${PROJECT_BASE_DIR}/nifi-registry-${UPSTREAM_VERSION}
    Name: env
  - Env:
    - Key: PROJECT_TEMPLATE_DIR
      Value: ${PROJECT_BASE_DIR}/templates
    Name: env
  - Env:
    - Key: PROJECT_CONF_DIR
      Value: ${PROJECT_HOME}/conf
    Name: env
  - CmdLine:
    - apk --update add --no-cache ca-certificates bash git less openssh sshpass   &&
      update-ca-certificates   &&   rm -rf /var/lib/apt/lists/*   &&   rm -f /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${PROJECT_BASE_DIR}
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_HOME}
    - ${PROJECT_HOME}
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/dockerize
    - /usr/local/bin/dockerize
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./templates
    - ${PROJECT_TEMPLATE_DIR}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sh/
    - ${PROJECT_BASE_DIR}/scripts/
  - CmdLine:
    - mkdir -p ${PROJECT_HOME}/docs
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "18080"
    - "18443"
  - Env:
    - Key: FLOW_PROVIDER
      Value: file
    Name: env
  - Env:
    - Key: FLOW_PROVIDER_GIT_FLOW_STORAGE_DIRECTORY
      Value: $PROJECT_BASE_DIR/flow-storage
    Name: env
  - Env:
    - Key: FLOW_PROVIDER_FILE_FLOW_STORAGE_DIRECTORY
      Value: $PROJECT_BASE_DIR/flow-storage
    Name: env
  - Env:
    - Key: EXTENSION_BUNDLE_PROVIDER
      Value: file
    Name: env
  - Env:
    - Key: EXTENSION_BUNDLE_PROVIDER_FILE_EXTENSION_BUNDLE_STORAGE_DIRECTORY
      Value: $PROJECT_BASE_DIR/extension-bundle-storage
    Name: env
  - Name: workdir
    Path: ${PROJECT_HOME}
  - CmdLine:
    - ${PROJECT_BASE_DIR}/scripts/start.sh
    Name: cmd
    PrependShell: true
  From:
    Image: openjdk:8-jdk-alpine
  Name: final-root
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine as final-root
