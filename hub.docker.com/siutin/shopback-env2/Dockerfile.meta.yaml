MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Martin Chan <osiutino@gmail.com>"'
    Name: label
  - Env:
    - Key: DEEP_REFRESHED_AT
      Value: "2019-11-19"
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.4.6
    Name: env
  - Env:
    - Key: PASSENGER_VERSION
      Value: 6.0.2
    Name: env
  - Env:
    - Key: NVM_VERSION
      Value: v0.34.0
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: "10.16"
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Hong_Kong
    Name: env
  - Env:
    - Key: USER
      Value: worker
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$USER
    Name: env
  - Env:
    - Key: APACHE_LOG_DIR
      Value: /var/log/apache2
    Name: env
  - Env:
    - Key: APACHE_PID_FILE
      Value: /var/run/apache2.pid
    Name: env
  - Env:
    - Key: APACHE_RUN_DIR
      Value: /var/run/apache2
    Name: env
  - Env:
    - Key: APACHE_LOCK_DIR
      Value: /var/lock/apache2
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git-core
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gawk sqlite3 autoconf libgmp-dev libgdbm-dev libncurses5-dev
      automake libtool bison libffi-dev libgmp-dev libreadline6-dev  libssl-dev libsqlite3-dev
      pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apache2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libcurl4-openssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apache2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libapr1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libaprutil1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openssh-client
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libmysqlclient-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libyaml-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mysql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y cron
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LC_ALL=$LC_ALL" >> /etc/environment
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$LC_ALL UTF-8" >> /etc/locale.gen
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LANG=$LC_ALL" > /etc/locale.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure -f noninteractive locales
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$TZ" | tee /etc/timezone; rm -rf /etc/localtime; ln -s /usr/share/zoneinfo/$TZ
      /etc/localtime; dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --home $HOME -M $USER -K UID_MIN=10000 -K GID_MIN=10000 -s /bin/bash
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - chown $USER:$USER $HOME
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - CmdLine:
    - curl -sSL https://rvm.io/mpapis.asc | gpg --import -
    Name: run
    PrependShell: true
  - CmdLine:
    - 'for server in $(shuf -e hkp://pool.sks-keyservers.net                           hkp://ipv4.pool.sks-keyservers.net                           hkp://pgp.mit.edu                           hkp://keyserver.pgp.com)
      ; do       gpg --keyserver "$server" --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      7D2BAF1CF37B13E2069D6956105BD0E739499BDB && break || : ;   done'
    Name: run
    PrependShell: true
  - CmdLine:
    - \curl -sSL https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'source ~/.rvm/scripts/rvm'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'rvm autolibs fail'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'rvm requirements'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'rvm install $RUBY_VERSION'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'rvm use $RUBY_VERSION --default'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'rvm rubygems current'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'gem install bundler --no-document'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'gem install passenger --version $PASSENGER_VERSION --no-document'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'passenger-install-apache2-module --auto'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"'
      | tee -a $HOME/.profile $HOME/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'nvm install $NODE_VERSION'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'npm install bower -g'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - echo ServerName ${HOSTNAME} >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LoadModule passenger_module $HOME/.rvm/gems/ruby-$RUBY_VERSION/gems/passenger-$PASSENGER_VERSION/buildout/apache2/mod_passenger.so"
      > /etc/apache2/mods-available/passenger.load
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "<IfModule mod_passenger.c>\n  PassengerRoot $HOME/.rvm/gems/ruby-$RUBY_VERSION/gems/passenger-$PASSENGER_VERSION\n  PassengerDefaultRuby
      $HOME/.rvm/gems/ruby-$RUBY_VERSION/wrappers/ruby\n </IfModule>" > /etc/apache2/mods-available/passenger.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - 000-default.conf
    - /etc/apache2/sites-enabled/000-default.conf
  - CmdLine:
    - mkdir -p /var/www/app/current/public
    Name: run
    PrependShell: true
  - CmdLine:
    - echo OK > /var/www/app/current/public/index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - chown $USER:$USER -R /var/www/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod passenger
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod headers
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod proxy
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod proxy_connect
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod proxy_http
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod socache_shmcb
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0755 /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HOME/.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh/*
    - $HOME/.ssh/
  - CmdLine:
    - chmod 755 $HOME/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 400 $HOME/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R $USER:$USER $HOME/.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - main.sh
    - $HOME/
  - CmdLine:
    - chown $USER:$USER $HOME/main.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 $HOME/main.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - /bin/bash
    - -c
    - env | grep _ >> /etc/environment && supervisord -n
    Name: cmd
    PrependShell: false
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: REFRESHED_AT
      Value: "2019-12-21"
    Name: env
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
