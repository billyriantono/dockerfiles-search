MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Mirek
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get install -y aptitude && aptitude dist-upgrade --purge-unused
      -y && aptitude clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y software-properties-common python-software-properties
      python3-software-properties sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nano htop vim xterm ssh openssh-server curl wget git mc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get install -y openjdk-8-jdk # openjdk-9-jdk'
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository universe
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y locales &&   localedef --force --inputfile=en_US
      --charmap=UTF-8 --alias-file=/usr/share/locale/locale.alias en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US
    Name: env
  - Env:
    - Key: NX_USER
      Value: nomachine
    Name: env
  - Env:
    - Key: NX_PASSWORD
      Value: nomachine
    Name: env
  - Env:
    - Key: NX_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: NX_GID
      Value: "1000"
    Name: env
  - CmdLine:
    - groupadd -r $NX_USER -g $NX_GID &&   useradd -u $NX_UID -r -g $NX_USER -d /home/$NX_USER
      -s /bin/bash -c "NX_$USER" $NX_USER &&   mkdir /home/$NX_USER &&   chown -R
      $NX_USER:$NX_GID /home/$NX_USER &&   echo $NX_USER':'$NX_PASSWORD | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y lubuntu-desktop lubuntu-restricted-addons lubuntu-restricted-extras
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-pip python3-pyqt4 python3-pyqt5 python3-pyqt5.qtsvg
      python3-pyqt5.qtwebkit &&   pip3 install --upgrade pip &&   pip install --upgrade
      setuptools &&   pip install spyder
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common &&   add-apt-repository -y ppa:mystic-mirage/pycharm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&   apt-get install -y pycharm-community
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pandas matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install xgboost
    Name: run
    PrependShell: true
  - Key: R_BASE_VER
    Name: arg
    Value: 3.5.0
  - CmdLine:
    - echo "deb [trusted=yes] http://ppa.launchpad.net/marutter/rrutter3.5/ubuntu
      xenial main" > /etc/apt/sources.list.d/rrutter3.5_xenial.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tr-base=${R_BASE_VER}-* \t\tr-base-dev=${R_BASE_VER}-*
      \t\tr-recommended=${R_BASE_VER}-*"
    Name: run
    PrependShell: true
  - Env:
    - Key: RSTUDIO_VER
      Value: 1.1.453
    Name: env
  - CmdLine:
    - wget --quiet -O /tmp/rstudio.deb https://download1.rstudio.org/rstudio-xenial-${RSTUDIO_VER}-amd64.deb
      &&         chmod +x /tmp/rstudio.deb &&         gdebi -n /tmp/rstudio.deb &&         rm
      -rf /tmp/rstudio.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: NOMACHINE_PACKAGE_NAME
      Value: nomachine_6.2.4_1_amd64.deb
    Name: env
  - Env:
    - Key: NOMACHINE_BUILD
      Value: "6.2"
    Name: env
  - Env:
    - Key: NOMACHINE_MD5
      Value: 210bc249ec9940721a1413392eee06fe
    Name: env
  - CmdLine:
    - curl -fSL "http://download.nomachine.com/download/${NOMACHINE_BUILD}/Linux/${NOMACHINE_PACKAGE_NAME}"
      -o nomachine.deb && echo "${NOMACHINE_MD5} *nomachine.deb" | md5sum -c - &&
      dpkg -i nomachine.deb
    Name: run
    PrependShell: true
  - Key: NX_NODE_CFG
    Name: arg
    Value: /usr/NX/etc/node.cfg
  - Key: NX_SRV_CFG
    Name: arg
    Value: /usr/NX/etc/server.cfg
  - CmdLine:
    - sed -i '/DefaultDesktopCommand/c\DefaultDesktopCommand "/usr/bin/startlxde"'
      $NX_NODE_CFG
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/DefaultDesktopCommand/c\DefaultDesktopCommand "/usr/bin/startlxde"'
      $NX_SRV_CFG
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"${NX_USER} ALL=(ALL:ALL) NOPASSWD: /etc/NX/nxserver --startup\" >> /etc/sudoers
      && \techo \"${NX_USER} ALL=(ALL:ALL) NOPASSWD: /usr/bin/tail -f /usr/NX/var/log/nxserver.log\"
      >> /etc/sudoers"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4000"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nxserver.sh
    - /
  - CmdLine:
    - /nxserver.sh
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: $NX_UID
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
