{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:latest-gpu-py3-jupyter",
      "SourceCode": "FROM tensorflow/tensorflow:latest-gpu-py3-jupyter",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:latest-gpu-py3-jupyter"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cp /etc/apt/sources.list /etc/apt/sources.list.bak \u0026\u0026 \tprintf 'deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\\n' \u003e /etc/apt/sources.list \u0026\u0026 \tapt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y locales-all language-pack-zh-hans \u0026\u0026 \techo $TZ \u003e /etc/timezone \u0026\u0026 \tDEBIAN_FRONTEND=noninteractive apt-get install -y tzdata \u0026\u0026 \trm /etc/localtime \u0026\u0026 \tln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 \tdpkg-reconfigure -f noninteractive tzdata \u0026\u0026 \tapt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/.pip/ \u0026\u0026 \tprintf '[global]\\ntrusted-host = mirrors.aliyun.com\\nindex-url = http://mirrors.aliyun.com/pypi/simple' \u003e $HOME/.pip/pip.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$HOME/.local/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install jupyter_contrib_nbextensions \u0026\u0026 \tjupyter contrib nbextension install \u0026\u0026 \tjupyter nbextensions_configurator enable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pandas scikit-learn matplotlib seaborn jupyter jupyter_tensorboard scikit-image"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install torch pytorch-nlp fastai pytorch_pretrained_bert keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyfunctional fn tqdm enlighten"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/me"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$HOME/.local/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "443",
            "80",
            "8000-9000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}