MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: VAN TIEN <to tienhoangvan@gmail.com>
    Name: maintainer
  - Key: THEANO_VERSION
    Name: arg
    Value: rel-0.8.2
  - Key: TENSORFLOW_VERSION
    Name: arg
    Value: 0.12.1
  - Key: TENSORFLOW_ARCH
    Name: arg
    Value: cpu
  - Key: KERAS_VERSION
    Name: arg
    Value: 1.2.0
  - Key: LASAGNE_VERSION
    Name: arg
    Value: v0.1
  - Key: TORCH_VERSION
    Name: arg
    Value: latest
  - Key: CAFFE_VERSION
    Name: arg
    Value: master
  - CmdLine:
    - apt-get update && apt-get install wget -y && wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt install bzip2 -y # for decompress miniconda'
    Name: run
    PrependShell: true
  - CmdLine:
    - bash Miniconda2-latest-Linux-x86_64.sh —b f -p ~/miniconda
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=“~/miniconda/bin:$PATH"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - source .bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - rm Miniconda2-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         pandas         Pillow         &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install tensorflow
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c menpo opencv3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential cmake git pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev protobuf-compiler
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libatlas-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends libboost-all-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install cython scikit-image ipython h5py nose pandas protobuf pyyaml jupyter
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y numpy scipy nose h5py skimage matplotlib pandas sklearn sympy
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install \t\tpyopenssl \t\tndg-httpsclient \t\tpyasn1"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install --upgrade ipython && \tpip --no-cache-dir install
      \t\tCython \t\tipykernel \t\tjupyter \t\tpath.py \t\tPillow \t\tpygments \t\tsix
      \t\tsphinx \t\twheel \t\tzmq \t\t&& \tpython -m ipykernel.kernelspec"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install \thttps://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tlibboost-all-dev \t\tlibgflags-dev
      \t\tlibgoogle-glog-dev \t\tlibhdf5-serial-dev \t\tlibleveldb-dev \t\tliblmdb-dev
      \t\tlibopencv-dev \t\tlibprotobuf-dev \t\tlibsnappy-dev \t\tprotobuf-compiler
      \t\t&& \tapt-get clean && \tapt-get autoremove && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe
      && \tcd /root/caffe && \tcat python/requirements.txt | xargs -n1 pip install
      && \tmkdir build && cd build && \tcmake -DCPU_ONLY=1 -DBLAS=Open .. && \tmake
      -j\"$(nproc)\" all && \tmake install"
    Name: run
    PrependShell: true
  - Env:
    - Key: CAFFE_ROOT
      Value: /root/caffe
    Name: env
  - Env:
    - Key: PYCAFFE_ROOT
      Value: $CAFFE_ROOT/python
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYCAFFE_ROOT:$PYTHONPATH
    - Key: PATH
      Value: $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
    Name: env
  - CmdLine:
    - echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install git+git://github.com/Theano/Theano.git@${THEANO_VERSION}
      && \t\techo \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN \t\t\\n[lib]\\ncnmem=0.95
      \t\t\\n[nvcc]\\nfastmath=True \t\t\\n[blas]\\nldflag = -L/usr/lib/openblas-base
      -lopenblas \t\t\\n[DebugMode]\\ncheck_finite=1\" \t> /root/.theanorc"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install git+git://github.com/fchollet/keras.git@${KERAS_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install git+git://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/torch/distro.git /root/torch --recursive && \tcd
      /root/torch && \tbash install-deps && \tyes no | ./install.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_PATH
      Value: '''/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua'''
    - Key: LUA_CPATH
      Value: '''/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so'''
    - Key: PATH
      Value: /root/torch/install/bin:$PATH
    - Key: LD_LIBRARY_PATH
      Value: /root/torch/install/lib:$LD_LIBRARY_PATH
    - Key: DYLD_LIBRARY_PATH
      Value: /root/torch/install/lib:$DYLD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: LUA_CPATH
      Value: '''/root/torch/install/lib/?.so;''$LUA_CPATH'
    Name: env
  - CmdLine:
    - "luarocks install nn &&     luarocks install loadcaffe && \t\tcd /root && git
      clone https://github.com/facebook/iTorch.git && \tcd iTorch && \tluarocks make"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone --depth 1 https://github.com/opencv/opencv.git /root/opencv && \tcd
      /root/opencv && \tmkdir build && \tcd build && \tcmake -DWITH_QT=ON -DWITH_OPENGL=ON
      -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON
      .. && \tmake -j\"$(nproc)\"  && \tmake install && \tldconfig && \techo 'ln /dev/null
      /dev/raw1394' >> ~/.bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - conda clean -a -y
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /root/.jupyter/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_jupyter.sh
    - /root/
  - Name: expose
    Ports:
    - "6006"
    - "8888"
  - Name: workdir
    Path: '"/root"'
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
