{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "caffe-maint@googlegroups.com"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CAFFE_ROOT",
              "Value": "/opt/caffe"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$CAFFE_ROOT"
        },
        {
          "Env": [
            {
              "Key": "CLONE_TAG",
              "Value": "1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/gogartom/caffe-textmaps . \u0026\u0026     pip install --upgrade pip \u0026\u0026     cd python \u0026\u0026 for req in $(cat requirements.txt) pydot; do pip install $req; done \u0026\u0026 cd .. \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026     cmake -DCPU_ONLY=1 .. \u0026\u0026     make all -j\"$(nproc)\" \u0026\u0026     make pycaffe \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYCAFFE_ROOT",
              "Value": "$CAFFE_ROOT/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYCAFFE_ROOT:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"$CAFFE_ROOT/build/lib\" \u003e\u003e /etc/ld.so.conf.d/caffe.conf \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install theano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install git+git://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install python-pip python-dev python-opencv python-tk -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install xvfb -y \t\u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoremove \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip uninstall numpy -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 -nv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -jxvf phantomjs-2.1.1-linux-x86_64.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm phantomjs-2.1.1-linux-x86_64.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rvf phantomjs-2.1.1-linux-x86_64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install matplotlib scikit-image scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip uninstall numpy -y \u0026\u0026 apt-get update \u0026\u0026 apt-get install --reinstall python-numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/torch/distro.git /root/torch --recursive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/torch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install sudo -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/torch \u0026\u0026 bash install-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/torch \u0026\u0026 yes no | ./install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUA_PATH",
              "Value": "'/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_CPATH",
              "Value": "'/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/torch/install/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/root/torch/install/lib:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DYLD_LIBRARY_PATH",
              "Value": "/root/torch/install/lib:$DYLD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_CPATH",
              "Value": "'/root/torch/install/lib/?.so;'$LUA_CPATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt-get install libssl-dev -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "luarocks install nn \u0026\u0026     luarocks install loadcaffe"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 git clone --depth=1 https://github.com/facebook/iTorch.git \u0026\u0026     cd iTorch \u0026\u0026     luarocks make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 \tapt-get autoremove \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        }
      ]
    }
  ]
}