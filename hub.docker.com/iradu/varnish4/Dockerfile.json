{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "\"Ionut Radu\" \u003ciradu@iradu.ro\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/docker-install.sh",
            "/tmp/docker-install.sh"
          ]
        },
        {
          "CmdLine": [
            "/tmp/docker-install.sh  \u0026\u0026 rm -rvf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/*.py",
            "bin/track*",
            "bin/*.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/reload",
            "/usr/bin/reload"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/default.vcl",
            "/etc/varnish/default.vcl"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6081",
            "6085"
          ]
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Test": [
              "CMD",
              "/docker-healthcheck.sh"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "varnish"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}