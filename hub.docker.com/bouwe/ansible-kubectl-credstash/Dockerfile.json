{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES",
              "Value": "bash   curl   tar   openssh-client   sshpass   git   python   py-boto   py-dateutil   py-httplib2   py-jinja2   py-paramiko   py-pip   py-yaml   ca-certificates"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026         echo \"==\u003e Adding build-dependencies...\"  \u0026\u0026     apk --update add --virtual build-dependencies       gcc       musl-dev       libffi-dev       openssl-dev       python-dev \u0026\u0026         echo \"==\u003e Upgrading apk and system...\"  \u0026\u0026     apk update \u0026\u0026 apk upgrade \u0026\u0026         echo \"==\u003e Adding Python runtime...\"  \u0026\u0026     apk add --no-cache ${BUILD_PACKAGES} \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install python-keyczar docker-py \u0026\u0026         echo \"==\u003e Installing Ansible...\"  \u0026\u0026     pip install ansible==${ANSIBLE_VERSION} \u0026\u0026         echo \"==\u003e Cleaning up...\"  \u0026\u0026     apk del build-dependencies \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026         echo \"==\u003e Adding hosts for convenience...\"  \u0026\u0026     mkdir -p /etc/ansible /ansible \u0026\u0026     echo \"[local]\" \u003e\u003e /etc/ansible/hosts \u0026\u0026     echo \"localhost\" \u003e\u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_GATHERING",
              "Value": "smart"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_RETRY_FILES_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_ROLES_PATH",
              "Value": "/ansible/playbooks/roles"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_SSH_PIPELINING",
              "Value": "True"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/ansible/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/ansible/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_LIBRARY",
              "Value": "/ansible/library"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/lachie83/k8s-kubectl\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "KUBE_LATEST_VERSION",
              "Value": "\"v1.14.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update ca-certificates  \u0026\u0026 apk add --update -t deps curl  \u0026\u0026 curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl  \u0026\u0026 chmod +x /usr/local/bin/kubectl  \u0026\u0026 apk del --purge deps  \u0026\u0026 rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add libc-dev gcc make python-dev py-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install credstash"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}