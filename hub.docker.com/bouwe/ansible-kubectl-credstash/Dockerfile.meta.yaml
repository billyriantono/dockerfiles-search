MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Env:
    - Key: ANSIBLE_VERSION
      Value: 2.5.0
    Name: env
  - Env:
    - Key: BUILD_PACKAGES
      Value: bash   curl   tar   openssh-client   sshpass   git   python   py-boto   py-dateutil   py-httplib2   py-jinja2   py-paramiko   py-pip   py-yaml   ca-certificates
    Name: env
  - CmdLine:
    - set -x &&         echo "==> Adding build-dependencies..."  &&     apk --update
      add --virtual build-dependencies       gcc       musl-dev       libffi-dev       openssl-dev       python-dev
      &&         echo "==> Upgrading apk and system..."  &&     apk update && apk
      upgrade &&         echo "==> Adding Python runtime..."  &&     apk add --no-cache
      ${BUILD_PACKAGES} &&     pip install --upgrade pip &&     pip install python-keyczar
      docker-py &&         echo "==> Installing Ansible..."  &&     pip install ansible==${ANSIBLE_VERSION}
      &&         echo "==> Cleaning up..."  &&     apk del build-dependencies &&     rm
      -rf /var/cache/apk/* &&         echo "==> Adding hosts for convenience..."  &&     mkdir
      -p /etc/ansible /ansible &&     echo "[local]" >> /etc/ansible/hosts &&     echo
      "localhost" >> /etc/ansible/hosts
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_GATHERING
      Value: smart
    Name: env
  - Env:
    - Key: ANSIBLE_HOST_KEY_CHECKING
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_RETRY_FILES_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_ROLES_PATH
      Value: /ansible/playbooks/roles
    Name: env
  - Env:
    - Key: ANSIBLE_SSH_PIPELINING
      Value: "True"
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /ansible/lib
    Name: env
  - Env:
    - Key: PATH
      Value: /ansible/bin:$PATH
    Name: env
  - Env:
    - Key: ANSIBLE_LIBRARY
      Value: /ansible/library
    Name: env
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/lachie83/k8s-kubectl"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.docker.dockerfile
      Value: '"/Dockerfile"'
    Name: label
  - Env:
    - Key: KUBE_LATEST_VERSION
      Value: '"v1.14.0"'
    Name: env
  - CmdLine:
    - apk add --update ca-certificates  && apk add --update -t deps curl  && curl
      -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -o /usr/local/bin/kubectl  && chmod +x /usr/local/bin/kubectl  && apk del --purge
      deps  && rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libc-dev gcc make python-dev py-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install credstash
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
