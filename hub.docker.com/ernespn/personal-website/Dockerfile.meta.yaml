MetaArgs: null
Stages:
- BaseName: node:argon
  Commands:
  - CmdLine:
    - "apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
      \t&& echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" >>
      /etc/apt/sources.list \t&& apt-get update \t&& apt-get install --no-install-recommends
      --no-install-suggests -y \t\t\t\t\t\tca-certificates \t\t\t\t\t\tnginx \t\t\t\t\t\tnginx-module-xslt
      \t\t\t\t\t\tnginx-module-geoip \t\t\t\t\t\tnginx-module-image-filter \t\t\t\t\t\tnginx-module-perl
      \t\t\t\t\t\tnginx-module-njs \t\t\t\t\t\tgettext-base \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /home/app
  - CmdLine:
    - npm cache clean --silent
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower grunt-cli grunt-init --silent
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --silent
    Name: run
    PrependShell: true
  - CmdLine:
    - bower cache clean --allow-root
    Name: run
    PrependShell: true
  - CmdLine:
    - GIT_DIR=/tmp bower install --allow-root --silent
    Name: run
    PrependShell: true
  - CmdLine:
    - GIT_DIR=/tmp grunt build
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -ar dist/* /usr/share/nginx/html/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp default.conf /etc/nginx/conf.d/
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: node:argon
  Name: ""
  Platform: ""
  SourceCode: FROM node:argon
