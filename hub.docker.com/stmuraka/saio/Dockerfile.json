{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Shaun Murakami (stmuraka@us.ibm.com)",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SWIFT_USER",
              "Value": "\"swift\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing  \u0026\u0026  apt-get install -y         sudo         rsyslog         software-properties-common         python-software-properties         build-essential         autoconf         automake         libtool         curl gcc memcached rsync sqlite3 xfsprogs         git-core libffi-dev python-setuptools         libssl-dev         python-coverage python-dev python-nose         python-xattr python-eventlet         python-greenlet python-pastedeploy         python-netifaces python-pip python-dnspython         python-mock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "liberasurecode_release",
          "Name": "arg",
          "Value": "1.4.0"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "git clone https://github.com/openstack/liberasurecode.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LIBERASURECODE_DIR",
              "Value": "\"/opt/liberasurecode\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${LIBERASURECODE_DIR}"
        },
        {
          "CmdLine": [
            "git checkout ${liberasurecode_release}  \u0026\u0026 ./autogen.sh  \u0026\u0026 ./configure  \u0026\u0026 make  \u0026\u0026 make test  \u0026\u0026 make install  \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pip setuptools ndg-httpsclient --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -d /home/${SWIFT_USER} -s /bin/bash ${SWIFT_USER}  \u0026\u0026 adduser ${SWIFT_USER} sudo  \u0026\u0026 adduser ${SWIFT_USER} adm  \u0026\u0026 echo \"${SWIFT_USER} ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /srv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/srv"
          ]
        },
        {
          "CmdLine": [
            "mv /etc/rc.local /etc/rc.local.orig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rc.local",
            "/etc/rc.local"
          ]
        },
        {
          "Name": "user",
          "User": "${SWIFT_USER}"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "${SWIFT_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/${SWIFT_USER}"
        },
        {
          "Key": "swiftclient_release",
          "Name": "arg",
          "Value": "3.3.0"
        },
        {
          "CmdLine": [
            "git clone https://github.com/openstack/python-swiftclient.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}/python-swiftclient  \u0026\u0026 git checkout ${swiftclient_release}  \u0026\u0026 sudo python setup.py develop  \u0026\u0026 cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "swift_release",
          "Name": "arg",
          "Value": "2.13.0"
        },
        {
          "CmdLine": [
            "git clone https://github.com/openstack/swift.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}/swift  \u0026\u0026 git checkout ${swift_release}  \u0026\u0026 sudo -H pip install -r requirements.txt  \u0026\u0026 sudo python setup.py develop  \u0026\u0026 cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}/swift  \u0026\u0026 sudo -H pip install -r test-requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo cp ${HOME}/swift/doc/saio/rsyncd.conf /etc/  \u0026\u0026 sudo sed -i -e \"s/\u003cyour-user-name\u003e/${SWIFT_USER}/\" /etc/rsyncd.conf  \u0026\u0026 sudo sed -i -e \"/^RSYNC_ENABLE.*/ s/^/#/\" /etc/default/rsync  \u0026\u0026 sudo sed -i -e \"/^#RSYNC_ENABLE.*/a RSYNC_ENABLE=true\" /etc/default/rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo mkdir -p /etc/rsyslog.d  \u0026\u0026 sudo cp ${HOME}/swift/doc/saio/rsyslog.d/10-swift.conf /etc/rsyslog.d/  \u0026\u0026 sudo sed -i -e \"s/\\$PrivDropToGroup.*/\\$PrivDropToGroup adm/\" /etc/rsyslog.conf  \u0026\u0026 sudo mkdir -p /var/log/swift  \u0026\u0026 sudo chown -R syslog.adm /var/log/swift  \u0026\u0026 sudo chmod -R g+w /var/log/swift"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo rm -rf /etc/swift  \u0026\u0026 cd ${HOME}/swift/doc  \u0026\u0026 sudo cp -r saio/swift /etc/swift  \u0026\u0026 cd -  \u0026\u0026 sudo chown -R ${SWIFT_USER}:${SWIFT_USER} /etc/swift  \u0026\u0026 find /etc/swift/ -name \\*.conf | xargs sudo sed -i \"s/\u003cyour-user-name\u003e/${SWIFT_USER}/\"  \u0026\u0026 grep changeme /etc/swift/*.conf | cut -d ':' -f1 | uniq | xargs sudo sed -i \"s/changeme/$(openssl rand -hex 16)/\"  \u0026\u0026 sed -i -e 's/^bind_ip =.*$/bind_ip = 0.0.0.0/' /etc/swift/proxy-server.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${HOME}/bin  \u0026\u0026 cd ${HOME}/swift/doc  \u0026\u0026 cp saio/bin/* ${HOME}/bin  \u0026\u0026 cd -  \u0026\u0026 chmod +x ${HOME}/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e '/^find \\/var\\/cache\\/swift/,$d' ${HOME}/bin/resetswift  \u0026\u0026 echo 'if [ $(sudo find /var/cache -type d -name \"swift*\" 2\u003e/dev/null | wc -l ) != \"0\" ] ; then' \u003e\u003e ${HOME}/bin/resetswift  \u0026\u0026 echo '    sudo find /var/cache/swift* -type f -name *.recon -exec rm -f {} \\;' \u003e\u003e ${HOME}/bin/resetswift  \u0026\u0026 echo 'fi' \u003e\u003e ${HOME}/bin/resetswift  \u0026\u0026 echo 'sudo /etc/init.d/rsyslog restart' \u003e\u003e ${HOME}/bin/resetswift  \u0026\u0026 echo 'sudo /etc/init.d/memcached restart' \u003e\u003e ${HOME}/bin/resetswift"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp ${HOME}/bin/startmain ${HOME}/bin/startall  \u0026\u0026 sed -i -e 's/main/all/' ${HOME}/bin/startall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test.conf",
            "/etc/swift/test.conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "SWIFT_TEST_CONFIG_FILE",
              "Value": "\"/etc/swift/test.conf\""
            },
            {
              "Key": "PATH",
              "Value": "\"/home/${SWIFT_USER}/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export PATH=${HOME}/bin:${PATH}\" \u003e\u003e ${HOME}/.bashrc  \u0026\u0026 . ${HOME}/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "runTests.sh",
            "/home/${SWIFT_USER}"
          ]
        },
        {
          "Env": [
            {
              "Key": "SAIO_BLOCK_DEVICE",
              "Value": "\"/srv/swift-disk\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/home/${SWIFT_USER}"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "liberasurecodeCheck.sh",
            "/home/${SWIFT_USER}"
          ]
        },
        {
          "CmdLine": [
            "sudo chown ${SWIFT_USER}.${SWIFT_USER} /etc/swift/proxy-server.conf  \u0026\u0026 sudo chown ${SWIFT_USER}.${SWIFT_USER} /home/${SWIFT_USER}/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}