{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4.0",
      "SourceCode": "FROM ruby:2.4.0",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4.0"
      },
      "Commands": [
        {
          "Maintainer": "William Durand \u003cwill+git@drnd.me\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Paris"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     postgresql-client tzdata libxml2-dev libxslt-dev     tar gnupg     git bash build-essential autoconf python automake rsync nasm openssh-client curl \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Gemfile",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Gemfile.lock",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "cd /app ; bundle install --without development test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.1.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "0.27.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done   \u0026\u0026 cd /tmp   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\"   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --verify SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c -   \u0026\u0026 tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 mkdir -p /opt/yarn   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 npm install -g npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "addgroup -gid 2000 heaven \u0026\u0026     adduser --uid 2000 --disabled-password --ingroup heaven heaven \u0026\u0026     chown -R heaven:heaven /app /usr/local/bundle/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "heaven"
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RACK_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_PROVIDER",
              "Value": "REDIS_URL"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEAVEN_ENV",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "bundle",
            "exec",
            "unicorn",
            "-p",
            "8080",
            "-c",
            "./config/unicorn.rb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}