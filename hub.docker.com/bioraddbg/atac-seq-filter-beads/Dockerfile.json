{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y tzdata \u0026\u0026 apt-get install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://895978976479a9979702704923ed384c0c6c4713@github.com/caleblareau/bap.git /bap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Maintainer": "Bio-Rad Support \u003csupport@bio-rad.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 \tapt-get install -y python3 \u0026\u0026 \tapt-get install -y python3-dev \u0026\u0026 \tapt-get install -y libcurl4-openssl-dev \u0026\u0026 \tapt-get install -y libssl-dev \u0026\u0026 \tapt-get install -y dirmngr \u0026\u0026 \tapt-get install -y samtools \u0026\u0026 \tapt-get install -y python3-venv \u0026\u0026 \tapt-get install -y parallel \u0026\u0026 \tapt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://cloud.r-project.org/bin/linux/ubuntu cosmic-cran35/\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y r-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "Rscript -e 'install.packages(c(\"devtools\",\"dplyr\",\"data.table\",\"cowplot\"), repos = \"http://cran.us.r-project.org\"); devtools::install_github(\"caleblareau/BuenColors\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'source(\"https://bioconductor.org/biocLite.R\"); biocLite(c(\"GenomicAlignments\", \"SummarizedExperiment\", \"GenomicRanges\", \"BiocParallel\", \"Rsamtools\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'devtools::install_github(\"digitalbiology/kneecallr\", auth_token=as.character(\"895978976479a9979702704923ed384c0c6c4713\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'install.packages(c(\"argparse\",\"doParallel\",\"foreach\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m venv /br_tools/bap_venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/br_tools/bap_venv/bin/pip install pysam #this is timing out when done as part of the bap install..."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/br_tools/bap_venv/bin/pip install /bap/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python2.7 -m pip install numpy scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/callBeadKnee.R",
            "/callBeadKnee.R"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/callJaccardKnee.R",
            "/callJaccardKnee.R"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/filterBeads.sh",
            "/filterBeads.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/getImplicatedBarcodes.R",
            "/getImplicatedBarcodes.R"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/quantNuclearFrags.py",
            "/quantNuclearFrags.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/bamCounter.R",
            "/bamCounter.R"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "LICENSE.txt",
            "/LICENSE.txt"
          ]
        },
        {
          "Key": "IMAGE_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_BRANCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_COMMIT",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "printf \"Container Name: $IMAGE_NAME\\n\" \u003e imageInfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"Source Branch: $SOURCE_BRANCH\\n\" \u003e\u003e imageInfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"Source Commit: $SOURCE_COMMIT\" \u003e\u003e imageInfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/filterBeads.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}