{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "Maintainer": "Bio-Rad Support \u003csupport@bio-rad.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y tzdata \u0026\u0026 \tapt-get install -y python-pip \u0026\u0026 \tapt-get install -y dirmngr \u0026\u0026 \tapt-get install -y libcurl4-openssl-dev \u0026\u0026 \tapt-get install -y libssl-dev \u0026\u0026 \tpip install numpy \u0026\u0026 \tpip install scipy \u0026\u0026 \tpip install pysam \u0026\u0026 \tpip install pandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3 \u0026\u0026     apt-get install -y python3-dev \u0026\u0026     apt-get install -y libcurl4-openssl-dev \u0026\u0026     apt-get install -y libssl-dev \u0026\u0026     apt-get install -y python3-venv \u0026\u0026     apt-get install -y samtools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://cloud.r-project.org/bin/linux/ubuntu cosmic-cran35/\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y r-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'install.packages(c(\"dplyr\",\"ggplot2\",\"cowplot\"), repos = \"http://cran.us.r-project.org\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'source(\"https://bioconductor.org/biocLite.R\"); biocLite(c(\"GenomicAlignments\", \"Rsamtools\", \"BiocParallel\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/kneeCaller.py",
            "/src/kneeCaller.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/pyDensityCalc.R",
            "/src/pyDensityCalc.R"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/dropBarcodeUniqueCounts.R",
            "/src/dropBarcodeUniqueCounts.R"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/beadsPerDrop.R",
            "/src/beadsPerDrop.R"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/split_count_species.py",
            "/src/split_count_species.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/plotCrosstalk.R",
            "/src/plotCrosstalk.R"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/callKnee.sh",
            "/src/callKnee.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/tagBamFile.py",
            "/src/tagBamFile.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bedtools/",
            "/bedtools/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "LICENSE.txt",
            "/LICENSE.txt"
          ]
        },
        {
          "Key": "IMAGE_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_BRANCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_COMMIT",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "printf \"Container Name: $IMAGE_NAME\\n\" \u003e imageInfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"Source Branch: $SOURCE_BRANCH\\n\" \u003e\u003e imageInfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"Source Commit: $SOURCE_COMMIT\" \u003e\u003e imageInfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/src/callKnee.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}