{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Maintainer": "Derek Hsu \u003cderekhsu@hotmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SONAR_VERSION",
              "Value": "6.7"
            },
            {
              "Key": "SONARQUBE_HOME",
              "Value": "/opt/sonarqube"
            },
            {
              "Key": "SONARQUBE_JDBC_USERNAME",
              "Value": "sonar"
            },
            {
              "Key": "SONARQUBE_JDBC_PASSWORD",
              "Value": "sonar"
            },
            {
              "Key": "SONARQUBE_JDBC_URL",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "groupadd -r sonarqube \u0026\u0026 useradd -r -g sonarqube sonarqube"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys F1182E81C792928921DBCAB4CFCA4A29D26468DE     \u0026\u0026 cd /opt     \u0026\u0026 curl -o sonarqube.zip -fSL https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-$SONAR_VERSION.zip     \u0026\u0026 curl -o sonarqube.zip.asc -fSL https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-$SONAR_VERSION.zip.asc     \u0026\u0026 gpg --batch --verify sonarqube.zip.asc sonarqube.zip     \u0026\u0026 unzip sonarqube.zip     \u0026\u0026 mv sonarqube-$SONAR_VERSION sonarqube     \u0026\u0026 chown -R sonarqube:sonarqube sonarqube     \u0026\u0026 rm sonarqube.zip*     \u0026\u0026 rm -rf $SONARQUBE_HOME/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "\"$SONARQUBE_HOME/data\""
          ]
        },
        {
          "Name": "workdir",
          "Path": "$SONARQUBE_HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "$SONARQUBE_HOME/bin/"
          ]
        },
        {
          "CmdLine": [
            "./bin/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}