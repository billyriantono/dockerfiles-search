MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jurijs Jegorovs jurijs+oss@scandiweb.com"'
    Name: label
  - Key: COMPOSER_HOME
    Name: arg
    Value: /var/lib/composer
  - Key: COMPOSER_VERSION
    Name: arg
    Value: latest
  - Key: COMPOSER_ALLOW_SUPERUSER
    Name: arg
    Value: "1"
  - Key: NODEJS_DIR
    Name: arg
    Value: /var/lib/node
  - Key: NODEJS_VERSION
    Name: arg
    Value: lts
  - Key: GOSU_GPG_KEY
    Name: arg
    Value: B42F6819007F00F88E364FD4036A9C25BF357DD4
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Env:
    - Key: TERM
      Value: xterm-256color
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: DOCKER_DEBUG
      Value: ${DOCKER_DEBUG}
    - Key: CPU_CORES
      Value: $(nproc)
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: $(COMPOSER_ALLOW_SUPERUSER)
    - Key: COMPOSER_HOME
      Value: /var/lib/composer
    - Key: MAKE_OPTS
      Value: '"-j $CPU_CORES"'
    - Key: N_PREFIX
      Value: ${NODEJS_DIR}
    - Key: PATH
      Value: ${NODEJS_DIR}/bin:${BASEPATH}/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf   dpkg-dev   file   g++   gcc   libc-dev   make   pkg-config   re2c   libcurl4-openssl-dev   curl   wget   openssl   bash   apt-transport-https   git   zip   unzip   autoconf   automake   nasm   pkg-config   apt-utils   libjpeg-dev   libpng-dev   libfreetype6-dev   zlib1g-dev   libicu-dev   g++   libmcrypt-dev   libxslt1-dev   libsodium-dev   libargon2-0-dev
    Name: env
  - CmdLine:
    - apt-get -qq update &&    apt-get -qq dist-upgrade -y &&    apt-get -qq install
      -y     libfreetype6-dev     build-essential     libicu-dev     libmcrypt-dev     libpng-dev     libxslt1-dev     redis-tools     ca-certificates     unzip     git     rsync     wget     nano     vim     pv     gnupg     bc     curl     msmtp     msmtp-mta     $PHPIZE_DEPS     bison     libbison-dev     ca-certificates     libedit2     libxml2     libcurl4-openssl-dev     xz-utils     libssl-dev     libreadline-dev     --no-install-recommends
      && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.16
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-7.2.16.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-7.2.16.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"7d91ed3c1447c6358a3d53f84599ef854aca4c3622de7435e2df115bf196e482"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - set -xe;   fetchDeps='   ';   if ! command -v gpg > /dev/null; then     fetchDeps="$fetchDeps     dirmngr     gnupg   ";   fi;   apt-get
      update;   apt-get dist-upgrade -y;   apt-get install -y --no-install-recommends
      $fetchDeps;   rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;   cd /usr/src;   wget
      -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then     echo "$PHP_SHA256
      *php.tar.xz" | sha256sum -c -;   fi;   if [ -n "$PHP_MD5" ]; then     echo "$PHP_MD5
      *php.tar.xz" | md5sum -c -;   fi;   if [ -n "$PHP_ASC_URL" ]; then     wget
      -O php.tar.xz.asc "$PHP_ASC_URL";     export GNUPGHOME="$(mktemp -d)";     for
      key in $GPG_KEYS; do       gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      "$key" ||       gpg --keyserver pgp.mit.edu --recv-keys "$key" ||       gpg
      --keyserver ipv4.pool.sks-keyservers.net --recv-keys "$key" ||       gpg --keyserver
      keyserver.pgp.com --recv-keys "$key" ;     done;     gpg --batch --verify php.tar.xz.asc
      php.tar.xz;     rm -rf "$GNUPGHOME";   fi;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - set -xe   && buildDeps="   $PHP_EXTRA_BUILD_DEPS   libcurl4-openssl-dev   libedit-dev   libssl-dev   libxml2-dev   zlib1g-dev   libpng-dev   libargon2-0-dev   "   &&
      apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm
      -rf /var/lib/apt/lists/*     && export CFLAGS="$PHP_CFLAGS"   CPPFLAGS="$PHP_CPPFLAGS"   LDFLAGS="$PHP_LDFLAGS"   &&
      chmod +x /usr/local/bin/docker-php-source   && docker-php-source extract   &&
      cd /usr/src/php   && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"   &&
      debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"   && ./configure   --build="$gnuArch"   --with-config-file-path="$PHP_INI_DIR"   --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"     --disable-cgi     --enable-ftp   --enable-mbstring   --enable-mysqlnd   --with-password-argon2     --with-curl   --with-libedit   --with-openssl   --with-zlib   --with-sodium     $(test
      "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit')   --with-libdir="lib/$debMultiarch"     $PHP_EXTRA_CONFIGURE_ARGS   &&
      make -j "$(nproc)"   && make install   && { find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; }   && make clean   &&
      cd /   && docker-php-source delete     && pecl update-channels   && rm -rf /tmp/pear
      ~/.pearrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - "set -ex \t&& cd /usr/local/etc \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf';
      \t\t} | tee php-fpm.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this
      to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf \t&& { \t\techo '[global]'; \t\techo
      'daemonize = no'; \t\techo; \t\techo '[www]';     echo 'pm = dynamic';     echo
      'pm.max_children = 25';     echo 'pm.start_servers = 10';     echo 'pm.min_spare_servers
      = 5';     echo 'pm.max_spare_servers = 10';     echo 'pm.max_requests = 1000';
      \    echo 'pm.process_idle_timeout = 10s';     echo 'listen = [::]:9000'; \t}
      | tee php-fpm.d/zz-docker.conf   && {     echo 'defaults';     echo 'logfile
      /proc/self/fd/2';     echo 'timeout 30';     echo 'host maildev';     echo 'tls
      off';     echo 'tls_certcheck off';     echo 'port 25';     echo 'auth off';
      \    echo 'from no-reply@docker';     echo 'account default';   } | tee /etc/msmtprc"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure   gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc)     gd     intl     mbstring     pdo     pdo_mysql     phar     xsl     zip     bcmath     dom     soap
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     wget -O - -o /dev/null https://git.io/n-install | N_PREFIX=$NODEJS_DIR
      bash -s -- -t;     wget -O - -o /dev/null https://git.io/n-install | N_PREFIX=$NODEJS_DIR
      bash -s -- -q $NODEJS_VERSION;     npm install npm -g
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -euo pipefail;         dpkgArch=\"$(dpkg --print-architecture | awk -F-
      '{ print $NF }')\";     wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \    wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \      export GNUPGHOME=\"$(mktemp -d)\";   for key in $GOSU_GPG_KEY; do           gpg
      --keyserver keys.gnupg.net --recv-keys \"$key\" ||           gpg --keyserver
      pgp.key-server.io--recv-keys \"$key\" ||           gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$key\" ||           gpg --keyserver pgp.mit.edu --recv-keys \"$key\"
      ||           gpg --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\"
      ||           gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ;     done;
      \  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;   rm -r
      \"$GNUPGHOME\" /usr/local/bin/gosu.asc;     chmod +x /usr/local/bin/gosu; \tgosu
      nobody true;"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -euo pipefail;     echo "$(tput setaf 111)Installing php composer$(tput
      sgr0)";     export EXPECTED_SIGNATURE=$(curl -s -f -L https://composer.github.io/installer.sig);     wget
      -nc -O composer-setup.php https://getcomposer.org/installer;     echo "$(tput
      setaf 111)Checking php composer signature$(tput sgr0)";     echo "$EXPECTED_SIGNATURE"
      composer-setup.php | sha384sum -c - ;         if [ -n "$COMPOSER_VERSION" ]
      && [ "$COMPOSER_VERSION" != "latest" ]; then       COMPOSER_VERSION_OVERRIDE="--version=$COMPOSER_VERSION";     else
      COMPOSER_VERSION_OVERRIDE="";     fi;     php composer-setup.php --no-ansi --install-dir=/usr/local/bin
      --filename=composer $COMPOSER_VERSION_OVERRIDE;     rm composer-setup.php;     echo
      "The compose home dir is: $COMPOSER_HOME";     composer global require hirak/prestissimo;'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&    apt-get
      purge -y --auto-remove -o     APT::AutoRemove::RecommendsImportant=false $fetchDeps
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
