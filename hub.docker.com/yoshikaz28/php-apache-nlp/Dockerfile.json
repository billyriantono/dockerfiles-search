{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.7-apache",
      "SourceCode": "FROM php:7.2.7-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2.7-apache"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"yoshikaz\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NOWARNINGS",
              "Value": "yes"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev git wget libmecab-dev locales locales-all vim unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y locales     \u0026\u0026 locale-gen ja_JP.UTF-8     \u0026\u0026 echo \"export LANG=ja_JP.UTF-8\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 git clone https://github.com/taku910/mecab.git     \u0026\u0026 cd mecab/mecab/     \u0026\u0026 ./configure --enable-utf8-only --with-charset=utf8     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ../mecab-ipadic     \u0026\u0026 ./configure --with-charset=utf8     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /tmp/CRF++-0.58.tar.gz 'https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7QVR6VXJ5dWExSTQ'     \u0026\u0026 cd /tmp/     \u0026\u0026 tar zxf CRF++-0.58.tar.gz     \u0026\u0026 cd CRF++-0.58     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 DOWNLOAD_URL=\"https://drive.google.com`curl -c cookies.txt        'https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7SDd1Q1dUQkZQaUU'        | sed -r 's/\"/\\n/g' |grep id=0B4y35FiV1wh7SDd1Q1dUQkZQaUU |grep confirm |sed 's/\u0026amp;/\\\u0026/g'`\"     \u0026\u0026 curl -L -b cookies.txt -o /tmp/cabocha-0.69.tar.bz2 \"$DOWNLOAD_URL\"     \u0026\u0026 tar jxf cabocha-0.69.tar.bz2     \u0026\u0026 cd cabocha-0.69     \u0026\u0026 export CPPFLAGS=-I/usr/local/include     \u0026\u0026 ./configure --with-mecab-config=`which mecab-config` --with-charset=utf8     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/lib\" \u003e\u003e /etc/ld.so.conf.d/lib.conf     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/y-uti/php-cabocha.git     \u0026\u0026 cd php-cabocha     \u0026\u0026 phpize     \u0026\u0026 ./configure --with-charset=utf8 --enable-utf8-only     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'extension=cabocha.so' \u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apachectl start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential libbz2-dev libdb-dev   libreadline-dev libffi-dev libgdbm-dev liblzma-dev   libncursesw5-dev libsqlite3-dev libssl-dev   zlib1g-dev uuid-dev tk-dev  \u0026\u0026 wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz  \u0026\u0026 tar xzf Python-3.7.5.tgz  \u0026\u0026 cd Python-3.7.5  \u0026\u0026 ./configure --enable-shared  --with-ensurepip  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 sh -c \"echo '/usr/local/lib' \u003e /etc/ld.so.conf.d/custom_python3.conf\"  \u0026\u0026 ldconfig  \u0026\u0026 curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py  \u0026\u0026 python3.7 get-pip.py  \u0026\u0026 which python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://github.com/taku910/cabocha/archive/master.zip  \u0026\u0026 unzip master.zip  \u0026\u0026 cd cabocha-master  \u0026\u0026 pip install python/  \u0026\u0026 cd ../  \u0026\u0026 git clone https://github.com/kenkov/cabocha  \u0026\u0026 pip3 install cabocha/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install regex mecab-python3 numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data     \u0026\u0026 groupmod -g 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}