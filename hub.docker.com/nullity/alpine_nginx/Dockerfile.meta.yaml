MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: nullity
    Name: maintainer
  - Env:
    - Key: UNAME
      Value: www-data
    Name: env
  - Env:
    - Key: CONFIG
      Value: "\"\t--prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--modules-path=/usr/lib/nginx/modules
        \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/var/log/nginx/error.log
        \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid
        \t--lock-path=/var/run/nginx.lock \t--http-client-body-temp-path=/var/cache/nginx/client_temp
        \t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
        \t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
        \t--user=$UNAME \t--group=$UNAME \t--with-http_ssl_module \t--with-http_realip_module
        \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module
        \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module
        \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_auth_request_module
        \t--with-http_stub_status_module \t--with-http_geoip_module=dynamic \t--with-threads
        \t--with-stream \t--with-stream_ssl_module \t--with-http_slice_module \t--with-mail
        \t--with-mail_ssl_module \t--with-file-aio \t--with-http_v2_module \t--with-ipv6
        \t--with-ld-opt='-Wl,-rpath,/usr/local/lib' \t--add-module=ngx_devel_kit \t--add-module=lua-nginx-module
        \t--add-module=ngx-fancyindex \t\""
    Name: env
  - CmdLine:
    - "addgroup -g 82 -S $UNAME \t&& adduser -D -u 82 -S -h /var/cache/nginx -s /sbin/nologin
      -G $UNAME $UNAME \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev
      \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl
      \t\twget \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\tperl-dev \t\tgit
      \t&& mkdir /usr/src \t&& cd /usr/src/ \t&& wget $(curl -s https://api.github.com/repos/nginx/nginx/tags
      | grep tarball_url | head -n 1 | cut -d '\"' -f 4) -O- | tar xfz - \t&& cd nginx-nginx*
      \t&& git clone https://github.com/aperezdc/ngx-fancyindex.git \t&& git clone
      https://github.com/simpl/ngx_devel_kit \t&& git clone https://github.com/openresty/lua-nginx-module
      \t&& git clone -b v2.1 http://luajit.org/git/luajit-2.0.git \t&& cd luajit*
      \t&& make install \t&& export LUAJIT_LIB=/usr/local/lib \t&& export LUAJIT_INC=/usr/local/include/luajit-2.1
      \t&& ln -sf luajit-2.1.0-beta3 /usr/local/bin/luajit \t&& cd .. \t&& auto/configure
      $CONFIG --with-debug \t&& make \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_geoip_module.so
      objs/ngx_http_geoip_module-debug.so \t&& auto/configure $CONFIG \t&& make -j\"$(getconf
      _NPROCESSORS_ONLN)\"\t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir
      /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 docs/html/index.html
      /usr/share/nginx/html/ \t&& install -m644 docs/html/50x.html /usr/share/nginx/html/
      \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755
      objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& runDeps=\"$( \t\tscanelf --needed
      --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --virtual .nginx-rundeps $runDeps
      \t&& apk del .build-deps \t&& rm -rf /usr/src/nginx-nginx* \t&& apk add --no-cache
      gettext libgcc \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf
      /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
