MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: nullity
    Name: maintainer
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf
        \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \t\tca-certificates \t\tcurl
      \t\ttar \t\txz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
    Name: env
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcurl-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\tlibressl-dev \t\tsqlite-dev \t\tlibmcrypt-dev
      \t\tfreetype-dev \t\tpostgresql-dev \t\tlibpng-dev \t\tjpeg-dev \t\tbzip2-dev
      \t\topenjpeg-dev \t\tgmp-dev \t\tlibc-dev \t\tlibxslt-dev \t\tgettext-dev \t\twget
      \t&& mkdir -p /usr/src \t&& cd /usr/src/ \t&& wget php.net$(curl http://php.net/downloads.php|grep
      -o '<a href=\"/get/php-7[^\"]*\"'|head -1|sed 's/[^\\/]*//'|sed 's/.$//'|sed
      's/a\\//this\\//') -O-|tar xfj - \t&& cd /usr/src/php-7* \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t$PHP_EXTRA_CONFIGURE_ARGS
      \t\t--disable-cgi \t\t--enable-mysqlnd \t\t--enable-mbstring \t\t--enable-sockets
      \t\t--enable-pcntl \t\t--enable-mbregex \t\t--enable-bcmath \t\t--enable-zip
      \t\t--enable-inline-optimization \t\t--enable-gd-native-ttf \t\t--enable-ftp
      \t\t--enable-opcache \t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib
      \t\t--with-bz2 \t\t--with-pgsql \t\t--with-gmp \t\t--with-pdo-pgsql \t\t--with-libxml
      \t\t--with-mcrypt \t\t--with-gd \t\t--with-mhash \t\t--with-xsl \t\t--with-gettext
      \t\t--with-pcre-regex  \t\t--with-pdo-mysql  \t\t--with-mysqli \t&& make \t&&
      make install \t&& { find /usr/local/bin /usr/local/sbin -type f -perm +0111
      -exec strip --strip-all '{}' + || true; } \t&& make clean \t&& runDeps=\"$(
      \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .php-rundeps
      $runDeps \t&& apk del .build-deps \t&& rm -rf /usr/src/php-7*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - "set -ex \t&& cd /usr/local/etc \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf';
      \t\t} | tee php-fpm.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this
      to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf \t&& { \t\techo '[global]'; \t\techo
      'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = [::]:9000';
      \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
