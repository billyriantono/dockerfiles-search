{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/tmp/src"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /tmp/src/.git* \u0026\u0026     chown -R 1001 /tmp/src \u0026\u0026     chgrp -R 0 /tmp/src \u0026\u0026     chmod -R g+w /tmp/src \u0026\u0026     rm -rf /tmp/scripts \u0026\u0026     mv /tmp/src/.s2i/bin /tmp/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y wget bzip2 git gcc gcc-c++ make httpd httpd-devel scl-utils centos-release-scl-rh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y rh-nodejs10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh -O /tmp/miniconda.sh \u0026\u0026     chmod +x /tmp/miniconda.sh \u0026\u0026     /bin/bash /tmp/miniconda.sh -b -p /opt/conda \u0026\u0026     rm /tmp/miniconda.sh \u0026\u0026     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \u0026\u0026     echo \". /opt/conda/etc/profile.d/conda.sh\" \u003e\u003e ~/.bashrc \u0026\u0026     echo \"conda activate jupyterlab\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir .conda .cache .config .npm .local .jupyter /home/jupyternbs \u0026\u0026     chown -R 1001:0 .conda .cache .config .npm .local .jupyter /home/jupyternbs \u0026\u0026     chown -R 1001:0 /opt/conda \u0026\u0026     mkdir -p /opt/app-root/etc /opt/app-root/bin \u0026\u0026     chown -R 1001:0 /opt/app-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1001"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_PREFIX",
              "Value": "/opt/app-root"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "/opt/app-root/src"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"S2I builder for custom Jupyter notebooks.\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"Jupyter Notebook\""
            },
            {
              "Key": "io.openshift.expose-services",
              "Value": "\"8080:http\""
            },
            {
              "Key": "io.openshift.tags",
              "Value": "\"builder,python,jupyter,jupyterhub\""
            },
            {
              "Key": "io.openshift.s2i.scripts-url",
              "Value": "\"image:///opt/app-root/builder\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "/tmp/scripts/assemble"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/app-root/builder/run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}