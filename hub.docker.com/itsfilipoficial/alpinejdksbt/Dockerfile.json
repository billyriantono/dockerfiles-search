{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Filipe Ferreira \u003cadmin@itsfilipoficial.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "131"
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "11"
            },
            {
              "Key": "JAVA_PATH",
              "Value": "d54c1d3a095b4ff2b6607d096fa80163"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/default-jvm\""
            },
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.15"
            },
            {
              "Key": "SBT_BIN",
              "Value": "\"/opt/sbt/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026     ALPINE_GLIBC_PACKAGE_VERSION=\"2.25-r0\" \u0026\u0026     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     apk add --no-cache --virtual=.build-dependencies wget ca-certificates \u0026\u0026     wget         \"https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub\"         -O \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     wget         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     apk add --no-cache         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true \u0026\u0026     echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026     apk del glibc-i18n \u0026\u0026     rm \"/root/.wget-hsts\" \u0026\u0026     apk del .build-dependencies \u0026\u0026     rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip \u0026\u0026     cd \"/tmp\" \u0026\u0026     wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"         \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026     tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026     mkdir -p \"/usr/lib/jvm\" \u0026\u0026     mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \u0026\u0026     ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \u0026\u0026     ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \u0026\u0026     rm -rf \"$JAVA_HOME/\"*src.zip \u0026\u0026     rm -rf \"$JAVA_HOME/lib/missioncontrol\"            \"$JAVA_HOME/lib/visualvm\"            \"$JAVA_HOME/lib/\"*javafx*            \"$JAVA_HOME/jre/lib/plugin.jar\"            \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\"            \"$JAVA_HOME/jre/bin/javaws\"            \"$JAVA_HOME/jre/lib/javaws.jar\"            \"$JAVA_HOME/jre/lib/desktop\"            \"$JAVA_HOME/jre/plugin\"            \"$JAVA_HOME/jre/lib/\"deploy*            \"$JAVA_HOME/jre/lib/\"*javafx*            \"$JAVA_HOME/jre/lib/\"*jfx*            \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\"            \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so            \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\"            \"$JAVA_HOME/jre/lib/amd64/libglass.so\"            \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\"            \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so            \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so            \"$JAVA_HOME/jre/bin/jjs\"            \"$JAVA_HOME/jre/bin/keytool\"            \"$JAVA_HOME/jre/bin/orbd\"            \"$JAVA_HOME/jre/bin/pack200\"            \"$JAVA_HOME/jre/bin/policytool\"            \"$JAVA_HOME/jre/bin/rmid\"            \"$JAVA_HOME/jre/bin/rmiregistry\"            \"$JAVA_HOME/jre/bin/servertool\"            \"$JAVA_HOME/jre/bin/tnameserv\"            \"$JAVA_HOME/jre/bin/unpack200\"            \"$JAVA_HOME/jre/lib/ext/nashorn.jar\"            \"$JAVA_HOME/jre/lib/jfr.jar\"            \"$JAVA_HOME/jre/lib/jfr\"            \"$JAVA_HOME/jre/lib/oblique-fonts\" \u0026\u0026     wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"         \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \u0026\u0026     unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \u0026\u0026     rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \u0026\u0026     apk del build-dependencies \u0026\u0026     rm \"/tmp/\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=sbt-dependencies wget unzip \u0026\u0026     mkdir -p /opt \u0026\u0026     cd /opt/ \u0026\u0026     wget \"http://dl.bintray.com/sbt/native-packages/sbt/$SBT_VERSION/sbt-$SBT_VERSION.zip\" \u0026\u0026    unzip ./sbt-$SBT_VERSION.zip \u0026\u0026     rm -rf ./sbt-$SBT_VERSION.zip \u0026\u0026     ln -s \"$SBT_BIN/\"* \"/usr/bin/\" \u0026\u0026     chmod +x $SBT_BIN/* \u0026\u0026    apk del sbt-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache bash git"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}