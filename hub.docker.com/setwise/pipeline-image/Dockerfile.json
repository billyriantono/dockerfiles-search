{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install software-properties-common \u0026\u0026     add-apt-repository 'deb http://archive.ubuntu.com/ubuntu trusty universe' \u0026\u0026     apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'mysql-server mysql-server/root_password password root' | debconf-set-selections \u0026\u0026     echo 'mysql-server mysql-server/root_password_again password root' | debconf-set-selections \u0026\u0026     apt-get -y install mysql-server-5.6 mysql-client-5.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service mysql start \u0026\u0026     mysql -uroot -proot -e \"CREATE USER 'homestead'@'localhost' IDENTIFIED BY 'secret';\" \u0026\u0026     mysql -uroot -proot -e \"GRANT ALL PRIVILEGES ON *.* TO 'homestead'@'localhost';\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install wget curl git nodejs npm libpng-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g n \u0026\u0026     n 8.9.0 \u0026\u0026     npm config set unsafe-perm true \u0026\u0026     npm config set user 0 \u0026\u0026     npm install -g flightplan gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/package.json",
            "/opt/files/package.json"
          ]
        },
        {
          "CmdLine": [
            "npm --prefix /opt/files install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install php7.2-cli php7.2-fpm php7.2-opcache php7.2-mbstring php7.2-mysql php7.2-xml php7.2-gd php7.2-curl php7.2-zip php7.2-pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/composer_install.sh",
            "/composer_install.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /composer_install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/composer_install.sh \u0026\u0026     mv /tmp/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y openjdk-8-jre openjdk-8-jdk xvfb unzip git dbus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \u0026\u0026     apt-get update \u0026\u0026     dpkg -i /tmp/chrome.deb || apt-get -y -f install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/2.35/chromedriver_linux64.zip \u0026\u0026     unzip /tmp/chromedriver.zip -d /tmp/ \u0026\u0026     chmod +x /tmp/chromedriver \u0026\u0026     mv /tmp/chromedriver /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/selenium.jar https://selenium-release.storage.googleapis.com/3.8/selenium-server-standalone-3.8.1.jar \u0026\u0026     mv /tmp/selenium.jar /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install postgresql postgresql-contrib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd homestead \u0026\u0026     echo homestead:secret | chpasswd \u0026\u0026     service postgresql start \u0026\u0026     su - postgres -s /bin/bash -c \"createuser -s root\" \u0026\u0026     createuser -s homestead \u0026\u0026     psql -c \"ALTER USER homestead WITH PASSWORD 'secret'\" -d postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ubuntugis/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install postgis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/start.sh",
            "/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/profile.sh",
            "/root/.profile"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/profile.sh",
            "/root/.bash_rc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/entrypoint.sh",
            "/opt/scripts/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/scripts/entrypoint.sh /root/.profile /root/.bash_rc /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/scripts/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}