{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "export samba_version=4.9.4  \u0026\u0026 export DEBIAN_FRONTEND=noninteractive   \u0026\u0026 apt-get -q -y update  \u0026\u0026 apt-get -q -y install build-essential                           wget  \u0026\u0026 apt-get -q -y install acl                           attr                           autoconf                           bison                           build-essential                           debhelper                           dnsutils                           docbook-xml                           docbook-xsl                           flex                           gdb                           krb5-user                           libacl1-dev                           libaio-dev                           libattr1-dev                           libblkid-dev                           libbsd-dev                           libcap-dev                           libcups2-dev                           libgnutls28-dev                           libjson-perl                           libldap2-dev                           libncurses5-dev                           libpam0g-dev                           libparse-yapp-perl                           libpopt-dev                           libreadline-dev                           libjansson-dev                           libarchive-dev                           libgpgme11-dev                           libtracker-sparql-1.0-dev                           libtracker-miner-1.0-dev                           perl                           perl-modules                           pkg-config                           procps                           python-all-dev                           python-dev                           python-dnspython                           python-crypto                           python-gpgme                           xsltproc                           zlib1g-dev   \u0026\u0026 apt-get -q -y clean  \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*   \u0026\u0026 wget https://download.samba.org/pub/samba/stable/samba-${samba_version}.tar.gz  \u0026\u0026 tar xvf samba-${samba_version}.tar.gz  \u0026\u0026 rm samba-${samba_version}.tar.gz   \u0026\u0026 cd samba-${samba_version}  \u0026\u0026 ./configure --prefix=/ --enable-spotlight --without-ldb-lmdb  \u0026\u0026 make  \u0026\u0026 make install   \u0026\u0026 touch /var/locks/registry.tdb  \u0026\u0026 cp examples/smb.conf.default /etc/smb.conf  \u0026\u0026 cd -   \u0026\u0026 rm -rf samba-${samba_version}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/shares"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "139",
            "445"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "/usr/local/bin/"
          ]
        },
        {
          "Health": {
            "Test": [
              "CMD",
              "docker-healthcheck.sh"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash",
            "-c",
            "smbd -FS -d 2 \u003c /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}