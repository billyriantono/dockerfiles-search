{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:alpine",
      "SourceCode": "FROM nginx:alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "github.user",
              "Value": "\"ServerContainers\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "ACME_CONFIG",
              "Value": "/root/.config/acme"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update  \u0026\u0026 apk add wget             openssl             ca-certificates  \u0026\u0026 rm -f /var/cache/apk/*    \u0026\u0026 sed -i 's/access_log.*/access_log \\/dev\\/stdout;/g' /etc/nginx/nginx.conf  \u0026\u0026 sed -i 's/error_log.*/error_log \\/dev\\/stdout info;/g' /etc/nginx/nginx.conf  \u0026\u0026 sed -i 's/^pid/daemon off;\\npid/g' /etc/nginx/nginx.conf   \u0026\u0026 sed -i 's,include /etc,include /conf/*.conf;\\n    include /etc,g' /etc/nginx/nginx.conf    \u0026\u0026 if uname -m | grep arm; then export ACME_URL='https://github.com/google/acme/releases/download/1.1.1/acme-linux-arm';  else export ACME_URL='https://github.com/google/acme/releases/download/1.1.1/acme-linux-amd64'; fi   \u0026\u0026 export ACME_BINARY='/usr/local/bin/acme'  \u0026\u0026 wget -O \"$ACME_BINARY\" \"$ACME_URL\"  \u0026\u0026 chmod a+x \"$ACME_BINARY\"  \u0026\u0026 mkdir -p /root/.config/acme /conf /certs /data    \u0026\u0026 wget -O /iana-tlds.txt \"http://data.iana.org/TLD/tlds-alpha-by-domain.txt\"    \u0026\u0026 openssl dhparam -out /etc/nginx/dh.pem 4096"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "snippets",
            "/etc/nginx/snippets/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "/usr/local/bin/"
          ]
        },
        {
          "Health": {
            "Test": [
              "CMD",
              "docker-healthcheck.sh"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}