{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base_image",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 AS base_image",
      "Platform": "",
      "As": "base_image",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": null
    },
    {
      "Name": "build",
      "BaseName": "base_image",
      "SourceCode": "FROM base_image AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "base_image",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache curl build-base openssl openssl-dev zlib-dev linux-headers pcre-dev ffmpeg ffmpeg-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir nginx nginx-vts-module"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VTS_MODULE_VERSION",
              "Value": "v0.1.18"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -C nginx --strip 1 -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://github.com/vozlt/nginx-module-vts/archive/${VTS_MODULE_VERSION}.tar.gz  | tar -C nginx-vts-module --strip 1 -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "nginx"
        },
        {
          "CmdLine": [
            "./configure     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --add-module=../nginx-vts-module     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_gzip_static_module     --with-http_auth_request_module     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module     --with-cc-opt=\"-O3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base_image",
      "SourceCode": "FROM base_image",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base_image",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache     ca-certificates     gettext     openssl     pcre     tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -S nginx     \u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/sbin/nginx",
            "/usr/sbin/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/nginx",
            "/etc/nginx"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /etc/nginx/*.default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf.tmpl"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /cache /log /etc/certs.d /var/log/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bad.*",
            "/etc/certs.d/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/cache",
            "/log",
            "/etc/certs.d"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "-g",
            "--",
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "cache"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "CmdLine": [
            "echo \"$VERSION\" \u003e /version.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}