{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base_image",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 as base_image",
      "Platform": "",
      "As": "base_image",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": null
    },
    {
      "Name": "build",
      "BaseName": "base_image",
      "SourceCode": "FROM base_image AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "base_image",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache \tbuild-base \tcurl \texpat-dev \tffmpeg \tffmpeg-dev \tlibxslt-dev \tlinux-headers \tgeoip-dev \tgd-dev \topenssl \topenssl-dev \tpcre-dev \tzlib-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir nginx nginx-vts-module"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VTS_MODULE_VERSION",
              "Value": "v0.1.18"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBDAV_EXT_SHA",
              "Value": "430fd774fe838a04f1a5defbf1dd571d42300cf9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fSsL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -C nginx --strip 1 -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fSsL https://github.com/vozlt/nginx-module-vts/archive/${VTS_MODULE_VERSION}.tar.gz  | tar -C nginx-vts-module --strip 1 -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fSsL https://codeload.github.com/arut/nginx-dav-ext-module/zip/$WEBDAV_EXT_SHA -o /nginx-dav-ext-module.zip \t\u0026\u0026 unzip -q /nginx-dav-ext-module.zip \t\u0026\u0026 rm /nginx-dav-ext-module.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/nginx"
        },
        {
          "CmdLine": [
            "./configure \t--prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--modules-path=/usr/lib/nginx/modules \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/var/log/nginx/error.log \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid \t--lock-path=/var/run/nginx.lock \t--http-client-body-temp-path=/var/cache/nginx/client_temp \t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t--user=nginx \t--group=nginx \t--add-module=../nginx-vts-module \t--add-module=../nginx-dav-ext-module-$WEBDAV_EXT_SHA \t--with-threads \t--with-stream_ssl_preread_module \t--with-stream_ssl_module \t--with-stream_realip_module \t--with-stream \t--with-mail_ssl_module \t--with-mail \t--with-http_v2_module \t--with-http_sub_module \t--with-http_ssl_module \t--with-http_slice_module \t--with-http_realip_module \t--with-http_gzip_static_module \t--with-http_auth_request_module \t--with-http_addition_module \t--with-file-aio \t--with-compat \t--with-http_xslt_module=dynamic \t--with-http_sub_module \t--with-http_stub_status_module \t--with-http_ssl_module \t--with-http_secure_link_module \t--with-http_realip_module \t--with-http_random_index_module \t--with-http_mp4_module \t--with-http_image_filter_module=dynamic \t--with-http_gzip_static_module \t--with-http_gunzip_module \t--with-http_geoip_module=dynamic \t--with-http_flv_module \t--with-http_dav_module \t--with-http_auth_request_module \t--with-http_addition_module \t--with-cc-opt=\"-O3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base_image",
      "SourceCode": "FROM base_image",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base_image",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache \tca-certificates \tgettext \topenssl \tpcre \ttini \ttzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .htpasswd apache2-utils \t\u0026\u0026 mv /usr/bin/htpasswd /tmp/ \t\u0026\u0026 apk del .htpasswd \t\u0026\u0026 mv /tmp/htpasswd /usr/bin/ \t\u0026\u0026 apk add --no-cache apr apr-util"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -S nginx \t\u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/sbin/nginx",
            "/usr/sbin/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/nginx",
            "/etc/nginx"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /etc/nginx/*.default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf.templ",
            "/etc/nginx/nginx.conf.templ"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.*.conf.templ",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /cache /log /etc/certs.d /var/log/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WORKER_USERNAME",
              "Value": "nginx"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /data /tmp/uploads /log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \t\u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/tmp/uploads",
            "/log"
          ]
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGTERM"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "-g",
            "--",
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "CmdLine": [
            "echo \"$VERSION\" \u003e /version.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}