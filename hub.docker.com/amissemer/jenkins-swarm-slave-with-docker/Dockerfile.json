{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk",
      "SourceCode": "FROM openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk"
      },
      "Commands": [
        {
          "Maintainer": "Adrien Missemer \u003cadrien.missemer@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SWARM_VERSION",
              "Value": "2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SLAVE_HOME",
              "Value": "/var/lib/jenkins_slave"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apt-transport-https ca-certificates     \u0026\u0026 apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D     \u0026\u0026 echo deb https://apt.dockerproject.org/repo debian-jessie main \u003e /etc/apt/sources.list.d/docker.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y docker-engine     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --create-dirs -sSLo     /usr/share/jenkins/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar     http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$JENKINS_SWARM_VERSION/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar \u0026\u0026     chmod 755 /usr/share/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 curl -fSL \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\" -o /usr/local/bin/tini     \u0026\u0026 curl -fSL \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\" -o /usr/local/bin/tini.asc     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5     \u0026\u0026 gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc     \u0026\u0026 chmod +x /usr/local/bin/tini     \u0026\u0026 tini -h"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$JENKINS_SLAVE_HOME"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--",
            "jenkins-slave-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}