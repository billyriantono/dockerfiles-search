MetaArgs: null
Stages:
- As: backend
  BaseName: rust:latest
  Commands:
  - Name: workdir
    Path: /inventory/backend
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./backend/Cargo.toml
    - .
  - CmdLine:
    - mkdir -p src/bin &&     touch src/lib.rs &&     echo "fn main() {println!(\"If
      you see this, the build broke\");}" > src/bin/main.rs &&     cargo build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./backend/src
    - ./src
  - CmdLine:
    - touch src/bin/main.rs && touch src/lib.rs && cargo build
    Name: run
    PrependShell: true
  From:
    Image: rust:latest
  Name: backend
  Platform: ""
  SourceCode: FROM rust:latest as backend
- As: frontend
  BaseName: node:lts
  Commands:
  - Name: workdir
    Path: /inventory/frontend
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./frontend
    - .
  - CmdLine:
    - yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn build
    Name: run
    PrependShell: true
  From:
    Image: node:lts
  Name: frontend
  Platform: ""
  SourceCode: FROM node:lts AS frontend
- BaseName: centos:latest
  Commands:
  - CmdLine:
    - yum install -y libpq
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /inventory
  - CmdLine:
    - mkdir -p frontend/build
    Name: run
    PrependShell: true
  - Chown: ""
    From: frontend
    Name: copy
    SourcesAndDest:
    - /inventory/frontend/build
    - ./frontend/build
  - Chown: ""
    From: backend
    Name: copy
    SourcesAndDest:
    - /inventory/backend/target/debug/erp
    - ./backend/erp
  - Env:
    - Key: BIND_ADDRESS
      Value: http://0.0.0.0:8000
    Name: env
  - Env:
    - Key: FRONTEND_PUBLIC_PATH
      Value: /inventory/frontend/build
    Name: env
  - CmdLine:
    - backend/erp
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8000"
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
