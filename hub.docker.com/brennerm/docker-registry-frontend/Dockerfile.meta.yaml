MetaArgs: null
Stages:
- BaseName: python:alpine3.6
  Commands:
  - Maintainer: '"xamrennerb@gmail.com"'
    Name: maintainer
  - Env:
    - Key: SOURCE_DIR
      Value: /root
    Name: env
  - Name: workdir
    Path: $SOURCE_DIR
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Dockerfile
    - LICENSE
    - requirements.txt
    - bower.json
    - .bowerrc
    - config.json
    - frontend.py
    - $SOURCE_DIR/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_registry_frontend/
    - $SOURCE_DIR/docker_registry_frontend
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - static
    - $SOURCE_DIR/static
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates
    - $SOURCE_DIR/templates
  - CmdLine:
    - apk update &&     apk add       nginx       nodejs-npm       git &&     pip
      install -r /root/requirements.txt &&     npm install -g bower &&     bower --allow-root
      install &&     mkdir -p /run/nginx
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-registry-frontend.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - '[''/etc/nginx/sites-enabled/docker-registry-frontend.conf'','
    - '''/root/config.json'']'
  - CmdLine:
    - python3 frontend.py -i 0.0.0.0 -p 8080 config.json & nginx -g "daemon off;"
    Name: entrypoint
    PrependShell: true
  From:
    Image: python:alpine3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:alpine3.6
