{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Hari Sekhon (https://www.linkedin.com/in/harisekhon)",
          "Name": "maintainer"
        },
        {
          "Key": "SPARK_VERSION",
          "Name": "arg",
          "Value": "1.6.2"
        },
        {
          "Key": "HADOOP_VERSION",
          "Name": "arg",
          "Value": "2.6"
        },
        {
          "Key": "TAR",
          "Name": "arg",
          "Value": "spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/spark/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Apache Spark\""
            },
            {
              "Key": "\"Spark Version\"",
              "Value": "\"$SPARK_VERSION\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026     apk add --no-cache bash openjdk8-jre-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026     apk add --no-cache wget tar \u0026\u0026     wget -t 100 --retry-connrefused -O \"${TAR}\" \"http://d3kbcqa49mib13.cloudfront.net/${TAR}\" \u0026\u0026     tar zxf \"${TAR}\" \u0026\u0026     rm -fv \"${TAR}\" \u0026\u0026     ln -s \"spark-$SPARK_VERSION-bin-hadoop$HADOOP_VERSION\" spark \u0026\u0026     apk del wget tar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd \u0026\u0026 chmod 0755 /var/run/sshd \u0026\u0026 cp -v /spark/conf/spark-env.sh.template /spark/conf/spark-env.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "4040",
            "7077",
            "8080",
            "8081"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}