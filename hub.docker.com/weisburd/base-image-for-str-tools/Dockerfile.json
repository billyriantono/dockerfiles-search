{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitnami/minideb:stretch",
      "SourceCode": "FROM bitnami/minideb:stretch",
      "Platform": "",
      "From": {
        "Image": "bitnami/minideb:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Ben Weisburd",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "\"3.7.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GATK_VERSION",
              "Value": "\"4.1.0.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PICARD_VERSION",
              "Value": "\"2.18.21\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SAMTOOLS_VERSION",
              "Value": "\"1.9\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VCF_TOOLS_VERSION",
              "Value": "\"0.1.16\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BED_TOOLS_VERSION",
              "Value": "\"2.25.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GCLOUD_SDK_VERISON",
              "Value": "\"237.0.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "install_packages ca-certificates wget pkg-config gcc g++ make bzip2 zlib1g-dev dpkg-dev build-essential libcurl4-openssl-dev libbz2-dev liblzma-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_packages python-dev python-setuptools python-pip \t\u0026\u0026 pip install --upgrade wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get dist-upgrade -y \t\u0026\u0026 apt-get install -y python-smbus libncursesw5-dev libgdbm-dev libc6-dev zlib1g-dev libsqlite3-dev libssl-dev openssl libffi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz \t\u0026\u0026 tar xvf Python-${PYTHON_VERSION}.tar.xz \t\u0026\u0026 rm Python-${PYTHON_VERSION}.tar.xz \t\u0026\u0026 cd Python-${PYTHON_VERSION} \t\u0026\u0026 ./configure --enable-optimizations \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y default-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/broadinstitute/picard/releases/download/${PICARD_VERSION}/picard.jar -O /picard.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/broadinstitute/gatk/releases/download/${GATK_VERSION}/gatk-${GATK_VERSION}.zip \t\u0026\u0026 apt install -y unzip \t\u0026\u0026 unzip gatk-${GATK_VERSION}.zip \t\u0026\u0026 rm gatk-${GATK_VERSION}.zip \t\u0026\u0026 ln -s gatk-${GATK_VERSION}/gatk-package-${GATK_VERSION}-local.jar /gatk.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2 \t\u0026\u0026 tar xjf samtools-${SAMTOOLS_VERSION}.tar.bz2 \t\u0026\u0026 rm samtools-${SAMTOOLS_VERSION}.tar.bz2 \t\u0026\u0026 cd samtools-${SAMTOOLS_VERSION} \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/htslib/releases/download/${SAMTOOLS_VERSION}/htslib-${SAMTOOLS_VERSION}.tar.bz2 \t\u0026\u0026 tar xjf htslib-${SAMTOOLS_VERSION}.tar.bz2 \t\u0026\u0026 rm htslib-${SAMTOOLS_VERSION}.tar.bz2 \t\u0026\u0026 cd htslib-${SAMTOOLS_VERSION} \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y autoconf unzip \t\u0026\u0026 wget https://github.com/samtools/bcftools/archive/95898767c48457d8bee4a0fb3a813316cc65042f.zip -O bcftools-develop.zip \t\u0026\u0026 unzip bcftools-develop.zip \t\u0026\u0026 rm bcftools-develop.zip \t\u0026\u0026 cd bcftools-* \t\u0026\u0026 autoconf \t\u0026\u0026 autoheader \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/vcftools/vcftools/releases/download/v${VCF_TOOLS_VERSION}/vcftools-${VCF_TOOLS_VERSION}.tar.gz \t\u0026\u0026 tar xzf vcftools-${VCF_TOOLS_VERSION}.tar.gz \t\u0026\u0026 rm vcftools-${VCF_TOOLS_VERSION}.tar.gz \t\u0026\u0026 cd vcftools-${VCF_TOOLS_VERSION} \t\u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/arq5x/bedtools2/releases/download/v${BED_TOOLS_VERSION}/bedtools-${BED_TOOLS_VERSION}.tar.gz \t\u0026\u0026 tar xzf bedtools-${BED_TOOLS_VERSION}.tar.gz \t\u0026\u0026 rm bedtools-${BED_TOOLS_VERSION}.tar.gz \t\u0026\u0026 cd bedtools2 \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/lindenb/verticalize/archive/v1.0.1.tar.gz -O verticalize-1.0.1.tar.gz \t\u0026\u0026 tar xzf verticalize-1.0.1.tar.gz \t\u0026\u0026 cd verticalize-1.0.1 \t\u0026\u0026 make \t\u0026\u0026 mv verticalize /usr/local/bin \t\u0026\u0026 cd .. \t\u0026\u0026 rm -rf verticalize-1.0.1*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/atks/vt/archive/0.57721.tar.gz -O vt-0.57721.tar.gz \t\u0026\u0026 tar xzf vt-0.57721.tar.gz \t\u0026\u0026 cd vt-0.57721 \t\u0026\u0026 make \t\u0026\u0026 mv vt /usr/local/bin \t\u0026\u0026 cd .. \t\u0026\u0026 rm -rf vt-0.57721*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://data.broadinstitute.org/igv/projects/downloads/2.4/igvtools_2.4.17.zip \t\u0026\u0026 unzip igvtools_2.4.17"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_packages emacs vim less curl htop xterm git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERISON}-linux-x86_64.tar.gz     \u0026\u0026 tar xzf google-cloud-sdk-${GCLOUD_SDK_VERISON}-linux-x86_64.tar.gz     \u0026\u0026 /google-cloud-sdk/install.sh -q     \u0026\u0026 /google-cloud-sdk/bin/gcloud components update --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget http://tandem.bu.edu/trf/downloads/trf409.linux64 \t\u0026\u0026 chmod 777 /trf409.linux64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m pip install --upgrade pip \t\u0026\u0026 python3 -m pip install --upgrade tqdm pyvcf pyfaidx cyvcf2 peewee scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bashrc",
            "/root/.bashrc"
          ]
        }
      ]
    }
  ]
}