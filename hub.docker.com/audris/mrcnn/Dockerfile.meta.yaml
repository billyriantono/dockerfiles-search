MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: audrism  <audris@mockus.org>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get update -qq  && apt-get install --no-install-recommends -y     dbus
      \    openssh-server     lsof sudo     libssl-dev     sssd     sssd-tools     libnss-sss
      \    libpam-pwquality     libpam-sss     libsss-sudo     ldap-utils     vim
      \    git \t wget     curl lsb-release     tmux  zsh zip     build-essential
      \    cmake     g++     git     python3.5     python3.5-dev     python3-pip     python3-setuptools
      \    python3-virtualenv     python3-wheel     pkg-config     ipython3-notebook
      \    libopenblas-base     python3-numpy     python3-scipy     python3-yaml     python3-pydot
      \    python3-tk \t\tlibopenblas-dev \t\tliblapack-dev \t\tlibssl-dev \t\tlibtiff5-dev
      \t\tlibwebp-dev \t\tlibzmq3-dev \t\tzlib1g-dev \t\tqt5-default \t\tlibvtk6-dev
      \t\tzlib1g-dev \t\tlibjpeg-dev \t\tlibwebp-dev \t\tlibpng-dev \t\tlibtiff5-dev
      \t\tlibopenexr-dev \t\tlibgdal-dev \t\tlibdc1394-22-dev \t\tlibavcodec-dev \t\tlibavformat-dev
      \t\tlibswscale-dev \t\tlibtheora-dev \t\tlibvorbis-dev \t\tlibxvidcore-dev \t\tlibx264-dev
      \t\tr-recommended     r-base-dev \t r-cran-car \t r-cran-rcolorbrewer \t r-cran-fastcluster
      \t\tpython3-nose \t\tpython3-h5py \t\tpython3-skimage \t\tpython3-matplotlib
      \t\tpython3-pandas \t\tpython3-sklearn \t\tpython3-sympy \t\tlibpython3-dev
      python3-dev openjdk-8-jdk && apt-get clean  && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias python='python3'" >> /root/.bash_aliases && echo "alias pip='pip3'"
      >> /root/.bash_aliases
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
    Name: run
    PrependShell: true
  - Key: CAFFE_VERSION
    Name: arg
    Value: master
  - CmdLine:
    - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8"
      | tee /etc/apt/sources.list.d/bazel.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -qq  && apt-get install --no-install-recommends -y \t bazel
      && apt-get clean && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip3 install PhotoHash Pillow requests Cython jupyter && mkdir /root/.jupyter
      && echo \"c.NotebookApp.ip = '*'\"          \"\\nc.NotebookApp.open_browser
      = False\" \t\t\t         \"\\nc.NotebookApp.token = ''\" \t\t\t\t\t\t         >
      /root/.jupyter/jupyter_notebook_config.py"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Key: TF_BINARY_URL
    Name: arg
    Value: http://web.eecs.utk.edu/~audris/tensorflow-1.4.1-cp35-cp35m-linux_x86_64.whl
  - CmdLine:
    - pip3 install --upgrade $TF_BINARY_URL
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "6006"
  - Env:
    - Key: KERAS_BACKEND
      Value: tensorflow
    Name: env
  - CmdLine:
    - dpkg-query -l > /dpkg-query-l.txt  && pip3 freeze > /pip3-freeze.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone --depth 1 https://github.com/opencv/opencv.git /root/opencv && \tcd
      /root/opencv && \tmkdir build && \tcd build && \tcmake -DWITH_QT=ON -DWITH_OPENGL=ON
      -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON
      .. && \tmake -j\"$(nproc)\"  && \tmake install && \tldconfig && \techo 'ln /dev/null
      /dev/raw1394' >> ~/.bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tlibboost-all-dev \t\tlibgflags-dev
      \t\tlibgoogle-glog-dev \t\tlibhdf5-serial-dev \t\tlibleveldb-dev \t\tliblmdb-dev
      \t\tlibopencv-dev \t\tlibprotobuf-dev \t\tlibsnappy-dev \t\tprotobuf-compiler
      \t\t&& \tapt-get clean && \tapt-get autoremove && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone -b master --depth 1 https://github.com/BVLC/caffe.git /usr/local/src/caffe
      &&     pip3 --no-cache-dir install -r /usr/local/src/caffe/python/requirements.txt
      && \t cd /usr/local/src/caffe && mkdir build && cd build && \t cmake -DCPU_ONLY=ON
      -D python_version=3 -DBLAS=open -D USE_OPENCV=ON .. &&     make -j\"$(nproc)\"
      all && make install"
    Name: run
    PrependShell: true
  - Env:
    - Key: CAFFE_ROOT
      Value: /usr/local/src/caffe
    Name: env
  - Env:
    - Key: PYCAFFE_ROOT
      Value: $CAFFE_ROOT/python
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYCAFFE_ROOT:$PYTHONPATH
    - Key: PATH
      Value: $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
    Name: env
  - CmdLine:
    - echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir --upgrade python-dateutil h5py pydot_ng keras
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip3 install --no-cache-dir git+https://github.com/waleedka/coco.git#subdirectory=PythonAPI
      &&    pip3 install http://download.pytorch.org/whl/cu75/torch-0.2.0.post3-cp35-cp35m-manylinux1_x86_64.whl
      &&\tpip3 install torchvision"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - eecsCA_v3.crt
    - /etc/ssl/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sssd.conf
    - /etc/sssd/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - common*
    - /etc/pam.d/
  - CmdLine:
    - chmod 0600 /etc/sssd/sssd.conf /etc/pam.d/common*
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ! -d /var/run/sshd ]; then mkdir /var/run/sshd; chmod 0755 /var/run/sshd;
      fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cropTag
    - init.sh
    - startsvc.sh
    - startshell.sh
    - notebook.sh
    - startDef.sh
    - /bin/
  - Env:
    - Key: NB_USER
      Value: jovyan
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && mkdir $HOME/.ssh && chown
      -R $NB_USER:users $HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R $NB_USER:users $HOME && chmod -R og-rwx $HOME/.ssh
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
