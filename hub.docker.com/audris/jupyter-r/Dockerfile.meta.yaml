MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Audris Mockus <audris@mockus.org>
    Name: maintainer
  - Name: user
    User: root
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt update && DEBIAN_FRONTEND='noninteractive' apt install -y  curl gnupg apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0
      multiverse" > /etc/apt/sources.list.d/mongodb-org-4.0.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.cloud.google.com/apt cloud-sdk-bionic main" | tee
      -a /etc/apt/sources.list.d/google-cloud-sdk.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update &&     apt install -y google-cloud-sdk         mongodb-org-shell
      npm nodejs node-gyp nodejs-dev libssl1.0-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt update &&     DEBIAN_FRONTEND=''noninteractive'' apt install -y locales     google-cloud-sdk
      libzmq3-dev     libssl-dev     libcurl4-openssl-dev     libopenblas-base     openssh-server     lsof
      sudo     fonts-dejavu     sssd     sssd-tools     vim     git     curl lsb-release     vim-runtime
      tmux  zsh zip build-essential     mariadb-client     mariadb-common     graphviz     r-base-core     r-recommended     r-base-dev     r-cran-fastcluster     r-cran-rcolorbrewer
      r-cran-car     python3-dev     python3-tk     python3-pip     python3-yaml python3-msgpack     libgmp3-dev     libv8-dev
      #RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install requests ipython jupyter scikit-learn scikit-image gensim seaborn
      nltk beautifulsoup4 pymongo          pydot nxpd Tweepy xmltodict flask retrying
      psycopg2 dulwich click
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "install.packages(c('RecordLinkage','textreuse','tokenizers','caret','arules',
      'pcalg', 'TraMineR','Hmisc','ggplot2','ggmap', 'repr', 'IRdisplay', 'evaluate',
      'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest', 'RSentiment', 'wordcloud','tm','bnlearn'),
      repos='https://mirror.las.iastate.edu/CRAN')" | R --vanilla
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "devtools::install_github(c('IRkernel/IRkernel','mongosoup/rmongodb'))"
      | R --vanilla
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "IRkernel::installspec(user = FALSE)" | R --vanilla
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'devtools::install_github("mkearney/rtweet")' | R --vanilla
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'devtools::install_github("igraph/rigraph")' | R --vanilla
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "setRepositories(ind=c(2)); source('https://bioconductor.org/biocLite.R');
      biocLite('gRain',suppressUpdates=TRUE,ask=FALSE);biocLite('Rgraphviz',suppressUpdates=TRUE,ask=FALSE);"
      | R --vanilla
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C
    Name: env
  - CmdLine:
    - python3 -m nltk.downloader -d /usr/share/nltk_data stopwords wordnet gutenberg
      words
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - eecsCA_v3.crt
    - /etc/ssl/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sssd.conf
    - /etc/sssd/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - common*
    - /etc/pam.d/
  - CmdLine:
    - chmod 0600 /etc/sssd/sssd.conf /etc/pam.d/common*
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ! -d /var/run/sshd ]; then mkdir /var/run/sshd; chmod 0755 /var/run/sshd;
      fi
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/machine/releases/download/v0.7.0/docker-machine-`uname
      -s`-`uname -m` > /usr/local/bin/docker-machine &&     chmod +x /usr/local/bin/docker-machine
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sh
    - startsvc.sh
    - startshell.sh
    - notebook.sh
    - startDef.sh
    - /bin/
  - Env:
    - Key: NB_USER
      Value: jovyan
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && mkdir $HOME/.ssh && chown
      -R $NB_USER:users $HOME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - id_rsa_gcloud.pub
    - $HOME/.ssh/authorized_keys
  - CmdLine:
    - chown -R $NB_USER:users $HOME && chmod -R og-rwx $HOME/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x     && git clone https://github.com/mrd1no/poster-0.8.1-for-Python-3.4
      /src/poster \t && (cd /src/poster && python3 setup.py install)"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install unirest
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://github.com/github/git-lfs/releases/download/v1.4.4/git-lfs-linux-amd64-1.4.4.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf git-lfs-linux-amd64-1.4.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd git-lfs-1.4.4 && ./install.sh
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
