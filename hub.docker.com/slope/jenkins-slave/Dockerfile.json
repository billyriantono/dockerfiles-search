{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:18.03.0-dind",
      "SourceCode": "FROM docker:18.03.0-dind",
      "Platform": "",
      "From": {
        "Image": "docker:18.03.0-dind"
      },
      "Commands": [
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "pubkey",
          "Name": "arg",
          "Value": "\"\""
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk --no-cache add         openjdk8         openssh         supervisor         sudo         bash         py-pip         git     \u0026\u0026 pip install docker-compose     \u0026\u0026 mkdir -p /etc/supervisor.d     \u0026\u0026 /usr/bin/ssh-keygen -A     \u0026\u0026 addgroup -g ${gid} ${group}     \u0026\u0026 adduser -S -h /home/jenkins -u ${uid} -G ${group} -s /bin/bash -D ${user}     \u0026\u0026 passwd -u jenkins     \u0026\u0026 mkdir -p /home/jenkins/.ssh     \u0026\u0026 echo \"jenkins  ALL=(ALL)  NOPASSWD:ALL\" \u003e\u003e /etc/sudoers     \u0026\u0026 addgroup docker     \u0026\u0026 addgroup jenkins docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 echo '' \u003e\u003e /etc/ssh/sshd_config     \u0026\u0026 echo '###### ' \u003e\u003e /etc/ssh/sshd_config     \u0026\u0026 echo 'PubkeyAuthentication yes' \u003e\u003e /etc/ssh/sshd_config     \u0026\u0026 echo 'LogLevel DEBUG' \u003e\u003e /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mv /usr/local/bin/docker /usr/local/bin/docker.vanilla     \u0026\u0026 echo 'unset DOCKER_HOST ; exec /usr/local/bin/docker.vanilla \"$@\"' \u003e /usr/bin/docker     \u0026\u0026 chmod a+x /usr/bin/docker     \u0026\u0026 mv /usr/bin/docker-compose /usr/bin/docker-compose.vanilla     \u0026\u0026 echo 'unset DOCKER_HOST ; exec /usr/bin/docker-compose.vanilla \"$@\"' \u003e /usr/bin/docker-compose     \u0026\u0026 chmod a+x /usr/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/authorized_keys",
            "/home/jenkins/.ssh/authorized_keys"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisor.d",
            "/etc/supervisor.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 chown -R jenkins /home/jenkins     \u0026\u0026 chgrp -R jenkins /home/jenkins     \u0026\u0026 chmod 600 /home/jenkins/.ssh/authorized_keys     \u0026\u0026 chmod 700 /home/jenkins/.ssh     \u0026\u0026 chmod a+x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        }
      ]
    }
  ]
}