MetaArgs: null
Stages:
- BaseName: alpine:3.10.2
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"y.rosenboim@f5.com"'
    Name: label
  - Env:
    - Key: SNOPS_REPO
      Value: https://github.com/F5-use-cases/f5-rs-container.git
    Name: env
  - Env:
    - Key: SNOPS_IMAGE
      Value: f5-rs-container
    Name: env
  - CmdLine:
    - chmod +s /bin/busybox
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/just-containers/s6-overlay/releases/download/v1.19.1.1/s6-overlay-x86.tar.gz
    - /tmp/
  - CmdLine:
    - gunzip -c /tmp/s6-overlay-x86.tar.gz | tar -xf - -C / && rm -f /tmp/s6-overlay-x86.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/janeczku/go-dnsmasq/releases/download/1.0.7/go-dnsmasq-min_linux-amd64
    - /usr/sbin/go-dnsmasq
  - CmdLine:
    - chmod +x /usr/sbin/go-dnsmasq
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update openssh bash curl git vim nano python3 rpm py-pip ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -h /home/snops -u 1000 -s /bin/bash snops -D && echo 'snops:default'
      | chpasswd && echo 'root:default' | chpasswd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fs
    - /
  - Name: expose
    Ports:
    - "22"
    - "50000"
    - "80"
    - "8000"
    - "8080"
  - Env:
    - Key: SNOPS_GIT_HOST
      Value: '"github.com"'
    - Key: SNOPS_HOST_HTTP
      Value: '"8080"'
    - Key: SNOPS_HOST_SSH
      Value: '"2222"'
    - Key: SNOPS_AUTOCLONE
      Value: '"1"'
    - Key: SNOPS_GH_BRANCH
      Value: '"master"'
    - Key: SNOPS_ISALIVE
      Value: '"1"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fs/snopsboot/udf.pub
    - /root/.ssh/authorized_keys
  - CmdLine:
    - sed -i "s/#PermitRootLogin.*/PermitRootLogin yes/g" /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openjdk8 openssh-client unzip ttf-dejavu coreutils
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/usr/lib/jvm/java-1.8-openjdk/bin/
    Name: env
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: "50000"
    Name: env
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: snops
  - Key: uid
    Name: arg
    Value: "1001"
  - Key: gid
    Name: arg
    Value: "1000"
  - CmdLine:
    - adduser -h "$JENKINS_HOME" -u ${uid} -G ${group} -s /bin/bash -D ${user}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/jenkins_home
  - CmdLine:
    - mkdir -p /usr/share/jenkins/ref/init.groovy.d
    Name: run
    PrependShell: true
  - Key: JENKINS_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: JENKINS_VERSION
      Value: ${JENKINS_VERSION:-2.178}
    Name: env
  - Env:
    - Key: COPY_REFERENCE_FILE_LOG
      Value: $JENKINS_HOME/copy_reference_file.log
    Name: env
  - Key: JENKINS_SHA
    Name: arg
    Value: b0778a1763e582ecbbece698e9ef78b45579ef8945db0198fe02295de8da15b7
  - Key: JENKINS_URL
    Name: arg
    Value: http://mirrors.jenkins.io/war-stable/latest/jenkins.war
  - CmdLine:
    - curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war
    Name: run
    PrependShell: true
  - Key: JENKINS_CI_URL
    Name: arg
    Value: https://raw.githubusercontent.com/jenkinsci/docker/alpine
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${JENKINS_CI_URL}/init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${JENKINS_CI_URL}/jenkins-support
    - /usr/local/bin/jenkins-support
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${JENKINS_CI_URL}/jenkins.sh
    - /usr/local/bin/jenkins.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${JENKINS_CI_URL}/plugins.sh
    - /usr/local/bin/plugins.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${JENKINS_CI_URL}/install-plugins.sh
    - /usr/local/bin/install-plugins.sh
  - CmdLine:
    - chmod 755 /usr/local/bin/jenkins* /usr/local/bin/*plugins*
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_UC
      Value: https://updates.jenkins.io
    Name: env
  - CmdLine:
    - /usr/local/bin/install-plugins.sh bouncycastle-api splunk-devops structs pam-auth
      windows-slaves mailer ldap external-monitor-job matrix-auth script-security
      matrix-project credentials credentials-binding timestamper scm-api durable-task
      workflow-durable-task-step resource-disposer ws-cleanup ant gradle pipeline-milestone-step
      pipeline-input-step ace-editor workflow-scm-step workflow-cps pipeline-stage-step
      workflow-job pipeline-graph-analysis pipeline-rest-api handlebars momentjs pipeline-stage-view
      pipeline-build-step pipeline-model-api ssh-credentials git-client git-server
      workflow-cps-global-lib branch-api workflow-multibranch authentication-tokens
      docker-commons docker-workflow pipeline-model-declarative-agent workflow-basic-steps
      pipeline-model-definition workflow-aggregator github github-branch-source pipeline-github-lib
      github-organization-folder mapdb-api email-ext slack build-pipeline-plugin
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${user}:${group} "$JENKINS_HOME" /usr/share/jenkins/ref /usr/local/bin/jenkins*
      /usr/local/bin/*plugins*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update gcc linux-headers libc-dev libffi libffi-dev openssl openssl-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.12.9
    Name: env
  - Name: workdir
    Path: /home/snops
  - CmdLine:
    - apk update &&     apk add ca-certificates unzip wget &&     cd /tmp &&     wget
      https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin &&     rm
      -rf /tmp/terraform* &&     rm -rf /var/cache/apk/* &&     rm -rf /var/tmp/terraform*
    Name: run
    PrependShell: true
  - Env:
    - Key: ETCD_VER
      Value: v3.3.0
    Name: env
  - Env:
    - Key: GOOGLE_URL
      Value: https://storage.googleapis.com/etcd
    Name: env
  - Env:
    - Key: GITHUB_URL
      Value: https://github.com/coreos/etcd/releases/download
    Name: env
  - CmdLine:
    - DOWNLOAD_URL=${GOOGLE_URL}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz && rm -rf /tmp/etcd-download-test
      && mkdir -p /tmp/etcd-download-test && curl -L https://storage.googleapis.com/etcd/v3.3.0/etcd-v3.3.0-linux-amd64.tar.gz
      -o /tmp/etcd-v3.3.0-linux-amd64.tar.gz && tar xzvf /tmp/etcd-v3.3.0-linux-amd64.tar.gz
      -C /usr/bin --strip-components=1 && rm -f /tmp/etcd-v3.3.0-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install boto3 botocore awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requests
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/snops/.ssh && chown -R snops:snops /home/snops/.ssh && mkdir
      -p /var/jenkins_home/.ssh && chown -R jenkins:snops /var/jenkins_home/.ssh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/snops
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /snopsboot/start
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10.2
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10.2
