{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get purge -y python.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tca-certificates \t\tlibsqlite3-0 \t\tlibssl1.0.0 \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "7.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 buildDeps=' \t\tcurl \t\tgcc \t\tlibbz2-dev \t\tlibc6-dev \t\tlibncurses-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\txz-utils \t\tzlib1g-dev \t' \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 mkdir -p /usr/src/python \t\u0026\u0026 curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \t\u0026\u0026 curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \t\u0026\u0026 gpg --verify python.tar.xz.asc \t\u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz* \t\u0026\u0026 cd /usr/src/python \t\u0026\u0026 ./configure --enable-shared --enable-unicode=ucs4 \t\u0026\u0026 make -j$(nproc) \t\u0026\u0026 make install \t\u0026\u0026 ldconfig \t\u0026\u0026 curl -SL 'https://bootstrap.pypa.io/get-pip.py' | python2 \t\u0026\u0026 pip install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \t\u0026\u0026 find /usr/local \t\t\\( -type d -a -name test -o -name tests \\) \t\t-o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t-exec rm -rf '{}' + \t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps \t\u0026\u0026 rm -rf /usr/src/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DB_SUPER_USER",
              "Value": "admin"
            },
            {
              "Key": "DB_SU_PASS",
              "Value": "**ChangeMe**"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_NAME",
              "Value": "**ChangeMe**"
            },
            {
              "Key": "DB_USER",
              "Value": "**ChangeMe"
            },
            {
              "Key": "DB_PASS",
              "Value": "**Random**"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "./entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}