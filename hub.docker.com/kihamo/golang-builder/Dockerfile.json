{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.12.1",
      "SourceCode": "FROM golang:1.12.1",
      "Platform": "",
      "From": {
        "Image": "golang:1.12.1"
      },
      "Commands": [
        {
          "Maintainer": "Kihamo \u003cdev@kihamo.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOBIN",
              "Value": "$GOPATH/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --no-install-recommends -y upx-ucl zip \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean -y \u0026\u0026     apt-get purge -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL -O https://get.docker.com/builds/Linux/x86_64/docker-1.7.1 \u0026\u0026     chmod +x docker-1.7.1 \u0026\u0026     mv docker-1.7.1 /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o ./dep \u0026\u0026     chmod +x ./dep \u0026\u0026     mv ./dep /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $GOPATH\"/src/github.com/Masterminds/glide\" \u0026\u0026     cd $GOPATH\"/src/github.com/Masterminds/glide\" \u0026\u0026     git clone https://github.com/Masterminds/glide.git . \u0026\u0026     git checkout v0.13.2 \u0026\u0026     make build \u0026\u0026     mv glide $GOBIN/glide"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $GOPATH\"/src/github.com/tools/godep\" \u0026\u0026     cd $GOPATH\"/src/github.com/tools/godep\" \u0026\u0026     git clone https://github.com/tools/godep.git . \u0026\u0026     git checkout v80 \u0026\u0026     go install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -t -u golang.org/x/vgo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -t -u github.com/pwaller/goupx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i.bak /etc/ssh/ssh_config -e '/StrictHostKeyChecking/d' /etc/ssh/ssh_config \u0026\u0026     echo \"    StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/src"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build.sh",
            "/usr/local/bin/go-build"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/go-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go-build"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}