{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:10",
      "SourceCode": "FROM postgres:10",
      "Platform": "",
      "From": {
        "Image": "postgres:10"
      },
      "Commands": [
        {
          "Maintainer": "Camptocamp \u003cdocker@camptocamp.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "HOME",
              "Value": "/home/postgres"
            },
            {
              "Key": "CONFD_VERSION",
              "Value": "0.16.0"
            },
            {
              "Key": "PGHOARD_VERSION",
              "Value": "9c682141bdc2fd98d6fbd60c4ff7cd0811536d53"
            },
            {
              "Key": "PGHOARD_BASEBACKUP_COUNT",
              "Value": "1"
            },
            {
              "Key": "PGHOARD_BASEBACKUP_INTERVAL_HOURS",
              "Value": "24"
            },
            {
              "Key": "PGHOARD_LOG_LEVEL",
              "Value": "INFO"
            },
            {
              "Key": "PGHOARD_STATSD_PORT",
              "Value": "8125"
            },
            {
              "Key": "PGHOARD_STATSD_FORMAT",
              "Value": "telegraf"
            },
            {
              "Key": "PG_PORT",
              "Value": "5432"
            },
            {
              "Key": "REPLICATION_SLOT_NAME",
              "Value": "pghoard"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get -y --no-install-suggests --no-install-recommends install      gcc      g++      git      make      libffi-dev      curl      ca-certificates      rsync      libsnappy-dev      libssl-dev      python3      python3-setuptools      python3-dev      libpq-dev   \u0026\u0026 curl -sSL https://bootstrap.pypa.io/get-pip.py | python3   \u0026\u0026 pip3 install      git+https://github.com/aiven/pghoard.git@${PGHOARD_VERSION}      idna awscli botocore python-keystoneclient python-swiftclient   \u0026\u0026 apt-get -y remove gcc python2.7   \u0026\u0026 apt-get -y autoremove   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /usr/local/bin/confd https://github.com/kelseyhightower/confd/releases/download/v${CONFD_VERSION}/confd-${CONFD_VERSION}-linux-amd64   \u0026\u0026 chmod +x /usr/local/bin/confd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --no-tty --keyserver keyserver.ubuntu.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 pkill -9 gpg-agent     \u0026\u0026 pkill -9 dirmngr     \u0026\u0026 rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/postgres/restore \u0026\u0026   echo $PG_MAJOR \u003e /home/postgres/restore/PG_VERSION \u0026\u0026   chgrp -R 0 /home/postgres \u0026\u0026   chmod -R g=u /home/postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d",
            "/etc/confd/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "/etc/confd/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/postgres"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/postgres/pghoard",
            "/var/lib/pghoard"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}