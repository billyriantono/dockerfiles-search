MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - "mkdir -p /usr/local/etc \t&& { \t\techo 'install: --no-document'; \t\techo
      'update: --no-document'; \t} >> /usr/local/etc/gemrc"
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_MAJOR
      Value: "2.3"
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.3.6
    Name: env
  - Env:
    - Key: RUBY_DOWNLOAD_SHA256
      Value: e0d969ac22d4a403c1204868bb9c0d068aa35045bb3934cf50b17b7f66059f56
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: 2.7.4
    Name: env
  - Env:
    - Key: BUNDLER_VERSION
      Value: 1.16.1
    Name: env
  - CmdLine:
    - "set -ex \t\t&& apk add --no-cache --virtual .ruby-builddeps \t\tautoconf \t\tbison
      \t\tbzip2 \t\tbzip2-dev \t\tca-certificates \t\tcoreutils \t\tdpkg-dev dpkg
      \t\tgcc \t\tgdbm-dev \t\tglib-dev \t\tlibc-dev \t\tlibffi-dev \t\tlibressl \t\tlibressl-dev
      \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\tprocps
      \t\treadline-dev \t\truby \t\ttar \t\txz \t\tyaml-dev \t\tzlib-dev \t\t&& wget
      -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\"
      \t&& echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \t\t&& mkdir
      -p /usr/src/ruby \t&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1
      \t&& rm ruby.tar.xz \t\t&& cd /usr/src/ruby \t\t&& { \t\techo '#define ENABLE_PATH_CHECK
      0'; \t\techo; \t\tcat file.c; \t} > file.c.new \t&& mv file.c.new file.c \t\t&&
      autoconf \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&&
      export ac_cv_func_isnan=yes ac_cv_func_isinf=yes \t&& ./configure \t\t--build=\"$gnuArch\"
      \t\t--disable-install-doc \t\t--enable-shared \t&& make -j \"$(nproc)\" \t&&
      make install \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p'
      --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[
      -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&&
      apk add --virtual .ruby-rundeps $runDeps \t\tbzip2 \t\tca-certificates \t\tlibffi-dev
      \t\tlibressl-dev \t\tprocps \t\tyaml-dev \t\tzlib-dev \t&& apk del .ruby-builddeps
      \t&& cd / \t&& rm -r /usr/src/ruby \t\t&& gem update --system \"$RUBYGEMS_VERSION\"
      \t&& gem install bundler --version \"$BUNDLER_VERSION\" --force"
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    - Key: BUNDLE_BIN
      Value: '"$GEM_HOME/bin"'
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $BUNDLE_BIN:$PATH
    Name: env
  - CmdLine:
    - "mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \t&& chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\""
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 8.9.4
    Name: env
  - CmdLine:
    - addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     &&
      apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         binutils-gold         curl         g++         gcc         gnupg         libgcc         linux-headers         make         python   &&
      for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A   ;
      do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver
      keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key" ;   done     && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"     &&
      curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && tar -xf
      "node-v$NODE_VERSION.tar.xz"     && cd "node-v$NODE_VERSION"     && ./configure     &&
      make -j$(getconf _NPROCESSORS_ONLN)     && make install     && apk del .build-deps     &&
      cd ..     && rm -Rf "node-v$NODE_VERSION"     && rm "node-v$NODE_VERSION.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk --no-cache add --virtual .app-run-deps libcurl bash     graphicsmagick
      git openssh-client xz-dev && \t\tapk add mariadb-client-libs wkhtmltopdf --update-cache
      --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted
      &&     rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
