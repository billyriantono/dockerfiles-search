MetaArgs: null
Stages:
- BaseName: docker:latest
  Commands:
  - Maintainer: '"Akito Nozaki <anozaki@onica.com>"'
    Name: maintainer
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.10
    Name: env
  - CmdLine:
    - apk add --no-cache nodejs nodejs-npm python python-dev py-pip build-base bash
      curl git
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i serverless -g  && pip install pipenv runway --user  && cd /tmp  && wget
      https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip  &&
      unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip  && mv terraform /usr/local/bin  &&
      rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /root/.cache /root/.npm
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /src
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: /.pyenv
    - Key: PATH
      Value: /.pyenv/bin:/root/.local/bin/:$PATH
    Name: env
  - CmdLine:
    - apk update  && apk add python3 python3-dev libffi-dev openssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
      | bash  && pyenv update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(pyenv init -)"' >> .profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(pyenv virtualenv-init -)"' >> .profile
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  From:
    Image: docker:latest
  Name: ""
  Platform: ""
  SourceCode: FROM docker:latest
