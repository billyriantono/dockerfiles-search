MetaArgs: null
Stages:
- BaseName: buildpack-deps:trusty-scm
  Commands:
  - Maintainer: Apache Thrift <dev@thrift.apache.org>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list
      &&     curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc
      | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &&     curl
      https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list
      > /etc/apt/sources.list.d/dart_stable.list &&     sed -i /etc/apt/sources.list.d/dart_stable.list
      -e 's/https:/http:/g'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# General dependencies`       bison       build-essential       clang       cmake       debhelper       flex       ninja-build       pkg-config
      `# Included in buildpack-deps` `#      autoconf` `#      automake` `#      g++`
      `#      git` `#      libtool` `#      make`
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# C++ dependencies`
      `# libevent and OpenSSL are needed by D too`       libboost-dev       libboost-filesystem-dev       libboost-program-options-dev       libboost-system-dev       libboost-test-dev       libboost-thread-dev       libevent-dev       libssl-dev       qt5-default       qtbase5-dev       qtbase5-dev-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Java dependencies`       ant       ant-optional       openjdk-7-jdk       maven
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Python dependencies`
      `# TODO:` `# Install twisted and zope.interface via pip. we need twisted at
      ./configure time, otherwise` `# py.twisted tests are skipped.`       python-all       python-all-dbg       python-all-dev       python-pip       python-setuptools       python-twisted       python-zope.interface       python3-all       python3-all-dbg       python3-all-dev       python3-setuptools       python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Ruby dependencies`       ruby       ruby-dev
      `# Perl dependencies`       libbit-vector-perl       libclass-accessor-class-perl       libcrypt-ssleay-perl       libio-socket-ssl-perl       libnet-ssleay-perl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Php dependencies`       php5       php5-dev       php5-cli       php-pear       re2c       phpunit
      `# GlibC dependencies`       libglib2.0-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Erlang dependencies`       erlang-base       erlang-eunit       erlang-dev       erlang-tools       rebar
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Haskell dependencies`       ghc       cabal-install
      `# Haxe dependencies`       neko       neko-dev       libneko0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# Node.js dependencies`       nodejs       nodejs-dev       nodejs-legacy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# CSharp dependencies`       libmono-system-web2.0-cil       mono-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends `# D dependencies`       xdg-utils
      `# Dart dependencies`       dart `# Lua dependencies`       lua5.2       lua5.2-dev
      `# MinGW dependencies`       mingw32       mingw32-binutils       mingw32-runtime       nsis
      `# Clean up`     && rm -rf /var/cache/apt/* &&     rm -rf /var/lib/apt/lists/*
      &&     rm -rf /tmp/* &&     rm -rf /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler --no-ri --no-rdoc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install -U ipaddress backports.ssl_match_hostname tornado
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U backports.ssl_match_hostname tornado
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz |
      tar -C /usr/local/ -xz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p /usr/lib/haxe &&     curl http://haxe.org/website-content/downloads/3.2.0/downloads/haxe-3.2.0-linux64.tar.gz
      |     tar -C /usr/lib/haxe --strip-components=1 -xz &&     ln -s /usr/lib/haxe/haxe
      /usr/bin/haxe &&     ln -s /usr/lib/haxe/haxelib /usr/bin/haxelib &&     mkdir
      -p /usr/lib/haxe/lib  &&     chmod -R 777 /usr/lib/haxe/lib &&     haxelib setup
      /usr/lib/haxe/lib &&     haxelib install hxcpp
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://www.npmjs.com/install.sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb
      -o /tmp/dmd_2.070.0-0_amd64.deb &&     dpkg -i /tmp/dmd_2.070.0-0_amd64.deb
      &&     rm /tmp/dmd_2.070.0-0_amd64.deb &&     curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz|
      tar xz &&     curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz|
      tar xz &&     mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C
      &&     mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/
      &&     mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/
      &&     rm -rf libevent-master openssl-master &&     echo 'gcc -Wl,--no-as-needed
      $*' > /usr/local/bin/gcc-dmd &&     chmod 755 /usr/local/bin/gcc-dmd &&     echo
      'CC=/usr/local/bin/gcc-dmd' >> /etc/dmd.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/dart/bin:$PATH
    Name: env
  - Env:
    - Key: THRIFT_ROOT
      Value: /thrift
    Name: env
  - CmdLine:
    - mkdir -p $THRIFT_ROOT/src
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Dockerfile
    - $THRIFT_ROOT/
  - Name: workdir
    Path: $THRIFT_ROOT/src
  From:
    Image: buildpack-deps:trusty-scm
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:trusty-scm
