MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: alex.hayton+dockerhub@gmail.com
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEPLOY_MODE
      Value: test
    Name: env
  - Env:
    - Key: NODE_ENV
      Value: test
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.5.0
    Name: env
  - Env:
    - Key: PORT
      Value: "8000"
    Name: env
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -G staff www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - dpkg-divert --local --rename --add /sbin/initctl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install ca-certificates rpl pwgen git curl wget lsb-release
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main"
      >> /etc/apt/sources.list.d/pgdg.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install postgresql-9.5-postgis-2.2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends postgis
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y -q --no-install-recommends         apt-transport-https         build-essential         ca-certificates         curl         git         libssl-dev         python         rsync         software-properties-common         libpq-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "postgres:docker" | chpasswd && adduser postgres sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "local   all             all                                     trust"
      > /etc/postgresql/9.5/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "host    all             all             127.0.0.1/32            trust"
      >> /etc/postgresql/9.5/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "host    all             all             ::1/128                 trust"
      >> /etc/postgresql/9.5/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: postgres
  - Env:
    - Key: DATABASE_URL
      Value: postgres://postgres@localhost/test-database
    Name: env
  - CmdLine:
    - service postgresql start &&    createdb -O postgres test-database &&    psql
      $DATABASE_URL -c 'CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology;
      CREATE EXTENSION fuzzystrmatch; CREATE EXTENSION postgis_tiger_geocoder;' 1>/dev/null
      &&    service postgresql stop
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - add-apt-repository "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc)
      main universe"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y redis-server
    Name: run
    PrependShell: true
  - Env:
    - Key: REDISCLOUD_URL
      Value: redis://:@localhost:6379
    Name: env
  - CmdLine:
    - apt-get -y install build-essential
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/.npm
  - CmdLine:
    - mkdir -p /usr/src/app/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash     &&
      source $NVM_DIR/nvm.sh     && nvm install $NODE_VERSION     && nvm alias default
      $NODE_VERSION     && nvm use default
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: '""'
    Name: env
  - Name: expose
    Ports:
    - "5432"
  - Name: expose
    Ports:
    - "6379"
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - bash -c "service postgresql start && service redis-server start && npm test"
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
