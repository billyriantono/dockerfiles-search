MetaArgs: null
Stages:
- BaseName: golang:1.8.4-alpine3.6
  Commands:
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 17.09.0-ce
    Name: env
  - Env:
    - Key: DOCKER_HOST
      Value: '''tcp://docker:2375'''
    Name: env
  - Env:
    - Key: GITLAB_RUNNER_VERSION
      Value: v10.0.0
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - checksums.sha256
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint
    - /
  - CmdLine:
    - 'adduser -D -S -h /home/gitlab-runner gitlab-runner     && apk add --no-cache
      --update     bash     make     ca-certificates     git     openssl     tzdata     wget     btrfs-progs     e2fsprogs     e2fsprogs-extra     iptables     xfsprogs     xz     curl     &&
      go get -u github.com/golang/dep/cmd/dep     && wget  https://gitlab-runner-downloads.s3.amazonaws.com/$GITLAB_RUNNER_VERSION/binaries/gitlab-runner-linux-amd64
      -O /usr/bin/gitlab-runner     && chmod +x /usr/bin/gitlab-runner     && ln -s
      /usr/bin/gitlab-runner /usr/bin/gitlab-ci-multi-runner     && gitlab-runner
      --version     && mkdir -p /etc/gitlab-runner/certs     && chmod -R 700 /etc/gitlab-runner     &&
      wget  https://github.com/docker/machine/releases/download/v0.12.2/docker-machine-Linux-x86_64
      -O /usr/bin/docker-machine     && chmod +x /usr/bin/docker-machine     && docker-machine
      --version     && wget  https://github.com/Yelp/dumb-init/releases/download/v1.0.2/dumb-init_1.0.2_amd64
      -O /usr/bin/dumb-init     && chmod +x /usr/bin/dumb-init     && dumb-init --version     &&
      sha256sum -c -w /tmp/checksums.sha256     && set -ex;         apk add --no-cache
      --virtual .fetch-deps             curl             tar         ;                 apkArch="$(apk
      --print-arch)";         case "$apkArch" in             x86_64) dockerArch=''x86_64''
      ;;             aarch64) dockerArch=''aarch64'' ;;             ppc64le) dockerArch=''ppc64le''
      ;;             s390x) dockerArch=''s390x'' ;;             *) echo >&2 "error:
      unsupported architecture ($apkArch)"; exit 1 ;;        esac;                 if
      ! curl -fL -o docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz";
      then             echo >&2 "error: failed to download ''docker-${DOCKER_VERSION}''
      from ''${DOCKER_CHANNEL}'' for ''${dockerArch}''";             exit 1;         fi;                 tar
      --extract             --file docker.tgz             --strip-components 1             --directory
      /usr/local/bin/         ;         rm docker.tgz;                 apk del .fetch-deps;                 dockerd
      -v;         docker -v;         chmod +x /entrypoint'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/gitlab-runner
    - /home/gitlab-runner
    - /var/lib/docker
  - CmdLine:
    - /usr/bin/dumb-init
    - /entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - run
    - --user=gitlab-runner
    - --working-directory=/home/gitlab-runner
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1.8.4-alpine3.6
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.8.4-alpine3.6
