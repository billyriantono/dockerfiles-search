{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "skegio/clojure:java8",
      "SourceCode": "FROM skegio/clojure:java8",
      "Platform": "",
      "From": {
        "Image": "skegio/clojure:java8"
      },
      "Commands": [
        {
          "CmdLine": [
            "wget https://github.com/holen-app/holen/releases/download/v0.3.0/holen_linux_amd64 -O /usr/local/bin/holen \u0026\u0026     chmod a+x /usr/local/bin/holen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O- http://neuro.debian.net/lists/xenial.us-tn.full \u003e /etc/apt/sources.list.d/neurodebian.sources.list \u0026\u0026     wget -O- http://neuro.debian.net/_static/neuro.debian.net.asc \u003e /root/neuro.debian.key \u0026\u0026     apt-key add /root/neuro.debian.key \u0026\u0026 rm /root/neuro.debian.key \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y git-annex-standalone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:hnakamur/tmux \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y tmux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:jonathonf/vim \u0026\u0026     add-apt-repository ppa:neovim-ppa/unstable \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y vim-nox neovim python-dev python-pip python3-dev python3-pip python3-venv \u0026\u0026     pip install neovim \u0026\u0026     pip3 install neovim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y openjdk-8-jdk-headless visualvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip -O /tmp/protoc.zip \u0026\u0026     unzip -d /usr/local /tmp/protoc.zip bin/protoc \u0026\u0026     chmod a+x /usr/local/bin/protoc \u0026\u0026     rm /tmp/protoc.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y nodejs yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y mongodb rsync graphviz bc telnet whois dnsutils \u0026\u0026     npm install -g underscore-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install libssl-dev g++ -y \u0026\u0026     cd /root \u0026\u0026 git clone https://github.com/AGWA/git-crypt.git \u0026\u0026 cd git-crypt     make \u0026\u0026 make install \u0026\u0026     cd .. \u0026\u0026 rm -rf git-crypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://download.clojure.org/install/linux-install-1.10.0.411.sh -O linux-install-1.10.0.411.sh \u0026\u0026     chmod +x linux-install-1.10.0.411.sh \u0026\u0026     ./linux-install-1.10.0.411.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:mfikes/planck \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y planck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"AddressFamily inet\" \u003e\u003e /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}