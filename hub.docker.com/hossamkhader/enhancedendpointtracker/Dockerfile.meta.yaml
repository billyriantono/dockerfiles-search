MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Andy Gossett, agossett@cisco.com
    Name: maintainer
  - Key: APP_MODE
    Name: arg
    Value: "0"
  - Env:
    - Key: APP_MODE
      Value: $APP_MODE
    Name: env
  - Env:
    - Key: APP_DIR
      Value: '"/home/app"'
    Name: env
  - Env:
    - Key: DATA_DIR
      Value: '"$APP_DIR/data"'
    Name: env
  - Env:
    - Key: LOCAL_DATA_DIR
      Value: '"$APP_DIR/local-data"'
    Name: env
  - Env:
    - Key: LOG_DIR
      Value: '"$APP_DIR/log"'
    Name: env
  - Env:
    - Key: SRC_DIR
      Value: '"$APP_DIR/src"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get -y install apt-utils &&     apt-get -y install         cron         curl         iputils-ping         iproute2         logrotate         redis-server         python         python-pip         rsyslog         ssh         tcpdump
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $LOG_DIR &&     mkdir -p $DATA_DIR &&     mkdir -p $LOCAL_DATA_DIR
      &&     mkdir -p $SRC_DIR &&     mkdir -p $SRC_DIR/Service &&     mkdir -p $SRC_DIR/UIAssets
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/redis.conf
    - /etc/redis/redis.conf
  - CmdLine:
    - chmod 777 $LOG_DIR &&     chmod 640 /etc/redis/redis.conf &&     chown redis:redis
      /etc/redis/redis.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install         apache2         libapache2-mod-wsgi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/apache2-000-default.conf
    - /etc/apache2/sites-available/000-default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/apache2-default-ssl.conf
    - /etc/apache2/sites-available/default-ssl.conf
  - CmdLine:
    - mkdir -p $LOG_DIR/apache2 &&     chown www-data:www-data $LOG_DIR/apache2 &&     /usr/sbin/a2enmod
      ssl &&     /usr/sbin/a2dissite 000-default &&     /usr/sbin/a2dissite default-ssl
      &&     /usr/sbin/a2ensite 000-default &&     /usr/sbin/a2ensite default-ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https &&         apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 &&         echo "deb [ arch=amd64,arm64
      ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | tee
      /etc/apt/sources.list.d/mongodb-org-3.6.list &&         apt-get update &&         apt-get
      install -y mongodb-org
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/mongodb-init.d
    - /etc/init.d/mongodb
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/mongod.conf
    - /etc/mongod.conf
  - CmdLine:
    - chmod 755 /etc/init.d/mongodb &&     mkdir -p $LOG_DIR/mongo &&     mkdir -p
      $DATA_DIR/db &&     mkdir -p $LOCAL_DATA_DIR/db &&     chown mongodb:mongodb
      $LOG_DIR/mongo &&     chown mongodb:mongodb $DATA_DIR/db &&     chown mongodb:mongodb
      $LOCAL_DATA_DIR/db
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/cron.minute &&     chmod 755 /etc/cron.minute
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/crontab
    - /etc/crontab
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/cron.minute.logrotate
    - /etc/cron.minute/logrotate
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/logrotate.d.app
    - /etc/logrotate.d/app
  - CmdLine:
    - chmod 644 /etc/logrotate.d/app &&     chmod 755 /etc/cron.minute/logrotate &&     chmod
      600 /etc/crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - $SRC_DIR/Service/
  - CmdLine:
    - pip install -r $SRC_DIR/Service/requirements.txt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC_DIR
  - CmdLine:
    - $SRC_DIR/start.sh
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
