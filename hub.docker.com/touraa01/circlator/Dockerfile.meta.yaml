MetaArgs: null
Stages:
- BaseName: debian:testing
  Commands:
  - Env:
    - Key: BUILD_DIR
      Value: /opt/circlator
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -y python python3-pip git wget unzip zlib1g-dev
      libncurses5-dev default-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes libbz2-dev liblzma-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD_DIR}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${BUILD_DIR}
  - CmdLine:
    - cd ${BUILD_DIR} && ./install_dependencies.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${BUILD_DIR}/build/bwa-0.7.12:${BUILD_DIR}/build/canu-1.4/Linux-amd64/bin/:${BUILD_DIR}/build/prodigal-2.6.2:${BUILD_DIR}/build/samtools-1.3:${BUILD_DIR}/build/MUMmer3.23:${BUILD_DIR}/build/SPAdes-3.7.1-Linux/bin:$PATH
    Name: env
  - CmdLine:
    - export PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${BUILD_DIR} && python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - circlator progcheck
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "Usage:  docker run -v \`pwd\`:/var/data -it <IMAGE_NAME> bash" &&       echo
      "" &&       echo "This will place you in a shell with your current working directory
      accessible as /var/data." &&       echo "You can then run commands like:" &&       echo
      "   circlator all /var/data/assembly.fasta /var/data/reads /var/data/<output_subdirectory>"
      &&       echo "For help, please go to https://github.com/sanger-pathogens/circlator/wiki,
      or type" &&       echo "   circlator --help"'
    Name: cmd
    PrependShell: true
  From:
    Image: debian:testing
  Name: ""
  Platform: ""
  SourceCode: FROM debian:testing
