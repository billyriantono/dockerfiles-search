MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.1-cudnn7-runtime
  Commands:
  - Name: workdir
    Path: /usr/src/app
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    - Key: PATH
      Value: '"/opt/venv/bin:$PATH"'
    - Key: PIP_NO_CACHE_DIR
      Value: '"false"'
    Name: env
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     python3
      python3-pip python3-venv libspatialindex-c4v5 libglib2.0-0 &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - python3 -m venv /opt/venv &&     python3 -m pip install pip==19.1.1 pip-tools==3.7.0
      &&     python3 -m piptools sync
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install https://download.pytorch.org/whl/cu100/torch-1.1.0-cp36-cp36m-linux_x86_64.whl
      &&     python3 -m pip install https://download.pytorch.org/whl/cu100/torchvision-0.3.0-cp36-cp36m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -c "from torchvision.models import resnet50; resnet50(True)"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - /usr/src/app/rs
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -h
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.1-cudnn7-runtime
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.1-cudnn7-runtime
