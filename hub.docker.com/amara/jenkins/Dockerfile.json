{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "stackbrew/ubuntu:14.04",
      "SourceCode": "FROM stackbrew/ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "stackbrew/ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Arcus \"http://arcus.io\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "RUNLEVEL=1 DEBIAN_FRONTEND=noninteractive apt-get install -y     wget     openjdk-7-jre-headless     git-core     unzip     apache2-utils     curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://pkg.jenkins-ci.org/debian binary/\" \u003e /etc/apt/sources.list.d/jenkins.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "RUNLEVEL=1 DEBIAN_FRONTEND=1 apt-get install -y jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/jenkins/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/cobertura.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/greenballs.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/instant-messaging.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/ircbot.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/postbuild-task.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/copy-to-slave.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/credentials.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/ssh-credentials.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/ssh-agent.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/git-client.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/git.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/scm-api.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/swarm.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/envinject.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/parameterized-trigger.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/token-macro.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /var/lib/jenkins/plugins \u0026\u0026 wget --no-check-certificate http://updates.jenkins-ci.org/latest/build-name-setter.hpi)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config.xml",
            "/var/lib/jenkins/config.xml"
          ]
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/lib/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://get.docker.io/builds/Linux/x86_64/docker-latest -O /usr/local/bin/docker \u0026\u0026 chmod +x /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip -O /tmp/ec2tools.zip \u0026\u0026     mkdir /usr/local/aws \u0026\u0026 unzip -d /usr/local/aws /tmp/ec2tools.zip \u0026\u0026 rm /tmp/ec2tools.zip \u0026\u0026     mv /usr/local/aws/ec2-api-tools-* /usr/local/aws/ec2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/aws/ec2/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EC2_HOME",
              "Value": "/usr/local/aws/ec2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-7-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/jenkins"
          ]
        },
        {
          "CmdLine": [
            "java",
            "-jar",
            "/usr/share/jenkins/jenkins.war"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}