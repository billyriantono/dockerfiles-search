{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:9.9",
      "SourceCode": "FROM debian:9.9",
      "Platform": "",
      "From": {
        "Image": "debian:9.9"
      },
      "Commands": [
        {
          "Maintainer": "Jordi Gimenez \u003cinfo@mobilejazz.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2019-05-31"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWAN_VER",
              "Value": "3.27"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/src"
        },
        {
          "Env": [
            {
              "Key": "USE_DH31",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i \"s/httpredir\\.debian\\.org/ftp.us.debian.org/g\" /etc/apt/sources.list     \u0026\u0026 apt-get -yqq update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -yqq --no-install-recommends install          wget dnsutils openssl ca-certificates kmod          iproute gawk grep sed net-tools iptables          bsdmainutils libunbound2 libcurl3-nss          libnss3-tools libevent-dev libcap-ng0 xl2tpd          libnss3-dev libnspr4-dev pkg-config libpam0g-dev libldns-dev          libcap-ng-dev libcap-ng-utils libselinux1-dev          libcurl4-nss-dev libsystemd-dev flex bison gcc make          libunbound-dev xmlto     \u0026\u0026 wget -t 3 -T 30 -nv -O \"libreswan.tar.gz\" \"https://download.libreswan.org/libreswan-${SWAN_VER}.tar.gz\"     || wget -t 3 -T 30 -nv -O \"libreswan.tar.gz\" \"https://github.com/libreswan/libreswan/archive/v${SWAN_VER}.tar.gz\"     \u0026\u0026 tar xzf \"libreswan.tar.gz\"     \u0026\u0026 rm -f \"libreswan.tar.gz\"     \u0026\u0026 cd \"libreswan-${SWAN_VER}\"     \u0026\u0026 echo \"WERROR_CFLAGS =\" \u003e Makefile.inc.local     \u0026\u0026 echo \"USE_DNSSEC=false =\" \u003e\u003e Makefile.inc.local     \u0026\u0026 make -s programs     \u0026\u0026 make -s install     \u0026\u0026 cd /opt/src     \u0026\u0026 rm -rf \"/opt/src/libreswan-${SWAN_VER}\"     \u0026\u0026 apt-get -yqq remove          libnss3-dev libnspr4-dev pkg-config libpam0g-dev          libcap-ng-dev libcap-ng-utils libselinux1-dev          libcurl4-nss-dev libsystemd-dev flex bison gcc make          libunbound-dev xmlto perl-modules perl     \u0026\u0026 apt-get -yqq autoremove     \u0026\u0026 apt-get -y clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm /etc/ipsec.secrets /etc/ppp/chap-secrets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./run.sh",
            "/run.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./adduser.sh",
            "/adduser.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./lsusers.sh",
            "/lsusers.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./rmuser.sh",
            "/rmuser.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /run.sh /adduser.sh /lsusers.sh /rmuser.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4500/udp",
            "500/udp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/lib/modules",
            "/etc/ppp/chap-secrets",
            "/etc/ipsec.d/passwd",
            "/etc/ipsec.secrets"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}