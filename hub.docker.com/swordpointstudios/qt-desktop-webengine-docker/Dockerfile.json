{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "swordpointstudios \u003cinfo@swordpointstudios.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "QT_VERSION",
          "Name": "arg",
          "Value": "5.12.0"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QT_PATH",
              "Value": "/opt/Qt"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QT_DESKTOP",
              "Value": "$QT_PATH/${QT_VERSION}/gcc_64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$QT_DESKTOP/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt full-upgrade -y \u0026\u0026 apt install -y --no-install-recommends     git     openssh-client     ca-certificates     locales     sudo     curl     build-essential     pkg-config     libgl1-mesa-dev     libsm6     libice6     libxext6     libxrender1     libfontconfig1     libdbus-1-3         libboost-all-dev         libxi6     libgconf-2-4     libgtk-3-0     libx11-xcb1     libpq5     file     libnss3     libxtst6     libasound2     fuse     libfuse2         \u0026\u0026 apt-get -qq clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "extract-qt-installer.sh",
            "install-linuxdeployqt.sh",
            "install-additional-qt-libs.sh",
            "/tmp/qt/"
          ]
        },
        {
          "CmdLine": [
            "curl -Lo /tmp/qt/installer.run \"https://download.qt.io/official_releases/qt/$(echo \"${QT_VERSION}\" | cut -d. -f 1-2)/${QT_VERSION}/qt-opensource-linux-x64-${QT_VERSION}.run\"     \u0026\u0026 QT_CI_PACKAGES=qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).gcc_64,qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).qtnetworkauth,qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).qtremoteobjects,qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).qtwebglplugin,qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).qtwebengine,qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).qtscript /tmp/qt/extract-qt-installer.sh /tmp/qt/installer.run \"$QT_PATH\"     \u0026\u0026 find \"$QT_PATH\" -mindepth 1 -maxdepth 1 ! -name \"${QT_VERSION}\" -exec echo 'Cleaning Qt SDK: {}' \\; -exec rm -r '{}' \\;     \u0026\u0026 /tmp/qt/install-linuxdeployqt.sh \"${QT_VERSION}\"     \u0026\u0026 /tmp/qt/install-additional-qt-libs.sh \"${QT_PATH}\" \"${QT_VERSION}\"     \u0026\u0026 rm -rf /tmp/qt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 1000 -r fuse \u0026\u0026 useradd --create-home --gid fuse jenkins \u0026\u0026 echo 'jenkins ALL=NOPASSWD: ALL' \u003e /etc/sudoers.d/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}