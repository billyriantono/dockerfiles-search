{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "npetrovsky/docker-android-sdk-ndk",
      "SourceCode": "FROM npetrovsky/docker-android-sdk-ndk",
      "Platform": "",
      "From": {
        "Image": "npetrovsky/docker-android-sdk-ndk"
      },
      "Commands": [
        {
          "Maintainer": "zhangchang\u003czhangchang1979@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y make autoconf automake build-essential python-dev libtool pkg-config libssl-dev g++ zlib1g-dev vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash \u0026\u0026     export NVM_DIR=\"$HOME/.nvm\" \u0026\u0026     [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" \u0026\u0026     [ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash - \u0026\u0026     apt-get install -y nodejs \u0026\u0026     npm -g install react-native-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/facebook/watchman.git \u0026\u0026     cd watchman \u0026\u0026     git checkout v4.9.0 \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ruby-full \u0026\u0026     gem install nokogiri \u0026\u0026     gem install fastlane -NV"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://raw.githubusercontent.com/mattermost/mattermost-mobile/master/fastlane/Gemfile -q \u0026\u0026     wget https://raw.githubusercontent.com/mattermost/mattermost-mobile/master/fastlane/Gemfile.lock -q \u0026\u0026     bundle install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/lib/jvm/java-8-openjdk-amd64/bin/keytool  -genkey -v -keystore ~/tci-mattermost.keystore -alias tci-mattermost -keyalg RSA -keysize 2048 -validity 10000 -dname \"CN=tci,OU=TCI,O=Dev,L=Tianjin,S=Tianjin,C=CN\" -noprompt -storepass 123456 -keypass 123456 \u0026\u0026     /usr/lib/jvm/java-8-openjdk-amd64/bin/keytool -importkeystore -srckeystore ~/tci-mattermost.keystore -destkeystore ~/tci-mattermost.keystore -deststoretype pkcs12 \u0026\u0026     mkdir ~/.gradle \u0026\u0026     echo \"MATTERMOST_RELEASE_STORE_FILE=/root/tci-mattermost.keystore\" \u003e\u003e ~/.gradle/gradle.properties \u0026\u0026     echo \"MATTERMOST_RELEASE_KEY_ALIAS=tci-mattermost\" \u003e\u003e ~/.gradle/gradle.properties \u0026\u0026     echo \"MATTERMOST_RELEASE_PASSWORD=123456\" \u003e\u003e ~/.gradle/gradle.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y locales \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}