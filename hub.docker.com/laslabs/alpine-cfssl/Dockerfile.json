{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine",
      "Platform": "",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Maintainer": "Dave Lasley \u003cdave@laslabs.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CFSSL_CSR",
              "Value": "\"csr_root_ca.json\""
            },
            {
              "Key": "CFSSL_CONFIG",
              "Value": "\"ca_root_config.json\""
            },
            {
              "Key": "DB_CONFIG",
              "Value": "\"db_config.json\""
            },
            {
              "Key": "DB_ENVIRONMENT",
              "Value": "\"production\""
            },
            {
              "Key": "DB_INIT",
              "Value": "\"1\""
            },
            {
              "Key": "DB_DESTROY",
              "Value": "\"0\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc/*",
            "/etc/cfssl/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bin/",
            "/cfssl-bin"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         build-base         gcc         git         libtool         sqlite-dev     \u0026\u0026 apk add --no-cache         curl         python     \u0026\u0026 addgroup -S cfssl     \u0026\u0026 adduser -S -g cfssl cfssl     \u0026\u0026 go get bitbucket.org/liamstask/goose/cmd/goose     \u0026\u0026 git clone --depth=1 \"https://github.com/cloudflare/cfssl.git\" \"${GOPATH}/src/github.com/cloudflare/cfssl\"     \u0026\u0026 cd \"${GOPATH}/src/github.com/cloudflare/cfssl\" \t\u0026\u0026 go build -o /usr/bin/cfssl ./cmd/cfssl \t\u0026\u0026 go build -o /usr/bin/cfssljson ./cmd/cfssljson \t\u0026\u0026 go build -o /usr/bin/mkbundle ./cmd/mkbundle \t\u0026\u0026 go build -o /usr/bin/multirootca ./cmd/multirootca \t\u0026\u0026 cp -R \"${GOPATH}/src/github.com/cloudflare/cfssl/vendor/github.com/cloudflare/cfssl_trust\" / \t\u0026\u0026 ln -s /cfssl_trust /etc/cfssl/     \u0026\u0026 mkdir /opt/     \u0026\u0026 cp -R \"${GOPATH}/src/github.com/cloudflare/cfssl/certdb/\" /opt/     \u0026\u0026 set -x \t\u0026\u0026 go get github.com/GeertJohan/go.rice/rice     \u0026\u0026 rice embed-go -i=./cli/serve \t\u0026\u0026 mkdir -p /etc/cfssl     \u0026\u0026 ln -s \"/etc/cfssl/${CFSSL_CSR}\" /     \u0026\u0026 chown -R cfssl:cfssl /etc/cfssl     \u0026\u0026 chmod 770 /etc/cfssl     \u0026\u0026 chmod 644 /etc/cfssl/*.json     \u0026\u0026 chown cfssl:cfssl /docker-entrypoint.sh     \u0026\u0026 chmod 770 /docker-entrypoint.sh     \u0026\u0026 chown cfssl:cfssl /cfssl_trust     \u0026\u0026 chown cfssl:cfssl /opt/certdb     \u0026\u0026 chown -R cfssl:cfssl /cfssl-bin     \u0026\u0026 chmod -R 770 /cfssl-bin     \u0026\u0026 ln -s /cfssl-bin/* /bin \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 rm -rf \"${GOPATH}/src\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "\"cfssl:cfssl\""
        },
        {
          "Name": "workdir",
          "Path": "/etc/cfssl"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/cfssl",
            "/cfssl_trust"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "cfssl",
            "serve",
            "-address=0.0.0.0",
            "-ca=/etc/cfssl/ca.pem",
            "-ca-key=/etc/cfssl/ca-key.pem",
            "-port=8080"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"CFSSL - Alpine\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Provides a Docker image for CFSSL based on Alpine Linux.\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://laslabs.com/\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/LasLabs/docker-alpine-cfssl\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"LasLabs Inc.\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}