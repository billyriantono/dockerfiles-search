MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04
  Commands:
  - Key: ARCH
    Name: arg
    Value: x86_64
  - Key: PYTHON_VERSION
    Name: arg
    Value: 3.7.0
  - Key: MAJOR_VERSION
    Name: arg
    Value: "3.7"
  - Key: TCH
    Name: arg
    Value: 0.4.1.post2
  - Key: CU
    Name: arg
    Value: "90"
  - Key: PY
    Name: arg
    Value: "37"
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update  && apt-get dist-upgrade -y  && apt-get install -y      build-essential      libboost-python-dev      libbz2-dev      libexpat1-dev      libffi-dev      libgdbm-dev      libjpeg-dev      liblapack-dev      liblzma-dev      libncurses5-dev      libreadline-dev      libsm6      libspatialindex-dev      libssl-dev      libsqlite3-dev      libxml2-dev      libxslt-dev      lzma-dev      git      gfortran      wget      xz-utils      zlib1g-dev  &&
      apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp   && TARGET_ARCH="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"   &&
      wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz   &&
      tar xvf Python-${PYTHON_VERSION}.tgz   && cd Python-${PYTHON_VERSION}   && ./configure      --build="$TARGET_ARCH"      --with-lto      --with-system-ffi      --with-system-expat      --enable-ipv6      --enable-optimizations      --enable-shared      --enable-loadable-sqlite-extensions   &&
      make -j4   && make altinstall   && rm -rf /tmp/Python*
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig -v    && cd /usr/local/bin    && find /usr/local -depth       \( \(
      -type d -and \( -name test -or -name tests -or -name __pycache__ \) \) -or          \(
      -type f -and \( -name '*.pyc' -or -name '*.pyo' \) \) \)       -exec rm -rf
      '{}' +    && find /var/lib/apt/lists            /usr/share/man            /usr/share/doc            /var/log       -type
      f -exec rm -rf '{}' +
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin    && ln -sf easy_install-${MAJOR_VERSION} easy_install    &&
      ln -sf idle${MAJOR_VERSION} idle    && ln -sf pydoc${MAJOR_VERSION} pydoc    &&
      ln -sf python${MAJOR_VERSION} python    && ln -sf python-config${MAJOR_VERSION}
      python-config    && ln -sf pip${MAJOR_VERSION} pip    && pip${MAJOR_VERSION}
      --no-cache-dir install --upgrade pip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - python -m pip install cython torch
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install -r deps/requirements.txt
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04
