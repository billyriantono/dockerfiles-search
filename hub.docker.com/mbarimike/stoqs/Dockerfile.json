{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pcic/geospatial-python",
      "SourceCode": "FROM pcic/geospatial-python",
      "Platform": "",
      "From": {
        "Image": "pcic/geospatial-python"
      },
      "Commands": [
        {
          "Maintainer": "Mike McCann \u003cmccann@mbari.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -qq -y install     freetds-dev     git     gmt     libncurses-dev     postgresql-10     time     wget     imagemagick     firefox     xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q \"https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux32.tar.gz\" -O /tmp/geckodriver.tgz     \u0026\u0026 tar zxf /tmp/geckodriver.tgz -C /usr/bin/     \u0026\u0026 rm /tmp/geckodriver.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'en_US.UTF-8'"
            },
            {
              "Key": "LANGUAGE",
              "Value": "'en_US:en'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'en_US.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'none /dev/shm tmpfs rw,nosuid,nodev,noexec 0 0' \u003e /etc/fstab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/bin/ \u0026\u0026    ln -fs python3 python \u0026\u0026    ln -fs python3-config python-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements",
            "/requirements"
          ]
        },
        {
          "CmdLine": [
            "pip3 install -U git+https://github.com/matplotlib/basemap.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c 'pip install -r /requirements/production.txt'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-stoqs-uwsgi.ini",
            "/etc/uwsgi/django-uwsgi.ini"
          ]
        },
        {
          "CmdLine": [
            "docker/stoqs-start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}