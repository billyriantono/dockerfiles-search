MetaArgs: null
Stages:
- BaseName: jupyter/ubuntu_14_04_locale_fix
  Commands:
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get remove -yq         python3-minimal         python3.4         python3.4-minimal         libpython3-stdlib         libpython3.4-stdlib         libpython3.4-minimal
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -qq &&     DEBIAN_FRONTEND=noninteractive apt-get install -yq
      --no-install-recommends         build-essential         ca-certificates         curl
      \        git \twget \tnano         language-pack-en         libcurl4-openssl-dev
      \        libffi-dev         libsqlite3-dev         libzmq3-dev         pandoc
      \        python         python3         python-dev         python3-dev         sqlite3
      \        texlive-fonts-recommended         texlive-latex-base         texlive-latex-extra
      \        zlib1g-dev \tlibxml2-dev         libxslt1-dev         firefox         xvfb
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini
      &&     echo "d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python2 get-pip.py &&     python3
      get-pip.py &&     rm get-pip.py &&     pip2 --no-cache-dir install requests[security]
      &&     pip3 --no-cache-dir install requests[security] &&     rm -rf /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 --no-cache-dir install ipykernel &&     pip3 --no-cache-dir install ipykernel
      &&         python2 -m ipykernel.kernelspec &&     python3 -m ipykernel.kernelspec
      &&     rm -rf /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install notebook
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/requirements.txt
    - /
  - CmdLine:
    - pip install -r /requirements.txt && rm -rf /root/.cache/pip/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/bokeh_download.py
    - /
  - CmdLine:
    - python3 /bokeh_download.py
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p -m 700 /root/.jupyter/ &&     echo "c.NotebookApp.ip = '*'" >> /root/.jupyter/jupyter_notebook_config.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start-notebook.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/start-notebook.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/notebooks
  - Name: expose
    Ports:
    - "8888"
  From:
    Image: jupyter/ubuntu_14_04_locale_fix
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/ubuntu_14_04_locale_fix
