MetaArgs: null
Stages:
- BaseName: hashicorp/packer:light
  Commands:
  - Maintainer: Jesse DeFer <packer-ansible@dotd.com>
    Name: maintainer
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 19.03.5
    Name: env
  - CmdLine:
    - adduser -D -u 1000 jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/jenkins/.ssh && chmod 0700 /home/jenkins/.ssh && echo -e "Host
      github.com\n\tStrictHostKeyChecking no\n" >> /home/jenkins/.ssh/config && chmod
      0600 /home/jenkins/.ssh/config && chown -R jenkins:jenkins /home/jenkins/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add git openssh-client rsync jq py2-pip py-boto py2-six py2-cryptography
      py2-bcrypt py2-asn1crypto py2-jsonschema py2-pynacl py2-asn1 py2-markupsafe
      py2-paramiko py2-dateutil py2-docutils py2-futures py2-rsa py2-libxml2 libxml2
      libxslt &&     apk --no-cache add gcc python2-dev musl-dev linux-headers libxml2-dev
      libxslt-dev &&     pip install ansible jsonmerge awscli boto3 hvac ansible-modules-hashivault
      molecule python-gilt python-jenkins lxml openshift docker docker-compose mitogen
      yamale ansible-lint &&     apk del gcc python2-dev musl-dev linux-headers libxml2-dev
      libxslt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \t\tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64)
      dockerArch='x86_64' ;; \t\tarmhf) dockerArch='armel' ;; \t\taarch64) dockerArch='aarch64'
      ;; \t\tppc64le) dockerArch='ppc64le' ;; \t\ts390x) dockerArch='s390x' ;; \t\t*)
      echo >&2 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;\tesac; \t\tif
      ! wget -nv -O docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\";
      then \t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from
      '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\ttar --extract
      \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/
      \t; \trm docker.tgz; \t\tdockerd --version;         docker --version"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins
    - /usr/share/ansible/plugins/
  - Env:
    - Key: ANSIBLE_FORCE_COLOR
      Value: "True"
    Name: env
  - Env:
    - Key: ANSIBLE_HOST_KEY_CHECKING
      Value: "False"
    Name: env
  - Env:
    - Key: ANSIBLE_PIPELINING
      Value: "True"
    Name: env
  - Env:
    - Key: AWS_DEFAULT_REGION
      Value: us-west-2
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: hashicorp/packer:light
  Name: ""
  Platform: ""
  SourceCode: FROM hashicorp/packer:light
