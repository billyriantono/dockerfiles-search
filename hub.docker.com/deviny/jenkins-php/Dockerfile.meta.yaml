MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - apt-get update         && apt-get install -y sudo rsync build-essential
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf     dpkg-dev     file     g++     gcc     libc-dev     libpcre3-dev     make     pkg-config     re2c
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     $PHPIZE_DEPS     ca-certificates     curl     libedit2     libsqlite3-0     libxml2     xz-utils     sudo     cron     git     wget     python     vim     unzip     mysql-client     zip     libbz2-dev     libgd2-dev     libpng-dev     libjpeg-dev     libgif-dev     supervisor     --no-install-recommends
      && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.6
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-7.2.6.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-7.2.6.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"1f004e049788a3effc89ef417f06a6cf704c95ae2a718b2175185f2983381ae7"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - set -xe; fetchDeps=''; if ! command -v gpg > /dev/null; then fetchDeps="$fetchDeps
      dirmngr gnupg2 "; fi; apt-get update; apt-get install -y --no-install-recommends
      $fetchDeps; rm -rf /var/lib/apt/lists/*; mkdir -p /usr/src; cd /usr/src; wget
      -O php.tar.xz "$PHP_URL"; if [ -n "$PHP_SHA256" ]; then echo "$PHP_SHA256 *php.tar.xz"
      | sha256sum -c -; fi; if [ -n "$PHP_MD5" ]; then echo "$PHP_MD5 *php.tar.xz"
      | md5sum -c -; fi; if [ -n "$PHP_ASC_URL" ]; then wget -O php.tar.xz.asc "$PHP_ASC_URL";
      export GNUPGHOME="$(mktemp -d)"; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key"; done; gpg --batch --verify php.tar.xz.asc php.tar.xz; rm
      -rf "$GNUPGHOME"; fi; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $fetchDeps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - set -xe && buildDeps=" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev
      libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev " && apt-get update && apt-get
      install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*
      && export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS"
      && docker-php-source extract && cd /usr/src/php && gnuArch="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)" && debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"
      && if [ ! -d /usr/include/curl ]; then ln -sT "/usr/include/$debMultiarch/curl"
      /usr/local/include/curl; fi && ./configure --build="$gnuArch" --with-config-file-path="$PHP_INI_DIR"
      --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" --disable-cgi --enable-ftp
      --enable-mbstring --enable-zip --enable-opcache-file --with-bz2 --with-gettext
      --enable-sockets --enable-pcntl --enable-phpdbg-debug --enable-debug --enable-mysqlnd
      --enable-exif --enable-sqlite-utf8 --enable-zip --enable-pcntl --with-curl --with-libedit
      --with-openssl --with-zlib --with-mysqli --with-pdo-mysql --with-gd --with-jpeg-dir
      --with-png-dir= --with-gif-dir --with-pcre-regex=/usr --with-libdir="lib/$debMultiarch"
      $PHP_EXTRA_CONFIGURE_ARGS && make -j "$(nproc)" && make install && { find /usr/local/bin
      /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true;
      } && make clean && cd / && docker-php-source delete && apt-get purge -y --auto-remove
      -o APT::AutoRemove::RecommendsImportant=false $buildDeps && pecl update-channels
      && rm -rf /tmp/pear ~/.pearrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/jenkins_home/workspace
  - CmdLine:
    - EXPECTED_SIGNATURE=$(wget -q -O - https://composer.github.io/installer.sig);                        php
      -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"                        ACTUAL_SIGNATURE=$(php
      -r "echo hash_file('SHA384', 'composer-setup.php');");                        php
      composer-setup.php;                        php -r "unlink('composer-setup.php');";                        mv
      composer.phar /usr/local/bin/composer;                        echo 'export TERM=xterm-256color'
      >> /root/.bashrc;                        echo 'export PATH=/root/.composer/vendor/bin:$PATH'
      >> /root/.bashrc;
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.txt
    - /usr/share/jenkins/plugins.txt
  - CmdLine:
    - /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt
    Name: run
    PrependShell: true
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
