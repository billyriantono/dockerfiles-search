MetaArgs: null
Stages:
- BaseName: registry.access.redhat.com/ubi8/php-73
  Commands:
  - Labels:
    - Key: io.k8s.description
      Value: '"PHP 7.3 with Database Connectors"'
    - Key: io.k8s.display-name
      Value: '"Apache 2.4 with PHP 7.3 and Database Connectors"'
    - Key: io.openshift.expose-services
      Value: '"8080:http"'
    - Key: io.openshift.tags
      Value: '"builder,php,php73,sqlsrv,mcrypt,oracle,oci8,oci"'
    - Key: help
      Value: '"For more information visit https://access.redhat.com/containers/?tab=images&get-method=unauthenticated#/registry.access.redhat.com/ubi8/php-73"'
    - Key: io.openshift.s2i.scripts-url
      Value: '"image:///opt/app-root/s2i/bin"'
    Name: label
  - Env:
    - Key: STI_SCRIPTS_PATH
      Value: /opt/app-root/s2i/bin
    Name: env
  - Name: user
    User: "0"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./s2i/bin/
    - /opt/app-root/s2i/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc
    - /opt/app-root/etc/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./src/*.rpm
    - /opt/app-root/etc/
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - 'cp /opt/app-root/etc/ubi7.repo /etc/yum.repos.d/ubi7.repo &&     yum -y --disableplugin=subscription-manager
      remove unixODBC-utf16 &&     yum config-manager --disableplugin=subscription-manager     --enable
      ubi-7-server-optional-rpms     --enable ubi-7-server-extras-rpms     --enable
      ubi-7 &&     curl https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/mssql-release.repo
      &&     echo ''Installing epel-release (Extra Packages for Enterprise Linux)...''
      &&     yum install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager
      https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm &&     ARCH=$(
      /bin/arch ) &&     yum --disableplugin=subscription-manager repolist > /dev/null
      &&     echo ''Installing downloaded dependencies before yum install...'' &&     yum
      install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager /opt/app-root/etc/net-snmp-libs-5.8-10.el8.x86_64.rpm     /opt/app-root/etc/net-snmp-utils-5.8-10.el8.x86_64.rpm     /opt/app-root/etc/libyaml-devel-0.1.7-5.el8.x86_64.rpm
      &&     echo ''Installing packages via yum...'' &&     INSTALL_PKGS="diffutils
      fuse fuse-common fuse-libs gettext libzip libzip-devel nss_wrapper libaio libmcrypt
      libmcrypt-devel libss libyaml pcre-utf16 php-devel php-pear php-pecl-zip php-snmp
      python36 unixODBC-devel" &&     ACCEPT_EULA=Y yum install -y --setopt=tsflags=nodocs
      --disableplugin=subscription-manager $INSTALL_PKGS &&     echo ''rpm -V $INSTALL_PKGS...''
      &&     rpm -V $INSTALL_PKGS &&     echo ''Installing manually downloaded packages...''
      &&     yum install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager
      /opt/app-root/etc/e2fsprogs-libs-1.44.6-3.el8.x86_64.rpm     /opt/app-root/etc/libnsl-2.28-72.el8.x86_64.rpm     /opt/app-root/etc/e2fsprogs-1.44.6-3.el8.x86_64.rpm     /opt/app-root/etc/libtalloc-devel-2.1.16-3.el8.x86_64.rpm     /opt/app-root/etc/libtevent-devel-0.9.39-2.el8.x86_64.rpm     /opt/app-root/etc/libtevent-0.9.39-2.el8.x86_64.rpm     /opt/app-root/etc/libtdb-1.3.18-2.el8.x86_64.rpm     /opt/app-root/etc/libtdb-devel-1.3.18-2.el8.x86_64.rpm     /opt/app-root/etc/libldb-1.5.4-2.el8.x86_64.rpm     /opt/app-root/etc/libldb-devel-1.5.4-2.el8.x86_64.rpm
      &&     echo ''Installing MS SQL 17...'' &&     INSTALL_PKGS="mssql-tools msodbcsql17"
      &&     ACCEPT_EULA=Y yum install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager
      $INSTALL_PKGS &&     echo ''rpm -V $INSTALL_PKGS...'' &&     echo "Installing
      Oracle InstantClient..." &&     yum install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager
      https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
      &&     yum install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager
      https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
      &&     yum install -y --setopt=tsflags=nodocs --disableplugin=subscription-manager
      https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
      &&     echo "/usr/lib/oracle/19.5/client64/lib" > /etc/ld.so.conf.d/oracle-instantclient.conf
      &&     ldconfig &&     echo ''Oracle InstantClient installation complete.''
      &&     echo ''Update PECL'' &&     pecl channel-update pecl.php.net &&     echo
      "Uninstalling old versions of PECL extensions..." &&     pecl uninstall -r oci8     pdo_sqlsrv     sqlsrv     xdebug     yaml
      &&     pecl install mcrypt &&     echo "$ORACLE_HOME" | pecl install oci8 &&     pecl
      install pdo_sqlsrv &&     pecl install sqlsrv &&     pecl install xdebug &&     printf
      "\n" | pecl install yaml &&     echo $PATH &&     ls -al /etc/php.d/ &&     PHP_SOURCE_VERSION=$(php
      -v | grep cli | cut -d '' '' -f 2) &&     echo "PHP_SOURCE_VERSION : ${PHP_SOURCE_VERSION}"
      &&     mkdir -p /usr/src/ &&     curl -Lo /usr/src/php.tar.xz http://php.net/get/php-${PHP_SOURCE_VERSION}.tar.xz/from/this/mirror
      &&     curl -L https://raw.githubusercontent.com/docker-library/php/master/docker-php-ext-configure
      -o /usr/local/bin/docker-php-ext-configure &&     curl -L https://raw.githubusercontent.com/docker-library/php/master/docker-php-source
      -o /usr/local/bin/docker-php-source &&     curl -L https://raw.githubusercontent.com/docker-library/php/master/docker-php-ext-install
      -o /usr/local/bin/docker-php-ext-install &&     curl -L https://raw.githubusercontent.com/docker-library/php/master/docker-php-ext-enable
      -o /usr/local/bin/docker-php-ext-enable &&     chmod u+x /usr/local/bin/docker-php-ext-configure     /usr/local/bin/docker-php-ext-enable     /usr/local/bin/docker-php-ext-install     /usr/local/bin/docker-php-source
      &&     docker-php-ext-install sockets &&     docker-php-ext-install zip &&     echo
      "extension=mcrypt.so" > /etc/php.d/30-mcrypt.ini &&     echo ''Clearing cache...''
      &&     yum clean all -y --disableplugin=subscription-manager &&     rm -rf /var/cache/yum
      &&     rm -rf /var/cache/dnf &&     rm -rfv /opt/app-root/etc/*.rpm &&     touch
      /tmp/passwd &&     chmod 664 /tmp/passwd &&     chmod 664 /etc/odbcinst.ini
      &&     which httpd &&     chmod -R a+rwx /usr/sbin/httpd &&     cp /etc/openldap/ldap.conf
      /etc/openldap/ldap.conf.rpm &&     mv /opt/app-root/etc/ldap.conf /etc/openldap/ldap.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib64/libnss_wrapper.so
    Name: env
  - Env:
    - Key: NSS_WRAPPER_PASSWD
      Value: /tmp/passwd
    Name: env
  - Env:
    - Key: NSS_WRAPPER_GROUP
      Value: /etc/group
    Name: env
  - Name: user
    User: "1001"
  - Env:
    - Key: PATH
      Value: $PATH:/opt/mssql-tools/bin
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$HOME/.composer/vendor/bin
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: $HOME/.nvm
    Name: env
  - CmdLine:
    - $STI_SCRIPTS_PATH/usage
    Name: cmd
    PrependShell: true
  From:
    Image: registry.access.redhat.com/ubi8/php-73
  Name: ""
  Platform: ""
  SourceCode: FROM registry.access.redhat.com/ubi8/php-73
