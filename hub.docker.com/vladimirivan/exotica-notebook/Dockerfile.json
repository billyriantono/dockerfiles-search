{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ros:melodic-ros-core",
      "SourceCode": "FROM ros:melodic-ros-core",
      "Platform": "",
      "From": {
        "Image": "ros:melodic-ros-core"
      },
      "Commands": [
        {
          "Key": "NB_USER",
          "Name": "arg",
          "Value": "\"jovyan\""
        },
        {
          "Key": "NB_UID",
          "Name": "arg",
          "Value": "\"1000\""
        },
        {
          "Key": "NB_GID",
          "Name": "arg",
          "Value": "\"100\""
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get install -yq --no-install-recommends    wget bzip2 ca-certificates sudo locales fonts-liberation    python-catkin-tools ros-melodic-exotica-examples ros-melodic-talos-description    ros-melodic-exotica-val-description ros-melodic-exotica    python-pip python3-pip net-tools libzmq3-dev python3-setuptools python-setuptools \u0026\u0026    pip3 install wheel \u0026\u0026    pip2 install wheel \u0026\u0026    pip3 install jupyter ipywidgets tini \u0026\u0026    pip2 install numpy==1.16.0 scipy matplotlib ipykernel ipywidgets meshcat \u0026\u0026    rm -rf /var/lib/apt/lists/* \u0026\u0026    echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026    locale-gen \u0026\u0026    sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "NB_USER",
              "Value": "$NB_USER"
            },
            {
              "Key": "NB_UID",
              "Value": "$NB_UID"
            },
            {
              "Key": "NB_GID",
              "Value": "$NB_GID"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/fix-permissions",
            "/usr/local/bin/fix-permissions"
          ]
        },
        {
          "CmdLine": [
            "echo \"auth requisite pam_deny.so\" \u003e\u003e /etc/pam.d/su \u0026\u0026     sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers \u0026\u0026     sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers \u0026\u0026     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     chmod g+w /etc/passwd \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py widgetsnbextension --sys-prefix \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "mkdir -p /home/$NB_USER/catkin_ws/src \u0026\u0026 cd /home/$NB_USER/catkin_ws/src \u0026\u0026    git clone -n https://github.com/ipab-slmc/exotica.git \u0026\u0026 cd exotica \u0026\u0026 git checkout 5595361 \u0026\u0026    cd /home/$NB_USER/catkin_ws \u0026\u0026    apt-get update \u0026\u0026    rosdep update \u0026\u0026    rosdep install --from-paths src --ignore-src -r -y -i \u0026\u0026    /bin/bash -c \"source /opt/ros/melodic/setup.bash \u0026\u0026 cd ~/catkin_ws \u0026\u0026 catkin init \u0026\u0026 catkin config --install \u0026\u0026 catkin build\" \u0026\u0026    echo 'source ~/catkin_ws/install/setup.bash' \u003e\u003e /home/$NB_USER/.bashrc \u0026\u0026    rm -rf /var/lib/apt/lists/* \u0026\u0026    rm -rf /home/$NB_USER/catkin_ws/build \u0026\u0026    rm -rf /home/$NB_USER/catkin_ws/devel \u0026\u0026    rm -rf /home/$NB_USER/catkin_ws/src \u0026\u0026    rm -rf /home/$NB_USER/catkin_ws/logs \u0026\u0026    rm -rf /home/$NB_USER/catkin_ws/.catkin_tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/$NB_USER/ \u0026\u0026    git clone --recursive --single-branch --branch vi-fileserver https://github.com/VladimirIvan/meshcat-python.git \u0026\u0026    cd /home/$NB_USER/meshcat-python \u0026\u0026 python3 setup.py install \u0026\u0026    rm -rf /home/$NB_USER/meshcat-python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER/notebooks"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/start-jupyter.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "start-jupyter.sh",
            "--NotebookApp.token=''",
            "--NotebookApp.password=''"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7000"
          ]
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        }
      ]
    }
  ]
}