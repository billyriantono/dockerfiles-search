MetaArgs: null
Stages:
- BaseName: golang:1.13.1-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache gcc g++
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/src/github.com/grafana/grafana
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go.mod
    - go.sum
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vendor
    - vendor
  - CmdLine:
    - go mod verify
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pkg
    - pkg
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build.go
    - package.json
    - ./
  - CmdLine:
    - go run build.go build
    Name: run
    PrependShell: true
  From:
    Image: golang:1.13.1-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.13.1-alpine
- BaseName: node:10.14.2-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache curl &&    cd /tmp && curl -Ls https://github.com/dustinblackman/phantomized/releases/download/2.1.1/dockerized-phantomjs.tar.gz
      | tar xz &&    cp -R lib lib64 / &&    cp -R usr/lib/x86_64-linux-gnu /usr/lib
      &&    cp -R usr/share /usr/share &&    cp -R etc/fonts /etc &&    curl -k -Ls
      https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
      | tar -jxf - &&    cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - yarn.lock
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - packages
    - packages
  - CmdLine:
    - yarn install --pure-lockfile --no-progress
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gruntfile.js
    - tsconfig.json
    - tslint.json
    - .browserslistrc
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - public
    - public
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - emails
    - emails
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - CmdLine:
    - ./node_modules/.bin/grunt build
    Name: run
    PrependShell: true
  From:
    Image: node:10.14.2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.14.2-alpine
- BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Grafana team <hello@grafana.com>"'
    Name: label
  - Key: GF_UID
    Name: arg
    Value: '"472"'
  - Key: GF_GID
    Name: arg
    Value: '"472"'
  - Env:
    - Key: PATH
      Value: '"/usr/share/grafana/bin:$PATH"'
    - Key: GF_PATHS_CONFIG
      Value: '"/etc/grafana/grafana.ini"'
    - Key: GF_PATHS_DATA
      Value: '"/var/lib/grafana"'
    - Key: GF_PATHS_HOME
      Value: '"/usr/share/grafana"'
    - Key: GF_PATHS_LOGS
      Value: '"/var/log/grafana"'
    - Key: GF_PATHS_PLUGINS
      Value: '"/var/lib/grafana/plugins"'
    - Key: GF_PATHS_PROVISIONING
      Value: '"/etc/grafana/provisioning"'
    Name: env
  - Name: workdir
    Path: $GF_PATHS_HOME
  - CmdLine:
    - apk add --no-cache ca-certificates bash tzdata &&     apk add --no-cache --upgrade
      --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main openssl musl-utils
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf
    - ./conf
  - CmdLine:
    - mkdir -p "$GF_PATHS_HOME/.aws" &&     addgroup -S -g $GF_GID grafana &&     adduser
      -S -u $GF_UID -G grafana grafana &&     mkdir -p "$GF_PATHS_PROVISIONING/datasources"              "$GF_PATHS_PROVISIONING/dashboards"              "$GF_PATHS_PROVISIONING/notifiers"              "$GF_PATHS_LOGS"              "$GF_PATHS_PLUGINS"              "$GF_PATHS_DATA"
      &&     cp "$GF_PATHS_HOME/conf/sample.ini" "$GF_PATHS_CONFIG" &&     cp "$GF_PATHS_HOME/conf/ldap.toml"
      /etc/grafana/ldap.toml &&     chown -R grafana:grafana "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws"
      "$GF_PATHS_LOGS" "$GF_PATHS_PLUGINS" "$GF_PATHS_PROVISIONING" &&     chmod -R
      777 "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws" "$GF_PATHS_LOGS" "$GF_PATHS_PLUGINS"
      "$GF_PATHS_PROVISIONING"
    Name: run
    PrependShell: true
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /tmp/lib
    - /lib
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /tmp/lib64
    - /lib64
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /tmp/usr/lib/x86_64-linux-gnu
    - /usr/lib/x86_64-linux-gnu
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /tmp/usr/share
    - /usr/share
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /tmp/etc/fonts
    - /etc/fonts
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/phantomjs
    - /usr/local/bin
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-server
    - /go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-cli
    - ./bin/
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /usr/src/app/public
    - ./public
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /usr/src/app/tools
    - ./tools
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools/phantomjs/render.js
    - ./tools/phantomjs/render.js
  - Name: expose
    Ports:
    - "3000"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./packaging/docker/run.sh
    - /run.sh
  - Name: user
    User: $GF_UID
  - CmdLine:
    - /run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
