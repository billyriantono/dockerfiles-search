MetaArgs: null
Stages:
- As: build-ecr-plugin
  BaseName: golang:1.9
  Commands:
  - CmdLine:
    - go get -u github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/awslabs/amazon-ecr-credential-helper
  - CmdLine:
    - make linux-amd64
    Name: run
    PrependShell: true
  From:
    Image: golang:1.9
  Name: build-ecr-plugin
  Platform: ""
  SourceCode: FROM golang:1.9 AS build-ecr-plugin
- BaseName: docker:18
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"@adenot"'
    Name: label
  - CmdLine:
    - apk --no-cache update && apk --no-cache upgrade     && apk --no-cache add --upgrade
      make zip git curl py-pip openssl bash gettext       gcc python2-dev openssl-dev
      libffi-dev musl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip docker-compose
    Name: run
    PrependShell: true
  - Chown: ""
    From: build-ecr-plugin
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/awslabs/amazon-ecr-credential-helper/bin/linux-amd64/docker-credential-ecr-login
    - /bin
  - CmdLine:
    - mkdir -p ~/.docker
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo > ~/.docker/config.json ''{ "credsStore": "ecr-login" }'''
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: cmd
    PrependShell: false
  From:
    Image: docker:18
  Name: ""
  Platform: ""
  SourceCode: FROM docker:18
