MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: showwin <showwin_kmc@yahoo.co.jp>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget sudo less vim tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 1001 ishocon &&     useradd  -g ishocon -G sudo -m -s /bin/bash
      ishocon &&     echo 'ishocon:ishocon' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'ishocon ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - debconf-set-selections <<< 'mysql-server mysql-server/root_password password
      ishocon'
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - debconf-set-selections <<< 'mysql-service mysql-server/mysql-apt-config string
      4'
    Name: run
    PrependShell: false
  - CmdLine:
    - apt-get install -y mysql-server
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nginx
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - admin/ssl/
    - /etc/nginx/ssl/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - admin/config/nginx.conf
    - /etc/nginx/nginx.conf
  - Name: user
    User: ishocon
  - CmdLine:
    - sudo apt-get install -y git ruby-dev libssl-dev libreadline-dev gcc make libmysqlclient-dev
      &&     git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
    Name: run
    PrependShell: true
  - CmdLine:
    - PATH="$HOME/.rbenv/bin:$PATH" &&     eval "$(rbenv init -)" &&     git clone
      https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build &&     rbenv
      install 2.5.1 && rbenv rehash && rbenv global 2.5.1
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/pyenv/pyenv.git ~/.pyenv &&     PYENV_ROOT="$HOME/.pyenv"
      && PATH="$PYENV_ROOT/bin:$PATH" &&     eval "$(pyenv init -)" &&     pyenv install
      3.6.5 && pyenv global 3.6.5 &&     cd && curl https://bootstrap.pypa.io/get-pip.py
      -o get-pip.py && python get-pip.py && rm get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo wget https://dl.google.com/go/go1.10.2.linux-amd64.tar.gz &&     sudo tar
      -C /usr/local -xzf go1.10.2.linux-amd64.tar.gz &&     sudo rm go1.10.2.linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/go/bin
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: $HOME/.local/go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin
    Name: env
  - CmdLine:
    - sudo mkdir /run/php
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y php php-fpm php-mysql php-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://dist.crystal-lang.org/apt/setup.sh | sudo bash
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y libssl1.0-dev crystal
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/ishocon/data /home/ishocon/webapp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - admin/ishocon2.dump.tar.bz2
    - /home/ishocon/data/ishocon2.dump.tar.bz2
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - webapp/
    - /home/ishocon/webapp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - admin/config/bashrc
    - /home/ishocon/.bashrc
  - CmdLine:
    - cd /home/ishocon/webapp/ruby && sudo gem install bundler && bundle install
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=C.UTF-8 && LANG=C.UTF-8 && cd /home/ishocon/webapp/python &&     /home/ishocon/.pyenv/shims/pip
      install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/ishocon/webapp/php &&     sudo php -r "copy('https://getcomposer.org/installer',
      'composer-setup.php');" &&     sudo php composer-setup.php &&     sudo php -r
      "unlink('composer-setup.php');" &&     sudo php ./composer.phar install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/ishocon/webapp/nodejs &&     sudo npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/ishocon/webapp/crystal &&     shards install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start_app.sh
    - /docker/start_app.sh
  - Name: workdir
    Path: /home/ishocon
  - Name: expose
    Ports:
    - "443"
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
