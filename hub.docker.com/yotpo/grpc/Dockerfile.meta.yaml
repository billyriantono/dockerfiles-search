MetaArgs: null
Stages:
- BaseName: golang:1.6
  Commands:
  - CmdLine:
    - apt-get update &&     apt-get -y install git unzip build-essential autoconf
      libtool
    Name: run
    PrependShell: true
  - Env:
    - Key: PROTO_VERSION
      Value: ${PROTO_VERSION:-3.0.0-beta-2}
    Name: env
  - CmdLine:
    - wget "https://github.com/google/protobuf/archive/v${PROTO_VERSION}.tar.gz" -O
      protobuf.tar.gz -o /dev/null &&     tar -xzf protobuf.tar.gz &&     cd protobuf-${PROTO_VERSION}
      &&     ./autogen.sh &&     ./configure &&     make &&     make install &&     ldconfig
      &&     make clean &&     cd .. &&     rm -r protobuf-${PROTO_VERSION} protobuf.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u google.golang.org/grpc
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/golang/protobuf/protoc-gen-go
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/googleapis/googleapis.git $GOPATH/src/github.com/googleapis/googleapis
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/gengo/grpc-gateway/protoc-gen-grpc-gateway
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/gengo/grpc-gateway/protoc-gen-swagger
    Name: run
    PrependShell: true
  - Env:
    - Key: PROJECT_PATH
      Value: ${PROJECT_PATH:-$GOPATH/src/github.com/YotpoLtd/docker-grpc}
    Name: env
  - CmdLine:
    - mkdir -p $PROJECT_PATH
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PROJECT_PATH
  - Chown: ""
    Name: add
    SourcesAndDest:
    - GoogleApis.make
    - $PROJECT_PATH
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Makefile.inc
    - $PROJECT_PATH
  - CmdLine:
    - make -f GoogleApis.make
    Name: run
    PrependShell: true
  From:
    Image: golang:1.6
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.6
