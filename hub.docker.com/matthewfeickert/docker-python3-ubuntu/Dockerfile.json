{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Maintainer": "Matthew Feickert \u003cmatthewfeickert@users.noreply.github.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Key": "PYTHON_VERSION_TAG",
          "Name": "arg",
          "Value": "3.8.0"
        },
        {
          "Key": "LINK_PYTHON_TO_PYTHON3",
          "Name": "arg",
          "Value": "1"
        },
        {
          "CmdLine": [
            "apt-get -qq -y update \u0026\u0026     apt-get -qq -y upgrade \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -qq -y install         gcc         g++         zlibc         zlib1g-dev         libssl-dev         libbz2-dev         libsqlite3-dev         libncurses5-dev         libgdbm-dev         libgdbm-compat-dev         liblzma-dev         libreadline-dev         uuid-dev         libffi-dev         tk-dev         wget         curl         git         make         sudo         bash-completion         tree         vim         software-properties-common \u0026\u0026     mv /usr/bin/lsb_release /usr/bin/lsb_release.bak \u0026\u0026     apt-get -y autoclean \u0026\u0026     apt-get -y autoremove \u0026\u0026     rm -rf /var/lib/apt-get/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install_python.sh",
            "install_python.sh"
          ]
        },
        {
          "CmdLine": [
            "bash install_python.sh ${PYTHON_VERSION_TAG} ${LINK_PYTHON_TO_PYTHON3} \u0026\u0026     rm -r install_python.sh Python-${PYTHON_VERSION_TAG}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export SED_RANGE=\"$(($(sed -n '\\|enable bash completion in interactive shells|=' /etc/bash.bashrc)+1)),$(($(sed -n '\\|enable bash completion in interactive shells|=' /etc/bash.bashrc)+7))\" \u0026\u0026     sed -i -e \"${SED_RANGE}\"' s/^#//' /etc/bash.bashrc \u0026\u0026     unset SED_RANGE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m docker \u0026\u0026     usermod -aG sudo docker \u0026\u0026     echo '%sudo ALL=(ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers \u0026\u0026     cp /root/.bashrc /home/docker/ \u0026\u0026     mkdir /home/docker/data \u0026\u0026     chown -R --from=root docker /home/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/docker/data"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/docker/.local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "touch $HOME/.sudo_as_admin_successful"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}