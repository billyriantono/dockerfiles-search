MetaArgs: null
Stages:
- BaseName: frolvlad/alpine-glibc
  Commands:
  - Maintainer: Laurent Morel <hello@lmorel3.fr>
    Name: maintainer
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/opt/calibre/lib
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/opt/calibre/bin
    Name: env
  - Env:
    - Key: CALIBRE_INSTALLER_SOURCE_CODE_URL
      Value: https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - mkdir /library && mkdir /incoming
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/xvfb-run
    - /bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/test.mobi
    - /tmp/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/update-library.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/entrypoint.sh
    - /
  - CmdLine:
    - apk update &&     apk add     bash     ca-certificates     gcc     dcron     imagemagick     mesa-gl     python     qt5-qtbase-x11     wget     xdg-utils     xvfb     xz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O- ${CALIBRE_INSTALLER_SOURCE_CODE_URL} | python -c "import sys; main=lambda:sys.stderr.write('Download
      failed\n'); exec(sys.stdin.read()); main(install_dir='/opt', isolated=True)"
      &&      rm -rf /tmp/calibre-installer-cache
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/crontabs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '*  *  *  *  *    /update-library.sh' > /opt/crontabs/root
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /library
    - /incoming
  - CmdLine:
    - sh
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: frolvlad/alpine-glibc
  Name: ""
  Platform: ""
  SourceCode: FROM frolvlad/alpine-glibc
