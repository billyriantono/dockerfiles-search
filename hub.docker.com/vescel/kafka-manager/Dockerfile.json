{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "mike@cloudmo.de",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026     yum install -y git wget unzip which \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_MAJOR",
              "Value": "8"
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "92"
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "14"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nv --no-cookies --no-check-certificate     --header \"Cookie: oraclelicense=accept-securebackup-cookie\"     \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_MAJOR}u${JAVA_UPDATE}-linux-x64.rpm\" -O /tmp/jdk-${JAVA_MAJOR}u${JAVA_UPDATE}-linux-x64.rpm \u0026\u0026      yum localinstall -y /tmp/jdk-${JAVA_MAJOR}u${JAVA_UPDATE}-linux-x64.rpm \u0026\u0026      rm -f /tmp/jdk-${JAVA_MAJOR}u${JAVA_UPDATE}-linux-x64.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/java/jdk1.8.0_${JAVA_UPDATE}"
            },
            {
              "Key": "ZK_HOSTS",
              "Value": "localhost:2181"
            },
            {
              "Key": "KM_VERSION",
              "Value": "1.3.0.8"
            },
            {
              "Key": "KM_REVISION",
              "Value": "6e196ea7a332471bead747535f9676f0a2bad008"
            },
            {
              "Key": "KM_CONFIGFILE",
              "Value": "\"conf/application.conf\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp \u0026\u0026     cd /tmp \u0026\u0026     git clone https://github.com/yahoo/kafka-manager \u0026\u0026     cd /tmp/kafka-manager \u0026\u0026     git checkout ${KM_REVISION} \u0026\u0026     echo 'scalacOptions ++= Seq(\"-Xmax-classfile-name\", \"200\")' \u003e\u003e build.sbt \u0026\u0026     ./sbt clean dist \u0026\u0026     unzip  -d / ./target/universal/kafka-manager-${KM_VERSION}.zip \u0026\u0026     rm -fr /tmp/* /root/.sbt /root/.ivy2 \u0026\u0026     printf '#!/bin/sh\\nexec ./bin/kafka-manager -Dconfig.file=${KM_CONFIGFILE} \"${KM_ARGS}\" \"${@}\"\\n' \u003e /kafka-manager-${KM_VERSION}/km.sh \u0026\u0026     chmod +x /kafka-manager-${KM_VERSION}/km.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/kafka-manager \u0026\u0026     mkdir -p /opt/containerpilot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y netcat jq iproute"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONTAINERPILOT_VERSION",
              "Value": "2.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/containerpilot \u0026\u0026     curl -k -Lo /tmp/containerpilot.tar.gz https://github.com/joyent/containerpilot/releases/download/${CONTAINERPILOT_VERSION}/containerpilot-${CONTAINERPILOT_VERSION}.tar.gz \u0026\u0026     tar xzf /tmp/containerpilot.tar.gz -C /opt/containerpilot/ \u0026\u0026     rm /tmp/containerpilot.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "containerpilot.json",
            "/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "containerpilot.json",
            "/etc/containerpilot.json"
          ]
        },
        {
          "Env": [
            {
              "Key": "CONTAINERPILOT",
              "Value": "file:///etc/containerpilot.json"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONSUL_TEMPLATE_VERSION",
              "Value": "0.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONSUL_TEMPLATE_SHA1",
              "Value": "7c70ea5f230a70c809333e75fdcff2f6f1e838f29cfb872e1420a63cdf7f3a78"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --retry 7 -Lso /tmp/consul-template.zip \"https://releases.hashicorp.com/consul-template/${CONSUL_TEMPLATE_VERSION}/consul-template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip\"     \u0026\u0026 echo \"${CONSUL_TEMPLATE_SHA1}  /tmp/consul-template.zip\" | sha256sum -c     \u0026\u0026 unzip /tmp/consul-template.zip -d /usr/local/bin     \u0026\u0026 rm /tmp/consul-template.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./manage.sh",
            "/opt/kafka-manager/manage.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./default.application.conf",
            "/kafka-manager-${KM_VERSION}/conf/default.application.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zkconnect.ctmpl",
            "/opt/kafka-manager/conf/zkconnect.ctmpl"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/kafka-manager-${KM_VERSION}"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/opt/containerpilot/containerpilot",
            "/opt/kafka-manager/manage.sh",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}