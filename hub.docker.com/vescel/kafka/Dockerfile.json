{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Maintainer": "mike@cloudmo.de",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get --yes --force-yes install netcat jq net-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONSUL_TEMPLATE_VERSION",
              "Value": "0.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONSUL_TEMPLATE_SHA1",
              "Value": "7c70ea5f230a70c809333e75fdcff2f6f1e838f29cfb872e1420a63cdf7f3a78"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --retry 7 -Lso /tmp/consul-template.zip \"https://releases.hashicorp.com/consul-template/${CONSUL_TEMPLATE_VERSION}/consul-template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip\"     \u0026\u0026 echo \"${CONSUL_TEMPLATE_SHA1}  /tmp/consul-template.zip\" | sha256sum -c     \u0026\u0026 unzip /tmp/consul-template.zip -d /usr/local/bin     \u0026\u0026 rm /tmp/consul-template.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONTAINERPILOT_VERSION",
              "Value": "2.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/containerpilot \u0026\u0026     curl -k -Lo /tmp/containerpilot.tar.gz https://github.com/joyent/containerpilot/releases/download/${CONTAINERPILOT_VERSION}/containerpilot-${CONTAINERPILOT_VERSION}.tar.gz \u0026\u0026     tar xzf /tmp/containerpilot.tar.gz -C /opt/containerpilot/ \u0026\u0026     rm /tmp/containerpilot.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "containerpilot.json",
            "/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "containerpilot.json",
            "/etc/containerpilot.json"
          ]
        },
        {
          "Env": [
            {
              "Key": "CONTAINERPILOT",
              "Value": "file:///etc/containerpilot.json"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KAFKA_VERSION",
              "Value": "0.9.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "\"kafka\""
            },
            {
              "Key": "version",
              "Value": "$KAFKA_VERSION"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "wget \"http://mirror.cc.columbia.edu/pub/software/apache/kafka/$KAFKA_VERSION/kafka_2.11-$KAFKA_VERSION.tgz\" -O /tmp/kafka.tgz \u0026\u0026 mkdir -p /opt \u0026\u0026 tar -xvzf /tmp/kafka.tgz -C /opt \u0026\u0026 mv /opt/kafka_2.11-$KAFKA_VERSION /opt/kafka"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/kafka"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./default.server.properties",
            "/opt/kafka/config/default.server.properties"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./log4j.properties",
            "/opt/kafka/config/log4j.properties"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./manage.sh",
            "/opt/kafka/bin/manage.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zkconnect.ctmpl",
            "/opt/kafka/config/zkconnect.ctmpl"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9092"
          ]
        },
        {
          "CmdLine": [
            "/opt/containerpilot/containerpilot",
            "/opt/kafka/bin/manage.sh",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}