{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "webdevops/php-apache:ubuntu-16.04",
      "SourceCode": "FROM webdevops/php-apache:ubuntu-16.04",
      "Platform": "",
      "From": {
        "Image": "webdevops/php-apache:ubuntu-16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/composer/vendor/bin:$PATH"
            },
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            },
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            },
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            },
            {
              "Key": "APPLICATION_PATH",
              "Value": "\"/project\""
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $APPLICATION_PATH/public     \u0026\u0026 chown -R $APPLICATION_USER:$APPLICATION_GROUP $APPLICATION_PATH     \u0026\u0026 curl -s https://packagecloud.io/install/repositories/phalcon/stable/script.deb.sh | bash     \u0026\u0026 apt-add-repository ppa:ondrej/apache2     \u0026\u0026 LANG=C.UTF-8 apt-add-repository -y ppa:ondrej/php     \u0026\u0026 echo \"#!/bin/sh\\nexit 0\" \u003e /usr/sbin/policy-rc.d     \u0026\u0026 apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -o Dpkg::Options::=\"--force-confnew\" install -y -f --no-install-recommends         php7.0-apcu         php-apcu-bc         php7.0-dev         php7.0-dba         php7.0-gmp         php-igbinary         php7.0-imagick         php7.0-imap         php-sodium         php-memcache         php7.0-mongodb         php7.0-msgpack         php-pear         php7.0-odbc         php-phalcon         php7.0-pspell         php7.0-recode         php-ssh2         php7.0-tidy         php-yaml         lsb-release         libssh2-1-dev         libyaml-dev         libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir $COMPOSER_HOME         \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer         \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "TIMEZONE=`cat /etc/timezone`; sed -i \"s|;date.timezone =.*|date.timezone = ${TIMEZONE}|\" /etc/php/7.0/cli/php.ini     \u0026\u0026 TIMEZONE=`cat /etc/timezone`; sed -i \"s|;date.timezone =.*|date.timezone = ${TIMEZONE}|\" /etc/php/7.0/fpm/php.ini     \u0026\u0026 sed -i \"s|memory_limit =.*|memory_limit = -1|\" /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i 's|short_open_tag =.*|short_open_tag = On|' /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i 's|error_reporting =.*|error_reporting = -1|' /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i 's|display_errors =.*|display_errors = On|' /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i 's|display_startup_errors =.*|display_startup_errors = On|' /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i -re 's|^(;?)(session.save_path) =.*|\\2 = \"/tmp\"|g' /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i -re 's|^(;?)(phar.readonly) =.*|\\2 = off|g' /etc/php/7.0/cli/php.ini     \u0026\u0026 echo \"apc.enable_cli = 1\" \u003e\u003e /etc/php/7.0/mods-available/apcu.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/apt-install graphviz php-xdebug     \u0026\u0026 docker-image-cleanup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y mongodb-org-tools #mongodb-org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /lib/systemd/system/mongod.service"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias codecept='./vendor/bin/codecept'\" \u003e\u003e ~/.bashrc # Codeception alias"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"php /project/cli.php \\$@\" \u003e\u003e /bin/sirwise"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /bin/sirwise"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y     \u0026\u0026 apt-get autoclean -y     \u0026\u0026 apt-get clean -y     \u0026\u0026 rm -rf         /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /artifacts         /opt/docker/etc/php/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /etc/crontab /etc/cron.*/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '' \u003e /etc/crontab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '' \u003e /etc/cron.d/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        }
      ]
    }
  ]
}