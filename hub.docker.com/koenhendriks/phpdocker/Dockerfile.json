{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4-fpm",
      "SourceCode": "FROM php:7.4-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.4-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Koen Hendriks \u003cinfo@koenhendriks.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure locales \t\u0026\u0026 locale-gen C.UTF-8 \t\u0026\u0026 /usr/sbin/update-locale LANG=C.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'en_US.UTF-8 UTF-8' \u003e\u003e /etc/locale.gen \t\u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \t\topenssl \t\tgit \t\tgnupg2 \t\tlibzip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y libicu-dev \t\u0026\u0026 docker-php-ext-configure intl \t\u0026\u0026 docker-php-ext-install -j$(nproc) intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/apt/preferences.d/no-debian-php \u0026\u0026     apt-get update \t\u0026\u0026 apt-get install -y \tlibxml2-dev \tphp-soap \tlibxslt-dev \tlibonig-dev \t\u0026\u0026 docker-php-ext-install -j$(nproc) \t\tdom \t\txmlrpc \t\txsl \t\tsoap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibfreetype6-dev \tlibjpeg62-turbo-dev \tlibpng-dev \tlibgd-dev \t\u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \t\u0026\u0026 docker-php-ext-install -j$(nproc) \t\tgd \t\texif"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) \tmysqli \tpdo \tpdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) \tgettext \tmbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y libgmp-dev \t\u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \t\u0026\u0026 docker-php-ext-install -j$(nproc) \t\tgmp \t\tbcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibbz2-dev \tzlib1g-dev \t\u0026\u0026 docker-php-ext-install -j$(nproc) \t\tzip \t\tbz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibssl-dev \t\u0026\u0026 docker-php-ext-install -j$(nproc) \t\tftp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-2.8.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_EXT",
              "Value": "zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20190902/xdebug.so"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "alias php_xdebug=\"php -d$XDEBUG_EXT vendor/bin/phpunit\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \t\u0026\u0026 mv composer.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \t\u0026\u0026 chmod 755 phpcs.phar \t\u0026\u0026 mv phpcs.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs \t\u0026\u0026 curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \t\u0026\u0026 chmod 755 phpcbf.phar \t\u0026\u0026 mv phpcbf.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://phar.phpunit.de/phpunit.phar \t\u0026\u0026 chmod 755 phpunit.phar \t\u0026\u0026 mv phpunit.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/conf.d/docker-php.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - \t\u0026\u0026 apt-get install -y nodejs npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}