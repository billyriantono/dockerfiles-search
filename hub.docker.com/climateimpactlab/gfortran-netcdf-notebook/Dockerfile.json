{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/base-notebook:87210526f381",
      "SourceCode": "FROM jupyter/base-notebook:87210526f381",
      "Platform": "",
      "From": {
        "Image": "jupyter/base-notebook:87210526f381"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -yq --no-install-recommends   build-essential   curl   fonts-dejavu   fuse   gfortran   g++   git   gnupg   gnupg2   graphviz   keychain   libcurl4-openssl-dev   libfuse-dev   liblapack-dev   libssl-dev   locate   lsb-release   make   m4   nano   rsync   tzdata   unzip   vim   zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "gcc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FC",
              "Value": "gfortran"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PREFIXDIR",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Env": [
            {
              "Key": "ZLIB_VERSION",
              "Value": "zlib-1.2.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://zlib.net/${ZLIB_VERSION}.tar.gz \u0026\u0026 tar -xvzf ${ZLIB_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${ZLIB_VERSION}     \u0026\u0026 ./configure --prefix=${PREFIXDIR}     \u0026\u0026 make check     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf ${ZLIB_VERSION}.tar.gz ${ZLIB_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HDF518_VERSION",
              "Value": "hdf5-1.8.21"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/${HDF518_VERSION}/src/${HDF518_VERSION}.tar.gz \u0026\u0026 tar -xvzf ${HDF518_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HDF518_VERSION}     \u0026\u0026 ./configure --with-zlib=${PREFIXDIR} --prefix=${PREFIXDIR} --enable-hl     \u0026\u0026 make     \u0026\u0026 make check     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf ${HDF518_VERSION}.tar.gz ${HDF518_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HDF5110_VERSION",
              "Value": "hdf5-1.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/${HDF5110_VERSION}/src/${HDF5110_VERSION}.tar.gz \u0026\u0026 tar -xvzf ${HDF5110_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HDF5110_VERSION}     \u0026\u0026 ./configure --with-zlib=${PREFIXDIR} --prefix=${PREFIXDIR} --enable-hl --enable-shared     \u0026\u0026 make check     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf ${HDF5110_VERSION}.tar.gz ${HDF5110_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NETCDFC_VERSION",
              "Value": "4.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/Unidata/netcdf-c/archive/v${NETCDFC_VERSION}.tar.gz \u0026\u0026 tar -xvzf v${NETCDFC_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${PREFIXDIR}/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd netcdf-c-${NETCDFC_VERSION}     \u0026\u0026 CPPFLAGS=-I${PREFIXDIR}/include LDFLAGS=-L${PREFIXDIR}/lib ./configure --prefix=${PREFIXDIR} --enable-netcdf-4 --enable-shared --enable-dap     \u0026\u0026 make check     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf v${NETCDFC_VERSION}.tar.gz netcdf-c-${NETCDFC_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NETCDFFORTRAN_VERSION",
              "Value": "4.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/Unidata/netcdf-fortran/archive/v${NETCDFFORTRAN_VERSION}.tar.gz \u0026\u0026 tar -xvzf v${NETCDFFORTRAN_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd netcdf-fortran-${NETCDFFORTRAN_VERSION}     \u0026\u0026 CPPFLAGS=-I${PREFIXDIR}/include LDFLAGS=-L${PREFIXDIR}/lib ./configure --prefix=${PREFIXDIR}     \u0026\u0026 make check     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf v${NETCDFFORTRAN_VERSION}.tar.gz netcdf-fortran-${NETCDFFORTRAN_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "tini",
            "-g",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}