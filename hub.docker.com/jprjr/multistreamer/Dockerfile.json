{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Key": "S6_OVERLAY_VER",
          "Name": "arg",
          "Value": "1.21.2.2"
        },
        {
          "Key": "OPENRESTY_VER",
          "Name": "arg",
          "Value": "1.13.6.1"
        },
        {
          "Key": "NGINX_RTMP_VER",
          "Name": "arg",
          "Value": "1.2.1"
        },
        {
          "Key": "LUAROCKS_VER",
          "Name": "arg",
          "Value": "2.4.3"
        },
        {
          "Key": "MULTISTREAMER_VER",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "SOCKEXEC_VER",
          "Name": "arg",
          "Value": "2.0.3"
        },
        {
          "CmdLine": [
            "apk add --no-cache     bash     gcc     make     musl-dev     linux-headers     gd-dev     geoip-dev     libxml2-dev     libxslt-dev     libressl-dev     paxmark     pcre-dev     yaml-dev     yaml     perl-dev     pkgconf     zlib-dev     curl     git     unzip     dnsmasq     ffmpeg     lua5.1-dev     lua5.1     pcre     libressl2.6-libssl     libressl2.6-libtls     libressl2.6-libcrypto     ca-certificates     postgresql-client     zlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/openresty-build \u0026\u0026   cd /tmp/openresty-build \u0026\u0026   curl -R -L -o s6-overlay-amd64.tar.gz     https://github.com/just-containers/s6-overlay/releases/download/v$S6_OVERLAY_VER/s6-overlay-amd64.tar.gz  \u0026\u0026   curl -R -L -o sockexec-x86_64-linux-musl.tar.gz     https://github.com/jprjr/sockexec/releases/download/$SOCKEXEC_VER/sockexec-x86_64-linux-musl.tar.gz \u0026\u0026   curl -R -L -o openresty-$OPENRESTY_VER.tar.gz     https://openresty.org/download/openresty-$OPENRESTY_VER.tar.gz \u0026\u0026   curl -R -L -o nginx-rtmp-module-$NGINX_RTMP_VER.tar.gz     https://github.com/arut/nginx-rtmp-module/archive/v$NGINX_RTMP_VER.tar.gz \u0026\u0026   curl -R -L -o luarocks-$LUAROCKS_VER.tar.gz     http://luarocks.github.io/luarocks/releases/luarocks-$LUAROCKS_VER.tar.gz \u0026\u0026   tar xzf openresty-$OPENRESTY_VER.tar.gz \u0026\u0026   tar xzf nginx-rtmp-module-$NGINX_RTMP_VER.tar.gz \u0026\u0026   tar xzf luarocks-$LUAROCKS_VER.tar.gz \u0026\u0026   tar xzf s6-overlay-amd64.tar.gz -C / \u0026\u0026   tar xzf sockexec-x86_64-linux-musl.tar.gz -C /usr \u0026\u0026   cd openresty-$OPENRESTY_VER \u0026\u0026   (     ./configure       --prefix=/opt/openresty       --with-threads       --with-file-aio       --with-ipv6       --with-http_ssl_module       --with-pcre       --with-pcre-jit       --with-stream       --with-stream_ssl_module       --add-module=../nginx-rtmp-module-$NGINX_RTMP_VER \u0026\u0026     make  \u0026\u0026     make install   ) \u0026\u0026   cd /tmp/openresty-build/luarocks-$LUAROCKS_VER \u0026\u0026   ./configure     --prefix=/opt/luarocks     --with-lua-include=$(pkg-config --variable=includedir lua5.1) \u0026\u0026   make \u0026\u0026   make build \u0026\u0026   make install \u0026\u0026   cd / \u0026\u0026   rm -rf /tmp/openresty-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/htpasswd-auth-server \u0026\u0026   mkdir /etc/redis-auth-server \u0026\u0026   adduser -h /home/redisauth -g redisauth -s /sbin/nologin -S -D redisauth \u0026\u0026   cd /home/redisauth \u0026\u0026   curl -R -L -o redis-auth-server-master.tar.gz     https://github.com/jprjr/redis-auth-server/archive/master.tar.gz \u0026\u0026   tar xzf redis-auth-server-master.tar.gz \u0026\u0026   mv redis-auth-server-master/* . \u0026\u0026   rm -rf redis-auth-server-master \u0026\u0026   chown -R redisauth:nogroup . \u0026\u0026   ln -sf /home/multistreamer/lua_modules ./lua_modules \u0026\u0026   rm -rf ./etc \u0026\u0026   ln -sf /etc/redis-auth-server ./etc \u0026\u0026   adduser -h /home/htpasswdauth -g htpasswdauth -s /sbin/nologin -S -D htpasswdauth \u0026\u0026   cd /home/htpasswdauth \u0026\u0026   curl -R -L -o htpasswd-auth-server-master.tar.gz     https://github.com/jprjr/htpasswd-auth-server/archive/master.tar.gz \u0026\u0026   tar xzf htpasswd-auth-server-master.tar.gz \u0026\u0026   mv htpasswd-auth-server-master/* . \u0026\u0026   rm -rf htpasswd-auth-server-master \u0026\u0026   chown -R htpasswdauth:nogroup . \u0026\u0026   ln -sf /home/multistreamer/lua_modules ./lua_modules \u0026\u0026   rm -rf ./etc \u0026\u0026   ln -sf /etc/htpasswd-auth-server ./etc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -h /home/multistreamer -g multistreamer -s /sbin/nologin -S -D multistreamer \u0026\u0026   cd /home/multistreamer \u0026\u0026   rm -rf ./* \u0026\u0026   git clone https://github.com/jprjr/multistreamer.git . \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install lua-resty-exec \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install lua-resty-jit-uuid \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install lua-resty-http \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install lapis \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install etlua \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install luaposix \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install luafilesystem \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install whereami \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install luacrypto \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install lyaml \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install redis-lua \u0026\u0026   /opt/luarocks/bin/luarocks --tree lua_modules install md5 \u0026\u0026   chown -R multistreamer:nogroup . \u0026\u0026   mkdir /etc/multistreamer \u0026\u0026   mkdir -p /var/log/multistreamer \u0026\u0026   chown nobody:nogroup /var/log/multistreamer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "S6_BEHAVIOUR_IF_STAGE2_FAILS",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "1935",
            "6667",
            "8081"
          ]
        }
      ]
    }
  ]
}