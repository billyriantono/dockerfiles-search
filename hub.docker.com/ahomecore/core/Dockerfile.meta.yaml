MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Name: workdir
    Path: /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build_context/
    - .
  - CmdLine:
    - "yum install epel-release -y &&     yum update -y &&     yum install -y gcc
      make gcc-c++ \t\t\t\t   screen \t\t\t\t   openssh-clients \t\t\t\t   git \t\t\t\t
      \  python36-pip.noarch \t\t\t\t   python36-devel \t\t\t\t   postgresql-contrib
      \t\t\t\t   postgresql-devel \t\t\t\t   python-devel \t\t\t\t   python-pip \t\t\t\t
      \  python-psutil \t\t\t\t   python-psycopg2 \t\t\t\t   python-setuptools \t\t\t\t
      \  python36-devel \t\t\t\t   python36-setuptools \t\t\t\t   rsync \t\t\t\t   setools-libs
      \t\t\t\t   vim \t\t\t\t   openssh \t\t\t\t   openssh-clients \t\t\t\t   bash-completion-extras
      \t\t\t\t   python36-psutil \t\t\t\t   libvirt-devel \t\t\t\t   curl \t\t\t\t
      \  curl-devel \t\t\t\t   libxml2-devel \t\t\t\t   krb5-devel \t\t\t\t   bubblewrap
      \t\t\t\t   nginx \t\t\t\t   && \tmkdir -p /venv && chmod g+w /venv && \t\tpip3
      install virtualenv flake8 && \t\tpython3 -m venv --system-site-packages /venv/ansible
      && \t\t/venv/ansible/bin/pip3 install --ignore-installed -r requirements.txt
      && \t\t/venv/ansible/bin/pip3 install django-webpack-loader && \t\t/venv/ansible/bin/pip3
      install django_compressor && \t\t/venv/ansible/bin/pip3 install supervisor Twisted[http2,tls]"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /ahome_devel
  - CmdLine:
    - curl -sL https://rpm.nodesource.com/setup_12.x | bash - &&     yum install -y
      nodejs &&     npm i -g @angular/cli
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y https://github.com/krallin/tini/releases/download/v0.18.0/tini_0.18.0.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/ssh-keygen -q -t rsa -N "" -f /root/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -c -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: workdir
    Path: /ahome_devel
  - CmdLine:
    - for file in   /etc/nginx/nginx.conf /etc/nginx/conf.d/nginx.vh.default.conf
      /etc/supervisord.conf;   do rm -fr $file; done
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sF /ahome_devel/tools/nginx.conf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sF /ahome_devel/tools/nginx.vh.default.conf /etc/nginx/conf.d/nginx.vh.default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sF /ahome_devel/tools/supervisord-sergii.conf /etc/supervisord.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - for dir in  /var/log/nginx /var/lib/nginx /.local;   do mkdir -p $dir; chmod
      -R g+rwx $dir; chgrp -R root $dir; done
    Name: run
    PrependShell: true
  - CmdLine:
    - for file in   /ahome_devel/ahome.log /var/run/nginx.pid;   do touch $file; chmod
      -R g+rwx $file; chgrp -R root $file; done
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /azure.pem >> /venv/ansible/lib/python3.6/site-packages/certifi/cacert.pem
      &&     rm /azure.pem
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5000"
    - "8000"
    - "8001"
    - "8043"
    - "8443"
  - Name: volume
    Volumes:
    - /ahome_devel
  - Name: workdir
    Path: /ahome_devel
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
