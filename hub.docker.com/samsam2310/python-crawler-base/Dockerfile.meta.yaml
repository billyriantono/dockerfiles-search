MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: yvictor
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update --fix-missing && apt-get install -y curl git make bzip2
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: /root/.pyenv
    Name: env
  - Env:
    - Key: PATH
      Value: /root/.pyenv/shims:/root/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv install miniconda2-4.1.11
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global miniconda2-4.1.11
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq install --yes build-essential libevent-dev libssl-dev curl g++
    Name: run
    PrependShell: true
  - Env:
    - Key: TOR_VERSION
      Value: 0.2.9.14
    Name: env
  - CmdLine:
    - curl -0 -L https://dist.torproject.org/tor-${TOR_VERSION}.tar.gz | tar xz -C
      /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/tor-${TOR_VERSION} && ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/tor-${TOR_VERSION} && make -j 4
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/tor-${TOR_VERSION} && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: DELEGATE_VERSION
      Value: 9.9.13
    Name: env
  - CmdLine:
    - curl ftp://anonymous@ftp.delegate.org/pub/DeleGate/delegate${DELEGATE_VERSION}.tar.gz
      | tar xz -C /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ADMIN=root@root.com" > /tmp/delegate${DELEGATE_VERSION}/src/DELEGATE_CONF
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e '1i#include <util.h>\' /tmp/delegate${DELEGATE_VERSION}/maker/_-forkpty.c
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/delegate${DELEGATE_VERSION} && make
    Name: run
    PrependShell: true
  - Env:
    - Key: HAPROXY_VERSION
      Value: 1.6.8
    Name: env
  - CmdLine:
    - curl -0 -L http://haproxy.1wt.eu/download/1.6/src/haproxy-${HAPROXY_VERSION}.tar.gz
      | tar xz -C /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/haproxy-${HAPROXY_VERSION}/ && make TARGET=linux2628 USE_OPENSSL=1 USE_ZLIB=1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/haproxy-${HAPROXY_VERSION}/ && make install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./haproxy.conf
    - /etc/default/haproxy.conf
  - CmdLine:
    - mkdir -p /var/db/tor/1 /var/db/tor/2 /var/db/tor/3 /var/db/tor/4 /var/db/tor/5
      /var/db/tor/6 /var/db/tor/7 /var/db/tor/8 /var/db/tor/9 /var/db/tor/10
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 700 /var/db/tor
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./torrc
    - /usr/local/etc/tor/torrc
  - Name: expose
    Ports:
    - "2090"
    - "53"
    - "9100"
    - "9101"
  - CmdLine:
    - apt-get install -y curl grep sed dpkg git xvfb firefox &&     TINI_VERSION=`curl
      https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'`
      &&     curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb"
      > tini.deb &&     dpkg -i tini.deb &&     rm tini.deb &&     apt-get clean
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/mozilla/geckodriver/releases/download/v0.12.0/geckodriver-v0.12.0-linux64.tar.gz
    - /usr/local/bin/
  - Name: workdir
    Path: /usr/local/bin/
  - CmdLine:
    - tar -xvf geckodriver-v0.12.0-linux64.tar.gz &&     rm geckodriver-v0.12.0-linux64.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home
  - CmdLine:
    - conda install -c anaconda beautifulsoup4 lxml=3.7.0 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install selenium beautifulsoup4 xvfbwrapper PyVirtualDisplay requests pyquery
      pymongo python-amazon-mws celery raven
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /docker-crawlerbase
  - Name: workdir
    Path: /docker-crawlerbase
  - CmdLine:
    - /bin/bash /start.sh & python test.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home
  - CmdLine:
    - /start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
