MetaArgs: null
Stages:
- BaseName: php:7.3.8-fpm-alpine3.10
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: Chan Kuan Leang <chankl78@gmail.com>
    Name: label
  - CmdLine:
    - "apk update \t&& apk add libmcrypt-dev \t&& apk add libxml2-dev \t&& apk add
      libsodium \t&& docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer
      xml \t&& rm /var/cache/apk/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk --update add wget   \tcurl   \tgit   \tnano \tnodejs-npm \tyarn    \tlibmcrypt-dev
      \  \tlibxml2-dev   \tlibpng-dev   \tzlib-dev   supervisor"
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.17.2
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 0.3.3
    Name: env
  - Env:
    - Key: PKG_RELEASE
      Value: "1"
    Name: env
  - CmdLine:
    - "set -x \t&& addgroup -g 101 -S nginx \t&& adduser -S -D -H -u 101 -h /var/cache/nginx
      -s /sbin/nologin -G nginx -g nginx nginx \t&& apkArch=\"$(cat /etc/apk/arch)\"
      \t&& nginxPackages=\" \tnginx=${NGINX_VERSION}-r${PKG_RELEASE} \tnginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}
      \tnginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE} \tnginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}
      \tnginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE} \t\" \t&&
      case \"$apkArch\" in \tx86_64) \tset -x \t&& KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a
      *stdin\" \t&& apk add --no-cache --virtual .cert-deps \topenssl \t&& wget -O
      /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub \t&&
      if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl
      sha512 -r)\" = \"$KEY_SHA512\" ]; then \techo \"key verification succeeded!\";
      \tmv /tmp/nginx_signing.rsa.pub /etc/apk/keys/; \telse \techo \"key verification
      failed!\"; \texit 1; \tfi \t&& printf \"%s%s%s\\n\" \t\"https://nginx.org/packages/mainline/alpine/v\"
      \t`egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release` \t\"/main\" \t| tee -a /etc/apk/repositories
      \t&& apk del .cert-deps \t;; \t*) \tset -x \t&& tempDir=\"$(mktemp -d)\" \t&&
      chown nobody:nobody $tempDir \t&& apk add --no-cache --virtual .build-deps \tgcc
      \tlibc-dev \tmake \topenssl-dev \tpcre-dev \tzlib-dev \tlinux-headers \tlibxslt-dev
      \tgd-dev \tgeoip-dev \tperl-dev \tlibedit-dev \tmercurial \tbash \talpine-sdk
      \tfindutils \t&& su nobody -s /bin/sh -c \" \texport HOME=${tempDir} \t&& cd
      ${tempDir} \t&& hg clone https://hg.nginx.org/pkg-oss \t&& cd pkg-oss \t&& hg
      up ${NGINX_VERSION}-${PKG_RELEASE} \t&& cd alpine \t&& make all \t&& apk index
      -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk
      \t&& abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz
      \t\" \t&& echo \"${tempDir}/packages/alpine/\" >> /etc/apk/repositories \t&&
      cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ \t&& apk del .build-deps
      \t;; \tesac \t&& apk add --no-cache $nginxPackages \t&& if [ -n \"$tempDir\"
      ]; then rm -rf \"$tempDir\"; fi \t&& if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\"
      ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi \t&& if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\"
      ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi \t&& sed -i '$ d' /etc/apk/repositories
      \t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \tscanelf --needed --nobanner /tmp/envsubst \t| awk
      '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t| sort -u \t| xargs -r apk
      info --installed \t| sort -u \t)\" \t&& apk add --no-cache $runDeps \t&& apk
      del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t&& apk add --no-cache tzdata
      \t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.9.0
    Name: env
  - CmdLine:
    - "apk add --update curl openssl && \tcurl -sS https://getcomposer.org/installer
      | php -- --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION}
      && \tchmod +x /usr/local/bin/composer && \tapk del curl openssl"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /var/cache/apk/* &&     mkdir -p /var/www
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini-production
    - /usr/local/etc/php/php.ini-production
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_laravel.sh
    - /var/init_laravel.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_laravellumen.sh
    - /var/init_laravellumen.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_laravel_quasar.sh
    - /var/init_laravel_quasar.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_laravel_quasar_setup.sh
    - /var/init_laravel_quasar_setup.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_laravel_quasar.sh
    - /var/init_laravel_1stinstall_framework7.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_laravel_cleartemplate.sh
    - /var/init_laravel_cleartemplate.sh
  - CmdLine:
    - chmod +x /var/init_laravel.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /var/init_laravellumen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /var/init_laravel_quasar.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /var/init_laravel_quasar_setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /var/init_laravel_1stinstall_framework7.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /var/init_laravel_cleartemplate.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/supervisord
    - -n
    - -c
    - /etc/supervisord.conf
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.3.8-fpm-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3.8-fpm-alpine3.10
