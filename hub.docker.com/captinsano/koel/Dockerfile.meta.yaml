MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: Etopian Inc. <contact@etopian.com>
    Name: maintainer
  - Labels:
    - Key: devoply.type
      Value: '"site"'
    - Key: devoply.cms
      Value: '"koel"'
    - Key: devoply.framework
      Value: '"laravel"'
    - Key: devoply.language
      Value: '"php"'
    - Key: devoply.require
      Value: '"mariadb etopian/nginx-proxy"'
    - Key: devoply.description
      Value: '"Koel music player."'
    - Key: devoply.name
      Value: '"Koel"'
    - Key: devoply.params
      Value: '"docker run -d --name {container_name} -e VIRTUAL_HOST={virtual_hosts}
        -v /data/sites/{domain_name}:/DATA etopian/docker-koel"'
    Name: label
  - CmdLine:
    - apk update     && apk add bash less vim nginx ca-certificates nodejs     php5-fpm
      php5-json php5-zlib php5-xml php5-pdo php5-phar php5-openssl     php5-pdo_mysql
      php5-mysqli     php5-gd php5-iconv php5-mcrypt     php5-mysql php5-curl php5-opcache
      php5-ctype php5-apcu     php5-intl php5-bcmath php5-dom php5-xmlreader php5-xsl
      php5-exif mysql-client     git build-base python     ffmpeg inotify-tools sudo
      curl     && apk add -u musl
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: '"xterm"'
    - Key: DB_HOST
      Value: '""'
    - Key: DB_DATABASE
      Value: '""'
    - Key: DB_USERNAME
      Value: '""'
    - Key: DB_PASSWORD
      Value: '""'
    - Key: ADMIN_EMAIL
      Value: '""'
    - Key: ADMIN_NAME
      Value: '""'
    - Key: ADMIN_PASSWORD
      Value: '""'
    - Key: APP_DEBUG
      Value: "false"
    - Key: AP_ENV
      Value: production
    Name: env
  - Name: volume
    Volumes:
    - /DATA/music
  - CmdLine:
    - sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php5/php.ini && sed
      -i 's/nginx:x:100:101:nginx:\/var\/lib\/nginx:\/sbin\/nologin/nginx:x:100:101:Linux
      User,,,:\/DATA:\/bin\/bash/g' /etc/passwd && sed -i 's/nginx:x:100:101:nginx:\/var\/lib\/nginx:\/sbin\/nologin/nginx:x:100:101:Linux
      User,,,:\/DATA:\/bin\/bash/g' /etc/passwd-
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/nginx.conf
    - /etc/nginx/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/php-fpm.conf
    - /etc/php/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/php.ini
    - /etc/php5/php.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/run.sh
    - /
  - CmdLine:
    - chmod +x /run.sh && chown -R nginx:nginx /DATA
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - su nginx -c "git clone  https://github.com/phanan/koel /DATA/htdocs &&    cd
      /DATA/htdocs &&     npm install &&     composer config github-oauth.github.com
      fa708ce99572d8dc2e28b6f5ef8f12f229751dc4 &&    composer install"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del --purge git build-base python nodejs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/.env
    - /DATA/htdocs/.env
  - CmdLine:
    - chown nginx:nginx /DATA/htdocs/.env
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
