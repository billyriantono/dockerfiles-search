MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Dmitry Sobolev <ds@napoleonit.ru>"'
    Name: label
  - CmdLine:
    - addgroup -S alerta && adduser -S -G alerta alerta
    Name: run
    PrependShell: true
  - Key: APP_ROOT
    Name: arg
    Value: /opt/app
  - CmdLine:
    - set -ex;     apk add --no-cache --virtual .run-deps     bash     nginx     python     git     py-pip     py-setuptools     uwsgi-python     supervisor     openssl;   apk
      add --no-cache --virtual .build-dep     musl-dev     gcc     make     libffi-dev     python-dev;   pip
      install --no-cache-dir alerta-server alerta;     apk del .build-dep && rm -rf
      /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;     apk add --no-cache --virtual .fetch-deps     ca-certificates;   wget
      -q -O - https://github.com/alerta/angular-alerta-webui/tarball/master | tar
      zxf -;     mkdir -p $APP_ROOT;   mv alerta-angular-alerta-webui-*/app /opt;   rm
      -Rf /alerta-angular-alerta-webui-*;   mv $APP_ROOT/config.js $APP_ROOT/config.js.orig;     apk
      del .fetch-deps && rm -rf /var/cache/apk/*;
    Name: run
    PrependShell: true
  - Env:
    - Key: ALERTA_SVR_CONF_FILE
      Value: '"/etc/alerta/alertad.conf"'
    Name: env
  - Env:
    - Key: ALERTA_WEB_CONF_FILE
      Value: '"$APP_ROOT/config.js"'
    Name: env
  - Env:
    - Key: ALERTA_CONF_FILE
      Value: '"/etc/alerta/alerta.conf"'
    Name: env
  - Env:
    - Key: BASE_URL
      Value: '"/api"'
    Name: env
  - Env:
    - Key: AUTH_PROVIDER
      Value: '"basic"'
    Name: env
  - Env:
    - Key: OAUTH2_CLIENT_ID
      Value: '""'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/uwsgi.ini
    - /etc/alerta/uwsgi.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/web_config.js
    - $APP_ROOT/config.js.source
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/nginx.conf
    - /etc/nginx/nginx.conf.source
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/supervisor.d/*
    - /etc/supervisor.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - /usr/local/bin/
  - CmdLine:
    - set -ex;     mkdir -p /etc/alerta;   echo "from alerta.app import app" > /etc/alerta/wsgi.py;   chmod
      +x /usr/local/bin/docker-entrypoint.sh;   chmod +x /usr/local/bin/alerta_key.py;   chmod
      +x /usr/local/bin/housekeeping_alerts.py;   chmod +x /usr/local/bin/supervisor_killer
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
