MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.11.2
  Commands:
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go.mod
    - go.sum
    - ./
  - CmdLine:
    - go get -u github.com/gobuffalo/packr/packr
    Name: run
    PrependShell: true
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - CGO_ENABLED=1 GOOS=linux packr build -o /aloud .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.2
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.11.2 AS builder
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - apk --update upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add sqlite
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Labels:
    - Key: maintainer
      Value: '"spencer@spencercharest.com"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Aloud"'
    Name: label
  - Env:
    - Key: ALOUD_DOCKER
      Value: "true"
    Name: env
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /input
  - Name: expose
    Ports:
    - "4220"
  - CmdLine:
    - apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /aloud
    - ./
  - CmdLine:
    - /aloud
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
