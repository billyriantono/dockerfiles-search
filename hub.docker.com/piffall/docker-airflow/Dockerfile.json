{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Crist√≤fol Torrens \"piffall@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "AIRFLOW_BRANCH",
          "Name": "arg",
          "Value": "\"@master\""
        },
        {
          "Key": "AIRFLOW_HOME",
          "Name": "arg",
          "Value": "/usr/local/airflow"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_MESSAGES",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y apt-utils     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y         libkrb5-dev         libsasl2-dev         libssl-dev         libffi-dev         libblas-dev         liblapack-dev         libpq-dev         libmysqlclient-dev         libsasl2-dev         libldap2-dev         libffi-dev         libssl-dev         python-dev         build-essential         apt-utils         git         libkrb5-dev         python-pip         python-requests         apt-utils         curl         rsync         netcat         locales         python-mysqldb         software-properties-common     \u0026\u0026 sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen     \u0026\u0026 locale-gen     \u0026\u0026 update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8     \u0026\u0026 useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:deadsnakes/ppa -y     \u0026\u0026 apt-get update -y     \u0026\u0026 apt-get install -y         python3.6         python3.6-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip setuptools wheel --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip setuptools wheel --upgrade     \u0026\u0026 pip install virtualenv     \u0026\u0026 pip install Cython     \u0026\u0026 pip install pytz     \u0026\u0026 pip install pyOpenSSL     \u0026\u0026 pip install ndg-httpsclient     \u0026\u0026 pip install pyasn1     \u0026\u0026 pip install pyasn1-modules     \u0026\u0026 pip install pycrypto     \u0026\u0026 pip install git+https://github.com/piffall/incubator-airflow${AIRFLOW_BRANCH}#egg=apache-airflow[all]     \u0026\u0026 pip install kubernetes     \u0026\u0026 pip install google-api-python-client     \u0026\u0026 pip install celery[redis]==4.0.2     \u0026\u0026 apt-get purge --auto-remove -yqq $buildDeps     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf         /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /usr/share/man         /usr/share/doc         /usr/share/doc-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "script/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/airflow.cfg",
            "${AIRFLOW_HOME}/airflow.cfg"
          ]
        },
        {
          "CmdLine": [
            "chown -R airflow: ${AIRFLOW_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5555",
            "8080",
            "8793"
          ]
        },
        {
          "Name": "user",
          "User": "airflow"
        },
        {
          "Name": "workdir",
          "Path": "${AIRFLOW_HOME}"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}