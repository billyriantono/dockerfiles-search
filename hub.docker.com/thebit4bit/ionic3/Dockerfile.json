{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     dpkg-reconfigure --frontend=noninteractive locales \u0026\u0026     update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026      apt-get install -y wget git unzip curl ruby ruby-dev build-essential \u0026\u0026     curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     apt-get update \u0026\u0026      apt-get install -y nodejs \u0026\u0026     npm install -g yarn@\"1.3.2\" \u0026\u0026     npm cache clear --force \u0026\u0026     wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \u0026\u0026     dpkg --unpack google-chrome-stable_current_amd64.deb \u0026\u0026     apt-get install -f -y \u0026\u0026     apt-get clean \u0026\u0026     rm google-chrome-stable_current_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common -y \u0026\u0026     curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\" \u0026\u0026     apt-get update \u0026\u0026     apt-get install docker-ce -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler -v '1.16.1' \u0026\u0026     gem install fastlane -NV \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y -q python-software-properties software-properties-common  \u0026\u0026     add-apt-repository \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" -y \u0026\u0026     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get update \u0026\u0026 apt-get -y install oracle-java8-installer \u0026\u0026     echo ANDROID_HOME=\"${ANDROID_HOME}\" \u003e\u003e /etc/environment \u0026\u0026     dpkg --add-architecture i386 \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --force-yes expect ant wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     mkdir  /opt/android-sdk-linux \u0026\u0026 cd /opt/android-sdk-linux \u0026\u0026     wget --output-document=android-tools-sdk.zip --quiet https://dl.google.com/android/repository/tools_r25.2.3-linux.zip \u0026\u0026     unzip -q android-tools-sdk.zip \u0026\u0026     rm -f android-tools-sdk.zip \u0026\u0026     chown -R root. /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yes Y | ${ANDROID_HOME}/tools/bin/sdkmanager \"build-tools;26.0.2\" \"platforms;android-26\" \"platform-tools\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://services.gradle.org/distributions/gradle-4.1-bin.zip \u0026\u0026     mkdir /opt/gradle \u0026\u0026     unzip -d /opt/gradle gradle-4.1-bin.zip \u0026\u0026     export PATH=$PATH:/opt/gradle/gradle-4.1/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle/gradle-4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install git devscripts debhelper build-essential dh-make -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/spotify/docker-gc.git /root/docker-gc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/docker-gc \u0026\u0026 debuild -us -uc -b"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg -i /root/docker-gc_0.1.0_all.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "Sources"
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "8100"
          ]
        },
        {
          "CmdLine": [
            "ionic",
            "serve"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}