{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:latest",
      "SourceCode": "FROM debian:latest",
      "Platform": "",
      "From": {
        "Image": "debian:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   openssh-client   openmpi-bin   libopenmpi-dev   fftw3   cmake   wget   curl   build-essential   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   wget ftp://ftp.gromacs.org/pub/gromacs/gromacs-5.1.4.tar.gz \u0026\u0026   tar xzf gromacs-5.1.4.tar.gz \u0026\u0026   cd gromacs-5.1.4 \u0026\u0026   mkdir build \u0026\u0026   cd build \u0026\u0026   cmake           -DCMAKE_INSTALL_PREFIX=/benchmarks/gromacs/           -DBUILD_SHARED_LIBS=off           -DBUILD_TESTING=off           -DREGRESSIONTEST_DOWNLOAD=OFF           -DCMAKE_C_COMPILER=`which mpicc`           -DCMAKE_CXX_COMPILER=`which mpicxx`           -DGMX_BUILD_OWN_FFTW=on           -DGMX_SIMD=AVX_256           -DGMX_DOUBLE=off           -DGMX_EXTERNAL_BLAS=off           -DGMX_EXTERNAL_LAPACK=off           -DGMX_FFT_LIBRARY=fftw3           -DGMX_GPU=off           -DGMX_MPI=on           -DGMX_OPENMP=on           -DGMX_X11=off           .. \u0026\u0026   make -j 4 \u0026\u0026   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /benchmarks/gromacs-datas \u0026\u0026   cd /tmp \u0026\u0026   wget http://www.prace-ri.eu/UEABS/GROMACS/1.2/GROMACS_TestCaseA.tar.gz \u0026\u0026   tar xzf GROMACS_TestCaseA.tar.gz \u0026\u0026   cp ion_channel.tpr /benchmarks/gromacs-datas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   r-base   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install_scripts",
            "/tmp/install_scripts"
          ]
        },
        {
          "CmdLine": [
            "R CMD BATCH /tmp/install_scripts/install_rpackages.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   python3-pip   python3-yaml   moreutils   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U   psutil   pytest   pygal   pygal.js   pytest-benchmark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "benchmarks/benchmarks.py",
            "/benchmarks"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "benchmarks/R_GFA.R",
            "/benchmarks"
          ]
        },
        {
          "CmdLine": [
            "mkdir /results"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown 1001:1001 /benchmarks /results"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --home /benchmarks --uid 1001 --shell /bin/bash --disabled-password --gecos '' benchmark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "benchmark"
        },
        {
          "Name": "workdir",
          "Path": "/benchmarks"
        },
        {
          "CmdLine": [
            "savename=$(hostname)-$(date \"+%0d-%0m-%Y_%H-%M-%S\") \u0026\u0026   cd /results \u0026\u0026   if [ ! -e parameters.yml ] ; then   wget https://raw.githubusercontent.com/AaltoScienceIT/docker-fgci-benchmark/master/benchmarks/parameters.yml ;   fi \u0026\u0026   if [ ! -e reference.json ] ; then   wget https://raw.githubusercontent.com/AaltoScienceIT/docker-fgci-benchmark/master/benchmarks/reference.json ;   fi \u0026\u0026   pytest /benchmarks/benchmarks.py --benchmark-storage=/results   --benchmark-save=$savename   --benchmark-histogram=/results/histograms/$savename   --benchmark-compare=/results/reference.json"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}