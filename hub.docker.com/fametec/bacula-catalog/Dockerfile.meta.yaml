MetaArgs: null
Stages:
- As: base
  BaseName: fametec/bacula-base
  Commands: null
  From:
    Image: fametec/bacula-base
  Name: base
  Platform: ""
  SourceCode: FROM fametec/bacula-base AS base
- BaseName: postgres:9.4
  Commands:
  - Maintainer: eduardo@fametec.com.br
    Name: maintainer
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: bacula
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: bacula
    Name: env
  - Env:
    - Key: POSTGRES_DB
      Value: bacula
    Name: env
  - Env:
    - Key: POSTGRES_INITDB_ARGS
      Value: '''--encoding=SQL_ASCII --lc-collate=C --lc-ctype=C'''
    Name: env
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /opt/bacula/scripts/make_postgresql_tables
    - /docker-entrypoint-initdb.d/make_postgresql_tables
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /opt/bacula/scripts/grant_postgresql_privileges
    - /docker-entrypoint-initdb.d/grant_postgresql_privileges
  - CmdLine:
    - "{ \techo '#!/bin/bash'; \techo 'sh /docker-entrypoint-initdb.d/make_postgresql_tables
      --username=$POSTGRES_USER'; \techo 'sh /docker-entrypoint-initdb.d/grant_postgresql_privileges
      --username=$POSTGRES_USER'; } >> /docker-entrypoint-initdb.d/deploy_database.sh
      && chmod +x /docker-entrypoint-initdb.d/deploy_database.sh && chown postgres.
      /docker-entrypoint-initdb.d/deploy_database.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R postgres. /docker-entrypoint-initdb.d/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - Name: expose
    Ports:
    - 5432/tcp
  From:
    Image: postgres:9.4
  Name: ""
  Platform: ""
  SourceCode: FROM postgres:9.4
