{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8u232-jdk",
      "SourceCode": "FROM openjdk:8u232-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8u232-jdk"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install git curl libssl-dev libreadline-dev zlib1g-dev autoconf bison build-essential libyaml-dev libreadline-dev libncurses5-dev libffi-dev libgdbm-dev -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash -; exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.rbenv/shims:/root/.rbenv/bin:/root/.rbenv/plugins/ruby-build/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rbenv install 2.5.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rbenv global 2.5.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install jekyll jekyll-redirect-from rouge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install build-essential checkinstall libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/Python-3.7.1.tgz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /tmp/Python-3.7.1.tgz \u0026\u0026 tar -xzf /tmp/Python-3.7.1.tgz -C /tmp/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/Python-3.7.1 \u0026\u0026 ./configure --enable-optimizations \u0026\u0026 make altinstall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.7 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/python python /usr/local/bin/python3.7 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/pydoc pydoc /usr/local/bin/pydoc3.7 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 pip install sphinx pypandoc mkdocs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install r-base libcurl4-openssl-dev libxml2-dev -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'install.packages(c(\"knitr\", \"devtools\", \"rmarkdown\", \"e1071\"), repos=\"https://cloud.r-project.org/\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'devtools::install_version(\"roxygen2\", version = \"5.0.1\", repos=\"https://cloud.r-project.org/\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'devtools::install_version(\"testthat\", version = \"1.0.2\", repos=\"https://cloud.r-project.org/\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra qpdf -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/spark-2.4.4.tgz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /spark/ \u0026\u0026 mkdir /spark/out/ \u0026\u0026 mkdir /spark/custom-jars/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /tmp/spark-2.4.4.tgz \u0026\u0026 tar -xzf /tmp/spark-2.4.4.tgz -C /spark/ \u0026\u0026 rm /tmp/spark-2.4.4.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /spark/spark-2.4.4/resource-managers/kubernetes/docker/src/main/dockerfiles/spark/bindings/python/Dockerfile \u0026\u0026 rm /spark/spark-2.4.4/resource-managers/kubernetes/docker/src/main/dockerfiles/spark/bindings/R/Dockerfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/dockerfiles/python/Dockerfile",
            "/spark/spark-2.4.4/resource-managers/kubernetes/docker/src/main/dockerfiles/spark/bindings/python/Dockerfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/dockerfiles/R/Dockerfile",
            "/spark/spark-2.4.4/resource-managers/kubernetes/docker/src/main/dockerfiles/spark/bindings/R/Dockerfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./custom-jars/",
            "/spark/custom-jars/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/spark/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/build-distrib.sh",
            "/spark/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /spark/build-distrib.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}