MetaArgs: null
Stages:
- BaseName: 511200753148.dkr.ecr.eu-west-1.amazonaws.com/oracle-jdk7-amazonlinux
  Commands:
  - Env:
    - Key: CATALINA_HOME
      Value: /usr/local/tomcat
    - Key: CATALINA_CUSTOM_OPTS
      Value: ''''''
    Name: env
  - Env:
    - Key: PATH
      Value: $CATALINA_HOME/bin:$PATH
    - Key: SSL_HOME
      Value: $CATALINA_HOME/ssl
    - Key: SECRETS_BUCKET_NAME
      Value: ""
    - Key: SECRETS_BUCKET_SSL_KEY
      Value: ""
    - Key: SSL_CERTIFICATE_FILE
      Value: ""
    - Key: SSL_CERTIFICATE_KEY_FILE
      Value: ""
    - Key: SSL_CA_CERTIFICATE_KEY_FILE
      Value: ""
    - Key: SSL_CERTIFICATE_CHAIN_FILE
      Value: ""
    - Key: SSL_PROTOCOL
      Value: '''TLSv1.2'''
    - Key: SSL_VERIFY_CLIENT
      Value: '''none'''
    - Key: NEW_RELIC_LICENSE_KEY
      Value: ""
    - Key: NEW_RELIC_APP_NAME
      Value: '''Tomcat'''
    - Key: NEW_RELIC_ENABLE_AUTO_APP_NAMING
      Value: "false"
    - Key: NEW_RELIC_LABELS
      Value: ''''''
    - Key: NEW_RELIC_AGENT_VERSION
      Value: current
    - Key: LD_LIBRARY_PATH
      Value: $CATALINA_HOME/lib:/usr/lib
    Name: env
  - CmdLine:
    - mkdir -p "$CATALINA_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - CmdLine:
    - yum install -y     bash     python     wget     ca-certificates     openssl-devel     openssl098e   &&
      yum clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_MAJOR
      Value: "7"
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 7.0.79
    Name: env
  - Env:
    - Key: TOMCAT_TGZ_URL
      Value: https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
    Name: env
  - Env:
    - Key: TOMCAT_ASC_URL
      Value: https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
    Name: env
  - CmdLine:
    - set -x     && wget -O tomcat.tar.gz "$TOMCAT_TGZ_URL"   && wget -O tomcat.tar.gz.asc
      "$TOMCAT_ASC_URL"   && tar -xvf tomcat.tar.gz --strip-components=1   && rm bin/*.bat   &&
      rm tomcat.tar.gz*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lib*
    - $CATALINA_HOME/lib/
  - CmdLine:
    - ln -s $CATALINA_HOME/lib/libapr-1.so.0.5.2 $CATALINA_HOME/lib/libapr-1.so.0
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $CATALINA_HOME/lib/libtcnative-1.so.0.1.34 $CATALINA_HOME/lib/libtcnative-1.so
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/lib64/libssl.so.0.9.8e /usr/lib64/libssl.so.1.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/lib64/libcrypto.so.0.9.8e /usr/lib64/libcrypto.so.1.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $SSL_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf $CATALINA_HOME/webapps/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
    - "8443"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tomcat/
    - $CATALINA_HOME/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod 744 /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip   &&
      unzip -n newrelic-java.zip -d $CATALINA_HOME   && rm -f newrelic-java.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - catalina.sh
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: 511200753148.dkr.ecr.eu-west-1.amazonaws.com/oracle-jdk7-amazonlinux
  Name: ""
  Platform: ""
  SourceCode: FROM 511200753148.dkr.ecr.eu-west-1.amazonaws.com/oracle-jdk7-amazonlinux
