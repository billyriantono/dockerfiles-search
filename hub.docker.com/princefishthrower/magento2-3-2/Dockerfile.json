{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.22-apache",
      "SourceCode": "FROM php:7.2.22-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2.22-apache"
      },
      "Commands": [
        {
          "Maintainer": "Chris Frewin \u003cfrewin.christopher@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_PORT",
              "Value": "9000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \tsoftware-properties-common \t\u0026\u0026 apt-get update \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y \tlibfreetype6-dev \tlibicu-dev   libssl-dev \tlibjpeg62-turbo-dev \tlibedit-dev \tlibedit2 \tlibxslt1-dev \tapt-utils \tgnupg \tredis-tools \tdefault-mysql-client \tgit \tvim \twget \tcurl \tlynx \tpsmisc \tunzip \ttar \tcron \tbash-completion \t\u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure   \tgd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/;   \tdocker-php-ext-install   \topcache   \tgd   \tbcmath   \tintl   \tmbstring   \tpdo_mysql   \tsoap   \txsl   \tzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \t\u0026\u0026 apt-get install -y   \tlibpcre3   \tlibpcre3-dev   \t\u0026\u0026 pecl install oauth   \t\u0026\u0026 echo \"extension=oauth.so\" \u003e /usr/local/etc/php/conf.d/docker-php-ext-oauth.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/magento/marketplace-eqp.git ~/.composer/vendor/magento/marketplace-eqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/.composer/vendor/magento/marketplace-eqp \u0026\u0026 composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/magento/marketplace-eqp/vendor/bin/phpcs /usr/local/bin;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/var/www/.composer/vendor/bin/:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug \u0026\u0026 \t echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.iniOLD"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y install golang-go    \u0026\u0026 mkdir /opt/go    \u0026\u0026 export GOPATH=/opt/go    \u0026\u0026 go get github.com/mailhog/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://files.magerun.net/n98-magerun2.phar \t\u0026\u0026 chmod +x ./n98-magerun2.phar \t\u0026\u0026 mv ./n98-magerun2.phar /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".docker/config/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".docker/config/magento.conf",
            "/etc/apache2/sites-available/magento.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".docker/config/custom-xdebug.ini",
            "/usr/local/etc/php/conf.d/custom-xdebug.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".docker/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".docker/users/*",
            "/var/www/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /etc/apache2/sites-available/magento.conf /etc/apache2/sites-enabled/magento.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /etc/bash_completion.d/m2install-bash-completion https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install-bash-completion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /etc/bash_completion.d/n98-magerun2.phar.bash https://raw.githubusercontent.com/netz98/n98-magerun2/master/res/autocompletion/bash/n98-magerun2.phar.bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /etc/bash_completion\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /etc/bash_completion\" \u003e\u003e /var/www/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 777 -Rf /var/www /var/www/.* \t\u0026\u0026 chown -Rf www-data:www-data /var/www /var/www/.* \t\u0026\u0026 usermod -u 1000 www-data \t\u0026\u0026 chsh -s /bin/bash www-data\t\u0026\u0026 a2enmod rewrite \t\u0026\u0026 a2enmod headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}