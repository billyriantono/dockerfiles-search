{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Key": "userid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "run_buildout",
          "Name": "arg",
          "Value": "true"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y curl git libzmq3-dev libyaml-dev apt-transport-https lsb-release \u0026\u0026     curl -L https://packagecloud.io/varnishcache/varnish41/gpgkey | apt-key add - \u0026\u0026     oslower=$(lsb_release -s -i | tr '[:upper:]' '[:lower:]') \u0026\u0026     oscodename=$(lsb_release -s -c) \u0026\u0026     echo \"Package: varnish\" \u003e/etc/apt/preferences.d/varnish \u0026\u0026     echo \"Pin: release l=varnish41\" \u003e\u003e/etc/apt/preferences.d/varnish \u0026\u0026     echo \"Pin-Priority: 999\" \u003e\u003e/etc/apt/preferences.d/varnish \u0026\u0026     (test $oscodename != 'zesty' \u0026\u0026 echo \"deb https://packagecloud.io/varnishcache/varnish41/${oslower}/ ${oscodename} main\" \u003e /etc/apt/sources.list.d/varnishcache_varnish41.list || true) \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y varnish \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup --quiet --gid $userid \"u1000\" \u0026\u0026     adduser         --shell /bin/bash         --disabled-password         --force-badname         --no-create-home         --uid $userid         --gid $userid         --gecos ''         --quiet         --home \"/app\"         \"u1000\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --disable-pip-version-check --no-cache-dir zc.buildout==2.9.5 setuptools==32.2.0 \u0026\u0026 pip3 uninstall -y six || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "arch=\"$(dpkg --print-architecture)\"     \u0026\u0026 set -x     \u0026\u0026 curl --silent -o /usr/local/bin/gosu -fSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$arch\"     \u0026\u0026 EXPECTED_SHA=\"5b3b03713a888cee84ecbf4582b21ac9fd46c3d935ff2d7ea25dd5055d302d3c\"     \u0026\u0026 sha256sum /usr/local/bin/gosu | grep -q $EXPECTED_SHA     \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.bash",
            "/start"
          ]
        },
        {
          "CmdLine": [
            "chown -R u1000:u1000 /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m compileall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "u1000"
        },
        {
          "CmdLine": [
            "python -m compileall /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "mkdir -p -m 700 /app/.ssh \u0026\u0026     echo \"|1|mkhJkTqJT7XEFCg9zJ6vXr9F7KM=|1ihCQCq4xl9SQDtCAqwp4auiRIk= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNn6VI+Ekg/iOz3bZL6bb35tj6fOjmmMOvkw592XDXy+bSes+2qHhcA3uOg5/wEtmRaK583uZH/CJ4512BpLb7M=\" \u003e\u003e /app/.ssh/known_hosts \u0026\u0026     echo \"|1|VmfmXO+MNtehwEnpYIEHO7zfvm8=|ya5Yt/ILBv/gMHQLAfSu2tOWO2I= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNn6VI+Ekg/iOz3bZL6bb35tj6fOjmmMOvkw592XDXy+bSes+2qHhcA3uOg5/wEtmRaK583uZH/CJ4512BpLb7M=\" \u003e\u003e /app/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildout bootstrap -c heroku.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$run_buildout \u0026\u0026 bin/buildout -c heroku.cfg || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "/start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}