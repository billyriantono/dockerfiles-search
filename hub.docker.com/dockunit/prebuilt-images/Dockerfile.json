{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y mysql-server libmysqlclient-dev --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y ca-certificates     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PHP_INI_DIR/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "buildDeps",
              "Value": "\"         bzip2         file         libcurl4-openssl-dev         libreadline6-dev         libssl-dev         libxml2-dev         curl         libxml2         autoconf         gcc         libc-dev         make         patch         pkg-config     \""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 curl -SL \"http://php.net/get/php-7.0.0.tar.gz/from/this/mirror\" -o php.tar.bz     \u0026\u0026 mkdir -p /usr/src/php     \u0026\u0026 tar -xf php.tar.bz -C /usr/src/php --strip-components=1     \u0026\u0026 rm php.tar.bz*     \u0026\u0026 cd /usr/src/php     \u0026\u0026 ./configure         --with-config-file-path=\"$PHP_INI_DIR\"         --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"         $PHP_EXTRA_CONFIGURE_ARGS         --disable-cgi         --enable-mysqlnd         --enable-pdo         --with-mysql         --with-pdo-mysql         --with-curl         --with-openssl         --with-readline         --with-zlib     \u0026\u0026 make -j\"$(nproc)\"     \u0026\u0026 make install     \u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; }     \u0026\u0026 make clean     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps     \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-ext-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-php-ext-configure     \u0026\u0026 chmod +x /usr/local/bin/docker-php-ext-install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "extensionDeps",
              "Value": "\"         autoconf         gcc         make         rsync         libpng12-dev         libmcrypt-dev         libxml2-dev         libssl-dev         curl     \""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "extensions=\"         gd         mysqli         soap         zip         mcrypt         mbstring     \";     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends $extensionDeps     \u0026\u0026 docker-php-ext-install $extensions     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $extensionDeps     \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "peclDeps",
              "Value": "\"     curl     libssl-dev     libxml2-dev     make     autoconf     gcc     \""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends $peclDeps     \u0026\u0026 pecl install memcache \u0026\u0026 echo extension=memcache.so \u003e $PHP_INI_DIR/conf.d/ext-memcache.ini     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $peclDeps     \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Maintainer": "Taylor Lovett",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/usr/local/etc/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     libxml2     libpng12-dev     mcrypt     curl     libmcrypt4     less     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SL --insecure \"https://phar.phpunit.de/phpunit.phar\" -o phpunit.phar     \u0026\u0026 chmod +x phpunit.phar     \u0026\u0026 mv phpunit.phar /usr/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install openjdk-7-jre-headless wget unzip --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SOLR_VERSION",
              "Value": "5.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOLR",
              "Value": "solr-$SOLR_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOLR_USER",
              "Value": "solr"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install lsof \u0026\u0026     groupadd -r $SOLR_USER \u0026\u0026     useradd -r -g $SOLR_USER $SOLR_USER \u0026\u0026     mkdir -p /opt \u0026\u0026     wget -nv --output-document=/opt/$SOLR.tgz http://archive.apache.org/dist/lucene/solr/$SOLR_VERSION/$SOLR.tgz \u0026\u0026     tar -C /opt --extract --file /opt/$SOLR.tgz \u0026\u0026     rm /opt/$SOLR.tgz \u0026\u0026     ln -s /opt/$SOLR /opt/solr \u0026\u0026     chown -R $SOLR_USER:$SOLR_USER /opt/solr /opt/$SOLR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /opt/solr/bin/solr /usr/bin/solr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y subversion git ssh --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /var/run/mysqld/mysqld.sock /tmp/mysql.sock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}