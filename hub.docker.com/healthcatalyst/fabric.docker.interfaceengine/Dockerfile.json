{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "healthcatalyst/fabric.baseos:latest",
      "SourceCode": "FROM healthcatalyst/fabric.baseos:latest",
      "Platform": "",
      "From": {
        "Image": "healthcatalyst/fabric.baseos:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Health Catalyst\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"2.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "MIRTH_CONNECT_VERSION",
              "Value": "3.5.1.b194"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y wget krb5-libs krb5-workstation ntp rsync dos2unix; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O jdk.rpm https://fabricnlpfiles.blob.core.windows.net/java/jdk-8u152-linux-x64.rpm \u0026\u0026 yum install -y ./jdk.rpm \u0026\u0026 yum clean all \u0026\u0026 rm -f jdk.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O mirthconnect.rpm http://downloads.mirthcorp.com/connect/$MIRTH_CONNECT_VERSION/mirthconnect-$MIRTH_CONNECT_VERSION-linux.rpm \u0026\u0026 yum install -y mirthconnect.rpm \u0026\u0026 yum clean all \u0026\u0026 rm -f mirthconnect.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O - https://download.microsoft.com/download/0/2/A/02AAE597-3865-456C-AE7F-613F99F850A8/enu/sqljdbc_6.0.8112.100_enu.tar.gz | tar xz \u0026\u0026 cp sqljdbc_6.0/enu/jre8/sqljdbc42.jar /opt/mirthconnect/custom-lib \u0026\u0026 rm -rf sqljdbc_6.0 ; sed -i '/\u003c\\/drivers\u003e/ i\\ \\t\u003cdriver class=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" name=\"MS SQL Server\" template=\"jdbc:sqlserver://host:port;databaseName=dbname\" selectLimit=\"SELECT TOP 1 * FROM ?\" /\u003e' /opt/mirthconnect/conf/dbdrivers.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O ampq-client.jar  http://central.maven.org/maven2/com/rabbitmq/amqp-client/4.0.2/amqp-client-4.0.2.jar \u0026\u0026 mv ampq-client.jar /opt/mirthconnect/custom-lib \u0026\u0026 wget -O slf4j-api.jar http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar \u0026\u0026 mv slf4j-api.jar /opt/mirthconnect/custom-lib \u0026\u0026 wget -O slf4j-simple.jar http://central.maven.org/maven2/org/slf4j/slf4j-simple/1.7.22/slf4j-simple-1.7.22.jar \u0026\u0026 mv slf4j-simple.jar /opt/mirthconnect/custom-lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "mariadb.repo",
            "/etc/yum.repos.d/"
          ]
        },
        {
          "CmdLine": [
            "yum -y install MariaDB-client; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/mirthconnect/*",
            "/opt/mirthconnect/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/appdata/*",
            "/opt/mirthconnect/appdata/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/channels/*",
            "/opt/mirthconnect_channels/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/database/*",
            "/opt/mirthconnect_database/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/mysql/*",
            "/opt/mirthconnect_mysql/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/mirthconnect/mirth.properties",
            "/opt/mirthconnect/conf/mirth.properties"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/mirthconnect/log4j.properties",
            "/opt/mirthconnect/conf/log4j.properties"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/mirthconnect/log4j.properties",
            "/opt/mirthconnect/conf/jetty-logging.properties"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/setenv.sh",
            "./setenv.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "./docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "dos2unix /opt/mirthconnect/startmirthandrenewcredentials.sh \u0026\u003e/dev/null     \u0026\u0026 chmod +x /opt/mirthconnect/startmirthandrenewcredentials.sh     \u0026\u0026 dos2unix /opt/mirthconnect_channels/deployrealtimechannel.sh \u0026\u003e/dev/null     \u0026\u0026 chmod +x /opt/mirthconnect_channels/deployrealtimechannel.sh \t\u0026\u0026 dos2unix /opt/mirthconnect_database/switchtosqlserver.sh \u0026\u003e/dev/null \t\u0026\u0026 chmod +x /opt/mirthconnect_database/switchtosqlserver.sh \t\u0026\u0026 dos2unix /opt/mirthconnect_mysql/* \u0026\u003e/dev/null \t\u0026\u0026 chmod +x /opt/mirthconnect_mysql/* \t\u0026\u0026 dos2unix /opt/mirthconnect_database/* \u0026\u003e/dev/null \t\u0026\u0026 chmod +x /opt/mirthconnect_database/* \t\u0026\u0026 dos2unix ./setenv.sh \u0026\u003e/dev/null \t\u0026\u0026 chmod +x ./setenv.sh \t\u0026\u0026 dos2unix ./docker-entrypoint.sh \u0026\u003e/dev/null \t\u0026\u0026 chmod +x ./docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6661",
            "8080",
            "8443"
          ]
        },
        {
          "CmdLine": [
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/opt/mirthconnect/mcservice",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}