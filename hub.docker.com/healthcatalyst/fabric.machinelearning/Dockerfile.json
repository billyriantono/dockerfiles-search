{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Maintainer": "Health Catalyst \u003cimran.qureshi@healthcatalyst.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "useradd docker \t\u0026\u0026 mkdir -p /home/docker \t\u0026\u0026 chown docker:docker /home/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install epel-release; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install authconfig krb5-workstation pam_krb5 samba-common oddjob-mkhomedir sudo ntp; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://healthcatalyst.github.io/InstallScripts/setupkeytab.txt",
            "/opt/install/setupkeytab.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://healthcatalyst.github.io/InstallScripts/signintoactivedirectory.txt",
            "/opt/install/signintoactivedirectory.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://healthcatalyst.github.io/InstallScripts/testsql.txt",
            "/opt/install/testsql.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/install/setupkeytab.sh     \u0026\u0026 chmod +x /opt/install/signintoactivedirectory.sh     \u0026\u0026 chmod +x /opt/install/testsql.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/lib64/R/library     \u0026\u0026 chown docker:docker /usr/lib64/R/library     \u0026\u0026 mkdir -p /usr/share/doc/R-3.3.3/html     \u0026\u0026 chown docker:docker /usr/lib64/R/library"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install R; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "R.css",
            "/usr/share/doc/R-3.3.3/html/"
          ]
        },
        {
          "CmdLine": [
            "curl -o /etc/yum.repos.d/mssql-release.repo https://packages.microsoft.com/config/rhel/7/prod.repo \u0026\u0026 echo \"curled\"     \u0026\u0026 yum remove unixODBC-utf16 unixODBC-utf16-devel     \u0026\u0026 ACCEPT_EULA=Y yum install -y msodbcsql-13.1.4.0-1 mssql-tools-14.0.3.0-1 unixODBC-devel \u0026\u0026 echo \"installed\"     \u0026\u0026 echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' \u003e\u003e ~/.bash_profile \u0026\u0026 echo \"exported to bash_profile\"     \u0026\u0026 echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' \u003e\u003e ~/.bashrc \u0026\u0026 echo \"exported to bashrc\"     \u0026\u0026 source ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"r \u003c- getOption('repos'); r['CRAN'] \u003c- 'http://cran.us.r-project.org'; options(repos = r); .libPaths('/usr/lib64/R/library')\" \u003e ~/.Rprofile     \u0026\u0026 Rscript -e \"install.packages(c('ggplot2', 'needs', 'jsonlite', 'dplyr', 'RODBC', 'healthcareai'))\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install bzip2; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -N https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh --output usr/src/Miniconda.sh    \u0026\u0026 bash usr/src/Miniconda.sh -b -p /opt/conda    \u0026\u0026 source /opt/conda/bin/activate    \u0026\u0026 /opt/conda/bin/conda install -y numpy    \u0026\u0026 /opt/conda/bin/conda list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash     \u0026\u0026 source $NVM_DIR/nvm.sh     \u0026\u0026 nvm --version     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 nvm alias default $NODE_VERSION     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "node --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/src"
          ]
        },
        {
          "CmdLine": [
            "cd /src; npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/fabricml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "r-script-master/example/ex-sync.R",
            "/usr/share/fabricml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "r-script-master/example/ex-async.R",
            "/usr/share/fabricml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "r-script-master/example/simple.R",
            "/usr/share/fabricml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "r-script-master/example/healthcareaitest.R",
            "/usr/share/fabricml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "python-script/examples/compute_input.py",
            "/usr/share/fabricml"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "node",
            "/src/server.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}