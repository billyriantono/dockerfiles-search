{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "Anoop Nair\u003canoopnair.it@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Build nifi 1.1.2 image on Alpine Linux\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NIFI_VERSION",
              "Value": "1.1.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NIFI_HOME",
              "Value": "/opt/nifi"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_VERSION",
              "Value": "5.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XPACK_VERSION",
              "Value": "5.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add bash git wget ca-certificates sudo openssh rsync openjdk8 zip \u0026\u0026   rm -rf /var/cache/apk/* \u0026\u0026   rm -rf /opt  \u0026\u0026   mkdir -p /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q http://apache.mesi.com.ar/nifi/$NIFI_VERSION/nifi-$NIFI_VERSION-bin.tar.gz \u0026\u0026    tar xzf nifi-$NIFI_VERSION-bin.tar.gz -C /opt/ \u0026\u0026    ln -s /opt/nifi-$NIFI_VERSION $NIFI_HOME \u0026\u0026    rm nifi-$NIFI_VERSION-bin.tar.gz \u0026\u0026    sed -i -e \"s|^nifi.ui.banner.text=.*$$|nifi.ui.banner.text=My Docker NiFi - $NIFI_VERSION|\" $NIFI_HOME/conf/nifi.properties \u0026\u0026    mkdir $NIFI_HOME/database_repository \u0026\u0026    mkdir $NIFI_HOME/flowfile_repository \u0026\u0026    mkdir $NIFI_HOME/content_repository \u0026\u0026    mkdir $NIFI_HOME/provenance_repository \u0026\u0026    mkdir $NIFI_HOME/xsl \u0026\u0026    mkdir $NIFI_HOME/extra_lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "extra_lib/*",
            "$NIFI_HOME/extra_lib/"
          ]
        },
        {
          "CmdLine": [
            "wget -q https://artifacts.elastic.co/downloads/packs/x-pack/x-pack-$XPACK_VERSION.zip \u0026\u0026     unzip x-pack-$XPACK_VERSION.zip -d $NIFI_HOME/extra_lib \u0026\u0026     wget -q https://artifacts.elastic.co/maven/org/elasticsearch/client/x-pack-transport/$XPACK_VERSION/x-pack-transport-$XPACK_VERSION.jar \u0026\u0026     cp x-pack-transport-$XPACK_VERSION.jar $NIFI_HOME/extra_lib/ \u0026\u0026     wget http://central.maven.org/maven2/org/elasticsearch/elasticsearch/$ES_VERSION/elasticsearch-$ES_VERSION.jar \u0026\u0026     cp elasticsearch-$ES_VERSION.jar $NIFI_HOME/extra_lib/elasticsearch \u0026\u0026     rm -rf $NIFI_HOME/extra_lib/kibana \u0026\u0026     rm -rf $NIFI_HOME/extra_lib/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$NIFI_HOME/conf",
            "$NIFI_HOME/database_repository",
            "$NIFI_HOME/flowfile_repository",
            "$NIFI_HOME/content_repository",
            "$NIFI_HOME/provenance_repository"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$NIFI_HOME"
        },
        {
          "CmdLine": [
            "bin/nifi.sh",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}