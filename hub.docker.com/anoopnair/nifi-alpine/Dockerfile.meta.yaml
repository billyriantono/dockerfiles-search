MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Maintainer: Anoop Nair<anoopnair.it@gmail.com>
    Name: maintainer
  - Labels:
    - Key: description
      Value: '"Build nifi 1.1.2 image on Alpine Linux"'
    Name: label
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $JAVA_HOME/bin:$PATH
    Name: env
  - Env:
    - Key: NIFI_VERSION
      Value: 1.1.2
    Name: env
  - Env:
    - Key: NIFI_HOME
      Value: /opt/nifi
    Name: env
  - Env:
    - Key: ES_VERSION
      Value: 5.2.2
    Name: env
  - Env:
    - Key: XPACK_VERSION
      Value: 5.0.1
    Name: env
  - CmdLine:
    - apk --update add bash git wget ca-certificates sudo openssh rsync openjdk8 zip
      &&   rm -rf /var/cache/apk/* &&   rm -rf /opt  &&   mkdir -p /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q http://apache.mesi.com.ar/nifi/$NIFI_VERSION/nifi-$NIFI_VERSION-bin.tar.gz
      &&    tar xzf nifi-$NIFI_VERSION-bin.tar.gz -C /opt/ &&    ln -s /opt/nifi-$NIFI_VERSION
      $NIFI_HOME &&    rm nifi-$NIFI_VERSION-bin.tar.gz &&    sed -i -e "s|^nifi.ui.banner.text=.*$$|nifi.ui.banner.text=My
      Docker NiFi - $NIFI_VERSION|" $NIFI_HOME/conf/nifi.properties &&    mkdir $NIFI_HOME/database_repository
      &&    mkdir $NIFI_HOME/flowfile_repository &&    mkdir $NIFI_HOME/content_repository
      &&    mkdir $NIFI_HOME/provenance_repository &&    mkdir $NIFI_HOME/xsl &&    mkdir
      $NIFI_HOME/extra_lib
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - extra_lib/*
    - $NIFI_HOME/extra_lib/
  - CmdLine:
    - wget -q https://artifacts.elastic.co/downloads/packs/x-pack/x-pack-$XPACK_VERSION.zip
      &&     unzip x-pack-$XPACK_VERSION.zip -d $NIFI_HOME/extra_lib &&     wget -q
      https://artifacts.elastic.co/maven/org/elasticsearch/client/x-pack-transport/$XPACK_VERSION/x-pack-transport-$XPACK_VERSION.jar
      &&     cp x-pack-transport-$XPACK_VERSION.jar $NIFI_HOME/extra_lib/ &&     wget
      http://central.maven.org/maven2/org/elasticsearch/elasticsearch/$ES_VERSION/elasticsearch-$ES_VERSION.jar
      &&     cp elasticsearch-$ES_VERSION.jar $NIFI_HOME/extra_lib/elasticsearch &&     rm
      -rf $NIFI_HOME/extra_lib/kibana &&     rm -rf $NIFI_HOME/extra_lib/logstash
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $NIFI_HOME/conf
    - $NIFI_HOME/database_repository
    - $NIFI_HOME/flowfile_repository
    - $NIFI_HOME/content_repository
    - $NIFI_HOME/provenance_repository
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: $NIFI_HOME
  - CmdLine:
    - bin/nifi.sh
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
