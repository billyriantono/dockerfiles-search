MetaArgs:
- DefaultValue: "9.5"
  Key: POSTGRES_VERSION
  ProvidedValue: null
  Value: "9.5"
Stages:
- BaseName: postgres:${POSTGRES_VERSION}
  Commands:
  - Labels:
    - Key: Author
      Value: '"jeffsturgis@gmail.com"'
    Name: label
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: '"noninteractive"'
  - Key: POSTGRES_VERSION
    Name: arg
    Value: null
  - CmdLine:
    - apt-get update &&     apt-get -y -q install         build-essential         git-core         libdb-dev         libexpat1-dev         libicu-dev         libpq-dev         libxml2-dev         postgresql-server-dev-${POSTGRES_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/metabrainz/postgresql-musicbrainz-unaccent.git
      /tmp/postgresql-musicbrainz-unaccent &&     git clone https://github.com/metabrainz/postgresql-musicbrainz-collate.git
      /tmp/postgresql-musicbrainz-collate &&     git clone https://github.com/ta264/pg_amqp.git
      /tmp/pg_amqp
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/postgresql-musicbrainz-unaccent
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/postgresql-musicbrainz-collate
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/pg_amqp
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - set-config.sh
    - /docker-entrypoint-initdb.d
  - CmdLine:
    - rm -R /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: postgres:${POSTGRES_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM postgres:${POSTGRES_VERSION}
