{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.7.1908",
      "SourceCode": "FROM centos:7.7.1908",
      "Platform": "",
      "From": {
        "Image": "centos:7.7.1908"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.opencontainers.image.source",
              "Value": "\"https://github.com/giovtorres/docker-centos7-slurm\""
            },
            {
              "Key": "org.opencontainers.image.title",
              "Value": "\"docker-centos7-slurm\""
            },
            {
              "Key": "org.opencontainers.image.description",
              "Value": "\"Slurm All-in-one Docker container on CentOS 7\""
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "\"docker run -it -h ernie giovtorres/docker-centos7-slurm:latest\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Giovanni Torres\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 yum makecache fast     \u0026\u0026 yum -y update     \u0026\u0026 yum -y install epel-release     \u0026\u0026 yum -y install         autoconf         bash-completion         bzip2         bzip2-devel         file         iproute         gcc         gcc-c++         gdbm-devel         git         glibc-devel         gmp-devel         libffi-devel         libGL-devel         libX11-devel         make         mariadb-server         mariadb-devel         munge         munge-devel         ncurses-devel         openssl-devel         openssl-libs         perl         pkconfig         psmisc         readline-devel         sqlite-devel         tcl-devel         tix-devel         tk         tk-devel         supervisor         wget         vim-enhanced         xz-devel         zlib-devel     \u0026\u0026 yum clean all     \u0026\u0026 rm -rf /var/cache/yum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/install-python.sh",
            "/tmp"
          ]
        },
        {
          "Key": "PYTHON_VERSIONS",
          "Name": "arg",
          "Value": "\"2.7 3.5 3.6 3.7 3.8\""
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 for version in ${PYTHON_VERSIONS}; do /tmp/install-python.sh \"$version\"; done     \u0026\u0026 rm -f /tmp/install-python.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SLURM_TAG",
          "Name": "arg",
          "Value": "slurm-19-05-4-1"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 git clone https://github.com/SchedMD/slurm.git     \u0026\u0026 pushd slurm     \u0026\u0026 git checkout tags/$SLURM_TAG     \u0026\u0026 ./configure --enable-debug --enable-front-end --prefix=/usr        --sysconfdir=/etc/slurm --with-mysql_config=/usr/bin        --libdir=/usr/lib64     \u0026\u0026 make install     \u0026\u0026 install -D -m644 etc/cgroup.conf.example /etc/slurm/cgroup.conf.example     \u0026\u0026 install -D -m644 etc/slurm.conf.example /etc/slurm/slurm.conf.example     \u0026\u0026 install -D -m644 etc/slurmdbd.conf.example /etc/slurm/slurmdbd.conf.example     \u0026\u0026 install -D -m644 contribs/slurm_completion_help/slurm_completion.sh /etc/profile.d/slurm_completion.sh     \u0026\u0026 popd     \u0026\u0026 rm -rf slurm     \u0026\u0026 groupadd -r slurm      \u0026\u0026 useradd -r -g slurm slurm     \u0026\u0026 mkdir /etc/sysconfig/slurm         /var/spool/slurmd         /var/run/slurmd         /var/lib/slurmd         /var/log/slurm     \u0026\u0026 chown slurm:root /var/spool/slurmd         /var/run/slurmd         /var/lib/slurmd         /var/log/slurm     \u0026\u0026 /sbin/create-munge-key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 echo \"syntax on\"           \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set tabstop=4\"       \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set softtabstop=4\"   \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set shiftwidth=4\"    \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set expandtab\"       \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set autoindent\"      \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set fileformat=unix\" \u003e\u003e $HOME/.vimrc     \u0026\u0026 echo \"set encoding=utf-8\"  \u003e\u003e $HOME/.vimrc     \u0026\u0026 git config --global color.ui auto     \u0026\u0026 git config --global push.default simple"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/slurm/slurm.conf",
            "/etc/slurm/slurm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/slurm/gres.conf",
            "/etc/slurm/gres.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/slurm/slurmdbd.conf",
            "/etc/slurm/slurmdbd.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/supervisord.conf",
            "/etc/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mysql",
            "/var/lib/slurmd",
            "/var/spool/slurmd",
            "/var/log/slurm"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "Key": "TINI_VERSION",
          "Name": "arg",
          "Value": "v0.18.0"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/sbin/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /sbin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}