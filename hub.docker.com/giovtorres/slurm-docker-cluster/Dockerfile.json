{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.opencontainers.image.source",
              "Value": "\"https://github.com/giovtorres/slurm-docker-cluster\""
            },
            {
              "Key": "org.opencontainers.image.title",
              "Value": "\"slurm-docker-cluster\""
            },
            {
              "Key": "org.opencontainers.image.description",
              "Value": "\"Slurm Docker cluster on CentOS 7\""
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "\"docker-compose up -d\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Giovanni Torres\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "SLURM_TAG",
          "Name": "arg",
          "Value": "slurm-19-05-1-2"
        },
        {
          "Key": "GOSU_VERSION",
          "Name": "arg",
          "Value": "1.11"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 yum makecache fast     \u0026\u0026 yum -y update     \u0026\u0026 yum -y install epel-release     \u0026\u0026 yum -y install        wget        bzip2        perl        gcc        gcc-c++       git        gnupg        make        munge        munge-devel        python-devel        python-pip        python34        python34-devel        python34-pip        mariadb-server        mariadb-devel        psmisc        bash-completion        vim-enhanced     \u0026\u0026 yum clean all     \u0026\u0026 rm -rf /var/cache/yum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Cython nose \u0026\u0026 pip3.4 install Cython nose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -rf \"${GNUPGHOME}\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 git clone https://github.com/SchedMD/slurm.git     \u0026\u0026 pushd slurm     \u0026\u0026 git checkout tags/$SLURM_TAG     \u0026\u0026 ./configure --enable-debug --prefix=/usr --sysconfdir=/etc/slurm         --with-mysql_config=/usr/bin  --libdir=/usr/lib64     \u0026\u0026 make install     \u0026\u0026 install -D -m644 etc/cgroup.conf.example /etc/slurm/cgroup.conf.example     \u0026\u0026 install -D -m644 etc/slurm.conf.example /etc/slurm/slurm.conf.example     \u0026\u0026 install -D -m644 etc/slurmdbd.conf.example /etc/slurm/slurmdbd.conf.example     \u0026\u0026 install -D -m644 contribs/slurm_completion_help/slurm_completion.sh /etc/profile.d/slurm_completion.sh     \u0026\u0026 popd     \u0026\u0026 rm -rf slurm     \u0026\u0026 groupadd -r --gid=995 slurm     \u0026\u0026 useradd -r -g slurm --uid=995 slurm     \u0026\u0026 mkdir /etc/sysconfig/slurm         /var/spool/slurmd         /var/run/slurmd         /var/run/slurmdbd         /var/lib/slurmd         /var/log/slurm         /data     \u0026\u0026 touch /var/lib/slurmd/node_state         /var/lib/slurmd/front_end_state         /var/lib/slurmd/job_state         /var/lib/slurmd/resv_state         /var/lib/slurmd/trigger_state         /var/lib/slurmd/assoc_mgr_state         /var/lib/slurmd/assoc_usage         /var/lib/slurmd/qos_usage         /var/lib/slurmd/fed_mgr_state     \u0026\u0026 chown -R slurm:slurm /var/*/slurm*     \u0026\u0026 /sbin/create-munge-key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "slurm.conf",
            "/etc/slurm/slurm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "slurmdbd.conf",
            "/etc/slurm/slurmdbd.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "slurmdbd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}