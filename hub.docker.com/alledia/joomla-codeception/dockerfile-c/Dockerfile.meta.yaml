MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: author
      Value: '"Allan Batista <allan@allanbatista.com.br>"'
    Name: label
  - Name: expose
    Ports:
    - "5555"
    - "8080"
    - "8793"
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Env:
    - Key: SLUGIFY_USES_TEXT_UNIDECODE
      Value: "yes"
    Name: env
  - Env:
    - Key: AIRFLOW
      Value: /opt/airflow
    Name: env
  - Env:
    - Key: AIRFLOW_HOME
      Value: $AIRFLOW/home
    Name: env
  - Env:
    - Key: AIRFLOW__CORE__DAGS_FOLDER
      Value: $AIRFLOW/dags
    Name: env
  - Env:
    - Key: AIRFLOW__CORE__PLUGINS_FOLDER
      Value: $AIRFLOW/plugins
    Name: env
  - Env:
    - Key: AIRFLOW__CORE__BASE_LOG_FOLDER
      Value: $AIRFLOW/logs
    Name: env
  - Env:
    - Key: AIRFLOW_KEYS
      Value: $AIRFLOW/keys
    Name: env
  - Env:
    - Key: AIRFLOW_VERSION
      Value: 1.10.4
    Name: env
  - Env:
    - Key: AIRFLOW_COMPONENTS
      Value: all_dbs,async,celery,cloudant,crypto,gcp_api,google_auth,hdfs,hive,jdbc,mysql,oracle,password,postgres,rabbitmq,redis,s3,samba,slack,ssh,github_enterprise
    Name: env
  - Env:
    - Key: AIRFLOW_GPL_UNIDECODE
      Value: "yes"
    Name: env
  - Env:
    - Key: C_FORCE_ROOT
      Value: "true"
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_MESSAGES
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PYTHON_PACKAGES
      Value: ""
    Name: env
  - Env:
    - Key: PYTHONDONTWRITEBYTECODE
      Value: "true"
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/gcloud/google-cloud-sdk/bin
    Name: env
  - Env:
    - Key: CLOUDSDK_PYTHON
      Value: '"python2.7"'
    Name: env
  - Env:
    - Key: GOOGLE_APPLICATION_CREDENTIALS_JSON
      Value: ""
    Name: env
  - Env:
    - Key: GOOGLE_APPLICATION_ACCOUNT
      Value: ""
    Name: env
  - Env:
    - Key: CLOUD_SDK_REPO
      Value: cloud-sdk-bionic
    Name: env
  - Env:
    - Key: ORACLE_HOME
      Value: /opt/cx_oracle
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$ORACLE_HOME
    Name: env
  - CmdLine:
    - mkdir -p $AIRFLOW_HOME &&     mkdir -p $AIRFLOW_KEYS &&     mkdir -p $AIRFLOW__CORE__DAGS_FOLDER
      &&     mkdir -p $AIRFLOW__CORE__BASE_LOG_FOLDER &&     mkdir -p $AIRFLOW__CORE__PLUGINS_FOLDER
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - airflow/home
    - /opt/airflow/home
  - Chown: ""
    Name: add
    SourcesAndDest:
    - instantclient-basic-linux.x64-19.3.0.0.0dbru.zip
    - /tmp/
  - Name: workdir
    Path: /opt/airflow
  - CmdLine:
    - apt-get update -y     && apt-get install -y                         python-minimal                         python3-pip                         python3-dev                         python3-setuptools                         zip                         wget                         git                         vim                         locales                         build-essential                         curl                         default-libmysqlclient-dev                         freetds-dev                         libkrb5-dev                         libsasl2-dev                         libssl-dev                         libffi-dev                         libpq-dev                         libaio1     &&
      sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a
      /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key add - &&     apt-get update -y &&     apt-get install google-cloud-sdk
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf $(which pip3) /usr/bin/pip     && ln -sf $(which python3) /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ &&     unzip instantclient-basic-linux.x64-19.3.0.0.0dbru.zip &&     mv
      instantclient_19_3 $ORACLE_HOME &&     rm instantclient-basic-linux.x64-19.3.0.0.0dbru.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install "apache-airflow[${AIRFLOW_COMPONENTS}]==${AIRFLOW_VERSION}" --no-cache-dir
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /airflow_custom
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - airflow/airflow_custom
    - /airflow_custom
  - CmdLine:
    - python -m pip install -e /airflow_custom
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install boto3                 pandas                 psycopg2                 psycopg2-binary                 py-postgresql                 numpy                 matplotlib                 scikit-learn                 google-cloud-bigquery==1.11.3                 google-cloud-storage                 google-cloud-pubsub                 tensorflow                 sasl                 thrift_sasl                 setuptools                 wheel                 pika                 pymongo                 unidecode                 cx_Oracle                 nltk                 -U
      --no-cache-dir
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c "import nltk; nltk.download('rslp')"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean --dry-run
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /entrypoint.sh
    - webserver
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
