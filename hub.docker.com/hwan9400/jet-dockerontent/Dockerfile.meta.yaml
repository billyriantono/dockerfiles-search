MetaArgs: null
Stages:
- As: build-stage
  BaseName: golang:1.11.4-alpine
  Commands:
  - Key: version
    Name: arg
    Value: null
  - Key: revision
    Name: arg
    Value: null
  - CmdLine:
    - touch /${version} && touch /${revision}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/hrkt.io/command-as-a-service
  - Name: workdir
    Path: /go/src/hrkt.io/command-as-a-service
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/golang/dep/cmd/dep
    Name: run
    PrependShell: true
  - CmdLine:
    - dep ensure
    Name: run
    PrependShell: true
  - CmdLine:
    - go install -ldflags="-s -w -X \"main.Version=${version}\" -X \"main.Revision=${revision}\"
      -extldflags \"-static\"" hrkt.io/command-as-a-service
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.4-alpine
  Name: build-stage
  Platform: ""
  SourceCode: FROM golang:1.11.4-alpine as build-stage
- As: production-stage
  BaseName: alpine
  Commands:
  - Chown: ""
    From: build-stage
    Name: copy
    SourcesAndDest:
    - /go/bin/command-as-a-service
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - app-settings.json
    - .
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: GIN_MODE
      Value: release
    Name: env
  - CmdLine:
    - ./command-as-a-service
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: production-stage
  Platform: ""
  SourceCode: FROM alpine as production-stage
