{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "BUILD_PKGS",
              "Value": "wget curl sudo unzip bash-completion nmap cmake   clang clang-format clang-tidy python-dev python3-dev npm   libc++-dev build-essential qemu-system-x86 git vim-gtk exuberant-ctags   libncurses5-dev libclang-dev netcat pv tmux gcc-multilib libgtest-dev   google-mock libbz2-dev zlib1g-dev default-jre graphviz doxygen automake   libtool libxml2-dev pkg-config python-pip python3-pip neovim fontconfig   libreadline-dev llvm global bsdtar xclip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-256color"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ycm_init.vim",
            "/root/.vimrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init.vim",
            "/root/.config/nvim/init.vim"
          ]
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y python-software-properties software-properties-common \u0026\u0026   add-apt-repository ppa:neovim-ppa/unstable \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y $BUILD_PKGS \u0026\u0026   curl -fL https://github.com/ninja-build/ninja/releases/download/v1.7.1/ninja-linux.zip | bsdtar -xvf - \u0026\u0026 chmod +x ninja \u0026\u0026 mv ninja /usr/local/bin \u0026\u0026   mkdir -p ~/.vim/autoload \u0026\u0026   curl -fLo ~/.vim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \u0026\u0026   curl -fLo ~/.ycm_extra_conf.py https://bitbucket.org/tzunic/devcpp/raw/master/ycm_extra_conf.py \u0026\u0026   curl -fLo ~/.tmux.conf https://bitbucket.org/tzunic/devcpp/raw/master/tmux.conf \u0026\u0026   pip install neovim \u0026\u0026 pip3 install neovim meson neovim-remote \u0026\u0026   ln -s /usr/local/bin/meson.py /usr/local/bin/meson"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "vim +PlugInstall +qall \u0026\u0026   cd ~/.vim/plugged/YouCompleteMe/ \u0026\u0026   ./install.py --clang-completer --system-libclang \u0026\u0026   mkdir -p /opt/vim_files \u0026\u0026   mv ~/.vim  /opt/vim_files \u0026\u0026 mv ~/.vimrc /opt/vim_files \u0026\u0026 mv ~/.ycm_extra_conf.py /opt/vim_files \u0026\u0026 mv ~/.tmux.conf /opt/vim_files/ \u0026\u0026   chmod -R 755 /opt/vim_files \u0026\u0026   dest=\"/opt\" \u0026\u0026   curl -Lo $dest/plantuml.jar https://bitbucket.org/tzunic/devcpp/raw/master/plantuml.jar \u0026\u0026   mkdir $dest/quickfix \u0026\u0026 curl -Lo $dest/quickfix/quickfix.zip https://github.com/quickfix/quickfix/archive/master.zip \u0026\u0026    unzip $dest/quickfix/quickfix.zip -d $dest/quickfix \u0026\u0026   cd $dest/quickfix/quickfix-master \u0026\u0026 ./bootstrap \u0026\u0026 ./configure --enable-static=yew --enable-shared=no \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   curl -L https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.tar.gz/download | tar xzf - -C $dest \u0026\u0026   cd $dest/boost_1_60_0/ \u0026\u0026   ./bootstrap.sh \u0026\u0026   ./b2 install --toolset=gcc  --address-model=64  \u0026\u0026   ldconfig \u0026\u0026   apt-get clean \u0026\u0026 rm -rf /opt/boost_1_60_0 $dest/quickfix /usr/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 curl -R -O http://www.lua.org/ftp/lua-5.3.3.tar.gz \u0026\u0026   tar xf lua-5.3.3.tar.gz \u0026\u0026 cd lua-5.3.3 \u0026\u0026 make linux \u0026\u0026 make install \u0026\u0026   cd .. \u0026\u0026 rm -rf lua-5.3.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/Andersbakken/rtags \u0026\u0026   cd rtags \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026  cmake -DRTAGS_NO_ELISP_FILES=1 ../ \u0026\u0026   make install \u0026\u0026 cd ../.. \u0026\u0026 rm -rf rtags"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fLo /root/.config/nvim/autoload/plug.vim --create-dirs       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \u0026\u0026       nvim +PlugInstall +UpdateRemotePlugins +qall --headless \u0026\u0026       mv /root/.config/nvim /opt/ \u0026\u0026 chmod -R 755 /opt/nvim"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}