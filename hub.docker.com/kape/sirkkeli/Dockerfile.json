{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:8.11.1-stretch",
      "SourceCode": "FROM node:8.11.1-stretch",
      "Platform": "",
      "From": {
        "Image": "node:8.11.1-stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y --no-install-recommends \tgit \tqt5-default \tlibqt5webkit5-dev \txvfb \txauth \tdefault-jre \tcurl unzip \txvfb tinywm \tfonts-ipafont-gothic xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic \tpython \tpython-pip \tpython-dev \tpython-setuptools \t\u0026\u0026 rm -rf /var/lib/apt/lists"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/etc \t\u0026\u0026 { \techo 'install: --no-document'; \techo 'update: --no-document'; \t} \u003e\u003e /usr/local/etc/gemrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUBY_MAJOR",
              "Value": "2.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.4.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBYGEMS_VERSION",
              "Value": "3.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\t\u0026\u0026 buildDeps=' \tbison \tlibgdbm-dev \truby \t' \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends $buildDeps netcat postgresql-client \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\t\u0026\u0026 wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \t\t\u0026\u0026 mkdir -p /usr/src/ruby \t\u0026\u0026 tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \t\u0026\u0026 rm ruby.tar.xz \t\t\u0026\u0026 cd /usr/src/ruby \t\t\u0026\u0026 { \techo '#define ENABLE_PATH_CHECK 0'; \techo; \tcat file.c; \t} \u003e file.c.new \t\u0026\u0026 mv file.c.new file.c \t\t\u0026\u0026 autoconf \t\u0026\u0026 ./configure --disable-install-doc --enable-shared \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 make install \t\t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps \t\u0026\u0026 cd / \t\u0026\u0026 rm -r /usr/src/ruby \t\t\u0026\u0026 gem update --system \"$RUBYGEMS_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEM_HOME",
              "Value": "/usr/local/bundle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_PATH",
              "Value": "\"$GEM_HOME\""
            },
            {
              "Key": "BUNDLE_BIN",
              "Value": "\"$GEM_HOME/bin\""
            },
            {
              "Key": "BUNDLE_SILENCE_ROOT_WARNING",
              "Value": "1"
            },
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "\"$GEM_HOME\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$BUNDLE_BIN:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \u0026\u0026 chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUNDLER_VERSION",
              "Value": "2.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install bundler --version \"$BUNDLER_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 \u003e /usr/bin/cc-test-reporter \u0026\u0026 chmod +x /usr/bin/cc-test-reporter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026 \techo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026 \tapt-get -yqq update \u0026\u0026 \tapt-get -yqq install google-chrome-stable \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_75` \u0026\u0026   wget -N http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip -P ~/ \u0026\u0026   unzip ~/chromedriver_linux64.zip -d ~/ \u0026\u0026   rm ~/chromedriver_linux64.zip \u0026\u0026   mv -f ~/chromedriver /usr/local/bin/chromedriver \u0026\u0026   chown root:root /usr/local/bin/chromedriver \u0026\u0026   chmod 0755 /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026   curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026   echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026   apt-get -yqq update \u0026\u0026 apt-get -yqq install google-cloud-sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":20.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCREEN_GEOMETRY",
              "Value": "\"1440x900x24\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROMEDRIVER_PORT",
              "Value": "4444"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROMEDRIVER_WHITELISTED_IPS",
              "Value": "\"127.0.0.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROMEDRIVER_URL_BASE",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROMEDRIVER_EXTRA_ARGS",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "4444"
          ]
        },
        {
          "CmdLine": [
            "irb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}