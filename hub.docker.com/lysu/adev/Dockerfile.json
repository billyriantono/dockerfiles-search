{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "lysu \u003csulifx@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install  -y     man     build-essential     cmake     curl     git     libboost-dev     libboost-filesystem-dev     libboost-program-options-dev     libboost-regex-dev     libboost-system-dev     libboost-thread-dev     libopenmpi-dev     openmpi-bin     openmpi-common      openssh-client     clang-3.7     clang-format     libomp-dev     vim     emacs     netcat     unzip     valgrind     net-tools     doxygen     tmux     cscope     global     gdb     zsh     xfonts-utils      locales     ctags     xdg-utils     python-dev     python-pip     python-setuptools     rubygems     curl     fontconfig     ca-certificates     pkg-config     autoconf     libxml2-dev     libglib2.0-dev     libgsl0-dev     libcurl4-gnutls-dev     ack-grep     psmisc     tcpdump     iputils-ping     libjansson-dev     libevent-dev     libssl-dev     flex     bison     aptitude     htop  \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp  \u0026\u0026 curl https://www.samba.org/ftp/ccache/ccache-3.2.5.tar.xz | tar xJ  \u0026\u0026 cd ccache-3.2.5  \u0026\u0026 ./configure  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 cd  \u0026\u0026 rm -r /tmp/ccache-3.2.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CCACHE_DIR",
              "Value": "/ccache"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/clang   clang   /usr/bin/clang-3.7 999  \u0026\u0026 update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.7 999  \u0026\u0026 update-alternatives --install /usr/bin/cc  cc  /usr/bin/clang-3.7 999  \u0026\u0026 update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-3.7 999"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "\"ccache clang\""
            },
            {
              "Key": "CXX",
              "Value": "\"ccache clang++\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone git://github.com/amix/vimrc.git ~/.vim_runtime     \u0026\u0026 sh ~/.vim_runtime/install_awesome_vimrc.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh     \u0026\u0026 cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc     \u0026\u0026 chsh -s /bin/zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/Valloric/YouCompleteMe ~/.vim_runtime/sources_non_forked/YouCompleteMe"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/.vim_runtime/sources_non_forked/YouCompleteMe \u0026\u0026 git submodule update --init --recursive \u0026\u0026 ./install.sh --clang-completer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/vim-scripts/gtags.vim.git ~/.vim_runtime/sources_non_forked/gtags.vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rhysd/vim-clang-format.git ~/.vim_runtime/sources_non_forked/vim-clang-format"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "my_configs.vim",
            "/root/.vim_runtime/my_configs.vim"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ycm_extra_conf.py",
            "/root/.ycm_extra_conf.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "tmux.conf",
            "/root/.tmux.conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-256color"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}