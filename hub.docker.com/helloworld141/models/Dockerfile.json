{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y     build-essential     autotools-dev     cmake     curl     git     g++     git     gfortran-multilib     libavcodec-dev     libavformat-dev     libjasper-dev     libjpeg-dev     libpng-dev     liblapacke-dev     libswscale-dev     libtiff-dev     pkg-config     libfreetype6-dev     libpng12-dev     libzmq3-dev     rsync     software-properties-common     unzip     wget     zlib1g-dev     libffi-dev     ca-certificates     less     procps     vim-tiny     python3     python3-dev     python3-pip     python3-setuptools     python3-virtualenv     python3-wheel     pkg-config     libopenblas-base     python3-numpy     python3-scipy     python3-h5py     python3-yaml     python3-pydot     python3-tk     python3-matplotlib     python3-pillow     automake     libtool     autoconf     subversion     libapr1 libaprutil1 libltdl-dev libltdl7 libserf-1-1 libsigsegv2 libsvn1 m4     openjdk-8-jdk     libpcre3-dev     nano \u0026\u0026 apt-get install -y --allow-downgrades --no-install-recommends \tlibcudnn7=7.0.5.15-1+cuda9.0 \tlibcudnn7-dev=7.0.5.15-1+cuda9.0 \u0026\u0026 pip3 install --upgrade pip \u0026\u0026 pip --no-cache-dir install \tPillow==5.1.0 \th5py==2.7.1 \tnumpy==1.14.2 \tpandas \tcython==0.28.2 \topencv-python \ttensorflow-gpu==1.5 \tkeras==2.1.6 \tmatplotlib \tscipy \tscikit-learn \timgaug \tIPython[all]     lxml \u0026\u0026 ln -s /usr/bin/pip3 /usr/bin/pip \u0026\u0026 ln -s /usr/bin/python3 /usr/bin/python \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 jupyter-notebook --generate-config \u0026\u0026 echo \"c = get_config()\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py \u0026\u0026 echo \"c.NotebookApp.ip = '*'\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py \u0026\u0026 echo \"c.NotebookApp.open_browser = False\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py \u0026\u0026 echo \"c.NotebookApp.port = 8080\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py \u0026\u0026 echo \"c.NotebookApp.password = 'sha1:d1a76026f118:82c006e5a506dd9c4c9f171050e3defaaca3a21e'\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py \u0026\u0026 wget https://github.com/google/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip \u0026\u0026 unzip protoc-3.2.0-linux-x86_64.zip -d protoc3 \u0026\u0026 cp -r protoc3/bin/* /usr/local/bin/ \u0026\u0026 cp -r protoc3/include/* /usr/local/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/bin:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/lib/x86_64-linux-gnu/:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QT_X11_NO_MITSHM",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        }
      ]
    }
  ]
}