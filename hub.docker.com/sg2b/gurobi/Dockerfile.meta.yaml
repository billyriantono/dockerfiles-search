MetaArgs: null
Stages:
- BaseName: python:2.7-alpine
  Commands:
  - Maintainer: Julien Deruere <deruere.julien@gmail.com>
    Name: maintainer
  - Env:
    - Key: GUROBI_INSTALL
      Value: /opt/gurobi
    Name: env
  - Env:
    - Key: GUROBI_HOME
      Value: $GUROBI_INSTALL/linux64
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GUROBI_HOME/bin
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${GUROBI_HOME}/lib
    Name: env
  - Key: GUROBI_MAJOR_VERSION
    Name: arg
    Value: "6.5"
  - Key: GUROBI_VERSION
    Name: arg
    Value: 6.5.2
  - Key: user
    Name: arg
    Value: gurobi
  - Key: group
    Name: arg
    Value: gurobi
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - CmdLine:
    - apk upgrade --update &&     apk add --update       bash                                                    ca-certificates                                         gzip                                                    curl                                                    wget                                          &&      addgroup
      -g ${gid} ${group} &&     adduser -h /home/gurobi -u ${uid} -G ${group} -s /bin/bash
      -D ${user} &&     export GLIBC_VERSION=2.23-r3 &&     apk --no-cache add ca-certificates
      &&     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub
      &&     wget -P /tmp https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk
      &&           wget -P /tmp https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk
      &&       wget -P /tmp https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk
      &&      apk add /tmp/glibc-${GLIBC_VERSION}.apk /tmp/glibc-bin-${GLIBC_VERSION}.apk
      /tmp/glibc-i18n-${GLIBC_VERSION}.apk &&                  /usr/glibc-compat/bin/localedef
      -i en_US -f UTF-8 en_US.UTF-8 &&     mkdir -p ${GUROBI_INSTALL} &&                                                                                          wget
      -P /home/gurobi/ http://packages.gurobi.com/${GUROBI_MAJOR_VERSION}/gurobi${GUROBI_VERSION}_linux64.tar.gz
      &&     tar xvfz /home/gurobi/gurobi${GUROBI_VERSION}_linux64.tar.gz  &&                                                       mv
      /gurobi652/linux64/ ${GUROBI_INSTALL} &&                                                                            mkdir
      ${GUROBI_INSTALL}/linux64/scripts &&                                                                             rm
      -rf ${GUROBI_HOME}/docs &&                     rm -rf ${GUROBI_HOME}/examples
      &&                 rm -rf ${GUROBI_HOME}/src &&                      rm -rf
      /var/cache/apk/* &&                        rm -rf /tmp/* &&                                  rm
      -rf /var/log/* &&                              rm -rf /gurobi652 &&                              rm
      /home/gurobi/gurobi${GUROBI_VERSION}_linux64.tar.gz &&     apk del                                            ca-certificates                                  gzip                                             curl                                             wget
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/docker-entrypoint.sh
    - ${GUROBI_HOME}/bin
  - CmdLine:
    - chown -R gurobi ${GUROBI_HOME} &&     chmod 755 ${GUROBI_HOME}/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: user
    User: gurobi
  - Name: workdir
    Path: /opt/gurobi/linux64/scripts
  - Name: volume
    Volumes:
    - /opt/gurobi/linux64/scripts
  - Name: volume
    Volumes:
    - /home/gurobi
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:2.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7-alpine
