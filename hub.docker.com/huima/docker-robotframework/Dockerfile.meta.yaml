MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: description
      Value: '"Docker image for the Robot Framework http://robotframework.org/ modified
        for Yleisradio use cases"'
    Name: label
  - Labels:
    - Key: usage
      Value: '" "'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - useradd automation --shell /bin/bash --create-home
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get -yqq  update     && apt-get install -y software-properties-common     &&
      add-apt-repository ppa:jonathonf/python-3.6     && apt-get -yqq update     &&
      apt-get install -y build-essential python3.6 python3.6-dev python3-pip python3.6-venv     &&
      python3.6 -m pip install pip --upgrade     && pip install --upgrade urllib3     &&
      pip install requests     && apt-get upgrade -yqq     && apt-get install -y     apt-utils     sudo     tzdata     xvfb     git     unzip     wget     curl     dbus-x11     xfonts-100dpi
      xfonts-75dpi xfonts-scalable xfonts-cyrillic     --no-install-recommends     &&
      apt-get clean autoclean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     &&
      echo "Europe/Helsinki" > /etc/timezone     && rm /etc/localtime     && dpkg-reconfigure
      -f noninteractive tzdata     && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub
      | apt-key add -     && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/
      stable main" >> /etc/apt/sources.list.d/google-chrome.list     && apt-get -yqq
      update     && apt-get -yqq install google-chrome-stable     && rm -rf /var/lib/apt/lists/*     &&
      chmod a+x /usr/bin/google-chrome     && CHROME_VERSION=$(google-chrome --version)     &&
      MAIN_VERSION=${CHROME_VERSION#Google Chrome } && MAIN_VERSION=${MAIN_VERSION%%.*}     &&
      echo "main version: $MAIN_VERSION"     && CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_$MAIN_VERSION`     &&
      echo "**********************************************************"     && echo
      "chrome version: $CHROME_VERSION"     && echo "chromedriver version: $CHROMEDRIVER_VERSION"     &&
      echo "**********************************************************"     && mkdir
      -p /opt/chromedriver-$CHROMEDRIVER_VERSION     && echo "directory for chromedriver
      set: /opt/chromedriver-$CHROMEDRIVER_VERSION"     && curl -sS -o /tmp/chromedriver_linux64.zip
      http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip     &&
      unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION      &&
      rm /tmp/chromedriver_linux64.zip     && echo "chromedriver copied to directory"     &&
      chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver     && echo "original
      file: /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver"     && echo "linked
      to file: /usr/local/bin/chromedriver"     && ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver
      /usr/local/bin/chromedriver'
    Name: run
    PrependShell: true
  - Env:
    - Key: DBUS_SESSION_BUS_ADDRESS
      Value: /dev/null
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :20.0
    Name: env
  - Env:
    - Key: SCREEN_GEOMETRY
      Value: '"1440x900x24"'
    Name: env
  - Env:
    - Key: CHROMEDRIVER_PORT
      Value: "4444"
    Name: env
  - Env:
    - Key: CHROMEDRIVER_WHITELISTED_IPS
      Value: '"127.0.0.1"'
    Name: env
  - Env:
    - Key: CHROMEDRIVER_URL_BASE
      Value: ''''''
    Name: env
  - Env:
    - Key: CHROMEDRIVER_EXTRA_ARGS
      Value: ''''''
    Name: env
  - Name: expose
    Ports:
    - "4444"
  - CmdLine:
    - update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1     &&
      update-alternatives  --set python /usr/bin/python3.6     && export PYTHONIOENCODING="utf-8"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/
  - CmdLine:
    - pip3 install -Ur /tmp/requirements.txt && rm /tmp/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install https://github.com/nottyo/robotframework-jsonlibrary/archive/master.zip
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run.sh
    - /usr/local/bin/run.sh
  - CmdLine:
    - chmod +x /usr/local/bin/run.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
