MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: Etopian Inc. <contact@etopian.com>
    Name: maintainer
  - Labels:
    - Key: devoply.type
      Value: '"site"'
    - Key: devoply.cms
      Value: '"drupal"'
    - Key: devoply.framework
      Value: '"drupal"'
    - Key: devoply.language
      Value: '"php"'
    - Key: devoply.require
      Value: '"mariadb etopian/nginx-proxy"'
    - Key: devoply.recommend
      Value: '"redis"'
    - Key: devoply.description
      Value: '"Drupal on Nginx and PHP-FPM with Drush."'
    - Key: devoply.name
      Value: '"Drupal"'
    Name: label
  - Env:
    - Key: NGINX_VERSION
      Value: nginx-1.9.3
    Name: env
  - Env:
    - Key: S6_OVERLAY_VERSION
      Value: v1.14.0.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/just-containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz
    - /tmp/s6-overlay.tar.gz
  - CmdLine:
    - tar xvfz /tmp/s6-overlay.tar.gz -C /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - root
    - /
  - CmdLine:
    - rm /etc/s6/services/s6-fdholderd/down
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add nginx && apk del nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add pcre openssl-dev pcre-dev zlib-dev wget build-base     ca-certificates
      git linux-headers &&     mkdir -p /tmp/src &&     cd /tmp/src &&     wget http://nginx.org/download/${NGINX_VERSION}.tar.gz
      &&     wget https://raw.githubusercontent.com/masterzen/nginx-upload-progress-module/master/ngx_http_uploadprogress_module.c
      &&     git clone https://github.com/masterzen/nginx-upload-progress-module /tmp/nginx-upload-progress-module
      &&     tar -zxvf ${NGINX_VERSION}.tar.gz &&     cd /tmp/src/${NGINX_VERSION}
      &&     ./configure         --conf-path=/etc/nginx/nginx.conf         --with-http_ssl_module         --with-http_gzip_static_module         --with-pcre         --with-file-aio         --with-http_flv_module         --with-http_realip_module         --with-http_mp4_module         --with-http_stub_status_module         --with-http_gunzip_module         --add-module=/tmp/nginx-upload-progress-module         --prefix=/etc/nginx         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --sbin-path=/usr/local/sbin/nginx
      &&     make &&     make install &&     apk del --purge build-base openssl-dev
      zlib-dev git &&     rm -rf /tmp/* &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update     && apk add bash less vim ca-certificates     php-fpm php-json
      php-zlib php-xml php-pdo php-phar php-openssl     php-pdo_mysql php-mysqli     php-gd
      php-iconv php-mcrypt     php-mysql php-curl php-opcache php-ctype php-apcu     php-intl
      php-bcmath php-dom php-xmlreader curl git     mysql-client php-pcntl php-posix
      apk-cron postfix musl
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/* && rm -rvf /etc/nginx && mkdir -p /etc/nginx
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/nginx/
    - /etc/nginx/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/php-fpm.conf
    - /etc/php/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/drush.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/postfix/main.cf
    - /etc/postfix/main.cf.new
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/postfix/setup_ses.sh
    - /setup_ses.sh
  - CmdLine:
    - mkdir -p /DATA/htdocs &&     mkdir -p /DATA/logs/{nginx,php-fpm} &&     mkdir
      -p /var/log/nginx/ &&     mkdir -p /var/log/php-fpm/ &&     chown -R nginx:nginx
      /var/log/nginx/ &&     mkdir -p /var/cache/nginx/microcache &&     chown -R
      nginx:nginx /var/cache/nginx/microcache &&     mkdir -p /var/www/localhost/htdocs
      &&     chown -R nginx:nginx /var/www/localhost/htdocs &&     chown -R  nginx:nginx
      /DATA &&     chmod +x /setup_ses.sh &&     chmod +x /drush.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/nginx:x:100:101:Linux User,,,:\/var\/www\/localhost\/htdocs:\/sbin\/nologin/nginx:x:100:101:Linux
      User,,,:\/var\/www\/localhost\/htdocs:\/bin\/bash/g' /etc/passwd &&     sed
      -i 's/nginx:x:100:101:Linux User,,,:\/var\/www\/localhost\/htdocs:\/sbin\/nologin/nginx:x:100:101:Linux
      User,,,:\/var\/www\/localhost\/htdocs:\/bin\/bash/g' /etc/passwd- &&     sed
      -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini &&     crontab
      -u nginx -l | { cat; echo "*/15 * * * * /usr/bin/drush --root=/DATA/htdocs core-cron
      --yes"; } | crontab -u nginx -
    Name: run
    PrependShell: true
  - Env:
    - Key: SES_HOST
      Value: '"email-smtp.us-east-1.amazonaws.com"'
    - Key: SES_PORT
      Value: '"587"'
    - Key: SES_USER
      Value: '""'
    - Key: SES_SECRET
      Value: '""'
    - Key: TERM
      Value: '"xterm"'
    - Key: DB_HOST
      Value: '"172.17.42.1"'
    - Key: DB_USER
      Value: '""'
    - Key: DB_PASS
      Value: '""'
    - Key: DB_NAME
      Value: '""'
    Name: env
  - CmdLine:
    - /setup_ses.sh && /drush.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /DATA
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
