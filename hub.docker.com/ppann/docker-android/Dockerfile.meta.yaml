MetaArgs: null
Stages:
- BaseName: ubuntu:14.04.4
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: ANDROID_HOME
      Value: /opt/android-sdk-linux
    - Key: NODE_VERSION
      Value: 7.9.0
    - Key: NPM_VERSION
      Value: 4.2.0
    - Key: IONIC_VERSION
      Value: 2.2.2
    - Key: CORDOVA_VERSION
      Value: 6.5.0
    - Key: PHANTOMJS_VERSION
      Value: 1.9.8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y apt-transport-https build-essential
      git wget curl unzip ruby &&     curl --retry 3 -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"
      &&     tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1
      &&     rm "node-v$NODE_VERSION-linux-x64.tar.gz" &&     npm install -g npm@"$NPM_VERSION"
      &&     npm install -g cordova@"$CORDOVA_VERSION" ionic@"$IONIC_VERSION" &&     npm
      install -g jscs &&     npm install -g eslint &&     npm install -g bower &&     npm
      install -g gulp &&     npm cache clear &&     gem install sass &&     npm rebuild
      node-sass &&     npm install -g requirements
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes build-essential chrpath libssl-dev libxft-dev
      &&     apt-get install -y --force-yes libfreetype6 libfreetype6-dev &&     apt-get
      install -y --force-yes libfontconfig1 libfontconfig1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ &&     export PHANTOM_JS="phantomjs-$PHANTOMJS_VERSION-linux-x86_64" &&     wget
      https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOM_JS.tar.bz2 &&     sudo
      tar xvjf $PHANTOM_JS.tar.bz2 &&     mv $PHANTOM_JS /usr/local/share &&     ln
      -sf /usr/local/share/$PHANTOM_JS/bin/phantomjs /usr/local/bin &&     phantomjs
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y -q python-software-properties software-properties-common  &&     add-apt-repository
      ppa:webupd8team/java -y &&     echo oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true | /usr/bin/debconf-set-selections &&     apt-get update && apt-get
      -y install oracle-java8-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ANDROID_HOME="${ANDROID_HOME}" >> /etc/environment &&     dpkg --add-architecture
      i386 &&     apt-get update &&     apt-get install -y --force-yes expect ant
      wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod &&     apt-get
      clean &&     apt-get autoclean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
      &&     tar xzf android-sdk_r24.4.1-linux.tgz &&     rm android-sdk_r24.4.1-linux.tgz
      &&     (echo y | android-sdk-linux/tools/android -s update sdk --no-ui --filter
      platform-tools,tools -a ) &&     (echo y | android-sdk-linux/tools/android -s
      update sdk --no-ui --filter extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository
      -a) &&     (echo y | android-sdk-linux/tools/android -s update sdk --no-ui --filter
      build-tools-24.0.3,android-25 -a) &&     chown -R root. /opt
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:/opt/tools
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - ln -s /usr/lib/jvm/java-8-oracle /usr/lib/jvm/default-java
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global http.sslVerify false
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:14.04.4
  Name: ""
  Platform: ""
  SourceCode: FROM     ubuntu:14.04.4
