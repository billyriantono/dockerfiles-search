{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.4",
      "SourceCode": "FROM     ubuntu:14.04.4",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.4"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "7.9.0"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "4.2.0"
            },
            {
              "Key": "IONIC_VERSION",
              "Value": "2.2.2"
            },
            {
              "Key": "CORDOVA_VERSION",
              "Value": "6.5.0"
            },
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "1.9.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y apt-transport-https build-essential git wget curl unzip ruby \u0026\u0026     curl --retry 3 -SLO \"http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \u0026\u0026     tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \u0026\u0026     rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" \u0026\u0026     npm install -g npm@\"$NPM_VERSION\" \u0026\u0026     npm install -g cordova@\"$CORDOVA_VERSION\" ionic@\"$IONIC_VERSION\" \u0026\u0026     npm install -g jscs \u0026\u0026     npm install -g eslint \u0026\u0026     npm install -g bower \u0026\u0026     npm install -g gulp \u0026\u0026     npm cache clear \u0026\u0026     gem install sass \u0026\u0026     npm rebuild node-sass \u0026\u0026     npm install -g requirements"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --force-yes build-essential chrpath libssl-dev libxft-dev \u0026\u0026     apt-get install -y --force-yes libfreetype6 libfreetype6-dev \u0026\u0026     apt-get install -y --force-yes libfontconfig1 libfontconfig1-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026     export PHANTOM_JS=\"phantomjs-$PHANTOMJS_VERSION-linux-x86_64\" \u0026\u0026     wget https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOM_JS.tar.bz2 \u0026\u0026     sudo tar xvjf $PHANTOM_JS.tar.bz2 \u0026\u0026     mv $PHANTOM_JS /usr/local/share \u0026\u0026     ln -sf /usr/local/share/$PHANTOM_JS/bin/phantomjs /usr/local/bin \u0026\u0026     phantomjs --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y -q python-software-properties software-properties-common  \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get update \u0026\u0026 apt-get -y install oracle-java8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ANDROID_HOME=\"${ANDROID_HOME}\" \u003e\u003e /etc/environment \u0026\u0026     dpkg --add-architecture i386 \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --force-yes expect ant wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz \u0026\u0026     tar xzf android-sdk_r24.4.1-linux.tgz \u0026\u0026     rm android-sdk_r24.4.1-linux.tgz \u0026\u0026     (echo y | android-sdk-linux/tools/android -s update sdk --no-ui --filter platform-tools,tools -a ) \u0026\u0026     (echo y | android-sdk-linux/tools/android -s update sdk --no-ui --filter extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository -a) \u0026\u0026     (echo y | android-sdk-linux/tools/android -s update sdk --no-ui --filter build-tools-24.0.3,android-25 -a) \u0026\u0026     chown -R root. /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:/opt/tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/jvm/java-8-oracle /usr/lib/jvm/default-java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global http.sslVerify false"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}