{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Chris Spicer \u003cgit@cspicer.net\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CLIENT_VERSION",
              "Value": "1.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VERSION_MANIFEST_URL",
              "Value": "https://launchermeta.mojang.com/mc/game/version_manifest.json"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache     git     build-base     cmake     libpng-dev     libjpeg-turbo-dev     boost-dev     boost-iostreams     boost-system     boost-filesystem     boost-program_options   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1     https://github.com/mapcrafter/mapcrafter.git     /tmp/mapcrafter   \u0026\u0026 cd /tmp/mapcrafter   \u0026\u0026 cmake .   \u0026\u0026 make install   \u0026\u0026 rm -rf /tmp/mapcrafter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual     build-deps     curl     jq   \u0026\u0026 echo \"## Retrieving minecraft version manifest...\"   \u0026\u0026 curl --silent     --show-error     --location ${VERSION_MANIFEST_URL}     --output /tmp/version_manifest.json   \u0026\u0026 eval $(jq -r '.versions[] | select(.id|contains(\"'\"$CLIENT_VERSION\"'\"))?|     {version: .url} | @sh \"CLIENT_JSON_URL=\\(.version)\"'     /tmp/version_manifest.json)   \u0026\u0026 echo \"## Retrieving minecraft client URL...\"   \u0026\u0026 curl --silent     --show-error     --location \"$CLIENT_JSON_URL\"     --output /tmp/client.json   \u0026\u0026 eval $(jq -r '@sh \"CLIENT_URL=\\(.downloads .client .url)\"' /tmp/client.json)   \u0026\u0026 echo \"## Retrieving minecraft client...\"   \u0026\u0026 curl --silent     --show-error     --location \"$CLIENT_URL\"     --output /tmp/client.jar   \u0026\u0026 echo \"## Extracting textures...\"   \u0026\u0026 mapcrafter_textures.py /tmp/client.jar /usr/local/share/mapcrafter/textures   \u0026\u0026 echo \"## Cleaning up...\"   \u0026\u0026 apk del build-deps   \u0026\u0026 rm /tmp/*.json /tmp/client.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mapcrafter"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}