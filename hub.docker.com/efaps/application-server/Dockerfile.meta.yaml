MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Jan Moxter <jan.moxter@innobix.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r efaps && useradd -r -g efaps efaps
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install openjdk-8-jdk -y --no-install-recommends      && apt-get install
      curl -y --no-install-recommends      && apt-get install tar -y --no-install-recommends
    Name: run
    PrependShell: true
  - Env:
    - Key: JETTY_HOME
      Value: /opt/jetty
    Name: env
  - Env:
    - Key: PATH
      Value: $JETTY_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$JETTY_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $JETTY_HOME
  - Env:
    - Key: JETTY_VERSION
      Value: 9.3.14.v20161028
    Name: env
  - Env:
    - Key: JETTY_TGZ_URL
      Value: https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$JETTY_VERSION/jetty-distribution-$JETTY_VERSION.tar.gz
    Name: env
  - Env:
    - Key: JETTY_GPG_KEYS
      Value: B59B67FD7904984367F931800818D9D68FB67BAC        5DE533CB43DAF8BC3E372283E7AE839CD7C58886
    Name: env
  - CmdLine:
    - set -xe     && curl -SL "$JETTY_TGZ_URL" -o jetty.tar.gz     && curl -SL "$JETTY_TGZ_URL.asc"
      -o jetty.tar.gz.asc         && export GNUPGHOME="$(mktemp -d)"         && for
      key in $JETTY_GPG_KEYS; do                 gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key"; done     && gpg --batch --verify jetty.tar.gz.asc jetty.tar.gz     &&
      rm -r "$GNUPGHOME"     && tar -xvf jetty.tar.gz --strip-components=1 --directory
      "$JETTY_HOME"     && rm -fr demo-base javadoc     && rm jetty.tar.gz*
    Name: run
    PrependShell: true
  - Env:
    - Key: JETTY_BASE
      Value: /opt/web/base
    Name: env
  - CmdLine:
    - mkdir -p "$JETTY_BASE"/logs     && mkdir -p "$JETTY_BASE"/webapps     && mkdir
      -p /opt/data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $JETTY_BASE
  - CmdLine:
    - java -jar "$JETTY_HOME/start.jar" --add-to-startd=http,https,plus,jaas,deploy,jndi,server,ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo efaps {  > "$JETTY_BASE/etc/login.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo org.efaps.jaas.efaps.UserLoginModule >> "$JETTY_BASE/etc/login.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo SUFFICIENT >> "$JETTY_BASE/etc/login.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo debug=true >> "$JETTY_BASE/etc/login.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo jaasSystem="\""eFaps"\";" >> "$JETTY_BASE/etc/login.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo "};" >> "$JETTY_BASE/etc/login.conf"
    Name: run
    PrependShell: true
  - Env:
    - Key: JETTY_RUN
      Value: /run/jetty
    Name: env
  - Env:
    - Key: JETTY_STATE
      Value: $JETTY_RUN/jetty.state
    Name: env
  - Env:
    - Key: TMPDIR
      Value: /tmp/jetty
    Name: env
  - CmdLine:
    - set -xe     && mkdir -p "$JETTY_RUN" "$TMPDIR"     && chown -R efaps:efaps "$JETTY_HOME"
      "$JETTY_RUN" "$TMPDIR" /opt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: user
    User: efaps
  - Name: expose
    Ports:
    - "8080"
    - "8443"
  - Name: volume
    Volumes:
    - /opt/web/base/webapps
  - Name: volume
    Volumes:
    - /opt/web/base/logs
  - Name: volume
    Volumes:
    - /opt/data
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - java
    - -Djava.io.tmpdir=/tmp/jetty
    - -jar
    - /opt/jetty/start.jar
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
