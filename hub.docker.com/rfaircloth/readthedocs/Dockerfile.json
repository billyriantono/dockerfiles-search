{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7-stretch",
      "SourceCode": "FROM python:3.7-stretch",
      "Platform": "",
      "From": {
        "Image": "python:3.7-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "'Ryan Faircloth \u003crfaircloth@splunk.com\u003e'"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo deb http://deb.debian.org/debian stretch-backports main\u003e/etc/apt/sources.list.d/backports.list \u0026\u0026     apt-get update \u0026\u0026     apt-get upgrade -t stretch-backports git -y \u0026\u0026     apt-get install -y \u0026\u0026     pip3 install uwsgi \u0026\u0026     apt-get install -y locales gettext build-essential git             libxml2-dev libxslt1-dev zlib1g-dev postgresql-client             texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra \u0026\u0026    rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./requirements/",
            "/opt/app/readthedocs/requirements"
          ]
        },
        {
          "CmdLine": [
            "pip3 install -r /opt/app/readthedocs/requirements/pip.txt \u0026\u0026     pip3 install -r /opt/app/readthedocs/requirements/local-docs-build.txt \u0026\u0026     pip3 install -r /opt/app/readthedocs/requirements/deploy.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./readthedocs/",
            "/opt/app/readthedocs/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./media/",
            "/opt/app/media/"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "APPDIR",
              "Value": "/opt/app/readthedocs"
            },
            {
              "Key": "DJANGO_SETTINGS_MODULE",
              "Value": "readthedocs.settings.container"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "uwsgi.ini",
            "setup.py",
            "setup.cfg",
            "manage.py",
            "tasks.py",
            "django-rtd-create-users.py",
            "/opt/app/"
          ]
        },
        {
          "CmdLine": [
            "cd /opt/app/ \u0026\u0026     mkdir -p /opt/app/logs \u0026\u0026     mkdir -p /opt/app/user_builds \u0026\u0026     mkdir -p /opt/app/templates_custom \u0026\u0026     python manage.py makemessages --all \u0026\u0026     python manage.py compilemessages \u0026\u0026     python manage.py collectstatic --no-input"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --gecos 'py' -u 2000 --disabled-password py \u0026\u0026   chown -R py:py /opt/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "user",
          "User": "py"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "/opt/app/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}