MetaArgs: null
Stages:
- BaseName: orangeopensource/concourse:base-debian
  Commands:
  - Key: terraform_version
    Name: arg
    Value: '"0.11.14"'
  - Key: PROVIDER_CLOUDFOUNDRY_BRANCH
    Name: arg
    Value: '"rework-back"'
  - Key: PROVIDER_CREDHUB_VERSION
    Name: arg
    Value: '"0.12.1"'
  - Key: PROVIDER_UAA_VERSION
    Name: arg
    Value: '"0.9.0"'
  - Key: JSON2HCL_VERSION
    Name: arg
    Value: '"0.0.6"'
  - Key: PROVIDER_CFSECURITY_VERSION
    Name: arg
    Value: '"0.1.6"'
  - Key: PROVIDER_CLOUDFOUNDRY_LEGACY_TERRAFORM
    Name: arg
    Value: '"1"'
  - Key: TERRAFORM_RESTRICTOR_VERSION
    Name: arg
    Value: '"v1.0.0"'
  - CmdLine:
    - wget -qO /tmp/terraform.zip "https://releases.hashicorp.com/terraform/${terraform_version}/terraform_${terraform_version}_linux_amd64.zip"
      &&     unzip /tmp/terraform.zip -d /usr/local/bin &&     chmod +x /usr/local/bin/terraform
      &&     rm /tmp/terraform.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - export GOPATH=/tmp/go  && mkdir -p "${BUILDPATH:=/tmp}"  && curl -fLSs "https://github.com/mevansam/terraform-provider-cf/archive/${PROVIDER_CLOUDFOUNDRY_BRANCH}.tar.gz"
      |    tar xz -C "${BUILDPATH}"  && cd "${BUILDPATH}/terraform-provider-cf-${PROVIDER_CLOUDFOUNDRY_BRANCH}"  &&
      if test "${PROVIDER_CLOUDFOUNDRY_LEGACY_TERRAFORM}" -eq 1; then sed -i 's%github.com/hashicorp/terraform
      v0.12.0%github.com/hashicorp/terraform v0.11.14%g' go.mod; fi   && go mod download  &&
      CGO_ENABLED=0 /usr/local/go/bin/go build -a -ldflags="-s -w"  && install -D
      terraform-provider-cloudfoundry ~/.terraform.d/plugins/linux_amd64/terraform-provider-cloudfoundry  &&
      rm -fr "$GOPATH" "${HOME}/.cache/go-build"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fLSs "https://github.com/orange-cloudfoundry/terraform-provider-credhub/releases/download/v${PROVIDER_CREDHUB_VERSION}/terraform-provider-credhub_linux_amd64"
      |    install -D -s /dev/stdin ~/.terraform.d/plugins/linux_amd64/terraform-provider-credhub
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fLSs "https://github.com/orange-cloudfoundry/terraform-provider-uaa/releases/download/${PROVIDER_UAA_VERSION}/terraform-provider-uaa_linux_amd64"
      |    install -D -s /dev/stdin ~/.terraform.d/plugins/linux_amd64/terraform-provider-uaa
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "$(curl -fsSL https://raw.github.com/orange-cloudfoundry/terraform-restrictor/master/bin/install.sh)"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fSsL "https://github.com/kvz/json2hcl/releases/download/v${JSON2HCL_VERSION}/json2hcl_v${JSON2HCL_VERSION}_linux_amd64"
      |    install -D -s /dev/stdin /usr/local/bin/json2hcl
    Name: run
    PrependShell: true
  - CmdLine:
    - true  && mkdir -p "${BUILDPATH:=/tmp/}"  && curl -fLSs "https://github.com/orange-cloudfoundry/cf-security-entitlement/archive/v${PROVIDER_CFSECURITY_VERSION}.tar.gz"
      |     tar xz -C "${BUILDPATH}"  && cd "${BUILDPATH}/cf-security-entitlement-${PROVIDER_CFSECURITY_VERSION}/"  &&
      if test "${PROVIDER_CLOUDFOUNDRY_LEGACY_TERRAFORM}" -eq 1; then sed -i 's%github.com/hashicorp/terraform
      v0.12.0%github.com/hashicorp/terraform v0.11.14%g' go.mod; fi   && go mod download  &&
      cd terraform-provider-cfsecurity  && /usr/local/go/bin/go build -ldflags="-s
      -w"  && install -D terraform-provider-cfsecurity ~/.terraform.d/plugins/linux_amd64/terraform-provider-cfsecurity  &&
      rm -fr "${HOME}/.cache/go-build" ${BUILDPATH}/cf-security-entitlement-${PROVIDER_CFSECURITY_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&   apt-get install -y gnupg python3-ldap3  &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -  && apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/yarnpkg/yarn/releases/download/v1.17.3/yarn_1.17.3_all.deb
      && dpkg -i yarn_1.17.3_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - yarnpkg --version
    Name: run
    PrependShell: true
  - CmdLine:
    - yarnpkg global add terraform-plan-parser
    Name: run
    PrependShell: true
  - CmdLine:
    - go clean -modcache
    Name: run
    PrependShell: true
  From:
    Image: orangeopensource/concourse:base-debian
  Name: ""
  Platform: ""
  SourceCode: FROM orangeopensource/concourse:base-debian
