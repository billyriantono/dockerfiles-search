MetaArgs: null
Stages:
- BaseName: 11notes/node:stable
  Commands:
  - Env:
    - Key: SSL_RSA_BITS
      Value: "4096"
    Name: env
  - Env:
    - Key: SSL_ROOT
      Value: /api/ssl
    Name: env
  - Env:
    - Key: CERTBOT_VERSION
      Value: 1.0.0
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p /certbot/ssl         && mkdir -p /certbot/www         && mkdir -p /certbot/var         &&
      mkdir -p /certbot/etc         && mkdir -p /certbot/log         && mkdir -p /api/js         &&
      mkdir -p /api/ssl         && mkdir -p /api/etc         && npm install express
      http-auth body-parser nocache --prefix /api/js         && apk add --update --no-cache             curl
      openssl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./source/api/js
    - /api/js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./source/api/etc
    - /api/etc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./source/healthcheck.sh
    - /usr/local/bin/healthcheck.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./source/entrypoint.sh
    - /usr/local/bin/entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/healthcheck.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0644 /api/etc/auth.htpasswd
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/certbot
  - Env:
    - Key: PATH
      Value: /opt/certbot/venv/bin:$PATH
    Name: env
  - CmdLine:
    - apk --no-cache add                 python3 python3-dev             && ln -s
      /usr/bin/python3 /usr/bin/python             && ln -s /usr/bin/pydoc3 /usr/bin/pydoc             &&
      ln -s /usr/bin/pip3 /usr/bin/pip             && ln -s /usr/bin/python3-config
      /usr/bin/python-config             && pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p src             && wget -O certbot-${CERTBOT_VERSION}.tar.gz https://github.com/certbot/certbot/archive/v${CERTBOT_VERSION}.tar.gz             &&
      tar xf certbot-${CERTBOT_VERSION}.tar.gz             && cp certbot-${CERTBOT_VERSION}/CHANGELOG.md
      certbot-${CERTBOT_VERSION}/README.rst src/             && cp certbot-${CERTBOT_VERSION}/letsencrypt-auto-source/pieces/dependency-requirements.txt
      .             && cp -r certbot-${CERTBOT_VERSION}/tools tools             &&
      cp -r certbot-${CERTBOT_VERSION}/acme src/acme             && cp -r certbot-${CERTBOT_VERSION}/certbot
      src/certbot             && rm -rf certbot-${CERTBOT_VERSION}.tar.gz certbot-${CERTBOT_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - cat dependency-requirements.txt | tools/strip_hashes.py > unhashed_requirements.txt             &&
      cat tools/dev_constraints.txt unhashed_requirements.txt | tools/merge_requirements.py
      > docker_constraints.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .certbot-deps                 libffi                 libssl1.1                 openssl                 ca-certificates                 binutils
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps                 gcc                 linux-headers                 openssl-dev                 musl-dev                 libffi-dev             &&
      pip install -r dependency-requirements.txt             && pip install --no-cache-dir
      --no-deps                 --editable src/acme                 --editable src/certbot             &&
      apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "CI/CD{{$(certbot --version 2>&1)}}"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R node:node         /api         /certbot         /opt/certbot
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /certbot/ssl
    - /certbot/www
    - /api/etc
  - Health:
      Test:
      - CMD-SHELL
      - /usr/local/bin/healthcheck.sh || exit 1
    Name: healthcheck
  - Name: user
    User: node
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: 11notes/node:stable
  Name: ""
  Platform: ""
  SourceCode: FROM 11notes/node:stable
