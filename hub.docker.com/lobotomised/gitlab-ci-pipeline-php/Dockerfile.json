{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4-buster",
      "SourceCode": "FROM php:7.4-buster",
      "Platform": "",
      "From": {
        "Image": "php:7.4-buster"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHP_USER",
              "Value": "php"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$PHP_USER"
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos '' $PHP_USER \u0026\u0026  echo \"$PHP_USER ALL = ( ALL ) NOPASSWD: ALL\" \u003e\u003e /etc/sudoer \u0026\u0026  chown -R $PHP_USER:$PHP_USER /var/www $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yqq --no-install-recommends       apt-transport-https       autoconf       build-essential       ca-certificates       dpkg-dev       file       g++       gcc       git       gnupg2       libc-dev       libc-client-dev       lsb-release       make       openssl       openssh-client       pkg-config       python       python-dev       re2c       rsync       sudo       xz-utils       unzip       zip       zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yqq --no-install-recommends       default-libmysqlclient-dev       libbz2-dev       libfreetype6-dev       libicu-dev       libpq-dev       libsasl2-dev       libssl-dev       libxml2-dev       libzip-dev\u0026\u0026  docker-php-ext-install       bcmath       bz2       calendar       exif       intl       mysqli       opcache       pcntl       pdo_mysql       pgsql       soap       xmlrpc       zip \u0026\u0026  pecl channel-update pecl.php.net \u0026\u0026  pecl upgrade \u0026\u0026  pecl install redis \u0026\u0026  pecl install xdebug \u0026\u0026  docker-php-ext-enable xdebug \u0026\u0026  docker-php-ext-enable redis \u0026\u0026  docker-php-source delete \u0026\u0026  echo 'opcache.enable=1'; \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.revalidate_freq=0' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.validate_timestamps=1' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.max_accelerated_files=10000' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.memory_consumption=192' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.max_wasted_percentage=10' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.interned_strings_buffer=16' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026  echo 'opcache.fast_shutdown=1' \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "./vendor/bin:/composer/vendor/bin:/root/.yarn/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026  composer global require \"hirak/prestissimo:^0.3\" \"laravel/envoy:^1.0\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash - \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -yqq --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false       apt-transport-https       autoconf       build-essential       dpkg-dev       file       g++       gcc       gnupg2       libc-dev       libc-client-dev       lsb-release       libsasl2-dev       make       python-dev       re2c       rsync       xz-utils \u0026\u0026  apt-get autoremove -yqq --purge \u0026\u0026  apt-get autoclean -yqq \u0026\u0026  apt-get clean \u0026\u0026  rm -rf /var/cache/apt/       /tmp/*       /var/lib/apt/lists/*       /var/log/*       /var/tmp/*       /usr/share/doc       /usr/share/doc-base       /usr/share/gnome/help/*/*       /usr/share/groff/*       /usr/share/info/*       /usr/share/linda/*       /usr/share/lintian/overrides/*       /usr/share/locale/*       /usr/share/man/*       /usr/share/omf/*/*-*.emf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}