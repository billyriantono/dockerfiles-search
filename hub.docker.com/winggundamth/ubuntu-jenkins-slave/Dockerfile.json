{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "winggundamth/ubuntu-java:xenial",
      "SourceCode": "FROM winggundamth/ubuntu-java:xenial",
      "Platform": "",
      "From": {
        "Image": "winggundamth/ubuntu-java:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Jirayut Nimsaeng \u003cw [at] winginfotech.net\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "FROM_BASE",
              "Value": "xenial-20160809"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "APT_CACHER_NG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DEVPI_SERVER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "False"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "[ -n \"$APT_CACHER_NG\" ] \u0026\u0026       echo \"Acquire::http::Proxy \\\"$APT_CACHER_NG\\\";\"       \u003e /etc/apt/apt.conf.d/11proxy || true;     [ -n \"$DEVPI_SERVER\" ] \u0026\u0026       mkdir -p ~/.pip \u0026\u0026       echo \"[global]\\nindex-url = $DEVPI_SERVER\\ntrusted-host = $(echo $DEVPI_SERVER | awk -F/ '{print $3}' | awk -F: '{print $1}')\\n\" \u003e\u003e ~/.pip/pip.conf || true;     apt-get update \u0026\u0026     apt-get install -y git python python-dev curl wget git build-essential       openssh-server vim tmux rsync byobu libssl-dev libffi-dev \u0026\u0026     curl https://bootstrap.pypa.io/get-pip.py | python \u0026\u0026     pip install ansible boto docker-py dnspython shade \u0026\u0026     wget -O /usr/local/bin/docker.tgz       https://get.docker.com/builds/Linux/x86_64/docker-1.12.0.tgz \u0026\u0026     wget -O /usr/local/bin/docker-compose       https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` \u0026\u0026     wget -O /usr/local/bin/docker-machine       https://github.com/docker/machine/releases/download/v0.8.0/docker-machine-`uname -s`-`uname -m` \u0026\u0026     tar xvfz /usr/local/bin/docker.tgz -C /usr/local/bin/ --strip=1 \u0026\u0026     chmod +x /usr/local/bin/docker-compose /usr/local/bin/docker-machine \u0026\u0026     apt-get remove --purge --auto-remove -y       build-essential ifupdown iproute2 isc-dhcp-client isc-dhcp-common       libatm1 libisc-export160 libmnl0 libxtables11 manpages netbase       libssl-dev libffi-dev \u0026\u0026     apt-get -y autoremove \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /etc/apt/apt.conf.d/11proxy /root/.cache       /root/.pip /usr/local/bin/docker.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/required     pam_loginuid.so/optional     pam_loginuid.so/g'       /etc/pam.d/sshd \u0026\u0026     echo 'export LC_ALL=en_US.UTF-8' \u003e /root/.bash_profile \u0026\u0026     useradd -s /bin/bash -d $JENKINS_HOME -m jenkins \u0026\u0026     mkdir -p /var/run/sshd /root/.ssh $JENKINS_HOME/.ssh \u0026\u0026     touch $JENKINS_HOME/.ssh/authorized_keys /root/.ssh/authorized_keys \u0026\u0026     chown -R root:root /root/.ssh \u0026\u0026     chown -R jenkins:jenkins $JENKINS_HOME/.ssh \u0026\u0026     chmod 700 $JENKINS_HOME/.ssh /root/.ssh \u0026\u0026     chmod 600 $JENKINS_HOME/.ssh/authorized_keys /root/.ssh/authorized_keys \u0026\u0026     echo '[ssh_connection]' \u003e\u003e $JENKINS_HOME/.ansible.cfg \u0026\u0026     echo 'ssh_args =' \u003e\u003e $JENKINS_HOME/.ansible.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}