{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "winggundamth/ubuntu-base:xenial",
      "SourceCode": "FROM winggundamth/ubuntu-base:xenial",
      "Platform": "",
      "From": {
        "Image": "winggundamth/ubuntu-base:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Jirayut Nimsaeng (Dear) \u003cjirayut.n@kaidee.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "FROM_BASE",
              "Value": "xenial-20160809"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "APT_CACHER_NG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DEVPI_SERVER",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "[ -n \"$APT_CACHER_NG\" ] \u0026\u0026       echo \"Acquire::http::Proxy \\\"$APT_CACHER_NG\\\";\"       \u003e /etc/apt/apt.conf.d/11proxy || true;     [ -n \"$DEVPI_SERVER\" ] \u0026\u0026       mkdir -p ~/.pip \u0026\u0026       echo \"[global]\\nindex-url = $DEVPI_SERVER\\ntrusted-host = $(echo $DEVPI_SERVER | awk -F/ '{print $3}' | awk -F: '{print $1}')\\n\" \u003e\u003e ~/.pip/pip.conf || true;     apt-get update \u0026\u0026     apt-get install -y curl git python3 libpython3.5 python3-dev       build-essential \u0026\u0026     curl https://bootstrap.pypa.io/get-pip.py | python3 \u0026\u0026     pip install uwsgi \u0026\u0026     apt-get remove --purge --auto-remove -y       build-essential ifupdown iproute2 isc-dhcp-client isc-dhcp-common       libatm1 libisc-export160 libmnl0 libxtables11 manpages netbase       curl python3-dev \u0026\u0026     apt-get -y autoremove \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /usr/lib/x86_64-linux-gnu/libfakeroot /var/lib/apt/lists/*       /etc/apt/apt.conf.d/11proxy /root/.cache /root/.pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WEB_USER",
              "Value": "web"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$WEB_USER"
            },
            {
              "Key": "WEB_HOME",
              "Value": "/home/$WEB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "build-files",
            "/build-files"
          ]
        },
        {
          "CmdLine": [
            "useradd --shell /bin/bash --home-dir $WEB_HOME --create-home       --base-dir $WEB_HOME $WEB_USER \u0026\u0026     mkdir -p $WEB_HOME/.ssh \u0026\u0026     chmod 700 /$WEB_HOME/.ssh \u0026\u0026     chown $WEB_USER:$WEB_USER $WEB_HOME/.ssh \u0026\u0026     mv /build-files/uwsgi.ini /etc/uwsgi.ini \u0026\u0026     mkdir -p /var/log/uwsgi \u0026\u0026     rm -rf /build-files"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$WEB_HOME"
        },
        {
          "Name": "user",
          "User": "$WEB_USER"
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "uwsgi"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/etc/uwsgi.ini"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}