{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7-jessie",
      "SourceCode": "FROM python:2.7-jessie",
      "Platform": "",
      "From": {
        "Image": "python:2.7-jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -yqq \u0026\u0026     apt-get install -yqq     curl     git     locales     python-pip     wget     perl software-properties-common \u0026\u0026     apt-get clean \u0026\u0026         echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     locale-gen en_US.utf8 \u0026\u0026     /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" \u0026\u0026     apt-get update \u0026\u0026     echo oracle-java8-set-default shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get -y install oracle-java8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVAPATH",
              "Value": "/usr/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PERL_PATH",
              "Value": "/usr/bin/perl"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "add-apt-repository \"deb http://cran.rstudio.com/bin/linux/debian jessie-cran34/\" \u0026\u0026     apt-get update \u0026\u0026     apt-get -y --force-yes install -t jessie-cran34 r-base \u0026\u0026     R -e \"install.packages(c('MASS','DPpackage'),repos='https://cloud.r-project.org')\" \u0026\u0026     R -e \"source('https://bioconductor.org/biocLite.R');BiocInstaller::biocLite(c('DNAcopy'))\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "R_PATH",
              "Value": "/usr/bin/R"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "R_LIBS_PATH",
              "Value": "/usr/local/lib/R/site-library"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2 \u0026\u0026     tar -vxjf samtools-1.9.tar.bz2 \u0026\u0026     rm samtools-1.9.tar.bz2 \u0026\u0026     cd samtools-1.9 \u0026\u0026     make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SAMTOOLS_PATH",
              "Value": "/opt/samtools-1.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://github.com/arq5x/bedtools2/releases/download/v2.27.1/bedtools-2.27.1.tar.gz \u0026\u0026     tar -xf bedtools-2.27.1.tar.gz \u0026\u0026     rm bedtools-2.27.1.tar.gz \u0026\u0026     cd bedtools2 \u0026\u0026     make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BEDTOOLS_PATH",
              "Value": "/opt/bedtools2/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://github.com/broadinstitute/picard/releases/download/2.9.0/picard.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PICARD_PATH",
              "Value": "/opt/picard.jar"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "_JAVA_OPTIONS",
              "Value": "-Djava.io.tmpdir=/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_DIR",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${OUTPUT_DIR}"
          ]
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 mkdir /ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "db.tar.gz",
            "/ref/db.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "cd /ref \u0026\u0026     tar -xf db.tar.gz \u0026\u0026     mv db _db \u0026\u0026     cp -r _db db \u0026\u0026     rm -rf _db db.tar.gz \u0026\u0026     chmod -R a+rX /ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TMPDIR",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}