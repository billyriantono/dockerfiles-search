MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Key: APP_USER
    Name: arg
    Value: satisfy
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.8.4
    - Key: SATISFY_VERSION
      Value: 3.0.4
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so
    - Key: PHP_INI_PATH
      Value: /etc/php7/php.ini
    - Key: PHP_INI_SCAN_DIR
      Value: /etc/php7/conf.d
    - Key: APP_ROOT
      Value: /app
    - Key: APP_USER
      Value: ${APP_USER}
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"Anastas Dancha <https://github.com/anapsix>"'
    - Key: com.php.composer.version
      Value: '"${COMPOSER_VERSION}"'
    - Key: playbloom.satisfy.version
      Value: '"${SATISFY_VERSION}"'
    Name: label
  - CmdLine:
    - apk upgrade --no-cache &&     apk add --no-cache php7-apcu php7-bcmath php7-ctype
      php7-curl php7-dom php7-fileinfo       php7-iconv php7-json php7-mbstring php7-openssl
      php7-phar php7-session       php7-simplexml php7-xml php7-xmlwriter php7-tokenizer       nginx
      unit-php7       procmail libxml2-dev inotify-tools jq zip curl openssh-client
      git &&     apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/community
      gnu-libiconv &&     apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing
      gosu &&     curl -o /usr/local/bin/composer https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar
      &&     chmod +x /usr/local/bin/composer &&     rm -rf /var/cache/apk/* &&     if
      [[ "$APP_USER" != "root" ]]; then adduser -h ${APP_ROOT} -D -H ${APP_USER};
      fi
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_ROOT}
  - CmdLine:
    - yes | composer create-project --no-dev playbloom/satisfy . ${SATISFY_VERSION}
      &&     rm ${APP_ROOT}/app/config/parameters.yml &&     echo "HTTP server is
      up" > ${APP_ROOT}/web/serverup.txt &&     chown -R ${APP_USER}:${APP_USER} ${APP_ROOT}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script/*.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/unit.json
    - /var/lib/unit/conf.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx.conf
    - /etc/nginx/nginx.conf
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - satisfy
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
