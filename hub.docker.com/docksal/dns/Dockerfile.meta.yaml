MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - CmdLine:
    - "apk add --no-cache \tcurl \tsupervisor \tdnsmasq \t&& rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_GEN_VERSION
      Value: 0.7.3
    Name: env
  - Env:
    - Key: DOCKER_GEN_TARFILE
      Value: docker-gen-alpine-linux-amd64-$DOCKER_GEN_VERSION.tar.gz
    Name: env
  - CmdLine:
    - "curl -sSL https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/$DOCKER_GEN_TARFILE
      -O && \ttar -C /usr/local/bin -xvzf $DOCKER_GEN_TARFILE && \trm $DOCKER_GEN_TARFILE"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/strict-order/s/^#//g' /etc/dnsmasq.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /etc/dnsmasq.d && \techo -e '\\nconf-dir=/etc/dnsmasq.d,.tmpl' >>
      /etc/dnsmasq.conf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/dnsmasq.tmpl
    - /etc/dnsmasq.d/dockergen.tmpl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisor.d/docker-gen.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /opt/entrypoint.sh
  - Env:
    - Key: DNS_DOMAIN
      Value: '''docksal'''
    Name: env
  - Env:
    - Key: DNS_IP
      Value: '''192.168.64.100'''
    Name: env
  - Env:
    - Key: LOG_QUERIES
      Value: "false"
    Name: env
  - Name: expose
    Ports:
    - 53/udp
  - CmdLine:
    - /opt/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    - -n
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
