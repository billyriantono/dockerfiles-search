MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - echo '#!/bin/sh\nexit 101' > /usr/sbin/policy-rc.d && chmod +x /usr/sbin/policy-rc.d
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     apt-transport-https     ca-certificates     curl     locales     wget     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales &&     locale-gen C.UTF-8 &&     /usr/sbin/update-locale
      LANG=C.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "sed -i 's/main/main contrib non-free/' /etc/apt/sources.list &&     curl -sSL
      https://packagecloud.io/gpg.key | apt-key add - &&     echo \"deb https://packages.blackfire.io/debian
      any main\" | tee /etc/apt/sources.list.d/blackfire.list &&     curl -sSL https://packagecloud.io/github/git-lfs/gpgkey
      | apt-key add - &&     echo 'deb https://packagecloud.io/github/git-lfs/debian/
      jessie main' > /etc/apt/sources.list.d/github_git-lfs.list &&     echo 'deb-src
      https://packagecloud.io/github/git-lfs/debian/ jessie main' >> /etc/apt/sources.list.d/github_git-lfs.list
      && \tcurl -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&     echo
      \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     dnsutils     git     git-lfs     ghostscript     imagemagick     less     mc     mysql-client     nano     openssh-client     openssh-server     procps     pv     rsync     sudo     supervisor     unzip     zip     zsh     yarn     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd docker -g 1000 &&     useradd -m -s /bin/bash -u 1000 -g 1000 -G sudo
      -p docker docker &&     echo 'docker ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL "https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg
      --print-architecture)" -o /usr/local/bin/gosu &&     chown root:"$(id -gn docker)"
      /usr/local/bin/gosu &&     chmod +sx /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd &     echo 'docker:docker' | chpasswd &&     sed -i 's/PermitRootLogin
      without-password/PermitRootLogin yes/' /etc/ssh/sshd_config &&     sed 's@session\s*required\s*pam_loginuid.so@session
      optional pam_loginuid.so@g' -i /etc/pam.d/sshd &&     echo "export VISIBLE=now"
      >> /etc/profile
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - "curl -sSL https://www.dotdeb.org/dotdeb.gpg | apt-key add - && \techo 'deb
      https://packages.dotdeb.org jessie all' > /etc/apt/sources.list.d/php7.list
      &&     echo 'deb-src https://packages.dotdeb.org jessie all' >> /etc/apt/sources.list.d/php7.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     blackfire-php     php-pear     php7.0-bcmath     php7.0-bz2     php7.0-cli     php7.0-common     php7.0-curl     php7.0-fpm     php7.0-gd     php7.0-imagick     php7.0-intl     php7.0-json     php7.0-ldap     php7.0-mbstring     php7.0-mcrypt     php7.0-memcache     php7.0-mysql     php7.0-redis     php7.0-soap     php7.0-sqlite3     php7.0-xdebug     php7.0-xml     php7.0-zip     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/memory_limit =/c memory_limit = 256M' /etc/php/7.0/fpm/php.ini &&     sed
      -i '/max_execution_time =/c max_execution_time = 300' /etc/php/7.0/fpm/php.ini
      &&     sed -i '/upload_max_filesize =/c upload_max_filesize = 500M' /etc/php/7.0/fpm/php.ini
      &&     sed -i '/post_max_size =/c post_max_size = 500M' /etc/php/7.0/fpm/php.ini
      &&     sed -i '/error_log =/c error_log = \/dev\/stdout' /etc/php/7.0/fpm/php.ini
      &&     sed -i '/always_populate_raw_post_data =/c always_populate_raw_post_data
      = -1' /etc/php/7.0/fpm/php.ini &&     sed -i '/sendmail_path =/c sendmail_path
      = /bin/true' /etc/php/7.0/fpm/php.ini &&     sed -i '/date.timezone =/c date.timezone
      = UTC' /etc/php/7.0/fpm/php.ini &&     sed -i '/display_errors =/c display_errors
      = On' /etc/php/7.0/fpm/php.ini &&     sed -i '/display_startup_errors =/c display_startup_errors
      = On' /etc/php/7.0/fpm/php.ini &&     sed -i '/user =/c user = docker' /etc/php/7.0/fpm/pool.d/www.conf
      &&     sed -i '/catch_workers_output =/c catch_workers_output = yes' /etc/php/7.0/fpm/pool.d/www.conf
      &&     sed -i '/listen =/c listen = 0.0.0.0:9000' /etc/php/7.0/fpm/pool.d/www.conf
      &&     sed -i '/listen.allowed_clients/c ;listen.allowed_clients =' /etc/php/7.0/fpm/pool.d/www.conf
      &&     sed -i '/clear_env =/c clear_env = no' /etc/php/7.0/fpm/pool.d/www.conf
      &&     sed -i '/daemonize =/c daemonize = no' /etc/php/7.0/fpm/php-fpm.conf
      &&     sed -i '/error_log =/c error_log = \/dev\/stdout' /etc/php/7.0/fpm/php-fpm.conf
      &&     sed -i '/pid =/c pid = \/run\/php-fpm.pid' /etc/php/7.0/fpm/php-fpm.conf
      &&     sed -i '/memory_limit =/c memory_limit = 512M' /etc/php/7.0/cli/php.ini
      &&     sed -i '/max_execution_time =/c max_execution_time = 600' /etc/php/7.0/cli/php.ini
      &&     sed -i '/error_log =/c error_log = \/dev\/stdout' /etc/php/7.0/cli/php.ini
      &&     sed -i '/always_populate_raw_post_data/c always_populate_raw_post_data
      = -1' /etc/php/7.0/cli/php.ini &&     sed -i '/sendmail_path/c sendmail_path
      = /bin/true' /etc/php/7.0/cli/php.ini &&     sed -i '/date.timezone/c date.timezone
      = UTC' /etc/php/7.0/cli/php.ini &&     sed -i '/display_errors =/c display_errors
      = On' /etc/php/7.0/cli/php.ini &&     sed -i '/display_startup_errors =/c display_startup_errors
      = On' /etc/php/7.0/cli/php.ini &&     echo 'opcache.memory_consumption = 128'
      >> /etc/php/7.0/mods-available/opcache.ini &&     sed -i '/blackfire.agent_socket
      = /c blackfire.agent_socket = tcp://blackfire:8707' /etc/php/7.0/mods-available/blackfire.ini
      &&     phpdismod xdebug &&     ln -s /var/www/.docksal/etc/php/php.ini /etc/php/7.0/fpm/conf.d/99-overrides.ini
      &&     ln -s /var/www/.docksal/etc/php/php-cli.ini /etc/php/7.0/cli/conf.d/99-overrides.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: XDEBUG_ENABLED
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/xdebug.ini
    - /etc/php/7.0/mods-available/xdebug.ini
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     ruby-full     rlwrap     build-essential     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&    rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - Env:
    - Key: BUNDLE_PATH
      Value: .bundler
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.5.2
    - Key: DRUSH_VERSION
      Value: 8.1.13
    - Key: DRUPAL_CONSOLE_VERSION
      Value: 1.0.2
    - Key: MHSENDMAIL_VERSION
      Value: 0.2.0
    - Key: WPCLI_VERSION
      Value: 1.3.0
    - Key: MG_CODEGEN_VERSION
      Value: 1.6.4
    - Key: BLACKFIRE_VERSION
      Value: 1.14.1
    Name: env
  - CmdLine:
    - curl -sSL "https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar"
      -o /usr/local/bin/composer &&     curl -sSL "https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar"
      -o /usr/local/bin/drush &&     curl -sSL "https://github.com/hechoendrupal/drupal-console-launcher/releases/download/${DRUPAL_CONSOLE_VERSION}/drupal.phar"
      -o /usr/local/bin/drupal &&     curl -sSL "https://github.com/mailhog/mhsendmail/releases/download/v${MHSENDMAIL_VERSION}/mhsendmail_linux_amd64"
      -o /usr/local/bin/mhsendmail &&     curl -sSL "https://github.com/wp-cli/wp-cli/releases/download/v${WPCLI_VERSION}/wp-cli-${WPCLI_VERSION}.phar"
      -o /usr/local/bin/wp &&     curl -sSL "https://github.com/staempfli/magento2-code-generator/releases/download/${MG_CODEGEN_VERSION}/mg2-codegen.phar"
      -o /usr/local/bin/mg2-codegen &&     curl -L https://packages.blackfire.io/binaries/blackfire-agent/${BLACKFIRE_VERSION}/blackfire-cli-linux_static_amd64
      -o /usr/local/bin/blackfire &&     chmod +x /usr/local/bin/*
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Env:
    - Key: HOME
      Value: /home/docker
    Name: env
  - CmdLine:
    - git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
      &&     ln -s $HOME/.zprezto/runcoms/zlogin $HOME/.zlogin &&     ln -s $HOME/.zprezto/runcoms/zlogout
      $HOME/.zlogout &&     ln -s $HOME/.zprezto/runcoms/zpreztorc $HOME/.zpreztorc
      &&     ln -s $HOME/.zprezto/runcoms/zprofile $HOME/.zprofile &&     ln -s $HOME/.zprezto/runcoms/zshenv
      $HOME/.zshenv &&     ln -s $HOME/.zprezto/runcoms/zshrc $HOME/.zshrc
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_VERSION
      Value: 0.33.4
    - Key: NODE_VERSION
      Value: 6.11.3
    - Key: NVM_DIR
      Value: $HOME/.nvm
    Name: env
  - CmdLine:
    - "curl -sSL https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh
      | bash &&     . $NVM_DIR/nvm.sh &&     nvm install $NODE_VERSION &&     nvm
      alias default $NODE_VERSION &&     npm install -g npm && \tnvm clear-cache &&
      npm cache clear --force && \tsudo rm -rf $HOME/.config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$HOME/.composer/vendor/bin
    Name: env
  - CmdLine:
    - echo "\n"'PATH="$PATH:$HOME/.composer/vendor/bin"' >> $HOME/.profile &&     mkdir
      $HOME/drush6 && cd $HOME/drush6 && composer require drush/drush:6.* &&     mkdir
      $HOME/drush7 && cd $HOME/drush7 && composer require drush/drush:7.* &&     echo
      "alias drush6='$HOME/drush6/vendor/bin/drush'" >> $HOME/.bash_aliases &&     echo
      "alias drush7='$HOME/drush7/vendor/bin/drush'" >> $HOME/.bash_aliases &&     echo
      "alias drush8='/usr/local/bin/drush'" >> $HOME/.bash_aliases &&     drush dl
      registry_rebuild --default-major=7 --destination=$HOME/.drush &&     drush cc
      drush &&     composer global require drupal/coder &&     phpcs --config-set
      installed_paths $HOME/.composer/vendor/drupal/coder/coder_sniffer &&     composer
      global require hirak/prestissimo &&     composer clear-cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.ssh
    - $HOME/.ssh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.drush
    - $HOME/.drush
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.zpreztorc
    - $HOME/.zpreztorc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.docksalrc
    - $HOME/.docksalrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /opt/startup.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - healthcheck.sh
    - /opt/healthcheck.sh
  - Env:
    - Key: SSH_AUTH_SOCK
      Value: /.ssh-agent/proxy-socket
    - Key: TERM
      Value: xterm
    - Key: PROJECT_ROOT
      Value: /var/www
    - Key: HOST_UID
      Value: "1000"
    - Key: HOST_GID
      Value: "1000"
    Name: env
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "9000"
  - Name: expose
    Ports:
    - "22"
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - /opt/startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 5000000000
      Retries: 12
      Test:
      - CMD
      - /opt/healthcheck.sh
      Timeout: 1000000000
    Name: healthcheck
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
