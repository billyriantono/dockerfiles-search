MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine:3.6
  Commands:
  - Maintainer: Maks Balashov <maksbalashov@gmail.com>
    Name: maintainer
  - Env:
    - Key: LIBRARY_PATH
      Value: /lib:/usr/lib
    Name: env
  - CmdLine:
    - addgroup -S -g 777 django && adduser -D -S -G django -u 777 django
    Name: run
    PrependShell: true
  - CmdLine:
    - apk -U upgrade && apk -U add python3 ca-certificates musl-dev gcc python3-dev
      postgresql-dev     gettext openjpeg openjpeg-tools openjpeg-dev libjpeg-turbo     libjpeg-turbo-utils
      libjpeg-turbo-dev musl freetype freetype-dev     libwebp lcms2 tiff zlib zlib-dev
      libffi-dev     g++ gcc libxslt-dev &&     update-ca-certificates &&     python3
      -m ensurepip &&     rm -r /usr/lib/python*/ensurepip &&     pip3 install --upgrade
      pip setuptools &&     rm -r /root/.cache &&     ln -s /usr/bin/python3 /usr/bin/python
      &&     ln -s /usr/bin/pip3 /usr/bin/pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - /tmp
  - CmdLine:
    - pip install -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /code && chown -R django /code
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /code/
  - CmdLine:
    - mkdir -p /code/public
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R django /code/public
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /code/public
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - gunicorn
    - -c
    - gunicorn.py
    - -k
    - gevent
    - core.wsgi
    Name: cmd
    PrependShell: false
  From:
    Image: gliderlabs/alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine:3.6
