MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Brady Wetherington <uberbrady@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y apache2 apache2-bin libapache2-mod-php7.0
      php7.0-curl php7.0-ldap php7.0-mysql php7.0-mcrypt php7.0-gd php7.0-xml php7.0-mbstring
      php7.0-zip php7.0-bcmath patch curl vim git mysql-client && apt-get clean &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod gd
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/variables_order = .*/variables_order = "EGPCS"/' /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/variables_order = .*/variables_order = "EGPCS"/' /etc/php/7.0/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m --uid 1000 --gid 50 docker
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export APACHE_RUN_USER=docker >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export APACHE_RUN_GROUP=staff >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/000-default.conf
    - /etc/apache2/sites-enabled/000-default.conf
  - CmdLine:
    - mkdir -p /var/lib/snipeit/ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/001-default-ssl.conf
    - /etc/apache2/sites-enabled/001-default-ssl.conf
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/html
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/docker.env
    - /var/www/html/.env
  - CmdLine:
    - chown -R docker /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r "/var/www/html/storage/private_uploads" && ln -fs "/var/lib/snipeit/data/private_uploads"
      "/var/www/html/storage/private_uploads"       && rm -rf "/var/www/html/public/uploads"
      && ln -fs "/var/lib/snipeit/data/uploads" "/var/www/html/public/uploads"       &&
      rm -r "/var/www/html/storage/app/backups" && ln -fs "/var/lib/snipeit/dumps"
      "/var/www/html/storage/app/backups"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp;curl -sS https://getcomposer.org/installer | php;mv /tmp/composer.phar
      /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - cd /var/www/html;composer install && rm -rf /home/docker/.composer/cache
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: volume
    Volumes:
    - /var/lib/snipeit
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.14.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
