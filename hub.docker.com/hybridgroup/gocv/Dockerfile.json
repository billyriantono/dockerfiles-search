{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "opencv",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04 AS opencv",
      "Platform": "",
      "As": "opencv",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"hybridgroup\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends             git build-essential cmake pkg-config unzip libgtk2.0-dev             curl ca-certificates libcurl4-openssl-dev libssl-dev             libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev             libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev \u0026\u0026             rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "\"4.2.0\""
        },
        {
          "Env": [
            {
              "Key": "OPENCV_VERSION",
              "Value": "$OPENCV_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -Lo opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \u0026\u0026             unzip -q opencv.zip \u0026\u0026             curl -Lo opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip \u0026\u0026             unzip -q opencv_contrib.zip \u0026\u0026             rm opencv.zip opencv_contrib.zip \u0026\u0026             cd opencv-${OPENCV_VERSION} \u0026\u0026             mkdir build \u0026\u0026 cd build \u0026\u0026             cmake -D CMAKE_BUILD_TYPE=RELEASE                   -D CMAKE_INSTALL_PREFIX=/usr/local                   -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules                   -D WITH_JASPER=OFF                   -D BUILD_DOCS=OFF                   -D BUILD_EXAMPLES=OFF                   -D BUILD_TESTS=OFF                   -D BUILD_PERF_TESTS=OFF                   -D BUILD_opencv_java=NO                   -D BUILD_opencv_python=NO                   -D BUILD_opencv_python2=NO                   -D BUILD_opencv_python3=NO                   -D OPENCV_GENERATE_PKGCONFIG=ON .. \u0026\u0026             make -j $(nproc --all) \u0026\u0026             make preinstall \u0026\u0026 make install \u0026\u0026 ldconfig \u0026\u0026             cd / \u0026\u0026 rm -rf opencv*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "gocv",
      "BaseName": "opencv",
      "SourceCode": "FROM opencv AS gocv",
      "Platform": "",
      "As": "gocv",
      "From": {
        "Stage": {
          "Named": "opencv",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"hybridgroup\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "GOVERSION",
          "Name": "arg",
          "Value": "\"1.13.5\""
        },
        {
          "Env": [
            {
              "Key": "GOVERSION",
              "Value": "$GOVERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends             git software-properties-common \u0026\u0026             curl -Lo go${GOVERSION}.linux-amd64.tar.gz https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz \u0026\u0026             tar -C /usr/local -xzf go${GOVERSION}.linux-amd64.tar.gz \u0026\u0026             rm go${GOVERSION}.linux-amd64.tar.gz \u0026\u0026             rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        },
        {
          "CmdLine": [
            "go get -u -d gocv.io/x/gocv \u0026\u0026 go run ${GOPATH}/src/gocv.io/x/gocv/cmd/version/main.go"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}