MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: David Schlechtweg "david.schlechtweg@me.com"
    Name: maintainer
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.14.0
    Name: env
  - Env:
    - Key: NODEJS_VERSION
      Value: 8.1.4
    Name: env
  - Env:
    - Key: DOCKER_MACHINE_VERSION
      Value: 0.12.2
    Name: env
  - Env:
    - Key: SONARQUBE_VERSION
      Value: "6.4"
    Name: env
  - Env:
    - Key: SONARQUBE_HOME
      Value: /usr/local/sonarqube-$SONARQUBE_VERSION
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.0.0-p648
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy     apt-transport-https     ca-certificates     curl     lxc     iptables     python     build-essential     git     g++     openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm requirements"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm install ${RUBY_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "gem install bundler --no-ri --no-rdoc"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "gem install sass --no-ri --no-rdoc"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/rvm/gems/ruby-${RUBY_VERSION}/bin:/usr/local/rvm/rubies/ruby-${RUBY_VERSION}/bin:/usr/local/rvm/rubies/ruby-${RUBY_VERSION}/lib/ruby/gems/${RUBY_VERSION}/bin
    Name: env
  - Env:
    - Key: GEM_PATH
      Value: /usr/local/rvm/gems/ruby-${RUBY_VERSION}:/usr/local/rvm/rubies/ruby-${RUBY_VERSION}:/usr/local/rvm/rubies/ruby-${RUBY_VERSION}/lib/ruby/gems/${RUBY_VERSION}
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install software-properties-common -y &&     add-apt-repository
      ppa:webupd8team/java -y &&     apt-get update &&     echo debconf shared/accepted-oracle-license-v1-1
      select true | debconf-set-selections &&     apt-get install oracle-java8-installer
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add - &&     echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >
      /etc/apt/sources.list.d/google.list &&     apt-get update &&     apt-get install
      -y google-chrome-stable xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.docker.com/ | sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./dind
    - /usr/local/bin/dind
  - CmdLine:
    - chmod +x /usr/local/bin/dind
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./wrapdocker
    - /usr/local/bin/wrapdocker
  - CmdLine:
    - chmod +x /usr/local/bin/wrapdocker
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/machine/releases/download/v${DOCKER_MACHINE_VERSION}/docker-machine-`uname
      -s`-`uname -m` > /usr/local/bin/docker-machine
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/docker-machine
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - CmdLine:
    - wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y zip supervisor jenkins && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G docker jenkins
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: /var/lib/jenkins
    Name: env
  - Name: volume
    Volumes:
    - /var/lib/jenkins
  - CmdLine:
    - mkdir /var/npm && chown jenkins:docker /var/npm
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /nodejs && curl http://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz
      | tar xvzf - -C /nodejs --strip-components=1
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/nodejs/bin
    Name: env
  - CmdLine:
    - npm install -g node-gyp  &&     npm install -g gulp &&     npm install -g nightwatch
      &&     npm install -g nightwatch-html-reporter &&     npm install -g grunt-cli
      &&     npm install -g bower &&     npm install --unsafe-perm -g azure-cli &&     azure
      telemetry --disable
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /tmp/SQ.zip http://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-$SONARQUBE_VERSION.zip     &&
      unzip -o /tmp/SQ.zip -d /usr/local/     && rm /tmp/SQ.zip
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"$SONARQUBE_HOME/data"'
  - Name: volume
    Volumes:
    - '"$SONARQUBE_HOME/conf"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./sonar.properties
    - $SONARQUBE_HOME/conf/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Name: expose
    Ports:
    - "8080"
    - "9000"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
