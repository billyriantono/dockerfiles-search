MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.name
      Value: '"helm-kubectl"'
    - Key: org.label-schema.url
      Value: '"https://hub.docker.com/r/dtzar/helm-kubectl/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/dtzar/helm-kubectl"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    Name: label
  - Env:
    - Key: KUBE_LATEST_VERSION
      Value: '"v1.13.2"'
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: '"v2.14.1"'
    Name: env
  - Env:
    - Key: KOPS_VERSION
      Value: '"1.12.2"'
    Name: env
  - Env:
    - Key: HELMFILE_VERSION
      Value: '"v0.79.3"'
    Name: env
  - CmdLine:
    - apt update -y &&     apt install -y ca-certificates bash git wget curl python3.6
      python3-pip jq &&     update-alternatives --install /usr/bin/python python /usr/bin/python3.6
      10
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -O /usr/local/bin/kubectl &&     chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm &&     chmod +x /usr/local/bin/helm
      &&     helm init --client-only &&     helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
      &&     helm repo update &&     helm plugin install https://github.com/databus23/helm-diff
      --version master
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo kops https://github.com/kubernetes/kops/releases/download/${KOPS_VERSION}/kops-linux-amd64
      &&     chmod +x ./kops &&     mv ./kops /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo helmfile https://github.com/roboll/helmfile/releases/download/${HELMFILE_VERSION}/helmfile_linux_amd64
      &&     chmod +x ./helmfile &&     mv ./helmfile /usr/local/bin/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/requirements.txt
  - CmdLine:
    - pip3 install -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/local/bin/:$PATH"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/fetch-secret
    - /usr/local/bin/fetch-secret
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
