MetaArgs: null
Stages:
- BaseName: node:10-alpine
  Commands:
  - CmdLine:
    - apk add curl bash python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://sdk.cloud.google.com | bash   && rm -r /root/google-cloud-sdk/.install/.backup/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/root/google-cloud-sdk/bin/
    Name: env
  - CmdLine:
    - yes | gcloud components install kubectl
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_VERSION
      Value: v2.14.3
    Name: env
  - Env:
    - Key: FILENAME
      Value: helm-${HELM_VERSION}-linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: HELM_URL
      Value: https://storage.googleapis.com/kubernetes-helm/${FILENAME}
    Name: env
  - CmdLine:
    - curl -o /tmp/$FILENAME ${HELM_URL}   && tar -zxvf /tmp/${FILENAME} -C /tmp   &&
      rm /tmp/${FILENAME}   && mv /tmp/linux-amd64/helm /bin/helm   && helm init --client-only
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/helm3.tar.gz https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz   &&
      tar -zxvf /tmp/helm3.tar.gz -C /tmp   && rm /tmp/helm3.tar.gz   && find /tmp   &&
      mv /tmp/linux-amd64/helm /bin/helm3
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - Name: workdir
    Path: '"/app"'
  - CmdLine:
    - npm install --production
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - npm
    - run-script
    - server
    Name: entrypoint
    PrependShell: false
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
