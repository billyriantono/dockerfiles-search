MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Labels:
    - Key: build_version
      Value: '"0.1"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"digitalgrease"'
    Name: label
  - Env:
    - Key: DHLEVEL
      Value: "4096"
    - Key: ONLY_SUBDOMAINS
      Value: "false"
    - Key: AWS_CONFIG_FILE
      Value: /config/dns-conf/route53.ini
    Name: env
  - Env:
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    Name: env
  - Env:
    - Key: OAUTH2_PROXY_VERSION
      Value: '"2.2"'
    Name: env
  - CmdLine:
    - "apk add --no-cache su-exec \t\tcertbot \t\tcurl \t\tfail2ban \t\tmemcached
      \t\tpy2-future \t\tpy2-pip &&  echo \"**** install certbot plugins ****\" &&
      \ pip install --no-cache-dir \tcertbot-dns-cloudflare \tcertbot-dns-cloudxns
      \tcertbot-dns-digitalocean \tcertbot-dns-dnsimple \tcertbot-dns-dnsmadeeasy
      \tcertbot-dns-google \tcertbot-dns-luadns \tcertbot-dns-nsone \tcertbot-dns-rfc2136
      \tcertbot-dns-route53 &&  echo \"**** remove unnecessary fail2ban filters ****\"
      &&  rm \t/etc/fail2ban/jail.d/alpine-ssh.conf &&  echo \"**** copy fail2ban
      default action and filter to /default ****\" &&  mkdir -p /defaults/fail2ban
      &&  mv /etc/fail2ban/action.d /defaults/fail2ban/ &&  mv /etc/fail2ban/filter.d
      /defaults/fail2ban/"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && apk add --no-cache --virtual .run-deps         bash         ca-certificates         curl     &&
      apk add --no-cache --virtual .build-deps         tar         && curl -O -fSL
      "https://github.com/bitly/oauth2_proxy/releases/download/v${OAUTH2_PROXY_VERSION}/oauth2_proxy-${OAUTH2_PROXY_VERSION}.0.linux-amd64.go1.8.1.tar.gz"     &&
      mkdir /oauth2_proxy     && tar -xf oauth2_proxy-${OAUTH2_PROXY_VERSION}.0.linux-amd64.go1.8.1.tar.gz
      -C /oauth2_proxy --strip-components=1 --no-same-owner     && rm oauth2_proxy-${OAUTH2_PROXY_VERSION}.0.linux-amd64.go1.8.1.tar.gz         &&
      curl -O -fSL "https://raw.githubusercontent.com/bitly/oauth2_proxy/v${OAUTH2_PROXY_VERSION}/contrib/oauth2_proxy.cfg.example"     &&
      mkdir /conf     && mv oauth2_proxy.cfg.example /conf/oauth2_proxy.cfg.dist         &&
      mkdir /templates             && apk del .build-deps
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /oauth2_proxy:$PATH
    Name: env
  - Name: volume
    Volumes:
    - /templates
  - Name: expose
    Ports:
    - "4180"
  - Health:
      Interval: 10000000000
      Retries: 3
      Test:
      - CMD-SHELL
      - curl --silent --fail http://localhost:4180/ping || exit 1
      Timeout: 5000000000
    Name: healthcheck
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - oauth2_proxy
    - --config
    - /conf/oauth2_proxy.cfg
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
