MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: version
      Value: '"19.08.02"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Make username fixed"'
    Name: label
  - Labels:
    - Key: meintainer
      Value: '"east9698@gmail.com"'
    Name: label
  - Env:
    - Key: USERNAME
      Value: toyolab
    Name: env
  - Env:
    - Key: PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: ELIXIR_VERSION
      Value: 1.9.1-1
    Name: env
  - Env:
    - Key: ERLANG_VERSION
      Value: 1:22.0.7-1
    Name: env
  - Env:
    - Key: NODEJS_VERSION
      Value: 12.8.1-1nodesource1
    Name: env
  - Env:
    - Key: GNUPG_VERSION
      Value: 2.2.4-1ubuntu1.2
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim emacs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m ${USERNAME}
    Name: run
    PrependShell: true
  - CmdLine:
    - gpasswd -a ${USERNAME} sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${USERNAME}:${PASSWORD}" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: ${USERNAME}
  - Name: workdir
    Path: /home/${USERNAME}
  - CmdLine:
    - sudo apt install -y gnupg=${GNUPG_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo dpkg -i erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y esl-erlang=${ERLANG_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y elixir=${ELIXIR_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.hex
    Name: run
    PrependShell: true
  - CmdLine:
    - mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y nodejs
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
