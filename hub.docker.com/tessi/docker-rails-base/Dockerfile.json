{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.1",
      "SourceCode": "FROM ruby:2.3.1",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"# Upgrade apt\" \u0026\u0026     sed -i 's/main$/main contrib/g' /etc/apt/sources.list \u0026\u0026     apt-get update -qy \u0026\u0026     echo \"# Install common dev dependencies via apt\" \u0026\u0026       apt-get install -y       git curl wget rsync patch build-essential       imagemagick libmagickwand-dev libfreetype6-dev libfreetype6 libfontconfig       openssl libreadline6 libreadline6-dev zlib1g zlib1g-dev libssl-dev       libyaml-dev libpq-dev libxml2-dev libxslt-dev libc6-dev postgresql-client       libqtwebkit-dev qt4-qmake xvfb bzip2 locales       libssl-dev libxrender-dev wget \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026     dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"# Phantomjs\" \u0026\u0026       mkdir -p /srv/var \u0026\u0026       wget -q --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026       tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp \u0026\u0026       rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026       mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /srv/var/phantomjs \u0026\u0026       ln -s /srv/var/phantomjs/bin/phantomjs /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem update --system \u0026\u0026   bundle config --global build.nokogiri --use-system-libraries"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_SHASUM256",
              "Value": "a1faed4afbbdbdddeae17a24b873b5d6b13950c36fabcb86327a001d24316ffb"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local \u0026\u0026   curl -sfLO https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz \u0026\u0026   echo \"${NODE_SHASUM256}  node-v$NODE_VERSION-linux-x64.tar.gz\" | sha256sum -c - \u0026\u0026  tar --strip-components 1 -xzf node-v$NODE_VERSION-linux-x64.tar.gz node-v$NODE_VERSION-linux-x64/bin node-v$NODE_VERSION-linux-x64/include node-v$NODE_VERSION-linux-x64/lib \u0026\u0026   rm node-v$NODE_VERSION-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower \u0026\u0026   echo '{ \"allow_root\": true }' \u003e /root/.bowerrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}