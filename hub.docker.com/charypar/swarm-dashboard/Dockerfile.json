{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "node:8-alpine",
      "SourceCode": "FROM node:8-alpine AS base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "node:8-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update tini curl   \u0026\u0026 rm -r /var/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/home/node/app"
        }
      ]
    },
    {
      "Name": "dependencies",
      "BaseName": "base",
      "SourceCode": "FROM base AS dependencies",
      "Platform": "",
      "As": "dependencies",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "yarn.lock",
            "./"
          ]
        },
        {
          "CmdLine": [
            "yarn install --production"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "elm-build",
      "BaseName": "node:6-slim",
      "SourceCode": "FROM node:6-slim AS elm-build",
      "Platform": "",
      "As": "elm-build",
      "From": {
        "Image": "node:6-slim"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/home/node/app"
        },
        {
          "CmdLine": [
            "npm install -g elm --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elm-package.json",
            "./"
          ]
        },
        {
          "CmdLine": [
            "elm package install -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "elm make Main.elm --output=client/index.js"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "release",
      "BaseName": "base",
      "SourceCode": "FROM base AS release",
      "Platform": "",
      "As": "release",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/home/node/app"
        },
        {
          "Chown": "",
          "From": "dependencies",
          "Name": "copy",
          "SourcesAndDest": [
            "/home/node/app/node_modules",
            "node_modules"
          ]
        },
        {
          "Chown": "",
          "From": "elm-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/home/node/app/client/",
            "client"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "server",
            "server"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Test": [
              "CMD-SHELL",
              "curl --fail http://localhost:$PORT/_health || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "node",
            "server/index.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}