{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Maintainer": "vvakame",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         build-essential cmake python2.7 nodejs default-jre git-core         curl     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 ln -s /usr/bin/python2.7 /usr/bin/python     \u0026\u0026 ln -s /usr/bin/nodejs /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 curl https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz | tar zx     \u0026\u0026 cd ./emsdk_portable     \u0026\u0026 ./emsdk install sdk-incoming-64bit     \u0026\u0026 ./emsdk activate sdk-incoming-64bit     \u0026\u0026 echo \"source $HOME/emsdk_portable/emsdk_env.sh\" \u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 git clone --recursive https://github.com/WebAssembly/wabt     \u0026\u0026 cd wabt     \u0026\u0026 make gcc-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/wabt/out/gcc/Release:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.cargo/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf | sh -s -- -y     \u0026\u0026 rustup install stable     \u0026\u0026 rustup component add rust-src     \u0026\u0026 rustup target add wasm32-unknown-emscripten     \u0026\u0026 rustup target add asmjs-unknown-emscripten     \u0026\u0026 rustup install nightly     \u0026\u0026 rustup component add rust-src --toolchain nightly     \u0026\u0026 rustup target add asmjs-unknown-emscripten --toolchain nightly     \u0026\u0026 rustup target add wasm32-unknown-emscripten --toolchain nightly     \u0026\u0026 rustup default nightly"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}