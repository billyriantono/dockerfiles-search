{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:19.10",
      "SourceCode": "FROM ubuntu:19.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:19.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"vvakame@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GCLOUD_SDK_VERSION",
              "Value": "273.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_GRPCIO_VERSION",
              "Value": "1.20.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.11.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEP_VERSION",
              "Value": "0.5.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "v12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /work"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     ln -sf /usr/share/zoneinfo/UTC /etc/localtime \u0026\u0026     apt-get install -y --no-install-recommends         tzdata xvfb vim         curl ca-certificates         build-essential git unzip         ssh         python         gettext-base         openjdk-11-jre-headless python-pip \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install grpcio==${PIP_GRPCIO_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/work/google-cloud-sdk/bin:/work/google-cloud-sdk/platform/google_appengine:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     tar -zxf google-cloud-sdk.tar.gz \u0026\u0026     rm google-cloud-sdk.tar.gz \u0026\u0026     ./google-cloud-sdk/install.sh --quiet \u0026\u0026     gcloud --quiet components install app-engine-go \u0026\u0026     chmod +x /work/google-cloud-sdk/platform/google_appengine/appcfg.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/go/bin:/usr/local/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o go.tar.gz -L https://dl.google.com/go/go${GOLANG_VERSION}.linux-amd64.tar.gz \u0026\u0026     tar -zxf go.tar.gz \u0026\u0026     mv go /usr/local \u0026\u0026     rm go.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 \u0026\u0026     chmod +x /usr/local/bin/dep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.nodebrew/current/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L git.io/nodebrew | perl - setup \u0026\u0026     nodebrew install-binary ${NODEJS_VERSION} \u0026\u0026     nodebrew use ${NODEJS_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends libappindicator1 \u0026\u0026     curl --silent --show-error --location --fail --retry 3 -o google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \u0026\u0026     (dpkg -i google-chrome-stable_current_amd64.deb || apt-get -fy install) \u0026\u0026     rm -rf google-chrome-stable_current_amd64.deb \u0026\u0026     sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' /opt/google/chrome/google-chrome \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}