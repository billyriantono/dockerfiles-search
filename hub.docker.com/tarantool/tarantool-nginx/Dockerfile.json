{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Konstantin Nazarov \"mail@racktear.com\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "addgroup -S nginx     \u0026\u0026 adduser -S -G nginx nginx     \u0026\u0026 apk add --no-cache 'su-exec\u003e=0.2'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.1"
            },
            {
              "Key": "NGINX_UPSTREAM_MODULE_URL",
              "Value": "https://github.com/tarantool/nginx_upstream_module.git"
            },
            {
              "Key": "NGINX_UPSTREAM_MODULE_COMMIT",
              "Value": "3736239b51cc48776ee49088d7d674ff37791544"
            },
            {
              "Key": "NGINX_GPG_KEYS",
              "Value": "B0F4253373F8F6F510D42178520A9993A1C052F8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_LUA_MODULE_URL",
              "Value": "https://github.com/openresty/lua-nginx-module"
            },
            {
              "Key": "NGINX_LUA_MODULE_PATH",
              "Value": "/usr/src/lua-nginx-module"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_DEVEL_KIT_URL",
              "Value": "https://github.com/simpl/ngx_devel_kit"
            },
            {
              "Key": "NGINX_DEVEL_KIT_PATH",
              "Value": "/usr/src/nginx-devel-kit"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_VERSION",
              "Value": "2.0.5"
            },
            {
              "Key": "LUAJIT_URL",
              "Value": "http://luajit.org/git/luajit-2.0.git"
            },
            {
              "Key": "LUAJIT_PATH",
              "Value": "/usr/src/luajit"
            },
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/local/lib"
            },
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/local/include/luajit-2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_VERSION",
              "Value": "2.4.2"
            },
            {
              "Key": "LUAROCKS_URL",
              "Value": "https://github.com/luarocks/luarocks"
            },
            {
              "Key": "LUAROCKS_PATH",
              "Value": "/usr/src/luarocks"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_ROCKS",
              "Value": "\"lua-cjson\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apk add --no-cache --virtual .build-deps      build-base      cmake      linux-headers      libressl-dev      pcre-dev      zlib-dev      libxslt-dev      gd-dev      geoip-dev      git      tar      gnupg      curl      perl-dev      unzip      gcc      perl   \u0026\u0026 apk add --no-cache --virtual .run-deps      ca-certificates      libressl      pcre      zlib      libxslt      gd      geoip      gettext      libgcc   \u0026\u0026 git config --global http.postBuffer 524288000   \u0026\u0026 : \"---------- download nginx-devel-kit ----------\"   \u0026\u0026 git clone \"$NGINX_DEVEL_KIT_URL\" $NGINX_DEVEL_KIT_PATH   \u0026\u0026 : \"---------- download nginx-lua-module ----------\"   \u0026\u0026 git clone \"$NGINX_LUA_MODULE_URL\" $NGINX_LUA_MODULE_PATH   \u0026\u0026 : \"---------- download luajit ----------\"   \u0026\u0026 git clone \"$LUAJIT_URL\" $LUAJIT_PATH   \u0026\u0026 git -C $LUAJIT_PATH checkout tags/v$LUAJIT_VERSION   \u0026\u0026 make -C $LUAJIT_PATH   \u0026\u0026 make -C $LUAJIT_PATH install   \u0026\u0026 : \"---------- download and install luarocks (depends on luajit) ----------\"   \u0026\u0026 git clone $LUAROCKS_URL $LUAROCKS_PATH   \u0026\u0026 git -C $LUAROCKS_PATH checkout tags/v$LUAROCKS_VERSION   \u0026\u0026 ln -s /usr/local/bin/luajit-$LUAJIT_VERSION /usr/local/bin/lua   \u0026\u0026 cd $LUAROCKS_PATH   \u0026\u0026 ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/   \u0026\u0026 make build   \u0026\u0026 make install   \u0026\u0026 cd   \u0026\u0026 : \"---------- download nginx-upstream-module ----------\"   \u0026\u0026 git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module   \u0026\u0026 git -C /usr/src/nginx_upstream_module checkout \"${NGINX_UPSTREAM_MODULE_COMMIT}\"   \u0026\u0026 git -C /usr/src/nginx_upstream_module submodule init   \u0026\u0026 git -C /usr/src/nginx_upstream_module submodule update   \u0026\u0026 make -C /usr/src/nginx_upstream_module yajl   \u0026\u0026 make -C /usr/src/nginx_upstream_module msgpack   \u0026\u0026 : \"---------- download nginx ----------\"   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz      -o nginx.tar.gz   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc      -o nginx.tar.gz.asc   \u0026\u0026 : \"---------- verify signatures ----------\"   \u0026\u0026 mkdir -p /usr/src/nginx   \u0026\u0026 tar -xzf nginx.tar.gz -C /usr/src/nginx       --strip-components=1   \u0026\u0026 cd /usr/src/nginx   \u0026\u0026 : \"---------- build nginx ----------\"   \u0026\u0026 ./configure       --with-cc-opt='-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include'       --with-ld-opt='/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck'       --add-module=/usr/src/nginx_upstream_module       --prefix=/etc/nginx       --sbin-path=/usr/sbin/nginx       --modules-path=/usr/lib/nginx/modules       --conf-path=/etc/nginx/nginx.conf       --error-log-path=/var/log/nginx/error.log       --http-log-path=/var/log/nginx/access.log       --pid-path=/var/run/nginx.pid       --lock-path=/var/run/nginx.lock       --http-client-body-temp-path=/var/cache/nginx/client_temp       --http-proxy-temp-path=/var/cache/nginx/proxy_temp       --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp       --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp       --http-scgi-temp-path=/var/cache/nginx/scgi_temp       --user=nginx       --group=nginx       --with-http_ssl_module       --with-http_realip_module       --with-http_addition_module       --with-http_sub_module       --with-http_dav_module       --with-http_flv_module       --with-http_mp4_module       --with-http_gunzip_module       --with-http_gzip_static_module       --with-http_random_index_module       --with-http_secure_link_module       --with-http_stub_status_module       --with-http_auth_request_module       --with-http_xslt_module=dynamic       --with-http_image_filter_module=dynamic       --with-http_geoip_module=dynamic       --with-http_perl_module=dynamic       --with-threads       --with-stream       --with-stream_ssl_module       --with-http_slice_module       --with-mail       --with-mail_ssl_module       --with-file-aio       --with-http_v2_module       --with-ipv6       --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\"       --add-module=$NGINX_DEVEL_KIT_PATH       --add-module=$NGINX_LUA_MODULE_PATH   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 rm -rf /etc/nginx/html/   \u0026\u0026 mkdir /etc/nginx/conf.d/   \u0026\u0026 mkdir -p /usr/share/nginx/html/   \u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/   \u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/   \u0026\u0026 : \"---------- install module deps ----------\"   \u0026\u0026 runDeps=\"$(       scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so               | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'               | sort -u               | xargs -r apk info --installed               | sort -u       )\"   \u0026\u0026 apk add --virtual .run-deps $runDeps   \u0026\u0026 : \"---------- install lua rocks ----------\"   \u0026\u0026 for rock in $LUAROCKS_ROCKS; do luarocks install $rock; done   \u0026\u0026 : \"---------- remove build deps ----------\"   \u0026\u0026 rm -rf /usr/src/nginx   \u0026\u0026 rm -rf /usr/src/nginx_upstream_module   \u0026\u0026 apk del .build-deps   \u0026\u0026 : \"---------- redirect logs to default collector ----------\"   \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.vh.default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}