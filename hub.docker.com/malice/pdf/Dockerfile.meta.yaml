MetaArgs: null
Stages:
- BaseName: malice/alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/blacktop"'
    Name: label
  - Labels:
    - Key: malice.plugin.repository
      Value: = "https://github.com/malice-plugins/pdf.git"
    Name: label
  - Labels:
    - Key: malice.plugin.category
      Value: '"pdf"'
    Name: label
  - Labels:
    - Key: malice.plugin.mime
      Value: '"application/pdf"'
    Name: label
  - Labels:
    - Key: malice.plugin.docker.engine
      Value: '"*"'
    Name: label
  - Env:
    - Key: PDFID
      Value: "0_2_4"
    Name: env
  - Env:
    - Key: PDF_PARSER
      Value: "0_6_8"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/sbin
  - CmdLine:
    - apk --update add --no-cache python py-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --no-cache -t .build-deps   openssl-dev   build-base   python-dev   libffi-dev   musl-dev   libc-dev   py-pip   gcc   git   &&
      set -ex   && echo "===> Install malice/pdf plugin..."   && cd /usr/sbin   &&
      export PIP_NO_CACHE_DIR=off   && export PIP_DISABLE_PIP_VERSION_CHECK=on   &&
      pip install --upgrade pip wheel   && echo "\t[*] install requirements..."   &&
      pip install -U -r requirements.txt   && echo "\t[*] install pdfscan.py..."   &&
      chmod +x pdfscan.py   && ln -s /usr/sbin/pdfscan.py /usr/sbin/pdfscan   && echo
      "\t[*] clean up..."   && rm requirements.txt Dockerfile   && apk del --purge
      .build-deps
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /malware
  - CmdLine:
    - su-exec
    - malice
    - /sbin/tini
    - --
    - pdfscan
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: malice/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM malice/alpine
