MetaArgs: null
Stages:
- BaseName: malice/alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/blacktop"'
    Name: label
  - Labels:
    - Key: malice.plugin.repository
      Value: = "https://github.com/malice-plugins/yara.git"
    Name: label
  - Labels:
    - Key: malice.plugin.category
      Value: '"av"'
    Name: label
  - Labels:
    - Key: malice.plugin.mime
      Value: '"*"'
    Name: label
  - Labels:
    - Key: malice.plugin.docker.engine
      Value: '"*"'
    Name: label
  - Env:
    - Key: YARA
      Value: 3.9.0
    Name: env
  - CmdLine:
    - apk --update add --no-cache openssl file bison jansson ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --no-cache -t .build-deps   openssl-dev   jansson-dev   build-base   libc-dev   file-dev   automake   autoconf   libtool   flex   git   gcc   &&
      echo "===> Install Yara from source..."   && cd /tmp   && git clone --recursive
      --branch v${YARA} https://github.com/VirusTotal/yara.git   && cd /tmp/yara   &&
      ./bootstrap.sh   && sync   && ./configure --enable-magic   --enable-cuckoo   --enable-dotnet   &&
      make   && make install   && rm -rf /tmp/*   && apk del --purge .build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/maliceio/malice-yara
  - CmdLine:
    - apk --update add --no-cache -t .build-deps   openssl-dev   jansson-dev   build-base   mercurial   musl-dev   openssl   bash   wget   git   gcc   dep   go   &&
      echo "===> Building scan Go binary..."   && cd /go/src/github.com/maliceio/malice-yara   &&
      echo " * copy yara rules"   && mkdir /rules   && mv rules /rules   && export
      GOPATH=/go   && export CGO_CFLAGS="-I/usr/local/include"   && export CGO_LDFLAGS="-L/usr/local/lib
      -lyara"   && export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"   && go version   &&
      dep ensure   && CGO_ENABLED=1 go build -ldflags "-s -w -X main.Version=v$(cat
      VERSION) -X main.BuildTime=$(date -u +%Y%m%d)" -o /bin/scan   && rm -rf /go
      /usr/local/go /usr/lib/go /tmp/*   && apk del --purge .build-deps
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /malware
  - CmdLine:
    - su-exec
    - malice
    - scan
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: malice/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM malice/alpine
