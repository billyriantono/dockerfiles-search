MetaArgs: null
Stages:
- As: go_builder
  BaseName: golang:1.11
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/malice-plugins/windows-defender
  - Name: workdir
    Path: /go/src/github.com/malice-plugins/windows-defender
  - CmdLine:
    - go get -u github.com/golang/dep/cmd/dep && dep ensure
    Name: run
    PrependShell: true
  - CmdLine:
    - go build -ldflags "-s -w -X main.Version=v$(cat VERSION) -X main.BuildTime=$(date
      -u +%Y%m%d)" -o /bin/avscan
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11
  Name: go_builder
  Platform: ""
  SourceCode: FROM golang:1.11 as go_builder
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/blacktop"'
    Name: label
  - Labels:
    - Key: malice.plugin.repository
      Value: = "https://github.com/malice-plugins/windows-defender.git"
    Name: label
  - Labels:
    - Key: malice.plugin.category
      Value: '"av"'
    Name: label
  - Labels:
    - Key: malice.plugin.mime
      Value: '"*"'
    Name: label
  - Labels:
    - Key: malice.plugin.docker.engine
      Value: '"*"'
    Name: label
  - CmdLine:
    - groupadd -r malice   && useradd --no-log-init -r -g malice malice   && mkdir
      /malware   && chown -R malice:malice /malware
    Name: run
    PrependShell: true
  - CmdLine:
    - buildDeps='libreadline-dev:i386   ca-certificates   libc6-dev:i386   build-essential   gcc-multilib   cabextract   mercurial   git-core   unzip   wget'   &&
      set -x   && dpkg --add-architecture i386 && apt-get update -qq   && apt-get
      install -y $buildDeps libc6-i386 --no-install-recommends   && echo "===> Install
      taviso/loadlibrary..."   && git clone https://github.com/taviso/loadlibrary.git
      /loadlibrary   && echo "===> Download 32-bit antimalware update file.."   &&
      wget --progress=bar:force "https://go.microsoft.com/fwlink/?LinkID=121721&arch=x86"
      -O   /loadlibrary/engine/mpam-fe.exe   && cd /loadlibrary/engine   && cabextract
      mpam-fe.exe   && rm mpam-fe.exe   && cd /loadlibrary   && make -j2   && echo
      "===> Clean up unnecessary files..."   && apt-get purge -y --auto-remove $buildDeps
      $(apt-mark showauto)   && apt-get clean   && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -yq --no-install-recommends ca-certificates   &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -yq --no-install-recommends exiftool   &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - http://www.eicar.org/download/eicar.com.txt
    - /malware/EICAR
  - CmdLine:
    - mkdir -p /opt/malice
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - update.sh
    - /opt/malice/update
  - Chown: ""
    From: go_builder
    Name: copy
    SourcesAndDest:
    - /bin/avscan
    - /bin/avscan
  - Name: workdir
    Path: /malware
  - CmdLine:
    - /bin/avscan
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
