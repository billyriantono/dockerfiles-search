MetaArgs: null
Stages:
- BaseName: node:8.10.0
  Commands:
  - Labels:
    - Key: vendor
      Value: '"SebastianLeks"'
    - Key: is-production
      Value: '"false"'
    Name: label
  - CmdLine:
    - apt-get update                              &&     DEBIAN_FRONTEND=noninteractive                      apt-get
      install -yq --no-install-recommends                  apt-utils                          &&     DEBIAN_FRONTEND=noninteractive                      apt-get
      install -yq                                          python                                              python-setuptools                                   build-essential
      libssl-dev libffi-dev               python-dev                                          libev4
      libev-dev                                    less                                                man                                                 wget                                                nano                                                unzip                                               jq                                                  httpie                                              htop                                                groff
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "America/Chicago" > /etc/timezone  && dpkg-reconfigure -f noninteractive
      tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global nodemon
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - pip install --upgrade --user awscli                                      &&     echo
      "complete -C '/root/.local/bin/aws_completer' aws" >> /root/.bashrc &&     echo
      "export PATH=/root/.local/bin:$PATH" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install saws
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/wallix/awless/master/getawless.sh | bash
      &&     mv awless /usr/local/bin/ &&     echo 'source <(awless completion bash)'
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awslimitchecker
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "--- Finished INSTALLATION and UPDATES ---"  &&     echo "python (req.
      2.7.x): " $(python --version)  &&     echo "pip (req. latest): " $(pip -V)              &&     echo
      "node (req. 6.9+): " $(node --version)       &&     echo "npm: " $(npm --version)                     &&     echo
      "AWS CLI: " $(aws --version)'
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /aws-wrkspace/.aws /root/.aws
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "echo \"\nRun aws configure command to update keys\n\"" >> /root/.bashrc
      &&     echo "echo \"\nSet default aws profile thru: export AWS_DEFAULT_PROFILE=xyz-profile-name\n\""
      >> /root/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean                                    &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g serverless''
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge postgr*  && apt-get autoremove  && wget -q -O- https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add -  && echo "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg
      main 9.5" >> /etc/apt/sources.list.d/postgresql.list  && apt-get update  &&
      apt-get install -y postgresql-client-9.5
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
    - /ngrok.zip
  - CmdLine:
    - 'set -x  && unzip -o /ngrok.zip -d /bin  && rm -f /ngrok.zip  && mkdir /root/.ngrok2  &&
      echo ''web_addr: 0.0.0.0:4040'' > /root/.ngrok2/ngrok.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main" | tee
      /etc/apt/sources.list.d/webupd8team-java.list &&     echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu
      xenial main" | tee -a /etc/apt/sources.list.d/webupd8team-java.list &&     echo
      "debconf shared/accepted-oracle-license-v1-1 select true" | debconf-set-selections         &&     echo
      "debconf shared/accepted-oracle-license-v1-1 seen true" | debconf-set-selections           &&     apt-key
      adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886                      &&     apt-get
      update                                                                                  &&     apt-get
      install -yq oracle-java8-set-default
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
      &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
      &&     apt-get install apt-transport-https &&     apt-get update &&     apt-get
      install sbt &&     sbt about
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://www.scala-lang.org/files/archive/scala-2.12.4.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /usr/local/bin/amm https://git.io/vdNv2 && chmod +x /usr/local/bin/amm
    Name: run
    PrependShell: true
  - Env:
    - Key: SCALA_VERSION
      Value: 2.12.4
    Name: env
  - Env:
    - Key: SCALA_TARBALL
      Value: http://www.scala-lang.org/files/archive/scala-$SCALA_VERSION.deb
    Name: env
  - CmdLine:
    - echo "===> install Scala"                           &&     DEBIAN_FRONTEND=noninteractive                                 apt-get
      install -y --force-yes libjansi-java    &&     curl -sSL $SCALA_TARBALL -o scala.deb               &&     dpkg
      -i scala.deb                                   &&         echo "===> clean up..."                             &&     rm
      -f *.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "\n export AWS_PROFILE=DEV \n" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'printf "PS1=\"\[\033[02;33m\]docker \u@\h: \[\033[01;34m\]\w\\n \[\033[00m\]\$
      \"\n" >> /root/.bashrc &&     printf "alias ll=''ls -la --color=auto''\n" >>
      /root/.bashrc              &&     printf "alias ..=''cd ..''\n" >> /root/.bashrc                            &&     printf
      "alias h=''history''\n" >> /root/.bashrc                           &&     printf
      "\n" >> /root/.bashrc                                            &&     printf
      "shopt -s histappend\n" >> /root/.bashrc                         &&     printf
      "PROMPT_COMMAND=\"history -n; history -a\"\n" >> /root/.bashrc   &&     printf
      "unset HISTFILESIZE\n" >> /root/.bashrc                          &&     printf
      "HISTSIZE=5000\n" >> /root/.bashrc'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
    - "4040"
    - "5858"
    - "8080"
    - "8443"
    - "9001"
  - CmdLine:
    - '"/bin/bash"'
    Name: cmd
    PrependShell: true
  From:
    Image: node:8.10.0
  Name: ""
  Platform: ""
  SourceCode: FROM node:8.10.0
