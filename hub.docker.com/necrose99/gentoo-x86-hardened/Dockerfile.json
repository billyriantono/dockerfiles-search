{
  "MetaArgs": [
    {
      "Key": "BOOTSTRAP",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    }
  ],
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "${BOOTSTRAP:-alpine:3.7}",
      "SourceCode": "FROM ${BOOTSTRAP:-alpine:3.7} as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "${BOOTSTRAP:-alpine:3.7}"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/gentoo"
        },
        {
          "Key": "ARCH",
          "Name": "arg",
          "Value": "x86"
        },
        {
          "Key": "MICROARCH",
          "Name": "arg",
          "Value": "i686"
        },
        {
          "Key": "SUFFIX",
          "Name": "arg",
          "Value": "hardened"
        },
        {
          "Key": "DIST",
          "Name": "arg",
          "Value": "\"https://ftp-osl.osuosl.org/pub/gentoo/releases/${ARCH}/autobuilds\""
        },
        {
          "Key": "SIGNING_KEY",
          "Name": "arg",
          "Value": "\"0xBB572E0E2D182910\""
        },
        {
          "CmdLine": [
            "echo \"Building Gentoo Container image for ${ARCH} ${SUFFIX} fetching from ${DIST}\"  \u0026\u0026 apk --no-cache add gnupg tar wget xz  \u0026\u0026 STAGE3PATH=\"$(wget -O- \"${DIST}/latest-stage3-${MICROARCH}${SUFFIX}.txt\" | tail -n 1 | cut -f 1 -d ' ')\"  \u0026\u0026 echo \"STAGE3PATH:\" $STAGE3PATH  \u0026\u0026 STAGE3=\"$(basename ${STAGE3PATH})\"  \u0026\u0026 wget -q \"${DIST}/${STAGE3PATH}\" \"${DIST}/${STAGE3PATH}.CONTENTS\" \"${DIST}/${STAGE3PATH}.DIGESTS.asc\"  \u0026\u0026 gpg --list-keys  \u0026\u0026 echo \"standard-resolver\" \u003e\u003e ~/.gnupg/dirmngr.conf  \u0026\u0026 echo \"honor-http-proxy\" \u003e\u003e ~/.gnupg/dirmngr.conf  \u0026\u0026 echo \"disable-ipv6\" \u003e\u003e ~/.gnupg/dirmngr.conf  \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ${SIGNING_KEY}  \u0026\u0026 gpg --verify \"${STAGE3}.DIGESTS.asc\"  \u0026\u0026 awk '/# SHA512 HASH/{getline; print}' ${STAGE3}.DIGESTS.asc | sha512sum -c  \u0026\u0026 tar xpf \"${STAGE3}\" --xattrs --numeric-owner  \u0026\u0026 sed -i -e 's/#rc_sys=\"\"/rc_sys=\"docker\"/g' etc/rc.conf  \u0026\u0026 echo 'UTC' \u003e etc/timezone  \u0026\u0026 rm ${STAGE3}.DIGESTS.asc ${STAGE3}.CONTENTS ${STAGE3}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/gentoo/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}