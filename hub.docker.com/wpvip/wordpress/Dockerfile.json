{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache \t\tbash \t\tsed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "extensions/*",
            "/usr/local/src/"
          ]
        },
        {
          "CmdLine": [
            "set -ex; \t\tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tfreetype-dev \t\tlibjpeg-turbo-dev \t\tlibpng-dev \t\tlibzip-dev \t\tgmp-dev \t\tgraphicsmagick-dev \t\tlibmemcached-dev \t\tlibmcrypt-dev \t\tlibxml2-dev \t\tlibtool \t; \t\tmkdir -p /usr/src/php/ext; \tcd /usr/src/php/ext; \tmkdir -p mcrypt memcache gmagick xdebug; \ttar -xzvf /usr/local/src/gmagick-2.0.5RC1.tgz --strip-components=1 -C /usr/src/php/ext/gmagick; \ttar -xzvf /usr/local/src/mcrypt-1.0.2.tgz --strip-components=1 -C /usr/src/php/ext/mcrypt; \ttar -xzvf /usr/local/src/memcache-websupport-sk-NON_BLOCKING_IO_php7-v4.0.3.tgz --strip-components=1 -C /usr/src/php/ext/memcache; \ttar -xzvf /usr/local/src/xdebug-2.9.0.tgz --strip-components=1 -C /usr/src/php/ext/xdebug; \t\tcd /usr/src/php/ext/memcache \u0026\u0026 \tpatch -p1 \u003c /usr/local/src/memcache-websupport-sk.retry-failed-servers.patch; \t\tdocker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr; \tdocker-php-ext-install -j \"$(nproc)\" \t\texif \t\tgd \t\tmysqli \t\topcache \t\tzip \t\tcalendar \t\tgmp \t\tsoap \t\tgmagick \t\tmcrypt \t\tmemcache \t\tshmop \t\tsockets \t\tsysvsem \t\tsysvshm \t; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --virtual .wordpress-phpexts-rundeps $runDeps; \tapk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \t\techo 'display_errors = Off'; \t\techo 'display_startup_errors = Off'; \t\techo 'log_errors = On'; \t\techo 'error_log = /dev/stderr'; \t\techo 'log_errors_max_len = 1024'; \t\techo 'ignore_repeated_errors = On'; \t\techo 'ignore_repeated_source = Off'; \t\techo 'html_errors = Off'; \t} \u003e /usr/local/etc/php/conf.d/error-logging.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_VERSION",
              "Value": "5.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_SHA1",
              "Value": "fded476f112dbab14e3b5acddd2bcfa550e7b01b"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\"; \techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \ttar -xzf wordpress.tar.gz -C /usr/src/; \trm wordpress.tar.gz; \tchown -R www-data:www-data /usr/src/wordpress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}