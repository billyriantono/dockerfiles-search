MetaArgs: null
Stages:
- BaseName: webdevops/php-nginx:7.2
  Commands:
  - CmdLine:
    - mkdir -p /app/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/
  - CmdLine:
    - apt-get update && apt-get install -y apt-utils   && echo "deb http://ftp.debian.org/debian
      stretch-backports main" >> /etc/apt/sources.list   && export DEBIAN_FRONTEND=noninteractive   &&
      apt-get update   && apt-get --assume-yes -o Dpkg::Options::="--force-confnew"
      -t stretch-backports install "nginx-full"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/php
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/99-docker.php.ini
    - /usr/local/etc/php/conf.d/99-docker.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/application.conf
    - /usr/local/etc/php-fpm.d/application.conf
  - CmdLine:
    - pecl -d preferred_state=beta install apcu_bc   && echo "extension=apc.so" |
      tee /opt/docker/etc/php/apcu-bc.ini   && ln -sf /opt/docker/etc/php/apcu-bc.ini
      /usr/local/etc/php/conf.d/apcubc.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/97-blackfire.php.ini
    - /opt/docker/etc/php/blackfire.ini
  - CmdLine:
    - version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")   && curl -A "Docker"
      -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version   &&
      tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp   && mv /tmp/blackfire-*.so $(php
      -r "echo ini_get('extension_dir');")/blackfire.so   && ln -sf /opt/docker/etc/php/blackfire.ini
      /usr/local/etc/php/conf.d/97-blackfire.ini   && chown root:root $(php -r "echo
      ini_get('extension_dir');")/blackfire.so
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/mime.types
    - /etc/nginx/mime.types
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/fastcgi_params
    - /etc/nginx/fastcgi_params
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/vhost.conf
    - /opt/docker/etc/nginx/vhost.conf
  - CmdLine:
    - rm -f /opt/docker/etc/nginx/vhost.common.d/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/vhost.common.d
    - /opt/docker/etc/nginx/vhost.common.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/cron/crontab
    - /etc/cron.d/typo3
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/cron/cron.conf
    - /opt/docker/etc/supervisor.d/cron.conf
  - CmdLine:
    - apt-get --yes install openssh-server sudo dirmngr  && mkdir -p /var/run/sshd
      && sed -i "s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g" /etc/ssh/sshd_config   &&
      sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config   &&
      touch /root/.Xauthority   && true
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/sshd/authorized_keys
    - /tmp/authorized_keys
  - CmdLine:
    - for MYHOME in /root /home/docker; do     mkdir -p ${MYHOME}/.ssh;     chmod
      go-rwx ${MYHOME}/.ssh;     cp /tmp/authorized_keys ${MYHOME}/.ssh/authorized_keys;     chmod
      go-rw ${MYHOME}/.ssh/authorized_keys;   done   && useradd docker     && passwd
      -d docker     && mkdir -p /home/docker     && chown docker:docker /home/docker     &&
      addgroup docker staff     && addgroup docker sudo     && true   && chown -R
      docker:docker /home/docker/.ssh;
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-5.7" >> /etc/apt/sources.list   &&
      gpg --recv-keys 5072E1F5 || true   && sleep 1s   && gpg --recv-keys 5072E1F5   &&
      gpg --export 5072E1F5 > /etc/apt/trusted.gpg.d/5072E1F5.gpg   && apt-get update   &&
      apt-get --yes install mysql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-image-cleanup
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - util
    - /usr/local/bin/rmutil
  - CmdLine:
    - chmod a+x /usr/local/bin/rmutil/*
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser www-data application
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0644 /etc/cron.d/typo3
    Name: run
    PrependShell: true
  From:
    Image: webdevops/php-nginx:7.2
  Name: ""
  Platform: ""
  SourceCode: FROM webdevops/php-nginx:7.2
