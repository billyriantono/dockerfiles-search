MetaArgs: null
Stages:
- BaseName: buildpack-deps:buster-scm
  Commands:
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends         libc6         libgcc1         libgssapi-krb5-2         libicu63         libssl1.1         libstdc++6         zlib1g     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_SDK_VERSION
      Value: 3.0.100
    Name: env
  - CmdLine:
    - curl -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz     &&
      dotnet_sha512='766da31f9a0bcfbf0f12c91ea68354eb509ac2111879d55b656f19299c6ea1c005d31460dac7c2a4ef82b3edfea30232c82ba301fb52c0ff268d3e3a1b73d8f7'     &&
      echo "$dotnet_sha512 dotnet.tar.gz" | sha512sum -c -     && mkdir -p /usr/share/dotnet     &&
      tar -zxf dotnet.tar.gz -C /usr/share/dotnet     && rm dotnet.tar.gz     && ln
      -s /usr/share/dotnet/dotnet /usr/bin/dotnet
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_RUNNING_IN_CONTAINER
      Value: "true"
    - Key: DOTNET_USE_POLLING_FILE_WATCHER
      Value: "true"
    - Key: NUGET_XMLDOC_MODE
      Value: skip
    Name: env
  - CmdLine:
    - dotnet help
    Name: run
    PrependShell: true
  - Env:
    - Key: POWERSHELL_VERSION
      Value: 7.0.0-preview.4
    - Key: POWERSHELL_DISTRIBUTION_CHANNEL
      Value: PSDocker-DotnetCoreSDK-Debian-10
    Name: env
  - CmdLine:
    - curl -SL --output PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg https://pwshtool.blob.core.windows.net/tool/$POWERSHELL_VERSION/PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg     &&
      powershell_sha512='0fb0167e13560371bffec38a4a87bf39377fa1a5cc39b3a078ddec8803212bede73e5821861036ba5c345bd55c74703134c9b55c49385f87dae9e2de9239f5d9'     &&
      echo "$powershell_sha512  PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg" |
      sha512sum -c -     && mkdir -p /usr/share/powershell     && dotnet tool install
      --add-source / --tool-path /usr/share/powershell --version $POWERSHELL_VERSION
      PowerShell.Linux.x64     && rm PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg     &&
      ln -s /usr/share/powershell/pwsh /usr/bin/pwsh     && find /usr/share/powershell
      -print | grep -i '.*[.]nupkg$' | xargs rm
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc
      \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.13.1
    Name: env
  - CmdLine:
    - "set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\"
      in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124'
      ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37'
      ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807'
      ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f'
      ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb'
      ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75'
      ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358';
      \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not
      have a corresponding Go binary release; will be building from source\"; echo
      >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";
      \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c
      -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src'
      ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO
      install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall
      after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\";
      \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/protocolbuffers/protobuf/releases/download/v3.10.0/protobuf-all-3.10.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends autoconf automake
      libtool curl make g++ unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/protobuf;     tar zxf protobuf-all-3.10.0.tar.gz -C /usr/local/protobuf;     cd
      /usr/local/protobuf/protobuf-3.10.0;     ./configure;     make;     make check;     make
      install;     ldconfig;     protoc;
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* /usr/local/protobuf
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - dotnet --info && go version && protoc --version
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:buster-scm
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:buster-scm
