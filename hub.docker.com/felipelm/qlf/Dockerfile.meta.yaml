MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app/
  - CmdLine:
    - useradd -d /home/quicklook -m quicklook
    Name: run
    PrependShell: true
  - CmdLine:
    - chgrp -R quicklook /app
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R g+w /app
    Name: run
    PrependShell: true
  - Env:
    - Key: QLF_ROOT
      Value: /app
    Name: env
  - CmdLine:
    - apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates     libglib2.0-0
      libxext6 libsm6 libxrender1 git build-essential htop
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales && locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - echo 'export PATH=/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget --quiet
      https://repo.anaconda.com/archive/Anaconda3-5.1.0-Linux-x86_64.sh -O ~/anaconda.sh
      &&     /bin/bash ~/anaconda.sh -b -p /conda &&     rm ~/anaconda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl grep sed dpkg &&     TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest
      | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` &&     curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb"
      > tini.deb &&     dpkg -i tini.deb &&     rm tini.deb &&     apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /conda/bin:$PATH
    Name: env
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash -c "pip install pip --upgrade"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "conda install -y --file requirements.txt &&     pip install -r
      extras.txt"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Name: user
    User: quicklook
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
