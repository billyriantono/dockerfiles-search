MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:18.04
  Commands:
  - Maintainer: zocker-160
    Name: maintainer
  - Env:
    - Key: HANDBRAKE_VERSION
      Value: 1.3.0
    Name: env
  - Env:
    - Key: HANDBRAKE_URL
      Value: https://api.github.com/repos/HandBrake/HandBrake/releases/tags/$HANDBRAKE_VERSION
    Name: env
  - Env:
    - Key: HANDBRAKE_DEBUG_MODE
      Value: none
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Name: workdir
    Path: /HB
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tjq dtrx     curl build-essential autoconf libtool-bin
      \    m4 patch coreutils tar file git wget diffutils     libpciaccess-dev xz-utils
      libbz2-dev     libsamplerate-dev libass-dev libopus-dev libvpx-dev     libvorbis-dev
      gtk+3.0-dev libdbus-glib-1-dev     libnotify-dev libgudev-1.0-dev automake cmake
      \    debhelper libwebkitgtk-3.0-dev libspeex-dev     libbluray-dev intltool
      libxml2-dev python python3     libdvdnav-dev libdvdread-dev libgtk-3-dev     libjansson-dev
      liblzma-dev libappindicator-dev    libmp3lame-dev libogg-dev libglib2.0-dev
      ninja-build     libtheora-dev nasm yasm xterm libnuma-dev numactl     libpciaccess-dev
      linux-headers-generic libx264-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://mirrors.kernel.org/ubuntu/pool/universe/m/meson/meson_0.47.2-1ubuntu2_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y ./meson_0.47.2-1ubuntu2_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading HandBrake sources..."
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent $HANDBRAKE_URL | jq -r '.assets[0].browser_download_url' | wget
      -i - -O "HandBrake-source.tar.bz2"
    Name: run
    PrependShell: true
  - CmdLine:
    - dtrx -n HandBrake-source.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf HandBrake-source.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading patches..."
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --progress-bar -L -o /HB/HandBrake-source/HandBrake-$HANDBRAKE_VERSION/A00-hb-video-preset.patch
      https://raw.githubusercontent.com/jlesage/docker-handbrake/master/A00-hb-video-preset.patch
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /HB/HandBrake-source/HandBrake-$HANDBRAKE_VERSION
  - CmdLine:
    - echo "Compiling HandBrake..."
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure --prefix=/usr/local                 --debug=$HANDBRAKE_DEBUG_MODE                 --disable-gtk-update-checks                 --enable-fdk-aac                 --enable-x265                 --launch-jobs=$(nproc)                 --launch
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc) --directory=build install
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:18.04 AS builder
- BaseName: jlesage/baseimage-gui:ubuntu-18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: all
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends         libass9 libcairo2 libgtk-3-0
      libgudev-1.0-0 libjansson4 libnotify4          libtheora0 libvorbis0a libvorbisenc2
      speex libopus0 libxml2 numactl         xz-utils git libdbus-glib-1-2 lame x264         lsscsi         bash         coreutils         yad         findutils         expect         tcl8.6         wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://www.deb-multimedia.org/pool/main/libd/libdvdcss/libdvdcss2_1.4.2-dmo1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y ./libdvdcss2_1.4.2-dmo1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global http.sslVerify false
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/jlesage/docker-handbrake.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r docker-handbrake/rootfs/* /
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove wget git -y &&     apt-get autoremove -y &&     apt-get autoclean
      -y &&     apt-get clean -y &&     apt-get purge -y &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed-patch 's/<application type="normal">/<application type="normal" title="HandBrake">/'         /etc/xdg/openbox/rc.xml
      &&     sed-patch '/<application type="normal" title="HandBrake">/a \    <layer>below</layer>'         /etc/xdg/openbox/rc.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     APP_ICON_URL=https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/handbrake-icon.png
      &&     install_app_icon.sh "$APP_ICON_URL" &&     apt-get autoremove -y &&     apt-get
      autoclean -y &&     apt-get clean -y &&     apt-get purge -y &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local
    - /usr
  - Env:
    - Key: APP_NAME
      Value: '"HandBrake"'
    - Key: AUTOMATED_CONVERSION_PRESET
      Value: '"Very Fast 1080p30"'
    - Key: AUTOMATED_CONVERSION_FORMAT
      Value: '"mp4"'
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: all
    Name: env
  - Name: volume
    Volumes:
    - /config
  - Name: volume
    Volumes:
    - /storage
  - Name: volume
    Volumes:
    - /output
  - Name: volume
    Volumes:
    - /watch
  From:
    Image: jlesage/baseimage-gui:ubuntu-18.04
  Name: ""
  Platform: ""
  SourceCode: FROM jlesage/baseimage-gui:ubuntu-18.04
