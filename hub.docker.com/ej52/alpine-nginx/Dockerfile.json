{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ej52/alpine-base:3.4",
      "SourceCode": "FROM ej52/alpine-base:3.4",
      "Platform": "",
      "From": {
        "Image": "ej52/alpine-base:3.4"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "Elton Renda \"elton@ebrdev.co.za\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .run-deps     ca-certificates openssl pcre zlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps     build-base linux-headers openssl-dev pcre-dev wget zlib-dev     \u0026\u0026 mkdir /tmp/nginx \u0026\u0026 cd /tmp/nginx     \u0026\u0026 wget http://nginx.org/download/nginx-1.13.1.tar.gz     \u0026\u0026 tar xzf nginx-1.13.1.tar.gz     \u0026\u0026 cd nginx-1.13.1     \u0026\u0026 ./configure     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=www-data     --group=www-data     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 make clean     \u0026\u0026 strip -s /usr/sbin/nginx     \u0026\u0026 adduser -D www-data     \u0026\u0026 apk del .build-deps     \u0026\u0026 cd /     \u0026\u0026 rm /etc/nginx/*.default     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf /var/www/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}