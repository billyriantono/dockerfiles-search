MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: felipenoris <felipenoris@users.noreply.github.com>
    Name: maintainer
  - Name: workdir
    Path: /root
  - CmdLine:
    - yum update -y && yum install -y epel-release && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum update -y && yum install -y     p7zip     p7zip-plugins     bison     bzip2     bzip2-devel     cmake     curl-devel     cronie     czmq     expat-devel     file     flex     fontconfig-devel     gcc     gcc-c++     gcc-gfortran     gdb     gettext-devel     glibc-devel     gperf     java-1.8.0-openjdk-devel     lynx     libaio     libattr-devel     libcurl     libcurl-devel     libedit-devel
      libffi-devel     libgcc     libstdc++-static     libtool     m4     make     man     nano     nload     neovim     htop     openssl     openssl098e     openssl-devel     patch     perl-ExtUtils-MakeMaker     svn     unzip     valgrind     ruby     ruby-devel     sqlite     sqlite-devel     squashfs-tools     telnet     vim     wget     zeromq     zlib     zlib-devel     zip     &&
      yum clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/sbin:/usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: CPATH
      Value: /usr/include/glpk
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib:/usr/local/lib64
    Name: env
  - CmdLine:
    - yum -y install perl-Tk perl-Digest-MD5 xorriso && yum clean all
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - texlive.profile
    - texlive.profile
  - Env:
    - Key: TEXLIVE_VERSION
      Value: "2019"
    Name: env
  - CmdLine:
    - wget http://mirrors.rit.edu/CTAN/systems/texlive/Images/texlive$TEXLIVE_VERSION.iso     &&
      wget http://mirrors.rit.edu/CTAN/systems/texlive/Images/texlive$TEXLIVE_VERSION.iso.md5     &&
      RESULT=$(md5sum -c texlive$TEXLIVE_VERSION.iso.md5)     && echo ${RESULT} >
      ~/check-texlive-md5.txt     && osirrox -indev ./texlive$TEXLIVE_VERSION.iso
      -extract / ./texlive_install     && rm -f texlive$TEXLIVE_VERSION.iso     &&
      ./texlive_install/install-tl -profile ./texlive.profile     && rm -rf texlive_install
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/texlive/distribution/bin/x86_64-linux:$PATH
    Name: env
  - Env:
    - Key: GIT_VER
      Value: 2.22.0
    Name: env
  - CmdLine:
    - wget https://www.kernel.org/pub/software/scm/git/git-$GIT_VER.tar.gz     &&
      tar xf git-$GIT_VER.tar.gz && cd git-$GIT_VER     && make -j"$(nproc --all)"
      prefix=/usr/local all     && make prefix=/usr/local -j"$(nproc --all)" install     &&
      cd .. && rm -f git-$GIT_VER.tar.gz && rm -rf git-$GIT_VER
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global url."https://".insteadOf git://
    Name: run
    PrependShell: true
  - Env:
    - Key: CMAKE_VER_MAJ
      Value: "3.14"
    Name: env
  - Env:
    - Key: CMAKE_VER_MIN
      Value: ".5"
    Name: env
  - Env:
    - Key: CMAKE_VER
      Value: $CMAKE_VER_MAJ$CMAKE_VER_MIN
    Name: env
  - CmdLine:
    - wget https://cmake.org/files/v$CMAKE_VER_MAJ/cmake-$CMAKE_VER.tar.gz     &&
      tar xf cmake-$CMAKE_VER.tar.gz && cd cmake-$CMAKE_VER     && ./bootstrap &&
      make -j"$(nproc --all)" && make -j"$(nproc --all)" install     && cd .. && rm
      -rf cmake-$CMAKE_VER && rm -f cmake-$CMAKE_VER.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: CMAKE_ROOT
      Value: /usr/local/share/cmake-$CMAKE_VER_MAJ
    Name: env
  - CmdLine:
    - curl -sL https://rpm.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install npm     && rm -rf /usr/local/lib/node_modules     && mv node_modules
      /usr/local/lib/
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set proxy ${http_proxy}     && npm config set https-proxy ${https_proxy}     &&
      npm config set registry http://registry.npmjs.org/     && npm set strict-ssl
      false
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_VER
      Value: "2019.03"
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/conda/anaconda3/bin
    Name: env
  - CmdLine:
    - wget https://repo.continuum.io/archive/Anaconda3-$CONDA_VER-Linux-x86_64.sh     &&
      bash Anaconda3-$CONDA_VER-Linux-x86_64.sh -b -p /usr/local/conda/anaconda3     &&
      rm -f Anaconda3-$CONDA_VER-Linux-x86_64.sh     && conda update -n base conda
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - conda update --all
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -n py3 python=3 anaconda ipykernel     && conda create -n py2 python=2
      anaconda ipykernel
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON
      Value: /usr/local/conda/anaconda3/envs/py3/bin/python
    Name: env
  - CmdLine:
    - source activate py2 && python -m ipykernel install
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge jupyterhub -y
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py --sys-prefix widgetsnbextension
    Name: run
    PrependShell: true
  - CmdLine:
    - source activate py3 && conda install -c conda-forge jupyterlab -y
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install     lapack-devel     blas-devel     libicu-devel     unixodbc-devel     boost     boost-devel     libxml2     libxml2-devel     R     &&
      yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'options(repos = c(CRAN="https://ftp.osuosl.org/pub/cran/"))' >> /usr/lib64/R/library/base/R/Rprofile
    Name: run
    PrependShell: true
  - Env:
    - Key: RSTUDIO_VER
      Value: 1.2.1335
    Name: env
  - CmdLine:
    - wget https://download2.rstudio.org/server/centos6/x86_64/rstudio-server-rhel-$RSTUDIO_VER-x86_64.rpm     &&
      echo "da696c9823eb1c044f04adf75f722b64  rstudio-server-rhel-$RSTUDIO_VER-x86_64.rpm"
      > RSTUDIOMD5     && RESULT=$(md5sum -c RSTUDIOMD5)     && echo ${RESULT} > ~/check-rstudio-md5.txt     &&
      yum -y install --nogpgcheck rstudio-server-rhel-$RSTUDIO_VER-x86_64.rpm     &&
      yum clean all     && rm -f rstudio-server-rhel-$RSTUDIO_VER-x86_64.rpm && rm
      -f RSTUDIOMD5
    Name: run
    PrependShell: true
  - Env:
    - Key: SHINY_VER
      Value: 1.5.9.923
    Name: env
  - CmdLine:
    - R -e 'install.packages("shiny", repos="https://cran.rstudio.com/")'     && wget
      https://download3.rstudio.org/centos6.3/x86_64/shiny-server-$SHINY_VER-x86_64.rpm     &&
      echo "124aed894021af4f6aff22c8112e26bd  shiny-server-$SHINY_VER-x86_64.rpm"
      > SHINYSERVERMD5     && RESULT=$(md5sum -c SHINYSERVERMD5)     && echo ${RESULT}
      > ~/check-shiny-server-md5.txt     && yum -y install --nogpgcheck shiny-server-$SHINY_VER-x86_64.rpm     &&
      yum clean all     && cd && rm -f SHINYSERVERMD5 && rm -f shiny-server-$SHINY_VER-x86_64.rpm
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_VER_MAJ
      Value: "1.1"
    Name: env
  - Env:
    - Key: JULIA_VER_MIN
      Value: ".1"
    Name: env
  - Env:
    - Key: JULIA_VER
      Value: $JULIA_VER_MAJ$JULIA_VER_MIN
    Name: env
  - CmdLine:
    - wget https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_VER_MAJ/julia-$JULIA_VER-linux-x86_64.tar.gz         &&
      mkdir /usr/local/julia         && tar xf julia-$JULIA_VER-linux-x86_64.tar.gz
      --directory /usr/local/julia --strip-components=1         && ln -s /usr/local/julia/bin/julia
      /usr/local/bin/julia         && rm -f julia-$JULIA_VER-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PKGDIR
      Value: /usr/local/julia/share/julia/site
    Name: env
  - CmdLine:
    - yum -y install czmq-devel && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('IRkernel')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "IRkernel::installspec(user = FALSE)"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - svn-servers
    - /etc/subversion/servers
  - Env:
    - Key: SYMPHONY_VER
      Value: "5.6"
    Name: env
  - CmdLine:
    - git clone https://www.github.com/coin-or/coinbrew     && cd coinbrew     &&
      ./coinbrew fetch --no-prompt SYMPHONY:stable/$SYMPHONY_VER     && ./coinbrew
      build --no-prompt SYMPHONY --prefix=/usr/local --parallel-jobs="$(nproc --all)"     &&
      ./coinbrew install SYMPHONY     && cd .. && rm -rf coinbrew
    Name: run
    PrependShell: true
  - CmdLine:
    - source activate py3 && pip install bash_kernel     && python3 -m bash_kernel.install
    Name: run
    PrependShell: true
  - Env:
    - Key: PIGZ_VER
      Value: "2.4"
    Name: env
  - CmdLine:
    - wget http://zlib.net/pigz/pigz-$PIGZ_VER.tar.gz     && tar xf pigz-$PIGZ_VER.tar.gz     &&
      cd pigz-$PIGZ_VER     && make -j"$(nproc --all)"     && cp pigz /usr/local/bin     &&
      cp unpigz /usr/local/bin     && cd .. && rm -rf pigz-$PIGZ_VER && rm -f pigz-$PIGZ_VER.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth=1 https://anongit.freedesktop.org/git/uchardet/uchardet.git     &&
      cd uchardet     && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release
      .     && make -j"$(nproc --all)"     && make install     && cd .. && rm -rf
      uchardet
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /etc/alternatives/java_sdk
    Name: env
  - CmdLine:
    - wget http://download.redis.io/redis-stable.tar.gz     && tar xf redis-stable.tar.gz     &&
      cd redis-stable     && make -j"$(nproc --all)"     && make install     && cd
      .. && rm -rf redis-stable && rm -f redis-stable.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mongodb-org-4.0.repo
    - /etc/yum.repos.d/mongodb-org-4.0.repo
  - CmdLine:
    - yum install -y mongodb-org
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install     hdf5     libxml2-devel     libzip-devel     && yum clean
      all
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/lib64/R/lib:/usr/local/lib:/lib:/usr/lib/jvm/jre/lib/amd64/server:/usr/lib/jvm/jre/lib/amd64:/usr/lib/jvm/java/lib/amd64:/usr/java/packages/lib/amd64:/lib:/usr/lib:/usr/local/lib
    Name: env
  - CmdLine:
    - rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro     && rpm -Uvh
      http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm     &&
      yum install ffmpeg ffmpeg-devel -y
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install altair --channel conda-forge -y
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install plotly -y
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
    - "8787"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - jupyterhub_config.py
    - jupyterhub_config.py
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - /usr/lib/rstudio-server/bin/rserver     && jupyterhub --no-ssl -f jupyterhub_config.py
    Name: cmd
    PrependShell: true
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
