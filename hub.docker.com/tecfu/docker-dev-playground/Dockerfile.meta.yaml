MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: tecfu <>
    Name: maintainer
  - Key: HOME
    Name: arg
    Value: '"/root"'
  - Labels:
    - Key: maintainer
      Value: '"tecfu <>"'
    - Key: org.label-schema.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: org.label-schema.name
      Value: '"REPL Playground"'
    - Key: org.label-schema.url
      Value: '"https://twitter.com/tecfu0"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/tecfu/docker-dev-playground"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     curl     wget     git     zip     unzip     locales     software-properties-common     python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - /usr/sbin/update-locale
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libncurses5-dev libgnome2-dev libgnomeui-dev     libgtk2.0-dev
      libatk1.0-dev libbonoboui2-dev     libcairo2-dev libx11-dev libxpm-dev libxt-dev
      python-dev     python3-dev ruby-dev lua5.1 liblua5.1-dev libperl-dev git dh-autoreconf
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - git clone https://github.com/vim/vim.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/vim
  - CmdLine:
    - ./configure --with-features=huge            --enable-multibyte            --enable-rubyinterp=yes            --enable-pythoninterp=yes            --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu            --enable-python3interp=yes            --with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu            --enable-perlinterp=yes            --enable-luainterp=yes            --enable-cscope            --prefix=/usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - make VIMRUNTIMEDIR=/usr/local/share/vim/vim80
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install tmux
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - git clone https://github.com/universal-ctags/ctags
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/ctags
  - CmdLine:
    - ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - git clone https://github.com/tecfu/dotfiles
    Name: run
    PrependShell: true
  - CmdLine:
    - mv $HOME/.bashrc $HOME/.bashrc.saved
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $HOME/dotfiles/terminal/.bashrc $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $HOME/dotfiles/terminal/.inputrc $HOME/.inputrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $HOME/dotfiles/.vim $HOME/.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $HOME/dotfiles/.vim/.vimrc $HOME/.vimrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && dpkg
      -i erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod
      xenial main" > /etc/apt/sources.list.d/dotnetdev.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apt-transport-https -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://download.mono-project.com/repo/ubuntu xenial main" | tee /etc/apt/sources.list.d/mono-official.list
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:linuxuprising/java
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://cran.rstudio.com/bin/linux/ubuntu xenial/" | tee -a /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg -a --export E084DAB9 | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y esl-erlang elixir
    Name: run
    PrependShell: true
  - CmdLine:
    - mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install dotnet-sdk-2.1.4 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - echo debconf shared/accepted-oracle-license-v1-1 select true |   debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo debconf shared/accepted-oracle-license-v1-1 seen true |   debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install oracle-java10-installer oracle-java10-set-default
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-0.6.2-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvf julia-0.6.2-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - JULIA=$(ls | grep julia | awk '!/gz/')
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /root/$(ls | grep julia | awk '!/gz/')/bin/julia /usr/local/bin/julia
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install mono-devel -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nuget -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - git clone https://github.com/tecfu/docker-dev-playground
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash ./docker-dev-playground/install-nvm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python2.7 python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y r-base r-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tensorflow
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
