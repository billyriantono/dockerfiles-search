{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fsharp:10.2.3",
      "SourceCode": "FROM fsharp:10.2.3",
      "Platform": "",
      "From": {
        "Image": "fsharp:10.2.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "FrameworkPathOverride",
              "Value": "/usr/lib/mono/4.7.2-api/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get --no-install-recommends install -y     curl     libunwind8     gettext     apt-transport-https     libc6     libcurl3     libgcc1     libgssapi-krb5-2     libicu57     liblttng-ust0     libssl1.0.2     libstdc++6     libunwind8     libuuid1     zlib1g \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install gnupg -yq \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     curl -sL https://deb.nodesource.com/setup_10.x | bash \u0026\u0026     apt-get install yarn nodejs -yq \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DOTNET_SDK_VERSION=2.2.203 \u0026\u0026     DOTNET_SDK_DOWNLOAD_URL=https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \u0026\u0026     DOTNET_SDK_DOWNLOAD_SHA=8DA955FA0AEEBB6513A6E8C4C23472286ED78BD5533AF37D79A4F2C42060E736FDA5FD48B61BF5AEC10BBA96EB2610FACC0F8A458823D374E1D437B26BA61A5C \u0026\u0026     curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \u0026\u0026     echo \"$DOTNET_SDK_DOWNLOAD_SHA dotnet.tar.gz\" | sha512sum -c - \u0026\u0026     mkdir -p /usr/share/dotnet \u0026\u0026     tar -zxf dotnet.tar.gz -C /usr/share/dotnet \u0026\u0026     rm dotnet.tar.gz \u0026\u0026     ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_CLI_TELEMETRY_OPTOUT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir warmup \u0026\u0026     cd warmup \u0026\u0026     dotnet new \u0026\u0026     cd - \u0026\u0026     rm -rf warmup /tmp/NuGetScratch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dotnet tool install fake-cli --tool-path /usr/local/bin \u0026\u0026     dotnet tool install paket --tool-path /usr/local/bin \u0026\u0026     chmod a+x /usr/local/bin/fake /usr/local/bin/paket"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026     echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     apt-get update -y \u0026\u0026 apt-get install google-cloud-sdk -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        }
      ]
    }
  ]
}