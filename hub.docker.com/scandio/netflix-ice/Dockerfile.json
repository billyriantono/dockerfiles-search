{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jonbrouse/java:7",
      "SourceCode": "FROM jonbrouse/java:7",
      "Platform": "",
      "From": {
        "Image": "jonbrouse/java:7"
      },
      "Commands": [
        {
          "Maintainer": "Scandio GmbH; original by Jon Brouse @jonbrouse",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_DIR",
              "Value": "/opt/ice"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME_DIR",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRAILS_VERSION",
              "Value": "2.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRAILS_HOME",
              "Value": "${HOME_DIR}/.grails/wrapper/${GRAILS_VERSION}/grails-${GRAILS_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${HOME_DIR}/.grails/wrapper/${GRAILS_VERSION}/grails-${GRAILS_VERSION}/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRAILS_SERVER_HEAP_SPACE",
              "Value": "768M"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${HOME_DIR}"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y unzip \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   mkdir -p ${INSTALL_DIR} \u0026\u0026   mkdir -p .grails/wrapper/${GRAILS_VERSION} \u0026\u0026   curl -o .grails/wrapper/${GRAILS_VERSION}/grails-${GRAILS_VERSION}.zip http://dist.springframework.org.s3.amazonaws.com/release/GRAILS/grails-${GRAILS_VERSION}.zip \u0026\u0026   unzip .grails/wrapper/${GRAILS_VERSION}/grails-${GRAILS_VERSION}.zip -d .grails/wrapper/${GRAILS_VERSION} \u0026\u0026   rm -rf .grails/wrapper/${GRAILS_VERSION}/grails-${GRAILS_VERSION}.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${INSTALL_DIR}"
        },
        {
          "CmdLine": [
            "mkdir /mnt/ice_processor \u0026\u0026   mkdir /mnt/ice_reader \u0026\u0026   curl https://codeload.github.com/Netflix/ice/tar.gz/master | tar -zx -C /opt/ice --strip 1 \u0026\u0026   grails ${JAVA_OPTS} wrapper \u0026\u0026   rm grails-app/i18n/messages.properties \u0026\u0026   sed -i -e '1i#!/bin/bash\\' grailsw"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init/configure-and-start.sh",
            "/root/docker/ice/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/root/docker/ice/configure-and-start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}