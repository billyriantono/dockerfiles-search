{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Scandio GmbH",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CROWD_CONNECTOR_DOWNLOAD_URL",
              "Value": "https://github.com/fgimian/cwdapache.git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CROWD_CONNECTOR_VERSION",
              "Value": "2.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IMPORTCERT",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IMPORTCERTPATH",
              "Value": "/root/docker/certs"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get dist-upgrade -y     \u0026\u0026 apt-get install -y --no-install-recommends         apache2         apache2-mpm-worker         gettext-base         libcurl4-openssl-dev         lynx         curl         ca-certificates     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildDeps='         autoconf         automake         apache2-threaded-dev         git         libtool         libsvn-dev         libxml2-dev         libapache2-svn         make     '     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps     \u0026\u0026 mkdir -p /usr/local/src/crowd     \u0026\u0026 cd /usr/local/src/crowd     \u0026\u0026 git clone ${CROWD_CONNECTOR_DOWNLOAD_URL} .     \u0026\u0026 git checkout tags/${CROWD_CONNECTOR_VERSION}     \u0026\u0026 aclocal     \u0026\u0026 libtoolize     \u0026\u0026 autoheader     \u0026\u0026 automake --force-missing --add-missing     \u0026\u0026 autoreconf     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 libtool --finish /usr/local/lib     \u0026\u0026 rm -r /usr/local/src/crowd     \u0026\u0026 apt-get purge -y --auto-remove $buildDeps     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/docker/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/security.conf",
            "/root/docker/apache2/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/ssl.conf",
            "/root/docker/apache2/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init/configure-and-start.sh",
            "/root/docker/apache2/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init/reverse-proxy.conf.template",
            "/root/docker/apache2/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/apache2",
            "/etc/apache2"
          ]
        },
        {
          "CmdLine": [
            "/root/docker/apache2/configure-and-start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}