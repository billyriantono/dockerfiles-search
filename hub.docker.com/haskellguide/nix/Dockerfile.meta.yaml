MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Labels:
    - Key: '"maintainer"'
      Value: '"Geoffrey Huntley <ghuntley@ghuntley.com>"'
    Name: label
  - Labels:
    - Key: '"repository"'
      Value: '"https://github.com/haskellguide/docker-templates"'
    Name: label
  - Key: NIX_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: NIX_VERSION
      Value: ${NIX_VERSION:-2.1.3}
    Name: env
  - Key: LANG
    Name: arg
    Value: null
  - Env:
    - Key: LANG
      Value: ${LANG:-"en_US.UTF-8"}
    Name: env
  - CmdLine:
    - addgroup -g 30000 -S nixbld     && for i in $(seq 1 30); do adduser -S -D -h
      /var/empty -g "Nix build user $i" -u $((30000 + i)) -G nixbld nixbld$i ; done     &&
      adduser -D sydneyhaskell     && mkdir -m 0755 /nix && chown sydneyhaskell /nix     &&
      apk add --no-cache bash     && apk add --no-cache --update openssl     && rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: user
    User: sydneyhaskell
  - Env:
    - Key: USER
      Value: sydneyhaskell
    Name: env
  - Env:
    - Key: HOME
      Value: '"/home/sydneyhaskell"'
    Name: env
  - CmdLine:
    - cd && wget https://nixos.org/releases/nix/nix-$NIX_VERSION/nix-$NIX_VERSION-x86_64-linux.tar.bz2     &&
      tar xjf nix-*-x86_64-linux.tar.bz2     && ~/nix-*-x86_64-linux/install     &&
      rm -rf ~/nix-*-*
    Name: run
    PrependShell: true
  - Env:
    - Key: ENV
      Value: '"/home/sydneyhaskell/.nix-profile/etc/profile.d/nix.sh"'
    Name: env
  - CmdLine:
    - echo ". ${ENV}" >> ${HOME}/.profile
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /usr/bin/env
    - bash
    - -l
    - -c
  - CmdLine:
    - nix-channel --add https://nixos.org/channels/nixpkgs-18.09-darwin nixpkgs   &&
      nix-channel --update
    Name: run
    PrependShell: true
  - CmdLine:
    - nix-env -iA nixpkgs.glibcLocales     && echo "export LOCALE_ARCHIVE=$(nix-env
      --installed --no-name --out-path --query glibc-locales)/lib/locale/locale-archive"
      >> ${HOME}/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - nix-collect-garbage --delete-old   && nix-store --optimise   && nix-store --verify
      --check-contents
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/env
    - bash
    - -l
    - -c
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
