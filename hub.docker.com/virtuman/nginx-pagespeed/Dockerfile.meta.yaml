MetaArgs: null
Stages:
- BaseName: phusion/baseimage:latest
  Commands:
  - Maintainer: Alexei Smirnov <alexei@virtuman.com>
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: ${NGINX_VERSION:-1.13.0}
    - Key: PAGESPEED_VERSION
      Value: ${PAGESPEED_VERSION:-latest-stable}
    - Key: PAGESPEED_PSOL_VERSION
      Value: ${PAGESPEED_VERSION:-1.11.33.4}
    - Key: HEADERS_MORE_VERSION
      Value: ${HEADERS_MORE_VERSION:-0.32}
    - Key: OPENSSL_VERSION
      Value: ${OPENSSL_VERSION:-1.1.0e}
    - Key: TERM
      Value: xterm-256color
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-add-repository -s 'deb http://mirror.rackspace.com/ubuntu/ xenial main
      restricted universe multiverse' &&     apt-add-repository -s 'deb http://mirror.rackspace.com/ubuntu/
      xenial-updates main restricted universe multiverse' &&     apt-add-repository
      -s 'deb http://mirror.rackspace.com/ubuntu/ xenial-backports main restricted
      universe multiverse' &&     apt-add-repository -s 'deb http://mirror.rackspace.com/ubuntu/
      xenial-security main restricted universe multiverse' &&     set -ex &&     buildDeps='
      \        autoconf         automake         build-essential         debhelper
      \        gcc         libatomic-ops-dev         libc6-dev         libgd2-xpm-dev
      \        libgoogle-perftools-dev         libpcre3-dev         libperl-dev         libssl-dev
      \        libtool         libxml2-dev         libxslt1-dev         libgd2-xpm-dev
      \        make         unzip         wget         zlib1g-dev ' &&     useradd
      -r -s /usr/sbin/nologin nginx &&     mkdir -p /var/log/nginx /var/cache/nginx
      && \tapt-get update  && apt-get install -y --no-install-recommends $buildDeps
      ca-certificates libgeoip-dev lsb-release && \techo \"Downloading nginx ${NGINX_VERSION}
      from http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz ...\" && wget -qO
      - http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar zxf - -C /tmp
      && \techo \"Downloading headers-more ${HEADERS_MORE_VERSION} from https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz
      ...\" && wget -qO - https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz
      | tar zxf - -C /tmp && \techo \"Downloading ngx_pagespeed ${PAGESPEED_VERSION}
      from https://github.com/pagespeed/ngx_pagespeed/archive/${PAGESPEED_VERSION}.tar.gz...\"
      && wget -qO - https://github.com/pagespeed/ngx_pagespeed/archive/${PAGESPEED_VERSION}.tar.gz
      | tar zxf - -C /tmp && \techo \"Downloading pagespeed psol ${PAGESPEED_PSOL_VERSION}
      from https://dl.google.com/dl/page-speed/psol/${PAGESPEED_PSOL_VERSION}.tar.gz...\"
      && wget -qO - https://dl.google.com/dl/page-speed/psol/${PAGESPEED_PSOL_VERSION}.tar.gz
      | tar xzf  - -C /tmp/ngx_pagespeed-${PAGESPEED_VERSION} && \techo \"Downloading
      openssl v${OPENSSL_VERSION} from https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
      ...\" && wget -qO - https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
      | tar xzf  - -C /tmp &&     cd /tmp/nginx-${NGINX_VERSION} &&     \t./configure
      \t\t--prefix=/etc/nginx  \t\t--sbin-path=/usr/sbin/nginx  \t\t--conf-path=/etc/nginx/nginx.conf
      \ \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \ \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \ \t\t--user=nginx  \t\t--group=nginx  \t\t--with-compat \t\t--with-file-aio
      \ \t\t--with-http_addition_module  \t\t--with-http_auth_request_module  \t\t--with-http_dav_module
      \ \t\t--with-http_flv_module  \t\t--with-http_geoip_module \t\t--with-http_gunzip_module
      \ \t\t--with-http_gzip_static_module  \t\t--with-http_image_filter_module \t\t--with-http_mp4_module
      \ \t\t--with-http_random_index_module  \t\t--with-http_realip_module  \t\t--with-pcre-jit
      \t\t--with-http_secure_link_module \t\t--with-http_slice_module \t\t--with-http_ssl_module
      \ \t\t--with-http_stub_status_module  \t\t--with-http_sub_module  \t\t--with-http_v2_module
      \t\t--without-http_ssi_module \t\t--with-libatomic \t\t--with-mail \t\t--with-mail_ssl_module
      \ \t\t--with-stream \t\t--with-stream_realip_module \t\t--with-stream_ssl_module
      \        --with-stream_ssl_preread_module \t\t--with-threads \t\t--with-cc-opt='-g
      -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security
      -Wp,-D_FORTIFY_SOURCE=2'  \t\t--with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro
      -Wl,--as-needed' \t\t--with-ipv6 \t\t--with-openssl=/tmp/openssl-${OPENSSL_VERSION}
      \        --add-module=/tmp/headers-more-nginx-module-${HEADERS_MORE_VERSION}
      \t\t--add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}  && \tmake && \tmake
      install && \tapt-get purge -yqq $buildDeps && \tapt-get install -yqq geoip-database-contrib
      libgd3 && \tapt-get autoremove -yqq && \tapt-get clean autoclean && \trm -Rf
      /tmp/* /var/tmp/* /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - Env:
    - Key: DEFAULT_APP_ENV
      Value: development
    - Key: DEFAULT_APP_USER
      Value: app
    - Key: DEFAULT_APP_GROUP
      Value: app
    - Key: DEFAULT_APP_UID
      Value: "1000"
    - Key: DEFAULT_APP_GID
      Value: "1000"
    - Key: DEFAULT_UPLOAD_MAX_SIZE
      Value: 30M
    - Key: DEFAULT_NGINX_MAX_WORKER_PROCESSES
      Value: "8"
    - Key: DEFAULT_CHOWN_APP_DIR
      Value: "true"
    - Key: SSL_ENABLED
      Value: "false"
    Name: env
  - CmdLine:
    - chmod 750 /app/bin/*.sh &&     /app/bin/init_nginx.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: phusion/baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:latest
