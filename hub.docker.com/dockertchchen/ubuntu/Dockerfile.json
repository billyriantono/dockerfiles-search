{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential chrpath curl diffstat gcc-multilib g++-4.8-multilib gawk git-core libsdl1.2-dev texinfo unzip wget xterm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y openssh-client coreutils realpath libreadline-dev rpcbind nfs-common vim jq squashfs-tools quilt mtd-utils libncurses5-dev libncursesw5-dev liblzo2-dev uuid-dev gdisk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y bzip2 dosfstools mtools parted syslinux tree gettext parallel bsdmainutils ca-certificates apt-transport-https dos2unix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install regina-rexx lib32z1 lib32stdc++6 autoconf bc flex bison libtool libfdt-dev python-setuptools python-yaml device-tree-compiler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://storage.googleapis.com/git-repo-downloads/repo \u003e /usr/local/bin/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x /usr/local/bin/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python python-dev python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3.4 python3.4-dev python3-pip python3.4-venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-lzo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-7-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -svT \"/usr/lib/jvm/java-7-openjdk-$(dpkg --print-architecture)\" /docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/docker-java-home"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python -m pip install requests crcmod"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3.4 -m pip install pip --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3.4 -m pip install wheel selenium requests crcmod artifactory"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/bin; curl -fL https://getcli.jfrog.io | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /usr/bin/jfrog"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install ubi_reader artifactory"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libjson0-dev libjson0 libcurl4-openssl-dev libtool"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -N https://openssl.org/source/openssl-1.0.2h.tar.gz -P ~/   \u0026\u0026 tar -xzf ~/openssl-1.0.2h.tar.gz -C /tmp   \u0026\u0026 rm -rf ~/openssl-1.0.2h.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/openssl-1.0.2h   \u0026\u0026 ./config --prefix=/usr --openssldir=/usr/lib/openssl -fPIC shared   \u0026\u0026 make depend   \u0026\u0026 make   \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -   \u0026\u0026 echo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 apt-get update -qqy   \u0026\u0026 apt-get -qqy install google-chrome-stable   \u0026\u0026 rm /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -N http://chromedriver.storage.googleapis.com/$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip -P ~/   \u0026\u0026 unzip ~/chromedriver_linux64.zip -d ~/   \u0026\u0026 rm ~/chromedriver_linux64.zip   \u0026\u0026 sudo mv -f ~/chromedriver /usr/local/bin/chromedriver   \u0026\u0026 sudo chown root:root /usr/local/bin/chromedriver   \u0026\u0026 sudo chmod 0755 /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "id build 2\u003e/dev/null || useradd --uid 1000 --create-home build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"build ALL=(ALL) NOPASSWD: ALL\" | tee -a /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"dash dash/sh boolean false\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/toolchains"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R build:build /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/build/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"Host *\\n\\tStrictHostKeyChecking no\\n\" \u003e /home/build/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R build:build /home/build/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "build"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "build"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/build"
        },
        {
          "CmdLine": [
            "\"/bin/bash\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}