MetaArgs: null
Stages:
- BaseName: php:7.1-apache
  Commands:
  - Maintainer: ilovintit <ilovintit@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     libmemcached-dev     zlib1g-dev     libltdl7     libltdl-dev     libpq-dev     libsqlite3-dev     git     curl     libcurl3-dev     rsyslog     cron     supervisor     unzip     libicu-dev     --no-install-recommends     &&
      docker-php-ext-install -j$(nproc) iconv mcrypt pdo_mysql pdo_pgsql pdo_sqlite
      zip curl    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/     && docker-php-ext-install -j$(nproc) gd
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install apcu memcached mongodb redis \t&& docker-php-ext-enable apcu memcached
      mongodb redis"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y nodejs yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer -o composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - php composer-setup.php --install-dir=/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - "{     echo '<VirtualHost *:80>';    \techo 'ServerAdmin webmaster@localhost';
      \   \techo 'DocumentRoot /var/www/html';    \techo 'ErrorLog ${APACHE_LOG_DIR}/error.log';
      \   \techo 'CustomLog ${APACHE_LOG_DIR}/access.log combined';    \techo 'SetEnv
      HTTPS ${FORCE_HTTPS}';    echo '</VirtualHost>';} > /etc/apache2/sites-available/000-default.conf"
    Name: run
    PrependShell: true
  - Env:
    - Key: HTTPS
      Value: "off"
    Name: env
  - CmdLine:
    - echo "ServerName localhost" >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export FORCE_HTTPS=\${HTTPS}" >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  From:
    Image: php:7.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-apache
