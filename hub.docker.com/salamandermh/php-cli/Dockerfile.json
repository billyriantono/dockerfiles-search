{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli-alpine3.9",
      "SourceCode": "FROM php:7.1-cli-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli-alpine3.9"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APP_ENV",
              "Value": "${app_env:-\"prod\"}"
            },
            {
              "Key": "TIMEZONE",
              "Value": "${timezone:-\"Asia/Shanghai\"}"
            },
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "4.3.0"
            },
            {
              "Key": "PHPMONGODB_VERSION",
              "Value": "1.5.4"
            },
            {
              "Key": "PHPEVENT_VERSION",
              "Value": "2.5.3"
            },
            {
              "Key": "SWOOLE_VERSION",
              "Value": "4.3.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add     autoconf     build-base     linux-headers     libaio-dev     zlib-dev     curl     freetype-dev     libjpeg-turbo-dev     libmcrypt-dev     libpng-dev     libtool     libbz2     bzip2     bzip2-dev     libstdc++     libxslt-dev     libevent-dev     openldap-dev     imagemagick-dev     make     unzip     wget \u0026\u0026     docker-php-ext-install bcmath zip bz2 pdo_mysql mysqli simplexml opcache sockets mbstring pcntl xsl \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 docker-php-ext-enable sockets     \u0026\u0026 wget http://pecl.php.net/get/redis-${PHPREDIS_VERSION}.tgz -O /tmp/redis.tar.tgz     \u0026\u0026 pecl install /tmp/redis.tar.tgz     \u0026\u0026 rm -rf /tmp/redis.tar.tgz     \u0026\u0026 docker-php-ext-enable redis     \u0026\u0026 wget http://pecl.php.net/get/mongodb-${PHPMONGODB_VERSION}.tgz -O /tmp/mongodb.tar.tgz     \u0026\u0026 pecl install /tmp/mongodb.tar.tgz     \u0026\u0026 rm -rf /tmp/mongodb.tar.tgz     \u0026\u0026 docker-php-ext-enable mongodb     \u0026\u0026 wget http://pecl.php.net/get/event-${PHPEVENT_VERSION}.tgz -O /tmp/event.tar.tgz     \u0026\u0026 pecl install /tmp/event.tar.tgz     \u0026\u0026 rm -rf /tmp/event.tar.tgz     \u0026\u0026 docker-php-ext-enable --ini-name zz-event.ini event     \u0026\u0026 wget https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz -O swoole.tar.gz     \u0026\u0026 mkdir -p swoole     \u0026\u0026 tar -xf swoole.tar.gz -C swoole --strip-components=1     \u0026\u0026 rm swoole.tar.gz     \u0026\u0026 (         cd swoole         \u0026\u0026 phpize         \u0026\u0026 ./configure --enable-mysqlnd --enable-sockets --enable-openssl --enable-http2         \u0026\u0026 make -j$(nproc)         \u0026\u0026 make install     )     \u0026\u0026 rm -r swoole     \u0026\u0026 docker-php-ext-enable swoole \u0026\u0026     docker-php-ext-install gd \u0026\u0026     docker-php-ext-enable opcache \u0026\u0026     apk del build-base     linux-headers     libaio-dev     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer  \u0026\u0026 composer --ansi --version --no-interaction"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "php",
            "./public/server.php"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}