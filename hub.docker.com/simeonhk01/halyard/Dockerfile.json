{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8 as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"delivery-engineering@netflix.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "workdir/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "workdir"
        },
        {
          "CmdLine": [
            "GRADLE_USER_HOME=cache ./gradlew installDist -x test -Prelease.useLastTag=true"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/workdir/halyard-web/build/install/halyard",
            "/opt/halyard"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y vim \u0026\u0026     apt-get install -y sudo \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '#!/usr/bin/env bash' | tee /usr/local/bin/hal \u003e /dev/null \u0026\u0026     echo '/opt/halyard/bin/hal \"$@\"' | tee /usr/local/bin/hal \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/hal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_RELEASE",
              "Value": "1.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_BINARY_RELEASE_DATE",
              "Value": "2018-07-26"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_RELEASE}/bin/linux/amd64/kubectl \u0026\u0026     chmod +x ./kubectl \u0026\u0026     mv ./kubectl /usr/local/bin/kubectl \u0026\u0026     /usr/local/bin/kubectl version --client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_RELEASE}/${AWS_BINARY_RELEASE_DATE}/bin/linux/amd64/aws-iam-authenticator \u0026\u0026     chmod +x ./aws-iam-authenticator \u0026\u0026     mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:/usr/local/bin/aws-iam-authenticator\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python /tmp/get-pip.py \u0026\u0026     pip install awscli --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m spinnaker \u0026\u0026 usermod -aG sudo spinnaker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"spinnaker     ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "spinnaker"
        },
        {
          "CmdLine": [
            "\"/opt/halyard/bin/halyard\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}