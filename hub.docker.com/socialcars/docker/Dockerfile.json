{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "socialcars/docker:sumo",
      "SourceCode": "FROM socialcars/docker:sumo",
      "Platform": "",
      "From": {
        "Image": "socialcars/docker:sumo"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "TEX_SCHEME",
              "Value": "small"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEXMFHOME",
              "Value": "/root/texmf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/texlive/bin/x86_64-linux:/root/go/bin:/root/.local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \t\u0026\u0026 apt-get install -yy \t\tca-certificates \t\tcurl \t\twget \t\tgit \t\topenssh-client \t\tgnupg \t\tperl \t\tgolang \t\tpython3-dev \t\tlibfreetype6-dev \t\tlibpng-dev \t\tlibhdf5-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibxml++2.6-dev \t\tpython3-lxml \t\tcurl \t\tgraphviz \t\tmusl-dev \t\tfonts-mononoki \t\txz-utils \t\u0026\u0026 apt-get clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 go get -u github.com/tcnksm/ghr \t\u0026\u0026 mkdir -p /tmp/tex \u0026\u0026 curl -L http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz | tar xz --strip 1 -C /tmp/tex \t\u0026\u0026 echo \"selected_scheme scheme-$TEX_SCHEME\\\\nTEXDIR /usr/local/texlive/\\\\nTEXMFLOCAL /usr/local/texlive/texmf-local\\\\nTEXMFSYSCONFIG /usr/local/texlive/texmf-config\\\\nTEXMFSYSVAR /usr/local/texlive/texmf-var\\\\nTEXMFHOME /root/texmf\\nTEXMFCONFIG /root/.texlive/texmf-config\\\\nTEXMFVAR /root/.texlive/texmf-var\\\\nbinary_x86_64-linux 1\\\\ninstopt_adjustpath 1\\\\ninstopt_adjustrepo 1\\\\ninstopt_letter 1\\\\ninstopt_portable 0\\\\ninstopt_write18_restricted 1\\\\ntlpdbopt_autobackup 1\\\\ntlpdbopt_backupdir tlpkg/backups\\\\ntlpdbopt_create_formats 1\\\\ntlpdbopt_desktop_integration 0\\\\ntlpdbopt_file_assocs 1\\\\ntlpdbopt_generate_updmap 0\\\\ntlpdbopt_install_docfiles 0\\\\ntlpdbopt_install_srcfiles 0\\\\ntlpdbopt_post_code 1\\\\ntlpdbopt_sys_bin /tmp\\\\ntlpdbopt_sys_info /tmp\\\\ntlpdbopt_sys_man /tmp\\\\ntlpdbopt_w32_multi_user 1\\\\n\" \u003e /tmp/texinstall.profile; /tmp/tex/install-tl -profile /tmp/texinstall.profile \t\u0026\u0026 echo \"\\$pdf_mode  = 1;\\\\n\\$bibtex_use = 2;\\\\n\\$pdflatex  = 'pdflatex -halt-on-error -file-line-error -shell-escape -interaction=nonstopmode -synctex=1 %O %S';\\\\n\\$clean_ext = 'synctex.gz synctex.gz(busy) run.xml xmpi acn acr alg glsdefs vrb bbl ist glg glo gls ist lol log 1 dpth auxlock %R-figure*.* %R-blx.bib snm nav dvi xmpi tdo';\\\\n\\\\nadd_cus_dep('glo', 'gls', 0, 'makeglossaries');\\\\nadd_cus_dep('acn', 'acr', 0, 'makeglossaries');\\\\nadd_cus_dep('mp', '1', 0, 'mpost');\\\\n\\\\nsub makeglossaries {\\\\nreturn system('makeglossaries', \\$_[0]);\\\\n}\\\\n\\\\nsub mpost {\\\\nmy (\\$name, \\$path) = fileparse( \\$_[0] );\\\\nmy \\$return = system('mpost', \\$_[0]);\\\\nif ( (\\$path ne '') \u0026\u0026 (\\$path ne '.\\\\\\\\\\\\\\\\') \u0026\u0026 (\\$path ne './') ) {\\\\nforeach ( '\\$name.1', '\\$name.log' ) { move \\$_, \\$path; }\\\\n}\\\\nreturn \\$return;\\\\n}\\\\n\" \u003e /root/.latexmkrc \t\u0026\u0026 tlmgr update --self --all --reinstall-forcibly-removed \t\u0026\u0026 tlmgr install capt-of fncychap framed latexmk needspace tabulary titlesec varwidth wrapfig collection-fontsrecommended xindy \t\u0026\u0026 rm -rf /tmp/tex \t\u0026\u0026 pip3 install -U pylint radon codecov nose wheel \t\u0026\u0026 pip3 install -U -r https://gitlab.com/ascm/colmto/raw/master/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-l",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}