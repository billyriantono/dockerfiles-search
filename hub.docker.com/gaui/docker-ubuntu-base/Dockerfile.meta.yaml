MetaArgs:
- DefaultValue: "18.10"
  Key: UBUNTU_VERSION
  ProvidedValue: null
  Value: "18.10"
Stages:
- BaseName: ubuntu:${UBUNTU_VERSION}
  Commands:
  - Key: DOCKER_VERSION
    Name: arg
    Value: 19.03.4
  - Key: DOCKER_COMPOSE_VERSION
    Name: arg
    Value: 1.24.1
  - Key: GIT_VERSION
    Name: arg
    Value: 2.22.0
  - Key: FNM_VERSION
    Name: arg
    Value: 1.15.0
  - Key: NODE_VERSION
    Name: arg
    Value: 12.13.0
  - Key: YARN_VERSION
    Name: arg
    Value: 1.19.1
  - Key: TYPESCRIPT_VERSION
    Name: arg
    Value: 3.6.4
  - Key: BABEL_VERSION
    Name: arg
    Value: 7.6.3
  - Env:
    - Key: NODE_VERSION
      Value: ${NODE_VERSION}
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: NODE_PATH
      Value: /usr/lib/node_modules
    Name: env
  - Env:
    - Key: KUBECONFIG
      Value: kubeconfig
    Name: env
  - Env:
    - Key: FNM_DIR
      Value: /root/.fnm
    Name: env
  - Env:
    - Key: FNM_INTERACTIVE_CLI
      Value: "false"
    Name: env
  - Name: workdir
    Path: /tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.sh
    - .
  - CmdLine:
    - apt-get -yqq update && apt-get -yqq install     gnupg curl wget software-properties-common
      apt-transport-https     p7zip-full unzip xz-utils ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository -y ppa:git-core/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/Schniz/fnm/releases/download/v${FNM_VERSION}/fnm-linux.zip     &&
      unzip -j fnm-linux.zip     && chmod +x fnm     && mv fnm /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     && echo
      deb https://dl.yarnpkg.com/debian/ stable main | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     &&
      apt-add-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      `lsb_release -cs` stable"     && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yqq update && apt-get -yqq install     yarn=${YARN_VERSION}-1 git=1:${GIT_VERSION}-0ppa1~ubuntu`lsb_release
      -sr`.1     unzip iputils-ping inetutils-traceroute telnet nmap dnsutils net-tools
      vim     jq moreutils docker-ce=5:${DOCKER_VERSION}~3-0~ubuntu-`lsb_release -cs`     docker-ce-cli=5:${DOCKER_VERSION}~3-0~ubuntu-`lsb_release
      -cs`
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn global add     typescript@${TYPESCRIPT_VERSION} @babel/core@${BABEL_VERSION}     @babel/node@${BABEL_VERSION}
      @babel/preset-typescript
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - ./entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:${UBUNTU_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:${UBUNTU_VERSION}
