{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ethereum/client-go:latest",
      "SourceCode": "FROM ethereum/client-go:latest",
      "Platform": "",
      "From": {
        "Image": "ethereum/client-go:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update git python make g++ libnotify nodejs-npm \u0026\u0026 \tnpm install -g gulp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/etherwallet"
          ]
        },
        {
          "Name": "workdir",
          "Path": "etherwallet"
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '\"use strict\";'                                                             \u003e app/scripts/nodes.js \u0026\u0026 \techo 'var nodes = function() {}'                                                \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'nodes.customNode = require(\"./nodeHelpers/customNode\");'                  \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'nodes.nodeTypes = {'                                                      \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\tPuppethNetwork: \"PuppethDenom ETH\",'                                    \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\tCustom: \"CUSTOM ETH\"'                                                   \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '};'                                                                       \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'nodes.ensNodeTypes = [];'                                                 \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'nodes.customNodeObj = {'                                                  \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\"name\": \"CUS\",'                                                         \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\"type\": nodes.nodeTypes.Custom,'                                        \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\"eip155\": false,'                                                       \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\"chainId\": \"\",'                                                         \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\t\"tokenList\": [],'                                                       \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\t\"abiList\": [],'                                                         \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\t\"service\": \"Custom\",'                                                   \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\"lib\": null'                                                            \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '}'                                                                        \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'nodes.nodeList = {'                                                       \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\"eth_mew\": {'                                                           \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\t\"name\": \"PuppethNetwork\",'                                            \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\t\"type\": nodes.nodeTypes.PuppethNetwork,'                              \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\t\"eip155\": true,'                                                      \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\t\"chainId\": PuppethNetworkID,'                                         \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\t\t\"tokenList\": [],'                                                     \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\t\t\"abiList\": [],'                                                       \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '\t\t\"service\": \"Go Ethereum\",'                                            \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t\t\"lib\": new nodes.customNode(\"http://PuppethHost:PuppethRPCPort\", \"\")' \u003e\u003e app/scripts/nodes.js \u0026\u0026   echo '\t}'                                                                      \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo '};'                                                                       \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'nodes.ethPrice = require(\"./nodeHelpers/ethPrice\");'                      \u003e\u003e app/scripts/nodes.js \u0026\u0026 \techo 'module.exports = nodes;'                                                  \u003e\u003e app/scripts/nodes.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gulp prep \u0026\u0026 npm run dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install connect serve-static \u0026\u0026 \t\techo 'var connect = require(\"connect\");'                                       \u003e server.js \u0026\u0026 \techo 'var serveStatic = require(\"serve-static\");'                             \u003e\u003e server.js \u0026\u0026 \techo 'connect().use(serveStatic(\"/etherwallet/dist\")).listen(80, function(){' \u003e\u003e server.js \u0026\u0026 \techo '    console.log(\"Server running on 80...\");'                            \u003e\u003e server.js \u0026\u0026 \techo '});'                                                                    \u003e\u003e server.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80",
            "8545"
          ]
        }
      ]
    }
  ]
}