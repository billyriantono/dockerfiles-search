{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Maintainer": "Computer Science House",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LAM_VERSION",
              "Value": "6.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LAM_USER",
              "Value": "lam"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LAM_DIR",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "BUILD_DEPENDENCIES=\"libmagickwand-dev libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng12-dev libldb-dev libldap2-dev libcurl4-openssl-dev\"     set -ex       \u0026\u0026 apt-get update       \u0026\u0026 apt-get install -y --force-yes --no-install-recommends ${BUILD_DEPENDENCIES}       \u0026\u0026 apt-get clean       \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*       \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so       \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so       \u0026\u0026 docker-php-ext-install -j$(nproc) gettext ldap json curl zip       \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/       \u0026\u0026 docker-php-ext-install -j$(nproc) gd       \u0026\u0026 pecl install imagick-3.4.3       \u0026\u0026 docker-php-ext-enable imagick       \u0026\u0026 sed -ie \"s/\\(\\*:80\\)/\\180/g\" /etc/apache2/sites-available/000-default.conf       \u0026\u0026 sed -ie \"s/\\(Listen 80\\)/\\180/g\" /etc/apache2/ports.conf       \u0026\u0026 mkdir -p /var/lock/apache2 /var/run/apache2       \u0026\u0026 chmod og+rwx /var/lock/apache2 /var/run/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex       \u0026\u0026 useradd -M -d ${LAM_DIR} ${LAM_USER}       \u0026\u0026 cd /tmp       \u0026\u0026 curl -o lam-${LAM_VERSION}.tar.bz2 -fsSL \"https://sourceforge.net/projects/lam/files/LAM/${LAM_VERSION}/ldap-account-manager-${LAM_VERSION}.tar.bz2/download\"       \u0026\u0026 tar -xjf lam-${LAM_VERSION}.tar.bz2       \u0026\u0026 cp -R ldap-account-manager-${LAM_VERSION}/* ${LAM_DIR}       \u0026\u0026 rm -rf /tmp/*       \u0026\u0026 cp ${LAM_DIR}/config/config.cfg.sample ${LAM_DIR}/config/config.cfg       \u0026\u0026 chown -R ${LAM_USER}:${LAM_USER} ${LAM_DIR}       \u0026\u0026 chmod og+rwx ${LAM_DIR}/sess ${LAM_DIR}/tmp       \u0026\u0026 chmod 777 ${LAM_DIR}/config       \u0026\u0026 chmod 666 ${LAM_DIR}/config/config.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${LAM_DIR}"
        },
        {
          "Name": "user",
          "User": "${LAM_USER}"
        }
      ]
    }
  ]
}