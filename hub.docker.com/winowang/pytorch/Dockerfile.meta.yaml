MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Env:
    - Key: TENSORFLOW_VERSION
      Value: 1.14.0
    Name: env
  - Env:
    - Key: PYTORCH_VERSION
      Value: 1.1.0
    Name: env
  - Env:
    - Key: TORCHVISION_VERSION
      Value: 0.3.0
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.6.0.64-1+cuda10.0
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.4.7-1+cuda10.0
    Name: env
  - Env:
    - Key: MXNET_VERSION
      Value: 1.4.1
    Name: env
  - Key: python
    Name: arg
    Value: "3"
  - Env:
    - Key: PYTHON_VERSION
      Value: ${python}
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -cu
  - CmdLine:
    - echo deb http://archive.ubuntu.com/ubuntu xenial main universe | tee -a /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages
      --no-install-recommends         build-essential         cmake         gcc-4.9         g++-4.9         gcc-4.9-base         software-properties-common         git         curl         vim         wget         net-tools         bzip2         unzip         ca-certificates         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         librdmacm1         libibverbs1
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install future typing
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy         h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install torch torchvision
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz
      &&     tar zxf openmpi-4.0.0.tar.gz &&     cd openmpi-4.0.0 &&     ./configure
      --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install
      &&     ldconfig &&     rm -rf /tmp/openmpi
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/gcc gcc $(readlink -f $(which gcc)) 100
      &&     update-alternatives --install /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc
      $(readlink -f $(which gcc)) 100 &&     update-alternatives --install /usr/bin/g++
      g++ $(readlink -f $(which g++)) 100 &&     update-alternatives --install /usr/bin/x86_64-linux-gnu-g++
      x86_64-linux-gnu-g++ $(readlink -f $(which g++)) 100
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 200 &&     update-alternatives
      --install /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc /usr/bin/gcc-4.9
      200 &&     update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 200
      &&     update-alternatives --install /usr/bin/x86_64-linux-gnu-g++ x86_64-linux-gnu-g++
      /usr/bin/g++-4.9 200
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     HOROVOD_GPU_ALLREDUCE=NCCL  HOROVOD_WITH_PYTORCH=1
      pip install --no-cache-dir horovod &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --remove gcc /usr/bin/gcc-4.9 &&     update-alternatives
      --remove x86_64-linux-gnu-gcc /usr/bin/gcc-4.9 &&     update-alternatives --remove
      g++ /usr/bin/g++-4.9 &&     update-alternatives --remove x86_64-linux-gnu-g++
      /usr/bin/g++-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir
      -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new
      &&     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new &&     mv
      /etc/ssh/ssh_config.new /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends subversion &&     svn checkout https://github.com/horovod/horovod/trunk/examples
      &&     rm -rf /examples/.svn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyter                 jupyterlab                 scipy                 opencv-python                 tensorboardX                 mxboard                  tqdm                 matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/jupyter/ && wget -P /etc/jupyter/  https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/jupyter_notebook_config.py
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /root/.cache/pip/http/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/examples"'
  From:
    Image: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
