{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 buildDeps=' \t\tlibjpeg62-turbo-dev \t\tlibpng12-dev \t\tlibpq-dev \t' \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 docker-php-ext-configure gd \t\t--with-jpeg-dir=/usr \t\t--with-png-dir=/usr \t\u0026\u0026 docker-php-ext-install -j \"$(nproc)\" gd mbstring opcache pdo pdo_mysql pdo_pgsql zip \t\u0026\u0026 apt-mark manual \t\tlibjpeg62-turbo \t\tlibpq5 \t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"readfile('https://s3.amazonaws.com/files.drush.org/drush.phar');\" \u003e drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php drush core-status"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv drush /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "drush init --add-path -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.uk.debian.org/debian jessie-backports main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y zip git mysql-client pkg-config libssl-dev locate vim libzip-dev ffmpeg wget bc axel nodejs npm aria2 nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng12-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo  xdebug.idekey = \\\"PHPSTORM\\\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php composer-setup.php --install-dir=/usr/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}