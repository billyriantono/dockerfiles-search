{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "baseimage",
      "BaseName": "hyperledger/fabric-baseimage:latest",
      "SourceCode": "FROM hyperledger/fabric-baseimage:latest AS baseimage",
      "Platform": "",
      "As": "baseimage",
      "From": {
        "Image": "hyperledger/fabric-baseimage:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "go get github.com/hyperledger/fabric || true \u0026\u0026 cd $GOPATH/src/github.com/hyperledger/fabric \u0026\u0026 mkdir -p build \u0026\u0026 sed -i 's/EXECUTABLES = go docker git curl/EXECUTABLES = go/g' Makefile \u0026\u0026 make build/goshim.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "golang:1.10.3",
      "SourceCode": "FROM golang:1.10.3",
      "Platform": "",
      "From": {
        "Image": "golang:1.10.3"
      },
      "Commands": [
        {
          "Maintainer": "Dmitry Zhvakin \u003cdm@hostdm.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "baseimage",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/gopath/src/github.com/hyperledger/fabric/build/goshim.tar.bz2",
            "${GOPATH}/src/"
          ]
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026     apt install -y libtool"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /chaincode/input /chaincode/output"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}