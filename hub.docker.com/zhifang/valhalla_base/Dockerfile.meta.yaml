MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: XDG_RUNTIME_DIR
      Value: /tmp
    - Key: QT_XKB_CONFIG_ROOT
      Value: /usr/share/X11/xkb
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -yq apt-utils apt-transport-https language-pack-en-base
      lsb-release locales                         sudo gdebi-core software-properties-common
      git curl wget tar bzip2 unzip                         filezilla xvfb tcsh zsh
      ca-certificates bc dc net-tools openjdk-8-jdk                         build-essential
      cmake cmake-curses-gui automake autoconf libtool gcc                          gfortran
      g++ tzdata htop terminator vim nano pandoc tree parallel                         firefox
      &&     apt-get install -yq mesa-utils libgl1-mesa-dev libgl1-mesa-glx libgl1-mesa-dri                         libglu1-mesa-dev
      libglw1-mesa-dev libgtk2.0-dev libgtk-3-dev freeglut3-dev                         libssl-dev
      libcurl4-openssl-dev libssh2-1-dev libudunits2-dev libxml2-dev                         x11-apps
      graphviz libxrandr2 libx11-dev libxkbcommon-x11-0
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 755 /usr/local/share/zsh &&     chown -R root:root /usr/local/share/zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&     dpkg-reconfigure
      --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get install -yq libsdl1.2debian libgtk2.0-dev libgtk-3-dev libwebkitgtk-dev                         libwebkitgtk-3.0-dev
      &&     apt-get install -yq libjpeg-turbo8-dev libtiff5-dev libsdl1.2-dev libgstreamer1.0-dev                         libgstreamer-plugins-base1.0-dev
      libnotify-dev &&     apt-get install -yq libatk-adaptor libgail-common libcanberra-gtk-module
      topmenu-gtk2                         topmenu-gtk3 libjpeg62-dev adwaita-icon-theme-full
      libmng2 &&     apt-get install -yq libgdchart-gd2-xpm libgiftiio0 libjs-excanvas
      libnewmat10ldbl                         libnifti2 tcl tk &&     apt-get install
      -yq xfonts-base python-qt4 gsl-bin netpbm gnome-tweak-tool                         libxm4
      libnlopt-dev gifsicle libf2c2 libjpeg-progs                         libvolpack1
      libgfortran3 &&     apt-get install -yq libxext6 libxt6 &&     apt-get install
      -yq swig &&     apt-get install -yq libapparmor1 libedit2 libc6 psmisc rrdtool
      &&     apt-get install -yq libmagick++-dev imagemagick libmagickwand-dev &&     apt-get
      install -yq mpich libmpich-dev &&     apt-get install -yq libomp-dev libgomp1
    Name: run
    PrependShell: true
  - Env:
    - Key: BAT_THEME
      Value: '"Monokai Extended Origin"'
    Name: env
  - CmdLine:
    - wget -q https://github.com/sharkdp/bat/releases/download/v0.11.0/bat_0.11.0_amd64.deb
      &&     dpkg -i bat_0.11.0_amd64.deb &&     rm bat_0.11.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-1-amd64.deb
      &&     dpkg -i pandoc-2.7.3-1-amd64.deb &&     rm pandoc-2.7.3-1-amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o vscode.deb -SL https://go.microsoft.com/fwlink/?LinkID=760868 &&     dpkg
      -i vscode.deb &&     apt-get install -f &&     rm vscode.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/n/bin:$PATH
    Name: env
  - CmdLine:
    - curl -sL https://git.io/n-install | N_PREFIX=/opt/n bash -s -- -q latest &&     npm
      install -g npm &&     npm install -g webpack &&     npm install -g yarn
    Name: run
    PrependShell: true
  - Env:
    - Key: R_LIBS
      Value: /opt/r
    Name: env
  - CmdLine:
    - echo '\n# r mirror' | tee -a /etc/apt/sources.list &&     echo "\ndeb https://cloud.r-project.org/bin/linux/ubuntu
      xenial-cran35/" | tee -a /etc/apt/sources.list &&     apt-key adv --keyserver
      keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 &&     cat
      /etc/apt/sources.list &&     apt-get update -yq &&     apt-get install -yq r-base
      r-base-core r-base-dev texlive-latex-extra &&     apt-get clean &&     rm -rf
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/miniconda/bin:$PATH
    Name: env
  - CmdLine:
    - wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      &&     bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda &&     rm
      -f Miniconda3-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH=/opt/n/bin:$PATH &&     export QT_QPA_PLATFORM=offscreen &&     pip
      install -i https://mirrors.aliyun.com/pypi/simple/ --upgrade pip==18.1 &&     wget
      -q https://raw.githubusercontent.com/ZhifangYe/valhalla/master/requirements/requirements.txt
      &&     pip install --no-cache-dir -r requirements.txt &&     rm requirements.txt
      &&     wget -q https://raw.githubusercontent.com/ZhifangYe/valhalla/master/requirements/requirements_neuro.txt
      &&     pip install --no-cache-dir -r requirements_neuro.txt &&     rm requirements_neuro.txt
      &&     python -c "from matplotlib import font_manager" &&     jupyter contrib
      nbextension install --sys-prefix &&     jupyter nbextension enable --py --sys-prefix
      qgrid &&     jupyter labextension install --clean @jupyter-widgets/jupyterlab-manager                                          @jupyterlab/toc                                          qgrid
      &&     ln -s /opt/miniconda/lib/libicui18n.so.58 /opt/miniconda/lib/libicui18n.so.54
      &&    ln -s /opt/miniconda/lib/libicuuc.so.58 /opt/miniconda/lib/libicuuc.so.54
      &&     export NILEARN_SHARED_DATA=/opt/resources/nilearn_data &&     python
      -c "from nilearn import datasets; datasets.fetch_atlas_craddock_2012()" &&     python
      -c "from nilearn import datasets; datasets.fetch_atlas_destrieux_2009()" &&     python
      -c "from nilearn import datasets; datasets.fetch_atlas_smith_2009(mirror='nitrc')"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_aal()"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_basc_multiscale_2015()"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_basc_multiscale_2015(version='asym')"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_pauli_2017()"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_pauli_2017(version='labels')"
      &&     python -c "from nilearn import datasets; datasets.fetch_surf_fsaverage(mesh='fsaverage')"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_surf_destrieux()"
      &&     python -c "from nilearn import datasets; datasets.fetch_atlas_schaefer_2018(400,
      7)" &&     python -c "from nilearn import datasets; datasets.fetch_atlas_schaefer_2018(400,
      17)" &&     python -c "from nilearn import datasets; datasets.fetch_atlas_schaefer_2018(100,
      7)" &&     python -c "from nilearn import datasets; datasets.fetch_atlas_schaefer_2018(100,
      17)" &&     python -c "from nilearn import datasets; datasets.fetch_atlas_schaefer_2018(1000,
      7)" &&     python -c "from nilearn import datasets; datasets.fetch_atlas_schaefer_2018(1000,
      17)"
    Name: run
    PrependShell: true
  - Env:
    - Key: NILEARN_SHARED_DATA
      Value: /opt/resources/nilearn_data
    Name: env
  - CmdLine:
    - R_VERSION=1.2.1335 &&     wget -q https://download1.rstudio.org/desktop/xenial/amd64/rstudio-${R_VERSION}-amd64.deb
      &&     gdebi -n rstudio-${R_VERSION}-amd64.deb &&     rm rstudio-${R_VERSION}-amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - R_VERSION=1.2.1335 &&     wget -q https://download2.rstudio.org/server/trusty/amd64/rstudio-server-${R_VERSION}-amd64.deb
      &&     gdebi -n rstudio-server-${R_VERSION}-amd64.deb &&     rm rstudio-server-${R_VERSION}-amd64.deb
      &&     printf "www-port=8486\n" >> /etc/rstudio/rserver.conf &&     printf "rsession-which-r=/usr/bin/R\n"
      >> /etc/rstudio/rserver.conf &&     printf "server-app-armor-enabled=0\n" >>
      /etc/rstudio/rserver.conf &&     printf "r-libs-user=/opt/r\n" >> /etc/rstudio/rsession.conf
      &&     printf "session-timeout-minutes=0\n" >> /etc/rstudio/rsession.conf &&     printf
      "lock-type=advisory" >> /etc/rstudio/file-locks &&     curl -so /usr/lib/rstudio-server/bin/ldap_auth
      https://raw.githubusercontent.com/ZhifangYe/valhalla/master/helper/ldap_auth.py
      &&     curl -so /usr/lib/rstudio-server/bin/rstudio_auth https://raw.githubusercontent.com/ZhifangYe/valhalla/master/helper/rstudio_auth.sh
      &&     /opt/miniconda/bin/pip install ldap3
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/afni:${PATH}
    Name: env
  - CmdLine:
    - curl -sO https://afni.nimh.nih.gov/pub/dist/bin/linux_ubuntu_16_64/@update.afni.binaries
      &&     tcsh @update.afni.binaries -package linux_ubuntu_16_64 -bindir /opt/afni
      -apsearch yes -curl &&     rm @update.afni.binaries &&     export PATH=/opt/afni:${PATH}
      &&     export R_LIBS=/opt/r &&     export N_CPUS=$(grep -c ^processor /proc/cpuinfo)
      &&     mkdir -p /opt/r &&     wget -q https://raw.githubusercontent.com/ZhifangYe/valhalla/master/requirements/r_afni_packages.R
      &&     Rscript --slave --vanilla r_afni_packages.R &&     rm r_afni_packages.R
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
