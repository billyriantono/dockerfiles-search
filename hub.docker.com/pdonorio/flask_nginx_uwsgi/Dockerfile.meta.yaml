MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: '"Paolo D''Onorio De Meo <p.donoriodemeo@gmail.com>"'
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update -q && apt-get install -y language-pack-en     && apt-get clean
      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     wget git curl     python3-dev python3-pip     build-essential
      make gcc zlib1g-dev     libzmq3-dev sqlite3 libsqlite3-dev libcurl4-openssl-dev     software-properties-common
      python-software-properties     && add-apt-repository ppa:nginx/stable     &&
      apt-get update && apt-get upgrade -y     && apt-get install -y nginx     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade setuptools pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - mkdir -p /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/logs/uswgi
    Name: run
    PrependShell: true
  - CmdLine:
    - virtualenv /opt/venv && cd /opt && . venv/bin/activate     && pip install flask
      uwsgi         flask-sqlalchemy flask-login flask-table         flask-wtf wtforms_alchemy
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - /docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "443"
    - "80"
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
