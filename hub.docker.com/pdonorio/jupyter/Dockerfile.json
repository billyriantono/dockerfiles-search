{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "EDGE",
              "Value": "http://dl-4.alpinelinux.org/alpine/edge/community"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add         ca-certificates libstdc++ python3     \u0026\u0026 apk add --virtual=build_dependencies         cmake gcc g++ make musl-dev python3-dev     \u0026\u0026 ln -s /usr/include/locale.h /usr/include/xlocale.h     \u0026\u0026 pip3 --no-cache-dir install --upgrade pip         ipywidgets notebook requests rise         attrs         flit colorama begins         pywebview         watchdog ptpython         arrow parsedatetime timestring         boltons     \u0026\u0026 jupyter-nbextension install rise --py --sys-prefix     \u0026\u0026 jupyter-nbextension enable rise --py --sys-prefix     \u0026\u0026 jupyter nbextension enable --py widgetsnbextension     \u0026\u0026 apk --no-cache add openssl bash vim tini     \u0026\u0026 apk del --purge -r build_dependencies     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BOOTER",
              "Value": "/docker-entrypoint.sh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"#!/bin/sh\" \u003e $BOOTER     \u0026\u0026 echo \"exec jupyter notebook --no-browser --ip 0.0.0.0\" \u003e\u003e $BOOTER     \u0026\u0026 chmod +x $BOOTER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}