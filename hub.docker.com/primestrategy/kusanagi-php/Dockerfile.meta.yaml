MetaArgs:
- DefaultValue: 7.3.13
  Key: APP_VERSION
  ProvidedValue: null
  Value: 7.3.13
- DefaultValue: alpine3.10
  Key: OS_VERSION
  ProvidedValue: null
  Value: alpine3.10
Stages:
- BaseName: php:${APP_VERSION}-fpm-${OS_VERSION}
  Commands:
  - Maintainer: kusanagi@prime-strategy.co.jp
    Name: maintainer
  - Key: APCU_VERSION
    Name: arg
    Value: 5.1.18
  - Key: APCU_BC_VERSION
    Name: arg
    Value: 1.0.5
  - Key: MOZJPEG_VERSION
    Name: arg
    Value: 3.3.1
  - Key: PECL_YAML_VERSION
    Name: arg
    Value: 2.0.4
  - Key: PECL_SSH2_VERSION
    Name: arg
    Value: 1.1.2
  - Key: PECL_MSGPACK_VERSION
    Name: arg
    Value: 2.0.3
  - Key: PECL_REDIS_VERSION
    Name: arg
    Value: 5.0.2
  - Key: EXTENSION_VERSION
    Name: arg
    Value: "20180731"
  - CmdLine:
    - ": \t&& apk update \t&& apk upgrade \t&& apk add --virtual .user shadow \t&&
      groupadd -g 1001 www \t&& useradd -d /var/lib/www -s /bin/nologin -g www -M
      -u 1001 httpd \t&& groupadd -g 1000 kusanagi \t&& useradd -d /home/kusanagi
      -s /bin/nologin -g kusanagi -G www -u 1000 -m kusanagi \t&& chmod 755 /home/kusanagi
      \t&& apk del --purge .user \t&& :"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/remi_ssh2_php7_a8835aab2c15e794fce13bd927295719e384ad2d.patch
    - /tmp/remi_ssh2_php7_1.patch
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/remi_ssh2_php7_073067ba96ac99ed5696d27f13ca6c8124986e74.patch
    - /tmp/remi_ssh2_php7_2.patch
  - CmdLine:
    - "apk update \t&& apk add --update --no-cache --virtual .build-php \t\t$PHPIZE_DEPS
      \t\tbuild-base \t\tautomake \t\tgettext \t\tlibtool \t\tnasm \t\tmariadb \t\tmariadb-dev
      \t\tpostgresql \t\tpostgresql-dev \t\tgd-dev \t\tlibpng-dev \t\tlibwebp-dev
      \t\tlibxpm-dev \t\tzlib-dev \t\tlibzip-dev \t\tfreetype-dev \t\tbzip2-dev \t\tlibexif-dev
      \t\txmlrpc-c-dev \t\tpcre-dev \t\tgettext-dev \t\tlibxslt-dev \t\topenldap-dev
      \t\timap-dev \t\ticu-dev \t\tcurl \t\timagemagick \t\timagemagick-dev \t\tlibsodium
      \t\tlibsodium-dev \t\tgettext \t\targon2-dev \t\tcoreutils \t\tcurl-dev \t\tlibjpeg-turbo-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev \t\tyaml-dev
      \t\tlibssh2-dev \t&& cd /tmp \t&& curl -LO https://github.com/mozilla/mozjpeg/archive/v${MOZJPEG_VERSION}.tar.gz#//mozjpeg-${MOZJPEG_VERSION}.tar.gz
      \t&& tar xf mozjpeg-${MOZJPEG_VERSION}.tar.gz \t&& cd mozjpeg-${MOZJPEG_VERSION}
      \t&& autoreconf -fiv \t&& mkdir build && cd build \t&& sh ../configure --with-jpeg8
      --prefix=/usr \t&& make -j$(getconf _NPROCESSORS_ONLN) install \t&& strip \t\t/usr/bin/wrjpgcom
      \t\t/usr/bin/rdjpgcom \t\t/usr/bin/cjpeg \t\t/usr/bin/jpegtran \t\t/usr/bin/djpeg
      \t\t/usr/bin/tjbench \t\t/usr/lib/libturbojpeg.so.0.1.0 \t\t/usr/lib/libjpeg.so.8.1.2
      \t&& cp /usr/lib/libturbojpeg.so.0.1.0 \t\t/usr/lib/libjpeg.so.8.1.2 \t\t/tmp
      \t&& cp /usr/bin/mogrify /tmp \t&& pecl channel-update pecl.php.net \t&& docker-php-ext-configure
      gd --with-jpeg-dir=/usr/include \t\t--with-xpm-dir=/usr/include --with-webp-dir=/usr/include
      \t\t--with-png-dir=/usr/include --with-freetype-dir=/usr/include/ \t&& docker-php-ext-install
      \t\tmysqli \t\tpgsql \t\topcache \t\tgd \t\tcalendar \t\timap \t\tldap \t\tbz2
      \t\tzip \t\tpdo \t\tpdo_mysql \t\tpdo_pgsql \t\tbcmath \t\texif \t\tgettext
      \t\tpcntl \t\tsoap \t\tsockets \t\tsysvsem \t\tsysvshm \t\txmlrpc \t\txsl \t&&
      pecl install imagick \t&& pecl install libsodium \t&& pecl download ssh2-$PECL_SSH2_VERSION
      \t&& tar xf ssh2-$PECL_SSH2_VERSION.tgz \t&& (cd ssh2-$PECL_SSH2_VERSION \t&&
      patch -p1 < /tmp/remi_ssh2_php7_1.patch \t&& patch -p1 < /tmp/remi_ssh2_php7_2.patch
      \t&& phpize \t&& ./configure \t&& make \t&& make install ) \t&& rm -rf ssh2-$PECL_SSH2_VERSION.tgz
      ssh2-$PECL_SSH2_VERSION \t&& pecl install yaml-$PECL_YAML_VERSION \t&& pecl
      install apcu-$APCU_VERSION \t&& pecl install apcu_bc-$APCU_BC_VERSION \t&& pecl
      install msgpack-$PECL_MSGPACK_VERSION \t&& pecl download redis-$PECL_REDIS_VERSION
      \t&& tar xf redis-$PECL_REDIS_VERSION.tgz \t&& (cd redis-$PECL_REDIS_VERSION
      \t&& phpize \t&& ./configure  --enable-redis --enable-redis-msgpack --enable-redis-lzf
      \t&& make \t&& make install )\t&& rm -rf redis-$PECL_REDIS_VERSION.tgz redis-$PECL_REDIS_VERSION
      \t&& docker-php-source delete \t&& docker-php-ext-enable imagick sodium ssh2
      yaml apcu apc msgpack redis \t&& strip /usr/local/lib/php/extensions/no-debug-non-zts-${EXTENSION_VERSION}/*.so
      \t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/local/bin/php
      /tmp/mogriify \t\t\t/usr/local/lib/php/extensions/no-debug-non-zts-${EXTENSION_VERSION}/*.so
      /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| grep -v jpeg \t\t\t|
      awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\"
      $1 }' \t)\" \t&& apk del .gettext \t&& apk add --no-cache --virtual .php-rundeps
      $runDeps \t&& apk del .build-php \t&& mv /tmp/envsubst /usr/bin/envsubst \t&&
      cd / \t&& mv /tmp/mogrify /usr/bin \t&& rm -f /usr/local/etc/php/conf.d/docker-php-ext-apc.ini
      \t&& rm -f /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \t&& rm -f /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
      \t&& rm -rf /tmp/mozjpeg* /tmp/pear /usr/include /usr/lib/pkgconfig /usr/lib/*a
      /usr/share/doc /usr/share/man \t&& apk add pngquant optipng jpegoptim ssmtp
      \t&& chown httpd /etc/ssmtp /etc/ssmtp/ssmtp.conf \t&& mv /tmp/libturbojpeg.so.0.1.0
      /tmp/libjpeg.so.8.1.2 /usr/lib \t&& mkdir -p /etc/php7.d/conf.d /etc/php7-fpm.d
      \t&& cp /usr/local/etc/php/conf.d/* /etc/php7.d/conf.d/ \t&& cp /usr/local/etc/php-fpm.d/*
      /etc/php7-fpm.d/ \t&& mkdir -p /var/log/php7-fpm \t&& ln -sf /dev/stdout /var/log/php7-fpm/www-error.log
      \t&& ln -sf /dev/stderr /var/log/php7-fpm/www-slow.log \t&& :"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /var/lib/php7/session /var/lib/php7/wsdlcache  \t&& chown httpd:www
      /var/lib/php7/session /var/lib/php7/wsdlcache \t&& echo mysqli.default_socket=/var/run/mysqld/mysqld.sock
      >> /usr/local/etc/php/conf.d/docker-php-ext-mysqli.ini \t&& echo pdo_mysql.default_socket
      = /var/run/mysqld/mysqld.sock >> /usr/local/etc/php/conf.d/docker-php-ext-pdo_mysql.ini
      \t&& cd /tmp \t&& curl -LO https://composer.github.io/installer.sha384sum \t&&
      curl -LO https://getcomposer.org/installer \t&& sha3sum installer.sha384sum
      \t&& php installer --filename=composer --install-dir=/usr/local/bin \t&& rm
      installer installer.sha384sum \t&& :"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/*.ini
    - /usr/local/etc/php/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/opcache*.blacklist
    - /usr/local/etc/php.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/www.conf
    - /usr/local/etc/php-fpm.d/www.conf.template
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/php7-fpm.conf
    - /usr/local/etc/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/php.ini-production
    - /usr/local/etc/php.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/docker-entrypoint.sh
    - /usr/local/bin
  - CmdLine:
    - chown -R httpd:www /usr/local/etc
    Name: run
    PrependShell: true
  - Key: MICROSCANNER_TOKEN
    Name: arg
    Value: null
  - CmdLine:
    - "if [ x${MICROSCANNER_TOKEN} != x ] ; then \tapk add --no-cache --virtual .ca
      ca-certificates \t&& update-ca-certificates\t&& wget --no-check-certificate
      https://get.aquasec.com/microscanner \t&& chmod +x microscanner \t&& ./microscanner
      ${MICROSCANNER_TOKEN} || exit 1 \t&& rm ./microscanner \t&& apk del --purge
      .ca ;\tfi"
    Name: run
    PrependShell: true
  - Name: user
    User: httpd
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/local/sbin/php-fpm
    - --nodaemonize
    - --fpm-config
    - /usr/local/etc/php-fpm.conf
    Name: cmd
    PrependShell: false
  From:
    Image: php:${APP_VERSION}-fpm-${OS_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM php:${APP_VERSION}-fpm-${OS_VERSION}
