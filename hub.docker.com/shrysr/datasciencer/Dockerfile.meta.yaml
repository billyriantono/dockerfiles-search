MetaArgs: null
Stages:
- BaseName: rocker/shiny-verse:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Shreyas Ragavan <sr@eml.cc>"'
    - Key: version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - "apt-get update -qq \t&& apt-get -y --no-install-recommends install \tlbzip2
      \tlibfftw3-dev         libgdal-dev         libgeos-dev         libgsl0-dev         libgl1-mesa-dev
      \        libglu1-mesa-dev         libhdf4-alt-dev         libhdf5-dev         libjq-dev
      \        liblwgeom-dev         libpq-dev         libproj-dev         libprotobuf-dev
      \        libnetcdf-dev         libsqlite3-dev         libssl-dev         libudunits2-dev
      \        netcdf-bin         postgis         protobuf-compiler         sqlite3
      \        tk-dev         unixodbc-dev         libsasl2-dev         libv8-dev
      \tlibsodium-dev         pandoc \tpandoc-citeproc \tdtrx \ttree \tlibzmq3-dev
      \t&& rm -rf /var/lib/apt \t&& apt-get autoclean"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \tshinyWidgets         shinythemes         shinyjs"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \tmongolite         jsonlite         config"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \ttidyquant"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \tplotly"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \tumap"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE     \tinspectdf \tDataExplorer \tjanitor"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \tglmnet \tparsnip \trecipes \trsample \trpart.plot
      \tcaret"
    Name: run
    PrependShell: true
  - CmdLine:
    - "install2.r --error --deps TRUE \tdrake \teasypackages \tremotes \t&& installGithub.r
      karthik/holepunch"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y --no-install-recommends install git
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Key: PANDOC_TEMPLATES_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: PATH
      Value: /usr/lib/rstudio-server/bin:$PATH
    Name: env
  - Env:
    - Key: PANDOC_TEMPLATES_VERSION
      Value: ${PANDOC_TEMPLATES_VERSION:-2.9}
    Name: env
  - Env:
    - Key: RSTUDIOSERVER_VERSION
      Value: 1.2.5036
    Name: env
  - Env:
    - Key: RSTUDIO_PREVIEW
      Value: "YES"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install psmisc && mkdir -p /download && cd /download
      && wget https://s3.amazonaws.com/rstudio-ide-build/server/bionic/amd64/rstudio-server-${RSTUDIOSERVER_VERSION}-amd64.deb
      \t&& gdebi --n rstudio-server-${RSTUDIOSERVER_VERSION}-amd64.deb   && rm rstudio-server-*-amd64.deb
      \  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin   && ln
      -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin   && git
      clone --recursive --branch ${PANDOC_TEMPLATES_VERSION} https://github.com/jgm/pandoc-templates
      \  && mkdir -p /opt/pandoc/templates   && cp -r pandoc-templates*/* /opt/pandoc/templates
      && rm -rf pandoc-templates*   && mkdir /root/.pandoc && ln -s /opt/pandoc/templates
      /root/.pandoc/templates   && apt-get clean   && rm -rf /var/lib/apt/lists/   &&
      mkdir -p /etc/R   && echo '\\n    \\n# Configure httr to perform out-of-band
      authentication if HTTR_LOCALHOST     \\n# is not set since a redirect to localhost
      may not work depending upon     \\n# where this Docker container is running.
      \    \\nif(is.na(Sys.getenv(\"HTTR_LOCALHOST\", unset=NA))) {     \\n  options(httr_oob_default
      = TRUE)     \\n}' >> /usr/local/lib/R/etc/Rprofile.site   && echo \"PATH=${PATH}\"
      >> /usr/local/lib/R/etc/Renviron   && useradd rstudio   && echo \"rstudio:rstudio\"
      | chpasswd \t&& mkdir /home/rstudio \t&& chown rstudio:rstudio /home/rstudio
      \t&& addgroup rstudio staff   &&  echo 'rsession-which-r=/usr/local/bin/R' >>
      /etc/rstudio/rserver.conf   && echo 'lock-type=advisory' >> /etc/rstudio/file-locks
      \  && git config --system credential.helper 'cache --timeout=3600'   && git
      config --system push.default simple   && mkdir -p /etc/services.d/rstudio   &&
      echo '#!/usr/bin/with-contenv bash           \\n## load /etc/environment vars
      first:   \t\t  \\n for line in $( cat /etc/environment ) ; do export $line ;
      done           \\n exec /usr/lib/rstudio-server/bin/rserver --server-daemonize
      0'           > /etc/services.d/rstudio/run   && echo '#!/bin/bash           \\n
      rstudio-server stop'           > /etc/services.d/rstudio/finish   && mkdir -p
      /home/rstudio/.rstudio/monitored/user-settings   && echo 'alwaysSaveHistory=\"0\"
      \          \\nloadRData=\"0\"           \\nsaveAction=\"0\"'           > /home/rstudio/.rstudio/monitored/user-settings/user-settings
      \  && chown -R rstudio:rstudio /home/rstudio/.rstudio \t&& rstudio-server start"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - userconf.sh
    - /etc/cont-init.d/userconf
  - Name: expose
    Ports:
    - "8787"
  From:
    Image: rocker/shiny-verse:latest
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/shiny-verse:latest
