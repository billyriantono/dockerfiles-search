{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Hector Qiu \u003chectorqiuiscool@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PCRE_VERSION",
              "Value": "8.40"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.1.0e"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZLIB_VERSION",
              "Value": "1.2.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y -qq git wget build-essential zlib1g-dev libpcre3-dev git gcc g++ make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src     \u0026\u0026 cd /usr/src     \u0026\u0026 wget http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz     \u0026\u0026 wget \"http://linux.stanford.edu/pub/exim/pcre/pcre-$PCRE_VERSION.tar.gz\"     \u0026\u0026 wget \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\"     \u0026\u0026 wget \"http://zlib.net/zlib-$ZLIB_VERSION.tar.gz\"     \u0026\u0026 git clone https://github.com/cuber/ngx_http_google_filter_module     \u0026\u0026 git clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module     \u0026\u0026 tar xzf nginx-$NGINX_VERSION.tar.gz     \u0026\u0026 tar xzf pcre-$PCRE_VERSION.tar.gz     \u0026\u0026 tar xzf openssl-$OPENSSL_VERSION.tar.gz     \u0026\u0026 tar xzf zlib-$ZLIB_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/nginx-$NGINX_VERSION     \u0026\u0026 ./configure --prefix=/etc/nginx          --sbin-path=/usr/sbin/nginx          --conf-path=/etc/nginx/nginx.conf          --error-log-path=/var/log/nginx/error.log          --http-log-path=/var/log/nginx/access.log          --pid-path=/var/run/nginx.pid          --lock-path=/var/run/nginx.lock         --http-client-body-temp-path=/var/cache/nginx/client_temp          --http-proxy-temp-path=/var/cache/nginx/proxy_temp          --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp          --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp          --http-scgi-temp-path=/var/cache/nginx/scgi_temp          --user=nginx          --group=nginx          --with-http_ssl_module          --with-http_realip_module          --with-http_addition_module          --with-http_sub_module          --with-http_dav_module          --with-http_flv_module          --with-http_mp4_module         --with-http_gunzip_module          --with-http_gzip_static_module         --with-http_random_index_module         --with-http_secure_link_module          --with-http_stub_status_module          --with-http_auth_request_module          --with-threads          --with-stream          --with-stream_ssl_module          --with-http_slice_module          --with-mail          --with-mail_ssl_module          --with-file-aio          --with-http_v2_module          --with-ipv6          --with-pcre=../pcre-$PCRE_VERSION         --with-openssl=../openssl-$OPENSSL_VERSION         --with-zlib=../zlib-$ZLIB_VERSION          --add-module=../ngx_http_google_filter_module          --add-module=../ngx_http_substitutions_filter_module \u0026\u0026     make install     \u0026\u0026 useradd --no-create-home nginx     \u0026\u0026 mkdir -p /var/cache/nginx     \u0026\u0026 mkdir -p /etc/nginx/sites-enabled     \u0026\u0026 mkdir -p /etc/nginx/streams-enabled"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx/sites-enabled/*",
            "/etc/nginx/sites-enabled/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "nginx \u0026\u0026 tail -F /var/log/nginx/access.log"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}