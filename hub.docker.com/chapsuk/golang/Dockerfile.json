{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.12.3-alpine3.9",
      "SourceCode": "FROM golang:1.12.3-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "golang:1.12.3-alpine3.9"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache git make ca-certificates curl gcc musl-dev bash openssh-client           \u0026\u0026 curl -sfL https://raw.githubusercontent.com/golang/dep/master/install.sh | sh            \u0026\u0026 curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh       \u0026\u0026 go get github.com/onsi/ginkgo/ginkgo                                                     \u0026\u0026 go get github.com/onsi/gomega/..."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL   \u0026\u0026 tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   \u0026\u0026 rm -rf /tmp/dockerize-linux-amd64.tar.gz   \u0026\u0026 dockerize --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GIT_SSH_COMMAND",
              "Value": "'ssh -o \"StrictHostKeyChecking=no\"'"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}