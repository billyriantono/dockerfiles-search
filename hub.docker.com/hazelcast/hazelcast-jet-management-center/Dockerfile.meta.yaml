MetaArgs: null
Stages:
- BaseName: openjdk:8u201-jre-alpine
  Commands:
  - Env:
    - Key: MC_VERSION
      Value: 3.2.1
    Name: env
  - Env:
    - Key: MC_HOME
      Value: /opt/hazelcast-jet-management-center
    Name: env
  - Key: HZ_KUBE_VERSION
    Name: arg
    Value: "1.4"
  - Key: HZ_EUREKA_VERSION
    Name: arg
    Value: 1.1.1
  - Key: HZ_AWS_VERSION
    Name: arg
    Value: "2.4"
  - Key: MC_INSTALL_NAME
    Name: arg
    Value: '"hazelcast-jet-management-center-${MC_VERSION}"'
  - Key: MC_INSTALL_ZIP
    Name: arg
    Value: '"${MC_INSTALL_NAME}.zip"'
  - Key: MC_INSTALL_DIR
    Name: arg
    Value: '"${MC_HOME}/${MC_INSTALL_NAME}"'
  - Key: MC_INSTALL_JAR
    Name: arg
    Value: '"hazelcast-jet-management-center-${MC_VERSION}.jar"'
  - Key: HZ_AWS_API_JAR
    Name: arg
    Value: '"hazelcast-aws-${HZ_AWS_VERSION}.jar"'
  - Env:
    - Key: MC_RUNTIME
      Value: '"${MC_INSTALL_DIR}/${MC_INSTALL_JAR}"'
    Name: env
  - CmdLine:
    - apk add --no-cache bash curl  && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${MC_HOME}/lib  && chmod a+rwx ${MC_HOME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${MC_HOME}
  - CmdLine:
    - curl -svf -o ${MC_HOME}/${MC_INSTALL_ZIP}          -L https://download.hazelcast.com/hazelcast-jet-management-center/${MC_INSTALL_ZIP}  &&
      unzip ${MC_INSTALL_ZIP}       -x ${MC_INSTALL_NAME}/manual/*  && rm -rf ${MC_INSTALL_ZIP}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -svf -o ${MC_HOME}/lib/${HZ_AWS_API_JAR}          -L https://repo1.maven.org/maven2/com/hazelcast/hazelcast-aws/${HZ_AWS_VERSION}/${HZ_AWS_API_JAR}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -svf -o ${MC_HOME}/maven-wrapper.tar.gz          -L https://github.com/takari/maven-wrapper/archive/maven-wrapper-0.3.0.tar.gz  &&
      tar zxf maven-wrapper.tar.gz  && rm -fr maven-wrapper.tar.gz  && mv maven-wrapper*
      mvnw
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mvnw
    - ${MC_HOME}/mvnw
  - CmdLine:
    - cd mvnw  && chmod +x mvnw  && sync  && ./mvnw -f dependency-copy.xml            -Dhazelcast-kubernetes-version=${HZ_KUBE_VERSION}            -Dhazelcast-eureka-version=${HZ_EUREKA_VERSION}            dependency:copy-dependencies  &&
      cd ..  && rm -rf $MC_HOME/mvnw  && rm -rf ~/.m2  && chmod -R +r $MC_HOME
    Name: run
    PrependShell: true
  - Env:
    - Key: CLASSPATH_DEFAULT
      Value: '"${MC_RUNTIME}"'
    Name: env
  - Env:
    - Key: LOADER_PATH
      Value: '"${MC_HOME}/lib"'
    Name: env
  - Env:
    - Key: JAVA_OPTS_DEFAULT
      Value: '"-Djava.net.preferIPv4Stack=true -Dloader.path=${LOADER_PATH}"'
    Name: env
  - Env:
    - Key: MIN_HEAP_SIZE
      Value: '""'
    Name: env
  - Env:
    - Key: MAX_HEAP_SIZE
      Value: '""'
    Name: env
  - Env:
    - Key: JAVA_OPTS
      Value: '""'
    Name: env
  - Env:
    - Key: CLASSPATH
      Value: '""'
    Name: env
  - Env:
    - Key: CLI_ARGS
      Value: '""'
    Name: env
  - Env:
    - Key: MC_HTTP_PORT
      Value: "8081"
    Name: env
  - Env:
    - Key: MC_LICENSE_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: MC_CLIENT_CONFIG
      Value: '""'
    Name: env
  - Env:
    - Key: MC_APPLICATION_CONFIG
      Value: '""'
    Name: env
  - Env:
    - Key: MC_USER
      Value: '""'
    Name: env
  - Env:
    - Key: MC_PASSWORD
      Value: '""'
    Name: env
  - Name: expose
    Ports:
    - ${MC_HTTP_PORT}
  - CmdLine:
    - bash
    - -c
    - 'set -euo pipefail       && if [[ "x${CLASSPATH}" != "x" ]]; then export CLASSPATH="${CLASSPATH_DEFAULT}:${CLASSPATH}";
      else export CLASSPATH="${CLASSPATH_DEFAULT}"; fi       && if [[ "x${JAVA_OPTS}"
      != "x" ]]; then export JAVA_OPTS="${JAVA_OPTS_DEFAULT} ${JAVA_OPTS}"; else export
      JAVA_OPTS="${JAVA_OPTS_DEFAULT}"; fi       && if [[ "x${MIN_HEAP_SIZE}" != "x"
      ]]; then export JAVA_OPTS="${JAVA_OPTS} -Xms${MIN_HEAP_SIZE}"; fi       && if
      [[ "x${MAX_HEAP_SIZE}" != "x" ]]; then export JAVA_OPTS="${JAVA_OPTS} -Xms${MAX_HEAP_SIZE}";
      fi       && if [[ "x${MC_HTTP_PORT}" != "x" ]]; then export CLI_ARGS="${CLI_ARGS}
      -p ${MC_HTTP_PORT}"; fi       && if [[ "x${MC_LICENSE_KEY}" != "x" ]]; then
      export CLI_ARGS="${CLI_ARGS} -l ${MC_LICENSE_KEY}"; fi       && if [[ "x${MC_CLIENT_CONFIG}"
      != "x" ]]; then export CLI_ARGS="${CLI_ARGS} -c ${MC_CLIENT_CONFIG}"; fi       &&
      if [[ "x${MC_APPLICATION_CONFIG}" != "x" ]]; then export CLI_ARGS="${CLI_ARGS}
      -f ${MC_APPLICATION_CONFIG}"; fi       && if [[ "x${MC_USER}" != "x" ]]; then
      export CLI_ARGS="${CLI_ARGS} -U ${MC_USER}"; fi       && if [[ "x${MC_PASSWORD}"
      != "x" ]]; then export CLI_ARGS="${CLI_ARGS} -P ${MC_PASSWORD}"; fi       &&
      echo "########################################"       && echo "# JAVA_OPTS=${JAVA_OPTS}"       &&
      echo "# CLASSPATH=${CLASSPATH}"       && echo "# starting now...."       &&
      echo "########################################"       && set -x       && exec
      java -server ${JAVA_OPTS} org.springframework.boot.loader.PropertiesLauncher
      ${CLI_ARGS}      '
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8u201-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8u201-jre-alpine
