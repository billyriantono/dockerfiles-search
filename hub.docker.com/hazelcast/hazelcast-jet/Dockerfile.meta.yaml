MetaArgs: null
Stages:
- BaseName: openjdk:8u201-jre-alpine
  Commands:
  - Key: JET_VERSION
    Name: arg
    Value: 3.2.1
  - Key: CACHE_API_VERSION
    Name: arg
    Value: 1.1.0
  - Key: HZ_KUBE_VERSION
    Name: arg
    Value: "1.4"
  - Key: HZ_EUREKA_VERSION
    Name: arg
    Value: 1.1.1
  - Key: HZ_AWS_VERSION
    Name: arg
    Value: "2.4"
  - Key: JMX_PROMETHEUS_AGENT_VERSION
    Name: arg
    Value: 0.11.0
  - Key: JET_HOME
    Name: arg
    Value: '"/opt/hazelcast-jet"'
  - Key: JET_JAR
    Name: arg
    Value: '"hazelcast-jet-${JET_VERSION}.jar"'
  - Key: CACHE_API_JAR
    Name: arg
    Value: '"cache-api-${CACHE_API_VERSION}.jar"'
  - Key: HZ_AWS_API_JAR
    Name: arg
    Value: '"hazelcast-aws-${HZ_AWS_VERSION}.jar"'
  - CmdLine:
    - apk add --no-cache bash curl  && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${JET_HOME}/lib
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${JET_HOME}
  - CmdLine:
    - curl -svf -o ${JET_HOME}/lib/${JET_JAR}          -L https://repo1.maven.org/maven2/com/hazelcast/jet/hazelcast-jet/${JET_VERSION}/${JET_JAR}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -svf -o ${JET_HOME}/lib/${HZ_AWS_API_JAR}          -L https://repo1.maven.org/maven2/com/hazelcast/hazelcast-aws/${HZ_AWS_VERSION}/${HZ_AWS_API_JAR}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -svf -o ${JET_HOME}/lib/${CACHE_API_JAR}          -L https://repo1.maven.org/maven2/javax/cache/cache-api/${CACHE_API_VERSION}/${CACHE_API_JAR}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -svf -o ${JET_HOME}/lib/jmx_prometheus_javaagent.jar          -L https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_PROMETHEUS_AGENT_VERSION}/jmx_prometheus_javaagent-${JMX_PROMETHEUS_AGENT_VERSION}.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -svf -o ${JET_HOME}/maven-wrapper.tar.gz          -L https://github.com/takari/maven-wrapper/archive/maven-wrapper-0.3.0.tar.gz  &&
      tar zxf maven-wrapper.tar.gz  && rm -fr maven-wrapper.tar.gz  && mv maven-wrapper*
      mvnw
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mvnw
    - ${JET_HOME}/mvnw
  - CmdLine:
    - cd mvnw  && chmod +x mvnw  && sync  && ./mvnw -f dependency-copy.xml            -Dhazelcast-kubernetes-version=${HZ_KUBE_VERSION}            -Dhazelcast-eureka-version=${HZ_EUREKA_VERSION}            -Dhazelcast-jet-version=${JET_VERSION}            dependency:copy-dependencies            dependency:unpack  &&
      cd ..  && rm -rf $JET_HOME/mvnw  && rm -rf ~/.m2  && chmod -R +r $JET_HOME  &&
      mv $JET_HOME/hazelcast-jet-$JET_VERSION/* $JET_HOME/  && rm -rf $JET_HOME/hazelcast-jet-$JET_VERSION
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - logging.properties
    - ${JET_HOME}/logging.properties
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jmx_agent_config.yaml
    - ${JET_HOME}/jmx_agent_config.yaml
  - Env:
    - Key: CLASSPATH_DEFAULT
      Value: '"${JET_HOME}:${JET_HOME}/*:${JET_HOME}/lib:${JET_HOME}/lib/*"'
    Name: env
  - Env:
    - Key: JAVA_OPTS_DEFAULT
      Value: '"-Djava.net.preferIPv4Stack=true -Djava.util.logging.config.file=${JET_HOME}/logging.properties"'
    Name: env
  - Env:
    - Key: JET_HOME
      Value: $JET_HOME
    Name: env
  - Env:
    - Key: MIN_HEAP_SIZE
      Value: '""'
    Name: env
  - Env:
    - Key: MAX_HEAP_SIZE
      Value: '""'
    Name: env
  - Env:
    - Key: CLASSPATH
      Value: '""'
    Name: env
  - Env:
    - Key: JAVA_OPTS
      Value: '""'
    Name: env
  - Env:
    - Key: PATH
      Value: $JET_HOME/bin:$PATH
    Name: env
  - Env:
    - Key: LOGGING_LEVEL
      Value: '""'
    Name: env
  - Env:
    - Key: PROMETHEUS_PORT
      Value: '""'
    Name: env
  - Env:
    - Key: PROMETHEUS_CONFIG
      Value: $JET_HOME/jmx_agent_config.yaml
    Name: env
  - Name: expose
    Ports:
    - "5701"
  - CmdLine:
    - bash
    - -c
    - 'set -euo pipefail       && eval JAVA_OPTS=\"${JAVA_OPTS}\"       && eval CLASSPATH=\"${CLASSPATH}\"       &&
      if [[ "x${CLASSPATH}" != "x" ]]; then export CLASSPATH="${CLASSPATH}:${CLASSPATH_DEFAULT}";
      else export CLASSPATH="${CLASSPATH_DEFAULT}"; fi       && if [[ "x${JAVA_OPTS}"
      != "x" ]]; then export JAVA_OPTS="${JAVA_OPTS} ${JAVA_OPTS_DEFAULT}"; else export
      JAVA_OPTS="${JAVA_OPTS_DEFAULT}"; fi       && if [[ "x${MIN_HEAP_SIZE}" != "x"
      ]]; then export JAVA_OPTS="-Xms${MIN_HEAP_SIZE} ${JAVA_OPTS}"; fi       && if
      [[ "x${MAX_HEAP_SIZE}" != "x" ]]; then export JAVA_OPTS="-Xmx${MAX_HEAP_SIZE}
      ${JAVA_OPTS} "; fi       && if [[ "x${PROMETHEUS_PORT}" != "x" ]]; then export
      JAVA_OPTS="-javaagent:${JET_HOME}/lib/jmx_prometheus_javaagent.jar=${PROMETHEUS_PORT}:${PROMETHEUS_CONFIG}
      ${JAVA_OPTS} "; fi       && if [[ "x${LOGGING_LEVEL}" != "x" ]]; then sed -i
      "s/java.util.logging.ConsoleHandler.level = INFO/java.util.logging.ConsoleHandler.level
      = ${LOGGING_LEVEL}/g;s/.level= INFO/.level= ${LOGGING_LEVEL}/g" logging.properties;
      fi       && echo "########################################"       && echo "#
      JAVA_OPTS=${JAVA_OPTS}"       && echo "# CLASSPATH=${CLASSPATH}"       && echo
      "# starting now...."       && echo "########################################"       &&
      set -x       && exec java -server ${JAVA_OPTS} com.hazelcast.jet.server.StartServer      '
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8u201-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8u201-jre-alpine
