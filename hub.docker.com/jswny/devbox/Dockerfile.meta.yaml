MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: XDG_CONFIG_HOME
    Name: arg
    Value: /root/.config
  - Key: XDG_DATA_HOME
    Name: arg
    Value: /root/.local/share
  - Key: XDG_CACHE_HOME
    Name: arg
    Value: /root/.cache
  - Key: HOME
    Name: arg
    Value: /root
  - Key: ZSH_CUSTOM
    Name: arg
    Value: $XDG_DATA_HOME/oh-my-zsh/custom
  - CmdLine:
    - rm /etc/dpkg/dpkg.cfg.d/excludes
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - CmdLine:
    - apt-get install -y     man-db     locales     apt-utils     make     cmake     git     curl
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Key: LC_ALL
    Name: arg
    Value: en_US.UTF-8
  - CmdLine:
    - apt-get install -y     tmux
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s $(which zsh)
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /usr/bin/zsh
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dotfiles/.config/
    - $XDG_CONFIG_HOME
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dotfiles/.zshenv
    - $HOME/
  - Name: shell
    Shell:
    - /usr/bin/zsh
    - -c
  - CmdLine:
    - mkdir -p $XDG_DATA_HOME/zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $XDG_CACHE_HOME/zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - export ZSH="$XDG_DATA_HOME/oh-my-zsh"; sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ~/.zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/seebi/dircolors-solarized.git $XDG_DATA_HOME/dircolors-solarized
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/tmux-plugins/tpm $XDG_DATA_HOME/tmux/plugins/tpm
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $XDG_CONFIG_HOME/tmux/tmux.conf $HOME/.tmux.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - $XDG_DATA_HOME/tmux/plugins/tpm/bin/install_plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/junegunn/fzf.git $XDG_DATA_HOME/fzf
    Name: run
    PrependShell: true
  - CmdLine:
    - $XDG_DATA_HOME/fzf/install --all --no-bash --xdg
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.6.3
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && asdf plugin-add erlang
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && asdf plugin-add elixir
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     build-essential     autoconf     m4     libncurses5-dev     libwxgtk3.0-dev     libgl1-mesa-dev     libglu1-mesa-dev     libpng16-16     libssh-dev     unixodbc-dev     xsltproc     libxml2-utils     fop
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && asdf install erlang 21.2.5
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && asdf global erlang 21.2.5
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && asdf install elixir ref:v1.8.0
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && asdf global elixir ref:v1.8.0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     python-pip     python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install thefuck
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install --upgrade pynvim
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pynvim
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     ninja-build     gettext     libtool     libtool-bin     autoconf     automake     cmake     g++     pkg-config     unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/neovim/neovim.git /tmp/nvim
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/nvim
  - CmdLine:
    - git checkout v0.3.2
    Name: run
    PrependShell: true
  - CmdLine:
    - make clean
    Name: run
    PrependShell: true
  - CmdLine:
    - make CMAKE_BUILD_TYPE=Release install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - rm -rf /tmp/nvim
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/bin/nvim /usr/local/bin/vim
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sfLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - vim --headless '+PlugInstall --sync' +qa &> /var/log/nvim_plug_install.log
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && mix local.rebar --force
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/elixir-lsp/elixir-ls.git /usr/local/share/elixir-ls
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/share/elixir-ls
  - CmdLine:
    - rm .tool-versions
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && mix deps.get
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && mix compile
    Name: run
    PrependShell: true
  - CmdLine:
    - source $HOME/.asdf/asdf.sh && mix elixir_ls.release
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/share/elixir-ls/release/language_server.sh /usr/local/bin/elixir-ls.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - /usr/bin/zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
