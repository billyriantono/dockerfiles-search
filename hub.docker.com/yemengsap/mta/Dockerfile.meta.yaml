MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-slim
  Commands:
  - Key: MTA_USER_HOME
    Name: arg
    Value: /home/mta
  - Key: MTA_HOME
    Name: arg
    Value: '''/opt/sap/mta'''
  - Key: MTA_VERSION
    Name: arg
    Value: 1.1.7
  - Key: NODE_VERSION
    Name: arg
    Value: v10.13.0
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.6.0
  - Env:
    - Key: MTA_JAR_LOCATION
      Value: '"${MTA_HOME}/lib/mta.jar"'
    Name: env
  - Env:
    - Key: M2_HOME
      Value: /opt/maven/apache-maven-${MAVEN_VERSION}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/mtaBuild.sh
    - ${MTA_HOME}/bin/mtaBuild.sh
  - CmdLine:
    - 'apt-get update && apt-get install -y       curl &&     rm -rf /var/lib/apt/lists/*
      &&     mkdir -p `dirname ${MTA_JAR_LOCATION}` &&     curl --fail          --silent          --cookie
      "eula_3_1_agreed=tools.hana.ondemand.com/developer-license-3_1.txt;"          --output
      ${MTA_JAR_LOCATION}       https://tools.hana.ondemand.com/additional/mta_archive_builder-${MTA_VERSION}.jar
      &&     curl --fail          --silent          --output ${MTA_HOME}/LICENSE.txt        https://tools.hana.ondemand.com/developer-license-3_1.txt
      &&     ln -s ${MTA_HOME}/bin/mtaBuild.sh /usr/local/bin/mtaBuild &&     INSTALLED_MTA_VERSION=`mtaBuild
      --version` &&     echo "[INFO] mta version: \"${INSTALLED_MTA_VERSION}\"." &&     apt-get
      update &&     apt-get install -y git &&     NODE_HOME=/opt/nodejs; mkdir -p
      ${NODE_HOME} &&     curl --fail --silent --output - http://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz      |tar
      -xzv -f - -C ${NODE_HOME} &&     ln -s ${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/node
      /usr/local/bin/node &&     ln -s ${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npm
      /usr/local/bin/npm &&     INSTALLED_NODE_VERSION=`node --version` &&     echo
      "[INFO] node version: \"${INSTALLED_NODE_VERSION}\"." &&     npm config set
      @sap:registry https://npm.sap.com --global &&     echo "[INFO] installing maven."
      &&     M2_BASE=`dirname ${M2_HOME}` &&     mkdir -p ${M2_BASE} &&     curl --fail
      --silent --output - https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz       |
      tar -xzvf - -C ${M2_BASE} &&     ln -s ${M2_HOME}/bin/mvn /usr/local/bin/mvn
      &&     INSTALLED_MAVEN_VERSION=`mvn -version |head -n1 |cut -d '' '' -f  3`
      &&     echo "[INFO] maven version: \"${INSTALLED_MAVEN_VERSION}\"." &&     apt-get
      remove --purge --autoremove -y       curl &&     useradd --home-dir ${MTA_USER_HOME}             --create-home             --shell
      /bin/bash             --user-group             --uid 1000             --comment
      ''SAP-MTA tooling''             --password `echo weUseMta |openssl passwd -1
      -stdin` mta &&    [ "${NODE_VERSION}" = "${INSTALLED_NODE_VERSION}" ] || { echo
      "[ERROR] Installed node version ''${INSTALLED_NODE_VERSION}'' does not match
      expected node version ''${NODE_VERSION}''."; exit 1; } &&    [ "${MAVEN_VERSION}"
      = "${INSTALLED_MAVEN_VERSION}" ] || { echo "[ERROR] Installed maven version
      ''${INSTALLED_MAVEN_VERSION}'' does not match expected maven version ''${MAVEN_VERSION}''.";
      exit 1; }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /project
  - Env:
    - Key: PATH
      Value: ./node_modules/.bin:$PATH
    Name: env
  - Name: user
    User: mta
  From:
    Image: openjdk:8-jdk-slim
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-slim
