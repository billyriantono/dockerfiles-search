{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk-slim",
      "SourceCode": "FROM openjdk:8-jdk-slim",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk-slim"
      },
      "Commands": [
        {
          "Key": "MTA_USER_HOME",
          "Name": "arg",
          "Value": "/home/mta"
        },
        {
          "Key": "MTA_HOME",
          "Name": "arg",
          "Value": "'/opt/sap/mta'"
        },
        {
          "Key": "MTA_VERSION",
          "Name": "arg",
          "Value": "1.1.7"
        },
        {
          "Key": "NODE_VERSION",
          "Name": "arg",
          "Value": "v10.13.0"
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "3.6.0"
        },
        {
          "Env": [
            {
              "Key": "MTA_JAR_LOCATION",
              "Value": "\"${MTA_HOME}/lib/mta.jar\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/opt/maven/apache-maven-${MAVEN_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/mtaBuild.sh",
            "${MTA_HOME}/bin/mtaBuild.sh"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y       curl \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     mkdir -p `dirname ${MTA_JAR_LOCATION}` \u0026\u0026     curl --fail          --silent          --cookie \"eula_3_1_agreed=tools.hana.ondemand.com/developer-license-3_1.txt;\"          --output ${MTA_JAR_LOCATION}       https://tools.hana.ondemand.com/additional/mta_archive_builder-${MTA_VERSION}.jar \u0026\u0026     curl --fail          --silent          --output ${MTA_HOME}/LICENSE.txt        https://tools.hana.ondemand.com/developer-license-3_1.txt \u0026\u0026     ln -s ${MTA_HOME}/bin/mtaBuild.sh /usr/local/bin/mtaBuild \u0026\u0026     INSTALLED_MTA_VERSION=`mtaBuild --version` \u0026\u0026     echo \"[INFO] mta version: \\\"${INSTALLED_MTA_VERSION}\\\".\" \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y git \u0026\u0026     NODE_HOME=/opt/nodejs; mkdir -p ${NODE_HOME} \u0026\u0026     curl --fail --silent --output - http://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz      |tar -xzv -f - -C ${NODE_HOME} \u0026\u0026     ln -s ${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/node /usr/local/bin/node \u0026\u0026     ln -s ${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npm /usr/local/bin/npm \u0026\u0026     INSTALLED_NODE_VERSION=`node --version` \u0026\u0026     echo \"[INFO] node version: \\\"${INSTALLED_NODE_VERSION}\\\".\" \u0026\u0026     npm config set @sap:registry https://npm.sap.com --global \u0026\u0026     echo \"[INFO] installing maven.\" \u0026\u0026     M2_BASE=`dirname ${M2_HOME}` \u0026\u0026     mkdir -p ${M2_BASE} \u0026\u0026     curl --fail --silent --output - https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz       | tar -xzvf - -C ${M2_BASE} \u0026\u0026     ln -s ${M2_HOME}/bin/mvn /usr/local/bin/mvn \u0026\u0026     INSTALLED_MAVEN_VERSION=`mvn -version |head -n1 |cut -d ' ' -f  3` \u0026\u0026     echo \"[INFO] maven version: \\\"${INSTALLED_MAVEN_VERSION}\\\".\" \u0026\u0026     apt-get remove --purge --autoremove -y       curl \u0026\u0026     useradd --home-dir ${MTA_USER_HOME}             --create-home             --shell /bin/bash             --user-group             --uid 1000             --comment 'SAP-MTA tooling'             --password `echo weUseMta |openssl passwd -1 -stdin` mta \u0026\u0026    [ \"${NODE_VERSION}\" = \"${INSTALLED_NODE_VERSION}\" ] || { echo \"[ERROR] Installed node version '${INSTALLED_NODE_VERSION}' does not match expected node version '${NODE_VERSION}'.\"; exit 1; } \u0026\u0026    [ \"${MAVEN_VERSION}\" = \"${INSTALLED_MAVEN_VERSION}\" ] || { echo \"[ERROR] Installed maven version '${INSTALLED_MAVEN_VERSION}' does not match expected maven version '${MAVEN_VERSION}'.\"; exit 1; }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/project"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "./node_modules/.bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "mta"
        }
      ]
    }
  ]
}