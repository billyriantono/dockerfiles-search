MetaArgs: null
Stages:
- BaseName: ubuntu:15.04
  Commands:
  - Maintainer: Ivan Krizsan, https://github.com/krizsan
    Name: maintainer
  - Env:
    - Key: SET_CONTAINER_TIMEZONE
      Value: "false"
    Name: env
  - Env:
    - Key: CONTAINER_TIMEZONE
      Value: Europe/Stockholm
    Name: env
  - Env:
    - Key: ELASTALERT_URL
      Value: https://github.com/Yelp/elastalert/archive/master.zip
    Name: env
  - Env:
    - Key: CONFIG_DIR
      Value: /opt/config
    Name: env
  - Env:
    - Key: RULES_DIRECTORY
      Value: /opt/rules
    Name: env
  - Env:
    - Key: ELASTALERT_CONFIG
      Value: ${CONFIG_DIR}/elastalert_config.yaml
    Name: env
  - Env:
    - Key: LOG_DIR
      Value: /opt/logs
    Name: env
  - Env:
    - Key: ELASTALERT_DIRECTORY_NAME
      Value: elastalert
    Name: env
  - Env:
    - Key: ELASTALERT_HOME
      Value: /opt/${ELASTALERT_DIRECTORY_NAME}
    Name: env
  - Env:
    - Key: ELASTALERT_SUPERVISOR_CONF
      Value: ${CONFIG_DIR}/elastalert_supervisord.conf
    Name: env
  - Env:
    - Key: ELASTICSEARCH_HOST
      Value: elasticsearch_host
    Name: env
  - Env:
    - Key: ELASTICSEARCH_PORT
      Value: "9200"
    Name: env
  - Name: workdir
    Path: /opt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./start-elastalert.sh
    - /opt/
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install -y wget python
      python-dev unzip gcc ntp &&     wget https://bootstrap.pypa.io/get-pip.py &&     python
      get-pip.py &&     rm get-pip.py &&     wget ${ELASTALERT_URL} &&     unzip *.zip
      &&     rm *.zip &&     mv e* ${ELASTALERT_DIRECTORY_NAME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ELASTALERT_HOME}
  - CmdLine:
    - 'python setup.py install &&     pip install -e . &&     easy_install supervisor
      &&     chmod +x /opt/start-elastalert.sh &&     mkdir ${CONFIG_DIR} &&     mkdir
      ${RULES_DIRECTORY} &&     mkdir ${LOG_DIR} &&     cp ${ELASTALERT_HOME}/config.yaml.example
      ${ELASTALERT_CONFIG} &&     cp ${ELASTALERT_HOME}/supervisord.conf.example ${ELASTALERT_SUPERVISOR_CONF}
      &&     sed -i -e"s|rules_folder: [[:print:]]*|rules_folder: ${RULES_DIRECTORY}|g"
      ${ELASTALERT_CONFIG} &&     sed -i -e"s|es_host: [[:print:]]*|es_host: ${ELASTICSEARCH_HOST}|g"
      ${ELASTALERT_CONFIG} &&     sed -i -e"s|es_port: [0-9]*|es_port: ${ELASTICSEARCH_PORT}|g"
      ${ELASTALERT_CONFIG} &&     sed -i -e"s|logfile=.*log|logfile=${LOG_DIR}/elastalert_supervisord.log|g"
      ${ELASTALERT_SUPERVISOR_CONF} &&     sed -i -e"s|stderr_logfile=.*log|stderr_logfile=${LOG_DIR}/elastalert_stderr.log|g"
      ${ELASTALERT_SUPERVISOR_CONF} &&     sed -i -e"s|python elastalert.py|python
      -m elastalert.elastalert --config ${ELASTALERT_CONFIG}|g" ${ELASTALERT_SUPERVISOR_CONF}
      &&     cp ${ELASTALERT_CONFIG} ${ELASTALERT_HOME}/config.yaml &&     supervisord
      -c ${ELASTALERT_SUPERVISOR_CONF} &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
      &&     apt-get purge --yes --auto-remove python-dev &&     apt-get clean'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${CONFIG_DIR}
    - ${RULES_DIRECTORY}
    - ${LOG_DIR}
  - CmdLine:
    - /opt/start-elastalert.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:15.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:15.04
