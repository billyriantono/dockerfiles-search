MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - CmdLine:
    - apt-get -y -q update     && DEBIAN_FRONTEND=noninteractive apt-get -y -q --no-install-recommends
      install apt-transport-https curl ca-certificates gnupg dirmngr     && echo "deb
      https://deb.nodesource.com/node_8.x stretch main" > /etc/apt/sources.list.d/nodesource.list     &&
      echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list     &&
      curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add
      -     && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     &&
      apt-get -y -q update     && DEBIAN_FRONTEND=noninteractive apt-get -y -q --no-install-recommends
      install         build-essential         nodejs         yarn         jq         libfreetype6         libfontconfig1     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*     && rm /var/log/dpkg.log     &&
      curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64"     &&
      chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C
    Name: env
  - Env:
    - Key: NODE_PATH
      Value: '"/usr/local/lib/node_modules:/usr/lib/node_modules"'
    Name: env
  - CmdLine:
    - mkdir -p /var/www
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
