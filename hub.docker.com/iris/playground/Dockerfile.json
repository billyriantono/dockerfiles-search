{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "opensuse:13.1",
      "SourceCode": "FROM opensuse:13.1",
      "Platform": "",
      "From": {
        "Image": "opensuse:13.1"
      },
      "Commands": [
        {
          "Maintainer": "Péter Szilágyi \u003cpeterke@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "zypper ar -f http://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_13.1/              Go         \u0026\u0026   zypper ar -f http://download.opensuse.org/repositories/devel:/languages:/python3/openSUSE_13.1          Python     \u0026\u0026   zypper ar -f http://download.opensuse.org/repositories/devel:/languages:/erlang:/Factory/openSUSE_13.1/ Erlang     \u0026\u0026   zypper ar -f http://download.opensuse.org/repositories/Java:/Factory/openSUSE_13.1/                     Java       \u0026\u0026   zypper ar -f http://download.opensuse.org/repositories/devel:/tools:/building/openSUSE_13.1/            BuildTools \u0026\u0026   zypper --gpg-auto-import-keys --non-interactive ref                                                                \u0026\u0026   zypper --non-interactive dup                                                                                       \u0026\u0026   zypper --non-interactive install go erlang java-1_8_0-openjdk java-1_8_0-openjdk-devel maven python3 python3-devel        python3-pip libzmq3 zeromq-devel wget tar git mercurial                                                          \u0026\u0026   pip install circus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FETCH",
              "Value": "./fetch.sh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo '#!/bin/bash'                   \u003e $FETCH \u0026\u0026   echo 'set -e'                       \u003e\u003e $FETCH \u0026\u0026   echo 'file=`basename $1`'           \u003e\u003e $FETCH \u0026\u0026   echo 'echo \"Downloading $1...\"'     \u003e\u003e $FETCH \u0026\u0026   echo 'wget -q $1'                   \u003e\u003e $FETCH \u0026\u0026   echo 'echo \"$2  $file\" \u003e $file.sum' \u003e\u003e $FETCH \u0026\u0026   echo 'sha1sum -c $file.sum'         \u003e\u003e $FETCH \u0026\u0026   echo 'rm $file.sum'                 \u003e\u003e $FETCH \u0026\u0026   chmod +x $FETCH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCALA_HOME",
              "Value": "/usr/local/share/scala"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export SCALA_VER=2.11.2                                                     \u0026\u0026   export SCALA_TAR=scala-$SCALA_VER.tgz                                       \u0026\u0026   export SCALA_SHA=904e9ee3bb96e8350b1e0f2502a704f836c0cdf1                   \u0026\u0026   $FETCH http://downloads.typesafe.com/scala/$SCALA_VER/$SCALA_TAR $SCALA_SHA \u0026\u0026     mkdir -p $SCALA_HOME                                             \u0026\u0026   tar -xvf $SCALA_TAR --directory $SCALA_HOME --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$SCALA_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git config --global url.\"https://\".insteadOf git://"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IRIS",
              "Value": "iris-v0.3.2-linux-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "$FETCH http://iris.karalabe.com/downloads/$IRIS 111c781c26b1df04e9366009cce773b415afe1ed \u0026\u0026   chmod +x $IRIS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/binds/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get gopkg.in/project-iris/iris-go.v1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ERL_LIBS",
              "Value": "/binds/erlang"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export ERLTEMP=/binds/erltmp                   \u0026\u0026   mkdir -p $ERLTEMP                              \u0026\u0026   cd $ERLTEMP                                    \u0026\u0026   wget https://github.com/rebar/rebar/wiki/rebar \u0026\u0026   chmod +x rebar                                 \u0026\u0026     echo '{deps, [{iris, \".*\", {git, \"https://github.com/project-iris/iris-erl.git\", {branch, \"v1\"}}}]}.'  \u003e rebar.config \u0026\u0026   ./rebar get-deps                                                                                                      \u0026\u0026   ./rebar compile                                                                                                       \u0026\u0026     mv ./deps $ERL_LIBS \u0026\u0026   rm -rf $ERLTEMP"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLASSPATH",
              "Value": "/binds/java"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export JAR_VER=1.0.0 \u0026\u0026   mkdir -p $CLASSPATH  \u0026\u0026   cd $CLASSPATH        \u0026\u0026     wget http://repo1.maven.org/maven2/com/karalabe/iris/iris/$JAR_VER/iris-$JAR_VER.pom \u0026\u0026   mvn org.apache.maven.plugins:maven-dependency-plugin:2.8:copy-dependencies     -f $CLASSPATH/iris-$JAR_VER.pom                                              -DoutputDirectory=$CLASSPATH                                          \u0026\u0026     rm -f $CLASSPATH/iris-$JAR_VER.pom                         \u0026\u0026   mvn org.apache.maven.plugins:maven-dependency-plugin:2.8:copy     -Dartifact=com.karalabe.iris:iris:$JAR_VER                      -DoutputDirectory=$CLASSPATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLASSPATH",
              "Value": "$CLASSPATH/*"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "patches",
            "/patches"
          ]
        },
        {
          "CmdLine": [
            "go get code.google.com/p/go.tools/cmd/present     \u0026\u0026   cd $GOPATH/src/code.google.com/p/go.tools         \u0026\u0026   hg import --no-commit /patches/playground.diff    \u0026\u0026   go install code.google.com/p/go.tools/cmd/present \u0026\u0026     useradd -MU present"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "base",
            "/present/base"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "binds",
            "/present/root/talks/binds"
          ]
        },
        {
          "Env": [
            {
              "Key": "ORIGHOST",
              "Value": "play.iris.karalabe.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CIRCUS_INI",
              "Value": "circus.ini"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo '[circus]'                                                                        \u003e $CIRCUS_INI \u0026\u0026   echo 'statsd = 1'                                                                     \u003e\u003e $CIRCUS_INI \u0026\u0026   echo                                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo '[watcher:iris]'                                                                 \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'cmd = $(circus.env.IRIS)'                                                       \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'args = -dev'                                                                    \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stdout_stream.class    = FileStream'                                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stdout_stream.filename = $(circus.env.IRIS).out.log'                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stderr_stream.class    = FileStream'                                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stderr_stream.filename = $(circus.env.IRIS).err.log'                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo                                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo '[watcher:present]'                                                              \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'cmd = $(circus.env.GOPATH)/bin/present'                                         \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'working_dir = /present/root'                                                    \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'args = -base=/present/base -http=0.0.0.0:3999 -orighost=$(circus.env.ORIGHOST)' \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'uid = present'                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'gid = present'                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'copy_env = True'                                                                \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stdout_stream.class    = FileStream'                                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stdout_stream.filename = present.out.log'                                       \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stderr_stream.class    = FileStream'                                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stderr_stream.filename = present.err.log'                                       \u003e\u003e $CIRCUS_INI \u0026\u0026   echo                                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo '[env:present]'                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'HOME=/'                                                                         \u003e\u003e $CIRCUS_INI \u0026\u0026   echo                                                                                  \u003e\u003e $CIRCUS_INI \u0026\u0026   echo '[watcher:portal]'                                                               \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'cmd = go'                                                                       \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'args = run /present/root/talks/binds/go.v1/src/portalhidden.go'                 \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'copy_env = True'                                                                \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stdout_stream.class    = FileStream'                                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stdout_stream.filename = portal.out.log'                                        \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stderr_stream.class    = FileStream'                                            \u003e\u003e $CIRCUS_INI \u0026\u0026   echo 'stderr_stream.filename = portal.err.log'                                        \u003e\u003e $CIRCUS_INI"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "circusd",
            "circus.ini"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}