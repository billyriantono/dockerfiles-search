MetaArgs: null
Stages:
- BaseName: java:openjdk-8
  Commands:
  - Env:
    - Key: FORWARD_REFERENCE_VERSION
      Value: '"beta-20170413"'
    Name: env
  - Env:
    - Key: BIDIRECTIONAL_REFERENCE_VERSION
      Value: '"beta-20170413"'
    Name: env
  - CmdLine:
    - "curl -fsSL https://deb.nodesource.com/setup_6.x | bash - && \tapt-get update
      -y && \tapt-get upgrade -y"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tcurl \tlibunwind8 \tgettext \tapt-transport-https"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
      && \tmv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg && \tsh -c 'echo
      \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-jessie-prod
      jessie main\" > /etc/apt/sources.list.d/dotnetdev.list'"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y &&   apt-get install -y \tgit \tlibpq-dev \tpostgresql \tvim"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \texpect"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tgcc \tlibpqtypes-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tnodejs"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g pg@7.3.0 mocha@4.0.1 pg-error-codes@1.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tpython-pip \tpython-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tphp5-cli \tphp5-pgsql"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tdotnet-sdk-2.0.0 \tnuget"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install psycopg2
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir ruby-install && \tcurl -fsSL https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz
      | tar --strip-components=1 -C ruby-install -xz && \tmake -C ruby-install install
      && \truby-install --system ruby 2.4.0 && \tgem update --system"
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install pg
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL -o /tmp/apache-maven.tar.gz
      https://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz   &&
      echo "6a1b346af36a1f1a491c1c1a141667c5de69b42e6611d3687df26868bc0f4637  /tmp/apache-maven.tar.gz"
      | sha256sum -c -   && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven
      --strip-components=1   && rm -f /tmp/apache-maven.tar.gz   && ln -s /usr/share/maven/bin/mvn
      /usr/bin/mvn
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '<?xml version="1.0" encoding="UTF-8"?> <project xmlns="http://maven.apache.org/POM/4.0.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
      http://maven.apache.org/xsd/maven-4.0.0.xsd"> <modelVersion>4.0.0</modelVersion>
      <groupId>java</groupId> <artifactId>java</artifactId> <version>1.0-SNAPSHOT</version>
      <dependencies> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId>
      <version>4.8.1</version> </dependency> <dependency> <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId> <version>42.1.4</version> </dependency>
      <dependency> <groupId>org.apache.maven.surefire</groupId> <artifactId>surefire-junit4</artifactId>
      <version>2.12.4</version> </dependency> <dependency> <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId> <version>2.0.6</version> </dependency>
      <dependency> <groupId>org.apache.maven</groupId> <artifactId>maven-repository-metadata</artifactId>
      <version>2.0.6</version> </dependency> <dependency> <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId> <version>2.0.6</version> </dependency>
      <dependency> <groupId>classworlds</groupId> <artifactId>classworlds</artifactId>
      <version>1.1-alpha-2</version> </dependency> </dependencies> <build> <testSourceDirectory>src/main</testSourceDirectory>
      </build> </project> ' > pom.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - mvn test
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone --depth 1 -b fatjartests https://github.com/cockroachdb/finagle-postgres.git
      && \tcd /finagle-postgres && \t./sbt assembly && \tmv target/scala-2.11/finagle-postgres-tests.jar
      / && \tcd / && rm -rf /finagle-postgres ~/.ivy2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /forward-reference-version && \tcurl -SL https://binaries.cockroachdb.com/cockroach-${FORWARD_REFERENCE_VERSION}.linux-amd64.tgz
      | tar xvz -C /tmp && \tmv /tmp/cockroach-${FORWARD_REFERENCE_VERSION}*/* /forward-reference-version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /bidirectional-reference-version && \tcurl -SL https://binaries.cockroachdb.com/cockroach-${BIDIRECTIONAL_REFERENCE_VERSION}.linux-amd64.tgz
      | tar xvz -C /tmp && \tmv /tmp/cockroach-${BIDIRECTIONAL_REFERENCE_VERSION}*/*
      /bidirectional-reference-version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl https://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz -o golang.tar.gz
      \t&& tar -C /usr/local -xzf golang.tar.gz \t&& rm golang.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /nuget &&   echo '<?xml version=\"1.0\" encoding=\"utf-8\"?><configuration><packageSources><add
      key=\"local-packages\" value=\".\" /></packageSources></configuration>' > /nuget/NuGet.Config
      && \tcurl -fsSL https://www.nuget.org/api/v2/package/Npgsql/3.2.5 > /nuget/npgsql.3.2.5.nupkg"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/go/bin:$HOME/dotnet:$PATH
    Name: env
  From:
    Image: java:openjdk-8
  Name: ""
  Platform: ""
  SourceCode: FROM java:openjdk-8
