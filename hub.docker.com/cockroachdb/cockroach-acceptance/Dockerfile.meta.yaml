MetaArgs: null
Stages:
- BaseName: ubuntu:artful-20170916
  Commands:
  - CmdLine:
    - apt-get update  && apt-get install --yes --no-install-recommends ca-certificates
      curl
    Name: run
    PrependShell: true
  - Env:
    - Key: FORWARD_REFERENCE_VERSION
      Value: '"v2.0.0"'
    Name: env
  - Env:
    - Key: BIDIRECTIONAL_REFERENCE_VERSION
      Value: '"v2.0.0"'
    Name: env
  - CmdLine:
    - mkdir /opt/forward-reference-version /opt/bidirectional-reference-version  &&
      curl -fsSL https://binaries.cockroachdb.com/cockroach-${FORWARD_REFERENCE_VERSION}.linux-amd64.tgz     |
      tar xz -C /opt/forward-reference-version --strip-components=1  && curl -fsSL
      https://binaries.cockroachdb.com/cockroach-${BIDIRECTIONAL_REFERENCE_VERSION}.linux-amd64.tgz     |
      tar xz -C /opt/bidirectional-reference-version --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes --no-install-recommends openjdk-8-jdk  && curl -fsSL https://github.com/cockroachdb/finagle-postgres/archive/94b1325270.tar.gz
      | tar xz  && cd finagle-postgres-*  && ./sbt assembly  && mv target/scala-2.11/finagle-postgres-tests.jar
      /opt/finagle-postgres-tests.jar  && rm -rf /finagle-postgres-* ~/.ivy2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg > /etc/apt/trusted.gpg.d/yarn.asc  &&
      echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list  &&
      curl -fsSL https://packages.microsoft.com/keys/microsoft.asc > /etc/apt/trusted.gpg.d/microsoft.asc  &&
      echo "deb https://packages.microsoft.com/repos/microsoft-ubuntu-zesty-prod zesty
      main" > /etc/apt/sources.list.d/microsoft.list  && apt-get update  && apt-get
      install --yes --no-install-recommends     dotnet-sdk-2.0.0     expect     libc6-dev     libpq-dev     libpqtypes-dev     make     maven     nodejs     gcc     golang     php-cli     php-pgsql     postgresql-client     python     python-psycopg2     ruby     ruby-pg     xmlstarlet     yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://github.com/benesch/autouseradd/releases/download/1.0.0/autouseradd-1.0.0-amd64.tar.gz     |
      tar xz -C /usr --strip-components 1
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /testdata
  - Env:
    - Key: DOTNET_CLI_TELEMETRY_OPTOUT
      Value: "1"
    - Key: NUGET_PACKAGES
      Value: /var/lib/nuget/packages
    Name: env
  - CmdLine:
    - (cd /testdata/csharp && dotnet restore --no-cache)  && xmlstarlet ed --inplace     --subnode
      /configuration --type elem --name packageRestore     --subnode '$prev' --type
      elem --name add     --insert '$prev' --type attr --name key --value enabled     --insert
      '$prev' --type attr --name value --value false     --delete /configuration/packageSources     ~/.nuget/NuGet/NuGet.Config
    Name: run
    PrependShell: true
  - CmdLine:
    - xmlstarlet ed --inplace     --subnode /_:settings --type elem --name localRepository
      --value /var/lib/maven/repository     /usr/share/maven/conf/settings.xml  &&
      (cd /testdata/java && mvn -Dtest=NoopTest dependency:go-offline package)  &&
      xmlstarlet ed --inplace     --subnode /_:settings --type elem --name offline
      --value true     /usr/share/maven/conf/settings.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - (cd /testdata/node && yarn install && mv node_modules /usr/lib/node)  && apt-get
      purge --yes yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge --yes     curl     xmlstarlet  && rm -rf /tmp/* /var/lib/apt/lists/*
      /testdata
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:artful-20170916
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:artful-20170916
