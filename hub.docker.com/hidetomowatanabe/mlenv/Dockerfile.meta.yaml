MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: hidetomo
    Name: maintainer
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/root_pass
    - root_pass
  - CmdLine:
    - echo "root:$(cat root_pass)" | chpasswd &&   useradd hidetomo &&   mkdir /home/hidetomo
      &&   chown hidetomo:hidetomo /home/hidetomo
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/hidetomo_pass
    - hidetomo_pass
  - CmdLine:
    - echo "hidetomo:$(cat hidetomo_pass)" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt -y update &&   apt -y install sudo &&   echo "hidetomo ALL=(ALL) NOPASSWD:ALL"
      >> /etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: hidetomo
  - Name: workdir
    Path: /home/hidetomo
  - Env:
    - Key: HOME
      Value: /home/hidetomo
    Name: env
  - CmdLine:
    - echo "alias ls='ls --color'" >> .bashrc &&   echo "alias ll='ls -lat'" >> .bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt -y update &&   sudo apt -y install vim
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/.vimrc
    - .vimrc
  - CmdLine:
    - sudo tr \\r \\n <.vimrc> tmp && sudo mv tmp .vimrc &&   sudo chown hidetomo:hidetomo
      .vimrc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir share
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - share
  - CmdLine:
    - sudo apt -y update &&   sudo apt -y install     ntp     htop     less     zip     unzip     bzip2     gcc     g++     cmake     git     subversion     wget     curl     nkf     language-pack-ja-base     language-pack-ja     xvfb     xfonts-100dpi     xfonts-75dpi     xfonts-scalable     xfonts-cyrillic     fonts-takao-*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export LC_ALL=ja_JP.UTF-8" >> .bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - git clone https://github.com/yyuu/pyenv.git .pyenv &&   echo 'export PYENV_ROOT="$HOME/.pyenv"'
      >> .bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: $HOME/.pyenv
    Name: env
  - CmdLine:
    - echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> .bashrc &&   echo 'eval "$(pyenv
      init -)"' >> .bashrc &&   echo 'export PYTHONIOENCODING=utf-8' >> .bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PYENV_ROOT/bin:$PATH
    Name: env
  - Key: pyVer
    Name: arg
    Value: miniconda3-4.3.30
  - CmdLine:
    - pyenv install ${pyVer} &&   pyenv rehash &&   pyenv global ${pyVer} &&   echo
      'export PATH="$PYENV_ROOT/versions/'${pyVer}'/bin/:$PATH"' >> .bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PYENV_ROOT/versions/${pyVer}/bin/:$PATH
    Name: env
  - CmdLine:
    - conda install -y pip &&   conda install -y openCV &&   pip install opencv-python==4.1.2.30     memory_profiler==0.55.0     flake8==3.7.9     tqdm==4.40.0     pandas-profiling==2.3.0     Cython==0.29.14     schema==0.7.1     dask==2.9.0     scikit-learn==0.21.3     imbalanced-learn==0.5.0     eli5==0.10.1     heamy==0.0.7     kaggle==1.5.6
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scikit-image==0.14.2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyter==1.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter-notebook --generate-config &&   echo 'c.NotebookApp.ip = "0.0.0.0"'
      >> .jupyter/jupyter_notebook_config.py &&   echo 'c.NotebookApp.open_browser
      = False' >> .jupyter/jupyter_notebook_config.py &&   pip install jupyterthemes==0.20.0
      &&   jt -t grade3 -f hack &&   jupyter nbextension enable --py --sys-prefix
      widgetsnbextension
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install optuna==0.19.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install python-Levenshtein==0.12.0   zenhan==0.5.2   pykakasi==1.2   nltk==3.4.5   spacy==2.2.3   gensim==3.8.1   fasttext==0.9.1
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt -y update &&   sudo apt -y install     swig     mecab     libmecab-dev     mecab-ipadic     mecab-ipadic-utf8
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install mecab-python3==0.996.2
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/CRF++-0.58.tar.gz
    - .
  - CmdLine:
    - tar zxvf CRF++-0.58.tar.gz &&   rm CRF++-0.58.tar.gz &&   cd CRF++-0.58 &&   ./configure
      &&   make &&   sudo make install
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - echo "include /usr/local/bin" >> /etc/ld.so.conf &&   ldconfig
    Name: run
    PrependShell: true
  - Name: user
    User: hidetomo
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/cabocha-0.69.tar.bz2
    - .
  - CmdLine:
    - bzip2 -dc cabocha-0.69.tar.bz2 | tar xvf - &&   rm cabocha-0.69.tar.bz2 &&   cd
      cabocha-0.69 &&   ./configure --with-charset=UTF8 --enable-utf8-only &&   make
      &&   sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd cabocha-0.69 &&   cd python &&   python setup.py build_ext &&   python setup.py
      install &&   sudo ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install keras-bert==0.80.0
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt -y update &&   sudo apt -y install     tesseract-ocr     libtesseract-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pyocr==0.7.2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install xgboost==0.90
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install lightgbm==2.3.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install catboost==0.20.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install rgf-python==3.6.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tensorflow==2.0.0   Keras==2.3.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install torch==1.3.1   torchvision==0.4.2   skorch==0.7.0
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt -y update &&   sudo apt -y install graphviz &&   pip install graphviz==0.13.2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install seaborn==0.9.0
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt -y update &&   sudo apt -y install xdg-utils &&   pip install dtreeviz==0.8.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install shap==0.33.0
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter
    - notebook
    - --notebook-dir=share
    - --port=8888
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
