{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gcr.io/tensorflow/tensorflow:latest-py3",
      "SourceCode": "FROM gcr.io/tensorflow/tensorflow:latest-py3",
      "Platform": "",
      "From": {
        "Image": "gcr.io/tensorflow/tensorflow:latest-py3"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026   \tadd-apt-repository -y ppa:webupd8team/java \u0026\u0026   \tapt-get update \u0026\u0026   \tapt-get install -y oracle-java8-installer \u0026\u0026   \trm -rf /var/lib/apt/lists/* \u0026\u0026   \trm -rf /var/cache/oracle-jdk8-installer \u0026\u0026 \tapt-get update \u0026\u0026\tapt-get install software-properties-common \u0026\u0026 \tapt-get install -y wget curl vim bash-completion unzip openssh-server \u0026\u0026 \techo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \u0026\u0026 \tcurl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add - \u0026\u0026 \tapt-get update \u0026\u0026 sudo apt-get install bazel \u0026\u0026 \tapt-get install -y python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose \u0026\u0026 \tapt-get install -y python-dev python-pip g++ libopenblas-dev git \u0026\u0026 \tpip install spaCy \u0026\u0026 \tpython3 -m spacy.en.download all \u0026\u0026 \tpip install pyLDAvis scipy scipy gensim nltk bokeh \u0026\u0026 \tpip install -U scikit-learn \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get clean \u0026\u0026  \tmkdir /opt/logs \u0026\u0026 \ttouch start.sh \u0026\u0026 \tchmod 755 start.sh \u0026\u0026 \techo \"#!/bin/sh\" \u003e\u003e start.sh \u0026\u0026 \techo \"nohup tensorboard --logdir=/data/logs \u003e tb.out \u0026 nohup ./run_jupyter.sh \u003ejupyter.out \u0026\" \u003e\u003e start.sh \u0026\u0026 \techo \"tail -f jupyter.out\" \u003e\u003e start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}