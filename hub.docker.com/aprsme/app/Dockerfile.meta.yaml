MetaArgs: null
Stages:
- As: build-elixir
  BaseName: elixir:1.9.4-alpine
  Commands:
  - CmdLine:
    - apk add --update git bash nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - mkdir -p /app/assets
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: prod
    Name: env
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - CmdLine:
    - mix do local.hex --force, local.rebar --force
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mix.exs
    - mix.lock
    - ./
  - CmdLine:
    - mix deps.get --only prod
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets
    - ./assets/
  - CmdLine:
    - cd assets && npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd assets && npm rebuild node-sass
    Name: run
    PrependShell: true
  - CmdLine:
    - cd assets && npm run deploy
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - /app/config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lib
    - /app/lib/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - priv
    - /app/priv/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wait-for-it.sh
    - /app/
  - CmdLine:
    - mix deps.compile
    Name: run
    PrependShell: true
  - CmdLine:
    - mix phx.digest
    Name: run
    PrependShell: true
  - CmdLine:
    - mix release
    Name: run
    PrependShell: true
  From:
    Image: elixir:1.9.4-alpine
  Name: build-elixir
  Platform: ""
  SourceCode: FROM elixir:1.9.4-alpine as build-elixir
- BaseName: alpine:3.11.2
  Commands:
  - CmdLine:
    - apk add --update bash openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build-elixir
    Name: copy
    SourcesAndDest:
    - /app/_build/prod/rel/aprsme
    - ./
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: VERSION
      Value: $VERSION
    Name: env
  - Env:
    - Key: REPLACE_OS_VARS
      Value: "true"
    Name: env
  - CmdLine:
    - /app/bin/aprsme
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.11.2
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.11.2
