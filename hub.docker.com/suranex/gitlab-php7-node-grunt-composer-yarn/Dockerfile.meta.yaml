MetaArgs: null
Stages:
- BaseName: debian:10
  Commands:
  - Maintainer: Florian Mueller <docker@flmue.de>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: COMPOSER_NO_INTERACTION
      Value: "1"
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install --no-install-recommends -y  apt-utils  curl  apt-transport-https  ca-certificates  gnupg2  wget  sudo  &&
      curl -s https://packages.sury.org/php/apt.gpg | apt-key add -  && echo "deb
      https://packages.sury.org/php/ buster main" > /etc/apt/sources.list.d/sury.list  &&
      curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -  &&
      echo "deb https://deb.nodesource.com/node_13.x buster main" > /etc/apt/sources.list.d/nodesource.list  &&
      curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -  && echo "deb
      https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list  &&
      apt-get update  && apt-get install --no-install-recommends -y  openssh-client  bzip2  unzip  rsync  git  php7.4-cli  php7.4-common  php7.4-curl  php7.4-gd  php7.4-mbstring  php7.4-mysql  php7.4-soap  php7.4-xml  php7.4-xmlrpc  php7.4-xsl  php7.4-tidy  php7.4-zip  php-imagick  php-xdebug  nodejs  yarn  ant  libfontconfig  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man/??
      /usr/share/man/??_*
    Name: run
    PrependShell: true
  - CmdLine:
    - php -v
    Name: run
    PrependShell: true
  - CmdLine:
    - node -v
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -v
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn -v
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer selfupdate
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g grunt
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g grunt-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - grunt --version
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_HOST
      Value: '"tcp://docker:2375"'
    Name: env
  - Name: volume
    Volumes:
    - /var/run/docker.sock
  From:
    Image: debian:10
  Name: ""
  Platform: ""
  SourceCode: FROM debian:10
