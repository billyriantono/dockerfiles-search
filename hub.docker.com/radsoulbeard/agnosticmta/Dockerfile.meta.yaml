MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-slim
  Commands:
  - Key: MTA_USER_HOME
    Name: arg
    Value: /home/mta
  - Key: MTA_HOME
    Name: arg
    Value: '''/opt/sap/mta'''
  - Key: MTA_VERSION
    Name: arg
    Value: 1.1.19
  - Key: NODE_VERSION
    Name: arg
    Value: v10.13.0
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.6.2
  - Env:
    - Key: MTA_JAR_LOCATION
      Value: '"${MTA_HOME}/lib/mta.jar"'
    Name: env
  - Env:
    - Key: M2_HOME
      Value: /opt/maven/apache-maven-${MAVEN_VERSION}
    Name: env
  - Env:
    - Key: PYTHON
      Value: /usr/bin/python2.7
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -o
    - pipefail
    - -c
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/shell/mtaBuild.sh
    - ${MTA_HOME}/bin/mtaBuild.sh
  - CmdLine:
    - apt-get update &&     apt-get install --yes --no-install-recommends       curl
      &&     mkdir -p "$(dirname ${MTA_JAR_LOCATION})" &&     curl --fail          --silent          --cookie
      "eula_3_1_agreed=tools.hana.ondemand.com/developer-license-3_1.txt;"          --output
      "${MTA_JAR_LOCATION}"       "https://tools.hana.ondemand.com/additional/mta_archive_builder-${MTA_VERSION}.jar"
      &&     curl --fail          --silent          --output "${MTA_HOME}/LICENSE.txt"        https://tools.hana.ondemand.com/developer-license-3_1.txt
      &&     ln -s "${MTA_HOME}/bin/mtaBuild.sh" /usr/local/bin/mtaBuild &&     apt-get
      update &&     apt-get install --yes --no-install-recommends       git &&     NODE_HOME=/opt/nodejs;
      mkdir -p ${NODE_HOME} &&     curl --fail --silent --output - "http://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz"      |tar
      -xzv -f - -C "${NODE_HOME}" &&     ln -s "${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/node"
      /usr/local/bin/node &&     ln -s "${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npm"
      /usr/local/bin/npm &&     ln -s "${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npx"
      /usr/local/bin/npx &&     npm config set @sap:registry https://npm.sap.com --global
      &&     echo "[INFO] installing maven." &&     M2_BASE="$(dirname ${M2_HOME})"
      &&     mkdir -p "${M2_BASE}" &&     curl --fail --silent --output - "https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"       |
      tar -xzvf - -C "${M2_BASE}" &&     ln -s "${M2_HOME}/bin/mvn" /usr/local/bin/mvn
      &&     chmod --recursive a+w "${M2_HOME}"/conf/* &&     apt-get install --yes
      --no-install-recommends       build-essential       python2.7 &&     apt-get
      remove --purge --autoremove --yes       curl &&     rm -rf /var/lib/apt/lists/*
      &&     useradd --home-dir "${MTA_USER_HOME}"             --create-home             --shell
      /bin/bash             --user-group             --uid 1000             --comment
      'SAP-MTA tooling'             --password "$(echo weUseMta |openssl passwd -1
      -stdin)" mta &&     chmod a+w "${MTA_USER_HOME}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /project
  - Env:
    - Key: PATH
      Value: ./node_modules/.bin:$PATH
    Name: env
  - Env:
    - Key: HOME
      Value: ${MTA_USER_HOME}
    Name: env
  - Name: user
    User: mta
  From:
    Image: openjdk:8-jdk-slim
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-slim
