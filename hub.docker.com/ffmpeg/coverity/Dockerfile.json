{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster",
      "SourceCode": "FROM debian:buster",
      "Platform": "",
      "From": {
        "Image": "debian:buster"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/main/main contrib non-free/' /etc/apt/sources.list \u0026\u0026 \tapt-get -y update \u0026\u0026 \tapt-get -y install build-essential yasm nasm pkg-config git curl wget cmake unzip subversion autoconf automake libtool \u0026\u0026 \tapt-get -y install --no-install-recommends \t\tclang \t\tflite1-dev \t\tfrei0r-plugins-dev \t\tladspa-sdk \t\tlibass-dev \t\tlibavc1394-dev \t\tlibbluray-dev \t\tlibbs2b-dev \t\tlibcaca-dev \t\tlibcdio-cdda-dev \t\tlibcdio-dev \t\tlibcdio-paranoia-dev \t\tlibcdparanoia-dev \t\tlibchromaprint-dev \t\tlibcrystalhd-dev \t\tlibdc1394-22-dev \t\tlibfdk-aac-dev \t\tlibfontconfig1-dev \t\tlibfreetype6-dev \t\tlibfribidi-dev \t\tlibgl1-mesa-dev \t\tlibgcrypt20-dev \t\tlibgme-dev \t\tlibgnutls28-dev \t\tlibgsm1-dev \t\tlibiec61883-dev \t\tlibleptonica-dev \t\tliblzma-dev \t\tlibmodplug-dev \t\tlibmp3lame-dev \t\tlibomxil-bellagio-dev \t\tlibopenal-dev \t\tlibopencore-amrnb-dev \t\tlibopencore-amrwb-dev \t\tlibopencv-dev \t\tlibopenjp2-7-dev \t\tlibopenmpt-dev \t\tlibopus-dev \t\tlibpulse-dev \t\tlibrtmp-dev \t\tlibrubberband-dev \t\tlibsctp-dev \t\tlibsdl2-dev \t\tlibshine-dev \t\tlibsmbclient-dev \t\tlibsnappy-dev \t\tlibsoxr-dev \t\tlibspeex-dev \t\tlibssh-dev \t\tlibssl-dev \t\tlibtesseract-dev \t\tlibtheora-dev \t\tlibtwolame-dev \t\tlibv4l-dev \t\tlibva-dev \t\tlibvdpau-dev \t\tlibvo-amrwbenc-dev \t\tlibvorbis-dev \t\tlibvpx-dev \t\tlibwavpack-dev \t\tlibwebp-dev \t\tlibx11-dev \t\tlibx11-xcb-dev \t\tlibx264-dev \t\tlibx265-dev \t\tlibxcb-shape0-dev \t\tlibxcb-shm0-dev \t\tlibxcb-xfixes0-dev \t\tlibxv-dev \t\tlibxvidcore-dev \t\tlibxvmc-dev \t\tlibzmq3-dev \t\tlibzvbi-dev \t\tocl-icd-opencl-dev \t\tzlib1g-dev \u0026\u0026 \tapt-get -y clean \u0026\u0026 \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/TimothyGu/libilbc.git libilbc \u0026\u0026 \tcd libilbc \u0026\u0026 \tmkdir build \u0026\u0026 cd build \u0026\u0026 \tcmake -DCMAKE_INSTALL_PREFIX=/usr .. \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf libilbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tsvn co https://svn.code.sf.net/p/xavs/code/trunk xavs \u0026\u0026 \tcd xavs \u0026\u0026 \t./configure --prefix=/usr \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf xavs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/sekrit-twc/zimg.git zimg \u0026\u0026 \tcd zimg \u0026\u0026 \t./autogen.sh \u0026\u0026 \t./configure --prefix=/usr \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf zimg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/cisco/openh264.git openh264 \u0026\u0026 \tcd openh264 \u0026\u0026 \tmake PREFIX=/usr \u0026\u0026 \tmake install PREFIX=/usr \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf openh264"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/ultravideo/kvazaar.git kvazaar \u0026\u0026 \tcd kvazaar \u0026\u0026 \t./autogen.sh \u0026\u0026 \t./configure --prefix=/usr \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf kvazaar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 git://git.xiph.org/celt.git celt \u0026\u0026 \tcd celt \u0026\u0026 \t./autogen.sh \u0026\u0026 \t./configure --prefix=/usr \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf celt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/georgmartius/vid.stab.git libvidstab \u0026\u0026 \tcd libvidstab \u0026\u0026 \tcmake -DCMAKE_INSTALL_PREFIX=/usr . \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf libvidstab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/lu-zero/mfx_dispatch.git mfx_dispatch \u0026\u0026 \tcd mfx_dispatch \u0026\u0026 \tautoreconf -fi \u0026\u0026 \t./configure --prefix=/usr \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf mfx_dispatch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/BtbN/decklink-sdk.git decklink-sdk \u0026\u0026 \tcd decklink-sdk \u0026\u0026 \tcp -v Linux/include/* /usr/include/ \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf decklink-sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://github.com/hoene/libmysofa.git libmysofa \u0026\u0026 \tcd libmysofa \u0026\u0026 \tmkdir -p build \u0026\u0026 cd build \u0026\u0026 \tcmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_TESTS=Off .. \u0026\u0026 \tmake mysofa-static \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf libmysofa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \tgit clone --depth=1 https://git.videolan.org/git/ffmpeg/nv-codec-headers.git nv-codec-headers \u0026\u0026 \tcd nv-codec-headers \u0026\u0026 \tmake install PREFIX=/usr \u0026\u0026 \tcd /root \u0026\u0026 \trm -rf nv-codec-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "build_script.sh",
            "/root/build_script.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fake_ld.sh",
            "/root/fake_ld.sh"
          ]
        },
        {
          "CmdLine": [
            "/root/build_script.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}