{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Johann Zelger \u003cj.zelger@techdivision.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fs",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk -U --no-cache add         bash shadow vim wget ca-certificates openssl rsync curl git supervisor graphicsmagick postfix         openjdk8-jre mysql mysql-client nginx varnish redis xz tar nodejs         php7 php7-fpm php7-curl php7-dom php7-gd php7-iconv php7-mcrypt php7-pdo php7-pdo_mysql         php7-soap php7-ctype php7-json php7-openssl php7-zlib php7-intl php7-xsl php7-zip php7-bcmath         php7-mbstring php7-phar php7-session php7-mongodb php7-xdebug php7-mysqli php7-ldap         erlang erlang-mnesia erlang-public-key erlang-crypto erlang-ssl erlang-sasl erlang-asn1 erlang-inets         erlang-os-mon erlang-xmerl erlang-eldap erlang-syntax-tools \u0026\u0026     mysql_install_db --user=mysql 2\u003e /dev/null \u0026\u0026     mkdir -p /run/mysqld/ \u0026\u0026     chown mysql /run/mysqld/ \u0026\u0026     curl -Ls https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-2.4.2.tar.gz | tar -xz -C /usr/share \u0026\u0026     mv /usr/share/elasticsearch-2.4.2 /usr/share/elasticsearch \u0026\u0026     mkdir -p /usr/share/elasticsearch/data/elasticsearch/nodes /usr/share/elasticsearch/logs /usr/share/elasticsearch/config/scripts \u0026\u0026     /usr/share/elasticsearch/bin/plugin install analysis-phonetic \u0026\u0026     /usr/share/elasticsearch/bin/plugin install analysis-icu \u0026\u0026     curl -sSL https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.1/rabbitmq-server-generic-unix-3.6.1.tar.xz | tar -xJ -C / --strip-components 1 \u0026\u0026     rm -rf /share/**/rabbitmq*.xz \u0026\u0026     mkdir -p /data/rabbitmq \u0026\u0026     npm install -g --depth 0 gulpjs/gulp-cli \u0026\u0026     ln -s /usr/bin/php7 /usr/bin/php \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     cp -r /tmp/usr / \u0026\u0026     cp -r /tmp/etc / \u0026\u0026     mysql_start \u0026\u0026     mysql -e \"DELETE FROM mysql.user; CREATE USER 'root'@'%'; GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION; DROP DATABASE IF EXISTS test; FLUSH PRIVILEGES;\" \u0026\u0026     mysql_stop \u0026\u0026     rm -rf /var/cache/apk/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "--nodaemon"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}