MetaArgs: null
Stages:
- BaseName: python:3-alpine
  Commands:
  - Key: VERSION
    Name: arg
    Value: '"git"'
  - Key: PACKAGES
    Name: arg
    Value: '"bash libffi openssh-client openssl rsync tini"'
  - Key: BUILD_PACKAGES
    Name: arg
    Value: '"gcc libffi-dev linux-headers make musl-dev openssl-dev"'
  - Labels:
    - Key: name
      Value: '"algo"'
    - Key: version
      Value: '"${VERSION}"'
    - Key: description
      Value: '"Set up a personal IPsec VPN in the cloud"'
    - Key: maintainer
      Value: '"Trail of Bits <http://github.com/trailofbits/algo>"'
    Name: label
  - CmdLine:
    - apk --no-cache add ${PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -D -H -u 19857 algo
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /algo && mkdir -p /algo/configs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /algo
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - apk --no-cache add ${BUILD_PACKAGES} &&     python3 -m pip --no-cache-dir install
      -U pip &&     python3 -m pip --no-cache-dir install virtualenv &&     python3
      -m virtualenv .env &&     source .env/bin/activate &&     python3 -m pip --no-cache-dir
      install -r requirements.txt &&     apk del ${BUILD_PACKAGES}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - chmod 0755 /algo/algo-docker.sh
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - /algo/algo-docker.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:3-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-alpine
