{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "GoCD \u003cgo-cd-dev@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "gocd.version",
              "Value": "\"17.7.0\""
            },
            {
              "Key": "description",
              "Value": "\"GoCD agent based on ubuntu version 16.04\""
            },
            {
              "Key": "maintainer",
              "Value": "\"GoCD \u003cgo-cd-dev@googlegroups.com\u003e\""
            },
            {
              "Key": "gocd.full.version",
              "Value": "\"17.7.0-5147\""
            },
            {
              "Key": "gocd.git.sha",
              "Value": "\"53fdb1b15184f93966059a42429bf9ed0bfdee59\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "\"https://download.gocd.org/binaries/17.7.0-5147/generic/go-agent-17.7.0-5147.zip\"",
            "/tmp/go-agent.zip"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/v0.14.0/tini-static-amd64",
            "/usr/local/sbin/tini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64",
            "/usr/local/sbin/gosu"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/godata"
          ]
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chmod 0755 /usr/local/sbin/tini \u0026\u0026   chown root:root /usr/local/sbin/tini \u0026\u0026   chmod 0755 /usr/local/sbin/gosu \u0026\u0026   chown root:root /usr/local/sbin/gosu \u0026\u0026   groupadd -g 1000 go \u0026\u0026   useradd -u 1000 -g go -d /home/go -m go \u0026\u0026   echo deb 'http://ppa.launchpad.net/openjdk-r/ppa/ubuntu xenial main' \u003e /etc/apt/sources.list.d/openjdk-ppa.list \u0026\u0026   echo 'deb http://ppa.launchpad.net/george-edison55/cmake-3.x/ubuntu trusty main' | tee -a /etc/apt/sources.list.d/cmake.list \u0026\u0026   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DA1A4A13543B466853BAF164EB9B1D8886F44E2A \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y openjdk-8-jre-headless git subversion mercurial openssh-client bash unzip libcurl4-openssl-dev autoconf automake gcc g++ make gfortran libexpat1-dev wget vim file texinfo cmake csh ksh mlocate openssh-server net-tools \u0026\u0026   apt-get autoclean \u0026\u0026   updatedb \u0026\u0026   unzip /tmp/go-agent.zip -d / \u0026\u0026   mv go-agent-17.7.0 /go-agent \u0026\u0026   rm /tmp/go-agent.zip \u0026\u0026   cd /usr/local/src/ \u0026\u0026   wget --no-check-certificate https://www.open-mpi.org/software/ompi/v2.1/downloads/openmpi-2.1.0.tar.gz \u0026\u0026   tar xf openmpi-2.1.0.tar.gz \u0026\u0026   rm openmpi-2.1.0.tar.gz \u0026\u0026   cd openmpi-2.1.0 \u0026\u0026   opal_check_cma_happy=0 ./configure --enable-mpi-cxx  \u0026\u0026   make -j `nproc` all \u0026\u0026 make install \u0026\u0026   cd /usr/local/src \u0026\u0026   rm -rf openmpi-2.1.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/bin:/usr/local/bin:/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}