{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:dind",
      "SourceCode": "FROM docker:dind",
      "Platform": "",
      "From": {
        "Image": "docker:dind"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/kubernetes-deploy:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache -U curl tar gzip bash ca-certificates gettext openssl openssh coreutils ruby git \u0026\u0026   wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \u0026\u0026   wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk \u0026\u0026   apk add glibc-2.23-r3.apk \u0026\u0026   rm glibc-2.23-r3.apk \u0026\u0026   curl https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz |   tar zx \u0026\u0026 mv linux-amd64/helm /usr/bin/ \u0026\u0026   helm init -c \u0026\u0026   helm version --client \u0026\u0026   helm repo add ctlt https://ubc.github.io/charts \u0026\u0026   curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \u0026\u0026   chmod +x /usr/bin/kubectl \u0026\u0026   kubectl version --client \u0026\u0026   curl -L -o /usr/bin/ok.sh https://raw.githubusercontent.com/whiteinge/ok.sh/master/ok.sh \u0026\u0026   chmod +x /usr/bin/ok.sh \u0026\u0026   sed -i 's/\\/usr\\/bin\\/env sh$/\\/usr\\/bin\\/env bash/' /usr/bin/ok.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/",
            "/opt/kubernetes-deploy/"
          ]
        },
        {
          "CmdLine": [
            "ln -s /opt/kubernetes-deploy/run /usr/bin/deploy \u0026\u0026   which deploy \u0026\u0026   which build \u0026\u0026   which destroy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}