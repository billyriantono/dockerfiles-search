{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-backports",
      "SourceCode": "FROM debian:stretch-backports",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-backports"
      },
      "Commands": [
        {
          "Maintainer": "Ulrich Schreiner \u003culrich.schreiner@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION",
              "Value": "1.10.3"
            },
            {
              "Key": "GLIDE_VERSION",
              "Value": "v0.12.3"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "node_10.x"
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.06.0"
            },
            {
              "Key": "DEP_VERSION",
              "Value": "0.4.1"
            },
            {
              "Key": "HELM_VERSION",
              "Value": "2.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install apt-transport-https ca-certificates curl gnupg2 \u0026\u0026     curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \u0026\u0026     curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://deb.nodesource.com/$NODE_VERSION stretch main\" \u003e\u003e/etc/apt/sources.list.d/addons.list \u0026\u0026     echo \"deb http://apt.kubernetes.io/ kubernetes-stretch main\" \u003e\u003e/etc/apt/sources.list.d/kubernetes.list \u0026\u0026     apt-get update \u0026\u0026 apt-get -y install     autoconf     autotools-dev     build-essential     bzr     gcc     gettext-base     git     kubectl     libtool     make     mercurial     rpm     ruby     ruby-dev     rubygems     ssh     tar     zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install nodejs     \u0026\u0026 gem install --no-ri --no-doc fpm     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 npm install -g webpack less     \u0026\u0026 curl -sSL https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz | tar -C /usr/local -xz     \u0026\u0026 curl -sSL https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 \u003e /usr/bin/dep     \u0026\u0026 chmod +x /usr/bin/dep     \u0026\u0026 /usr/local/go/bin/go get -u golang.org/x/vgo     \u0026\u0026 ln -sf /root/go/bin/* /usr/bin/     \u0026\u0026 curl -sSL https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}-ce.tgz | tar -xzC /usr/bin --strip-components=1 docker/docker     \u0026\u0026 chmod +x /usr/bin/docker     \u0026\u0026 curl -sSL https://github.com/Masterminds/glide/releases/download/${GLIDE_VERSION}/glide-${GLIDE_VERSION}-linux-amd64.tar.gz        | tar --strip-components 1 -C /usr/bin -xzv     \u0026\u0026 curl -sSL https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz        | tar --strip-components 1 -xzC /usr/bin linux-amd64/helm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gopath.sh",
            "/usr/bin/gopath.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}