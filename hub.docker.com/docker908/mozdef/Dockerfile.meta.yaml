MetaArgs: null
Stages:
- BaseName: debian:testing
  Commands:
  - Maintainer: Yohann Lepage <yohann@lepage.info>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - (apt-get clean         && apt-key update && apt-get -q -y update --fix-missing         &&
      apt-get -q -y update && apt-get install -q -y apt-utils && apt-get install -q
      -y locales)
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/locale.gen
    - /etc/locale.gen
  - CmdLine:
    - (locale-gen && locale-gen en_US.UTF-8 && dpkg-reconfigure locales)
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get install -q -y openjdk-7-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y rabbitmq-server
    Name: run
    PrependShell: true
  - CmdLine:
    - rabbitmq-plugins enable rabbitmq_management
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y nodejs npm git
    Name: run
    PrependShell: true
  - CmdLine:
    - (apt-get install -q -y nginx-full && rm /etc/nginx/nginx.conf)
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/
  - CmdLine:
    - (apt-get install -q -y python2.7-dev python-pip curl supervisor wget        &&
      curl -L https://github.com/jeffbryner/MozDef/archive/master.tar.gz |tar -C /opt
      -xz         && /bin/ln -s /opt/MozDef-master /opt/MozDef && cd /opt/MozDef &&
      /usr/bin/pip install --verbose --use-mirrors --timeout 30 -r requirements.txt
      && /usr/bin/pip install --verbose --use-mirrors --timeout 30 uwsgi gevent &&
      mkdir /var/log/mozdef && mkdir -p /run/uwsgi/apps/ && touch /run/uwsgi/apps/loginput.socket
      && chmod 666 /run/uwsgi/apps/loginput.socket && touch /run/uwsgi/apps/rest.socket
      && chmod 666 /run/uwsgi/apps/rest.socket         && mkdir -p /home/mozdef/envs/mozdef/bot/
      && cd /home/mozdef/envs/mozdef/bot/         && wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
      && gzip -d GeoLiteCity.dat.gz)
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisor.conf
    - /etc/supervisor/conf.d/supervisor.conf
  - CmdLine:
    - (curl -L https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.0.1.tar.gz
      | tar -C /opt -xz && /bin/ln -s /opt/elasticsearch-1.0.1 /opt/elasticsearch
      && /opt/elasticsearch/bin/plugin --install elasticsearch/marvel/latest && rm
      /opt/elasticsearch/config/elasticsearch.yml)
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/elasticsearch.yml
    - /opt/elasticsearch-1.0.1/config/
  - CmdLine:
    - (curl -L https://download.elasticsearch.org/kibana/kibana/kibana-3.0.0.tar.gz
      |tar -C /opt -xz        && /bin/ln -s /opt/kibana-3.0.0 /opt/kibana)
    Name: run
    PrependShell: true
  - CmdLine:
    - (curl -L https://install.meteor.com/ | /bin/sh && npm install -g meteorite &&
      ln -s /usr/bin/nodejs /usr/bin/node && cd /opt/MozDef/meteor && mrt update &&
      /usr/local/bin/mrt add iron-router && /usr/local/bin/mrt add accounts-persona)
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '[''/var/lib/elasticsearch'',''/var/log/elasticsearch'']'
  - Name: volume
    Volumes:
    - '[''/var/lib/mongodb'',''/var/log/mongodb'']'
  - Name: volume
    Volumes:
    - '[''/var/log/nginx'',''/var/log/mozdef'']'
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - "9200"
  - Name: expose
    Ports:
    - "9090"
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8081"
  - CmdLine:
    - apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/rabbitmq-server start && sleep 10 && /usr/bin/supervisord
    Name: cmd
    PrependShell: true
  From:
    Image: debian:testing
  Name: ""
  Platform: ""
  SourceCode: FROM debian:testing
