{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Key": "graphouse_branch",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "graphite_branch",
          "Name": "arg",
          "Value": "1.1.5"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y install python3-dev python3-pip libcairo2-dev libffi-dev libpq-dev python3-requests build-essential \u0026\u0026     apt-get -y install git nginx uwsgi sqlite3 curl nano net-tools telnet bind9-host psmisc \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b $graphite_branch --depth 1 https://github.com/graphite-project/graphite-web.git /usr/local/src/graphite-web \u0026\u0026     git clone -b $graphouse_branch --depth 1 https://github.com/yandex/graphouse.git /usr/local/src/graphouse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/graphite-web"
        },
        {
          "CmdLine": [
            "sed -i -e 's/whitenoise/whitenoise==3.3.1/g; s/cairocffi/cairocffi==0.9.0/g' requirements.txt  \u0026\u0026  pip3 install -r requirements.txt psycopg2 tornado gevent eventlet \u0026\u0026  python3 ./setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/graphite/webapp"
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/graphite/ \u0026\u0026     PYTHONPATH=/opt/graphite/webapp django-admin.py collectstatic --noinput --settings=graphite.settings \u0026\u0026     PYTHONPATH=/opt/graphite/webapp django-admin.py migrate --settings=graphite.settings --run-syncdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/local/src/graphouse/src/main/pySources/graphouse.py /opt/graphite/webapp/graphite/graphouse.py \u0026\u0026     rm /etc/nginx/sites-enabled/default \u0026\u0026     cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/local_settings.py",
            "/opt/graphite/webapp/graphite/local_settings.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/nginx-graphite-web.conf",
            "/etc/nginx/sites-enabled/graphite-web.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/uwsgi-graphite-web.ini",
            "/etc/uwsgi/apps-enabled/graphite-web.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/run.sh",
            "/usr/local/bin/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/graphite/webapp"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "bash",
            "/usr/local/bin/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}