{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"# Upgrade apt\" \u0026\u0026     sed -i 's/main$/main contrib/g' /etc/apt/sources.list \u0026\u0026     apt-get update -qy \u0026\u0026     echo \"# Install common dev dependencies via apt\" \u0026\u0026       apt-get install -y       git curl wget rsync patch build-essential \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026     dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b master https://github.com/infeix/usirs.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x usirs/install_on_docker.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./usirs/install_on_docker.sh -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"# Phantomjs\" \u0026\u0026       mkdir -p /srv/var \u0026\u0026       wget -q --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026       tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp \u0026\u0026       rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026       mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /srv/var/phantomjs \u0026\u0026       ln -s /srv/var/phantomjs/bin/phantomjs /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"NODE VERSION:\" \u0026\u0026 echo $(node -v)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"PHANTOMJS VERSION:\" \u0026\u0026 echo $(phantomjs -v)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}