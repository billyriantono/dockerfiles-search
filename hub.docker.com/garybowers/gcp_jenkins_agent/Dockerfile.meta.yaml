MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Key: GCLOUD_SDK_VERSION
    Name: arg
    Value: 243.0.0
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: 0.11.13
  - Key: VAULT_VERSION
    Name: arg
    Value: 1.0.3
  - Key: GSUITE_TERRAFORM_VERSION
    Name: arg
    Value: 0.1.10
  - Key: HELM_VERSION
    Name: arg
    Value: 2.14.0
  - CmdLine:
    - apt-get -qqy update && apt-get install -qqy         curl         wget         python-dev         python-setuptools         apt-transport-https         lsb-release         openssh-client         openssh-server         git         gnupg         ca-certificates         sudo         unzip         make         &&
      easy_install -U pip &&         pip install -U crcmod
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r gcpdev && useradd -r -g gcpdev gcpdev
    Name: run
    PrependShell: true
  - Env:
    - Key: GCLOUD_SDK_VERSION
      Value: $GCLOUD_SDK_VERSION
    Name: env
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" > /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl
      https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - &&     apt-get
      update &&     apt-get install -y google-cloud-sdk=${GCLOUD_SDK_VERSION}-0         kubectl
      &&         gcloud config set core/disable_usage_reporting true &&         gcloud
      config set component_manager/disable_update_check true &&         gcloud config
      set metrics/environment github_docker_image
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: $TERRAFORM_VERSION
    Name: env
  - Env:
    - Key: TERRAFORM_URL
      Value: '"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"'
    Name: env
  - CmdLine:
    - echo ${TERRAFORM_URL} &&     curl -fSL "${TERRAFORM_URL}" -o /bin/terraform.zip
      &&     unzip /bin/terraform.zip -d /bin
    Name: run
    PrependShell: true
  - Env:
    - Key: VAULT_URL
      Value: https://releases.hashicorp.com/vault/$VAULT_VERSION/vault_${VAULT_VERSION}_linux_amd64.zip
    Name: env
  - CmdLine:
    - curl -fSL "{$VAULT_URL}" -o /bin/vault.zip &&     unzip /bin/vault.zip -d /bin
      &&     rm -f /bin/vault.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: GSUITE_TERRAFORM_VERSION
      Value: $GSUITE_TERRAFORM_VERSION
    Name: env
  - Env:
    - Key: GSUITE_URL
      Value: https://github.com/DeviaVir/terraform-provider-gsuite/releases/download/v${GSUITE_TERRAFORM_VERSION}/terraform-provider-gsuite_${GSUITE_TERRAFORM_VERSION}_linux_amd64.tgz
    Name: env
  - CmdLine:
    - curl -fSL ${GSUITE_URL} -o /tmp/terraform-provider-gsuite_${GSUITE_TERRAFORM_VERSION}_linux_amd64.tgz
      &&     mkdir -p /.terraform.d/plugins/linux_amd64 &&     tar -xvzf /tmp/terraform-provider-gsuite_${GSUITE_TERRAFORM_VERSION}_linux_amd64.tgz
      -C /.terraform.d/plugins/linux_amd64
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_VERSION
      Value: $HELM_VERSION
    Name: env
  - Env:
    - Key: HELM_HOME
      Value: /.helm
    Name: env
  - Env:
    - Key: HELM_URL
      Value: https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
    Name: env
  - CmdLine:
    - curl -fSL ${HELM_URL} -o /tmp/helm-v${HELM_VERSION}-linux-amd64.tar.gz &&     tar
      -xvzf /tmp/helm-v${HELM_VERSION}-linux-amd64.tar.gz -C /bin &&     ln -s /bin/linux-amd64/helm
      /bin/helm &&     ln -s /bin/linux-amd64/tiller /bin/tiller &&     helm init
      --client-only &&     chmod -R 777 /.helm
    Name: run
    PrependShell: true
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
