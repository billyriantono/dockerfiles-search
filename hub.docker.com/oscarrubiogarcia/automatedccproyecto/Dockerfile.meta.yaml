MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Maintainer: Oscar Rubio Garcia
    Name: maintainer
  - Name: workdir
    Path: /code
  - Env:
    - Key: PORT
      Value: '"DEFAULT"'
    Name: env
  - CmdLine:
    - apk update && apk upgrade && apk add py-pip linux-headers python3 py3-virtualenv
      python-dev bash
    Name: run
    PrependShell: true
  - Env:
    - Key: VIRTUAL_ENV
      Value: /opt/venv
    Name: env
  - CmdLine:
    - python3 -m virtualenv --python=/usr/bin/python3 $VIRTUAL_ENV
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$VIRTUAL_ENV/bin:$PATH"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements-img.txt
    - requirements.txt
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LICENSE
    - tasks.py
    - setup.py
    - /code/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - project
    - /code/project
  - CmdLine:
    - addgroup -S dockergroup && adduser -S dockeruser -G dockergroup -h /code
    Name: run
    PrependShell: true
  - Name: user
    User: dockeruser
  - CmdLine:
    - invoke runGunicornAsyncParams -p ${PORT}
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
