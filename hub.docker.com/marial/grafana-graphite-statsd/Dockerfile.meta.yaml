MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: MariaLysik
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GRAPHITE_VERSION
      Value: 1.0.2
    - Key: STATS_VERSION
      Value: v0.8.0
    - Key: TWISTED_VERSION
      Value: 13.2.0
    - Key: GRAFANA_VERSION
      Value: 4.4.3
    Name: env
  - CmdLine:
    - "apt-get update \t\t&& apt-get -y install software-properties-common \t\t&&
      add-apt-repository -y ppa:chris-lea/node.js \t\t&& apt-get -y update \t\t&&
      apt-get -y install python-django-tagging python-simplejson python-memcache python-ldap
      python-cairo python-pysqlite2 python-support \t\t\tpython-pip gunicorn supervisor
      nginx-light git wget curl openjdk-7-jre build-essential python-dev libffi-dev
      \t\t&& apt-get autoclean \t\t&& apt-get clean \t\t&& apt-get autoremove"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Twisted==$TWISTED_VERSION         && pip install pytz
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - \t&& apt-get
      install -y nodejs \t&& npm install -g wizzy"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /src \t\t&& git clone https://github.com/graphite-project/whisper.git
      /src/whisper \t\t&& cd /src/whisper \t\t&& git checkout $GRAPHITE_VERSION \t\t&&
      python setup.py install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/graphite-project/carbon.git /src/carbon \t\t&&
      cd /src/carbon \t\t&& git checkout $GRAPHITE_VERSION \t\t&& python setup.py
      install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/graphite-project/graphite-web.git /src/graphite-web
      \t\t&& cd /src/graphite-web \t\t&& git checkout $GRAPHITE_VERSION \t\t&& python
      setup.py install \t\t&& pip install -r requirements.txt \t\t&& python check-dependencies.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/etsy/statsd.git /src/statsd \t\t&& cd /src/statsd
      \t\t&& git checkout $STATSD_VERSION"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /src/grafana \t\t&& mkdir /opt/grafana \t\t&& wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-x64.tar.gz
      -O /src/grafana.tar.gz \t\t&& tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1
      \t\t&& rm /src/grafana.tar.gz"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./statsd/config.js
    - /src/statsd/config.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./graphite/initial_data.json
    - /opt/graphite/webapp/graphite/initial_data.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./graphite/local_settings.py
    - /opt/graphite/webapp/graphite/local_settings.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./graphite/carbon.conf
    - /opt/graphite/conf/carbon.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./graphite/storage-schemas.conf
    - /opt/graphite/conf/storage-schemas.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./graphite/storage-aggregation.conf
    - /opt/graphite/conf/storage-aggregation.conf
  - CmdLine:
    - "mkdir -p /opt/graphite/storage/whisper \t\t&& touch /opt/graphite/storage/graphite.db
      /opt/graphite/storage/index \t\t&& chown -R www-data /opt/graphite/storage \t\t&&
      chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper \t\t&& chmod
      0664 /opt/graphite/storage/graphite.db \t\t&& cp /src/graphite-web/webapp/manage.py
      /opt/graphite/webapp \t\t&& cd /opt/graphite/webapp/ \t\t&& python manage.py
      migrate --run-syncdb --noinput"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./grafana/custom.ini
    - /opt/grafana/conf/custom.ini
  - CmdLine:
    - "cd /src \t&& wizzy init \t&& extract() { cat /opt/grafana/conf/custom.ini |
      grep $1 | awk '{print $NF}'; } \t&& wizzy set grafana url $(extract \";protocol\")://$(extract
      \";domain\"):$(extract \";http_port\")\t\t&& wizzy set grafana username $(extract
      \";admin_user\")\t\t&& wizzy set grafana password $(extract \";admin_password\")"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /src/datasources \t\t&& mkdir /src/dashboards"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./grafana/datasources/*
    - /src/datasources
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./grafana/dashboards/*
    - /src/dashboards/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./grafana/export-datasources-and-dashboards.sh
    - /src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./supervisord/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "2003"
  - Name: expose
    Ports:
    - 8125/udp
  - Name: expose
    Ports:
    - "8126"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM        ubuntu:14.04
