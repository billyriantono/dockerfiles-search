{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "runatlantis/atlantis:v0.10.1",
      "SourceCode": "FROM runatlantis/atlantis:v0.10.1",
      "Platform": "",
      "From": {
        "Image": "runatlantis/atlantis:v0.10.1"
      },
      "Commands": [
        {
          "Key": "CLOUD_SDK_VERSION",
          "Name": "arg",
          "Value": "270.0.0"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_VERSION",
              "Value": "$CLOUD_SDK_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add         curl         python         py-crcmod         bash         libc6-compat         openssh-client         git         gnupg     \u0026\u0026 curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     ln -s /lib /lib64 \u0026\u0026     gcloud components install beta \u0026\u0026     gcloud components install kubectl \u0026\u0026     gcloud config set core/disable_usage_reporting true \u0026\u0026     gcloud config set component_manager/disable_update_check true \u0026\u0026     gcloud config set metrics/environment github_docker_image \u0026\u0026     gcloud --version"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}