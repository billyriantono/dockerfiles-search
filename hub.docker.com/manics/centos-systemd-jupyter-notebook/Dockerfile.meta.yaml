MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: spli@dundee.ac.uk
    Name: maintainer
  - CmdLine:
    - yum install -q -y     wget     bzip2     sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini
      &&     echo "12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: jovyan
    - Key: NB_UID
      Value: "1000"
    - Key: NB_GID
      Value: "100"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID -g users $NB_USER &&     mkdir -p $CONDA_DIR
      &&     chown $NB_USER:$NB_GID $CONDA_DIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.5.4
    Name: env
  - CmdLine:
    - cd /tmp &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda
      config --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config
      --system --set show_channel_urls true &&     $CONDA_DIR/bin/conda install --quiet
      --yes conda="${MINICONDA_VERSION%.*}.*" &&     $CONDA_DIR/bin/conda update --all
      --quiet --yes &&     conda clean -tipsy &&     rm -rf /home/$NB_USER/.cache/yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=5.5.*'     'jupyterhub=0.8.*'     'jupyterlab=0.32.*'
      &&     conda clean -tipsy &&     jupyter labextension install @jupyterlab/hub-extension@^0.8.1
      &&     npm cache clean --force &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging
      &&     rm -rf /home/$NB_USER/.cache/yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install bash-kernel==0.7.1 &&     python -m bash_kernel.install
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes nbserverproxy &&     jupyter serverextension enable
      --py nbserverproxy
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4063"
    - "4064"
    - "80"
    - "8888"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - notebooks/
    - /notebooks/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - README.md
    - /
  - Name: user
    User: root
  - Key: SYSTEMCTL
    Name: arg
    Value: https://raw.githubusercontent.com/manics/docker-systemctl-replacement/devel/files/docker/systemctl.py
  - CmdLine:
    - yum update -y -q systemd &&     curl -o /usr/bin/systemctl $SYSTEMCTL &&     ln
      -s /usr/bin/systemctl /usr/bin/systemd &&     mkdir -p /run/systemd/system
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /etc/jupyter/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter-notebook.service
    - /etc/systemd/system/
  - CmdLine:
    - chown -R $NB_USER:$NB_GID /home/$NB_USER/ /notebooks/ &&     echo "$NB_USER
      ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/notebook &&     ln -s /etc/systemd/system/jupyter-notebook.service
      /etc/systemd/system/multi-user.target.wants/jupyter-notebook.service
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
