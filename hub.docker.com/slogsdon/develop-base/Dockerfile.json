{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/zsh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-256color"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "user"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$USER"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get install -y       autoconf       automake       build-essential       cmake       curl       g++       git       libssl-dev       libtool       libtool-bin       pkg-config       python-dev python-pip python3-dev python3-pip       stow       sudo       tmux       unzip       zsh       \u0026\u0026    git clone https://github.com/neovim/neovim \u0026\u0026    cd neovim \u0026\u0026    make CMAKE_BUILD_TYPE=Release \u0026\u0026    make install \u0026\u0026    cd .. \u0026\u0026    rm -rf ./neovim \u0026\u0026    pip3 install neovim \u0026\u0026    pip2 install neovim \u0026\u0026    apt-get autoremove -y \u0026\u0026 apt-get clean -y \u0026\u0026    rm -rf /var/lib/apit/lists \u0026\u0026    adduser --disabled-password --gecos '' --shell $SHELL $USER \u0026\u0026    adduser $USER sudo \u0026\u0026    chown -R $USER:$USER $HOME \u0026\u0026    echo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Name": "user",
          "User": "$USER"
        },
        {
          "CmdLine": [
            "zsh",
            "-c",
            "STOW_INSTALL=\"$HOME/.dotfiles/scripts/install.sh\"; [[ -f $STOW_INSTALL ]] \u0026\u0026 bash $STOW_INSTALL \u0026\u003e/dev/null; zsh -i"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}