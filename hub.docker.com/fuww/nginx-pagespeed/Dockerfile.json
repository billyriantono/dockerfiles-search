{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.19",
      "SourceCode": "FROM phusion/baseimage:0.9.19",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.19"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PAGESPEED_VERSION",
              "Value": "1.12.34.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEADERS_MORE_VERSION",
              "Value": "0.32"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.1.0f"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -r -s /usr/sbin/nologin nginx \u0026\u0026 mkdir -p /var/log/nginx /var/cache/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y --no-install-recommends install git-core wget autoconf automake libtool build-essential zlib1g-dev libpcre3-dev libxslt1-dev libxml2-dev libgd2-xpm-dev libgeoip-dev libgoogle-perftools-dev libperl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Downloading nginx v${NGINX_VERSION} from http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz ...\" \u0026\u0026 wget -qO - http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar zxf - -C /tmp \u0026\u0026 \techo \"Downloading headers-more v${HEADERS_MORE_VERSION} from https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz ...\" \u0026\u0026 wget -qO - https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz | tar zxf - -C /tmp \u0026\u0026 \techo \"Downloading ngx_pagespeed v${PAGESPEED_VERSION} from https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-stable.tar.gz...\" \u0026\u0026 wget -qO - https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-stable.tar.gz | tar zxf - -C /tmp \u0026\u0026 \techo \"Downloading pagespeed psol v${PAGESPEED_VERSION} from https://dl.google.com/dl/page-speed/psol/${PAGESPEED_VERSION}.tar.gz...\" \u0026\u0026 wget -qO - https://dl.google.com/dl/page-speed/psol/${PAGESPEED_VERSION}-x64.tar.gz | tar xzf  - -C /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-stable \u0026\u0026 \techo \"Downloading openssl v${OPENSSL_VERSION} from https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz ...\" \u0026\u0026 wget -qO - https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar xzf  - -C /tmp \u0026\u0026 \techo \"Installing libbrotli (latest) from https://github.com/bagder/libbrotli ...\" \u0026\u0026 git clone https://github.com/bagder/libbrotli /tmp/libbrotli \u0026\u0026 cd /tmp/libbrotli \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     echo \"Downloading ngx-brotli (latest) from https://github.com/google/ngx_brotli ...\" \u0026\u0026 git clone https://github.com/google/ngx_brotli /tmp/ngx_brotli \u0026\u0026 \tcd /tmp/ngx_brotli \u0026\u0026 git submodule update --init \u0026\u0026 \tcd /tmp/nginx-${NGINX_VERSION} \u0026\u0026 \tPOSITION_AUX=true ./configure \t\t--prefix=/etc/nginx  \t\t--sbin-path=/usr/sbin/nginx  \t\t--conf-path=/etc/nginx/nginx.conf  \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp  \t\t--user=nginx  \t\t--group=nginx  \t\t--with-http_ssl_module  \t\t--with-http_realip_module  \t\t--with-http_addition_module  \t\t--with-http_sub_module  \t\t--with-http_dav_module  \t\t--with-http_flv_module  \t\t--with-http_mp4_module  \t\t--with-http_gunzip_module  \t\t--with-http_gzip_static_module  \t\t--with-http_random_index_module  \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module  \t\t--with-http_auth_request_module  \t\t--without-http_autoindex_module \t\t--without-http_ssi_module \t\t--with-threads  \t\t--with-stream  \t\t--with-stream_ssl_module  \t\t--with-mail  \t\t--with-mail_ssl_module  \t\t--with-file-aio  \t\t--with-http_v2_module \t\t--with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2'  \t\t--with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed' \t\t--with-ipv6 \t\t--with-pcre-jit \t\t--with-openssl=/tmp/openssl-${OPENSSL_VERSION}         --add-module=/tmp/ngx_brotli \t\t--add-dynamic-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}-stable \t\t--add-module=/tmp/headers-more-nginx-module-${HEADERS_MORE_VERSION} \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tapt-get purge -yqq automake autoconf libtool git-core build-essential zlib1g-dev libpcre3-dev libxslt1-dev libxml2-dev libgd2-xpm-dev libgeoip-dev libgoogle-perftools-dev libperl-dev \u0026\u0026 \tapt-get autoremove -yqq \u0026\u0026 \tapt-get clean \u0026\u0026 \trm -Rf /tmp/* /var/tmp/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_APP_USER",
              "Value": "app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_APP_GROUP",
              "Value": "app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_APP_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_APP_GID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_UPLOAD_MAX_SIZE",
              "Value": "30M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_NGINX_MAX_WORKER_PROCESSES",
              "Value": "8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_CHOWN_APP_DIR",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSL_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "chmod 750 /app/bin/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/app/bin/init_nginx.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}