{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "darenjacobs/alpine:3.8",
      "SourceCode": "FROM darenjacobs/alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "darenjacobs/alpine:3.8"
      },
      "Commands": [
        {
          "Key": "JIRA_VERSION",
          "Name": "arg",
          "Value": "7.11.2"
        },
        {
          "Key": "JIRA_PRODUCT",
          "Name": "arg",
          "Value": "jira-software"
        },
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "LANG_LANGUAGE",
          "Name": "arg",
          "Value": "en"
        },
        {
          "Key": "LANG_COUNTRY",
          "Name": "arg",
          "Value": "US"
        },
        {
          "Env": [
            {
              "Key": "JIRA_USER",
              "Value": "jira"
            },
            {
              "Key": "JIRA_GROUP",
              "Value": "jira"
            },
            {
              "Key": "JIRA_CONTEXT_PATH",
              "Value": "ROOT"
            },
            {
              "Key": "JIRA_HOME",
              "Value": "/var/atlassian/jira"
            },
            {
              "Key": "JIRA_INSTALL",
              "Value": "/opt/jira"
            },
            {
              "Key": "JIRA_SCRIPTS",
              "Value": "/usr/local/share/atlassian"
            },
            {
              "Key": "MYSQL_DRIVER_VERSION",
              "Value": "5.1.46"
            },
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "$JIRA_INSTALL/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin"
            },
            {
              "Key": "LANG",
              "Value": "${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin",
            "${JIRA_SCRIPTS}"
          ]
        },
        {
          "CmdLine": [
            "apk add --update                                          ca-certificates                                         xmlstarlet                                    \u0026\u0026      export GLIBC_VERSION=2.26-r0 \u0026\u0026     wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \u0026\u0026     apk add --allow-untrusted /tmp/glibc-${GLIBC_VERSION}.apk \u0026\u0026     wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk \u0026\u0026     apk add --allow-untrusted /tmp/glibc-bin-${GLIBC_VERSION}.apk \u0026\u0026     wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk \u0026\u0026     apk --allow-untrusted add /tmp/glibc-i18n-${GLIBC_VERSION}.apk \u0026\u0026     /usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8 \u0026\u0026     export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin \u0026\u0026     mkdir -p ${JIRA_HOME}                           \u0026\u0026      mkdir -p ${JIRA_INSTALL}                        \u0026\u0026      wget -O /tmp/jira.bin https://www.atlassian.com/software/jira/downloads/binary/${JIRA_BIN} \u0026\u0026     chmod +x /tmp/jira.bin                          \u0026\u0026      /tmp/jira.bin -q -varfile                                 ${JIRA_SCRIPTS}/response.varfile              \u0026\u0026      rm -f                                                     ${JIRA_INSTALL}/lib/mysql-connector-java*.jar \u0026\u0026      wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz      \u0026\u0026      tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    --directory=/tmp                                                                                        \u0026\u0026      cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar           ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar                                \u0026\u0026      export CONTAINER_USER=jira                      \u0026\u0026      export CONTAINER_UID=1000                       \u0026\u0026      export CONTAINER_GROUP=jira                     \u0026\u0026      export CONTAINER_GID=1000                       \u0026\u0026      addgroup -g $CONTAINER_GID $CONTAINER_GROUP     \u0026\u0026      adduser -u $CONTAINER_UID                                       -G $CONTAINER_GROUP                                     -h /home/$CONTAINER_USER                                -s /bin/bash                                            -S $CONTAINER_USER                      \u0026\u0026      export KEYSTORE=$JAVA_HOME/lib/security/cacerts \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der \u0026\u0026     wget -O /home/${JIRA_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \u0026\u0026     chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_HOME}    \u0026\u0026      chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_INSTALL} \u0026\u0026      chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_SCRIPTS} \u0026\u0026      chown -R $JIRA_USER:$JIRA_GROUP /home/${JIRA_USER} \u0026\u0026      wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026     tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz \u0026\u0026     rm /tmp/dockerize.tar.gz \u0026\u0026     apk del                                                   ca-certificates                                         gzip                                                    wget                                          \u0026\u0026      rm -rf /var/cache/apk/*                         \u0026\u0026      rm -rf /tmp/*                                   \u0026\u0026      rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "com.atlassian.application.jira.version",
              "Value": "$JIRA_PRODUCT-$JIRA_VERSION"
            },
            {
              "Key": "com.atlassian.application.jira.userid",
              "Value": "$CONTAINER_UID"
            },
            {
              "Key": "com.atlassian.application.jira.groupid",
              "Value": "$CONTAINER_GID"
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "jira"
        },
        {
          "Name": "workdir",
          "Path": "${JIRA_HOME}"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/atlassian/jira"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/usr/local/share/atlassian/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jira"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}