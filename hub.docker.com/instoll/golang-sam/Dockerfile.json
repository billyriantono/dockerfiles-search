{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "amazonlinux:2.0.20190228",
      "SourceCode": "FROM amazonlinux:2.0.20190228",
      "Platform": "",
      "From": {
        "Image": "amazonlinux:2.0.20190228"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOSRC",
              "Value": "go1.13.3.linux-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin:/go:/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Install OS dependencies\" \u0026\u0026       yum -y install         gcc         git         ImageMagick         ImageMagick-devel         make         python2-devel         python2-pip         rsync         tar         unzip         wget         zip \u0026\u0026     echo \"Install Docker cli\" \u0026\u0026       yum -y install         yum-utils         device-mapper-persistent-data         lvm2 \u0026\u0026       yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo \u0026\u0026       yum -y install         docker-ce-cli \u0026\u0026     echo \"Install Go\" \u0026\u0026       wget -q https://dl.google.com/go/$GOSRC.tar.gz \u0026\u0026       tar -xvf $GOSRC.tar.gz \u0026\u0026       mv go /usr/local \u0026\u0026       rm $GOSRC.tar.gz \u0026\u0026       mkdir /go \u0026\u0026     echo \"Install AWS SAM CLI\" \u0026\u0026       pip install --upgrade --force-reinstall pip==19.3.1 \u0026\u0026       pip install aws-sam-cli==0.23.0 \u0026\u0026     echo \"Install ngrok..\" \u0026\u0026       wget -q https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip \u0026\u0026       unzip ngrok-stable-linux-amd64.zip -d /usr/bin \u0026\u0026       rm -f ngrok-stable-linux-amd64.zip \u0026\u0026     echo \"Cleanup..\" \u0026\u0026       yum -y remove         python2-devel \u0026\u0026       rm -Rf /var/cache/yum/* \u0026\u0026       yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}