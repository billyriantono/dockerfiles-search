{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TF_VERSION",
              "Value": "0.12.17"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TF_FILE",
              "Value": "terraform_${TF_VERSION}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWSCLI_VERSION",
              "Value": "1.16.300"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AZURE_VERSION",
              "Value": "2.0.77"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE",
              "Value": "1.25.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_ENGINE",
              "Value": "4.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"System dependencies\" \u0026\u0026       apk add --update         bash         ca-certificates         curl         docker         git         gnupg         jq         make         nodejs         npm         openssl         python3 \u0026\u0026     echo \"Build dependencies\" \u0026\u0026       apk add --virtual build-deps         build-base         gcc         libffi-dev         musl-dev         openssl-dev         python3-dev \u0026\u0026     echo \"Python3 dependencies\" \u0026\u0026       python3 -m ensurepip \u0026\u0026       pip3 install --upgrade pip cffi \u0026\u0026       if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi \u0026\u0026       if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi \u0026\u0026     echo \"Ansible dependencies\" \u0026\u0026       pip --no-cache-dir install         ansible==${ANSIBLE_VERSION}         docker-compose==${DOCKER_COMPOSE}         docker==${DOCKER_ENGINE} \u0026\u0026     echo \"Terraform dependencies\" \u0026\u0026       cd /tmp \u0026\u0026       wget https://releases.hashicorp.com/terraform/${TF_VERSION}/${TF_FILE} \u0026\u0026       unzip ${TF_FILE} \u0026\u0026       mv terraform /usr/bin \u0026\u0026       rm -f ${TF_FILE} \u0026\u0026     echo \"Azure dependencies\" \u0026\u0026       pip --no-cache-dir install azure-cli==${AZURE_VERSION} \u0026\u0026     echo \"AWS dependencies\" \u0026\u0026       pip --no-cache-dir install awscli==${AWSCLI_VERSION} \u0026\u0026     echo \"Install migrate util\" \u0026\u0026       wget https://github.com/instoll/alpine-mongoshell/releases/download/0.1.0/migrate \u0026\u0026       chmod 0755 migrate \u0026\u0026       mv migrate /usr/bin \u0026\u0026     echo \"Sentry dependencies\" \u0026\u0026       npm config set unsafe-perm true \u0026\u0026       npm install -g @sentry/cli \u0026\u0026     echo \"Cleanup\" \u0026\u0026       apk del --purge build-deps \u0026\u0026       rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}