MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Bartek Fabiszewski (https://github.com/bfabiszewski)"'
    Name: label
  - Key: DB_ROOT_PASS
    Name: arg
    Value: secret1
  - Key: DB_USER_PASS
    Name: arg
    Value: secret2
  - Key: DB_DRIVER
    Name: arg
    Value: mysql
  - Env:
    - Key: ULOGGER_ADMIN_USER
      Value: admin
    Name: env
  - Env:
    - Key: ULOGGER_PASS_STRENGTH
      Value: "0"
    Name: env
  - Env:
    - Key: ULOGGER_PASS_LENMIN
      Value: "5"
    Name: env
  - Env:
    - Key: ULOGGER_REQUIRE_AUTHENTICATION
      Value: "1"
    Name: env
  - Env:
    - Key: ULOGGER_PUBLIC_TRACKS
      Value: "0"
    Name: env
  - Env:
    - Key: ULOGGER_GKEY
      Value: '""'
    Name: env
  - Env:
    - Key: ULOGGER_LANG
      Value: en
    Name: env
  - Env:
    - Key: ULOGGER_UNITS
      Value: metric
    Name: env
  - Env:
    - Key: ULOGGER_DB_DRIVER
      Value: ${DB_DRIVER}
    Name: env
  - Env:
    - Key: ULOGGER_ENABLE_SETUP
      Value: "0"
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.utf-8
    Name: env
  - CmdLine:
    - apk add --no-cache     nginx     php7-ctype php7-fpm php7-json php7-pdo php7-session
      php7-simplexml php7-xmlwriter
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DB_DRIVER}" = "mysql" ]; then apk add --no-cache mariadb mariadb-client
      php7-pdo_mysql; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DB_DRIVER}" = "pgsql" ]; then apk add --no-cache postgresql postgresql-client
      php7-pdo_pgsql; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DB_DRIVER}" = "sqlite" ]; then apk add --no-cache sqlite php7-pdo_sqlite;
      fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/run.sh
    - /run.sh
  - CmdLine:
    - chmod +x /run.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/init.sh
    - /init.sh
  - CmdLine:
    - chmod +x /init.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/nginx.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - chown nginx.nginx /etc/nginx/conf.d/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/html
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/html
  - CmdLine:
    - grep '^[$<?]' /var/www/html/config.default.php > /var/www/html/config.php
    Name: run
    PrependShell: true
  - CmdLine:
    - /init.sh "${DB_ROOT_PASS}" "${DB_USER_PASS}"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log &&     ln -sf /dev/stderr /var/log/nginx/error.log
      &&     ln -sf /dev/stdout /var/log/php7/error.log &&     ln -sf /dev/stderr
      /var/log/php7/error.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
