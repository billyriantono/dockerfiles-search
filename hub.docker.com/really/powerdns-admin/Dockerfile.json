{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Troy Kelly",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add --no-cache git \u0026\u0026     apk add --update     python     python-dev     py-pip     libffi-dev     openldap-dev     build-base     mariadb-dev \u0026\u0026     pip install -U pip \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ngoduykhanh/PowerDNS-Admin.git /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "virtualenv flask \u0026\u0026   source ./flask/bin/activate \u0026\u0026   pip install MySQL-python \u0026\u0026   pip install -r requirements.txt \u0026\u0026   cp config_template.py config.py \u0026\u0026   sed -i \"s|LOG_FILE = 'logfile.log'|LOG_FILE = ''|g\" /app/config.py;   sed -i \"s|BASIC_ENABLED = True|BASIC_ENABLED = False|g\" /app/config.py;   sed -i \"s|SIGNUP_ENABLED = True|SIGNUP_ENABLED = False|g\" /app/config.py;   sed -i \"s|PDNS_VERSION = '3.4.7'|PDNS_VERSION = '4.0.4'|g\" /app/config.py;   sed -i \"s|PRETTY_IPV6_PTR = False|PRETTY_IPV6_PTR = True|g\" /app/config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9393"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}