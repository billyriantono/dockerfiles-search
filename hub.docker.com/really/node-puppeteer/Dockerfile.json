{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Troy Kelly \u003ctroy.kelly@really.ai\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "v9.5.0"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "5"
            },
            {
              "Key": "YARN_VERSION",
              "Value": "latest"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Node.JS with PM2 and git\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Provides node with working pm2 and git. Supports starting apps from pm2.json with feedback to keymetrics.\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://really.ai/about/opensource\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/reallyreally/docker-node-pm2-git\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Really Really, Inc.\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "CHROME_BIN",
              "Value": "/usr/bin/chromium-browser"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo @edge http://dl-cdn.alpinelinux.org/alpine/edge/community \u003e\u003e /etc/apk/repositories \u0026\u0026     echo @edge http://dl-cdn.alpinelinux.org/alpine/edge/main \u003e\u003e /etc/apk/repositories \u0026\u0026     echo @edge http://dl-cdn.alpinelinux.org/alpine/edge/testing \u003e\u003e /etc/apk/repositories \u0026\u0026     apk --no-cache update \u0026\u0026 apk --no-cache  upgrade \u0026\u0026   apk add --no-cache openssh-client git curl make gcc g++ python   linux-headers binutils-gold gnupg libstdc++ udev   gifsicle pngquant optipng libjpeg-turbo-utils ttf-opensans nss@edge chromium@edge \u0026\u0026   gpg --keyserver ipv4.pool.sks-keyservers.net --recv-keys     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE \u0026\u0026   curl -sSLO https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.xz \u0026\u0026   curl -sSL https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt |     grep \" node-${VERSION}.tar.xz\\$\" | sha256sum -c | grep . \u0026\u0026   tar -xf node-${VERSION}.tar.xz \u0026\u0026   cd node-${VERSION} \u0026\u0026   ./configure --prefix=/usr ${CONFIG_FLAGS} \u0026\u0026   make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026   make install \u0026\u0026   cd / \u0026\u0026   if [ -z \"$CONFIG_FLAGS\" ]; then     npm install -g npm@${NPM_VERSION} \u0026\u0026     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf \u0026\u0026     if [ -n \"$YARN_VERSION\" ]; then       gpg --keyserver ipv4.pool.sks-keyservers.net --recv-keys         6A010C5166006599AA17F08146C2130DFD2497F5 \u0026\u0026       curl -sSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O https://yarnpkg.com/${YARN_VERSION}.tar.gz.asc \u0026\u0026       gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz \u0026\u0026       mkdir /usr/local/share/yarn \u0026\u0026       tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 \u0026\u0026       ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ \u0026\u0026       ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ \u0026\u0026       rm ${YARN_VERSION}.tar.gz*;     fi;   fi \u0026\u0026   apk del curl linux-headers binutils-gold gnupg ${DEL_PKGS} \u0026\u0026   rm -rf ${RM_DIRS} /node-${VERSION}* /usr/share/man /tmp/* /var/cache/apk/*     /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man     /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts \u0026\u0026   mkdir -p /usr/src \u0026\u0026   adduser -D pptruser pptruser \u0026\u0026 addgroup pptruser audio \u0026\u0026 addgroup pptruser video \u0026\u0026   mkdir /home/pptruser/.ssh \u0026\u0026   mkdir -p /usr/src/app \u0026\u0026   touch /home/pptruser/.ssh/repo-key \u0026\u0026   echo \"IdentityFile /home/pptruser/.ssh/repo-key\" \u003e /home/pptruser/.ssh/config \u0026\u0026   chmod 600 /home/pptruser/.ssh/config \u0026\u0026   chmod 600 /home/pptruser/.ssh/repo-key \u0026\u0026   mkdir -p /home/pptruser/Downloads \u0026\u0026   mkdir -p /node_modules \u0026\u0026   npm install pm2 -g \u0026\u0026   pm2 install pm2-auto-pull"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "known_hosts",
            "/home/pptruser/.ssh/known_hosts"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/home/pptruser/"
          ]
        },
        {
          "CmdLine": [
            "chown -R pptruser:pptruser /home/pptruser \u0026\u0026     chown -R pptruser:pptruser /node_modules \u0026\u0026     chown -R pptruser:pptruser /usr/src/app \u0026\u0026     chmod 755 /home/pptruser/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "pptruser"
        },
        {
          "CmdLine": [
            "/home/pptruser/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "google-chrome-unstable"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}