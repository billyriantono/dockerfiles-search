MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tpwgen \t\topenssl
      \t\tperl \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='A4A9406876FCBD3C456770C88C718D3B5072E1F5'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg
      --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \trm -r \"$GNUPGHOME\";
      \tapt-key list > /dev/null"
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "8.0"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 8.0.3-rc-1debian8
    Name: env
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mysql-community-server mysql-community-server/data-dir select '';
      \t\techo mysql-community-server mysql-community-server/root-pass password '';
      \t\techo mysql-community-server mysql-community-server/re-root-pass password
      ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select
      false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y
      mysql-community-client-core=\"${MYSQL_VERSION}\" mysql-community-server-core=\"${MYSQL_VERSION}\"
      && rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql
      /var/run/mysqld \t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \t&&
      chmod 777 /var/run/mysqld"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/
    - /etc/mysql/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "22"
    - "2222"
    - "3306"
    - "443"
    - "80"
  - CmdLine:
    - mysqld
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
- BaseName: alexcheng/apache2-php7:7.1.11
  Commands:
  - Maintainer: Fu Cheng <alexcheng1982@gmail.com>
    Name: maintainer
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - Env:
    - Key: MAGENTO_VERSION
      Value: 2.2.2
    Name: env
  - CmdLine:
    - rm -rf /var/www/html/*     && apt-get update     && apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && curl https://codeload.github.com/magento/magento2/tar.gz/$MAGENTO_VERSION
      -o $MAGENTO_VERSION.tar.gz && tar xvf $MAGENTO_VERSION.tar.gz && mv magento2-$MAGENTO_VERSION/*
      magento2-$MAGENTO_VERSION/.htaccess /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php     && mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - requirements="libpng12-dev libmcrypt-dev libmcrypt4 libcurl3-dev libfreetype6
      libjpeg-turbo8 libjpeg-turbo8-dev libpng12-dev libfreetype6-dev libicu-dev libxslt1-dev"     &&
      apt-get install -y $requirements     && rm -rf /var/lib/apt/lists/*     && docker-php-ext-install
      pdo_mysql     && docker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/     && docker-php-ext-install gd     && docker-php-ext-install
      mcrypt     && docker-php-ext-install mbstring     && docker-php-ext-install
      zip     && docker-php-ext-install intl     && docker-php-ext-install xsl     &&
      docker-php-ext-install soap     && requirementsToRemove="libpng12-dev libmcrypt-dev
      libcurl3-dev libpng12-dev libfreetype6-dev libjpeg-turbo8-dev"     && apt-get
      purge --auto-remove -y $requirementsToRemove
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./auth.json
    - /var/www/.composer/
  - CmdLine:
    - chsh -s /bin/bash www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - su www-data -c "cd /var/www/html && composer install"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html     && find . -type d -exec chmod 770 {} \;     && find . -type
      f -exec chmod 660 {} \;     && chmod u+x bin/magento
    Name: run
    PrependShell: true
  - CmdLine:
    - su www-data -c "cd /var/www/html && composer config repositories.magento composer
      https://repo.magento.com/"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./bin/install-magento
    - /usr/local/bin/install-magento
  - CmdLine:
    - chmod +x /usr/local/bin/install-magento
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./bin/install-sampledata
    - /usr/local/bin/install-sampledata
  - CmdLine:
    - chmod +x /usr/local/bin/install-sampledata
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "memory_limit=1024M" > /usr/local/etc/php/conf.d/memory-limit.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Chown: ""
    Name: add
    SourcesAndDest:
    - crontab
    - /etc/cron.d/magento2-cron
  - CmdLine:
    - chmod 0644 /etc/cron.d/magento2-cron     && crontab -u www-data /etc/cron.d/magento2-cron
    Name: run
    PrependShell: true
  From:
    Image: alexcheng/apache2-php7:7.1.11
  Name: ""
  Platform: ""
  SourceCode: FROM alexcheng/apache2-php7:7.1.11
