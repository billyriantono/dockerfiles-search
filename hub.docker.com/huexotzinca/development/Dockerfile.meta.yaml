MetaArgs: null
Stages:
- BaseName: huexotzinca/base
  Commands:
  - Maintainer: Neftali Bautista<dev@neftalibautista.com>
    Name: maintainer
  - Labels:
    - Key: version
      Value: '"0.1.4"'
    Name: label
  - Key: ADMIN_GROUP_NAME
    Name: arg
    Value: '"admin"'
  - Key: USER_NAME
    Name: arg
    Value: '"docker"'
  - Key: USER_GROUP_NAME
    Name: arg
    Value: '"docker"'
  - Key: USER_PATH
    Name: arg
    Value: '"/home/${USER_NAME}"'
  - Key: APACHE_USER_NAME
    Name: arg
    Value: '"www-data"'
  - Key: APACHE_GROUP_NAME
    Name: arg
    Value: '"apache"'
  - Key: TMP_PATH
    Name: arg
    Value: '"${USER_PATH}/tmp"'
  - Key: ROOT_USER_PASSWORD
    Name: arg
    Value: '"docker"'
  - Key: DOCKER_USER_PASSWORD
    Name: arg
    Value: '"${ROOT_USER_PASSWORD}"'
  - Key: ROOT_DB_PASSWORD
    Name: arg
    Value: '"${ROOT_USER_PASSWORD}"'
  - Key: PHPUNIT_VERSION
    Name: arg
    Value: '"6.3"'
  - Key: BASH_RC_FILE
    Name: arg
    Value: '"bashrc"'
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install tmux libpcre3-dev &&     apt-get -y install gcc g++ libboost-all-dev
      cmake &&     apt-get -y install software-properties-common &&     apt-get -y
      install python-software-properties &&     apt-get -y install apache2 apache2-dev
      &&     apt-get -y install php php-cli php-dev &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y install mysql-server &&     apt-get -y install mysql-client &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y install postgresql &&     apt-get -y install postgresql-client postgresql-contrib
      &&     apt-get -y install libapache2-mod-php php7.0-gd php7.0-ldap php7.0-odbc
      &&     apt-get -y install php7.0-mysql php7.0-pgsql libapache2-mod-auth-pgsql
      &&     apt-get -y install php7.0-curl php7.0-xmlrpc php7.0-intl php7.0-mcrypt
      &&     apt-get -y install php7.0-mbstring php7.0-zip libapache2-mod-php7.0 &&     apt-get
      -y install php-pear pear-channels
    Name: run
    PrependShell: true
  - CmdLine:
    - pear channel-update pear.php.net &&     pear upgrade-all
    Name: run
    PrependShell: true
  - Name: user
    User: '"${USER_NAME}"'
  - CmdLine:
    - mkdir -p "${TMP_PATH}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $TMP_PATH
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"${BASH_RC_FILE}"'
    - '"${USER_PATH}/.bashrc"'
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      composer-setup.php &&     php -r "unlink('composer-setup.php');" &&     sudo
      mv composer.phar /usr/local/bin/composer &&     composer self-update &&     composer
      global require "phpunit/phpunit=${PHPUNIT_VERSION}.*"
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require "laravel/installer"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://packagecloud.io/install/repositories/phalcon/nightly/script.deb.sh
      | sudo bash &&     sudo sed -i 's/yakkety/xenial/g' /etc/apt/sources.list.d/phalcon_nightly.list
      &&     sudo apt-get update &&     sudo apt-get install php7.0-phalcon &&     sudo
      apache2ctl -k restart
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache
    - '"${USER_PATH}/apache"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - media
    - '"${USER_PATH}/media"'
  - CmdLine:
    - sudo groupadd ${APACHE_GROUP_NAME}
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo usermod -a -G ${ADMIN_GROUP_NAME} ${APACHE_USER_NAME}
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo usermod -a -G ${APACHE_GROUP_NAME} ${USER_NAME}
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir "${USER_PATH}/apache/enabled"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir "${USER_PATH}/apache/sites"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R "${USER_NAME}:${USER_NAME}" "${USER_PATH}/apache" &&     chown -R "${APACHE_USER_NAME}:${APACHE_GROUP_NAME}"
      "${USER_PATH}/media" &&     chmod -R 775 "${USER_PATH}/media" &&     chown "${USER_NAME}:${USER_NAME}"
      "${USER_PATH}/.bashrc"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /root/start.sh
  - CmdLine:
    - chmod +x /root/start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf.backup
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.conf
    - /etc/apache2/apache2.conf
  - CmdLine:
    - apt-get -y install libmysqlclient20 libmysqlclient-dev python-dev &&     service
      mysql start &&     mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${ROOT_DB_PASSWORD}');"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
    - "8080"
  - Name: expose
    Ports:
    - "3306"
  - Name: expose
    Ports:
    - "5432"
  - Name: expose
    Ports:
    - "8000"
  - Name: workdir
    Path: $USER_PATH
  - CmdLine:
    - rm -rf "${TMP_PATH}"
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ -f "/home/docker/.sudo_as_admin_successful" ] &&     rm -rf "/home/docker/.sudo_as_admin_successful"
      || echo "File not found"'
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: huexotzinca/base
  Name: ""
  Platform: ""
  SourceCode: FROM huexotzinca/base
