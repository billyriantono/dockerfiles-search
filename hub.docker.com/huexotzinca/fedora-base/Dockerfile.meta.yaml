MetaArgs: null
Stages:
- BaseName: fedora:25
  Commands:
  - Maintainer: Neftali Bautista<dev@neftalibautista.com>
    Name: maintainer
  - Labels:
    - Key: version
      Value: '"0.0.1"'
    Name: label
  - Key: USER_NAME
    Name: arg
    Value: '"docker"'
  - Key: USER_PATH
    Name: arg
    Value: '"/home/${USER_NAME}"'
  - Key: TMP_PATH
    Name: arg
    Value: '"${USER_PATH}/tmp"'
  - Key: REDIS_RELEASE
    Name: arg
    Value: '"redis-4.0.2"'
  - Key: REDIS_TAR_NAME
    Name: arg
    Value: '"${REDIS_RELEASE}.tar.gz"'
  - Key: MONGODB_USER_NAME
    Name: arg
    Value: '"mongod"'
  - Key: MONGODB_GROUP_NAME
    Name: arg
    Value: '"${MONGODB_USER_NAME}"'
  - Key: MONGODB_RELEASE
    Name: arg
    Value: '"3.4"'
  - Key: MONGODB_VER_NAME
    Name: arg
    Value: '"mongodb-${MONGODB_RELEASE}"'
  - Key: PHANTOMJS_RELEASE
    Name: arg
    Value: '"phantomjs-2.1.1"'
  - Key: PHANTOMJS_VER_NAME
    Name: arg
    Value: '"${PHANTOMJS_RELEASE}-linux-x86_64"'
  - Key: PHANTOMJS_TAR_NAME
    Name: arg
    Value: '"${PHANTOMJS_VER_NAME}.tar.bz2"'
  - Key: ROOT_USER_PASSWORD
    Name: arg
    Value: '"docker"'
  - Key: DOCKER_USER_PASSWORD
    Name: arg
    Value: '"${ROOT_USER_PASSWORD}"'
  - Key: BASH_RC_FILE
    Name: arg
    Value: '"bashrc"'
  - Key: WATCHMAN_RELEASE_VERSION
    Name: arg
    Value: '"4.9.0"'
  - CmdLine:
    - dnf -y update &&     dnf -y install autoconf automake bison procps &&     dnf
      -y install sudo &&     dnf -y install curl &&     dnf -y install wget &&     dnf
      -y install git subversion bzr bash-completion &&     dnf -y install vim &&     dnf
      -y install sqlite libsqlite3x-devel &&     dnf -y install openssl libtool tcl
      tcl-devel  &&     dnf -y install libxml2-devel libffi-devel &&     dnf -y install
      libxslt-devel ncurses-devel &&     dnf -y install python-devel python3 python3-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - dnf -y install gcc gcc-c++ make flex bison gperf ruby &&     dnf -y install
      openssl-devel freetype-devel fontconfig-devel &&     dnf -y install libicu-devel
      sqlite-devel libpng-devel libjpeg-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - dnf -y install redhat-rpm-config
    Name: run
    PrependShell: true
  - CmdLine:
    - dnf -y install openssh-server openssh-clients openssh gnupg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "[${MONGODB_VER_NAME}]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/${MONGODB_RELEASE}/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-${MONGODB_RELEASE}.asc"
      > "/etc/yum.repos.d/${MONGODB_VER_NAME}.repo" &&     dnf -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd admin &&     groupadd "${USER_NAME}" &&     useradd -m -g "${USER_NAME}"
      -G admin -s /bin/bash "${USER_NAME}"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers &&     echo "root:${ROOT_USER_PASSWORD}"
      | chpasswd &&     echo "docker:${ROOT_USER_PASSWORD}" | chpasswd &&     mkdir
      "${TMP_PATH}" &&     chown $USER_NAME:$USER_NAME "${TMP_PATH}"'
    Name: run
    PrependShell: true
  - CmdLine:
    - cp "${USER_PATH}/.bashrc" "${USER_PATH}/.bashrc.default"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"${BASH_RC_FILE}"'
    - '"${USER_PATH}/.bashrc"'
  - CmdLine:
    - mkdir /opt/phantomjs
    Name: run
    PrependShell: true
  - CmdLine:
    - cp "/root/.bashrc" "/root/.bashrc.default"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"${BASH_RC_FILE}"'
    - '"/root/.bashrc"'
  - CmdLine:
    - chown "root:root" "/root/.bashrc" &&     chown "root:root" "/root/.bashrc.default"
      &&     chown "${USER_NAME}:${USER_NAME}" "${USER_PATH}/.bashrc" &&     chown
      "${USER_NAME}:${USER_NAME}" "${USER_PATH}/.bashrc.default" &&     chown "${USER_NAME}:${USER_NAME}"
      "/opt/phantomjs"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /root/start.sh
  - CmdLine:
    - chmod +x /root/start.sh
    Name: run
    PrependShell: true
  - Name: user
    User: $USER_NAME
  - Name: workdir
    Path: $TMP_PATH
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      7D2BAF1CF37B13E2069D6956105BD0E739499BDB
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "curl -L https://get.rvm.io | bash -s stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh
      | bash"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c  "rvm install 2.4 &&     rvm install 2.2 &&     rvm use 2.2
      &&     gem install haml &&     gem install sass &&     gem install compass &&     gem
      install rails &&     rvm --default use 2.4 &&     gem install haml &&     gem
      install sass &&     gem install compass &&     gem install rails"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "source \"${USER_PATH}/.nvm/nvm.sh\" &&     nvm install 6.11.3
      &&     nvm install 8.6.0 &&     nvm alias default 8.6.0 &&     npm install -g
      less  &&     npm install -g uglify-js &&     npm install -g socket.io &&     npm
      install -g coffee-script &&     npm install -g handlebars &&     npm install
      -g grunt &&     npm install -g brunch &&     npm install -g bower &&     npm
      install -g browserify  &&     npm install -g forever"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "source \"${USER_PATH}/.nvm/nvm.sh\" &&     npm install -g vows
      &&     npm install -g jasmine &&     npm install -g jasmine-node &&     npm
      install -g mocha &&     npm install -g --save-dev qunitjs &&     npm install
      -g blanket &&     npm install -g karma"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "source \"${USER_PATH}/.nvm/nvm.sh\" && npm install -g weinre"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "source \"${USER_PATH}/.nvm/nvm.sh\" &&     npm install -g express
      &&     npm install -g express-generator  &&     npm install -g sails &&     npm
      install -g geddy &&     npm install -g ember-cli &&     npm install -g @angular/cli
      &&     npm install -g yo &&     npm install -g generator-webapp &&     npm install
      -g generator-jquery &&     npm install -g generator-jasmine &&     npm install
      -g generator-mocha &&     npm install -g generator-chrome-extension &&     npm
      install -g generator-chromeapp &&     npm install -g generator-bootstrap &&     npm
      install -g generator-polymer &&     npm install -g generator-backbone &&     npm
      install -g generator-angular &&     npm install -g generator-karma"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $TMP_PATH
  - CmdLine:
    - git clone https://github.com/facebook/watchman.git &&     cd watchman &&     git
      checkout v${WATCHMAN_RELEASE_VERSION} &&     ./autogen.sh &&     ./configure
      &&     make
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $TMP_PATH
  - CmdLine:
    - wget https://bitbucket.org/ariya/phantomjs/downloads/${PHANTOMJS_TAR_NAME} &&     tar
      -xjf "${PHANTOMJS_TAR_NAME}" &&     mv "${PHANTOMJS_VER_NAME}" /opt/phantomjs/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O "http://download.redis.io/releases/${REDIS_TAR_NAME}" &&     tar -xvzf
      "${REDIS_TAR_NAME}" &&     cd "${REDIS_RELEASE}" &&     make
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: $TMP_PATH
  - CmdLine:
    - cd watchman &&     make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $TMP_PATH
  - CmdLine:
    - cd "${REDIS_RELEASE}" &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - dnf install -y mongodb-org mongodb-org-server &&     mkdir -p /data/db &&     chown
      "${USER_NAME}:${USER_NAME}" "/data" &&     chown "${USER_NAME}:${USER_NAME}"
      "/data/db"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/phantomjs/${PHANTOMJS_VER_NAME}/bin/phantomjs /usr/bin/phantomjs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $USER_PATH
  - CmdLine:
    - rm -rf "${TMP_PATH}"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "27017"
    - "3000"
    - "30820"
    - "3200"
    - "4200"
    - "49153"
    - "5000"
    - "6379"
    - "7357"
  - CmdLine:
    - /root/start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: fedora:25
  Name: ""
  Platform: ""
  SourceCode: FROM fedora:25
