MetaArgs: null
Stages:
- BaseName: python:3-alpine
  Commands:
  - Env:
    - Key: PYPISERVER_VERSION
      Value: 0.4.7
    Name: env
  - Env:
    - Key: PYPISERVER_DEPS
      Value: '''peewee<3.0'' ''tornado<5.0'''
    Name: env
  - CmdLine:
    - set -ex  && apk add --no-cache ca-certificates  && apk add --no-cache --virtual
      .build-deps     gcc     libffi-dev     musl-dev     openssl-dev     libxml2-dev     libxslt-dev     curl-dev  &&
      PYCURL_SSL_LIBRARY=openssl pip install --no-cache-dir pypi-server[proxy]==${PYPISERVER_VERSION}
      ${PYPISERVER_DEPS}  && find /usr/local -depth     \( -type f -a -name '*.pyc'
      -o -name '*.pyo' \)     -exec rm -rf '{}' +  && runDeps="$(     scanelf --needed
      --nobanner --recursive /usr/local       | awk '{ gsub(/,/, "\nso:", $2); print
      "so:" $2 }'       | sort -u       | xargs -r apk info --installed       | sort
      -u   )"  && apk add --virtual .pypiserver-rundeps $runDeps  && apk del .build-deps  &&
      rm -rf ~/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /packages
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /packages
  - Name: workdir
    Path: /packages
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8080"
  - Env:
    - Key: ADDRESS
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: STORAGE
      Value: /packages
    Name: env
  From:
    Image: python:3-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-alpine
