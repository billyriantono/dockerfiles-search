{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node",
      "SourceCode": "FROM node",
      "Platform": "",
      "From": {
        "Image": "node"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y     --no-install-recommends     ca-certificates     python3-dev     python3-pip     jq     rsync     unzip     ocaml     libelf-dev     locales     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^# *\\(en_GB.UTF-8\\)/\\1/' /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_GB.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "node"
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "\"/home/node/.nvm\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bash_profile",
            "/home/node/.bash_profile"
          ]
        },
        {
          "CmdLine": [
            "chown node:node /home/node/.bash_profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026    VER=\"latest\" \u0026\u0026    curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz \u0026\u0026    tar -xz -C /tmp -f /tmp/docker-$VER.tgz \u0026\u0026    mv /tmp/docker/* /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.11.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \u0026\u0026     unzip terraform.zip -d /usr/bin \u0026\u0026 rm -f terraform.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}