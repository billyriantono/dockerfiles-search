MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.10.6
    Name: env
  - Env:
    - Key: TERRAFORM_SHA256SUM
      Value: fbb4c37d91ee34aff5464df509367ab71a90272b7fab0fbd1893b367341d6e23
    Name: env
  - Env:
    - Key: PACKER_VERSION
      Value: 1.1.0
    Name: env
  - Env:
    - Key: PACKER_SHA256SUM
      Value: bd1eddfa114f7e6258ef3419613380297f1b4e438f5bae92f1177150519be934
    Name: env
  - CmdLine:
    - apk add --update git bash wget curl openssh &&     curl https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      > terraform_${TERRAFORM_VERSION}_linux_amd64.zip &&     echo "${TERRAFORM_SHA256SUM}  terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
      > terraform_${TERRAFORM_VERSION}_SHA256SUMS &&     sha256sum -cs terraform_${TERRAFORM_VERSION}_SHA256SUMS
      &&     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin &&     rm
      -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
      > packer_${PACKER_VERSION}_linux_amd64.zip &&     echo "${PACKER_SHA256SUM}  packer_${PACKER_VERSION}_linux_amd64.zip"
      > packer_${PACKER_VERSION}_SHA256SUMS &&     sha256sum -cs packer_${PACKER_VERSION}_SHA256SUMS
      &&     unzip packer_${PACKER_VERSION}_linux_amd64.zip -d /bin &&     rm -f packer_${PACKER_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "===> Installing sudo to emulate normal OS behavior..."  &&     apk --update
      add sudo                                         &&             echo "===> Adding
      Python runtime..."  &&     apk --update add python py-pip openssl ca-certificates    &&     apk
      --update add --virtual build-dependencies                 python-dev libffi-dev
      openssl-dev build-base  &&     pip install --upgrade pip cffi                            &&             echo
      "===> Installing Ansible..."  &&     pip install ansible                &&             echo
      "===> Removing package list..."  &&     apk del build-dependencies            &&     rm
      -rf /var/cache/apk/*               &&             echo "===> Adding hosts for
      convenience..."  &&     mkdir -p /etc/ansible                        &&     echo
      'localhost' > /etc/ansible/hosts
    Name: run
    PrependShell: true
  - Expression: RUN  echo "===> Updating TLS certificates..."         &&               apk
      --update add openssl ca-certificates
    Name: onbuild
  - Expression: WORKDIR  /tmp
    Name: onbuild
  - Expression: COPY  .  /tmp
    Name: onbuild
  - Expression: 'RUN                echo "===> Diagnosis: host information..."  &&               ansible
      -c local -m setup all'
    Name: onbuild
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
