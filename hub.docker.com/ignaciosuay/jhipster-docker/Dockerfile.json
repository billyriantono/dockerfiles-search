{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM      ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Ignacio Suay \u003cignacio.suay@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"deb http://archive.ubuntu.com/ubuntu trusty main universe\" \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y -q python-software-properties software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install openssh-server \u0026\u0026 mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:webupd8team/java -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install oracle-java8-installer \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-java-alternatives -s java-8-oracle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export JAVA_HOME=/usr/lib/jvm/java-8-oracle\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install vim git sudo zip bzip2 fontconfig curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:chris-lea/node.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g generator-jhipster@1.10.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:jhipster' |chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd jhipster \u0026\u0026 useradd jhipster -s /bin/bash -m -g jhipster -G jhipster \u0026\u0026 adduser jhipster sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'jhipster:jhipster' |chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   sed -i 's/^\\(bind-address\\s.*\\)/# \\1/' /etc/mysql/my.cnf \u0026\u0026   sed -i 's/^\\(log_error\\s.*\\)/# \\1/' /etc/mysql/my.cnf \u0026\u0026   echo \"mysqld_safe \u0026\" \u003e /tmp/config \u0026\u0026   echo \"mysqladmin --silent --wait=30 ping || exit 1\" \u003e\u003e /tmp/config \u0026\u0026   echo \"mysql -e 'GRANT ALL PRIVILEGES ON *.* TO \\\"root\\\"@\\\"%\\\" WITH GRANT OPTION;'\" \u003e\u003e /tmp/config \u0026\u0026   bash /tmp/config \u0026\u0026   rm -f /tmp/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "script.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/mysql",
            "/var/lib/mysql"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/jhipster"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/jhipster"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}