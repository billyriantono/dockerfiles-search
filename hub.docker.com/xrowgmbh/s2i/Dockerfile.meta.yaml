MetaArgs: null
Stages:
- BaseName: centos:8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"bjoern@xrow.de"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.name
      Value: '"Builder and management image for cloud native systems with S2I, Docker
        in Docker, Operators, HELM, Kubernetes Deployments ..."'
    - Key: org.label-schema.vendor
      Value: '"xrow GmbH"'
    - Key: org.label-schema.license
      Value: '"GPLv2"'
    Name: label
  - Env:
    - Key: HOME
      Value: '"/root"'
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: KUBECONFIG
      Value: '"$HOME/.kube/config"'
    Name: env
  - Env:
    - Key: KUBEFED_VERSION
      Value: 0.1.0-rc6
    Name: env
  - Env:
    - Key: OPERATORSDK_VERSION
      Value: 0.10.0
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: 3.0.2
    Name: env
  - Env:
    - Key: HELM_VERSION2
      Value: 2.16.0
    Name: env
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.23.2
    Name: env
  - Env:
    - Key: OC_VERSION
      Value: 1.23.2
    Name: env
  - Env:
    - Key: S2I_VERSION
      Value: 1.2.0
    Name: env
  - CmdLine:
    - yum install -y epel-release  && yum install -y git gettext ansible openssh-clients
      sshpass yum-utils yamllint  && yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo  &&
      yum install -y docker-ce-cli  && yum install -y buildah  && yum remove -y yum-utils  &&
      yum clean all  && rm -Rf /var/cache/yum
    Name: run
    PrependShell: true
  - CmdLine:
    - DOCKER_COMPOSE_DOWNLOAD_URL="https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-Linux-x86_64"  &&
      curl -sSfLo /bin/docker-compose $DOCKER_COMPOSE_DOWNLOAD_URL  && chmod +x /bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - S2I_DOWNLOAD_URL="https://github.com/openshift/source-to-image/releases/download/v1.1.13/source-to-image-v1.1.13-b54d75d3-linux-amd64.tar.gz"  &&
      curl -sSfL $S2I_DOWNLOAD_URL | tar -xzC /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - TMP=$(mktemp -d)  && curl -sSfL https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      | tar -xz -C $TMP  && mv $TMP/linux-amd64/helm /usr/bin  && chmod +x /usr/bin/helm  &&
      rm -Rf $TMP
    Name: run
    PrependShell: true
  - CmdLine:
    - TMP=$(mktemp -d)  && curl -sSfL https://get.helm.sh/helm-v${HELM_VERSION2}-linux-amd64.tar.gz
      | tar -xz -C $TMP  && mv $TMP/linux-amd64/helm /usr/bin/helm2  && chmod +x /usr/bin/helm2  &&
      rm -Rf $TMP
    Name: run
    PrependShell: true
  - CmdLine:
    - OC_DOWNLOAD_URL="https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz"  &&
      TMP=$(mktemp -d)  && curl -sSfL $OC_DOWNLOAD_URL | tar -xz --strip-components=1
      -C $TMP  && mv $TMP/{oc,kubectl} /usr/bin  && rm -Rf $TMP  && mkdir $(dirname
      $KUBECONFIG)  && update-ca-trust extract
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/bin/operator-sdk -OJL https://github.com/operator-framework/operator-sdk/releases/download/v${OPERATORSDK_VERSION}/operator-sdk-v${OPERATORSDK_VERSION}-x86_64-linux-gnu  &&
      chmod 755 /usr/bin/operator-sdk
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://github.com/kubernetes-sigs/kubefed/releases/download/v${KUBEFED_VERSION}/kubefedctl-${KUBEFED_VERSION}-linux-amd64.tgz   &&
      tar -zxvf kubefedctl-*.tgz   && chmod u+x kubefedctl   && mv kubefedctl /usr/bin
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./root/
    - /
  - CmdLine:
    - chmod 755 /usr/bin/uid_entrypoint &&     chmod 777 -R /root &&     chmod g=u
      /etc/passwd
    Name: run
    PrependShell: true
  - CmdLine:
    - uid_entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: $HOME
  From:
    Image: centos:8
  Name: ""
  Platform: ""
  SourceCode: FROM centos:8
