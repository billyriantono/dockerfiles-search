{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm-alpine",
      "SourceCode": "FROM php:7.1-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Pavel Bezrukov \u003cbezrukov.ps@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JPEGOPTIM_VERSION",
              "Value": "1.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPTIPNG_VERSION",
              "Value": "0.7.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .persistent-deps         mc         icu-dev         libmcrypt-dev         libxml2-dev         zeromq         git         libmemcached         curl         libcurl         ssmtp         freetype-dev         libjpeg-turbo-dev         libmcrypt-dev         libpng-dev         imagemagick-dev         pcre-dev     \u0026\u0026 apk add --no-cache --virtual .build-deps         autoconf         cmake         file         g++         gcc         libc-dev         make         git         pkgconf         re2c         openssl-dev         zeromq-dev         libmemcached-dev         cyrus-sasl-dev         openssl-dev         curl-dev         libtool     \u0026\u0026 docker-php-source extract     \u0026\u0026 docker-php-ext-configure intl --enable-intl     \u0026\u0026 docker-php-ext-configure pcntl --enable-pcntl     \u0026\u0026 docker-php-ext-configure mbstring --enable-mbstring     \u0026\u0026 docker-php-ext-configure soap --enable-soap     \u0026\u0026 docker-php-ext-install         intl         mcrypt         pcntl         mbstring         mysqli         soap         zip     \u0026\u0026 git clone --branch php7 https://github.com/php-memcached-dev/php-memcached/ /usr/src/php/ext/memcached/     \u0026\u0026 docker-php-ext-configure memcached --disable-memcached-sasl     \u0026\u0026 docker-php-ext-install memcached     \u0026\u0026 git clone --branch php7 https://github.com/websupport-sk/pecl-memcache/ /usr/src/php/ext/memcache/     \u0026\u0026 docker-php-ext-configure memcache     \u0026\u0026 docker-php-ext-install memcache     \u0026\u0026 docker-php-ext-configure curl     \u0026\u0026 docker-php-ext-install curl     \u0026\u0026 docker-php-ext-configure opcache --enable-opcache     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-install iconv     \u0026\u0026 docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 pecl install apcu     \u0026\u0026 docker-php-ext-enable apcu     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --filename=composer --install-dir=/usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-dependencies-jpegoptim libjpeg-turbo-dev     \u0026\u0026 mkdir /usr/src/jpegoptim     \u0026\u0026 cd /usr/src/jpegoptim     \u0026\u0026 git clone -b RELEASE.${JPEGOPTIM_VERSION} https://github.com/tjko/jpegoptim.git .     \u0026\u0026 ./configure --prefix=/usr \u0026\u0026 make \u0026\u0026 make strip \u0026\u0026 make install     \u0026\u0026 cd /     \u0026\u0026 apk del .build-dependencies-jpegoptim     \u0026\u0026 rm -rf /usr/src/jpegoptim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/optipng     \u0026\u0026 wget -O - http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-${OPTIPNG_VERSION}/optipng-${OPTIPNG_VERSION}.tar.gz | tar xz -C /usr/src/optipng --strip-components=1     \u0026\u0026 cd /usr/src/optipng     \u0026\u0026 ./configure --prefix=/usr \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 cd /     \u0026\u0026 rm -rf /usr/src/optipng"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./ssmtp/",
            "/etc/ssmtp/"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}