{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "wyveo/nginx-php-fpm:php70",
      "SourceCode": "FROM wyveo/nginx-php-fpm:php70",
      "Platform": "",
      "From": {
        "Image": "wyveo/nginx-php-fpm:php70"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "WEB_ROOT",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y install --no-install-recommends apt-transport-https lsb-release ca-certificates   \u0026\u0026 curl -o /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg   \u0026\u0026 echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/php.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -q -y   acl   bc   bzip2   default-mysql-client   gettext   git   gnupg   libbz2-dev   libgmp-dev   libjpeg-dev   libpng-dev   libpq-dev   make   openssh-server   patch   php7.0-gmp   php7.0-xdebug   rsync   ruby   shellcheck   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 envsubst \"\\$WEB_ROOT\" \u003c /etc/nginx/conf.d/default.conf \u003e /etc/nginx/conf.d/default.conf.tmp   \u0026\u0026 mv /etc/nginx/conf.d/default.conf.tmp /etc/nginx/conf.d/default.conf   \u0026\u0026 mkdir -p $WEB_ROOT   \u0026\u0026 chown -Rf nginx.nginx $WEB_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   \u0026\u0026 echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y google-chrome-stable --no-install-recommends   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o drush https://github.com/drush-ops/drush/releases/download/8.2.3/drush.phar   \u0026\u0026 chmod +x drush   \u0026\u0026 mv drush /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer \u0026\u0026 rm -rf /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"hirak/prestissimo:^0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://drupalconsole.com/installer -L -o drupal.phar   \u0026\u0026 chmod +x drupal.phar   \u0026\u0026 mv drupal.phar /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar   \u0026\u0026 chmod +x phpcs.phar   \u0026\u0026 mv phpcs.phar /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require   drupal/coder   phpcompatibility/php-compatibility   phpmd/phpmd   sebastian/phpcpd   smmccabe/phpdebt   \u0026\u0026 phpcs --config-set installed_paths /composer/vendor/drupal/coder/coder_sniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o readmecheck https://raw.githubusercontent.com/smmccabe/readmecheck/master/readmecheck   \u0026\u0026 chmod +x readmecheck   \u0026\u0026 mv readmecheck /usr/local/bin/readmecheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x -o nodesource_setup.sh   \u0026\u0026 bash nodesource_setup.sh   \u0026\u0026 rm nodesource_setup.sh   \u0026\u0026 apt-get install -y nodejs --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -   \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list   \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y yarn --no-install-recommends   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL http://get.sensiolabs.org/security-checker.phar -o security-checker.phar   \u0026\u0026 chmod +x security-checker.phar   \u0026\u0026 mv security-checker.phar /usr/local/bin/security-checker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/php /usr/local/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}