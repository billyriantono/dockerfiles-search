MetaArgs:
- DefaultValue: bionic
  Key: UBUNTU
  ProvidedValue: null
  Value: bionic
Stages:
- As: installerdeps
  BaseName: ubuntu:${UBUNTU}
  Commands:
  - CmdLine:
    - apt-get update -q &&     DEBIAN_FRONTEND=noninteractive apt-get install -q -y
      --no-install-recommends         ca-certificates         default-jdk         libfontconfig1         libice6         libsm6         libx11-xcb1         libxext6         libxrender1         p7zip         xvfb         curl         xz-utils     &&
      apt-get clean
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:${UBUNTU}
  Name: installerdeps
  Platform: ""
  SourceCode: FROM ubuntu:${UBUNTU} as installerdeps
- As: qtinstalled
  BaseName: installerdeps
  Commands:
  - Key: QT
    Name: arg
    Value: 5.12.0
  - Key: QTM
    Name: arg
    Value: "5.12"
  - Key: QTSHA
    Name: arg
    Value: 5e644f8187718830075d3a563d8865d128d2fcfe5bac7315be104f752b508a7e
  - Key: QTCOMPONENTS
    Name: arg
    Value: gcc_64
  - Key: DELETE
    Name: arg
    Value: '"Docs Examples Tools MaintenanceTool"'
  - Key: QTRUNFILE
    Name: arg
    Value: http://download.qt.io/official_releases/qt/${QTM}/${QT}/qt-opensource-linux-x64-${QT}.run
  - Key: QTBASEFILE
    Name: arg
    Value: http://download.qt.io/official_releases/qt/${QTM}/${QT}/submodules/qtbase-everywhere-src-${QT}.tar.xz
  - Chown: ""
    Name: add
    SourcesAndDest:
    - qt-installer-noninteractive.qs
    - /tmp/qt/script.qs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${QTRUNFILE}
    - /tmp/qt/installer.run
  - CmdLine:
    - curl -sSL ${QTBASEFILE} | tar -xJC /tmp/
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -l /tmp
    Name: run
    PrependShell: true
  - Env:
    - Key: QTM
      Value: $QTM
    Name: env
  - Env:
    - Key: QTSHA
      Value: $QTSHA
    Name: env
  - Env:
    - Key: QTCOMPONENTS
      Value: $QTCOMPONENTS
    Name: env
  - Env:
    - Key: DELETE
      Value: $DELETE
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - set -euo pipefail     && chmod +x /tmp/qt/installer.run     && xvfb-run -e /dev/stderr
      /tmp/qt/installer.run --script /tmp/qt/script.qs --verbose     && rm -rf /tmp/qt     &&
      cd /opt/qt     && rm -rf ${DELETE}
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -l /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -l /opt/qt
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /tmp/qtbase-everywhere-src-${QT} /opt/qt/${QT}/qtbase
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: installerdeps
  Name: qtinstalled
  Platform: ""
  SourceCode: FROM installerdeps as qtinstalled
- BaseName: ubuntu:${UBUNTU}
  Commands:
  - Key: QT
    Name: arg
    Value: 5.12.0
  - Key: QTM
    Name: arg
    Value: "5.12"
  - Key: QTCOMPONENTS
    Name: arg
    Value: gcc_64
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: '"$BUILD_DATE"'
    - Key: org.label-schema.name
      Value: '"qt-build"'
    - Key: org.label-schema.description
      Value: '"A headless Qt $QTM build environment for Ubuntu"'
    - Key: org.label-schema.version
      Value: '"$QT"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - echo "deb [trusted=yes] http://repo.mysql.com/apt/ubuntu/ bionic mysql-8.0"
      >> /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -q &&     DEBIAN_FRONTEND=noninteractive apt-get install -q -y
      --no-install-recommends         locales         build-essential         p7zip         python-magic
      ca-certificates python-pip python-dateutil         curl wget unzip openssl1.0         libfontconfig
      libglib2.0-0 libglu1-mesa         libssl1.0-dev zlib1g-dev libx11-dev libglib2.0-dev
      libglu1-mesa-dev freeglut3-dev mesa-common-dev libz-dev libcups2         mysql-client
      libmysqlclient-dev     && apt-get clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: qtinstalled
    Name: copy
    SourcesAndDest:
    - /opt/qt
    - /opt/qt
  - CmdLine:
    - for COMPONENT in `echo ${QTCOMPONENTS} | tr , ' '`; do echo /opt/qt/${QT}/${COMPONENT}/lib
      >> /etc/ld.so.conf.d/qt-${QT}.conf; done
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8 && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Env:
    - Key: QTDIR
      Value: /opt/qt/${QT}
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/qt/${QT}/gcc_64/bin
    Name: env
  - CmdLine:
    - cd $QTDIR/qtbase/src/plugins/sqldrivers     && qmake -- MYSQL_PREFIX=/usr/local     &&
      make sub-mysql     && cd mysql && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - S3CMD_CURRENT_VERSION=`curl -fs https://api.github.com/repos/s3tools/s3cmd/releases/latest
      | grep tag_name | sed -E 's/.*"v?([0-9\.]+).*/\1/g'`     && mkdir -p /opt     &&
      wget https://github.com/s3tools/s3cmd/releases/download/v${S3CMD_CURRENT_VERSION}/s3cmd-${S3CMD_CURRENT_VERSION}.zip     &&
      unzip s3cmd-${S3CMD_CURRENT_VERSION}.zip -d /opt/     && ln -s $(find /opt/
      -name s3cmd) /usr/bin/s3cmd     && ls /usr/bin/s3cmd
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:${UBUNTU}
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:${UBUNTU}
