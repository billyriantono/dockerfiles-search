MetaArgs: null
Stages:
- BaseName: docker:18
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: '"Artyom Nosov <chip@unixstyle.ru>"'
    Name: label
  - Key: USER
    Name: arg
    Value: ci
  - Key: GROUP
    Name: arg
    Value: ci
  - Key: UID
    Name: arg
    Value: "3000"
  - Key: GID
    Name: arg
    Value: "3000"
  - Key: CI_AGENT_HOME
    Name: arg
    Value: /home/$USER
  - Key: DOCKER_COMPOSE_VERSION
    Name: arg
    Value: 1.22.0
  - Env:
    - Key: CI_AGENT_HOME
      Value: $CI_AGENT_HOME
    Name: env
  - CmdLine:
    - addgroup -g $GID $GROUP  && adduser -D -h "$CI_AGENT_HOME" -u "$UID" -G "$GROUP"
      -s /bin/bash "$USER"  && passwd -u $USER
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache       bash       ca-certificates       curl       git       groff       ncurses       nss       openssh       openjdk8       py-pip       rsync       subversion       wget
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i /etc/ssh/sshd_config         -e 's/#PermitRootLogin.*/PermitRootLogin
      no/'         -e 's/#RSAAuthentication.*/RSAAuthentication yes/'          -e
      's/#PasswordAuthentication.*/PasswordAuthentication no/'         -e 's/#SyslogFacility.*/SyslogFacility
      AUTH/'         -e 's/#LogLevel.*/LogLevel INFO/'     && mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir       awscli       docker-compose==$DOCKER_COMPOSE_VERSION       python-magic       s3cmd       urllib3==1.22
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest  &&
      chmod +x /usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - delgroup ping     && addgroup -g 999 docker     && addgroup $USER docker     &&
      ln -s /usr/local/bin/docker /usr/bin/docker
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"$CI_AGENT_HOME"'
  - Name: workdir
    Path: '"$CI_AGENT_HOME"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: docker:18
  Name: ""
  Platform: ""
  SourceCode: FROM docker:18
