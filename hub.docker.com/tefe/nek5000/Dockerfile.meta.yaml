MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Maintainer: '"Thomas Enzinger <info@thomas-enzinger.de>"'
    Name: maintainer
  - CmdLine:
    - apt-get update &&  apt-get install -f -y                                                      sudo
      curl wget curl git                                                                     nano
      vim                                                                                    build-essential
      cmake gfortran gcc                                                          libopenmpi-dev
      openmpi-bin libcr-dev mpich                                                  libcgal-dev                                                                                 bash
      bash-completion libboost-all-dev software-properties-common                            libx11-dev
      mesa-common-dev libglu1-mesa-dev libxrandr-dev libxi-dev libxt-dev          &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: IMAGE_USER_NAME
      Value: tefe
    Name: env
  - Env:
    - Key: IMAGE_SRC_DIR
      Value: /opt/nek5000
    Name: env
  - Env:
    - Key: NEK_SOURCE_ROOT
      Value: '"${IMAGE_SRC_DIR}"'
    Name: env
  - Env:
    - Key: SOURCE_ROOT
      Value: '"${NEK_SOURCE_ROOT}"'
    Name: env
  - CmdLine:
    - addgroup "${IMAGE_USER_NAME}" && useradd -m --shell /bin/bash -g "${IMAGE_USER_NAME}"
      "${IMAGE_USER_NAME}"    && echo "${IMAGE_USER_NAME} ALL=(ALL) NOPASSWD:ALL"
      >> /etc/sudoers                                              && echo 127.0.1.1
      $(hostname) >> /etc/hosts
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Env:
    - Key: CC
      Value: /usr/bin/mpicc
    Name: env
  - Env:
    - Key: CXX
      Value: /usr/bin/mpic++
    Name: env
  - Env:
    - Key: FC
      Value: /usr/bin/gfortran
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"-I/usr/include/mpi -I${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib/build/include"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: CMAKE_C_COMPILER
      Value: ${CC}
    Name: env
  - Env:
    - Key: CMAKE_CXX_COMPILER
      Value: ${CXX}
    Name: env
  - Env:
    - Key: GSLIBPATH
      Value: '"${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib"'
    Name: env
  - Key: SOURCE_COMMIT
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: NEK5000_GIT_URL
    Name: arg
    Value: null
  - Key: NEK5000_GIT_HASH
    Name: arg
    Value: null
  - Key: NEK5000_GIT_BRANCH
    Name: arg
    Value: null
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - /opt/
  - CmdLine:
    - /opt/load_src && rm -f /opt/load_src                                                                 &&
      echo "export PATH=$PATH:${IMAGE_SRC_DIR}/bin:${NEK_SOURCE_ROOT}/3rd_party/parMETIS/bin"
      >> /root/.bashrc                                       && echo "export PATH=$PATH:${IMAGE_SRC_DIR}/bin:${NEK_SOURCE_ROOT}/3rd_party/parMETIS/bin"
      >> "/home/${IMAGE_USER_NAME}/.bashrc"                  && echo "export OMPI_MCA_btl_vader_single_copy_mechanism=none"
      >> /root/.bashrc                         && echo "export OMPI_MCA_btl_vader_single_copy_mechanism=none"
      >> "/home/${IMAGE_USER_NAME}/.bashrc"    && echo "export NEK_SOURCE_ROOT=${NEK_SOURCE_ROOT}"
      >> /root/.bashrc  && echo "export NEK_SOURCE_ROOT=${NEK_SOURCE_ROOT}" >> /home/${IMAGE_USER_NAME}/.bashrc  &&
      echo "export SOURCE_ROOT=${SOURCE_ROOT}" >> /root/.bashrc  && echo "export SOURCE_ROOT=${SOURCE_ROOT}"
      >> /home/${IMAGE_USER_NAME}/.bashrc  && echo "export CC=${CC}" >> /root/.bashrc  &&
      echo "export CC=${CC}" >> /home/${IMAGE_USER_NAME}/.bashrc  && echo "export
      CXX=${CXX}" >> /root/.bashrc  && echo "export CXX=${CXX}" >> /home/${IMAGE_USER_NAME}/.bashrc  &&
      echo "export FC=${FC}" >> /root/.bashrc  && echo "export FC=${FC}" >> /home/${IMAGE_USER_NAME}/.bashrc  &&
      echo "export CLFLAGS='${CFLAGS} -I${NEK_SOURCE_ROOT}/3rd_party/blasLapack -I${NEK_SOURCE_ROOT}/3rd_party/cvode/include
      -I${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib/build/include -I${NEK_SOURCE_ROOT}/3rd_party/hypre/include
      -I${NEK_SOURCE_ROOT}/3rd_party/parMETIS/include -I${NEK_SOURCE_ROOT}/3rd_party/parRSB/parRSB/build/include'"
      >> /root/.bashrc  && echo "export CLFLAGS='${CFLAGS} -I${NEK_SOURCE_ROOT}/3rd_party/blasLapack
      -I${NEK_SOURCE_ROOT}/3rd_party/cvode/include -I${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib/build/include
      -I${NEK_SOURCE_ROOT}/3rd_party/hypre/include -I${NEK_SOURCE_ROOT}/3rd_party/parMETIS/include
      -I${NEK_SOURCE_ROOT}/3rd_party/parRSB/parRSB/build/include'" >> /home/${IMAGE_USER_NAME}/.bashrc  &&
      echo "export LDFLAGS='${LDFLAGS} -L${NEK_SOURCE_ROOT}/3rd_party/blasLapack -L${NEK_SOURCE_ROOT}/3rd_party/cvode/lib
      -L${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib/build/lib -L${NEK_SOURCE_ROOT}/3rd_party/hypre/lib
      -L${NEK_SOURCE_ROOT}/3rd_party/parMETIS/lib -L${NEK_SOURCE_ROOT}/3rd_party/parRSB/parRSB/build/lib'"
      >> /root/.bashrc  && echo "export LDFLAGS='${LDFLAGS} -L${NEK_SOURCE_ROOT}/3rd_party/blasLapack
      -L${NEK_SOURCE_ROOT}/3rd_party/cvode/lib -L${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib/build/lib  -L${NEK_SOURCE_ROOT}/3rd_party/hypre/lib
      -L${NEK_SOURCE_ROOT}/3rd_party/parMETIS/lib -L${NEK_SOURCE_ROOT}/3rd_party/parRSB/parRSB/build/lib'"
      >> /home/${IMAGE_USER_NAME}/.bashrc  && echo "export CMAKE_C_COMPILER=${CC}"
      >> /root/.bashrc  && echo "export CMAKE_C_COMPILER=${CC}" >> /home/${IMAGE_USER_NAME}/.bashrc  &&
      echo "export CMAKE_CXX_COMPILER=${CXX}" >> /root/.bashrc  && echo "export CMAKE_CXX_COMPILER=${CXX}"
      >> /home/${IMAGE_USER_NAME}/.bashrc  && echo "export GSLIBPATH=${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib"
      >> /root/.bashrc  && echo "export GSLIBPATH=${NEK_SOURCE_ROOT}/3rd_party/gslib/gslib"
      >> /home/${IMAGE_USER_NAME}/.bashrc  && source /root/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${NEK_SOURCE_ROOT}"'
  - CmdLine:
    - /opt/install && rm -f /opt/install
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${NEK_SOURCE_ROOT}/run
  - Name: workdir
    Path: '"${NEK_SOURCE_ROOT}/run"'
  - Name: user
    User: '"${IMAGE_USER_NAME}"'
  - CmdLine:
    - /bin/bash
    - -ci
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
