MetaArgs:
- DefaultValue: "9.0"
  Key: cuda_version
  ProvidedValue: null
  Value: "9.0"
- DefaultValue: "7"
  Key: cudnn_version
  ProvidedValue: null
  Value: "7"
Stages:
- BaseName: nvidia/cuda:9.0-devel-ubuntu16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --allow-downgrades --no-install-recommends     libcudnn7=7.0.5.15-1+cuda9.0     libcudnn7-dev=7.0.5.15-1+cuda9.0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-mark hold libcudnn7 libcudnn7-dev
    Name: run
    PrependShell: true
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends       bzip2       g++       git       graphviz       libgl1-mesa-glx       libhdf5-dev       openmpi-bin       wget       python3       python3-pip       python3-venv       python3-dev       python3-setuptools       python3-tk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     apt-utils git
      curl vim unzip openssh-client wget     build-essential cmake     libopenblas-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends     libjpeg8-dev libtiff5-dev libjasper-dev
      libpng12-dev     libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgtk2.0-dev     liblapacke-dev
      checkinstall
    Name: run
    PrependShell: true
  - Env:
    - Key: NB_USER
      Value: app
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     mkdir -p /src &&     mkdir
      -p /workspace &&     chown $NB_USER /src &&     chown $NB_USER /workspace
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: /workspace
  - CmdLine:
    - pip3 install       sklearn_pandas       tensorflow-gpu==1.5.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install       bcolz       h5py       matplotlib       mkl       nose       notebook       Pillow       pandas       pyyaml       scikit-learn       six       scipy       scikit-image       requests       opencv-python       theano       keras       kaggle
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install      imgaug       numpy      Pillow       cython      h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install ipython
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install "git+https://github.com/philferriere/cocoapi.git#egg=pycocotools&subdirectory=PythonAPI"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "6006"
  - Env:
    - Key: PATH
      Value: '"/home/app/.local/bin:$PATH"'
    Name: env
  - CmdLine:
    - jupyter notebook --port=8888 --ip=0.0.0.0
    Name: cmd
    PrependShell: true
  From:
    Image: nvidia/cuda:9.0-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-devel-ubuntu16.04
