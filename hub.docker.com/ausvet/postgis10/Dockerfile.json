{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_AU.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure locales \u0026\u0026     localedef -i en_AU -c -f UTF-8 en_AU.UTF-8 \u0026\u0026     export LANGUAGE=\"en_AU.UTF-8\" \u0026\u0026     export LANG=\"en_AU.UTF-8\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026     apt-get install -y         software-properties-common         python-software-properties         wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ntp \u0026\u0026     echo \"server 1.sg.pool.ntp.org\" \u003e\u003e /etc/ntp.conf  \u0026\u0026     echo \"server 3.asia.pool.ntp.org\" \u003e\u003e /etc/ntp.conf  \u0026\u0026     echo \"server 2.asia.pool.ntp.org\" \u003e\u003e /etc/ntp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" \u0026\u0026     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y \"deb http://cran.stat.nus.edu.sg/bin/linux/ubuntu xenial/\" \u0026\u0026      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     postgresql-10-postgis-2.4     postgresql-plpython-10     postgresql-plpython3-10     postgresql-contrib     r-base-dev     postgresql-10-plr     libpq-dev     postgresql-server-dev-10     libcairo2-dev     libxt-dev     python-dev     python-pip     python3-dev     python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3-pip  \u0026\u0026     python3 -m pip install  \u0026\u0026     python3 -m pip install --upgrade pip  \u0026\u0026     python3 -m pip install pytest \u0026\u0026     python3 -m pip install -U awscli boto boto3 botocore"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m pip install -U boto boto3 botocore"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3-venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./pip3-requirements.txt",
            "/pip3-requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip3 install -U -r pip3-requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./isikhnas_db_functions.zip",
            "/isikhnas_db_functions.zip"
          ]
        },
        {
          "CmdLine": [
            "pip3 install -U /isikhnas_db_functions.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./installpackages.r",
            "/installpackages.r"
          ]
        },
        {
          "CmdLine": [
            "Rscript /installpackages.r"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_PASSWORD",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_USER",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_DB",
              "Value": "${POSTGRES_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_LOG_FILE",
              "Value": "/var/log/postgresql/postgresql-10-main.log"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${PGDATA} \u0026\u0026     chown -R postgres:postgres ${PGDATA} \u0026\u0026     chmod 777 ${PGDATA} # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "[${PGDATA}]"
          ]
        },
        {
          "CmdLine": [
            "echo ${PGDATA}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./postgis_entrypoint.sh",
            "/postgis_entrypoint.sh"
          ]
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "/postgis_entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "/usr/lib/postgresql/10/bin/postgres",
            "-D",
            "/var/lib/postgresql/data"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}