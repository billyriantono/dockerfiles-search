MetaArgs: null
Stages:
- As: base
  BaseName: buildpack-deps:bionic-scm@sha256:c9bc6df3a3ba8ec14897e7ff1328dca631c460bd3a342895afcb91b09b8aec3f
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/weiji14"'
    Name: label
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Key: NB_USER
    Name: arg
    Value: jovyan
  - Key: NB_UID
    Name: arg
    Value: "1000"
  - Env:
    - Key: NB_USER
      Value: ${NB_USER}
    Name: env
  - Env:
    - Key: NB_UID
      Value: ${NB_UID}
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${NB_USER}
    Name: env
  - CmdLine:
    - adduser --disabled-password     --gecos "Default user"     --uid ${NB_UID}     ${NB_USER}
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: ${HOME}/.conda
    Name: env
  - Env:
    - Key: NB_PYTHON_PREFIX
      Value: ${CONDA_DIR}
    Name: env
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.7.10
    Name: env
  - CmdLine:
    - cd /tmp &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "1c945f2b3335c7b2b15130b1b2dc5cf4 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda
      config --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config
      --system --set show_channel_urls true &&     $CONDA_DIR/bin/conda config --system
      --set pip_interop_enabled true &&     $CONDA_DIR/bin/conda clean --all --quiet
      --yes &&     $CONDA_DIR/bin/conda init --verbose
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - chown -R ${NB_UID} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${NB_USER}
  - Name: workdir
    Path: ${HOME}
  - Name: shell
    Shell:
    - /bin/bash
    - -ic
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - environment.yml
    - ${HOME}
  - CmdLine:
    - conda env update -n base -f environment.yml &&     conda clean --all --yes &&     conda
      list -n base
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Pipfile*
    - ${HOME}/
  - CmdLine:
    - conda activate base &&     export LD_LIBRARY_PATH=${CONDA_PREFIX}/lib &&     pipenv
      --python ${CONDA_PREFIX}/bin/python --site-packages &&     pipenv install --dev
      --deploy &&     rm --recursive ${HOME}/.cache/pip* &&     pipenv graph
    Name: run
    PrependShell: true
  - CmdLine:
    - conda activate base &&     pipenv run python -m ipykernel install --user --name
      deepicedrain &&     pipenv run jupyter kernelspec list --json
    Name: run
    PrependShell: true
  - Chown: 1000:1000
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${HOME}
  From:
    Image: buildpack-deps:bionic-scm@sha256:c9bc6df3a3ba8ec14897e7ff1328dca631c460bd3a342895afcb91b09b8aec3f
  Name: base
  Platform: ""
  SourceCode: FROM buildpack-deps:bionic-scm@sha256:c9bc6df3a3ba8ec14897e7ff1328dca631c460bd3a342895afcb91b09b8aec3f
    AS base
- As: app
  BaseName: base
  Commands:
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - echo -e '#!/bin/bash -i\nset -e\nconda activate\npipenv run "$@"' > .entrypoint.sh
      &&     chmod +x .entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./.entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - lab
    - --ip
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: base
  Name: app
  Platform: ""
  SourceCode: FROM base AS app
