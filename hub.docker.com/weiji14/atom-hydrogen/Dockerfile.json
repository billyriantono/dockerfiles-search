{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"https://github.com/weiji14\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VER",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026 apt-get install -y --no-install-recommends     git     gconf2     gconf-service     libgtk2.0-0     libnotify4     libxtst6     libnss3     python     gvfs-bin     xdg-utils     libcap2     wget     ca-certificates     libx11-xcb1     libxss1     libasound2     libxkbfile1     build-essential     python3-dev     python3-pip     \u0026\u0026 if [ \"${VER}\" = \"stable\" ];            then wget --no-verbose https://atom.io/download/deb -O atom-amd64.deb;        elif [ \"${VER}\" = \"beta\" ];            then wget --no-verbose https://atom.io/download/deb?channel=beta -O atom-amd64.deb;        fi     \u0026\u0026 dpkg -i atom-amd64.deb     \u0026\u0026 rm -f atom-amd64.deb     \u0026\u0026 pip3 install setuptools wheel     \u0026\u0026 pip3 install jupyter     \u0026\u0026 apt-get remove -y     wget     build-essential     python3-dev     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d /home/atom -m atom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "atom"
        },
        {
          "CmdLine": [
            "mkdir -p /home/atom/.atom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 775 /home/atom/.atom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R `whoami` /home/atom/.atom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"${VER}\" = \"stable\" ];         then apm install hydrogen;     elif [ \"${VER}\" = \"beta\" ];         then apm-beta install hydrogen;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config --no-browser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m ipykernel install --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter kernelspec list --json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/atom"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-f"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}