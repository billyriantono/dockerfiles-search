MetaArgs: null
Stages:
- BaseName: thies88/base-alpine-mono
  Commands:
  - Maintainer: thies88
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: LIDARR_RELEASE
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"Alpine-base-mono:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"Thies88"'
    Name: label
  - Key: LIDARR_BRANCH
    Name: arg
    Value: '"master"'
  - Env:
    - Key: XDG_CONFIG_HOME
      Value: '"/config/xdg"'
    Name: env
  - CmdLine:
    - "apk update && echo \"**** install packages ****\" && apk add --no-cache tar
      curl && echo \"**** install lidarr packages ****\" && apk add --no-cache jq
      libmediainfo chromaprint@testing && echo \"**** install lidarr ****\" && mkdir
      -p /app/lidarr &&  if [ -z ${LIDARR_RELEASE+x} ]; then \tLIDARR_RELEASE=$(curl
      -sL \"https://services.lidarr.audio/v1/update/${LIDARR_BRANCH}/changes?os=linux\"
      \t| jq -r '.[0].version');  fi &&  lidarr_url=$(curl -sL \"https://services.lidarr.audio/v1/update/${LIDARR_BRANCH}/changes?os=linux\"
      \t| jq -r \"first(.[] | select(.version == \\\"${LIDARR_RELEASE}\\\")) | .url\")
      &&  curl -o  /tmp/lidarr.tar.gz -L \t\"${lidarr_url}\" &&  tar ixzf  /tmp/lidarr.tar.gz
      -C \t/app/lidarr --strip-components=1 &&  echo \"**** clean up ****\" &&  apk
      del tar curl &&  rm -rf \t/tmp/* \t/var/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /root
    - /
  - Name: expose
    Ports:
    - "8686"
  - Name: volume
    Volumes:
    - /config
    - /downloads
    - /music
  From:
    Image: thies88/base-alpine-mono
  Name: ""
  Platform: ""
  SourceCode: FROM thies88/base-alpine-mono
