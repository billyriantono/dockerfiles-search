{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "thies88/base-alpine-mono",
      "SourceCode": "FROM thies88/base-alpine-mono",
      "Platform": "",
      "From": {
        "Image": "thies88/base-alpine-mono"
      },
      "Commands": [
        {
          "Maintainer": "thies88",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "LIDARR_RELEASE",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Alpine-base-mono:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Thies88\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "LIDARR_BRANCH",
          "Name": "arg",
          "Value": "\"master\""
        },
        {
          "Env": [
            {
              "Key": "XDG_CONFIG_HOME",
              "Value": "\"/config/xdg\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 echo \"**** install packages ****\" \u0026\u0026 apk add --no-cache tar curl \u0026\u0026 echo \"**** install lidarr packages ****\" \u0026\u0026 apk add --no-cache jq libmediainfo chromaprint@testing \u0026\u0026 echo \"**** install lidarr ****\" \u0026\u0026 mkdir -p /app/lidarr \u0026\u0026  if [ -z ${LIDARR_RELEASE+x} ]; then \tLIDARR_RELEASE=$(curl -sL \"https://services.lidarr.audio/v1/update/${LIDARR_BRANCH}/changes?os=linux\" \t| jq -r '.[0].version');  fi \u0026\u0026  lidarr_url=$(curl -sL \"https://services.lidarr.audio/v1/update/${LIDARR_BRANCH}/changes?os=linux\" \t| jq -r \"first(.[] | select(.version == \\\"${LIDARR_RELEASE}\\\")) | .url\") \u0026\u0026  curl -o  /tmp/lidarr.tar.gz -L \t\"${lidarr_url}\" \u0026\u0026  tar ixzf  /tmp/lidarr.tar.gz -C \t/app/lidarr --strip-components=1 \u0026\u0026  echo \"**** clean up ****\" \u0026\u0026  apk del tar curl \u0026\u0026  rm -rf \t/tmp/* \t/var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/root",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8686"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads",
            "/music"
          ]
        }
      ]
    }
  ]
}