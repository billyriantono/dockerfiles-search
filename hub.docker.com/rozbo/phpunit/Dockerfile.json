{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-cli",
      "SourceCode": "FROM php:7.3-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.3-cli"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libjpeg-dev     libpng-dev     zlib1g-dev     libzip-dev     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libsasl2-dev     libmemcached-dev     libicu-dev     libgmp3-dev     libzip4     libpcre3     libpcre3-dev     libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y openssh-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) iconv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install zip \u0026\u0026 docker-php-ext-enable zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install swoole-4.3.1 \u0026\u0026 docker-php-ext-enable swoole"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install sockets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpq-dev     \u0026\u0026 docker-php-ext-install pdo pdo_pgsql pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug     \u0026\u0026 docker-php-ext-enable xdebug --ini-name 99-docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'memory_limit = 512M' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-memlimit.ini;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -f -L -o /tmp/installer.php 'https://getcomposer.org/installer'     \u0026\u0026php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer     \u0026\u0026composer --ansi --version --no-interaction"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"squizlabs/php_codesniffer=*\" -vvv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/code/vendor/bin:/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "php -m"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove --purge -y software-properties-common \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     echo -n \u003e /var/lib/apt/extended_states \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /usr/share/man/?? \u0026\u0026     rm -rf /usr/share/man/??_*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}