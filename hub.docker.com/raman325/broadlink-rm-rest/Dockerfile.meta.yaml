MetaArgs: null
Stages:
- BaseName: python:3-alpine
  Commands:
  - Name: volume
    Volumes:
    - app/data
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /
  - CmdLine:
    - cd  && ls
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps build-base     && pip3 install -r requirements.txt     &&
      runDeps="$(         scanelf --needed --nobanner --recursive /usr/local                 |
      awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'                 | sort -u                 |
      xargs -r apk info --installed                 | sort -u     )"     && apk add
      --virtual .rundeps $runDeps     && apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del build-base &&             rm -rf /usr/share/locale/* &&             rm
      -rf /var/cache/debconf/*-old &&             rm -rf /var/lib/apt/lists/* /var/lib/dpkg   &&             rm
      -rf /usr/share/doc/* &&             rm -rf /usr/share/man/?? &&             rm
      -rf /usr/share/man/??_*
    Name: run
    PrependShell: true
  - Env:
    - Key: HOST
      Value: '"0.0.0.0"'
    Name: env
  - Env:
    - Key: PORT
      Value: '"8000"'
    Name: env
  - Env:
    - Key: BROADLINK_STATUS_TIMEOUT
      Value: '"1"'
    Name: env
  - Env:
    - Key: BROADLINK_DISCOVERY_TIMEOUT
      Value: '"5"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app
    - /app
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - $PORT
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /app
  - CmdLine:
    - chmod
    - +x
    - /app/docker-entrypoint.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - sh
    - /app/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:3-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-alpine
