{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "atlassian/default-image",
      "SourceCode": "FROM atlassian/default-image",
      "Platform": "",
      "From": {
        "Image": "atlassian/default-image"
      },
      "Commands": [
        {
          "Maintainer": "\"Intelerad Medical Systems\"",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_COMMIT",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DOCKERFILE_PATH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_TYPE",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "TERM",
              "Value": "dumb"
            },
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            },
            {
              "Key": "FIREFOX_VERSION",
              "Value": "59.0.2"
            },
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            },
            {
              "Key": "SCREEN_WIDTH",
              "Value": "1360"
            },
            {
              "Key": "SCREEN_HEIGHT",
              "Value": "1020"
            },
            {
              "Key": "SCREEN_DEPTH",
              "Value": "24"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get -q update \u0026\u0026  apt-get install -qy --force-yes xvfb fontconfig bzip2 curl     libxss1 libappindicator1 libindicator7 libpango1.0-0 fonts-liberation xdg-utils gconf-service   \u0026\u0026  apt-get clean \u0026\u0026  rm -rf /var/lib/apt/lists/* \u0026\u0026  rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2 | tar xjfO - phantomjs-${PHANTOMJS_VERSION}-linux-x86_64/bin/phantomjs \u003e /usr/bin/phantomjs \u0026\u0026 chmod +x /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/${FIREFOX_VERSION}/linux-x86_64/en-US/firefox-${FIREFOX_VERSION}.tar.bz2 \u003e /tmp/firefox-${FIREFOX_VERSION}.tar.bz2 \u0026\u0026 mkdir /opt/firefox-${FIREFOX_VERSION} \u0026\u0026 tar xjf /tmp/firefox-${FIREFOX_VERSION}.tar.bz2 -C /opt/firefox-${FIREFOX_VERSION} \u0026\u0026 rm /tmp/firefox-${FIREFOX_VERSION}.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '#!/bin/bash' \u003e /usr/bin/firefox \u0026\u0026    echo 'export $(dbus-launch) \u0026\u0026 set | grep -i dbus \u0026\u0026 exec xvfb-run -a -s \"-screen 0 ${SCREEN_WIDTH}x${SCREEN_HEIGHT}x${SCREEN_DEPTH} -ac +extension RANDR\" /opt/firefox-${FIREFOX_VERSION}/firefox/firefox \"$@\"' \u003e\u003e /usr/bin/firefox \u0026\u0026    chmod +x /usr/bin/firefox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /opt/google/chrome/google-chrome /opt/google/chrome/google-chrome.orig \u0026\u0026    echo '#!/bin/bash' \u003e /opt/google/chrome/google-chrome \u0026\u0026    echo 'exec xvfb-run -a -s \"-screen 0 ${SCREEN_WIDTH}x${SCREEN_HEIGHT}x${SCREEN_DEPTH} -ac +extension RANDR\" /opt/google/chrome/google-chrome.orig --no-sandbox \"$@\"' \u003e\u003e /opt/google/chrome/google-chrome \u0026\u0026    chmod +x /opt/google/chrome/google-chrome"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.docker.dockerfile",
              "Value": "\"$DOCKERFILE_PATH/Dockerfile\""
            },
            {
              "Key": "org.label-schema.license",
              "Value": "\"GPLv2\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://bitbucket.org/double16/bitbucket-pipeline-browsers\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$SOURCE_COMMIT"
            },
            {
              "Key": "org.label-schema.vcs-type",
              "Value": "\"$SOURCE_TYPE\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://bitbucket.org/double16/bitbucket-pipeline-browsers.git\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v9.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source $NVM_DIR/nvm.sh \u0026\u0026 nvm install $NODE_VERSION \u0026\u0026 nvm use --delete-prefix $NODE_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/versions/node/$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g protractor@5.4.2 jasmine@2.8.0 jasmine-spec-reporter@4.2.1 \u0026\u0026 webdriver-manager update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install github-release-notes -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:mc3man/trusty-media \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y zip ffmpeg python-pip \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade awscli==1.16.117 s3cmd==2.0.1 python-magic"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/chrome_drivers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://chromedriver.storage.googleapis.com/75.0.3770.140/chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/chrome_drivers/v75"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip chromedriver_linux64.zip -d /tmp/chrome_drivers/v75/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://chromedriver.storage.googleapis.com/77.0.3865.40/chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/chrome_drivers/v77"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip chromedriver_linux64.zip -d /tmp/chrome_drivers/v77/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://chromedriver.storage.googleapis.com/78.0.3904.105/chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/chrome_drivers/v78"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip chromedriver_linux64.zip -d /tmp/chrome_drivers/v78/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://chromedriver.storage.googleapis.com/79.0.3945.36/chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/chrome_drivers/v79"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip chromedriver_linux64.zip -d /tmp/chrome_drivers/v79/"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}