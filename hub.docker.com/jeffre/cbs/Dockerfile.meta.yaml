MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Key: UID
    Name: arg
    Value: '"400"'
  - Key: GID
    Name: arg
    Value: '"400"'
  - Key: APP_HOME
    Name: arg
    Value: null
  - Key: SOURCE
    Name: arg
    Value: '"${SOURCE:-http://ahsay-dn.ahsay.com/v8/83030/cbs-nix.tar.gz}"'
  - Env:
    - Key: APP_HOME
      Value: '"${APP_HOME:-/cbs}"'
    - Key: DEFAULT_FILES
      Value: '"/bootstrap/defaults"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:${APP_HOME}/bin:/bootstrap"'
    - Key: CATALINA_PID
      Value: '"${APP_HOME}/cbs.pid"'
    Name: env
  - Name: workdir
    Path: '"${APP_HOME}"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bootstrap/
    - /bootstrap
  - CmdLine:
    - groupadd --gid "${GID}" ahsay   && useradd --uid "${UID}" --gid "${GID}" --no-create-home
      "ahsay"   && test -d "${DEFAULT_FILES}/conf" || mkdir -p "${DEFAULT_FILES}/conf"   &&
      test -d "${DEFAULT_FILES}/download" || mkdir -p "${DEFAULT_FILES}/download"   &&
      test -d "${APP_HOME}/conf" || mkdir -p "${APP_HOME}/conf"   && test -d "${APP_HOME}/download"
      || mkdir -p "${APP_HOME}/download"   && test -d "${APP_HOME}/logs" || mkdir
      -p "${APP_HOME}/logs"   && test -d "${APP_HOME}/system" || mkdir -p "${APP_HOME}/system"   &&
      test -d "${APP_HOME}/user" || mkdir -p "${APP_HOME}/user"   && chown -R ahsay:ahsay
      "." "/bootstrap" "${DEFAULT_FILES}"   && su ahsay -c '     curl -fsSL "'"${SOURCE}"'"     |
      tar       --anchored       --exclude="bin/FbdX64"       --exclude="bin/FbdX86"       --exclude="bin/SosX64"       --exclude="bin/cbs-bsd"       --exclude="bin/cbs-openbsd"       --exclude="bin/cbs-systemd"       --exclude="bin/cbs-sysv"       --exclude="icons"       --exclude="java-linux-x64/lib/amd64/libjfxwebkit.so"       --exclude="java-linux-x64/lib/fonts/ipam.ttf"       --exclude="java-linux-x64/lib/fonts/uming.ttc"       --exclude="java-linux-x64/lib/fonts/UnDotum.ttf"       --exclude="java-linux-x64/lib/fonts/VL-Gothic-Regular.ttf"       --exclude="java-linux-x64/lib/ext/jfxrt.jar"       --exclude="java-linux-x86/lib/i386/libjfxwebkit.so"       --exclude="java-linux-x86/lib/fonts/ipam.ttf"       --exclude="java-linux-x86/lib/fonts/uming.ttc"       --exclude="java-linux-x86/lib/fonts/UnDotum.ttf"       --exclude="java-linux-x86/lib/fonts/VL-Gothic-Regular.ttf"       --exclude="java-linux-x86/lib/ext/jfxrt.jar"       --exclude="lib/FbdX64"       --exclude="lib/FbdX86"       --exclude="lib/SosX64"       --exclude="licenses"       --exclude="temp"       --exclude="termsofuse"       --exclude="tomcat/bin/*.bat"       -xzf
      -   '   && sed -i "conf/server.xml"     -e 's|protocols="TLSv1+TLSv1.1+TLSv1.2"|protocols="SSLv2Hello+TLSv1+TLSv1.1+TLSv1.2"|'   &&
      mv "./conf/"* "${DEFAULT_FILES}/conf"   && mv "./download/"* "${DEFAULT_FILES}/download"   &&
      setcap cap_net_bind_service=+ep java-linux-x64/bin/java   && setcap cap_net_bind_service=+ep
      java-linux-x86/bin/java   && sharedir=$(find java-*/lib -name "libjli.so" |
      awk '{print substr($0, 0, length($0)-10)}')   && echo "$sharedir" > /etc/ld.so.conf.d/java-libjli.conf   &&
      ldconfig -v
    Name: run
    PrependShell: true
  - Name: user
    User: ahsay
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
