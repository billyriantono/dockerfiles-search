{
  "MetaArgs": [
    {
      "Key": "UBUNTU_VERSION",
      "DefaultValue": "18.04",
      "ProvidedValue": null,
      "Value": "18.04"
    },
    {
      "Key": "ARCH",
      "DefaultValue": "",
      "ProvidedValue": null,
      "Value": ""
    },
    {
      "Key": "CUDA",
      "DefaultValue": "10.1",
      "ProvidedValue": null,
      "Value": "10.1"
    }
  ],
  "Stages": [
    {
      "Name": "base",
      "BaseName": "nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION}",
      "SourceCode": "FROM nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION}"
      },
      "Commands": [
        {
          "Key": "ARCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "CUDA",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "CUDNN",
          "Name": "arg",
          "Value": "7.6.2.24-1"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas10         libcublas-dev         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "[ ${ARCH} = ppc64le ] || (apt-get update \u0026\u0026         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         \u0026\u0026 apt-get clean         \u0026\u0026 rm -rf /var/lib/apt/lists/*)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     \u0026\u0026 echo \"/usr/local/cuda/lib64/stubs\" \u003e /etc/ld.so.conf.d/z-cuda-stubs.conf     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jupyter Project \u003cjupyter@googlegroups.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "NB_USER",
          "Name": "arg",
          "Value": "\"jovyan\""
        },
        {
          "Key": "NB_UID",
          "Name": "arg",
          "Value": "\"1000\""
        },
        {
          "Key": "NB_GID",
          "Name": "arg",
          "Value": "\"100\""
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -yq dist-upgrade  \u0026\u0026 apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     fonts-liberation  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            },
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "NB_USER",
              "Value": "$NB_USER"
            },
            {
              "Key": "NB_UID",
              "Value": "$NB_UID"
            },
            {
              "Key": "NB_GID",
              "Value": "$NB_GID"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            },
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-permissions",
            "/usr/local/bin/fix-permissions"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/fix-permissions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"auth requisite pam_deny.so\" \u003e\u003e /etc/pam.d/su \u0026\u0026     sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers \u0026\u0026     sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers \u0026\u0026     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     chown $NB_USER:$NB_GID $CONDA_DIR \u0026\u0026     chmod g+w /etc/passwd \u0026\u0026     fix-permissions $HOME \u0026\u0026     fix-permissions \"$(dirname $CONDA_DIR)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/work \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_VERSION",
              "Value": "4.6.14"
            },
            {
              "Key": "CONDA_VERSION",
              "Value": "4.7.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     echo \"718259965f234088d785cad1fbd7de03 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \u0026\u0026     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     echo \"conda ${CONDA_VERSION}\" \u003e\u003e $CONDA_DIR/conda-meta/pinned \u0026\u0026     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \u0026\u0026     $CONDA_DIR/bin/conda config --system --set auto_update_conda false \u0026\u0026     $CONDA_DIR/bin/conda config --system --set show_channel_urls true \u0026\u0026     $CONDA_DIR/bin/conda install --quiet --yes conda \u0026\u0026     $CONDA_DIR/bin/conda update --all --quiet --yes \u0026\u0026     conda list python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' \u003e\u003e $CONDA_DIR/conda-meta/pinned \u0026\u0026     conda clean --all -f -y \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes 'tini=0.18.0' \u0026\u0026     conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 \u003e\u003e $CONDA_DIR/conda-meta/pinned \u0026\u0026     conda clean --all -f -y \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     'notebook=6.0.0'     'jupyterhub=1.0.0'     'jupyterlab=1.0.4' \u0026\u0026     conda clean --all -f -y \u0026\u0026     npm cache clean --force \u0026\u0026     jupyter notebook --generate-config \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "-g",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-notebook.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-singleuser.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/etc/jupyter/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/start-notebook.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/start-singleuser.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "fix-permissions /etc/jupyter/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends     build-essential     emacs     git     inkscape     jed     libsm6     libxext-dev     libxrender1     lmodern     netcat     pandoc     python-dev     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     tzdata     unzip     nano     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends ffmpeg \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     'conda-forge::blas=*=openblas'     'ipywidgets=7.5*'     'pandas=0.24*'     'numexpr=2.6*'     'matplotlib-base=3.1.*'     'scipy=1.2*'     'seaborn=0.9*'     'scikit-learn=0.20*'     'scikit-image=0.14*'     'sympy=1.3*'     'cython=0.29*'     'patsy=0.5*'     'statsmodels=0.9*'     'cloudpickle=0.8*'     'dill=0.2*'     'dask=1.1.*'     'numba=0.42*'     'bokeh=1.0*'     'sqlalchemy=1.3*'     'hdf5=1.10*'     'h5py=2.9*'     'vincent=0.4.*'     'beautifulsoup4=4.7.*'     'protobuf=3.7.*'     'xlrd'  \u0026\u0026     conda clean --all -f -y \u0026\u0026     jupyter nbextension enable --py widgetsnbextension --sys-prefix \u0026\u0026     jupyter labextension install @jupyter-widgets/jupyterlab-manager@^1.0.1 --no-build \u0026\u0026     jupyter labextension install jupyterlab_bokeh@1.0.0 --no-build \u0026\u0026     jupyter lab build --dev-build=False \u0026\u0026     npm cache clean --force \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     rm -rf /home/$NB_USER/.node-gyp \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/PAIR-code/facets.git \u0026\u0026     cd facets \u0026\u0026     jupyter nbextension install facets-dist/ --sys-prefix \u0026\u0026     cd \u0026\u0026     rm -rf /tmp/facets \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        }
      ]
    }
  ]
}