MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Chip Wolf <hello@chipwolf.uk>
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y         zsh git tmux vim curl sudo
      exuberant-ctags make build-essential         libssl-dev zlib1g-dev libbz2-dev
      libreadline-dev libsqlite3-dev         wget curl llvm libncurses5-dev libncursesw5-dev
      xz-utils libffi-dev         liblzma-dev gnupg
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: chip
    Name: env
  - Env:
    - Key: DIRPATH
      Value: /home/$USER
    Name: env
  - Env:
    - Key: HOME
      Value: $DIRPATH
    Name: env
  - CmdLine:
    - useradd $USER     && usermod -aG sudo $USER     && usermod -s /bin/zsh $USER     &&
      mkdir $DIRPATH
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$USER ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/00-$USER
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DIRPATH
  - CmdLine:
    - chown -R $USER:$USER $DIRPATH
    Name: run
    PrependShell: true
  - Name: user
    User: chip
  - CmdLine:
    - git clone --recursive git://github.com/ChipWolf/etc.git $DIRPATH/.etc
    Name: run
    PrependShell: true
  - CmdLine:
    - $DIRPATH/.etc/link.sh/link.sh -u $DIRPATH/.etc/.link.conf -b     && $DIRPATH/.etc/link.sh/link.sh
      -u $DIRPATH/.etc/.link.conf -wf     && sed -i "s/#{loadavg}.*$/#{loadavg} \'/g"
      $DIRPATH/.tmux.conf.local     && sed -i "s/#(\$HOME\/.etc\/scripts\/spotinfo.sh
      ) | //" $DIRPATH/.tmux.conf.local     && rm -rf $DIRPATH/.etc.bak
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - 00-bullettrain.zsh
    - $DIRPATH/.zsh/zsh-os-conf/local-pre/00-bullettrain.zsh
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -     && sudo
      apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://github.com/yyuu/pyenv.git $DIRPATH/.pyenv     && git clone https://github.com/yyuu/pyenv-virtualenv.git
      $DIRPATH/.pyenv/plugins/pyenv-virtualenv     && echo "eval \"\$(pyenv init -)\""
      >> $DIRPATH/.zshrc     && echo "eval \"\$(pyenv virtualenv-init -)\"" >> $DIRPATH/.zshrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: $DIRPATH/.pyenv
    Name: env
  - Env:
    - Key: PATH
      Value: $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
    Name: env
  - CmdLine:
    - sudo apt-get install -y libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv install 2.7.15     && pyenv install 3.7.1     && pyenv install pypy2.7-6.0.0     &&
      pyenv install pypy3.5-6.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global 3.7.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip tox
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo npm install -g try-thread-sleep     && sudo npm install -g serverless --ignore-scripts
      spawn-sync
    Name: run
    PrependShell: true
  - CmdLine:
    - zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
