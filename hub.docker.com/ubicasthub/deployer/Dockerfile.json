{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Nicolas Karolak \u003cnicolas.karolak@ubicast.eu\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "VENV",
              "Value": "/usr/local/pyvenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${VENV}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add         gcc         libc-dev         libffi-dev         openssl-dev         python3-dev         unzip         wget     \u0026\u0026     python3 -m venv ${VENV} \u0026\u0026     pip install --upgrade pip wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.12.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_URL",
              "Value": "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O /tmp/terraform.zip ${TERRAFORM_URL} \u0026\u0026     unzip /tmp/terraform.zip -d /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PACKER_VERSION",
              "Value": "1.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKER_URL",
              "Value": "https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O /tmp/packer.zip ${PACKER_URL} \u0026\u0026     unzip /tmp/packer.zip -d /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install ansible==${ANSIBLE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Nicolas Karolak \u003cnicolas.karolak@ubicast.eu\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "VENV",
              "Value": "/usr/local/pyvenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${VENV}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add     bash     git     make     openssh-client     python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "${VENV}",
            "${VENV}"
          ]
        }
      ]
    }
  ]
}