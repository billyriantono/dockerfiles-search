MetaArgs: null
Stages:
- BaseName: suckowbiz/base-av
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Tobias Suckow <tobias@suckow.biz>"'
    Name: label
  - Env:
    - Key: VERSION_GO
      Value: '"1.13.3"'
    - Key: VERSION_GOLAND
      Value: '"2019.2.5"'
    - Key: VERSION_GOLANGCI_LINT
      Value: '"1.21.0"'
    Name: env
  - CmdLine:
    - apt-get install --quiet --quiet --yes --no-install-recommends     bash-completion     build-essential     chromium-browser     docker.io     git     ifupdown2     libxtst6     libxtst-dev     libxslt1.1     man     openjfx     ssh     zip  &&
      apt-get clean --quiet  && apt-get autoremove --quiet  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - context
    - /
  - CmdLine:
    - curl     --fail     --location     --show-error     "https://dl.google.com/go/go${VERSION_GO}.linux-amd64.tar.gz"
      | tar --directory /usr/local --extract --gzip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/local/go/bin"'
    Name: env
  - Name: workdir
    Path: /root/go/src/hello
  - CmdLine:
    - go build   && ./hello > hello.actual   && diff hello.actual hello.expected   &&
      test "$?" = "0" || (echo "Go installation seems broken"; exit 1)   && go clean
      -i
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - curl     --fail     --location     --remote-name     --show-error     "https://download.jetbrains.com/go/goland-${VERSION_GOLAND}.tar.gz{,.sha256}"  &&
      sha256sum --check "goland-${VERSION_GOLAND}.tar.gz.sha256" | grep "OK"  && tar
      --extract --file "goland-${VERSION_GOLAND}.tar.gz"  && rm --force "goland-${VERSION_GOLAND}.tar.gz"
      "goland-${VERSION_GOLAND}.tar.gz.sha256"  && mv GoLand-* goland  && sed --in-place
      "s/.*idea.config.path=.*/idea.config.path=\~\/\.GoLand\/config\//" goland/bin/idea.properties  &&
      sed --in-place "s/.*idea.system.path=.*/idea.system.path=\~\/\.GoLand\/system\//"
      goland/bin/idea.properties
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/opt/goland/bin"'
    Name: env
  - CmdLine:
    - curl     --fail     --location     --show-error     https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash     --output
      /git-completion.bash   && chmod +x /git-completion.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/posener/complete/gocomplete  && GOBIN=/usr/local/bin go
      install github.com/posener/complete/gocomplete  && echo "complete -C gocomplete
      go" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/goimports  && GOBIN=/usr/local/bin go install
      golang.org/x/tools/cmd/goimports
    Name: run
    PrependShell: true
  - CmdLine:
    - curl     --fail     --location     --remote-name     --show-error     https://github.com/golangci/golangci-lint/releases/download/v${VERSION_GOLANGCI_LINT}/golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386.tar.gz   &&
      tar --extract --file golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386.tar.gz   &&
      chmod +x golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386/golangci-lint   &&
      mv golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386/golangci-lint /usr/local/bin/golangci-lint   &&
      rm --force --recursive golangci-lint-*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /etc/skel
  - CmdLine:
    - mkdir --parent /volume/gitconfig   && chmod 777 /volume/gitconfig
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: '"/volume/go"'
    Name: env
  - Env:
    - Key: GOROOT
      Value: '"/usr/local/go"'
    - Key: GOBIN
      Value: '"${GOPATH}/bin"'
    - Key: PATH
      Value: '"${PATH}:${GOPATH}/bin"'
    - Key: VOL_GIT_CONF
      Value: '"/volume/gitconfig"'
    - Key: VOL_GO
      Value: '"${GOPATH}"'
    - Key: VOL_GOLAND_CONF
      Value: '"/volume/.GoLand"'
    - Key: VOL_JAVA_CONF
      Value: '"/volume/.java"'
    - Key: VOL_SSH
      Value: '"/volume/.ssh"'
    Name: env
  - CmdLine:
    - for volume in "${VOL_GIT_CONF}/.gitconfig" "${VOL_GO}" "${VOL_GOLAND_CONF}"
      "${VOL_JAVA_CONF}" "${VOL_SSH}"; do ln --symbolic "${volume}"; done
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${VOL_GIT_CONF}
    - ${VOL_GO}
    - ${VOL_GOLAND_CONF}
    - ${VOL_JAVA_CONF}
    - ${VOL_SSH}
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Name: expose
    Ports:
    - "3999"
  - Env:
    - Key: ENTRYPOINT_GROUPS
      Value: '"audio,video,docker,sudo"'
    - Key: ENTRYPOINT_WORKDIR
      Value: '"${VOL_GO}"'
    Name: env
  - CmdLine:
    - /entrypoint.sh
    - goland.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: suckowbiz/base-av
  Name: ""
  Platform: ""
  SourceCode: FROM suckowbiz/base-av
