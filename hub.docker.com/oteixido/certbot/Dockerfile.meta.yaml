MetaArgs:
- DefaultValue: null
  Key: TARGET_ARCH
  ProvidedValue: null
  Value: null
Stages:
- BaseName: ${TARGET_ARCH}/python:2-alpine3.10
  Commands:
  - Key: QEMU_ARCH
    Name: arg
    Value: null
  - Env:
    - Key: QEMU_ARCH
      Value: ${QEMU_ARCH}
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - qemu-${QEMU_ARCH}-static
    - /usr/bin/
  - Key: CERTBOT_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: CERTBOT_VERSION
      Value: ${CERTBOT_VERSION}
    Name: env
  - CmdLine:
    - certbot
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - /etc/letsencrypt
    - /var/lib/letsencrypt
  - Name: workdir
    Path: /opt/certbot
  - CmdLine:
    - mkdir -p src  && wget -O certbot-${CERTBOT_VERSION}.tar.gz https://github.com/certbot/certbot/archive/v${CERTBOT_VERSION}.tar.gz  &&
      tar xf certbot-${CERTBOT_VERSION}.tar.gz  && cp certbot-${CERTBOT_VERSION}/CHANGELOG.md
      certbot-${CERTBOT_VERSION}/README.rst certbot-${CERTBOT_VERSION}/setup.py src/  &&
      cp certbot-${CERTBOT_VERSION}/letsencrypt-auto-source/pieces/dependency-requirements.txt
      .  && cp -r certbot-${CERTBOT_VERSION}/tools tools  && cp -r certbot-${CERTBOT_VERSION}/acme
      src/acme  && cp -r certbot-${CERTBOT_VERSION}/certbot src/certbot  && rm -rf
      certbot-${CERTBOT_VERSION}.tar.gz certbot-${CERTBOT_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - cat dependency-requirements.txt | tools/strip_hashes.py > unhashed_requirements.txt  &&
      cat tools/dev_constraints.txt unhashed_requirements.txt | tools/merge_requirements.py
      > docker_constraints.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .certbot-deps         libffi         libssl1.1         openssl         ca-certificates         binutils
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps         gcc         linux-headers         openssl-dev         musl-dev         libffi-dev     &&
      pip install -r dependency-requirements.txt     && pip install --no-cache-dir
      --no-deps         --editable src/acme         --editable src && apk del .build-deps
    Name: run
    PrependShell: true
  From:
    Image: ${TARGET_ARCH}/python:2-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM ${TARGET_ARCH}/python:2-alpine3.10
