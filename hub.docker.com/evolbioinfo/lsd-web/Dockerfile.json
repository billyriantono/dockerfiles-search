{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Frederic Lemoine",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing      \u0026\u0026 apt-get install -y     python2.7     libjpeg8-dev     libxml2-dev     apache2     apache2-dev     tcl     libfreetype6-dev     libfreetype6     wget     make     g++    gcc     postgresql     postgresql-contrib     tar     python-pip     git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/pg_hba.conf",
            "/etc/postgresql/9.5/main/pg_hba.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/postgresql.conf",
            "/etc/postgresql/9.5/main/postgresql.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/sql_init_script.sql",
            "."
          ]
        },
        {
          "CmdLine": [
            "chown postgres:postgres   /etc/postgresql/9.5/main/pg_hba.conf     \u0026\u0026 chown postgres:postgres /etc/postgresql/9.5/main/postgresql.conf     \u0026\u0026 service postgresql start     \u0026\u0026 psql -U postgres -a  -f sql_init_script.sql     \u0026\u0026 rm sql_init_script.sql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://download.redis.io/releases/redis-3.0.7.tar.gz     \u0026\u0026 tar -xzvf redis-3.0.7.tar.gz     \u0026\u0026 cd redis-3.0.7     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 utils/install_server.sh     \u0026\u0026 cd ..     \u0026\u0026 rm -rf redis-3.0.7.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "lsd_web/",
            "/root/lsd_web/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/lsd_web/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/wait_for_postgres.sh",
            "."
          ]
        },
        {
          "CmdLine": [
            "chmod +x wait_for_postgres.sh     \u0026\u0026 pip install -r requirements.txt     \u0026\u0026 service postgresql start     \u0026\u0026 ./wait_for_postgres.sh     \u0026\u0026 mv lsd_web/settings_deployed.py lsd_web/settings.py     \u0026\u0026 python manage.py makemigrations lsd     \u0026\u0026 python manage.py migrate     \u0026\u0026 python manage.py createsuperuser     \u0026\u0026 echo \"yes\" | python manage.py collectstatic     \u0026\u0026 chown www-data:www-data /root/     \u0026\u0026 chown www-data:www-data /root/lsd_web/     \u0026\u0026 chown www-data:www-data /root/lsd_web/lsd_web/     \u0026\u0026 chown -R www-data:www-data /root/lsd_web/static/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/tothuhien/lsd-0.3beta.git /root/lsd-0.3beta     \u0026\u0026 cd /root/lsd-0.3beta/src/     \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LSDPATH",
              "Value": "/root/lsd-0.3beta/src/lsd"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/django.conf",
            "/etc/apache2/sites-enabled/000-default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/default_celeryd",
            "/etc/default/celeryd"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/celeryd",
            "/etc/init.d/celeryd"
          ]
        },
        {
          "CmdLine": [
            "chmod 644 /etc/default/celeryd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_files/init_docker.sh",
            "/root/init_docker.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x  /root/init_docker.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/init_docker.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}