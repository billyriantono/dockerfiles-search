{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7.14-jessie",
      "SourceCode": "FROM python:2.7.14-jessie",
      "Platform": "",
      "From": {
        "Image": "python:2.7.14-jessie"
      },
      "Commands": [
        {
          "Maintainer": "Frederic Lemoine \u003cfrederic.lemoine@pasteur.fr\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/home/ngphylo"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/ngphylo/"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing     \u0026\u0026 apt-get install -y libpq-dev postgresql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://download.redis.io/redis-stable.tar.gz     \u0026\u0026 tar xvzf redis-stable.tar.gz     \u0026\u0026 cd redis-stable     \u0026\u0026 make     \u0026\u0026 cp src/redis-server /usr/local/bin/     \u0026\u0026 cp src/redis-cli /usr/local/bin/     \u0026\u0026 mkdir /etc/redis     \u0026\u0026 mkdir -p /home/ngphylo/redis     \u0026\u0026 cp utils/redis_init_script /etc/init.d/redis_6379     \u0026\u0026 mv /home/ngphylo/docker/redis.conf /etc/redis/6379.conf     \u0026\u0026 mkdir /home/ngphylo/redis/6379     \u0026\u0026 cd .. \u0026\u0026 rm -rf redis-stable*     \u0026\u0026 touch /var/log/redis_6379.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/celeryd",
            "/etc/init.d/celeryd"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/celerybeat",
            "/etc/init.d/celerybeat"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/celeryd.default",
            "/etc/default/celeryd"
          ]
        },
        {
          "CmdLine": [
            "chmod 640  /etc/default/celeryd     \u0026\u0026 chmod +x /etc/init.d/celery*     \u0026\u0026 mkdir /var/run/celery"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/uwsgi.init",
            "/etc/init/uwsgi.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/init/uwsgi.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/nginx",
            "/etc/init.d/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/nginx.default",
            "/etc/default/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/ngphylogeny_nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "wget http://nginx.org/download/nginx-1.15.0.tar.gz     \u0026\u0026 tar -xzvf nginx-1.15.0.tar.gz     \u0026\u0026 cd nginx-1.15.0     \u0026\u0026 ./configure     --prefix=/usr/share/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --pid-path=/var/run/nginx.pid     --lock-path=/var/lock/nginx.lock     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/access.log     --user=root     --group=root     --without-mail_pop3_module     --without-mail_imap_module     --without-mail_smtp_module     --without-http_scgi_module     --without-http_memcached_module     --with-ipv6     --with-http_ssl_module     --with-http_stub_status_module     --with-http_gzip_static_module     \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 cd .. \u0026\u0026 rm -rf nginx-1.15.0*     \u0026\u0026 chmod +x /etc/init.d/nginx     \u0026\u0026 chmod 640  /etc/default/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64     \u0026\u0026 chmod +x /usr/local/bin/jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -r requirement.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/home/ngphylo/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}