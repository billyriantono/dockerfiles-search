{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "\"2017-10-16 14:30:00\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install software-properties-common -y     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y upgrade     \u0026\u0026 apt-get -y clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php -y     \u0026\u0026 apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get purge -y php5*      \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get purge -y php7*      \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y -q         curl                  wget                  php7.2                php7.2-common         php7.2-cli            php7.2-fpm            php7.2-dev            php7.2-curl           php7.2-intl           php7.2-mysql  \t\tphp7.2-redis  \t\tphp7.2-bcmath \t\tphp7.2-mbstring \t\tphp7.2-gd     \t\tphp7.2-imagick \t\tsudo              \u0026\u0026 apt-get -y clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     \u0026\u0026 wget -O /usr/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/bin/gosu.asc /usr/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/bin/gosu.asc     \u0026\u0026 chmod +x /usr/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get -y clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y -q        php-pear        make         \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 yes '' | pecl install apcu_bc-beta     \u0026\u0026 apt-get -y purge php-pear make     \u0026\u0026 apt-get -y clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'extension=apcu.so' \u003e\u003e /etc/php/7.2/cli/php.ini \u0026\u0026     echo 'extension=apc.so' \u003e\u003e /etc/php/7.2/cli/php.ini \u0026\u0026     echo 'extension=apcu.so' \u003e\u003e /etc/php/7.2/fpm/php.ini \u0026\u0026     echo 'extension=apc.so' \u003e\u003e /etc/php/7.2/fpm/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "opcache.ini",
            "/etc/php/7.2/mods-available/opcache.ini"
          ]
        },
        {
          "CmdLine": [
            "touch /etc/php/7.2/mods-available/devops.ini     \u0026\u0026 ln -s /etc/php/7.2/mods-available/devops.ini /etc/php/7.2/fpm/conf.d/99-devops.ini     \u0026\u0026 ln -s /etc/php/7.2/mods-available/devops.ini /etc/php/7.2/cli/conf.d/99-devops.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "symfony.pool.conf",
            "/etc/php/7.2/fpm/pool.d/"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s/^error_log =/;error_log =/\" /etc/php/7.2/fpm/php-fpm.conf \u0026\u0026     sed -i -e \"s/;daemonize = yes/daemonize = no/\" /etc/php/7.2/fpm/php-fpm.conf \u0026\u0026     sed -i -e \"/^;error_log =/ a error_log = /proc/self/fd/2 \" /etc/php/7.2/fpm/php-fpm.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/php/ \u0026\u0026     touch /run/php/php7.2-fpm.sock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000",
            "9000"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "runit.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/runit.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm7.2",
            "--nodaemonize",
            "--fpm-config",
            "/etc/php/7.2/fpm/php-fpm.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}