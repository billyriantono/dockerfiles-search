MetaArgs: null
Stages:
- BaseName: buildpack-deps:jessie
  Commands:
  - Labels:
    - Key: description
      Value: '"Circle Ci Ruby 2.4.3 with custom open ssl"'
    Name: label
  - Labels:
    - Key: version
      Value: '"2.4.3"'
    Name: label
  - CmdLine:
    - mkdir -p /build/openssl
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build/openssl
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.0.1f
    Name: env
  - CmdLine:
    - curl -s https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar
      -C /build/openssl -xzf - &&     cd /build/openssl/openssl-${OPENSSL_VERSION}
      &&     ./Configure       --openssldir=/opt/openssl/openssl       shared linux-x86_64
      &&     make && make install_sw
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/etc \t&& { \t\techo 'install: --no-document'; \t\techo
      'update: --no-document'; \t} >> /usr/local/etc/gemrc"
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_MAJOR
      Value: "2.4"
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.4.3
    Name: env
  - Env:
    - Key: RUBY_DOWNLOAD_SHA256
      Value: 23677d40bf3b7621ba64593c978df40b1e026d8653c74a0599f0ead78ed92b51
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: 2.7.6
    Name: env
  - Env:
    - Key: BUNDLER_VERSION
      Value: 1.16.1
    Name: env
  - CmdLine:
    - "set -ex \t\t&& buildDeps=' \t\tbison \t\tdpkg-dev \t\tlibgdbm-dev \t\truby
      \t' \t&& apt-get update \t&& apt-get install -y --no-install-recommends $buildDeps
      \t&& rm -rf /var/lib/apt/lists/* \t\t&& wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\"
      \t&& echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \t\t&& mkdir
      -p /usr/src/ruby \t&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1
      \t&& rm ruby.tar.xz \t\t&& cd /usr/src/ruby \t\t&& { \t\techo '#define ENABLE_PATH_CHECK
      0'; \t\techo; \t\tcat file.c; \t} > file.c.new \t&& mv file.c.new file.c \t\t&&
      autoconf \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&&
      ./configure \t\t--build=\"$gnuArch\" \t\t--disable-install-doc \t\t--enable-shared
      \    --with-openssl-dir=\"/opt/openssl/openssl\" \t&& make -j \"$(nproc)\" \t&&
      make install \t\t&& apt-get purge -y --auto-remove $buildDeps \t&& cd / \t&&
      rm -r /usr/src/ruby \t\t&& gem update --system \"$RUBYGEMS_VERSION\" \t&& gem
      install bundler --version \"$BUNDLER_VERSION\" --force \t&& rm -r /root/.gem/"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /build/bx
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build/bx
  - CmdLine:
    - curl -L -O https://github.com/libbitcoin/libbitcoin-explorer/releases/download/v3.2.0/bx-linux-x64-qrcode
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod u+x bx-linux-x64-qrcode
    Name: run
    PrependShell: true
  - CmdLine:
    - mv bx-linux-x64-qrcode /usr/local/bin/bx
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    - Key: BUNDLE_BIN
      Value: '"$GEM_HOME/bin"'
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $BUNDLE_BIN:$PATH
    Name: env
  - CmdLine:
    - "mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \t&& chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\""
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y build-essential nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_9.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libzmq3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g yarn
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    Name: env
  - Env:
    - Key: LANG
      Value: '"en_uC.UTF-8"'
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: '"en_US.UTF-8"'
    Name: env
  From:
    Image: buildpack-deps:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:jessie
