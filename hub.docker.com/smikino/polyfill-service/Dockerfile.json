{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:8-stretch",
      "SourceCode": "FROM node:8-stretch",
      "Platform": "",
      "From": {
        "Image": "node:8-stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APP_DIRECTORY",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$APP_DIRECTORY"
        },
        {
          "Env": [
            {
              "Key": "POLYFILL_SERVICE_VERSION",
              "Value": "3.25.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/Financial-Times/polyfill-service/archive/v$POLYFILL_SERVICE_VERSION.tar.gz -P /tmp   \u0026\u0026 tar -xzf /tmp/v$POLYFILL_SERVICE_VERSION.tar.gz -C /app/ --strip-components=1   \u0026\u0026 rm -f /tmp/v$POLYFILL_SERVICE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install --production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.12.1-1~stretch"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NJS_VERSION",
              "Value": "1.12.1.0.1.10-1~stretch"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y gnupg2   \u0026\u0026   NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;   found='';   for server in   ha.pool.sks-keyservers.net   hkp://keyserver.ubuntu.com:80   hkp://p80.pool.sks-keyservers.net:80   pgp.mit.edu   ; do   echo \"Fetching GPG key $NGINX_GPGKEY from $server\";   apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \u0026\u0026 found=yes \u0026\u0026 break;   done;   test -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $NGINX_GPGKEY\" \u0026\u0026 exit 1;   apt-get remove --purge --auto-remove -y gnupg2 \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"   \u0026\u0026 nginxPackages=\"   nginx=${NGINX_VERSION}   nginx-module-xslt=${NGINX_VERSION}   nginx-module-geoip=${NGINX_VERSION}   nginx-module-image-filter=${NGINX_VERSION}   nginx-module-njs=${NJS_VERSION}   \"   \u0026\u0026 case \"$dpkgArch\" in   amd64|i386)   echo \"deb http://nginx.org/packages/debian/ stretch nginx\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 apt-get update   ;;   *)   echo \"deb-src http://nginx.org/packages/debian/ stretch nginx\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 tempDir=\"$(mktemp -d)\"   \u0026\u0026 chmod 777 \"$tempDir\"     \u0026\u0026 savedAptMark=\"$(apt-mark showmanual)\"     \u0026\u0026 apt-get update   \u0026\u0026 apt-get build-dep -y $nginxPackages   \u0026\u0026 (   cd \"$tempDir\"   \u0026\u0026 DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"   apt-get source --compile $nginxPackages   )     \u0026\u0026 apt-mark showmanual | xargs apt-mark auto \u003e /dev/null   \u0026\u0026 { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }     \u0026\u0026 ls -lAFh \"$tempDir\"   \u0026\u0026 ( cd \"$tempDir\" \u0026\u0026 dpkg-scanpackages . \u003e Packages )   \u0026\u0026 grep '^Package: ' \"$tempDir/Packages\"   \u0026\u0026 echo \"deb [ trusted=yes ] file://$tempDir ./\" \u003e /etc/apt/sources.list.d/temp.list   \u0026\u0026 apt-get -o Acquire::GzipIndexes=false update   ;;   esac     \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y   $nginxPackages   gettext-base   \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 if [ -n \"$tempDir\" ]; then   apt-get purge -y --auto-remove   \u0026\u0026 rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;   fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/nginx/",
            "/etc/nginx/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGTERM"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker.sh",
            "$APP_DIRECTORY"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "docker.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}