{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.17.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apk add --no-cache libatomic_ops pcre tzdata   \u0026\u0026 apk add --no-cache --virtual .build-deps build-base git autoconf automake openssl-dev libtool wget tar pcre-dev zlib-dev libatomic_ops-dev unzip patch linux-headers util-linux binutils   \u0026\u0026 addgroup -g 101 -S nginx   \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx   \u0026\u0026 cd /tmp   \u0026\u0026 wget -q http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz   \u0026\u0026 tar xf nginx-${NGINX_VERSION}.tar.gz   \u0026\u0026 cd /tmp/nginx-${NGINX_VERSION}   \u0026\u0026 wget -q https://raw.githubusercontent.com/kn007/patch/master/nginx.patch -O- | patch -p1   \u0026\u0026 cd /tmp   \u0026\u0026 git clone https://github.com/google/ngx_brotli.git   \u0026\u0026 cd /tmp/ngx_brotli \u0026\u0026 git submodule update --init \u0026\u0026 cd /tmp   \u0026\u0026 git clone https://github.com/cloudflare/zlib.git   \u0026\u0026 cd /tmp/zlib \u0026\u0026 make -f Makefile.in distclean \u0026\u0026 cd /tmp   \u0026\u0026 cd /tmp   \u0026\u0026 cd /tmp/nginx-${NGINX_VERSION}   \u0026\u0026 ./configure   --prefix=/etc/nginx   --sbin-path=/usr/sbin/nginx   --modules-path=/usr/lib/nginx/modules   --conf-path=/etc/nginx/nginx.conf   --error-log-path=/var/log/nginx/error.log   --http-log-path=/var/log/nginx/access.log   --pid-path=/var/run/nginx.pid   --lock-path=/var/run/nginx.lock   --http-client-body-temp-path=/var/cache/nginx/client_temp   --http-proxy-temp-path=/var/cache/nginx/proxy_temp   --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp   --user=nginx   --group=nginx   --with-threads   --with-file-aio   --with-http_addition_module   --with-http_auth_request_module   --with-http_gunzip_module   --with-http_gzip_static_module   --with-http_realip_module   --with-http_ssl_module   --with-http_stub_status_module   --with-http_sub_module   --with-http_v2_module   --with-http_v2_hpack_enc   --with-libatomic   --with-zlib=/tmp/zlib   --add-module=/tmp/ngx_brotli   --with-openssl-opt=\"zlib no-tests enable-ec_nistp_64_gcc_128 -DCFLAGS='-march=native -O3 -flto'\"   --with-cc-opt=\"-O3 -march=native -flto -fPIC -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wno-deprecated-declarations -Wno-strict-aliasing\"   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 apk del .build-deps   \u0026\u0026 mkdir -p /var/cache/nginx   \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log   \u0026\u0026 cd / \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGTERM"
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}