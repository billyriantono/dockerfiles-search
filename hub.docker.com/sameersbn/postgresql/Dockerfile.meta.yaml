MetaArgs: null
Stages:
- As: add-apt-repositories
  BaseName: ubuntu:bionic-20190612
  Commands:
  - CmdLine:
    - apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y wget gnupg  &&
      wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key
      add -  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main'
      >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic-20190612
  Name: add-apt-repositories
  Platform: ""
  SourceCode: FROM ubuntu:bionic-20190612 AS add-apt-repositories
- BaseName: ubuntu:bionic-20190612
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"sameer@damagehead.com"'
    Name: label
  - Env:
    - Key: PG_APP_HOME
      Value: '"/etc/docker-postgresql"'
    - Key: PG_VERSION
      Value: "10"
    - Key: PG_USER
      Value: postgres
    - Key: PG_HOME
      Value: /var/lib/postgresql
    - Key: PG_RUNDIR
      Value: /run/postgresql
    - Key: PG_LOGDIR
      Value: /var/log/postgresql
    - Key: PG_CERTDIR
      Value: /etc/postgresql/certs
    Name: env
  - Env:
    - Key: PG_BINDIR
      Value: /usr/lib/postgresql/${PG_VERSION}/bin
    - Key: PG_DATADIR
      Value: ${PG_HOME}/${PG_VERSION}/main
    Name: env
  - Chown: ""
    From: add-apt-repositories
    Name: copy
    SourcesAndDest:
    - /etc/apt/trusted.gpg
    - /etc/apt/trusted.gpg
  - Chown: ""
    From: add-apt-repositories
    Name: copy
    SourcesAndDest:
    - /etc/apt/sources.list
    - /etc/apt/sources.list
  - CmdLine:
    - apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y acl sudo       postgresql-${PG_VERSION}
      postgresql-client-${PG_VERSION} postgresql-contrib-${PG_VERSION}  && ln -sf
      ${PG_DATADIR}/postgresql.conf /etc/postgresql/${PG_VERSION}/main/postgresql.conf  &&
      ln -sf ${PG_DATADIR}/pg_hba.conf /etc/postgresql/${PG_VERSION}/main/pg_hba.conf  &&
      ln -sf ${PG_DATADIR}/pg_ident.conf /etc/postgresql/${PG_VERSION}/main/pg_ident.conf  &&
      rm -rf ${PG_HOME}  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runtime/
    - ${PG_APP_HOME}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 5432/tcp
  - Name: workdir
    Path: ${PG_HOME}
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic-20190612
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic-20190612
