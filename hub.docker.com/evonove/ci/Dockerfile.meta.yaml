MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Evoniners <dev@evonove.it>
    Name: maintainer
  - CmdLine:
    - apt-get update   && apt-get upgrade -y   && apt-get install -y        apt-transport-https        build-essential        git        autoconf        curl        socat        libcairo2        libpango1.0-0        libgdk-pixbuf2.0-0        libffi-dev        libbz2-dev        libcurl4-openssl-dev        libevent-dev        libffi-dev        libglib2.0-dev        libjpeg-dev        libmagickcore-dev        libmagickwand-dev        libmysqlclient-dev        libncurses5-dev        libpq-dev        libreadline-dev        libsqlite3-dev        libssl-dev        libxml2-dev        libxslt1-dev        libyaml-dev        libncurses5-dev        libgdbm-dev        libdb-dev        libexpat1-dev        libpcap-dev        liblzma-dev        libpcre3-dev        locales        postgresql-client        imagemagick        shared-mime-info        zlib1g-dev        unzip        python-lxml        python-dev        python-pip        python3-dev        python3-pip        python3.5-dev        chromium-browser        xvfb   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     binutils     gdal-bin     libproj-dev     libgdal-dev     gpsbabel  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/pythonz/bin:$PATH
    Name: env
  - CmdLine:
    - useradd -d "$JENKINS_HOME" -u 1000 -m -s /bin/bash jenkins
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.13.2
    Name: env
  - Env:
    - Key: TINI_SHA
      Value: a6b5e3211c4f1e33792ea0eed699f2782b15f78f
    Name: env
  - CmdLine:
    - curl -fL "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini"
      -o /bin/tini   && chmod +x /bin/tini   && echo "$TINI_SHA /bin/tini" | sha1sum
      -c -
    Name: run
    PrependShell: true
  - Env:
    - Key: TOX_VERSION
      Value: 2.5.0
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 9.0.1
    Name: env
  - CmdLine:
    - pip install -U pip=="$PYTHON_PIP_VERSION"     && pip install tox=="$TOX_VERSION"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONZ_VERSION
      Value: 2.0.1
    Name: env
  - Env:
    - Key: PYTHONZ_PATH
      Value: /usr/local/pythonz
    Name: env
  - Env:
    - Key: PYTHONZ_EXEC
      Value: $PYTHONZ_PATH/bin/pythonz
    Name: env
  - Env:
    - Key: PYTHON27_VERSION
      Value: 2.7.13
    Name: env
  - Env:
    - Key: PYTHON34_VERSION
      Value: 3.4.5
    Name: env
  - Env:
    - Key: PYTHON35_VERSION
      Value: 3.5.2
    Name: env
  - Env:
    - Key: PYTHON36_VERSION
      Value: 3.6.0
    Name: env
  - CmdLine:
    - curl -fL "https://raw.githubusercontent.com/saghul/pythonz/pythonz-$PYTHONZ_VERSION/pythonz-install"
      | bash   && $PYTHONZ_EXEC install $PYTHON27_VERSION   && $PYTHONZ_EXEC install
      $PYTHON34_VERSION   && $PYTHONZ_EXEC install $PYTHON35_VERSION   && $PYTHONZ_EXEC
      install $PYTHON36_VERSION   && rm -rf $PYTHONZ_PATH/build/*   && rm -rf $PYTHONZ_PATH/dists/*   &&
      rm -rf $PYTHONZ_PATH/log/*   && find $PYTHONZ_PATH/pythons -name '*.pyc' -delete   &&
      find $PYTHONZ_PATH/pythons -name '*.pyo' -delete   && mkdir -p /opt/pythonz/bin   &&
      ln -s $PYTHONZ_PATH/pythons/CPython-$PYTHON27_VERSION/bin/python2.7 /opt/pythonz/bin/python2.7   &&
      ln -s $PYTHONZ_PATH/pythons/CPython-$PYTHON34_VERSION/bin/python3.4 /opt/pythonz/bin/python3.4   &&
      ln -s $PYTHONZ_PATH/pythons/CPython-$PYTHON35_VERSION/bin/python3.5 /opt/pythonz/bin/python3.5   &&
      ln -s $PYTHONZ_PATH/pythons/CPython-$PYTHON36_VERSION/bin/python3.6 /opt/pythonz/bin/python3.6
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 6.9.2
    Name: env
  - Env:
    - Key: NODE_PATH
      Value: /usr/local/lib/node_modules/
    Name: env
  - Env:
    - Key: NPM_VERSION
      Value: 4.0.5
    Name: env
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys 56730D5401028683275BD23C23EFEFE93C4CFFFE
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --verify SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.gz\$"
      SHASUMS256.txt.asc | sha256sum -c -   && tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.gz"
      SHASUMS256.txt.asc   && npm install -g npm@"$NPM_VERSION"   && npm install -g
      gulp-cli bower   && npm cache clear
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     && echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     yarn  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CHROMEDRIVER_VERSION
      Value: "2.27"
    Name: env
  - CmdLine:
    - curl -SLO "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"   &&
      unzip chromedriver_linux64.zip -d /usr/local/bin   && rm chromedriver_linux64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /usr/bin/chromium-browser /usr/bin/chromium-browser.ori   && echo '#!/bin/bash'
      > /usr/bin/chromium-browser   && echo 'exec -a "$0" "/usr/bin/chromium-browser.ori"
      --no-sandbox "$@"' >>     /usr/bin/chromium-browser   && chmod +x /usr/bin/chromium-browser
    Name: run
    PrependShell: true
  - Env:
    - Key: RUST_VERSION
      Value: 1.19.0
    Name: env
  - Env:
    - Key: CARGO_HOME
      Value: /opt/cargo
    Name: env
  - Env:
    - Key: RUSTUP_HOME
      Value: /opt/rustup
    Name: env
  - CmdLine:
    - mkdir $CARGO_HOME &&     mkdir $RUSTUP_HOME &&     chown -R jenkins $CARGO_HOME
      &&     chown -R jenkins $RUSTUP_HOME &&     curl -o $CARGO_HOME/rustup-init
      -sO https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init
      &&     chmod +x $CARGO_HOME/rustup-init &&     $CARGO_HOME/rustup-init -y --default-toolchain
      $RUST_VERSION &&     rm $CARGO_HOME/rustup-init
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$CARGO_HOME/bin
    Name: env
  - Env:
    - Key: RDKAFKA_VERSION
      Value: 0.11.0
    Name: env
  - CmdLine:
    - curl -o /root/librdkafka-${RDKAFKA_VERSION}.tar.gz -SL https://github.com/edenhill/librdkafka/archive/v${RDKAFKA_VERSION}.tar.gz
      &&     tar -xzf /root/librdkafka-${RDKAFKA_VERSION}.tar.gz -C /root &&     cd
      /root/librdkafka-${RDKAFKA_VERSION} && ./configure --prefix=/usr && make &&
      make install
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - /bin/tini
    - --
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
