MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: user
    Name: arg
    Value: www-data
  - Key: php_version
    Name: arg
    Value: null
  - Env:
    - Key: PHP_VERSION
      Value: '"${php_version:-7.2}"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get -y install     python-software-properties     software-properties-common     language-pack-en-base     sudo     mysql-client     vim     supervisor     rsyslog     wget     curl     imagemagick
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: RELAY_HOST
      Value: email-smtp.eu-west-1.amazonaws.com:587
    - Key: RELAY_USERNAME
      Value: CHANGEME
    - Key: RELAY_PASSWORD
      Value: CHANGEME
    - Key: MY_NETWORKS
      Value: '"127.0.0.0/8"'
    - Key: MAILNAME
      Value: changeme.com
    - Key: RATE_DELAY
      Value: 1s
    Name: env
  - CmdLine:
    - apt-get update &&     echo postfix postfix/main_mailer_type string "'Internet
      Site'" | debconf-set-selections &&     echo postfix postfix/mynetworks string
      "${MY_NETWORKS}" | debconf-set-selections &&     echo postfix postfix/mailname
      string ${MAILNAME} | debconf-set-selections &&     apt-get --yes --force-yes
      install mailutils postfix &&     postconf -e mydestination="localhost.localdomain,
      localhost" &&     postconf -e smtpd_banner='$myhostname ESMTP $mail_name' &&     postconf
      -# myhostname &&     postconf -e inet_protocols=ipv4 &&     postconf -# smtp_fallback_relay
      &&     postconf -e relayhost=${RELAY_HOST} &&     postconf -e default_destination_rate_delay=${RATE_DELAY}
      &&     postconf -e smtp_sasl_auth_enable=yes &&     postconf -e smtp_sasl_security_options=noanonymous
      &&     postconf -e smtp_sasl_password_maps=hash:/etc/postfix/sasl_passwd &&     postconf
      -e smtp_use_tls=yes &&     postconf -e smtp_tls_security_level=encrypt &&     postconf
      -e smtp_tls_note_starttls_offer=yes &&     postconf -e 'smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt'
      &&     echo "${RELAY_HOST} ${RELAY_USERNAME}:${RELAY_PASSWORD}" > /etc/postfix/sasl_passwd
      &&     postmap hash:/etc/postfix/sasl_passwd &&     chown root:root /etc/postfix/sasl_passwd
      /etc/postfix/sasl_passwd.db &&     chmod 0600 /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db
    Name: run
    PrependShell: true
  - CmdLine:
    - LANG=C.UTF-8 add-apt-repository -y ppa:ondrej/nginx-mainline && apt-get update
      && apt-get -y install     nginx     nginx-extras &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php && apt-get update && apt-get
      -y install     php${PHP_VERSION}     php${PHP_VERSION}-apcu     php${PHP_VERSION}-apcu-bc     php${PHP_VERSION}-bcmath     php${PHP_VERSION}-bz2     php${PHP_VERSION}-cli     php${PHP_VERSION}-curl     php${PHP_VERSION}-dba     php${PHP_VERSION}-dev     php${PHP_VERSION}-fpm     php${PHP_VERSION}-gd     php${PHP_VERSION}-gmp     php${PHP_VERSION}-igbinary     php${PHP_VERSION}-imagick     php${PHP_VERSION}-imap     php${PHP_VERSION}-intl     php${PHP_VERSION}-json     php${PHP_VERSION}-ldap     php${PHP_VERSION}-memcached     php${PHP_VERSION}-mbstring     php${PHP_VERSION}-mongodb     php${PHP_VERSION}-msgpack     php${PHP_VERSION}-mysql     php${PHP_VERSION}-opcache     php${PHP_VERSION}-pgsql     php${PHP_VERSION}-readline     php${PHP_VERSION}-redis     php${PHP_VERSION}-soap     php${PHP_VERSION}-sqlite3     php${PHP_VERSION}-ssh2     php${PHP_VERSION}-tidy     php${PHP_VERSION}-xdebug     php${PHP_VERSION}-xml     php${PHP_VERSION}-xmlrpc     php${PHP_VERSION}-xsl     php${PHP_VERSION}-zip
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - if dpkg --compare-versions ${PHP_VERSION} lt 7.2;     then       apt-get update
      &&       apt-get -y install php${PHP_VERSION}-mcrypt &&       rm -rf /var/lib/apt/lists/*
      &&       phpenmod mcrypt;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSLo composer-setup.php https://getcomposer.org/installer &&         php
      composer-setup.php --install-dir=/usr/local/bin --filename=composer &&         rm
      composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list
      &&     wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add - &&     apt-get
      update && apt-get -y install newrelic-php5 &&     rm -rf /var/lib/apt/lists/*
      &&     phpdismod newrelic
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/*     /etc/nginx/sites-available/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFG_PATH
      Value: '"/etc/php/${PHP_VERSION}"'
    Name: env
  - Env:
    - Key: PHP_ENV_FILE
      Value: '"/etc/php/environment"'
    - Key: PHP_FPM_CFG_FILE
      Value: '"${PHP_CFG_PATH}/fpm/php-fpm.conf"'
    - Key: PHP_FPM_POOL_CFG_FILE
      Value: '"${PHP_CFG_PATH}/fpm/pool.d/www.conf"'
    - Key: PHP_FPM_INI_FILE
      Value: '"${PHP_CFG_PATH}/fpm/php.ini"'
    - Key: PHP_CLI_INI_FILE
      Value: '"${PHP_CFG_PATH}/cli/php.ini"'
    Name: env
  - Env:
    - Key: USER
      Value: '"${user}"'
    - Key: NGINX_WORKER_PROCESSES
      Value: '"4"'
    - Key: NGINX_WORKER_CONNECTIONS
      Value: '"65535"'
    - Key: NGINX_KEEPALIVE_TIMEOUT
      Value: '"0"'
    - Key: NGINX_CACHE_DIR
      Value: '"/dev/shm/nginx"'
    Name: env
  - Env:
    - Key: PHP_DISPLAY_ERRORS
      Value: '"Off"'
    - Key: PHP_DEFAULT_CHARSET
      Value: '"ISO-8859-1"'
    - Key: PHP_MAX_EXECUTION_TIME
      Value: '"600s"'
    - Key: PHP_MEMORY_LIMIT
      Value: '"1024M"'
    - Key: PHP_POST_MAX_SIZE
      Value: '"16M"'
    - Key: PHP_UPLOAD_MAX_FILESIZE
      Value: '"50M"'
    - Key: PHP_DATE_TIMEZONE
      Value: '"Europe/Madrid"'
    - Key: PHP_XDEBUG_ENABLE
      Value: '"0"'
    - Key: PHP_XDEBUG_REMOTE_HOST
      Value: '"docker.for.mac.localhost"'
    - Key: PHP_XDEBUG_REMOTE_PORT
      Value: '"9000"'
    - Key: PHP_OPCACHE_ENABLE
      Value: '"1"'
    - Key: PHP_OPCACHE_REVALIDATE_FREQ
      Value: '"2"'
    - Key: PHP_OPCACHE_VALIDATE_TIMESTAMPS
      Value: '"0"'
    - Key: PHP_OPCACHE_MAX_ACCELERATED_FILES
      Value: '"65407"'
    - Key: PHP_OPCACHE_MEMORY_CONSUMPTION
      Value: '"512"'
    Name: env
  - Env:
    - Key: FPM_PROCESS_CONTROL_TIMEOUT
      Value: '"${PHP_MAX_EXECUTION_TIME}"'
    - Key: FPM_PM
      Value: '"ondemand"'
    - Key: FPM_PM_MAX_CHILDREN
      Value: '"250"'
    - Key: FPM_PM_START_SERVERS
      Value: '"5"'
    - Key: FPM_PM_MIN_SPARE_SERVERS
      Value: '"5"'
    - Key: FPM_PM_MAX_SPARE_SERVERS
      Value: '"10"'
    - Key: FPM_PM_PROCESS_IDLE_TIMEOUT
      Value: '"300s"'
    - Key: FPM_PM_MAX_REQUESTS
      Value: '"500"'
    Name: env
  - Env:
    - Key: NEWRELIC_LICENSE
      Value: '""'
    - Key: NEWRELIC_APPNAME
      Value: '"PHP Application"'
    Name: env
  - CmdLine:
    - mkdir -p     /etc/nginx/ssl     /var/log/supervisor     /var/log/newrelic
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./rootfs
    - /
  - CmdLine:
    - chmod +x /usr/local/bin/*.sh &&     chmod 644 /etc/cron.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
