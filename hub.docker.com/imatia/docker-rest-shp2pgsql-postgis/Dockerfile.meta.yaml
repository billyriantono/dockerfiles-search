MetaArgs: null
Stages:
- BaseName: imatia/docker-postgis
  Commands:
  - Env:
    - Key: SHP_TEMP_STORAGE_PATH
      Value: /tmp
    Name: env
  - Env:
    - Key: REMOTE_PGHOST
      Value: localhost
    Name: env
  - Env:
    - Key: REMOTE_PGPORT
      Value: "5432"
    Name: env
  - Env:
    - Key: REMOTE_PGDB
      Value: gistest
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: docker
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: docker
    Name: env
  - Env:
    - Key: REMOTE_PGUSER
      Value: $POSTGRES_USER
    Name: env
  - Env:
    - Key: REMOTE_PGPASSWORD
      Value: $POSTGRES_PASSWORD
    Name: env
  - Env:
    - Key: PGPASSWORD
      Value: $POSTGRES_PASSWORD
    Name: env
  - Env:
    - Key: SHP2PGSQL_KEYSTORE_PATH
      Value: /keystore.jks
    Name: env
  - Env:
    - Key: SHP2PGSQL_KEYSTORE_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: SHP2PGSQL_KEY_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: SG_OAUTH2_DISABLE_SECURIZATION
      Value: "false"
    Name: env
  - Env:
    - Key: SG_OAUTH2_APP_SECRET
      Value: oauth2sgappsecret
    Name: env
  - Env:
    - Key: SG_OAUTH2_CLIENT_ID
      Value: sgclientapp
    Name: env
  - Env:
    - Key: SG_OAUTH2_ACCESS_TOKEN_URI
      Value: https://localhost:8080/oauth/token
    Name: env
  - Env:
    - Key: SG_OAUTH2_USER_AUTHORIZATION_URI
      Value: https://localhost:8080/oauth/authorize
    Name: env
  - Env:
    - Key: SG_OAUTH2_TOKEN_NAME
      Value: oauth2sgappsecret
    Name: env
  - Env:
    - Key: SG_OAUTH2_AUTHENTICATION_SCHEME
      Value: query
    Name: env
  - Env:
    - Key: SG_OAUTH2_CLIENT_AUTHENTICATION_SCHEME
      Value: form
    Name: env
  - Env:
    - Key: SG_OAUTH2_LOGIN_ENDPOINT
      Value: https://localhost:8080/login
    Name: env
  - Env:
    - Key: SG_OAUTH2_USER_INFO_URI
      Value: https://localhost:8080/me
    Name: env
  - Env:
    - Key: SHP2PGSQL_REMOTE_DEBUG
      Value: "false"
    Name: env
  - Env:
    - Key: SHP2PGSQL_ENABLE_CORS
      Value: "true"
    Name: env
  - Env:
    - Key: SHP2PGSQL_DISABLE_CSRF_PROTECTION
      Value: "true"
    Name: env
  - Name: expose
    Ports:
    - "9643"
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - echo "deb http://ftp.de.debian.org/debian jessie-backports main" | tee /etc/apt/sources.list.d/webupd8team-java.list
      && apt-get update && apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o app.jar https://artifactory.imatia.com/public-artifactory/sg-releases-local/com/imatia/sg/sg-rest-shp2pgsql-postgis-docker/0.0.3/sg-rest-shp2pgsql-postgis-docker-0.0.3.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'touch /app.jar'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[ \"\$SHP2PGSQL_REMOTE_DEBUG\" = true ] && export SHP2PGSQL_REMOTE_DEBUG_STR=\"-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n\"
      || export SHP2PGSQL_REMOTE_DEBUG_STR=\"\"" > init_app.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "sh -c 'java \$SHP2PGSQL_REMOTE_DEBUG_STR -Djava.security.egd=file:/dev/./urandom
      -jar /app.jar --keystore=\$SHP2PGSQL_KEYSTORE_PATH --tmppath=\$SHP_TEMP_STORAGE_PATH
      --pghost=\$REMOTE_PGHOST --pgport=\$REMOTE_PGPORT --pgdb=\$REMOTE_PGDB --pguser=\$REMOTE_PGUSER
      --oauth2clientid=\$SG_OAUTH2_CLIENT_ID --oauth2accesstokenuri=\$SG_OAUTH2_ACCESS_TOKEN_URI
      --oauth2userauthorizationuri=\$SG_OAUTH2_USER_AUTHORIZATION_URI --oauth2tokenname=\$SG_OAUTH2_TOKEN_NAME
      --oauth2authenticationscheme=\$SG_OAUTH2_AUTHENTICATION_SCHEME --oauth2clientauthenticationscheme=\$SG_OAUTH2_CLIENT_AUTHENTICATION_SCHEME
      --oauth2loginendpoint=\$SG_OAUTH2_LOGIN_ENDPOINT --oauth2userinfouri=\$SG_OAUTH2_USER_INFO_URI
      --oauth2disablesecurization=\$SG_OAUTH2_DISABLE_SECURIZATION --enablecors=\$SHP2PGSQL_ENABLE_CORS
      --disablecsrfprotection=\$SHP2PGSQL_DISABLE_CSRF_PROTECTION'" >> init_app.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 init_app.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mv init_app.sh /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  From:
    Image: imatia/docker-postgis
  Name: ""
  Platform: ""
  SourceCode: FROM imatia/docker-postgis
