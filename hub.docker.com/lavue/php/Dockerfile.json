{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lavue/alpine",
      "SourceCode": "FROM lavue/alpine",
      "Platform": "",
      "From": {
        "Image": "lavue/alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "0.4.5"
            },
            {
              "Key": "PHP_VERSION",
              "Value": "\"7.2.4\""
            },
            {
              "Key": "ALPINE_VERSION",
              "Value": "\"3.7\""
            },
            {
              "Key": "PHP_SHA256",
              "Value": "\"7916b1bd148ddfd46d7f8f9a517d4b09cd8a8ad9248734e7c8dd91ef17057a88\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "\"     1729F83938DA44E27BA0F4D3DBDB397470D12172     B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F     \""
            },
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2\""
            },
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2\""
            },
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            },
            {
              "Key": "PHP_URL",
              "Value": "\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\""
            },
            {
              "Key": "PHP_ASC_URL",
              "Value": "\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\""
            },
            {
              "Key": "PHP_MD5",
              "Value": "\"\""
            },
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "\"     --enable-fpm     --with-fpm-user=www-data     --with-fpm-group=www-data     \""
            },
            {
              "Key": "PHP_INI_DIR",
              "Value": "\"/usr/local/etc/php\""
            },
            {
              "Key": "PHPIZE_DEPS",
              "Value": "\"     autoconf     dpkg-dev dpkg     file     g++     gcc     libc-dev     make     pkgconf     re2c     \""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "= \"PHP\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "= \"PHP-FPM for LaVue\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "= \"4mydom@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "= \"$VERSION-$PHP_VERSION-$ALPINE_VERSION\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 apk add --no-cache --virtual .persistent-deps     xz     libressl   \u0026\u0026 apk add --no-cache --virtual .fetch-deps     gnupg   \u0026\u0026 mkdir -p $PHP_INI_DIR/conf.d   \u0026\u0026 mkdir -p /usr/src   \u0026\u0026 cd /usr/src   \u0026\u0026 wget -O php.tar.xz \"$PHP_URL\"   \u0026\u0026   if [ -n \"$PHP_SHA256\" ]; then     echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -;   fi;     if [ -n \"$PHP_MD5\" ]; then     echo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -;   fi;     if [ -n \"$PHP_ASC_URL\" ]; then     wget -O php.tar.xz.asc \"$PHP_ASC_URL\";     export GNUPGHOME=\"$(mktemp -d)\";     for key in $GPG_KEYS; do       gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";     done;     gpg --batch --verify php.tar.xz.asc php.tar.xz;     rm -rf \"$GNUPGHOME\";   fi;     apk del .fetch-deps   \u0026\u0026 apk add --no-cache --virtual .build-deps     $PHPIZE_DEPS     coreutils     curl-dev     libedit-dev     libressl-dev     libsodium-dev     libxml2-dev     sqlite-dev     \u0026\u0026 export CFLAGS=\"$PHP_CFLAGS\"     CPPFLAGS=\"$PHP_CPPFLAGS\"     LDFLAGS=\"$PHP_LDFLAGS\"     \u0026\u0026 docker-php-source extract   \u0026\u0026 cd /usr/src/php   \u0026\u0026 gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"   \u0026\u0026 ./configure     --build=\"$gnuArch\"     --with-config-file-path=\"$PHP_INI_DIR\"     --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"     --disable-cgi         --enable-ftp     --enable-mbstring     --enable-mysqlnd     --with-sodium         --with-curl     --with-libedit     --with-openssl     --with-zlib         $(test \"$gnuArch\" = 's390x-linux-gnu' \u0026\u0026 echo '--without-pcre-jit')         $PHP_EXTRA_CONFIGURE_ARGS   \u0026\u0026 make -j \"$(nproc)\"   \u0026\u0026 make install   \u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; }   \u0026\u0026 make clean   \u0026\u0026 cd /     \u0026\u0026 pecl update-channels     \u0026\u0026 apk add --no-cache --virtual .ext-deps     bzip2-dev     freetype-dev     icu-dev     imap-dev    libjpeg-turbo-dev     libpng-dev     libwebp-dev     libxml2-dev     libxpm-dev       \u0026\u0026 docker-php-ext-configure gd     --with-freetype-dir=/usr/include/     --with-jpeg-dir=/usr/include/     --with-png-dir=/usr/include/     --with-webp-dir=/usr/include/     --with-xpm-dir=/usr/include/   \u0026\u0026 docker-php-ext-configure imap     --with-imap     --with-imap-ssl   \u0026\u0026 docker-php-ext-install      bcmath     bz2     calendar      exif     gd     intl     imap     mysqli     opcache      pcntl     pdo     pdo_mysql     posix     soap     xml     zip     \u0026\u0026 pecl install xdebug     \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner --format '%n#p' --recursive /usr/local       | tr ',' '\\n'       | sort -u       | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'   )\"   \u0026\u0026 apk add --no-cache --virtual .php-rundeps $runDeps     \u0026\u0026 docker-php-source delete   \u0026\u0026 apk del .build-deps   \u0026\u0026 apk del .ext-deps   \u0026\u0026 rm -rf ~/.pearrc   \u0026\u0026 rm -rf /tmp/*   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/",
            "/usr/local/etc/"
          ]
        },
        {
          "CmdLine": [
            "docker-php-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}