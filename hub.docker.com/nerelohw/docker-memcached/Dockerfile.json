{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nerelohw/docker-alpine:3.8",
      "SourceCode": "FROM nerelohw/docker-alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "nerelohw/docker-alpine:3.8"
      },
      "Commands": [
        {
          "CmdLine": [
            "adduser -D memcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MEMCACHED_VERSION",
              "Value": "1.5.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MEMCACHED_SHA1",
              "Value": "fff9351b360a09497cd805d3e4c1ffbe860d067d"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\t\u0026\u0026 apk add --no-cache --virtual .build-deps \t\tca-certificates \t\tcoreutils \t\tcyrus-sasl-dev \t\tdpkg-dev dpkg \t\tgcc \t\tlibc-dev \t\tlibevent-dev \t\tlibressl \t\tlinux-headers \t\tmake \t\tperl \t\tperl-utils \t\ttar \t\twget \t\t\u0026\u0026 wget -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \t\u0026\u0026 echo \"$MEMCACHED_SHA1  memcached.tar.gz\" | sha1sum -c - \t\u0026\u0026 mkdir -p /usr/src/memcached \t\u0026\u0026 tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \t\u0026\u0026 rm memcached.tar.gz \t\t\u0026\u0026 cd /usr/src/memcached \t\t\u0026\u0026 gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t\u0026\u0026 enableExtstore=\"$( \t\tcase \"$gnuArch\" in \t\t\ts390x-*) ;; \t\t\t*) echo '--enable-extstore' ;; \t\tesac \t)\" \t\u0026\u0026 ./configure \t\t--build=\"$gnuArch\" \t\t--enable-sasl \t\t$enableExtstore \t\u0026\u0026 make -j \"$(nproc)\" \t\t\u0026\u0026 make test \t\u0026\u0026 make install \t\t\u0026\u0026 cd / \u0026\u0026 rm -rf /usr/src/memcached \t\t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t\u0026\u0026 apk add --virtual .memcached-rundeps $runDeps \t\u0026\u0026 apk del .build-deps \t\t\u0026\u0026 memcached -V"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s /usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "memcache"
        },
        {
          "Name": "expose",
          "Ports": [
            "11211"
          ]
        },
        {
          "CmdLine": [
            "memcached"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}