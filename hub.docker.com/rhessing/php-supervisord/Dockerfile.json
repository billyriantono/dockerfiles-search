{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.29-cli-alpine3.9",
      "SourceCode": "FROM php:7.1.29-cli-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "php:7.1.29-cli-alpine3.9"
      },
      "Commands": [
        {
          "Maintainer": "R. Hessing",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk --update add         aspell-dev         autoconf         bzip2-dev         cassandra-cpp-driver-dev         composer         coreutils         freetype-dev         g++         gettext         gettext-asprintf         gettext-dev         gettext-libs         git         gmp-dev         libgomp         libintl         libjpeg-turbo-dev         libmcrypt-dev         libpng-dev         libunistring         libuv-dev         libzip-dev         make         icu-dev         supervisor         tidyhtml-dev         tini         unzip         zip     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv     \u0026\u0026 docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-configure bcmath --enable-bcmath     \u0026\u0026 docker-php-ext-install -j$(nproc) bcmath     \u0026\u0026 docker-php-ext-configure bz2 --with-bz2     \u0026\u0026 docker-php-ext-install -j$(nproc) bz2     \u0026\u0026 docker-php-ext-configure exif --enable-exif     \u0026\u0026 docker-php-ext-install -j$(nproc) exif     \u0026\u0026 docker-php-ext-configure gettext --with-gettext     \u0026\u0026 docker-php-ext-install -j$(nproc) gettext     \u0026\u0026 docker-php-ext-configure gmp --with-gmp     \u0026\u0026 docker-php-ext-install -j$(nproc) gmp     \u0026\u0026 docker-php-ext-configure intl --enable-intl     \u0026\u0026 docker-php-ext-install -j$(nproc) intl     \u0026\u0026 docker-php-ext-configure mysqli --with-mysqli     \u0026\u0026 docker-php-ext-install -j$(nproc) mysqli     \u0026\u0026 docker-php-ext-configure pspell --with-pspell     \u0026\u0026 docker-php-ext-install -j$(nproc) pspell     \u0026\u0026 docker-php-ext-configure shmop --enable-shmop     \u0026\u0026 docker-php-ext-install -j$(nproc) shmop     \u0026\u0026 docker-php-ext-configure tidy --with-tidy     \u0026\u0026 docker-php-ext-install -j$(nproc) tidy     \u0026\u0026 docker-php-ext-configure zip --enable-zip     \u0026\u0026 docker-php-ext-install -j$(nproc) zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl channel-update pecl.php.net     \u0026\u0026 pecl install mcrypt-1.0.0     \u0026\u0026 pecl install cassandra     \u0026\u0026 docker-php-ext-enable mcrypt     \u0026\u0026 docker-php-ext-enable cassandra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "rm /var/cache/apk/*     \u0026\u0026 mkdir -p /var/www     \u0026\u0026 chmod 755 /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}