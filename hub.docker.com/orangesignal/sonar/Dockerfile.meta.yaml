MetaArgs: null
Stages:
- BaseName: debian:wheezy
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends locales &&  rm
      -rf /var/lib/apt/lists/* /var/cache/apt/archives/* /var/cache/debconf/*-old
      &&  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - echo deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main | tee
      /etc/apt/sources.list.d/webupd8team-java.list &&  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv-keys EEA14886 &&  apt-get update &&  echo oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true | debconf-set-selections &&  apt-get -y --no-install-recommends
      install oracle-java8-installer unzip procps &&  rm -rf /var/lib/apt/lists/*
      /var/cache/apt/archives/* /var/cache/debconf/*-old /var/cache/oracle-jdk*-installer     ${JAVA_HOME}/src.zip     ${JAVA_HOME}/*-src.zip     ${JAVA_HOME}/db     ${JAVA_HOME}/lib/missioncontrol     ${JAVA_HOME}/lib/visualvm     ${JAVA_HOME}/lib/*javafx*     ${JAVA_HOME}/jre/lib/plugin.jar     ${JAVA_HOME}/jre/lib/ext/jfxrt.jar     ${JAVA_HOME}/jre/bin/javaws     ${JAVA_HOME}/jre/lib/javaws.jar     ${JAVA_HOME}/jre/lib/desktop     ${JAVA_HOME}/jre/plugin     ${JAVA_HOME}/jre/lib/deploy*     ${JAVA_HOME}/jre/lib/*javafx*     ${JAVA_HOME}/jre/lib/*jfx*     ${JAVA_HOME}/jre/lib/amd64/libdecora_sse.so     ${JAVA_HOME}/jre/lib/amd64/libprism_*.so     ${JAVA_HOME}/jre/lib/amd64/libfxplugins.so     ${JAVA_HOME}/jre/lib/amd64/libglass.so     ${JAVA_HOME}/jre/lib/amd64/libgstreamer-lite.so     ${JAVA_HOME}/jre/lib/amd64/libjavafx*.so     ${JAVA_HOME}/jre/lib/amd64/libjfx*.so
    Name: run
    PrependShell: true
  - Env:
    - Key: SONARQUBE_VERSION
      Value: 4.5.6
    Name: env
  - Env:
    - Key: SONARQUBE_HOME
      Value: /opt/sonarqube
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - wget --no-check-certificate https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-${SONARQUBE_VERSION}.zip
      &&  unzip sonarqube-${SONARQUBE_VERSION}.zip &&  rm    sonarqube-${SONARQUBE_VERSION}.zip
      &&  ln -s sonarqube-${SONARQUBE_VERSION} ${SONARQUBE_HOME} &&  rm -r     ${SONARQUBE_HOME}/bin/linux-ppc-64     ${SONARQUBE_HOME}/bin/linux-x86-32     ${SONARQUBE_HOME}/bin/macosx-*     ${SONARQUBE_HOME}/bin/solaris-*     ${SONARQUBE_HOME}/bin/windows-*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${SONARQUBE_HOME}/extensions/plugins
  - CmdLine:
    - wget --no-check-certificate https://bintray.com/artifact/download/sonarsource/SonarQube/org/sonarsource/sonar-findbugs-plugin/sonar-findbugs-plugin/3.3/sonar-findbugs-plugin-3.3.jar
      &&  wget --no-check-certificate https://sonarsource.bintray.com/Distribution/sonar-java-plugin/sonar-java-plugin-3.7.1.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - ln -sf /dev/stdout ${SONARQUBE_HOME}/logs/sonar.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - sonar
    Name: cmd
    PrependShell: false
  From:
    Image: debian:wheezy
  Name: ""
  Platform: ""
  SourceCode: FROM debian:wheezy
