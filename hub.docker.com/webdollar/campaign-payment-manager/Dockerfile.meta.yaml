MetaArgs:
- DefaultValue: "7.2"
  Key: PHP_VERSION
  ProvidedValue: null
  Value: "7.2"
- DefaultValue: "11"
  Key: NODE_VERSION
  ProvidedValue: null
  Value: "11"
Stages:
- As: nodejs
  BaseName: node:${NODE_VERSION}-alpine
  Commands:
  - Key: PROJECT_PATH
    Name: arg
    Value: /var/www/html/project
  - Key: APP_ENV
    Name: arg
    Value: prod
  - Name: workdir
    Path: ${PROJECT_PATH}
  - CmdLine:
    - set -eux;     apk add --no-cache          g++         gcc         git         make         python     ;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets
    - assets/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - yarn.lock
    - webpack.config.js
    - ./
  - CmdLine:
    - set -eux;     yarn install;     yarn cache clean;     mkdir -p ${PROJECT_PATH}/public/build/;     NODE_ENV=prod
      yarn build
    Name: run
    PrependShell: true
  From:
    Image: node:${NODE_VERSION}-alpine
  Name: nodejs
  Platform: ""
  SourceCode: FROM node:${NODE_VERSION}-alpine AS nodejs
- As: php
  BaseName: php:${PHP_VERSION}-cli
  Commands:
  - Key: APP_ENV
    Name: arg
    Value: prod
  - Key: PROJECT_PATH
    Name: arg
    Value: /var/www/html/project
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends        nano        procps        coreutils        libpq-dev        libmemcached-dev        libpng-dev        libjpeg62-turbo-dev        libfreetype6-dev        libxrender1        libfontconfig        libxext-dev        apt-transport-https        libicu-dev        libxml2-dev        curl        libsodium-dev        librabbitmq-dev        libssh-dev        libwebp-dev        libzip-dev        libgmp-dev        git        ssh-client        unzip        acl        netcat        wget        supervisor     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include
      --with-webp-dir=/usr/include --with-freetype-dir=/usr/include/
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure zip --with-libzip
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) zip
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) gmp
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) sockets
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) pdo pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) intl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) pcntl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu && docker-php-ext-enable apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install memcached && docker-php-ext-enable memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install amqp && docker-php-ext-enable amqp
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl clear-cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer:latest
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/bin/composer
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/php/php.ini
    - /usr/local/etc/php/
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - set -eux;     echo "memory_limit=2G" >> /usr/local/etc/php/php-cli.ini;     composer
      global require "hirak/prestissimo:^0.3" --prefer-dist --no-progress --no-suggest
      --classmap-authoritative;     composer clear-cache
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/root/.composer/vendor/bin"'
    Name: env
  - Env:
    - Key: APP_ENV
      Value: ${APP_ENV}
    Name: env
  - Env:
    - Key: APP_NAME
      Value: webdollar_payment_proxy
    Name: env
  - Env:
    - Key: DAEMONS_USER
      Value: www-data
    Name: env
  - Env:
    - Key: WEBDOLLAR_CLIENT_NODE_1_URL
      Value: ''''''
    Name: env
  - Env:
    - Key: WEBDOLLAR_CLIENT_NODE_1_USER
      Value: ''''''
    Name: env
  - Env:
    - Key: WEBDOLLAR_CLIENT_NODE_1_PASS
      Value: ''''''
    Name: env
  - Name: workdir
    Path: ${PROJECT_PATH}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - composer.json
    - composer.lock
    - symfony.lock
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin
    - bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - public
    - public/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - src/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates
    - templates/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - translations
    - translations/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .env
    - .env
  - CmdLine:
    - set -eux;     mkdir -p var/cache var/log;     composer install --no-dev --prefer-dist
      --optimize-autoloader --no-progress --no-suggest;     composer dump-env prod;     composer
      clear-cache;     chmod +x bin/console; sync;
    Name: run
    PrependShell: true
  - CmdLine:
    - bin/console cache:clear --env=${APP_ENV} --no-debug
    Name: run
    PrependShell: true
  - CmdLine:
    - bin/console assets:install --env=${APP_ENV} --no-debug
    Name: run
    PrependShell: true
  - Chown: ""
    From: nodejs
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/public
    - public/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/php/supervisor/conf.d/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/php/docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data ${PROJECT_PATH}
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - docker-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    - -c
    - /etc/supervisor/conf.d/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: php:${PHP_VERSION}-cli
  Name: php
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION}-cli AS php
