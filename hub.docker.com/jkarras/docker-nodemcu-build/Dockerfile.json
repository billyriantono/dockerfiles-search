{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Maintainer": "marcelstoer",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends wget unzip git mkdocs s3cmd curl \u0026\u0026     curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \u0026\u0026     apt-get install git-lfs \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/nodemcu-firmware"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/nodemcu-firmware"
        },
        {
          "CmdLine": [
            "if [ -z \"$IMAGE_NAME\" ]; then       BRANCH=\"$(git rev-parse --abbrev-ref HEAD | sed -r 's/[\\/\\\\]+/_/g')\" \u0026\u0026       BUILD_DATE=\"$(date +%Y%m%d-%H%M)\" \u0026\u0026       IMAGE_NAME=${BRANCH}_${BUILD_DATE};     else true; fi \u0026\u0026     cp tools/esp-open-sdk.tar.* ../ \u0026\u0026     cd ..  \u0026\u0026     if [ -f ./esp-open-sdk.tar.xz ]; then         tar -Jxvf esp-open-sdk.tar.xz;     else         tar -zxvf esp-open-sdk.tar.gz;     fi \u0026\u0026     export PATH=$PATH:$PWD/esp-open-sdk/sdk:$PWD/esp-open-sdk/xtensa-lx106-elf/bin  \u0026\u0026     cd nodemcu-firmware  \u0026\u0026     if [ -z \"$INTEGER_ONLY\" ]; then       (make clean all \u0026\u0026       cd bin  \u0026\u0026       srec_cat -output nodemcu_float_\"${IMAGE_NAME}\".bin -binary 0x00000.bin -binary -fill 0xff 0x00000 0x10000 0x10000.bin -binary -offset 0x10000 \u0026\u0026       cp ../app/mapfile nodemcu_float_\"${IMAGE_NAME}\".map \u0026\u0026       cd ../);     else true; fi \u0026\u0026     if [ -z \"$FLOAT_ONLY\" ]; then       (make EXTRA_CCFLAGS=\"-DLUA_NUMBER_INTEGRAL\" clean all \u0026\u0026       cd bin \u0026\u0026       srec_cat -output nodemcu_integer_\"${IMAGE_NAME}\".bin -binary 0x00000.bin -binary -fill 0xff 0x00000 0x10000 0x10000.bin -binary -offset 0x10000 \u0026\u0026       cp ../app/mapfile nodemcu_integer_\"${IMAGE_NAME}\".map);     else true; fi"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}