{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie-20180426",
      "SourceCode": "FROM debian:jessie-20180426",
      "Platform": "",
      "From": {
        "Image": "debian:jessie-20180426"
      },
      "Commands": [
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": "3.4.2-2"
        },
        {
          "Key": "PIP3_VERSION",
          "Name": "arg",
          "Value": "1.5.6-5"
        },
        {
          "Key": "VIM_VERSION",
          "Name": "arg",
          "Value": "2:7.4.488-7+deb8u3"
        },
        {
          "Key": "UNZIP_VERSION",
          "Name": "arg",
          "Value": "6.0-16+deb8u3"
        },
        {
          "Key": "LIBYAML_VERSION",
          "Name": "arg",
          "Value": "0.1.6-3"
        },
        {
          "Key": "SSH_VERSION",
          "Name": "arg",
          "Value": "1:6.7p1-5+deb8u4"
        },
        {
          "Key": "JQ_VERSION",
          "Name": "arg",
          "Value": "1.4-2.1+deb8u1"
        },
        {
          "Key": "LIBLTDL7_VERSION",
          "Name": "arg",
          "Value": "2.4.2-1.11+b1"
        },
        {
          "Key": "PACKER_VERSION",
          "Name": "arg",
          "Value": "1.2.3"
        },
        {
          "Key": "CHEF_VERSION_MAJOR",
          "Name": "arg",
          "Value": "2.5.3"
        },
        {
          "Key": "CHEF_VERSION",
          "Name": "arg",
          "Value": "${CHEF_VERSION_MAJOR}-1"
        },
        {
          "Key": "DOCKER_VERSION",
          "Name": "arg",
          "Value": "18.03.1~ce-0~debian_amd64"
        },
        {
          "Key": "GO_VERSION",
          "Name": "arg",
          "Value": "1.10.2"
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "3.5.3"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026  apt-get --yes install man sudo bash-completion iptables git tar apt-transport-https zsh     curl \tpython3=${PYTHON_VERSION} \tpython3-pip=${PIP3_VERSION} \tlibyaml-dev=${LIBYAML_VERSION}\tvim=${VIM_VERSION} \tunzip=${UNZIP_VERSION} \tssh=${SSH_VERSION} \tjq=${JQ_VERSION} \tlibltdl7=${LIBLTDL7_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip     -o /tmp/packer.zip \u0026\u0026     unzip /tmp/packer.zip -d /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://packages.chef.io/files/stable/chefdk/${CHEF_VERSION_MAJOR}/debian/7/chefdk_${CHEF_VERSION}_amd64.deb     -o /tmp/chef.deb \u0026\u0026     dpkg --install /tmp/chef.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://download.docker.com/linux/debian/dists/jessie/pool/stable/amd64/docker-ce_${DOCKER_VERSION}.deb     -o /tmp/docker.deb \u0026\u0026     dpkg --install /tmp/docker.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz     -o /tmp/go.tar.gz \u0026\u0026     tar -C /usr/local -xzf /tmp/go.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/opt/maven"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS http://apache.claz.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz     -o /tmp/maven.tar.gz \u0026\u0026 \tmkdir -p /opt/maven \u0026\u0026     tar --strip-components=1 -C ${MAVEN_HOME} -xzf /tmp/maven.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./skel/*",
            "/etc/skel/"
          ]
        },
        {
          "Expression": "ARG LOGIN=bob",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG BASE_DIR=/home",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG GIT_NAME=UserName",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG GIT_EMAIL=UserEmail",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG UID=1000",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG GID=50",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG PASSWORD=youpi",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN mkdir -p ${BASE_DIR} \u0026\u0026 useradd \t--password $(openssl passwd -1 ${PASSWORD}) \t--comment 'Go!!!' \t--groups sudo,docker \t--create-home \t--shell /bin/bash \t--uid ${UID} \t--gid ${GID} \t--base-dir ${BASE_DIR} \t--home-dir ${BASE_DIR}/${LOGIN} \t--skel /etc/skel \t${LOGIN}",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers",
          "Name": "onbuild"
        },
        {
          "Expression": "USER ${LOGIN}",
          "Name": "onbuild"
        },
        {
          "Expression": "WORKDIR /${BASE_DIR}/${LOGIN}",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN git config --global user.name \"${GIT_NAME}\" \u0026\u0026       \t\tgit config --global user.email ${GIT_EMAIL} ",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN pip3 install pyyaml awscli docker-compose --upgrade --user",
          "Name": "onbuild"
        },
        {
          "Expression": "ENV GOPATH=/${BASE_DIR}/${LOGIN}/project             PATH=${PATH}:/${BASE_DIR}/${LOGIN}/.local/bin:/usr/local/go/bin:/${BASE_DIR}/${LOGIN}/project/bin:${MAVEN_HOME}/bin \t\t\tDOCKER_HOST=\"tcp://docker:2375\"",
          "Name": "onbuild"
        }
      ]
    }
  ]
}