{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Quinn D Granfor, spootdev@gmail.com",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "www.mediakraken.org.version",
              "Value": "\"dev-0.2.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"This image hosts the postgresql database\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION",
              "Value": "9.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/postgresql/$PG_MAJOR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add build-base readline-dev openssl-dev zlib-dev libxml2-dev glib-lang wget gnupg ca-certificates \u0026\u0026     gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026     gpg --list-keys --fingerprint --with-colons | sed -E -n -e 's/^fpr:::::::::([0-9A-F]+):$/\\1:6:/p' | gpg --import-ownertrust \u0026\u0026     wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64\" \u0026\u0026     wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64.asc\" \u0026\u0026     gpg --verify /usr/local/bin/gosu.asc \u0026\u0026     rm /usr/local/bin/gosu.asc \u0026\u0026     chmod +x /usr/local/bin/gosu \u0026\u0026     mkdir -p /docker-entrypoint-initdb.d \u0026\u0026     wget ftp://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2 -O /tmp/postgresql-$PG_VERSION.tar.bz2 \u0026\u0026     tar xvfj /tmp/postgresql-$PG_VERSION.tar.bz2 -C /tmp \u0026\u0026     cd /tmp/postgresql-$PG_VERSION \u0026\u0026 ./configure --enable-integer-datetimes --enable-thread-safety --prefix=/usr/local --with-libedit-preferred --with-openssl  \u0026\u0026 make world \u0026\u0026 make install world \u0026\u0026 make -C contrib install \u0026\u0026     cd /tmp/postgresql-$PG_VERSION/contrib \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     apk --purge del build-base openssl-dev zlib-dev libxml2-dev wget gnupg ca-certificates \u0026\u0026     rm -r /tmp/postgresql-$PG_VERSION* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql/data:/var/lib/postgresql/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}