MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Tristan Salles
    Name: maintainer
  - CmdLine:
    - apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git python-pip python-dev libzmq3 libzmq3-dev pkg-config
      libfreetype6-dev libpng3 libopenmpi-dev openmpi-bin libhdf5-dev liblapack-dev
      llvm-3.6 libedit-dev gfortran
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install -U pip  # fixes AssertionError in Ubuntu pip'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install enum34
    Name: run
    PrependShell: true
  - CmdLine:
    - LLVM_CONFIG=llvm-config-3.6 pip install llvmlite==0.8.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyter markupsafe zmq singledispatch backports_abc certifi jsonschema
      ipyparallel path.py matplotlib mpi4py==1.3.1 git+https://github.com/badlands-model/triangle
      pandas plotly
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libnetcdf-dev python-mpltoolkits.basemap
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Cython==0.20
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numba==0.23.1 ez_setup
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install gFlex
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install netcdf4
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install colorlover
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cmocean
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scikit-fuzzy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pyevtk
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.8.4
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/local/bin/tini
  - CmdLine:
    - chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /workspace
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /workspace
  - CmdLine:
    - git clone https://github.com/tristan-salles/PoC.git
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - /usr/local/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter notebook --ip=0.0.0.0 --no-browser     --NotebookApp.token='' --allow-root
      --NotebookApp.iopub_data_rate_limit=1.0e10
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
