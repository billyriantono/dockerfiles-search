{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Derek Bourgeois \u003cderek@ibourgeois.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APP_NAME",
              "Value": "app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_EMAIL",
              "Value": "app@laraedit.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_DOMAIN",
              "Value": "app.dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common curl build-essential     dos2unix gcc git libmcrypt4 libpcre3-dev memcached make python2.7-dev     python-pip re2c unattended-upgrades whois vim libnotify-bin nano wget     debconf-utils pkg-config autoconf zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:nginx/stable -y \u0026\u0026     apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LC_ALL=zh_CN.UTF-8\" \u003e\u003e /etc/default/locale  \u0026\u0026     locale-gen zh_CN.UTF-8  \u0026\u0026     ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".bash_aliases",
            "/root"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y --force-yes nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "homestead",
            "/etc/nginx/sites-available/"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /etc/nginx/sites-available/default \u0026\u0026     rm -rf /etc/nginx/sites-enabled/default \u0026\u0026     ln -fs /etc/nginx/sites-available/homestead /etc/nginx/sites-enabled/homestead \u0026\u0026     sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \u0026\u0026     sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf \u0026\u0026     echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026     mkdir -p /var/www/html/app \u0026\u0026     usermod -u 1000 www-data \u0026\u0026     chown -R www-data.www-data /var/www/html/ \u0026\u0026     sed -i -e\"s/worker_processes  1/worker_processes 5/\" /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/app"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "redis-3.1.2.tgz",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-beast-master.zip",
            "/"
          ]
        },
        {
          "CmdLine": [
            "wget http://am1.php.net/distributions/php-7.1.31.tar.gz     \u0026\u0026 apt-get install -y build-essential bison re2c pkg-config libxml2-dev libbz2-dev libssl-dev libcurl4-openssl-dev libjpeg-dev libpng12-dev libfreetype6-dev libgmp-dev libreadline6-dev libxslt1-dev libzip-dev     \u0026\u0026 tar zxvf php-7.1.31.tar.gz     \u0026\u0026 cd php-7.1.31     \u0026\u0026 ./configure --prefix=/usr/local/php         --with-curl         --with-freetype-dir         --with-gd         --with-gettext         --with-iconv-dir         --with-kerberos         --with-libdir=lib64         --with-libxml-dir         --with-mysqli         --with-openssl         --with-pcre-regex         --with-pdo-mysql         --with-pdo-sqlite         --with-pear         --with-png-dir         --with-xmlrpc         --with-xsl         --with-zlib         --enable-fpm         --enable-bcmath         --enable-libxml         --enable-inline-optimization         --enable-gd-native-ttf         --enable-mbregex         --enable-mbstring         --enable-opcache         --enable-pcntl         --enable-shmop         --enable-soap         --enable-sockets         --enable-sysvsem         --enable-xml         --enable-zip     \u0026\u0026  make     \u0026\u0026  make install     \u0026\u0026  echo \"export PATH=/usr/local/php/bin:$PATH\" \u003e\u003e /etc/profile     \u0026\u0026  ln -s /usr/local/php/bin/* /usr/local/bin/     \u0026\u0026  cp php.ini-development /usr/local/php/lib/php.ini     \u0026\u0026  cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf     \u0026\u0026  cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf     \u0026\u0026  sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /usr/local/php/lib/php.ini \u0026\u0026     sed -i \"s/display_errors = .*/display_errors = On/\" /usr/local/php/lib/php.ini \u0026\u0026     sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /usr/local/php/lib/php.ini \u0026\u0026     sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 100M/\" /usr/local/php/lib/php.ini \u0026\u0026     sed -i \"s/post_max_size = .*/post_max_size = 100M/\" /usr/local/php/lib/php.ini \u0026\u0026     sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /usr/local/php/lib/php.ini \u0026\u0026     sed -i \"s/;pid/pid/\" /usr/local/php/etc/php-fpm.conf \u0026\u0026     sed -i \"s/;daemonize = yes/daemonize = no/\" /usr/local/php/etc/php-fpm.conf \u0026\u0026     sed -i \"s/;error_log/error_log/\" /usr/local/php/etc/php-fpm.conf \u0026\u0026     sed -i \"s/user = nobody/user = www-data/\" /usr/local/php/etc/php-fpm.d/www.conf \u0026\u0026     sed -i \"s/group = nobody/group = www-data/\" /usr/local/php/etc/php-fpm.d/www.conf \u0026\u0026     mkdir -p /run/php/ \u0026\u0026 chown -Rf www-data.www-data /run/php     \u0026\u0026 chown -R www-data:www-data /usr/local/php/var/     \u0026\u0026 cd /     \u0026\u0026 tar zxf redis-3.1.2.tgz redis-3.1.2     \u0026\u0026 cd redis-3.1.2     \u0026\u0026 /usr/local/php/bin/phpize     \u0026\u0026 ./configure --with-php-config=/usr/local/php/bin/php-config     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo 'extension=redis.so' \u003e\u003e /usr/local/php/lib/php.ini     \u0026\u0026 cd /     \u0026\u0026 touch /var/log/beast.log     \u0026\u0026 chown -R www-data:www-data /var/log/beast.log     \u0026\u0026 chmod 777 /var/log/beast.log     \u0026\u0026 unzip php-beast-master.zip     \u0026\u0026 cd php-beast-master     \u0026\u0026 /usr/local/php/bin/phpize     \u0026\u0026 ./configure --with-php-config=/usr/local/php/bin/php-config     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo 'extension=beast.so' \u003e\u003e /usr/local/php/lib/php.ini     \u0026\u0026 echo 'beast.log_file = /var/log/beast.log' \u003e\u003e /usr/local/php/lib/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fastcgi_params",
            "/etc/nginx/"
          ]
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | /usr/local/php/bin/php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     printf \"\\nPATH=\\\"~/.composer/vendor/bin:\\$PATH\\\"\\n\" | tee -a ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y supervisor \u0026\u0026     mkdir -p /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/supervisor"
          ]
        },
        {
          "CmdLine": [
            "apt-get remove --purge -y software-properties-common \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     echo -n \u003e /var/lib/apt/extended_states \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /usr/share/man/?? \u0026\u0026     rm -rf /usr/share/man/??_* \u0026\u0026     rm -rf /php-7.1.31* \u0026\u0026     rm -rf /php-beast-master* \u0026\u0026     rm -rf /redis-3.1.2*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}