MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"rorono <kosuke19952000@gmail.com>"'
    Name: label
  - Env:
    - Key: USER
      Value: developer
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y language-pack-ja-base
      language-pack-ja     && apt-get clean     && rm -rf /var/lib/apt/lists/*     &&
      locale-gen ja_JP.UTF-8     && update-locale LANG=ja_JP.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y sudo gosu     && apt-get
      clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 1000 ${USER} &&     useradd  --uid 1000 --gid 1000 --groups sudo
      --create-home --shell $SHELL ${USER} &&     echo "${USER}:P@ssw0rd" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Defaults visiblepw'            >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y build-essential cmake
      file git curl wget ruby vim zsh python mysql-client bash-completion     && apt-get
      clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y libffi-dev libbz2-dev     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y libssl-dev libreadline-dev
      zlib1g-dev     && apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y libsqlite3-dev default-libmysqlclient-dev     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get upgrade -y     && apt-get clean     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - set -x     && sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"     &&
      sudo chown -R ${USER}:${USER} $HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && git clone https://github.com/Homebrew/brew $HOME/.linuxbrew/Homebrew     &&
      mkdir $HOME/.linuxbrew/bin     && ln -s ../Homebrew/bin/brew $HOME/.linuxbrew/bin     &&
      eval $($HOME/.linuxbrew/bin/brew shellenv)
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.linuxbrew/bin:$PATH
    Name: env
  - CmdLine:
    - set -x     && git clone https://github.com/anyenv/anyenv $HOME/.anyenv
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.anyenv/bin:$PATH
    Name: env
  - CmdLine:
    - set -x     && echo 'eval "$(anyenv init -)"' >> $HOME/.bashrc     && anyenv
      install --force-init
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && anyenv install rbenv     && anyenv install nodenv     && anyenv
      install goenv     && exec $SHELL -l
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && eval "$(anyenv init -)"     && rbenv install 2.6.3     && rbenv
      global 2.6.3     && gem install rails bundler foreman     && nodenv install
      12.1.0     && nodenv global 12.1.0     && npm install -g yarn http-server
    Name: run
    PrependShell: true
  - Chown: developer:developer
    Name: add
    SourcesAndDest:
    - .zshrc
    - $HOME
  - Chown: developer:developer
    Name: add
    SourcesAndDest:
    - .bashrc
    - $HOME
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
