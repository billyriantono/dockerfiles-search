MetaArgs: null
Stages:
- As: build
  BaseName: docker.io/library/golang:alpine
  Commands:
  - Name: workdir
    Path: /src
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - set -x && mkdir -pv /tmp/bin &&     GOOS=linux   GOARCH=arm   go build -v -o
      /tmp/bin/arm .     &     GOOS=linux   GOARCH=arm64 go build -v -o /tmp/bin/arm64
      .   &     GOOS=linux   GOARCH=386   go build -v -o /tmp/bin/386 .     &     GOOS=linux   GOARCH=amd64
      go build -v -o /tmp/bin/amd64 .   &     GOOS=darwin  GOARCH=amd64 go build -v
      -o /tmp/bin/darwin .  &     GOOS=windows GOARCH=amd64 go build -v -o /tmp/bin/windows
      . &     wait
    Name: run
    PrependShell: true
  From:
    Image: docker.io/library/golang:alpine
  Name: build
  Platform: ""
  SourceCode: FROM docker.io/library/golang:alpine AS build
- BaseName: scratch
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Manuel Hutter (https://github.com/mhutter)"'
    Name: label
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/bin/
    - /
  - CmdLine:
    - /amd64
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
