MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: thaiphamquoc@gmail.com
    Name: maintainer
  - Env:
    - Key: VERTICA_VERSION
      Value: 9.2.0
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openssh-server openssh-client mcelog gdb sysstat dialog
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y curl \t&& curl -o /usr/local/bin/gosu -SL 'https://github.com/tianon/gosu/releases/download/1.1/gosu'
      \t&& chmod +x /usr/local/bin/gosu"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: '"/bin/bash"'
    Name: env
  - CmdLine:
    - groupadd -r verticadba
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -r -m -g verticadba dbadmin
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s /bin/bash dbadmin
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s /bin/bash root
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dbadmin -       nice    0" >> /etc/security/limits.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dbadmin -       nofile  65536" >> /etc/security/limits.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y --no-install-recommends wget     && wget https://github.com/thaiphamquoc/vertica-binary/releases/download/v${VERTICA_VERSION}/vertica.deb
      \t&& dpkg -i vertica.deb"
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/vertica/sbin/install_vertica --license CE --accept-eula --hosts 127.0.0.1
      --dba-user-password-disabled --failure-threshold NONE --no-system-configuration
    Name: run
    PrependShell: true
  - Name: user
    User: dbadmin
  - CmdLine:
    - /opt/vertica/bin/admintools -t create_db -s localhost --skip-fs-checks -d docker
      -c /home/dbadmin/docker/catalog -D /home/dbadmin/docker/data
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir /tmp/.python-eggs
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R dbadmin /tmp/.python-eggs
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_EGG_CACHE
      Value: /tmp/.python-eggs
    Name: env
  - Env:
    - Key: VERTICADATA
      Value: /home/dbadmin/docker
    Name: env
  - Name: volume
    Volumes:
    - /home/dbadmin/docker
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5433"
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
