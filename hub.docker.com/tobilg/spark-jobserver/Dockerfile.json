{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.3",
      "SourceCode": "FROM ubuntu:14.04.3",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.3"
      },
      "Commands": [
        {
          "Maintainer": "tobilg \u003cfb.tools.github@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends --force-yes     wget     git     openjdk-7-jre     libjansi-java     libsvn1     libcurl3     libsasl2-modules \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "2.10.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "1.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MESOS_BUILD_VERSION",
              "Value": "0.25.0-0.2.70"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_JOBSERVER_BRANCH",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \u0026\u0026     dpkg -i sbt-$SBT_VERSION.deb \u0026\u0026     rm sbt-$SBT_VERSION.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.deb \u0026\u0026     dpkg -i scala-$SCALA_VERSION.deb \u0026\u0026     rm scala-$SCALA_VERSION.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://downloads.mesosphere.io/master/ubuntu/14.04/mesos_$MESOS_BUILD_VERSION.ubuntu1404_amd64.deb \u0026\u0026     dpkg -i mesos_$MESOS_BUILD_VERSION.ubuntu1404_amd64.deb \u0026\u0026     rm mesos_$MESOS_BUILD_VERSION.ubuntu1404_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION_STRING",
              "Value": "spark-$SPARK_VERSION-bin-hadoop2.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_DOWNLOAD_URL",
              "Value": "http://d3kbcqa49mib13.cloudfront.net/$SPARK_VERSION_STRING.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget $SPARK_DOWNLOAD_URL \u0026\u0026     mkdir -p /usr/local/spark \u0026\u0026     tar xvf $SPARK_VERSION_STRING.tgz -C /tmp \u0026\u0026     cp -rf /tmp/$SPARK_VERSION_STRING/* /usr/local/spark/ \u0026\u0026     rm -rf -- /tmp/$SPARK_VERSION_STRING \u0026\u0026     rm spark-$SPARK_VERSION-bin-hadoop2.6.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MESOS_NATIVE_JAVA_LIBRARY",
              "Value": "/usr/local/lib/libmesos.so"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /database"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_JOBSERVER_BUILD_HOME",
              "Value": "/spark-jobserver"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_JOBSERVER_APP_HOME",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone --branch $SPARK_JOBSERVER_BRANCH https://github.com/spark-jobserver/spark-jobserver.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $SPARK_JOBSERVER_APP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker.conf",
            "$SPARK_JOBSERVER_BUILD_HOME/config/docker.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker.sh",
            "$SPARK_JOBSERVER_BUILD_HOME/config/docker.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "log4j-docker.properties",
            "$SPARK_JOBSERVER_BUILD_HOME/config/log4j-server.properties"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "server_deploy.sh",
            "$SPARK_JOBSERVER_BUILD_HOME/bin/server_deploy.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x $SPARK_JOBSERVER_BUILD_HOME/bin/server_deploy.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x $SPARK_JOBSERVER_BUILD_HOME/bin/server_start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x $SPARK_JOBSERVER_BUILD_HOME/bin/server_stop.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SPARK_JOBSERVER_BUILD_HOME"
        },
        {
          "CmdLine": [
            "bin/server_deploy.sh docker \u0026\u0026     cd / \u0026\u0026     rm -rf -- $SPARK_JOBSERVER_BUILD_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unset SPARK_VERSION_STRING \u0026\u0026     unset SPARK_DOWNLOAD_URL \u0026\u0026     unset SPARK_JOBSERVER_BRANCH \u0026\u0026     unset SPARK_JOBSERVER_BUILD_HOME \u0026\u0026     unset MESOS_BUILD_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8090",
            "9999"
          ]
        },
        {
          "CmdLine": [
            "/app/server_start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}