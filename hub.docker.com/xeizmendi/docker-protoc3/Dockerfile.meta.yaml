MetaArgs: null
Stages:
- BaseName: python:3.6
  Commands:
  - CmdLine:
    - "apt-get update\t&& apt-get install -y --no-install-recommends unzip \t&& rm
      -fr /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.11.2
    Name: env
  - CmdLine:
    - "set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\"
      in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1dfe664fa3d8ad714bbd15a36627992effd150ddabd7523931f077b3926d736d'
      ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b9d16a8eb1f7b8fdadd27232f6300aa8b4427e5e4cb148c4be4089db8fb56429'
      ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='98a42b9b8d3bacbcc6351a1e39af52eff582d0bc3ac804cd5a97ce497dd84026'
      ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e74f2f37b43b9b1bcf18008a11e0efb8921b41dff399a4f48ac09a4f25729881'
      ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='23291935a299fdfde4b6a988ce3faa0c7a498aab6d56bbafbf1e7476468529a3'
      ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a67ef820ef8cfecc8d68c69dd5bf513aaf647c09b6605570af425bf5fe8a32f0'
      ;; \t\t*) goRelArch='src'; goRelSha256='042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550';
      \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not
      have a corresponding Go binary release; will be building from source\"; echo
      >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";
      \tcurl -L -s -o go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum
      -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\"
      = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo
      >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and
      uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\";
      \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Env:
    - Key: PROTOBUF_VERSION
      Value: 3.6.1
    Name: env
  - CmdLine:
    - "curl -L -s https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-cpp-${PROTOBUF_VERSION}.tar.gz
      -o /tmp/protobuf.tar.gz \t&& tar -xzf /tmp/protobuf.tar.gz -C /tmp \t&& rm -f
      /tmp/protobuf.tar.gz \t&& cd /tmp/protobuf-${PROTOBUF_VERSION}     && ./configure
      \t&& make \t&& make install \t&& ldconfig \t&& rm -rf /tmp/protobuf-${PROTOBUF_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/golang/protobuf/proto github.com/golang/protobuf/protoc-gen-go
      github.com/gogo/protobuf/protoc-gen-gofast
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/gogo/protobuf/gogoproto github.com/gogo/protobuf/protoc-gen-gogofast
      github.com/gogo/protobuf/protoc-gen-gogofaster github.com/gogo/protobuf/protoc-gen-gogoslick
    Name: run
    PrependShell: true
  - Env:
    - Key: GRPC_VERSION
      Value: 1.16.1
    Name: env
  - CmdLine:
    - "pip3 install grpcio==${GRPC_VERSION} \t&& pip3 install grpcio-tools==${GRPC_VERSION}
      \t&& git clone -b v${GRPC_VERSION} https://github.com/grpc/grpc /tmp/grpc \t&&
      cd /tmp/grpc \t&& git submodule update --init \t&& make \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/protoc
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
