MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Kunal Singh <knlsingh394@gmail.com>
    Name: maintainer
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Labels:
    - Key: version
      Value: '"1.0"'
    - Key: description
      Value: '"Docker build file providing a generic scanner docker image exposing
        different web app scanners and a few system auditers in order to use the image
        as a command line tool"'
    Name: label
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LYNIS_HOME
      Value: /opt/lynis
    - Key: NIKTO_HOME
      Value: /opt/nikto
    - Key: FISH_HOME
      Value: /opt/skipfish
    - Key: SQLMAP_HOME
      Value: /opt/sqlmap
    - Key: WAPITI_HOME
      Value: /opt/wapiti
    - Key: ZAP_HOME
      Value: /opt/zap
    - Key: NIKTO_VERSION
      Value: 2.1.5
    - Key: ZAP_VERSION
      Value: 2.5.0
    - Key: FISH_VERSION
      Value: 2.10b
    - Key: WAPITI_VERSION
      Value: 2.3.0
    - Key: LYNIS_VERSION
      Value: 2.2.0
    Name: env
  - CmdLine:
    - echo "LYNIS_HOME=$LYNIS_HOME" >> /etc/environment &&     echo "NIKTO_HOME=$NIKTO_HOME"
      >> /etc/environment &&     echo "FISH_HOME=$FISH_HOME" >> /etc/environment &&     echo
      "SQLMAP_HOME=$SQLMAP_HOME" >> /etc/environment &&     echo "WAPITI_HOME=$WAPITI_HOME"
      >> /etc/environment &&     echo "ZAP_HOME=$ZAP_HOME" >> /etc/environment &&     mkdir
      $NIKTO_HOME &&     mkdir $ZAP_HOME &&     mkdir $FISH_HOME &&     mkdir $WAPITI_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y install git python     libnet-ssleay-perl openjdk-7-jre     openssl
      perl wget gcc tar make    libidn11-dev libssl-dev     libcrypto++-dev libpcre3-dev     libcurl4-openssl-dev
      libpcre3-dev     nmap     python-dev python-requests     python-ctypes python-beautifulsoup     --fix-missing
      &&     apt-get -y autoclean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/lynis.tgz http://cisofy.com/files/lynis-${LYNIS_VERSION}.tar.gz
      &&     tar -xzf /tmp/lynis.tgz -C /opt &&     chmod -R +x $LYNIS_HOME &&     chmod
      -R 640 $LYNIS_HOME/include &&     rm -rf /tmp/lynis.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/nikto.tgz http://www.cirt.net/nikto/nikto-${NIKTO_VERSION}.tar.gz
      &&     tar --strip-components=1 -xzf /tmp/nikto.tgz -C $NIKTO_HOME &&     chmod
      -R +x $NIKTO_HOME &&     perl $NIKTO_HOME/nikto.pl -update &&     perl $NIKTO_HOME/nikto.pl
      -Version &&     rm -rf /tmp/nikto.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/skipfish.tgz https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/skipfish/skipfish-2.10b.tgz
      &&     tar --strip-components=1 -xzf /tmp/skipfish.tgz -C $FISH_HOME &&     chmod
      -R +x $FISH_HOME &&     cd $FISH_HOME &&     chmod -R +x $FISH_HOME &&     sed
      -i '/SHOW_SPLASH/d' src/config.h &&     make &&     touch $FISH_HOME/output.wl
      &&     rm -rf /tmp/skipfish.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && git clone https://github.com/sqlmapproject/sqlmap.git &&     chmod
      -R +x $SQLMAP_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/wapiti.tgz http://netcologne.dl.sourceforge.net/project/wapiti/wapiti/wapiti-${WAPITI_VERSION}/wapiti-${WAPITI_VERSION}.tar.gz
      &&     tar --strip-components=1 -zxf /tmp/wapiti.tgz -C $WAPITI_HOME &&     chmod
      -R +x $WAPITI_HOME &&     rm -rf /tmp/wapiti.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/zap.tgz https://github.com/zaproxy/zaproxy/releases/download/${ZAP_VERSION}/ZAP_${ZAP_VERSION}_Linux.tar.gz
      &&     tar --strip-components=1 -xzf /tmp/zap.tgz -C $ZAP_HOME &&     chmod
      -R +x $ZAP_HOME &&     /bin/bash $ZAP_HOME/zap.sh -version &&     rm -rf /tmp/zap.tgz
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $FISH_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zap-aggressive-scan-policy.policy
    - /root/.ZAP/policies/zap-aggressive-scan-policy.policy
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scan.sh
    - /root/scan.sh
  - CmdLine:
    - chmod +x /root/scan.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - /root/scan.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
