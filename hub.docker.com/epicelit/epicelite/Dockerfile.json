{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:4",
      "SourceCode": "FROM node:4",
      "Platform": "",
      "From": {
        "Image": "node:4"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/crontab",
            "/etc/cron.d/paphos-analytics"
          ]
        },
        {
          "CmdLine": [
            "mkdir /src \u0026\u0026 npm install nodemon bower gulp-cli -g \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y cron wget nginx \u0026\u0026 chmod 0644 /etc/cron.d/paphos-analytics"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/v0.2.0/dockerize-linux-amd64-v0.2.0.tar.gz \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.2.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -v /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx/nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/src"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "CmdLine": [
            "apt-get install -y default-jdk \u0026\u0026 npm install \u0026\u0026 cd api \u0026\u0026 npm install \u0026\u0026 cd .. \u0026\u0026 bower install --allow-root \u0026\u0026 mkdir /src/api/reports \u0026\u0026 chmod -R 0777 /src/api/reports"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "NODE_ENV=production gulp build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 0777 /src/uploads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5000",
            "80"
          ]
        },
        {
          "CmdLine": [
            "dockerize -wait http://mongo:27017 -wait http://rabbitmq:15672 -timeout 60s cron \u0026\u0026 service nginx start \u0026\u0026 NODE_ENV=production npm start"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}