MetaArgs: null
Stages:
- BaseName: node:4
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/crontab
    - /etc/cron.d/paphos-analytics
  - CmdLine:
    - mkdir /src && npm install nodemon bower gulp-cli -g && apt-get update && apt-get
      install -y cron wget nginx && chmod 0644 /etc/cron.d/paphos-analytics
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/v0.2.0/dockerize-linux-amd64-v0.2.0.tar.gz
      && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.2.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -v /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - /src
  - Name: workdir
    Path: /src
  - CmdLine:
    - apt-get install -y default-jdk && npm install && cd api && npm install && cd
      .. && bower install --allow-root && mkdir /src/api/reports && chmod -R 0777
      /src/api/reports
    Name: run
    PrependShell: true
  - CmdLine:
    - NODE_ENV=production gulp build
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0777 /src/uploads
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5000"
    - "80"
  - CmdLine:
    - dockerize -wait http://mongo:27017 -wait http://rabbitmq:15672 -timeout 60s
      cron && service nginx start && NODE_ENV=production npm start
    Name: cmd
    PrependShell: true
  From:
    Image: node:4
  Name: ""
  Platform: ""
  SourceCode: FROM node:4
