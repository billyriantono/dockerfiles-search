MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - Labels:
    - Key: authors
      Value: '"Nicolas D. <nd@nidum.org> / Simon Baerlocher <s.baerlocher@sbaerlocher.ch>"'
    Name: label
  - Env:
    - Key: TMPDIR
      Value: /tmp
    Name: env
  - CmdLine:
    - "apt-get update &&   apt-get install \t\tgit \t\tlibldap2-dev \t\tlibcurl4-gnutls-dev
      \t\tcurl \t\tlibicu-dev \t\tlibmcrypt-dev \t\tlibvpx-dev \t\tlibjpeg-dev \t\tlibpng-dev
      \t\tlibxpm-dev \t\tzlib1g-dev \t\tlibfreetype6-dev \t\tlibxml2-dev \t\tlibexpat1-dev
      \t\tlibbz2-dev \t\tlibgmp3-dev \t\tlibldap2-dev \t\tunixodbc-dev \t\tlibpq-dev
      \t\tlibsqlite3-dev \t\tlibaspell-dev \t\tlibsnmp-dev \t\tlibpcre3-dev \t\tlibtidy-dev
      \t\tbuild-essential \t\tlibkrb5-dev \t\tlibedit-dev \t\tlibedit2 \t\tgcc \t\tlibmcrypt4
      \t\tmake \t\tpython2.7-dev \t\tpython-pip \t\tre2c \t\twget \t\tsqlite3 \t\tlibmemcached-dev
      \t\tlibc-client-dev -yqq \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure imap --with-imap-ssl --with-kerberos --with-imap
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mbstring    mcrypt    pdo_pgsql    pdo_mysql    json    intl    gd    xml    zip    bz2    opcache    pgsql    pdo_sqlite   intl    bcmath    soap    ldap    imap    readline
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu     && docker-php-ext-enable apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pcntl     && docker-php-ext-enable pcntl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y   libmagickwand-dev --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick && docker-php-ext-enable imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug     && docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install xvfb libgtkextra-dev libnss3 libgconf-2-4
      wget gnupg2 -yqq
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install google-chrome-stable -yqq
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /usr/local/share/composer
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: PATH
      Value: '"$COMPOSER_HOME:$COMPOSER_HOME/vendor/bin:$PATH"'
    Name: env
  - CmdLine:
    - mkdir -pv $COMPOSER_HOME && chmod -R g+w $COMPOSER_HOME   && curl -o /tmp/composer-setup.php
      https://getcomposer.org/installer   && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   &&
      php -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php'))     !==
      trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php');     echo
      'Invalid installer' . PHP_EOL; exit(1); }"   && php /tmp/composer-setup.php
      --filename=composer --install-dir=$COMPOSER_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq  software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://phar.phpunit.de/phpunit.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x phpunit.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - mv phpunit.phar /usr/local/bin/phpunit
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yq upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yq autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yq clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php.ini
    - /usr/local/etc/php/php.ini
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
