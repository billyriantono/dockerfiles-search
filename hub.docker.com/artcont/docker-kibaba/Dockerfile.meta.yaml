MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - CmdLine:
    - groupadd -r kibana && useradd -r -m -g kibana kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     apt-transport-https ca-certificates
      wget libfontconfig libfreetype6 --no-install-recommends     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\"
      \t&& wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5 \t&& gpg --batch --verify
      /usr/local/bin/tini.asc /usr/local/bin/tini \t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/tini.asc
      \t&& chmod +x /usr/local/bin/tini \t&& tini -h"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='46095ACC8548582C1A2699A9D27D666CD88E42B4'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg
      --export \"$key\" > /etc/apt/trusted.gpg.d/elastic.gpg; \trm -rf \"$GNUPGHOME\";
      \tapt-key list"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb https://artifacts.elastic.co/packages/6.x-prerelease/apt stable main'
      > /etc/apt/sources.list.d/kibana.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends
      kibana \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/kibana/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - kibana.yml
    - /kibana/kibana.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
