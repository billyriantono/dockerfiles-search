{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Lars Tingelstad \u003clars.tingelstad@ntnu.no\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install     wget     curl     git     cmake     zsh     build-essential     ninja-build     python-pip     libpython-dev     libpng-dev    libfreetype6-dev     libgoogle-glog-dev     libatlas-base-dev     libeigen3-dev     libsuitesparse-dev     clang-3.8     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "clang-3.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "clang++-3.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade     pip     virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/     \u0026\u0026 curl -SL http://ceres-solver.org/ceres-solver-1.11.0.tar.gz     | tar -xvzC /usr/src/     \u0026\u0026 mkdir -p /usr/src/ceres-solver-1.11.0/build     \u0026\u0026 cd /usr/src/ceres-solver-1.11.0/build     \u0026\u0026 cmake -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF ..     \u0026\u0026 make -j12     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/     \u0026\u0026 git clone https://github.com/google/benchmark.git     \u0026\u0026 mkdir -p /usr/src/benchmark/build/     \u0026\u0026 cd /usr/src/benchmark/build/     \u0026\u0026 cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true ..     \u0026\u0026 make -j12     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://github.com/krallin/tini/releases/download/v0.9.0/tini     \u0026\u0026 echo \"faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872 *tini\" | sha256sum -c -     \u0026\u0026 mv tini /usr/local/bin/tini     \u0026\u0026 chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/zsh -N -u 1000 game"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "game"
        },
        {
          "CmdLine": [
            "mkdir /home/game/game/     \u0026\u0026 mkdir /home/game/.jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/game/     \u0026\u0026 virtualenv python     \u0026\u0026 . python/bin/activate     \u0026\u0026 pip install        numpy        matplotlib        scipy        notebook     \u0026\u0026 git clone https://github.com/tingelst/pythreejs.git     \u0026\u0026 cd pythreejs     \u0026\u0026 pip install -e .     \u0026\u0026 jupyter nbextension install --py --symlink --user pythreejs     \u0026\u0026 jupyter nbextension enable --py --user pythreejs     \u0026\u0026 jupyter nbextension enable --py --sys-prefix widgetsnbextension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/game/game"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/home/game/.jupyter/"
          ]
        },
        {
          "CmdLine": [
            "chown -R game:users /home/game/.jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "game"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/game/game/python"
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/zsh",
            "-c",
            "source /home/game/python/bin/activate \u0026\u0026 jupyter notebook"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}