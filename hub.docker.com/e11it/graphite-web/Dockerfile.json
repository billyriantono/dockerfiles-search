{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "\u003cim@e11it.ru\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk -U upgrade \u0026\u0026 apk -U add python ca-certificates \u0026\u0026 update-ca-certificates \u0026\u0026     apk add --no-cache nginx supervisor build-base python-dev py-pip py-cffi py2-cairo tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install https://github.com/graphite-project/graphite-web/archive/1.0.2.tar.gz \u0026\u0026     pip install -r /tmp/requirements.txt --trusted-host pypi.python.org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -S graphite \u0026\u0026 \tadduser -S graphite -G graphite \u0026\u0026 \tmkdir -p /opt/graphite/webapp/graphite /var/log/graphite /opt/graphite/storage/whisper /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "UTC"
            },
            {
              "Key": "GRAPHITE_STORAGE_DIR",
              "Value": "/opt/graphite/storage"
            },
            {
              "Key": "GRAPHITE_CONF_DIR",
              "Value": "/opt/graphite/conf"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "/opt/graphite/webapp"
            },
            {
              "Key": "LOG_DIR",
              "Value": "/var/log/graphite"
            },
            {
              "Key": "DEFAULT_INDEX_TABLESPACE",
              "Value": "graphite"
            },
            {
              "Key": "GUNICORN_WORKERS",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/graphite_wsgi.py",
            "/opt/graphite/conf/graphite_wsgi.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/local_settings.py",
            "/opt/graphite/webapp/graphite/local_settings.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/initial_data.json",
            "/opt/graphite/webapp/graphite/initial_data.json"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/graphouse.py",
            "/opt/graphite/webapp/graphite/graphouse.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "cd /opt/graphite/webapp/graphite \u0026\u0026 django-admin.py migrate --run-syncdb --settings=graphite.settings --pythonpath=webapp \u0026\u0026 \t    chown -R graphite:graphite /opt/graphite /var/log/graphite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/graphite/webapp"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}