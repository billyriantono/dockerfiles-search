MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - mkdir /code
    Name: run
    PrependShell: true
  - Env:
    - Key: DEPS_HIVE
      Value: '"libsasl2-2"'
    - Key: DEPS_LXML
      Value: '"libxml2 libxslt1.1"'
    - Key: DEPS_M2CRYPTO
      Value: '"libssl1.0.0"'
    - Key: DEPS_MYSQL
      Value: '"libmysqlclient18"'
    - Key: DEPS_PILLOW
      Value: '"libjpeg62-turbo libopenjpeg5 libpng12-0 zlib1g"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends         ${DEPS_HIVE}         ${DEPS_LXML}         ${DEPS_M2CRYPTO}         ${DEPS_MYSQL}         ${DEPS_PILLOW}         curl         git         make         mysql-client         nodejs         python-pip         wget         &&     apt-get
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install virtualenv &&     virtualenv /virtualenv &&     echo . /virtualenv/bin/activate
      >/etc/profile.d/virtualenv.sh &&     . /virtualenv/bin/activate &&     pip install
      -U pip wheel
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /virtualenv/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/pip_install.sh
    - /pip/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements
    - /pip/requirements/
  - Env:
    - Key: DEPS_HIVE
      Value: '"libsasl2-dev"'
    - Key: DEPS_LXML
      Value: '"libxml2-dev libxslt-dev"'
    - Key: DEPS_M2CRYPTO
      Value: '"swig libssl-dev dpkg-dev"'
    - Key: DEPS_MYSQL
      Value: '"libmysqlclient-dev"'
    - Key: DEPS_PILLOW
      Value: '"libjpeg-dev libopenjpeg-dev libpng-dev zlib1g-dev"'
    Name: env
  - CmdLine:
    - deps="         g++         ${DEPS_HIVE}         ${DEPS_LXML}         ${DEPS_M2CRYPTO}         ${DEPS_MYSQL}         ${DEPS_PILLOW}         python-dev     ";     cd
      /pip &&             apt-get update &&     apt-get install -y --no-install-recommends
      $deps &&             sed -n 's/^# \(git+.*\)/\1/p' <requirements/git.txt >requirements/docker-git.txt
      &&     sh pip_install.sh wheel --wheel-dir=./wheels         -r requirements/docker-git.txt
      &&             sh pip_install.sh wheel --wheel-dir=./wheels         -r requirements/docker-build.txt
      &&             apt-get purge -y --auto-remove $deps &&     apt-get clean &&     rm
      -rf build cache/http
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
