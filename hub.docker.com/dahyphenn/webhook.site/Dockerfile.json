{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm-alpine",
      "SourceCode": "FROM php:7.1-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Daniel Davidson \u003cgithub.com/da-n\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "UID",
          "Name": "arg",
          "Value": "1501"
        },
        {
          "Key": "GID",
          "Name": "arg",
          "Value": "1501"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 echo http://dl-2.alpinelinux.org/alpine/edge/community/ \u003e\u003e /etc/apk/repositories \t\u0026\u0026 apk add --update --no-cache \t\talpine-sdk \t\tautoconf \t\tcurl \t\tcurl-dev \t\tgit \t\tnginx \t\tpostgresql-dev \t\tpostgresql-libs \t\tsupervisor \t\ttar \t\u0026\u0026 docker-php-ext-install \t\tcurl \t\tmysqli \t\tpdo_mysql \t\tpdo_pgsql \t\tpgsql \t\u0026\u0026 addgroup -g ${GID} app \t\u0026\u0026 adduser -u ${UID} -h /opt/app -H -G app -s /sbin/nologin -D app \t\u0026\u0026 mkdir -p /opt/app \t\u0026\u0026 curl -o /tmp/composer-setup.php https://getcomposer.org/installer \t\u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \t\u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \t\u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot \t\u0026\u0026 git clone https://github.com/fredsted/webhook.site.git /opt/app/ \t\u0026\u0026 apk del \t\talpine-sdk \t\tautoconf \t\tcurl \t\tcurl-dev \t\tgit \t\tpostgresql-libs \t\ttar \t\u0026\u0026 rm -rf /var/cache/apk/* \t\u0026\u0026 cd /opt/app/ \t\u0026\u0026 cp .env.example .env \t\u0026\u0026 composer install \t\u0026\u0026 php artisan key:generate \t\u0026\u0026 touch database/database.sqlite \t\u0026\u0026 php artisan migrate \t\u0026\u0026 chown -R app:app /opt/app \t\u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}