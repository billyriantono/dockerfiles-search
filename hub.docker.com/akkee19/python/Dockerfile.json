{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "9.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual .fetch-deps     gnupg     openssl     tar     xz     \u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"   \u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\"   \u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz   \u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc   \u0026\u0026 mkdir -p /usr/src/python   \u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz   \u0026\u0026 rm python.tar.xz     \u0026\u0026 apk add --no-cache --virtual .build-deps      bzip2-dev     gcc     gdbm-dev     libc-dev     linux-headers     make     ncurses-dev     openssl     openssl-dev     pax-utils     readline-dev     sqlite-dev     tcl-dev     tk     tk-dev     xz-dev     zlib-dev   \u0026\u0026 apk del .fetch-deps     \u0026\u0026 cd /usr/src/python   \u0026\u0026 ./configure     --enable-loadable-sqlite-extensions     --enable-shared   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 make install     \u0026\u0026 if [ ! -e /usr/local/bin/pip3 ]; then :     \u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py'     \u0026\u0026 python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\"     \u0026\u0026 rm /tmp/get-pip.py   ; fi   \u0026\u0026 pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\"   \u0026\u0026 [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ]     \u0026\u0026 find /usr/local -depth     \\(       \\( -type d -a -name test -o -name tests \\)       -o       \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\)     \\) -exec rm -rf '{}' +   \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner --recursive /usr/local       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --virtual .python-rundeps $runDeps   \u0026\u0026 apk del .build-deps   \u0026\u0026 rm -rf /usr/src/python ~/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin   \u0026\u0026 { [ -e easy_install ] || ln -s easy_install-* easy_install; }   \u0026\u0026 ln -s idle3 idle   \u0026\u0026 ln -s pydoc3 pydoc   \u0026\u0026 ln -s python3 python   \u0026\u0026 ln -s python3-config python-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}