MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-runtime-ubuntu14.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"MICROSOFT CORPORATION"'
    Name: label
  - Labels:
    - Key: com.microsoft.cntk.version
      Value: '"2.0.beta15.0"'
    Name: label
  - Env:
    - Key: CNTK_VERSION
      Value: '"2.0.beta15.0"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         ca-certificates         wget         gcc         g++         make         libjasper1         libjpeg8         libpng12-0         libgfortran3         &&     apt-get
      -y autoremove         &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - OPENMPI_VERSION="1.10.4" &&     OPENMPI_SHA1="84d035e7ab1572e5ebc086049f05b694d2158844"
      &&     wget -q https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-${OPENMPI_VERSION}.tar.gz
      &&     echo "$OPENMPI_SHA1 openmpi-${OPENMPI_VERSION}.tar.gz" | sha1sum --check
      --strict - &&     tar -xzf openmpi-${OPENMPI_VERSION}.tar.gz &&     cd openmpi-${OPENMPI_VERSION}
      &&     ./configure --prefix=/usr/local/mpi &&     make -j"$(nproc)" install
      &&     cd .. &&     rm -rf /openmpi-${OPENMPI_VERSION} &&     rm -rf openmpi-${OPENMPI_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/mpi/bin:$PATH
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/mpi/lib:$LD_LIBRARY_PATH
    Name: env
  - CmdLine:
    - ANACONDA_PREFIX="/root/anaconda3" &&     ANACONDA_VERSION="3-4.1.1" &&     ANACONDA_SHA256="4f5c95feb0e7efeadd3d348dcef117d7787c799f24b0429e45017008f3534e55"
      &&     wget -q https://repo.continuum.io/archive/Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh
      &&     echo "$ANACONDA_SHA256 Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh" |
      sha256sum --check --strict - &&     chmod a+x ./Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh
      &&     ./Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh -b -p ${ANACONDA_PREFIX}
      &&     rm -rf /Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh &&     $ANACONDA_PREFIX/bin/conda
      clean --all --yes
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-cntk-docker.sh
    - /root
  - CmdLine:
    - CNTK_VERSION_DASHED=$(echo $CNTK_VERSION | tr . -) &&     CNTK_SHA256="26c4f2fb38b6e96f2b94ea1561e57db1bc35f98be36392058116a030bcab1dfc"
      &&     wget -q https://cntk.ai/BinaryDrop/CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-GPU.tar.gz
      &&     echo "$CNTK_SHA256 CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-GPU.tar.gz"
      | sha256sum --check --strict - &&     tar -xzf CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-GPU.tar.gz
      &&     rm -f CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-GPU.tar.gz &&     mv /root/install-cntk-docker.sh
      /cntk/Scripts/install/linux &&     /bin/bash /cntk/Scripts/install/linux/install-cntk-docker.sh
      &&     /root/anaconda3/bin/conda clean --all --yes &&     rm -rf /cntk/cntk/python
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /cntk/cntk/bin:$PATH
    - Key: LD_LIBRARY_PATH
      Value: /cntk/cntk/lib:/cntk/cntk/dependencies/lib:$LD_LIBRARY_PATH
    Name: env
  - Name: workdir
    Path: /root
  From:
    Image: nvidia/cuda:8.0-runtime-ubuntu14.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-runtime-ubuntu14.04
