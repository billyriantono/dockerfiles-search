{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "microsoft/dotnet:2.0.0-preview1-sdk",
      "SourceCode": "FROM microsoft/dotnet:2.0.0-preview1-sdk",
      "Platform": "",
      "From": {
        "Image": "microsoft/dotnet:2.0.0-preview1-sdk"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ASPNETCORE_URLS",
              "Value": "http://+:80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildDeps='xz-utils'     \u0026\u0026 set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1     \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt     \u0026\u0026 apt-get purge -y --auto-remove $buildDeps     \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs     \u0026\u0026 npm install -g bower gulp     \u0026\u0026 echo '{ \"allow_root\": true }' \u003e /root/.bowerrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for url in       'https://dotnetcli.blob.core.windows.net/dotnet/release/1.1.0/Binaries/1.1.2/dotnet-debian-x64.1.1.2.tar.gz'       'https://dotnetcli.blob.core.windows.net/dotnet/preview/Binaries/1.0.5/dotnet-debian-x64.1.0.5.tar.gz';     do       echo \"Downloading and installing from $url\"       \u0026\u0026 curl -SL $url --output /tmp/dotnet.tar.gz       \u0026\u0026 mkdir -p /usr/share/dotnet       \u0026\u0026 tar -zxf /tmp/dotnet.tar.gz -C /usr/share/dotnet       \u0026\u0026 rm /tmp/dotnet.tar.gz;     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -H 'Cache-Control: no-cache' -o /tmp/Microsoft.Docker.Sdk.tar.gz https://distaspnet.blob.core.windows.net/sdk/Microsoft.Docker.Sdk.tar.gz     \u0026\u0026 cd /usr/share/dotnet/sdk/${DOTNET_SDK_VERSION}/Sdks     \u0026\u0026 tar xvf /tmp/Microsoft.Docker.Sdk.tar.gz     \u0026\u0026 rm /tmp/Microsoft.Docker.Sdk.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "packagescache.csproj",
            "/tmp/warmup/"
          ]
        },
        {
          "CmdLine": [
            "dotnet restore /tmp/warmup/packagescache.csproj       --source https://api.nuget.org/v3/index.json     \u0026\u0026 rm -rf /tmp/warmup/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        }
      ]
    }
  ]
}