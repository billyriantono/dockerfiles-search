MetaArgs: null
Stages:
- BaseName: mongo:3.4
  Commands:
  - CmdLine:
    - groupadd -r redis && useradd -r -g redis redis
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -ex; \t\tfetchDeps='ca-certificates wget'; \tapt-get update; \tapt-get
      install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*;
      \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget
      -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc;
      \tchmod +x /usr/local/bin/gosu; \tgosu nobody true; \t\tapt-get purge -y --auto-remove
      $fetchDeps"
    Name: run
    PrependShell: true
  - Env:
    - Key: REDIS_VERSION
      Value: 3.2.11
    Name: env
  - Env:
    - Key: REDIS_DOWNLOAD_URL
      Value: http://download.redis.io/releases/redis-3.2.11.tar.gz
    Name: env
  - Env:
    - Key: REDIS_DOWNLOAD_SHA
      Value: 31ae927cab09f90c9ca5954aab7aeecc3bb4da6087d3d12ba0a929ceb54081b5
    Name: env
  - CmdLine:
    - "set -ex; \t\tbuildDeps=' \t\twget \t\t\t\tgcc \t\tlibc6-dev \t\tmake \t'; \tapt-get
      update; \tapt-get install -y $buildDeps --no-install-recommends; \trm -rf /var/lib/apt/lists/*;
      \t\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \techo \"$REDIS_DOWNLOAD_SHA
      *redis.tar.gz\" | sha256sum -c -; \tmkdir -p /usr/src/redis; \ttar -xzf redis.tar.gz
      -C /usr/src/redis --strip-components=1; \trm redis.tar.gz; \t\tgrep -q '^#define
      CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \tsed -ri 's!^(#define
      CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \tgrep
      -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h;
      \t\tmake -C /usr/src/redis -j \"$(nproc)\"; \tmake -C /usr/src/redis install;
      \t\trm -r /usr/src/redis; \t\tapt-get purge -y --auto-remove $buildDeps"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update > dev/null &&         apt-get install -y git curl python3-pip
      build-essential libssl-dev libffi-dev python-dev software-properties-common
      zip &&         curl -sL https://deb.nodesource.com/setup_8.x | bash &&         apt-get
      install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/.yarn/bin:/root/.config/yarn/global/node_modules/.bin:$PATH"'
    Name: env
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - npm install -g mkg20001/wait-for-mongo wait-for-redis
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn global add mkg20001/wait-for-mongo wait-for-redis
    Name: run
    PrependShell: true
  From:
    Image: mongo:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM mongo:3.4
