MetaArgs: null
Stages:
- BaseName: php:7.2-apache
  Commands:
  - Labels:
    - Key: Maintainer
      Value: '"Alex Sharkov <blade.didan@gmail.com>"'
    Name: label
  - CmdLine:
    - "set -ex; \t\tif command -v a2enmod; then \t\ta2enmod rewrite; \tfi; \t\tsavedAptMark=\"$(apt-mark
      showmanual)\"; \t\tapt-get update; \tapt-get install -y --no-install-recommends
      \t\tlibjpeg-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibzip-dev \t; \t\tdocker-php-ext-configure
      gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-install -j \"$(nproc)\"
      \t\tgd \t\topcache \t\tpdo_mysql \t\tpdo_pgsql \t\tzip \t; \t\tapt-mark auto
      '.*' > /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so
      \t\t| awk '/=>/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t|
      cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge
      -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8';
      \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60';
      \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} > /usr/local/etc/php/conf.d/opcache-recommended.ini"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Env:
    - Key: DRUPAL_VERSION
      Value: 8.6.16
    Name: env
  - Env:
    - Key: DRUPAL_MD5
      Value: a0683ae0b0ea99845a6bf45383671cb9
    Name: env
  - CmdLine:
    - "curl -fSL \"https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz\"
      -o drupal.tar.gz \t&& echo \"${DRUPAL_MD5} *drupal.tar.gz\" | md5sum -c - \t&&
      tar -xz --strip-components=1 -f drupal.tar.gz \t&& rm drupal.tar.gz \t&& chown
      -R www-data:www-data sites modules themes"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq     && apt-get install -y git ssh lsof zip unzip vim lynx
      curl aspell-en jq imagemagick libmagickwand-dev rsync sudo wget
    Name: run
    PrependShell: true
  - CmdLine:
    - git --version     && ssh -V     && lsof -v     && zip --version     && unzip
      -v     && vim --version     && lynx --version     && curl --version     && aspell
      --version     && jq --version
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELLCHECK_VERSION
      Value: 0.6.0
    Name: env
  - CmdLine:
    - curl -L -o "/tmp/shellcheck-v$SHELLCHECK_VERSION.tar.xz" "https://storage.googleapis.com/shellcheck/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz"   &&
      tar --xz -xvf "/tmp/shellcheck-v${SHELLCHECK_VERSION}.tar.xz"   && mv "shellcheck-v${SHELLCHECK_VERSION}/shellcheck"
      /usr/bin/   && shellcheck --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /tmp/docker-18.06.1-ce.tgz https://download.docker.com/linux/static/stable/x86_64/docker-18.06.1-ce.tgz     &&
      tar -xz -C /tmp -f /tmp/docker-18.06.1-ce.tgz     && mv /tmp/docker/* /usr/bin     &&
      docker --version     && curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/docker-compose     &&
      docker-compose --version
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl -L -o /usr/local/bin/composer https://getcomposer.org/download/1.6.3/composer.phar     &&
      echo "52cb7bbbaee720471e3b34c8ae6db53a38f0b759c06078a80080db739e4dcab6 /usr/local/bin/composer"
      | sha256sum     && chmod +x /usr/local/bin/composer     && composer --version     &&
      composer global require hirak/prestissimo     && composer clear-cache
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /root/.nvm
    Name: env
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh
      | bash   && . $HOME/.nvm/nvm.sh   && nvm --version
    Name: run
    PrependShell: true
  - Env:
    - Key: SHIPPABLE_NODE_VERSION
      Value: v10.15.3
    Name: env
  - CmdLine:
    - ". $HOME/.nvm/nvm.sh \t&& nvm install $SHIPPABLE_NODE_VERSION \t&& nvm alias
      default $SHIPPABLE_NODE_VERSION \t&& nvm use default \t&& npm --version"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/$SHIPPABLE_NODE_VERSION/bin:$PATH
    Name: env
  - Env:
    - Key: GOSS_FILES_STRATEGY
      Value: cp
    Name: env
  - CmdLine:
    - curl -fsSL https://goss.rocks/install | sh   && goss --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /tmp/bats.tar.gz https://github.com/bats-core/bats-core/archive/v1.1.0.tar.gz     &&
      mkdir -p /tmp/bats && tar -xz -C /tmp/bats -f /tmp/bats.tar.gz --strip 1     &&
      cd /tmp/bats     && ./install.sh /usr/local     && bats -v     && rm -Rf /tmp/bats
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/ahoy-cli/ahoy/releases/download/2.0.0/ahoy-bin-`uname
      -s`-amd64 -o /usr/local/bin/ahoy   && chmod +x /usr/local/bin/ahoy   && ahoy
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /usr/local/bin/pygmy  && chmod +x /usr/local/bin/pygmy
    Name: run
    PrependShell: true
  From:
    Image: php:7.2-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-apache
