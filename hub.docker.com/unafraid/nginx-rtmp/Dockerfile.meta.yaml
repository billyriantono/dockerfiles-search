MetaArgs: null
Stages:
- BaseName: buildpack-deps:stretch
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: nginx-1.17.0
    Name: env
  - Env:
    - Key: NGINX_RTMP_MODULE_VERSION
      Value: 1.2.2
    Name: env
  - Env:
    - Key: NGINX_FANCYINDEX_MODULE_VERSION
      Value: 0.4.3
    Name: env
  - Env:
    - Key: PCRE_VERSION
      Value: "8.43"
    Name: env
  - Env:
    - Key: ZLIB_VERSION
      Value: 1.2.11
    Name: env
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.1.0g
    Name: env
  - Env:
    - Key: GO_HEALTH_CHECK_VERSION
      Value: "1.1"
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y ca-certificates openssl libssl-dev
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/nginx &&     cd /tmp/build/nginx &&     wget -O ${NGINX_VERSION}.tar.gz
      https://nginx.org/download/${NGINX_VERSION}.tar.gz &&     tar -zxf ${NGINX_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/nginx-rtmp-module &&     cd /tmp/build/nginx-rtmp-module
      &&     wget -O nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}.tar.gz https://github.com/UnAfraid/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz
      &&     tar -zxf nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}.tar.gz &&     cd
      nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/nginx-fancyindex-module &&     cd /tmp/build/nginx-fancyindex-module
      &&     wget -O ngx-fancyindex-${NGINX_FANCYINDEX_MODULE_VERSION}.tar.gz https://github.com/aperezdc/ngx-fancyindex/archive/v${NGINX_FANCYINDEX_MODULE_VERSION}.tar.gz
      &&     tar -xzf ngx-fancyindex-${NGINX_FANCYINDEX_MODULE_VERSION}.tar.gz &&     cd
      ngx-fancyindex-${NGINX_FANCYINDEX_MODULE_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/pcre/ &&     cd /tmp/build/pcre &&    wget -O pcre-${PCRE_VERSION}.tar.gz
      https://ftp.pcre.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz &&     tar -xzf pcre-${PCRE_VERSION}.tar.gz
      &&     cd pcre-${PCRE_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/zlib/ &&     cd /tmp/build/zlib &&    wget -O zlib-${ZLIB_VERSION}.tar.gz
      http://www.zlib.net/zlib-${ZLIB_VERSION}.tar.gz &&     tar -xzf zlib-${ZLIB_VERSION}.tar.gz
      &&     cd zlib-${ZLIB_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/openssl/ &&     cd /tmp/build/openssl &&    wget -O openssl-${OPENSSL_VERSION}.tar.gz
      https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz &&     tar
      -xzf openssl-${OPENSSL_VERSION}.tar.gz &&     cd openssl-${OPENSSL_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/build/go-health-check/ &&     cd /tmp/build/go-health-check &&    wget
      -O go-health-check_${GO_HEALTH_CHECK_VERSION}_linux_amd64.tar.gz https://github.com/UnAfraid/go-health-check/releases/download/v${GO_HEALTH_CHECK_VERSION}/go-health-check_${GO_HEALTH_CHECK_VERSION}_linux_amd64.tar.gz
      &&     tar -xzf go-health-check_${GO_HEALTH_CHECK_VERSION}_linux_amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp/build/nginx/${NGINX_VERSION} &&     ./configure         --prefix=/usr/share/nginx
      \        --sbin-path=/usr/local/sbin/nginx         --modules-path=/usr/lib/nginx/modules
      \        --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log
      \        --http-log-path=/var/log/nginx/access.log         --pid-path=/run/nginx.pid
      \        --lock-path=/var/lock/nginx.lock         --with-openssl=/tmp/build/openssl/openssl-${OPENSSL_VERSION}
      \        --with-openssl-opt=enable-ec_nistp_64_gcc_128         --with-openssl-opt=no-nextprotoneg
      \        --with-openssl-opt=no-weak-ssl-ciphers         --with-openssl-opt=no-ssl3
      \        --with-pcre=/tmp/build/pcre/pcre-${PCRE_VERSION}         --with-pcre-jit
      \        --with-zlib=/tmp/build/zlib/zlib-${ZLIB_VERSION}         --with-compat
      \        --with-file-aio         --with-threads         --with-http_addition_module
      \        --with-http_auth_request_module         --with-http_dav_module         --with-http_flv_module
      \        --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_mp4_module
      \        --with-http_random_index_module         --with-http_realip_module         --with-http_slice_module
      \        --with-http_ssl_module         --with-http_sub_module         --with-http_stub_status_module
      \        --with-http_v2_module         --with-http_secure_link_module         --with-mail
      \        --with-mail_ssl_module         --with-stream         --with-stream_realip_module
      \        --with-stream_ssl_module         --with-stream_ssl_preread_module         --add-module=/tmp/build/nginx-rtmp-module/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}
      \        --add-module=/tmp/build/nginx-fancyindex-module/ngx-fancyindex-${NGINX_FANCYINDEX_MODULE_VERSION}
      &&     make -j $(getconf _NPROCESSORS_ONLN) &&     make install &&     mkdir
      /var/lock/nginx ls && \tmv /tmp/build/go-health-check/go-health-check /usr/local/bin/go-health-check
      &&     rm -rf /tmp/build"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log &&     ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/conf/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/conf/default.conf
    - /etc/nginx/sites-enabled/default.conf
  - CmdLine:
    - mkdir -p /var/www/rtmp &&     mkdir -p /var/www/rtmp/hls &&     mkdir -p /var/www/rtmp/streaming
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/web/stat.xsl
    - /var/www/rtmp/stat.xsl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/web/index.html
    - /var/www/rtmp/index.html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/web/dash.html
    - /var/www/rtmp/dash.html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/web/hls.html
    - /var/www/rtmp/hls.html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/web/js
    - /var/www/rtmp/js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/web/css
    - /var/www/rtmp/css
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/bin/entry-point.sh
    - /usr/local/bin/entry-point.sh
  - CmdLine:
    - 'chown -R www-data: /var/www/'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /etc/nginx
  - CmdLine:
    - /usr/local/bin/entry-point.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "1935"
  From:
    Image: buildpack-deps:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:stretch
