{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jre",
      "SourceCode": "FROM openjdk:8-jre",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jre"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CEREBRO_VERSION",
              "Value": "0.6.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x         \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"         \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"         \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"         \u0026\u0026 gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4         \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu         \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc         \u0026\u0026 chmod +x /usr/local/bin/gosu         \u0026\u0026 gosu nobody true         \u0026\u0026 cd /opt/         \u0026\u0026 wget -O cerebro-${CEREBRO_VERSION}.tgz https://github.com/lmenezes/cerebro/releases/download/v${CEREBRO_VERSION}/cerebro-${CEREBRO_VERSION}.tgz         \u0026\u0026 mkdir -p /opt/cerebro         \u0026\u0026 tar zxvf cerebro-${CEREBRO_VERSION}.tgz -C /opt/cerebro --strip-components=1         \u0026\u0026 rm cerebro-${CEREBRO_VERSION}.tgz         \u0026\u0026 groupadd cerebro \u0026\u0026 useradd -g cerebro cerebro         \u0026\u0026 chown cerebro:cerebro -R /opt/cerebro         \u0026\u0026 wget -O /usr/local/bin/confd https://github.com/kelseyhightower/confd/releases/download/v0.11.0/confd-0.11.0-linux-amd64         \u0026\u0026 chmod +x /usr/local/bin/confd         \u0026\u0026 mkdir -p /etc/confd/{conf.d,templates}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/application.toml",
            "/etc/confd/conf.d/application.toml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/application.conf.tmpl",
            "/etc/confd/templates/application.conf.tmpl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/cerebro"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}