MetaArgs: null
Stages:
- BaseName: tozd/runit
  Commands:
  - Name: expose
    Ports:
    - 3000/tcp
  - Name: volume
    Volumes:
    - /var/log/meteor
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc
    - /etc
  - Expression: COPY . /source
    Name: onbuild
  - Expression: ENV HOME /
    Name: onbuild
  - Expression: RUN apt-get update -q -q &&  apt-get --yes --force-yes install build-essential
      python curl &&  if [ -x /source/docker-source.sh ]; then /source/docker-source.sh;
      fi &&  cp -a /source /build &&  rm -rf /source &&  export METEOR_ALLOW_SUPERUSER=true
      &&  curl https://install.meteor.com/ | sed s/--progress-bar/-sL/g | sh &&  cd
      /build &&  meteor list &&  if [ -f package.json ]; then meteor npm install --production;
      fi &&  meteor build --headless . &&  cd / &&  tar xf /build/build.tar.gz &&  rm
      -rf /build &&  export "NODE=$(find /.meteor/ -path '*bin/node' | grep '/.meteor/packages/meteor-tool/'
      | sort | head -n 1)" &&  ln -sf ${NODE} /usr/local/bin/node &&  echo "export
      NODE_PATH=\"$(dirname $(dirname "$NODE"))/lib/node_modules\"" >> /etc/service/meteor/run.env
      &&  apt-get --yes --force-yes purge curl &&  apt-get --yes --force-yes autoremove
      &&  adduser --system --group meteor --home /
    Name: onbuild
  - Env:
    - Key: ROOT_URL
      Value: http://example.com
    Name: env
  - Env:
    - Key: MAIL_URL
      Value: smtp://user:password@mailhost:port/
    Name: env
  - Env:
    - Key: METEOR_SETTINGS
      Value: '{}'
    Name: env
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Env:
    - Key: MONGO_URL
      Value: mongodb://mongodb/meteor
    Name: env
  - Env:
    - Key: MONGO_OPLOG_URL
      Value: mongodb://mongodb/local
    Name: env
  From:
    Image: tozd/runit
  Name: ""
  Platform: ""
  SourceCode: FROM tozd/runit
