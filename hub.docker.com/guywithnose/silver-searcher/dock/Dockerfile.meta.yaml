MetaArgs: null
Stages:
- As: builder
  BaseName: alpine:3.11
  Commands:
  - Key: WILDMIDI_VERSION
    Name: arg
    Value: 0.4.3
  - Key: CHROMAPRINT_VERSION
    Name: arg
    Value: 1.4.3
  - Key: OPUS_VERSION
    Name: arg
    Value: 1.3.1
  - Key: OPUSENC_VERSION
    Name: arg
    Value: 0.2.1
  - Key: TWOLAME_VERSION
    Name: arg
    Value: 0.4.0
  - Key: AUDIOFILE_VERSION
    Name: arg
    Value: 0.3.6
  - Key: MPD_VERSION
    Name: arg
    Value: 0.20.23
  - CmdLine:
    - "apk update   && apk add \talpine-sdk \tboost-dev \tautoconf \tautomake \tlibtool
      \        meson \tlibmpdclient-dev \tlibvorbis-dev \tlibsamplerate-dev \tlibid3tag-dev
      \tmpg123-dev \tflac-dev \tffmpeg-dev \talsa-lib-dev \tsqlite-dev \tlibmad-dev
      \tlame-dev \tlibsndfile-dev \tfaac-dev \tfaad2-dev \tsoxr-dev \tlibcdio-dev
      \tbzip2-dev \tcurl-dev \twavpack-dev \tsndio-dev \tlibmodplug-dev \tyajl-dev
      \tlibshout-dev \tpcre-dev \tzziplib-dev \tlibgcrypt-dev \tlibmms-dev \ticu-dev
      \tlibnfs-dev \twget"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/tatsuz/musepack/archive/master.zip
    - /
  - CmdLine:
    - cd /   && unzip master.zip   && rm -f master.zip   && cd musepack-master   &&
      wget http://deb.debian.org/debian/pool/main/libm/libmpc/libmpc_0.1~r495-1.debian.tar.xz   &&
      tar xvf libmpc_0.1~r495-1.debian.tar.xz   && for i in $(cat debian/patches/series);
      do echo $i; patch -p1 < debian/patches/$i; done   && libtoolize --force   &&
      aclocal   && autoheader   && automake --force-missing --add-missing   && autoconf   &&
      ./configure --prefix=/usr   && make DESTDIR=/build install   && cp -av /build/*
      /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/Mindwerks/wildmidi/archive/wildmidi-${WILDMIDI_VERSION}.tar.gz
    - /
  - CmdLine:
    - tar xzf /wildmidi-${WILDMIDI_VERSION}.tar.gz -C /   && cd /wildmidi-wildmidi-${WILDMIDI_VERSION}   &&
      libtoolize --force   && cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE=Release
      -DBUILD_TOOLS=ON .   && make DESTDIR=/build install   && cp -av /build/* /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VERSION}/chromaprint-${CHROMAPRINT_VERSION}.tar.gz
    - /
  - CmdLine:
    - tar xzf /chromaprint-${CHROMAPRINT_VERSION}.tar.gz -C /   && cd /chromaprint-v${CHROMAPRINT_VERSION}   &&
      libtoolize --force   && cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE=Release
      -DBUILD_TOOLS=ON .   && make DESTDIR=/build install   && cp -av /build/* /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz
    - /
  - CmdLine:
    - tar xzf /opus-${OPUS_VERSION}.tar.gz -C /   && cd /opus-${OPUS_VERSION}   &&
      ./configure --prefix=/usr --disable-static --disable-doc --disable-extra-programs
      --enable-custom-modes   && make DESTDIR=/build install   && cp -av /build/*
      /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://archive.mozilla.org/pub/opus/libopusenc-${OPUSENC_VERSION}.tar.gz
    - /
  - CmdLine:
    - tar xzf /libopusenc-${OPUSENC_VERSION}.tar.gz -C /   && cd /libopusenc-${OPUSENC_VERSION}   &&
      ./configure --prefix=/usr --disable-static --disable-doc --disable-examples   &&
      make DESTDIR=/build install   && cp -av /build/* /
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://downloads.sourceforge.net/twolame/twolame-${TWOLAME_VERSION}.tar.gz
      -O /twolame-${TWOLAME_VERSION}.tar.gz   && tar xzf /twolame-${TWOLAME_VERSION}.tar.gz
      -C /   && cd /twolame-${TWOLAME_VERSION}   && ./configure --prefix=/usr --disable-static   &&
      make DESTDIR=/build install   && cp -av /build/* /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://audiofile.68k.org/audiofile-${AUDIOFILE_VERSION}.tar.gz
    - /
  - Env:
    - Key: CXXFLAGS
      Value: -fpermissive
    Name: env
  - CmdLine:
    - tar xzf /audiofile-${AUDIOFILE_VERSION}.tar.gz -C /   && cd /audiofile-${AUDIOFILE_VERSION}   &&
      ./configure --prefix=/usr --disable-docs --disable-examples --disable-static   &&
      make DESTDIR=/build install   && cp -av /build/* /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/MusicPlayerDaemon/MPD/archive/v${MPD_VERSION}.tar.gz
    - /
  - Env:
    - Key: DESTDIR
      Value: /build
    Name: env
  - CmdLine:
    - tar xzf /v${MPD_VERSION}.tar.gz -C /   && cd /MPD-${MPD_VERSION}   && bash -c
      '[ -f autogen.sh ] && ./autogen.sh || true'   && bash -c '[ -f configure ] &&
      ./configure --enable-dsd --prefix=/usr --sysconfdir=/etc --localstatedir=/var
      --runstatedir=/run && make DESTDIR=/build install || true'   && bash -c '[ -f
      meson.build ] && meson --prefix=/usr --sysconfdir=/etc --localstatedir=/var
      build && cd build && ninja && ninja install || true'   && mkdir -p /build/var/lib/mpd/playlists
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.11
  Name: builder
  Platform: ""
  SourceCode: FROM alpine:3.11 AS builder
- As: runner
  BaseName: alpine:3.11
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"@gutmensch https://github.com/gutmensch"'
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/just-containers/s6-overlay/releases/download/v1.22.1.0/s6-overlay-amd64.tar.gz
    - /tmp/
  - CmdLine:
    - tar xzf /tmp/s6-overlay-amd64.tar.gz -C /
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /build/
    - /
  - CmdLine:
    - adduser -D -g '' ympd
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk -q update     && apk -q --no-progress add \tlibmpdclient \tflac \tyajl
      \tlibsndfile \tlibsamplerate \tlibvorbis \tfaad2-libs \tsndio-libs \tlibshout
      \tmpg123-libs \tlibid3tag \tlibcurl \tlibmad \tffmpeg-libs \tsoxr \tlame \twavpack
      \tpcre \tsqlite-libs \tlibmodplug \tzziplib \tlibgcrypt \tlibmms \ticu-libs
      \tlibnfs \tlibcdio \tympd \tmpc \talsa-utils     && rm -rf /var/cache/apk/*
      \    && mkdir -p /var/lib/mpd/playlists"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mpd
    - /media/music
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./manifest/
    - /
  - Name: expose
    Ports:
    - "6600"
  - Name: expose
    Ports:
    - "8800"
  - Name: expose
    Ports:
    - "8000"
  - Name: expose
    Ports:
    - "8866"
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.11
  Name: runner
  Platform: ""
  SourceCode: FROM alpine:3.11 AS runner
