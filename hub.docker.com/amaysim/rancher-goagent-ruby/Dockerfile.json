{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.1",
      "SourceCode": "FROM ruby:2.3.1",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOCD_VERSION",
              "Value": "16.7.0"
            },
            {
              "Key": "GOCD_RELEASE",
              "Value": "go-agent"
            },
            {
              "Key": "GOCD_REVISION",
              "Value": "3819"
            },
            {
              "Key": "GOCD_HOME",
              "Value": "/opt/go-agent"
            },
            {
              "Key": "PATH",
              "Value": "$GOCD_HOME:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOCD_REPO",
              "Value": "https://download.go.cd/binaries/${GOCD_VERSION}-${GOCD_REVISION}/generic"
            },
            {
              "Key": "GOCD_RELEASE_ARCHIVE",
              "Value": "${GOCD_RELEASE}-${GOCD_VERSION}-${GOCD_REVISION}.zip"
            },
            {
              "Key": "SERVER_WORK_DIR",
              "Value": "${GOCD_HOME}/work"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     curl -L -O https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026     tar xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp \u0026\u0026     mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin/phantomjs /usr/local/bin \u0026\u0026     rm -rf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends zip unzip nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/log/go-agent /var/run/go-agent \u0026\u0026    cd /opt \u0026\u0026 curl -sSL ${GOCD_REPO}/${GOCD_RELEASE_ARCHIVE} -O \u0026\u0026 unzip ${GOCD_RELEASE_ARCHIVE} \u0026\u0026 rm ${GOCD_RELEASE_ARCHIVE} \u0026\u0026    mv /opt/${GOCD_RELEASE}-${GOCD_VERSION} ${GOCD_HOME} \u0026\u0026    chmod 774 ${GOCD_HOME}/*.sh \u0026\u0026    mkdir -p ${GOCD_HOME}/work \u0026\u0026    gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://httpredir.debian.org/debian jessie-backports main' \u003e /etc/apt/sources.list.d/jessie-backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} \u003e /usr/local/bin/docker-java-home \t\u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u102"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_DEBIAN_VERSION",
              "Value": "8u102-b14.1-1~bpo8+1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CA_CERTIFICATES_JAVA_VERSION",
              "Value": "20140324"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y     python-dev \t\topenjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\" \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t\u0026\u0026 [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026    python get-pip.py \u0026\u0026    rm get-pip.py \u0026\u0026    pip install awscli \u0026\u0026    pip install docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gocd-entrypoint.sh",
            "/usr/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}