MetaArgs: null
Stages:
- BaseName: docker.io/ubuntu:19.10
  Commands:
  - Maintainer: Denis Arnaud <denis.arnaud_github at m4x dot org>
    Name: maintainer
  - Labels:
    - Key: version
      Value: '"0.1"'
    Name: label
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: HOME
      Value: /home/build
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: $LANG
    Name: env
  - Env:
    - Key: SOCI_VER
      Value: 4.0.0
    Name: env
  - CmdLine:
    - echo "Europe/Paris" > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90-yes
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update
    Name: run
    PrependShell: true
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends \tapt-utils
      apt-transport-https \tca-certificates locales tzdata sudo \tzip unzip gzip bzip2
      xz-utils tar unrar p7zip-full \tcurl wget netcat net-tools aptitude"
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen $LANG && update-locale LANG=$LANG LANGUAGE=$LANGUAGE LC_ALL=$LC_ALL
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -y install less htop screen \tgit keychain gawk \tbash-completion vim-nox
      emacs-nox apt-utils keyutils ftp \tzlib1g-dev libbz2-dev \tlsb-release libgmp-dev
      \tgcc g++ cppcheck clang cmake manpages patch pkg-config \tm4 autoconf automake
      libtool libltdl-dev build-essential \tflex bison \tlibboost-all-dev libxapian-dev
      \tlibreadline-dev libncurses5-dev \tlibzmqpp-dev libssl-dev libffi-dev \tswig
      graphviz libopenblas-dev &&     apt-get -y install libmpich-dev libopenmpi-dev
      \tsqlite3 libsqlite3-dev \tmysql-client libmysqlclient-dev libmysql++-dev \tpostgresql-server-dev-all
      \tlibicu-dev libprotobuf-dev protobuf-compiler \tpython libpython-dev python3
      libpython3-dev \tpython3-django libapache2-mod-wsgi-py3 \tlibgeos++-dev \tdoxygen
      ghostscript texlive-latex-recommended \tr-base r-base-dev \trake"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/soci
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - resources/soci-debian-cmake.patch
    - /opt/soci/soci-debian-cmake.patch
  - CmdLine:
    - "wget https://github.com/SOCI/soci/archive/$SOCI_VER.tar.gz \t  -O /opt/soci/soci-$SOCI_VER.tar.gz
      && cd /opt/soci && \ttar zxf soci-$SOCI_VER.tar.gz && rm -f soci-$SOCI_VER.tar.gz
      && \tcd soci-$SOCI_VER && patch -p1 < ../soci-debian-cmake.patch && \tmkdir
      -p build && cd build && \tcmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release
      \t  -DSOCI_TESTS=OFF .. && \tmake install"
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --disabled-password --gecos "" build
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "build ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/build &&     chmod 0440
      /etc/sudoers.d/build
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.ssh && chmod 700 $HOME/.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - resources/bashrc
    - $HOME/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - resources/gitconfig
    - $HOME/.gitconfig
  - Chown: ""
    Name: add
    SourcesAndDest:
    - resources/vimrc
    - $HOME/.vimrc
  - CmdLine:
    - chmod 640 $HOME/.bashrc $HOME/.gitconfig $HOME/.vimrc
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R build.build $HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - Name: user
    User: build
  - CmdLine:
    - git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt
      --depth=1
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.pyenv/bin:$HOME/.pyenv/shims:$PATH
    Name: env
  - CmdLine:
    - pyenv install 3.7.6 &&     pyenv global 3.7.6 &&     pip install -U pip pipenv
      &&     pyenv global system
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: docker.io/ubuntu:19.10
  Name: ""
  Platform: ""
  SourceCode: FROM docker.io/ubuntu:19.10
