MetaArgs: null
Stages:
- BaseName: debian:stable-slim
  Commands:
  - Maintainer: Ender Tekin <etekin@wisc.edu>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TF_BINARY_URL
      Value: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.0.0-cp27-none-linux_x86_64.whl
    Name: env
  - Env:
    - Key: OPENCV_REPO_URL
      Value: git://github.com/opencv/opencv.git
    Name: env
  - Env:
    - Key: OPENCV_CONTRIB_REPO_URL
      Value: git://github.com/opencv/opencv_contrib.git
    Name: env
  - Env:
    - Key: OPENCV_VERSION
      Value: 3.2.0
    Name: env
  - CmdLine:
    - "apt-get update &&     apt-get install -y -q apt-utils build-essential cmake
      git pkg-config &&     apt-get install -y -q python2.7 python2.7-dev python-pip
      &&     apt-get install -y -q libavformat-dev libavcodec-dev libavfilter-dev
      libswscale-dev &&     apt-get install -y -q libjpeg-dev libpng-dev libtiff-dev
      libjasper-dev libeigen3-dev &&     apt-get install -y -q libtesseract-dev libgtk2.0-dev
      &&     apt-get autoremove &&     apt-get clean &&     pip install --upgrade
      pip &&     pip install numpy &&     pip install ${TF_BINARY_URL} &&     cd /tmp
      &&     git clone --depth 1 --branch $OPENCV_VERSION $OPENCV_REPO_URL &&     git
      clone --depth 1 --branch $OPENCV_VERSION $OPENCV_CONTRIB_REPO_URL &&     cd
      opencv &&     mkdir build &&     cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE
      \t-D CMAKE_INSTALL_PREFIX=/usr/local \t-D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules
      .. &&     make -j$(nproc) &&     make install &&     cd /tmp &&     rm -rf opencv
      &&     rm -rf opencv_contrib"
    Name: run
    PrependShell: true
  From:
    Image: debian:stable-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stable-slim
