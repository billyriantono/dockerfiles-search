MetaArgs: null
Stages:
- BaseName: mhart/alpine-node:10
  Commands:
  - CmdLine:
    - apk add --update python make g++ libpng-dev autoconf zlib zlib-dev automake
      libtool nasm
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add curl git subversion openssh openssl mercurial tini bash zlib-dev
      bash coreutils
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "===> Installing sudo to emulate normal OS behavior..."  &&     apk --update
      add sudo                                         &&             echo "===> Adding
      Python runtime..."  &&     apk --update add python py-pip openssl ca-certificates    &&     apk
      --update add --virtual build-dependencies                 python-dev libffi-dev
      openssl-dev build-base  &&     pip install --upgrade pip cffi                            &&             echo
      "===> Installing Ansible..."  &&     pip install ansible                &&             echo
      "===> Installing handy tools (not absolutely required)..."  &&     pip install
      --upgrade pywinrm                  &&     apk --update add sshpass openssh-client
      rsync  &&             echo "===> Removing package list..."  &&     apk del build-dependencies            &&     rm
      -rf /var/cache/apk/*               &&             echo "===> Adding hosts for
      convenience..."  &&     mkdir -p /etc/ansible                        &&     echo
      'localhost' > /etc/ansible/hosts
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://php.codecasts.rocks/php-alpine.rsa.pub
    - /etc/apk/keys/php-alpine.rsa.pub
  - CmdLine:
    - apk --update add ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-json
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-phar
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-dom
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-json
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-xml
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-iconv
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-mbstring
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-zlib
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-ctype
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-simplexml
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update php7-gd
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update gifsicle
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update optipng
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update patch
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add autoconf automake build-base libtool nasm
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.6.5
    Name: env
  - CmdLine:
    - apk add --update build-base autoconf automake file libtool nasm libpng-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x;\tnpm install mozjpeg; \t./node_modules/mozjpeg/vendor/cjpeg -version;
      \tldd ./node_modules/mozjpeg/vendor/cjpeg"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x;\tnpm install cwebp-bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer  &&
      php -r "     \$signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061';     \$hash
      = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\$signature,
      \$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check
      failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }"  &&
      php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer
      --version=${COMPOSER_VERSION}  && composer --ansi --version --no-interaction
      && rm -rf /tmp/* /tmp/.htaccess
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing
      gnu-libiconv
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so php
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_EXIT_ON_PATCH_FAILURE
      Value: "1"
    Name: env
  - CmdLine:
    - composer global require hirak/prestissimo
    Name: run
    PrependShell: true
  From:
    Image: mhart/alpine-node:10
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:10
