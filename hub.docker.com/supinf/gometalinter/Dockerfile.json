{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "METALINTER_VERSION",
              "Value": "v2.0.11"
            },
            {
              "Key": "PATH",
              "Value": "/go/bin:/usr/local/go/bin:$PATH"
            },
            {
              "Key": "PAGER",
              "Value": "less"
            },
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add less"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add --virtual build-deps bash gcc musl-dev openssl go git     \u0026\u0026 :     \u0026\u0026 : Install go 1.11     \u0026\u0026 GOLANG_VERSION=1.11.4     \u0026\u0026 GOLANG_SRC_URL=\"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"     \u0026\u0026 GOLANG_SRC_SHA256=\"4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15\"     \u0026\u0026 export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\"     \u0026\u0026 wget -q \"${GOLANG_SRC_URL}\" -O golang.tar.gz     \u0026\u0026 echo \"${GOLANG_SRC_SHA256}  golang.tar.gz\" | sha256sum -c -     \u0026\u0026 tar -C /usr/local -xzf golang.tar.gz     \u0026\u0026 cd /usr/local/go/src     \u0026\u0026 ./make.bash     \u0026\u0026 mkdir -p /go/src     \u0026\u0026 chmod -R 777 /go     \u0026\u0026 :     \u0026\u0026 : Install gometalinter     \u0026\u0026 go get -u github.com/alecthomas/gometalinter     \u0026\u0026 cd /go/src/github.com/alecthomas/gometalinter     \u0026\u0026 git checkout ${METALINTER_VERSION}     \u0026\u0026 go install github.com/alecthomas/gometalinter     \u0026\u0026 gometalinter --install     \u0026\u0026 :     \u0026\u0026 : Clean up     \u0026\u0026 apk del --purge -r build-deps     \u0026\u0026 find /usr/local/go -depth -type d -name testdata -exec rm -rf {} \\;     \u0026\u0026 find / -depth -type f -name \"*_test.go\" -exec rm -f {} \\;     \u0026\u0026 find / -depth -type f -name README.md -exec rm -f {} \\;     \u0026\u0026 find /usr/local/go -depth -type d -name go-build -exec rm -rf {} \\;     \u0026\u0026 rm -rf /root/.cache /usr/local/go/pkg/bootstrap /go/src/github.com               /var/cache/* /var/lib/apk* /golang.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/go/src"
        },
        {
          "CmdLine": [
            "gometalinter"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}