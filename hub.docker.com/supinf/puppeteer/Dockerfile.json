{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:11.10.0-slim",
      "SourceCode": "FROM node:11.10.0-slim",
      "Platform": "",
      "From": {
        "Image": "node:11.10.0-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PUPPETEER_VERESION",
              "Value": "1.12.2"
            },
            {
              "Key": "NODE_PATH",
              "Value": "\"/node_modules:/usr/local/lib/node_modules\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "url=https://github.com/krallin/tini/releases/download/v0.18.0     \u0026\u0026 wget -qO /usr/local/bin/tini ${url}/tini-amd64     \u0026\u0026 chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends libgconf-2-4 fontconfig wget sudo     \u0026\u0026 wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\"        \u003e\u003e /etc/apt/sources.list.d/google.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends google-chrome-unstable        ttf-freefont fonts-ipafont-gothic     \u0026\u0026 mkdir -p /usr/share/fonts/emoji     \u0026\u0026 curl --location --silent --show-error --out /usr/share/fonts/emoji/emojione-android.ttf        https://github.com/emojione/emojione-assets/releases/download/4.5/emojione-android.ttf     \u0026\u0026 chmod -R +rx /usr/share/fonts/     \u0026\u0026 fc-cache -fv     \u0026\u0026 apt-get purge --auto-remove -y curl     \u0026\u0026 find / -depth -type d -name __pycache__ -exec rm -rf {} \\;     \u0026\u0026 rm -rf /var/lib/apt/lists/* /usr/share/locale/fi/LC_MESSAGES               /usr/share/icons/Adwaita/256x256/apps /tmp/*               /usr/local/lib/node_modules/npm/changelogs               /usr/local/lib/node_modules/npm/html/doc               /usr/lib/python3.5/lib2to3               /usr/share/locale/ro               /usr/share/icons/Adwaita"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true     \u0026\u0026 npm install --global \"puppeteer@${PUPPETEER_VERESION}\"     \u0026\u0026 mkdir /node_modules     \u0026\u0026 rm -rf /root/.npm/_cacache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "groupadd -r puppeteer     \u0026\u0026 useradd -r -g puppeteer -G audio,video puppeteer     \u0026\u0026 echo 'puppeteer ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers     \u0026\u0026 mkdir -p /home/puppeteer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R puppeteer:puppeteer /home/puppeteer /node_modules /work"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "puppeteer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "index.js",
            "/home/puppeteer/"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "node",
            "/home/puppeteer/index.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}