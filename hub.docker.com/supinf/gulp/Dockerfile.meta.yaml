MetaArgs: null
Stages:
- BaseName: node:10.16.0-alpine
  Commands:
  - Env:
    - Key: GULP_VERSION
      Value: 3.9.1
    - Key: DOCKER_VERSION
      Value: 18.06.3-ce
    Name: env
  - CmdLine:
    - apk --no-cache add tini ca-certificates     && yarn global add "gulp@${GULP_VERSION}"     &&
      rm -rf /usr/local/share/.cache/yarn     && find / -depth -type d -name test*
      -exec rm -rf {} \;     && find / -depth -type f -name *.md -exec rm -f {} \;     &&
      find / -depth -type f -name *.yml -exec rm -f {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add --virtual build-deps curl     && curl --location --silent
      --show-error -O         https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz     &&
      tar xzf docker-${DOCKER_VERSION}.tgz     && cp docker/docker /usr/bin/docker     &&
      rm -rf /docker* .dockerenv     && apk del --purge -r build-deps
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /gulp
  - Chown: ""
    Name: add
    SourcesAndDest:
    - package.json
    - /gulp/package.json
  - CmdLine:
    - apk add --no-cache --virtual build-deps make g++ python-dev     && yarn add
      package.json     && rm -rf /usr/local/share/.cache/yarn     && find / -depth
      -type f -name *.md -exec rm -f {} \;     && find / -depth -type f -name *.yml
      -exec rm -f {} \;     && apk del --purge -r build-deps
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /monitor
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sample-gulpfile.js
    - /gulp/gulpfile.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sample-eslint.json
    - /gulp/eslint.json
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gulp
    Name: cmd
    PrependShell: false
  From:
    Image: node:10.16.0-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.16.0-alpine
