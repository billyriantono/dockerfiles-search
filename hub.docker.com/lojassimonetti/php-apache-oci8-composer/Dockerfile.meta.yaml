MetaArgs: null
Stages:
- BaseName: php:7.4.0-apache
  Commands:
  - Env:
    - Key: http_proxy
      Value: ${HTTP_PROXY}
    Name: env
  - Env:
    - Key: https_proxy
      Value: ${HTTP_PROXY}
    Name: env
  - Env:
    - Key: NR_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: NR_APP_NAME
      Value: '""'
    Name: env
  - Env:
    - Key: NR_LICENSE_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: NR_VERSION
      Value: '""'
    Name: env
  - Env:
    - Key: PHP_BUILD_DATE
      Value: '"20190902"'
    Name: env
  - Env:
    - Key: PHP_OPCACHE_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: SESSION_HANDLER
      Value: "false"
    Name: env
  - Env:
    - Key: SESSION_HANDLER_NAME
      Value: '""'
    Name: env
  - Env:
    - Key: SESSION_HANDLER_PATH
      Value: '""'
    Name: env
  - Env:
    - Key: XDEBUG_AUTOSTART
      Value: "false"
    Name: env
  - Env:
    - Key: XDEBUG_CONNECT_BACK
      Value: "true"
    Name: env
  - Env:
    - Key: XDEBUG_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: XDEBUG_IDEKEY
      Value: '"docker"'
    Name: env
  - Env:
    - Key: XDEBUG_VERSION
      Value: '"-2.8.1"'
    Name: env
  - Env:
    - Key: PHP_EXTENSION_WDDX
      Value: "1"
    Name: env
  - Env:
    - Key: PHP_OPENSSL
      Value: "1"
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends wget vim supervisor
      libfreetype6-dev libjpeg62-turbo-dev     libmcrypt-dev libpng-dev libssl-dev
      libaio1 git libcurl4-openssl-dev libxslt-dev     libldap2-dev libicu-dev libc-client-dev
      libkrb5-dev libsqlite3-dev libedit-dev     sudo zlib1g zlib1g-dev libzip4 libzip-dev
      zip unzip librabbitmq-dev &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd     && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/     &&
      docker-php-ext-configure imap --with-kerberos --with-imap-ssl     && docker-php-ext-install
      -j$(nproc) bcmath gd pdo_mysql calendar exif gettext shmop soap sockets intl
      pcntl xsl ldap imap
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Adding Redis" &&     pecl install redis &&     docker-php-ext-enable
      redis
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Adding xDebug" &&     pecl install xdebug${XDEBUG_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Adding Zip" &&     pecl install zip &&     docker-php-ext-enable
      zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Adding AMQP" &&     pecl install amqp &&     docker-php-ext-enable
      amqp
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Configure Opcache" &&     docker-php-ext-install opcache &&     echo
      "opcache.enable=0" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini &&     echo
      "opcache.enable_cli=0" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y -q --no-install-recommends --no-install-suggests
      gnupg2     && echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' |
      sudo tee /etc/apt/sources.list.d/newrelic.list     && wget -O- https://download.newrelic.com/548C16BF.gpg
      | sudo apt-key add -     && sudo apt-get update && apt-get install -y -q --no-install-recommends
      --no-install-suggests newrelic-php5     && NR_INSTALL_USE_CP_NOT_LN=1 NR_INSTALL_SILENT=1
      newrelic-install install     && chown www-data:www-data /usr/local/etc/php/conf.d/newrelic.ini
      && chmod a+rw /usr/local/etc/php/conf.d/newrelic.ini     && apt-get remove -y
      gnupg2 && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Adding Tini" &&     wget -O /tini https://github.com/krallin/tini/releases/download/v0.18.0/tini-static
      &&     chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "---> Config sudoers" &&     echo "www-data  ALL = ( ALL ) NOPASSWD: ALL"
      >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "---> Fix Logs permissions" &&     chown -R www-data:www-data /var/log/apache2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/
      --filename=composer &&     mkdir /var/www/.composer && chown -R www-data:www-data
      /var/www/.composer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/ports.conf
    - /etc/apache2/ports.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache-run.sh
    - /usr/bin/apache-run
  - CmdLine:
    - chmod a+x /usr/bin/apache-run
    Name: run
    PrependShell: true
  - Name: user
    User: www-data
  - Name: workdir
    Path: '"/var/www/html"'
  - Name: expose
    Ports:
    - "8080"
    - "9001"
  - CmdLine:
    - /tini
    - --
    - /usr/bin/apache-run
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.4.0-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.4.0-apache
