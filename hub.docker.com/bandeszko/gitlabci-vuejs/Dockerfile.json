{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gitlab/gitlab-runner:latest",
      "SourceCode": "FROM gitlab/gitlab-runner:latest",
      "Platform": "",
      "From": {
        "Image": "gitlab/gitlab-runner:latest"
      },
      "Commands": [
        {
          "Maintainer": "tandris",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_CI_URL",
              "Value": "yourgitlabci.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_CI_TOKEN",
              "Value": "runners"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_CI_NAME",
              "Value": "vuejs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_CI_EXECUTOR",
              "Value": "shell"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SONAR_HOST_URL",
              "Value": "myserver:9000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SONAR_JDBC_URL",
              "Value": "jdbc:postgresql:\\/\\/localhost\\/sonar"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SONAR_JDBC_USER",
              "Value": "sonar"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SONAR_JDBC_PWD",
              "Value": "sonar"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_SETTINGS",
              "Value": "/home/gitlab-runner/.m2/settings.xml"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y software-properties-common \u0026\u0026   add-apt-repository -y ppa:webupd8team/java \u0026\u0026   apt-get update \u0026\u0026   echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026   apt-get install -q -y oracle-java8-installer \u0026\u0026   apt-get install -q -y wget unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/sonar-runner-dist-2.4.zip \u0026\u0026   unzip sonar-runner-dist-2.4.zip \u0026\u0026   mv sonar-runner-2.4 /opt/sonar-runner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "settings.xml",
            "/home/gitlab-runner/.m2/settings.xml"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -q -y maven git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y xz-utils mc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026   echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google.list \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y google-chrome-stable \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://sourceforge.net/projects/ubuntuzilla/files/mozilla/apt/pool/main/f/firefox-mozilla-build/firefox-mozilla-build_52.0.1-0ubuntu1_amd64.deb \u0026\u0026   dpkg -i firefox-mozilla-build_52.0.1-0ubuntu1_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y -q   xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4444",
            "5999"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}