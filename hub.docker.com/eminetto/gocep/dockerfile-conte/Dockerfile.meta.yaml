MetaArgs: null
Stages:
- BaseName: emdzej/node:lts
  Commands:
  - Maintainer: Michał Jaskólski <michal@jaskolski.online>
    Name: maintainer
  - Env:
    - Key: GHOST_HOME
      Value: /var/www/ghost
    Name: env
  - Env:
    - Key: GHOST_CONTENT
      Value: /var/lib/ghost
    Name: env
  - CmdLine:
    - addgroup ghost
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -H -h "$GHOST_HOME" -D -G ghost ghost
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "$GHOST_HOME"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "$GHOST_CONTENT"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache curl ca-certificates su-exec
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && curl -s -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && unzip -o ghost.zip -d "$GHOST_HOME"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd "$GHOST_HOME/content" && mv * "$GHOST_CONTENT"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ghost:ghost "$GHOST_HOME" &&  chown -R ghost:ghost "$GHOST_CONTENT"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/ghost.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd \"$GHOST_HOME\" && npm install --production \t&& npm cache clean \t&& rm
      -rf /tmp/npm*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.js
    - '"$GHOST_HOME"'
  - Name: volume
    Volumes:
    - $GHOST_CONTENT
  - Name: expose
    Ports:
    - "2368"
  - Name: workdir
    Path: $GHOST_HOME
  - CmdLine:
    - npm
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    - --production
    Name: cmd
    PrependShell: false
  From:
    Image: emdzej/node:lts
  Name: ""
  Platform: ""
  SourceCode: FROM emdzej/node:lts
