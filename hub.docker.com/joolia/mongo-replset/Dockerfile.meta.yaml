MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - CmdLine:
    - groupadd -r mongodb && useradd -r -g mongodb mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update         && apt-get install -y --no-install-recommends                 ca-certificates                 jq                 numactl         &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: JSYAML_VERSION
      Value: 3.10.0
    Name: env
  - CmdLine:
    - set -ex;                 apt-get update;         apt-get install -y --no-install-recommends                 wget         ;         rm
      -rf /var/lib/apt/lists/*;                 dpkgArch="$(dpkg --print-architecture
      | awk -F- '{ print $NF }')";         wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";         wget
      -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";         export
      GNUPGHOME="$(mktemp -d)";         gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;         gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu;         command -v gpgconf && gpgconf
      --kill all || :;         rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;         chmod
      +x /usr/local/bin/gosu;         gosu nobody true;                 wget -O /js-yaml.js
      "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";                 apt-get
      purge -y --auto-remove wget
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: 9DA31620334BD75D9DCB49F368818C72E52529D4
    Name: env
  - CmdLine:
    - set -ex;         export GNUPGHOME="$(mktemp -d)";         for key in $GPG_KEYS;
      do                 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";         done;         gpg
      --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;         command -v
      gpgconf && gpgconf --kill all || :;         rm -r "$GNUPGHOME";         apt-key
      list
    Name: run
    PrependShell: true
  - Key: MONGO_PACKAGE
    Name: arg
    Value: mongodb-org
  - Key: MONGO_REPO
    Name: arg
    Value: repo.mongodb.org
  - Env:
    - Key: MONGO_PACKAGE
      Value: ${MONGO_PACKAGE}
    - Key: MONGO_REPO
      Value: ${MONGO_REPO}
    Name: env
  - Env:
    - Key: MONGO_MAJOR
      Value: "4.0"
    Name: env
  - Env:
    - Key: MONGO_VERSION
      Value: 4.0.0
    Name: env
  - CmdLine:
    - echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR
      multiverse" | tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x         && apt-get update         && apt-get install -y                 ${MONGO_PACKAGE}=$MONGO_VERSION                 ${MONGO_PACKAGE}-server=$MONGO_VERSION                 ${MONGO_PACKAGE}-shell=$MONGO_VERSION                 ${MONGO_PACKAGE}-mongos=$MONGO_VERSION                 ${MONGO_PACKAGE}-tools=$MONGO_VERSION         &&
      rm -rf /var/lib/apt/lists/*         && rm -rf /var/lib/mongodb         && mv
      /etc/mongod.conf /etc/mongod.conf.orig
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/db /data/configdb         && chown -R mongodb:mongodb /data/db
      /data/configdb
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data/db
    - /data/configdb
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod 777 /usr/local/bin/docker-entrypoint.sh     && ln -s /usr/local/bin/docker-entrypoint.sh
      /
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "27017"
  - CmdLine:
    - mongod --replSet joolia --bind_ip_all
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
