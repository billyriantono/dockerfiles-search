MetaArgs: null
Stages:
- BaseName: jupyter/minimal-notebook:87210526f381
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - "set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates
      \t\tcurl \t; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PATH
      Value: /usr/local/julia
    Name: env
  - Env:
    - Key: PATH
      Value: $JULIA_PATH/bin:$PATH
    Name: env
  - Env:
    - Key: JULIA_GPG
      Value: 3673DF529D9049477F76B37566E3C7DC03D6E495
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.6.4
    Name: env
  - CmdLine:
    - "set -eux; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tif ! command -v gpg
      > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends
      \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi; \t\tdpkgArch=\"$(dpkg
      --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) tarArch='x86_64';
      dirArch='x64'; sha256='d20e6984bcf8c3692d853a9922e2cf1de19b91201cb9e396d9264c32cebedc46'
      ;; \t\ti386) tarArch='i686'; dirArch='x86'; sha256='ab45280c799e63ab04da7a928fee79b43e41b457a6d4c48058798b9bad542688'
      ;; \t\t*) echo >&2 \"error: current architecture ($dpkgArch) does not have a
      corresponding Julia binary release\"; exit 1 ;; \tesac; \t\tfolder=\"$(echo
      \"$JULIA_VERSION\" | cut -d. -f1-2)\"; \tcurl -fL -o julia.tar.gz.asc \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc\";
      \tcurl -fL -o julia.tar.gz     \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz\";
      \t\techo \"${sha256} *julia.tar.gz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp
      -d)\"; \techo \"disable-ipv6\" >> \"$GNUPGHOME\"/dirmngr.conf; \tgpg --batch
      --keyserver ha.pool.sks-keyservers.net --recv-keys \"$JULIA_GPG\"; \tgpg --batch
      --verify julia.tar.gz.asc julia.tar.gz; \tcommand -v gpgconf > /dev/null &&
      gpgconf --kill all; \tsleep 10; \trm -rf \"$GNUPGHOME\" julia.tar.gz.asc; \t\tmkdir
      \"$JULIA_PATH\"; \ttar -xzf julia.tar.gz -C \"$JULIA_PATH\" --strip-components
      1; \trm julia.tar.gz; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\"
      ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \t\tjulia --version"
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  - CmdLine:
    - /opt/conda/bin/conda update ipykernel;     /opt/conda/bin/conda clean --all;     /opt/conda/bin/conda
      update --all;     /opt/conda/bin/conda install matplotlib;
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e '         Pkg.init(); Pkg.update();         Pkg.add("Compat"); using
      Compat;         Pkg.add("IJulia"); using IJulia;         Pkg.add("StatsBase");
      using StatsBase;         Pkg.clone("https://github.com/MurrellGroup/Rifraf.jl");
      using Rifraf;         Pkg.clone("https://github.com/MurrellGroup/NextGenSeqUtils.jl");  using
      NextGenSeqUtils;         Pkg.clone("https://github.com/MurrellGroup/DPMeansClustering.jl");
      using DPMeansClustering;         Pkg.clone("https://github.com/MurrellGroup/RobustAmpliconDenoising.jl");
      using RobustAmpliconDenoising;     '
    Name: run
    PrependShell: true
  From:
    Image: jupyter/minimal-notebook:87210526f381
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/minimal-notebook:87210526f381
