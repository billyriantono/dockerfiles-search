MetaArgs: null
Stages:
- As: build
  BaseName: python:3.6-alpine3.8
  Commands:
  - CmdLine:
    - apk update && apk add build-base
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install gevent
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/site-packages
  - CmdLine:
    - cp -r /usr/local/lib/python3.6/site-packages/gevent* .
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /usr/local/lib/python3.6/site-packages/greenlet* .
    Name: run
    PrependShell: true
  From:
    Image: python:3.6-alpine3.8
  Name: build
  Platform: ""
  SourceCode: FROM python:3.6-alpine3.8 as build
- BaseName: python:3.6-alpine3.8
  Commands:
  - CmdLine:
    - apk update && apk add ffmpeg curl   && rm -f /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/site-packages
    - /usr/local/lib/python3.6/site-packages
  - Name: workdir
    Path: /opt/audio-convert
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - pip install -r requirements.txt && rm -rf /root/.cache/pip
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: /opt/audio-convert:$PYTHONPATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Health:
      Interval: 30000000000
      StartPeriod: 10000000000
      Test:
      - CMD-SHELL
      - curl -f http://localhost/health || exit 1
      Timeout: 2000000000
    Name: healthcheck
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gunicorn
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-alpine3.8
