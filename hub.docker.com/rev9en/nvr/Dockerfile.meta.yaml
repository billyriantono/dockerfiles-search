MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: IMAGE_VERSION
      Value: 1.0.1
    Name: env
  - Labels:
    - Key: image.version
      Value: '"${IMAGE_VERSION}"'
    - Key: image.description
      Value: '"Simple Network Video Recorder for ip-cameras. Docker image based on
        Alpine Linux."'
    - Key: image.date
      Value: '"2018-12-05"'
    - Key: maintainer
      Value: '"Evgen Rusakov"'
    - Key: url.docker
      Value: '"https://hub.docker.com/r/rev9en/nvr"'
    - Key: url.source
      Value: '"https://github.com/revgen/docker-nvr"'
    Name: label
  - Env:
    - Key: NVR_HOME
      Value: /var/nvr
    Name: env
  - Env:
    - Key: NVR_OUTPUT
      Value: ${NVR_HOME}/output
    Name: env
  - Env:
    - Key: NVR_LOGS
      Value: /var/log/nvr
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /root
    - /
  - CmdLine:
    - apk add --no-cache gettext curl &&     apk add --no-cache lighttpd &&     apk
      add --no-cache ffmpeg mplayer &&     rm /usr/bin/mplayer &&         mkdir -p
      "${NVR_HOME}" &&     mkdir -p "${NVR_OUTPUT}" &&     mkdir -p "${NVR_LOGS}"
      &&     rm -r /var/www/localhost &&     chmod +x /entrypoint.sh &&     chmod
      +x /usr/local/bin/nvr* &&     find ${NVR_HOME}/ -name "*.sh" -type f -exec chmod
      +x "{}" \; &&     find /usr/lib/nvr/ -name "*.sh" -type f -exec chmod +x "{}"
      \; &&         (rm -rf /tmp/* 2>/dev/null || true) &&     (rm -rf /var/cache/apk/*
      2>/dev/null || true)
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: workdir
    Path: ${NVR_HOME}
  - Name: volume
    Volumes:
    - ${NVR_OUTPUT}
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
