{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0-fpm",
      "SourceCode": "FROM php:7.0-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.0-fpm"
      },
      "Commands": [
        {
          "Key": "TIME_ZONE",
          "Name": "arg",
          "Value": "Pacific/Auckland"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y         apt-transport-https         libgd3         libgd-dev         libfreetype6-dev         libjpeg-dev         libmcrypt-dev         libpng-dev         libxml2-dev         libicu-dev         libpq-dev         gnupg2         nano         wget         openssl         locales         tzdata         git         libzip-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-install -j$(nproc) xmlrpc         zip         intl         soap         opcache         pdo_pgsql         pdo_mysql         pgsql         mysqli     \u0026\u0026 docker-php-ext-configure gd             --with-freetype-dir=/usr/include/             --with-png-dir=/usr/include/             --with-jpeg-dir=/usr/include/             --with-gd     \u0026\u0026 docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/tideways/php-profiler-extension.git     \u0026\u0026 cd php-profiler-extension     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=tideways_xhprof.so\" \u003e\u003e /usr/local/etc/php/conf.d/tideways_xhprof.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis     \u0026\u0026  rm -rf /tmp/pear     \u0026\u0026  docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     sed -i -e 's/# en_AU.UTF-8 UTF-8/en_AU.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     dpkg-reconfigure --frontend=noninteractive locales \u0026\u0026     update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -     \u0026\u0026 curl https://packages.microsoft.com/config/debian/8/prod.list | tee /etc/apt/sources.list.d/mssql-tools.list     \u0026\u0026 apt-get update \u0026\u0026 ACCEPT_EULA=Y apt-get install -y         unixodbc         libgss3         unixodbc-dev         msodbcsql=13.1.9.2-1         mssql-tools=14.0.7.0-1     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget \"http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb\"     \u0026\u0026 DEBIAN_FRONTEND=noninteractive dpkg -i ./libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' \u003e\u003e ~/.bash_profile     \u0026\u0026 echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pear config-set php_ini `php --ini | grep \"Loaded Configuration\" | sed -e \"s|.*:\\s*||\"` system     \u0026\u0026 pecl install sqlsrv-5.3.0     \u0026\u0026 pecl install pdo_sqlsrv-5.3.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable sqlsrv.so \u0026\u0026 docker-php-ext-enable pdo_sqlsrv.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime     \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/fpm.conf",
            "/usr/local/etc/php-fpm.d/zz-totara.conf"
          ]
        },
        {
          "CmdLine": [
            "echo 'for f in ~/custom_bash/*.bash; do [[ -e \"$f\" ]] \u0026\u0026 source \"$f\"; done;' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}