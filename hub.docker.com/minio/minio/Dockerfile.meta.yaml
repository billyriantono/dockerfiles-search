MetaArgs: null
Stages:
- BaseName: golang:1.13-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"MinIO Inc <dev@min.io>"'
    Name: label
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Env:
    - Key: GOPROXY
      Value: https://proxy.golang.org
    Name: env
  - CmdLine:
    - apk add --no-cache git &&      git clone https://github.com/minio/minio && cd
      minio &&      go install -v -ldflags "$(go run buildscripts/gen-ldflags.go)"
    Name: run
    PrependShell: true
  From:
    Image: golang:1.13-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.13-alpine
- BaseName: alpine:3.10
  Commands:
  - Env:
    - Key: MINIO_UPDATE
      Value: "off"
    Name: env
  - Env:
    - Key: MINIO_ACCESS_KEY_FILE
      Value: access_key
    - Key: MINIO_SECRET_KEY_FILE
      Value: secret_key
    - Key: MINIO_KMS_MASTER_KEY_FILE
      Value: kms_master_key
    Name: env
  - Name: expose
    Ports:
    - "9000"
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /go/bin/minio
    - /usr/bin/minio
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerscripts/docker-entrypoint.sh
    - /usr/bin/
  - CmdLine:
    - 'apk add --no-cache ca-certificates ''curl>7.61.0'' ''su-exec>=0.2'' &&      echo
      ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - minio
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
