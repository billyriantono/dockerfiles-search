MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Franz Josef Kaiser <wecodemore@gmail.com>
    Name: maintainer
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: VERSION
      Value: ${VERSION:-6.9.5}
    Name: env
  - Key: NPM
    Name: arg
    Value: null
  - Env:
    - Key: NPM
      Value: ${NPM:-yes}
    Name: env
  - Key: NPM_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: NPM_VERSION
      Value: ${NPM_VERSION:-3.10.10}
    Name: env
  - Key: NPM_CONFIG_LOGLEVEL
    Name: arg
    Value: null
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: ${NPM_CONFIG_LOGLEVEL:-warn}
    Name: env
  - Env:
    - Key: USER
      Value: node
    Name: env
  - Key: PREFIX
    Name: arg
    Value: null
  - Env:
    - Key: PREFIX
      Value: ${PREFIX:-/usr}
    Name: env
  - Key: FLAGS
    Name: arg
    Value: null
  - Env:
    - Key: FLAGS
      Value: ${FLAGS:-}
    Name: env
  - Key: TARGET
    Name: arg
    Value: null
  - Env:
    - Key: TARGET
      Value: ${TARGET:-$PREFIX/lib/app}
    Name: env
  - Key: SRC
    Name: arg
    Value: null
  - Env:
    - Key: SRC
      Value: ${SRC:-./app}
    Name: env
  - Env:
    - Key: NODE_PATH
      Value: '"${HOME}/.node_modules:${HOME}/.node_libraries:${TARGET}"'
    Name: env
  - Env:
    - Key: PACKAGES
      Value: "\"binutils-gold \tca-certificates \tcurl \tg++ \tgcc \tgnupg \tlinux-headers
        \tpaxctl \tmake \tpython\""
    Name: env
  - Key: ADDT_PACKAGES
    Name: arg
    Value: null
  - Env:
    - Key: DEPS_PACKAGES
      Value: "\"libgcc \tlibstdc++ \ttini \t${ADDT_PACKAGES}\""
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: "94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \t0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93
        \tFD3A5288F042B6850C66B31F09FE44734EB7990E \t71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
        \tDD8F2338BAE7501E3DD5AC78C273792F7D83545D \tC4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
        \tB9AE9905FFD7803F25714661B63B535A4C206CA9 \t9554F04D7259F04124DE6B476D5A82AC7E37093B
        \t93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 \t114F43EE0176B71C7BC219DD50A3051F888C628D
        \t7937DFD2AB06298B2293C3187D33FF9D0246406D"
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./keys
    - /root/.gnupg
  - Name: workdir
    Path: '"${TARGET}"'
  - CmdLine:
    - "apk add --update --no-cache ${PACKAGES} ${DEPS_PACKAGES} \t&& chmod -R 0600
      /root/.gnupg \t&& update-ca-certificates --fresh \t&& gpg --list-keys \t&& set
      -xe \t&& for key in ${GPG_KEYS}; do \t\t\tgpg --fingerprint \"${key}\"; \t\tdone
      \t&& echo \" ---> Downloading Node.js tarball\" \t&& curl --tlsv1.2 -fsSOL \"https://nodejs.org/dist/v${VERSION}/node-v${VERSION}.tar.gz\"
      \t&& curl --tlsv1.2 -fsSOL \"https://nodejs.org/dist/v${VERSION}/SHASUMS256.txt.asc\"
      \t&& curl --tlsv1.2 -fsSOL \"https://nodejs.org/dist/v${VERSION}/SHASUMS256.txt\"
      \t&& echo \" ---> Verifying build\" \t&& gpg --verify -a SHASUMS256.txt.asc
      \t&& grep \"node-v${VERSION}.tar.gz\" SHASUMS256.txt.asc \t\t| sha256sum -c
      - \t&& tar xzf \"node-v${VERSION}.tar.gz\" \t&& cd \"node-v${VERSION}\" \t&&
      echo \" ---> Compiling Node.js with flags: ${FLAGS} --prefix=${PREFIX}\" \t&&
      ./configure \t\t${FLAGS//--fully-static/} \t\t--prefix=${PREFIX} $([[ -z \"${NPM+yes}\"
      ]] && echo \"--without-npm\") \t&& make -j$(grep -c ^processor /proc/cpuinfo
      2>/dev/null || 1) \t&& make install \t&& paxctl -cm /usr/bin/node \t&& if [[
      -n \"${NPM+yes}\" ]]; then \t\t\techo \" ---> Installing NPM globally\" \t\t\t&&
      npm install \"npm@v${NPM_VERSION}\" -g --prefix=${PREFIX}/local \t\t\t&& ln
      -s -f /usr/local/bin/npm /usr/bin/npm \t\t\t&& find /usr/lib/node_modules/npm
      -name test -print0 -o -name .bin -type d | xargs -0 rm -rf; \t\tfi \t&& node
      -e \"console.log( ' ---> Node.js ' + process.version + ' was successfully installed'
      )\" \t&& echo \" ---> Cleaning up\" \t&& cd .. \t&& apk del ${PACKAGES} \t&&
      rm SHASUMS256.tx* \t&& rm \"node-v${VERSION}.tar.gz\" \t\t/usr/lib/node_modules/npm/AUTHORS
      \t\t/usr/lib/node_modules/npm/*.md \t\t/usr/lib/node_modules/npm/LICENSE \t\t/usr/lib/node_modules/npm/configure
      \t\t/usr/lib/node_modules/npm/make.bat \t\t/usr/lib/node_modules/npm/Makefile
      \t\t/usr/lib/node_modules/npm/.mailmap \t\t/usr/lib/node_modules/npm/.npmignore
      \t\t/usr/lib/node_modules/npm/.travis.yml \t&& rm -rf /etc/ssl \t\tnode-v${VERSION}
      \t\t/usr/include \t\t/usr/share/man \t\t/tmp/* \t\t/var/cache/apk/* \t\t/root/.npm
      \t\t/root/.node-gyp \t\t/usr/lib/node_modules/npm/man \t\t/usr/lib/node_modules/npm/doc
      \t\t/usr/lib/node_modules/npm/changelog \t\t/usr/lib/node_modules/npm/scripts
      \t\t/usr/lib/node_modules/npm/html"
    Name: run
    PrependShell: true
  - CmdLine:
    - "addgroup ${USER} \t&& adduser -S ${USER} -D -G ${USER}"
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - Name: workdir
    Path: '"${TARGET}"'
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - /sbin/tini
    - --
    - node
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
