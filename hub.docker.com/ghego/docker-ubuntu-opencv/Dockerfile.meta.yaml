MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Matteo Crippa @ghego20
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: WORK_DIR
      Value: /root/node
    Name: env
  - Name: workdir
    Path: ${WORK_DIR}
  - Name: volume
    Volumes:
    - ${WORK_DIR}
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoclean -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y qt5-default libvtk6-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev
      libjasper-dev libopenexr-dev libgdal-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev
      libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev
      libopencore-amrwb-dev libv4l-dev libxine2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libtbb-dev libeigen3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk
      python3-numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ant default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y doxygen
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/opencv/opencv/archive/3.2.0.zip
    - /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - OpenCV.sh
    - /tmp/
  - CmdLine:
    - chmod +x /tmp/OpenCV.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/OpenCV.sh
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
