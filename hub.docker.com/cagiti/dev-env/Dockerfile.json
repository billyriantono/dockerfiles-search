{
  "MetaArgs": [
    {
      "Key": "JX_VERSION",
      "DefaultValue": "1.3.971",
      "ProvidedValue": null,
      "Value": "1.3.971"
    },
    {
      "Key": "KUBCTL_VERSION",
      "DefaultValue": "v1.13.4",
      "ProvidedValue": null,
      "Value": "v1.13.4"
    },
    {
      "Key": "HELM_VERSION",
      "DefaultValue": "v2.12.3",
      "ProvidedValue": null,
      "Value": "v2.12.3"
    },
    {
      "Key": "GCLOUD_VERSION",
      "DefaultValue": "237.0.0-alpine",
      "ProvidedValue": null,
      "Value": "237.0.0-alpine"
    }
  ],
  "Stages": [
    {
      "Name": "jx",
      "BaseName": "jenkinsxio/jx:$JX_VERSION",
      "SourceCode": "FROM jenkinsxio/jx:$JX_VERSION as jx",
      "Platform": "",
      "As": "jx",
      "From": {
        "Image": "jenkinsxio/jx:$JX_VERSION"
      },
      "Commands": null
    },
    {
      "Name": "kubectl",
      "BaseName": "lachlanevenson/k8s-kubectl:$KUBCTL_VERSION",
      "SourceCode": "FROM lachlanevenson/k8s-kubectl:$KUBCTL_VERSION as kubectl",
      "Platform": "",
      "As": "kubectl",
      "From": {
        "Image": "lachlanevenson/k8s-kubectl:$KUBCTL_VERSION"
      },
      "Commands": null
    },
    {
      "Name": "helm",
      "BaseName": "lachlanevenson/k8s-helm:$HELM_VERSION",
      "SourceCode": "FROM lachlanevenson/k8s-helm:$HELM_VERSION as helm",
      "Platform": "",
      "As": "helm",
      "From": {
        "Image": "lachlanevenson/k8s-helm:$HELM_VERSION"
      },
      "Commands": null
    },
    {
      "Name": "gcloud",
      "BaseName": "google/cloud-sdk:$GCLOUD_VERSION",
      "SourceCode": "FROM google/cloud-sdk:$GCLOUD_VERSION as gcloud",
      "Platform": "",
      "As": "gcloud",
      "From": {
        "Image": "google/cloud-sdk:$GCLOUD_VERSION"
      },
      "Commands": null
    },
    {
      "Name": "groovy",
      "BaseName": "groovy:2.5.6-jdk8-alpine",
      "SourceCode": "FROM groovy:2.5.6-jdk8-alpine as groovy",
      "Platform": "",
      "As": "groovy",
      "From": {
        "Image": "groovy:2.5.6-jdk8-alpine"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "golang:1.11.4-alpine3.8",
      "SourceCode": "FROM golang:1.11.4-alpine3.8",
      "Platform": "",
      "From": {
        "Image": "golang:1.11.4-alpine3.8"
      },
      "Commands": [
        {
          "Key": "user",
          "Name": "arg",
          "Value": "developer"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "developer"
        },
        {
          "Key": "home",
          "Name": "arg",
          "Value": "/home/${user}"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Env": [
            {
              "Key": "HUB_VERSION",
              "Value": "2.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEP_VERSION",
              "Value": "0.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "${home}/go-workspace"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROOVY_HOME",
              "Value": "/opt/groovy"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./env/default/.vim/colors/molokai_dark.vim",
            "/tmp/colors/molokai_dark.vim"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./env/default/.vim/syntax/groovy.vim",
            "/tmp/syntax/groovy.vim"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "mkdir -p ${home}     \u0026\u0026 addgroup -g ${gid} ${group}     \u0026\u0026 adduser -h ${home} -u ${uid} -G ${group} -s /bin/bash -D ${user}     \u0026\u0026 mkdir -p $GOPATH/src $GOPATH/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache --update add        vim        grep        tar        dos2unix        shadow        gcc        libc-dev        ca-certificates        docker        tree        jq        multitail        ngrep        nmap        unzip        wget        curl        openjdk8        git        git-perl        git-email        tig        bash        tmux        make        terraform        python        py-crcmod        libc6-compat        openssh-client        gnupg        openssl     \u0026\u0026 curl -sL https://github.com/github/hub/releases/download/v${HUB_VERSION}/hub-linux-amd64-${HUB_VERSION}.tgz | tar zx --strip 2 -C /usr/local/bin hub-linux-amd64-${HUB_VERSION}/bin/hub     \u0026\u0026 usermod -a -G docker ${user}     \u0026\u0026 usermod -a -G root ${user}     \u0026\u0026 curl -sL https://raw.githubusercontent.com/golang/dep/v${DEP_VERSION}/install.sh | sh     \u0026\u0026 mkdir -p /opt     \u0026\u0026 mkdir -p /home/${user}/.vim/pack/plugins/start     \u0026\u0026 mkdir -p /home/${user}/.vim/syntax     \u0026\u0026 rm /usr/bin/vi \u0026\u0026 ln -s /usr/bin/vim /usr/bin/vi     \u0026\u0026 go get golang.org/x/tools/cmd/gorename     \u0026\u0026 go get github.com/nsf/gocode     \u0026\u0026 $GOPATH/bin/gocode set propose-builtins true     \u0026\u0026 git clone https://github.com/fatih/vim-go.git /home/${user}/.vim/pack/plugins/start/vim-go     \u0026\u0026 git clone https://github.com/manniwood/vim-buf.git /home/${user}/.vim/pack/plugins/start/vim-buf     \u0026\u0026 mv /tmp/colors /home/${user}/.vim     \u0026\u0026 mv /tmp/syntax /home/${user}/.vim     \u0026\u0026 chown -R ${user}:${group} /home/${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "jx",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/jx",
            "/usr/local/bin/jx"
          ]
        },
        {
          "Chown": "",
          "From": "kubectl",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/kubectl",
            "/usr/local/bin/kubectl"
          ]
        },
        {
          "Chown": "",
          "From": "helm",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/helm",
            "/usr/local/bin/helm"
          ]
        },
        {
          "Chown": "",
          "From": "gcloud",
          "Name": "copy",
          "SourcesAndDest": [
            "/google-cloud-sdk",
            "/usr/local/google-cloud-sdk"
          ]
        },
        {
          "Chown": "",
          "From": "groovy",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/groovy",
            "/opt/groovy"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /lib /lib64     \u0026\u0026 gcloud config set core/disable_usage_reporting true     \u0026\u0026 gcloud config set component_manager/disable_update_check true     \u0026\u0026 gcloud config set metrics/environment github_docker_image"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s \"${GROOVY_HOME}/bin/grape\" /usr/bin/grape     \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovy\" /usr/bin/groovy     \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovyc\" /usr/bin/groovyc     \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovyConsole\" /usr/bin/groovyConsole     \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovydoc\" /usr/bin/groovydoc     \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovysh\" /usr/bin/groovysh     \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/java2groovy\" /usr/bin/java2groovy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://pre-commit.com/install-local.py | python -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/${user}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "${user}"
        },
        {
          "CmdLine": [
            "go get -u github.com/google/go-containerregistry/cmd/ko     \u0026\u0026 go get -u github.com/go-delve/delve/cmd/dlv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/$user/go-workspace"
        }
      ]
    }
  ]
}