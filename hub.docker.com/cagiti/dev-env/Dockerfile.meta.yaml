MetaArgs:
- DefaultValue: 1.3.971
  Key: JX_VERSION
  ProvidedValue: null
  Value: 1.3.971
- DefaultValue: v1.13.4
  Key: KUBCTL_VERSION
  ProvidedValue: null
  Value: v1.13.4
- DefaultValue: v2.12.3
  Key: HELM_VERSION
  ProvidedValue: null
  Value: v2.12.3
- DefaultValue: 237.0.0-alpine
  Key: GCLOUD_VERSION
  ProvidedValue: null
  Value: 237.0.0-alpine
Stages:
- As: jx
  BaseName: jenkinsxio/jx:$JX_VERSION
  Commands: null
  From:
    Image: jenkinsxio/jx:$JX_VERSION
  Name: jx
  Platform: ""
  SourceCode: FROM jenkinsxio/jx:$JX_VERSION as jx
- As: kubectl
  BaseName: lachlanevenson/k8s-kubectl:$KUBCTL_VERSION
  Commands: null
  From:
    Image: lachlanevenson/k8s-kubectl:$KUBCTL_VERSION
  Name: kubectl
  Platform: ""
  SourceCode: FROM lachlanevenson/k8s-kubectl:$KUBCTL_VERSION as kubectl
- As: helm
  BaseName: lachlanevenson/k8s-helm:$HELM_VERSION
  Commands: null
  From:
    Image: lachlanevenson/k8s-helm:$HELM_VERSION
  Name: helm
  Platform: ""
  SourceCode: FROM lachlanevenson/k8s-helm:$HELM_VERSION as helm
- As: gcloud
  BaseName: google/cloud-sdk:$GCLOUD_VERSION
  Commands: null
  From:
    Image: google/cloud-sdk:$GCLOUD_VERSION
  Name: gcloud
  Platform: ""
  SourceCode: FROM google/cloud-sdk:$GCLOUD_VERSION as gcloud
- As: groovy
  BaseName: groovy:2.5.6-jdk8-alpine
  Commands: null
  From:
    Image: groovy:2.5.6-jdk8-alpine
  Name: groovy
  Platform: ""
  SourceCode: FROM groovy:2.5.6-jdk8-alpine as groovy
- BaseName: golang:1.11.4-alpine3.8
  Commands:
  - Key: user
    Name: arg
    Value: developer
  - Key: group
    Name: arg
    Value: developer
  - Key: home
    Name: arg
    Value: /home/${user}
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Env:
    - Key: HUB_VERSION
      Value: 2.7.0
    Name: env
  - Env:
    - Key: DEP_VERSION
      Value: 0.5.0
    Name: env
  - Env:
    - Key: GOPATH
      Value: ${home}/go-workspace
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GROOVY_HOME
      Value: /opt/groovy
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./env/default/.vim/colors/molokai_dark.vim
    - /tmp/colors/molokai_dark.vim
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./env/default/.vim/syntax/groovy.vim
    - /tmp/syntax/groovy.vim
  - Name: workdir
    Path: /
  - CmdLine:
    - mkdir -p ${home}     && addgroup -g ${gid} ${group}     && adduser -h ${home}
      -u ${uid} -G ${group} -s /bin/bash -D ${user}     && mkdir -p $GOPATH/src $GOPATH/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache --update add        vim        grep        tar        dos2unix        shadow        gcc        libc-dev        ca-certificates        docker        tree        jq        multitail        ngrep        nmap        unzip        wget        curl        openjdk8        git        git-perl        git-email        tig        bash        tmux        make        terraform        python        py-crcmod        libc6-compat        openssh-client        gnupg        openssl     &&
      curl -sL https://github.com/github/hub/releases/download/v${HUB_VERSION}/hub-linux-amd64-${HUB_VERSION}.tgz
      | tar zx --strip 2 -C /usr/local/bin hub-linux-amd64-${HUB_VERSION}/bin/hub     &&
      usermod -a -G docker ${user}     && usermod -a -G root ${user}     && curl -sL
      https://raw.githubusercontent.com/golang/dep/v${DEP_VERSION}/install.sh | sh     &&
      mkdir -p /opt     && mkdir -p /home/${user}/.vim/pack/plugins/start     && mkdir
      -p /home/${user}/.vim/syntax     && rm /usr/bin/vi && ln -s /usr/bin/vim /usr/bin/vi     &&
      go get golang.org/x/tools/cmd/gorename     && go get github.com/nsf/gocode     &&
      $GOPATH/bin/gocode set propose-builtins true     && git clone https://github.com/fatih/vim-go.git
      /home/${user}/.vim/pack/plugins/start/vim-go     && git clone https://github.com/manniwood/vim-buf.git
      /home/${user}/.vim/pack/plugins/start/vim-buf     && mv /tmp/colors /home/${user}/.vim     &&
      mv /tmp/syntax /home/${user}/.vim     && chown -R ${user}:${group} /home/${user}
    Name: run
    PrependShell: true
  - Chown: ""
    From: jx
    Name: copy
    SourcesAndDest:
    - /usr/bin/jx
    - /usr/local/bin/jx
  - Chown: ""
    From: kubectl
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kubectl
    - /usr/local/bin/kubectl
  - Chown: ""
    From: helm
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/helm
    - /usr/local/bin/helm
  - Chown: ""
    From: gcloud
    Name: copy
    SourcesAndDest:
    - /google-cloud-sdk
    - /usr/local/google-cloud-sdk
  - Chown: ""
    From: groovy
    Name: copy
    SourcesAndDest:
    - /opt/groovy
    - /opt/groovy
  - Env:
    - Key: PATH
      Value: /usr/local/google-cloud-sdk/bin:$PATH
    Name: env
  - CmdLine:
    - ln -s /lib /lib64     && gcloud config set core/disable_usage_reporting true     &&
      gcloud config set component_manager/disable_update_check true     && gcloud
      config set metrics/environment github_docker_image
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s "${GROOVY_HOME}/bin/grape" /usr/bin/grape     && ln -s "${GROOVY_HOME}/bin/groovy"
      /usr/bin/groovy     && ln -s "${GROOVY_HOME}/bin/groovyc" /usr/bin/groovyc     &&
      ln -s "${GROOVY_HOME}/bin/groovyConsole" /usr/bin/groovyConsole     && ln -s
      "${GROOVY_HOME}/bin/groovydoc" /usr/bin/groovydoc     && ln -s "${GROOVY_HOME}/bin/groovysh"
      /usr/bin/groovysh     && ln -s "${GROOVY_HOME}/bin/java2groovy" /usr/bin/java2groovy
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://pre-commit.com/install-local.py | python -
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/${user}/bin:$PATH
    Name: env
  - Name: user
    User: ${user}
  - CmdLine:
    - go get -u github.com/google/go-containerregistry/cmd/ko     && go get -u github.com/go-delve/delve/cmd/dlv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/$user/go-workspace
  From:
    Image: golang:1.11.4-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.11.4-alpine3.8
