{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.4.1708",
      "SourceCode": "FROM centos:7.4.1708",
      "Platform": "",
      "From": {
        "Image": "centos:7.4.1708"
      },
      "Commands": [
        {
          "Maintainer": "Chuan Li",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"TZ='Asia/Shanghai'; export TZ\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo hello|passwd --stdin root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y openssh-server \t\u0026\u0026 ssh-keygen -N '' -t rsa -q -f /etc/ssh/ssh_host_rsa_key \t\u0026\u0026 ssh-keygen -N '' -t dsa -q -f /etc/ssh/ssh_host_dsa_key \t\u0026\u0026 echo \"PermitRootLogin yes\" \u003e\u003e /etc/ssh/sshd_config \t\u0026\u0026 sed -i -E \"s/UsePAM yes/#UsePAM yes/\" /etc/ssh/sshd_config \t\u0026\u0026 sed -i -E \"s/#UsePAM no/UsePAM no/\" /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "yum install -y \t\tzsh \t\twhich \t\tgit \t\twget \t\ttar \t\tntp \t\tntpdate \t\tmysql \t\tgcc \t\tncurses-devel \t\tgcc-c++ \t\tmake \t\tcmake \t\tautomake \t\tpython-devel \t\tctags \t\truby \t\tlibevent \t\tlibevent-devel \t\u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone \"https://github.com/CoffeyGit/config-files\" \t\u0026\u0026 ln -s config-files/.vimrc . \t\u0026\u0026 ln -s config-files/.tmuxinator . \t\u0026\u0026 ln -s config-files/.tmux.conf . \t\u0026\u0026 ln -s config-files/.gitconfig . \t\u0026\u0026 ln -s config-files/.tmuxinator.zsh . \t\u0026\u0026 ln -s config-files/.zshrc . \t\u0026\u0026 mv .bashrc .bashrc.old \t\u0026\u0026 ln -s config-files/.bashrc ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/go/go1.8.6.linux-amd64.tar.gz \t\u0026\u0026 tar -C /usr/local -xzvf go1.8.6.linux-amd64.tar.gz \t\u0026\u0026 rm -f go1.8.6.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p go/{src,bin,pkg,conf}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gocode",
            "golint",
            "gotags",
            "errcheck",
            "godef",
            "goimports",
            "gorename",
            "oracle",
            "go/bin/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "-l",
            "go get github.com/go-sql-driver/mysql"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "git clone \"https://github.com/go-yaml/yaml.git\" \"go/src/gopkg.in/yaml.v2\" \t\u0026\u0026 cp -R go/src/gopkg.in/yaml.v2 go/src/gopkg.in/yaml.v1 \t\u0026\u0026 cd go/src/gopkg.in/yaml.v1 \t\u0026\u0026 git checkout -b v1 origin/v1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone \"https://github.com/go-yaml/yaml.git\" \"/usr/local/go/src/gopkg.in/yaml.v2\" \t\u0026\u0026 cp -R /usr/local/go/src/gopkg.in/yaml.v2 /usr/local/go/src/gopkg.in/yaml.v1 \t\u0026\u0026 cd /usr/local/go/src/gopkg.in/yaml.v1 \t\u0026\u0026 git checkout -b v1 origin/v1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tmux-2.0.tar.gz",
            "./"
          ]
        },
        {
          "CmdLine": [
            "tar -xzvf tmux-2.0.tar.gz \t\u0026\u0026 rm -f tmux-2.0.tar.gz \t\u0026\u0026 cd tmux-2.0 \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \t\u0026\u0026 curl -sSL https://get.rvm.io |bash -s stable --ruby \t\u0026\u0026 echo \"source /etc/profile\" \u003e\u003e /etc/zprofile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "-l",
            "gem install tmuxinator"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "git clone git://github.com/bwithem/oh-my-zsh.git ~/.oh-my-zsh     \u0026\u0026 chsh -s /bin/zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vim-7.4.tar.bz2",
            "./"
          ]
        },
        {
          "CmdLine": [
            "tar -xjvf vim-7.4.tar.bz2 \t\u0026\u0026 rm -f vim-7.4.tar.bz2 \t\u0026\u0026 cd vim74 \t\u0026\u0026 ./configure --with-features=huge  --enable-multibyte --enable-xim --with-x --enable-pythoninterp=yes --enable-cscope --enable-fontset --with-python-config-dir=/usr/lib64/python2.6/config \t\u0026\u0026 make \t\u0026\u0026 make install \t\u0026\u0026 git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle \t\u0026\u0026 git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim \t\u0026\u0026 git clone \"https://github.com/SirVer/ultisnips.git\" ~/.vim/bundle/ultisnips \t\u0026\u0026 git clone \"https://github.com/motemen/git-vim.git\" ~/.vim/bundle/git-vim \t\u0026\u0026 git clone \"https://github.com/tpope/vim-fugitive.git\" ~/.vim/bundle/vim-fugitive \t\u0026\u0026 git clone \"https://github.com/majutsushi/tagbar.git\" ~/.vim/bundle/tagbar \t\u0026\u0026 git clone \"https://github.com/fatih/vim-go.git\" ~/.vim/bundle/vim-go \t\u0026\u0026 git clone \"https://github.com/bling/vim-airline.git\" ~/.vim/bundle/vim-airline \t\u0026\u0026 git clone \"https://github.com/fannheyward/rainbow_parentheses.vim.git\" ~/.vim/bundle/rainbow_parentheses.vim \t\u0026\u0026 rm /bin/vi \t\u0026\u0026 ln -s /usr/local/bin/vim /bin/vi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone \"https://github.com/Valloric/YouCompleteMe.git\" .vim/bundle/YouCompleteMe \t\u0026\u0026 cd .vim/bundle/YouCompleteMe \t\u0026\u0026 git submodule update --init --recursive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "-l",
            "cd .vim/bundle/YouCompleteMe;./install.sh --gocode-completer"
          ],
          "Name": "run",
          "PrependShell": false
        }
      ]
    }
  ]
}