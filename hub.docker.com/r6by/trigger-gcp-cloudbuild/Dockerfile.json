{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/github.com/scottrigby/trigger-gcp-cloudbuild"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add git ca-certificates \u0026\u0026     go get -u github.com/golang/dep/... \u0026\u0026     dep ensure -v --vendor-only \u0026\u0026     CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main . \u0026\u0026 cp main /tmp/ \u0026\u0026     cp -r source /tmp/"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/main",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/source",
            "source"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/ssl/certs/ca-certificates.crt",
            "/etc/ssl/certs/ca-certificates.crt"
          ]
        },
        {
          "CmdLine": [
            "./main"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}