MetaArgs: null
Stages:
- BaseName: neurodebian:xenial-non-free
  Commands:
  - Maintainer: The C-PAC Team <cnl@childmind.org>
    Name: maintainer
  - CmdLine:
    - mkdir -p /code
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&      apt-get install -y curl &&      curl -sL https://deb.nodesource.com/setup_11.x
      | bash - &&      apt-get install -y nodejs &&      rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bids-validator
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y       build-essential       cmake       git       graphviz       graphviz-dev       gsl-bin       libcanberra-gtk-module       libexpat1-dev       libgiftiio-dev       libglib2.0-dev       libglu1-mesa       libglu1-mesa-dev       libjpeg-progs       libgl1-mesa-dri       libglw1-mesa       libxml2       libxml2-dev       libxext-dev       libxft2       libxft-dev       libxi-dev       libxmu-headers       libxmu-dev       libxpm-dev       libxslt1-dev       m4       make       mesa-common-dev       mesa-utils       netpbm       pkg-config       tcsh       unzip       xvfb       xauth       zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y       dh-autoreconf       libgsl-dev       libmotif-dev       libtool       libx11-dev       libxext-dev       x11proto-xext-dev       x11proto-print-dev       xutils-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://anongit.freedesktop.org/xorg/lib/libXp /tmp/libXp &&     cd
      /tmp/libXp &&     ./autogen.sh &&     ./configure &&     make &&     make install
      &&     cd / &&     rm -rf /tmp/libXp
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/c3d &&     curl -sSL "http://downloads.sourceforge.net/project/c3d/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz"     |
      tar -xzC /opt/c3d --strip-components 1
    Name: run
    PrependShell: true
  - Env:
    - Key: C3DPATH
      Value: /opt/c3d/
    Name: env
  - Env:
    - Key: PATH
      Value: $C3DPATH/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - required_afni_pkgs.txt
    - /opt/required_afni_pkgs.txt
  - CmdLine:
    - libs_path=/usr/lib/x86_64-linux-gnu &&     if [ -f $libs_path/libgsl.so.19 ];
      then            ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0;     fi &&     mkdir
      -p /opt/afni &&     curl -sO https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz
      &&     tar zxv -C /opt/afni --strip-components=1 -f linux_openmp_64.tgz $(cat
      /opt/required_afni_pkgs.txt) &&     rm -rf linux_openmp_64.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/afni:$PATH
    Name: env
  - CmdLine:
    - apt-get update  &&     apt-get install -y --no-install-recommends                     fsl-core                     fsl-atlases                     fsl-mni152-templates
    Name: run
    PrependShell: true
  - Env:
    - Key: FSLDIR
      Value: /usr/share/fsl/5.0
    - Key: FSLOUTPUTTYPE
      Value: NIFTI_GZ
    - Key: FSLMULTIFILEQUIT
      Value: "TRUE"
    - Key: POSSUMDIR
      Value: /usr/share/fsl/5.0
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib/fsl/5.0:$LD_LIBRARY_PATH
    - Key: FSLTCLSH
      Value: /usr/bin/tclsh
    - Key: FSLWISH
      Value: /usr/bin/wish
    - Key: PATH
      Value: /usr/lib/fsl/5.0:$PATH
    Name: env
  - CmdLine:
    - cd /tmp &&     curl -sO http://fcon_1000.projects.nitrc.org/indi/cpac_resources.tar.gz
      &&     tar xfz cpac_resources.tar.gz &&     cd cpac_image_resources &&     cp
      -n MNI_3mm/* $FSLDIR/data/standard &&     cp -n MNI_4mm/* $FSLDIR/data/standard
      &&     cp -n symmetric/* $FSLDIR/data/standard &&     cp -nr tissuepriors/2mm
      $FSLDIR/data/standard/tissuepriors &&     cp -nr tissuepriors/3mm $FSLDIR/data/standard/tissuepriors
      &&     cp -n HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz $FSLDIR/data/atlases/HarvardOxford
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y ants
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/ICA-AROMA
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/rhr-pruim/ICA-AROMA/archive/v0.4.3-beta.tar.gz |
      tar -xzC /opt/ICA-AROMA --strip-components 1
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /opt/ICA-AROMA/ICA_AROMA.py
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/ICA-AROMA:$PATH
    Name: env
  - CmdLine:
    - curl -sO https://repo.continuum.io/miniconda/Miniconda-3.8.3-Linux-x86_64.sh
      &&     bash Miniconda-3.8.3-Linux-x86_64.sh -b -p /usr/local/miniconda &&     rm
      Miniconda-3.8.3-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/miniconda/bin:$PATH
    Name: env
  - CmdLine:
    - conda install -y         blas
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y          cython==0.26         jinja2==2.7.2         matplotlib=2.0.2         networkx==1.11         nose==1.3.7         numpy==1.13.0         pandas==0.23.4         scipy==0.19.1         traits==4.6.0         wxpython==3.0.0.0         pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /opt/requirements.txt
  - CmdLine:
    - pip install --upgrade pip==9.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r /opt/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install xvfbwrapper
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cpac_templates.tar.gz
    - /cpac_resources/cpac_templates.tar.gz
  - CmdLine:
    - tar xzvf /cpac_resources/cpac_templates.tar.gz &&     rm -f /cpac_resources/cpac_templates.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /ndmg_atlases &&     curl https://s3.amazonaws.com/mrneurodata/data/resources/ndmg_atlases.zip
      -o /ndmg_atlases/ndmg_atlases.zip &&     cd /ndmg_atlases && unzip /ndmg_atlases/ndmg_atlases.zip
      &&     rm /ndmg_atlases/ndmg_atlases.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /code
  - CmdLine:
    - pip install -e /code
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /code/run.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default_pipeline.yaml
    - /cpac_resources/default_pipeline.yaml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - test_pipeline.yaml
    - /cpac_resources/test_pipeline.yaml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pipe-test_ci.yml
    - /cpac_resources/pipe-test_ci.yml
  - CmdLine:
    - /code/run.py
    Name: entrypoint
    PrependShell: false
  From:
    Image: neurodebian:xenial-non-free
  Name: ""
  Platform: ""
  SourceCode: FROM neurodebian:xenial-non-free
