{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lordius/alpine-base:edge",
      "SourceCode": "FROM lordius/alpine-base:edge",
      "Platform": "",
      "From": {
        "Image": "lordius/alpine-base:edge"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "andriy.khomych@gmail.com"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUSH_VERSION",
              "Value": "8.x"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e \u0026\u0026 \taddgroup -g 1000 -S www-data \u0026\u0026 \tadduser -u 1000 -D -S -s /bin/bash -G www-data www-data \u0026\u0026 \tsed -i '/^www-data/s/!/*/' /etc/shadow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache mysql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add libmemcached-dev redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /temp_docker \u0026\u0026 chmod -R +x /temp_docker \u0026\u0026 cd /temp_docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache php7-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache php7-dev php7-openssl     php7-common php7-ftp php7-gd     php7-dom  php7-sockets     php7-zlib php7-bz2 php7-pear php7-cli     php7-exif php7-phar php7-zip php7-calendar     php7-iconv php7-imap php7-soap     php7-mbstring php7-bcmath     php7-mcrypt php7-curl php7-json     php7-opcache php7-ctype php7-xml     php7-xsl php7-ldap php7-xmlwriter php7-xmlreader     php7-intl php7-tokenizer php7-session      php7-pcntl php7-posix php7-apcu php7-simplexml     php7-pdo     php7-mysqlnd php7-pdo_mysql php7-mysqli     php7-pgsql php7-pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "crontasks.txt",
            "/home"
          ]
        },
        {
          "CmdLine": [
            "echo \"relayhost = [$PHP_SENDMAIL_HOST]:$PHP_SENDMAIL_PORT\" \u003e\u003e /etc/postfix/main.cf \u0026\u0026     echo \"myhostname = $PHP_SENDMAIL_HOST\" \u003e\u003e /etc/postfix/main.cf \u0026\u0026     echo \"inet_interfaces = all\" \u003e\u003e /etc/postfix/main.cf \u0026\u0026     echo \"recipient_delimiter = +\" \u003e\u003e /etc/postfix/main.cf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 git clone https://github.com/php/pecl-php-uploadprogress.git \u0026\u0026 cd pecl-php-uploadprogress \u0026\u0026     phpize \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     echo 'extension=uploadprogress.so' \u003e /etc/php7/conf.d/uploadprogress.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/xdebug \u0026\u0026 chmod -R +x /var/xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 wget https://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 tar -xvzf xdebug-$XDEBUG_VERSION.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 cd xdebug-$XDEBUG_VERSION \u0026\u0026 phpize"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 cd xdebug-$XDEBUG_VERSION \u0026\u0026 ./configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 cd xdebug-$XDEBUG_VERSION \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 cd xdebug-$XDEBUG_VERSION \u0026\u0026 make test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 cd xdebug-$XDEBUG_VERSION \u0026\u0026 echo \";zend_extension = xdebug.so\" \u003e /etc/php7/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /temp_docker/xdebug-$XDEBUG_VERSION/modules/xdebug.so /usr/lib/php7/modules/xdebug.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i     -e \"$ a xdebug.default_enable = 0\"     -e \"$ a xdebug.remote_enable = 1\"     -e \"$ a xdebug.remote_handler = dbgp\"     -e \"$ a xdebug.remote_port = 9000\"     -e \"$ a xdebug.remote_autostart = 1\"     -e \"$ a xdebug.remote_connect_back = 1\"     -e \"$ a xdebug.max_nesting_level = 256\"     -e \"$ a xdebug.profiler_enable = 0\"     -e \"$ a xdebug.profiler_enable_trigger = 1\"     -e \"$ a xdebug.profiler_output_dir = /var/xdebug\"     /etc/php7/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 git clone https://github.com/php-memcached-dev/php-memcached \u0026\u0026     cd php-memcached \u0026\u0026 git checkout php7 \u0026\u0026 git pull \u0026\u0026     phpize \u0026\u0026     ./configure --with-libmemcached-dir=no --disable-memcached-sasl \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     echo 'extension=memcached.so' \u003e /etc/php7/conf.d/memcached.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /temp_docker \u0026\u0026 git clone https://github.com/phpredis/phpredis.git \u0026\u0026 cd phpredis \u0026\u0026     git checkout php7-ipv6 \u0026\u0026 git pull \u0026\u0026     phpize  \u0026\u0026     ./configure  \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     echo 'extension=redis.so' \u003e /etc/php7/conf.d/redis.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ie 's/-n//g' /usr/bin/pecl \u0026\u0026     yes | pecl install mongodb \u0026\u0026     echo 'extension=mongodb.so' \u003e /etc/php7/conf.d/mongodb.ini \u0026\u0026     rm -rf /tmp/pear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/php7/php-fpm.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "configs/php7/php-fpm.conf",
            "/etc/php7/php-fpm.conf"
          ]
        },
        {
          "CmdLine": [
            "touch /var/log/fpm-php.www.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/log/fpm-php.www.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i     -e \"s/^listen.*/listen = 8000/\"     /etc/php7/php-fpm.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i     -e \"s/^expose_php.*/expose_php = Off/\"     -e \"s/^;date.timezone.*/date.timezone = UTC/\"     -e \"s/^memory_limit.*/memory_limit = 256M/\"     -e \"s/^max_execution_time.*/max_execution_time = 150/\"     -e \"s/^post_max_size.*/post_max_size = 512M/\"     -e \"s/^upload_max_filesize.*/upload_max_filesize = 512M/\"     -e \"s/^allow_url_fopen.*/allow_url_fopen = On/\"     -e \"s/^;always_populate_raw_post_data.*/always_populate_raw_post_data = -1/\"     -e \"s/^;sendmail_path.*/;sendmail_path = opensmtpd/\"     /etc/php7/php.ini \u0026\u0026     git config --global user.name \"Lordius PHP-FPM\" \u0026\u0026     git config --global user.email \"admin@lordius.com\" \u0026\u0026     git config --global push.default current"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "setup_extensions/composer_drush.sh",
            "/temp_docker/composer_drush.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod -R +x /temp_docker \u0026\u0026 cd /temp_docker \u0026\u0026 bash /temp_docker/composer_drush.sh $DRUSH_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026      rm -rf /var/cache/apk/* \u0026\u0026      rm -rf /var/www/localhost/htdocs/* \u0026\u0026      rm -rf /temp_docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /temp_configs_dir \u0026\u0026 chmod -R +x /temp_configs_dir \u0026\u0026 cd /temp_configs_dir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh \u0026\u0026 mkdir -p /var/www/localhost/htdocs \u0026\u0026 chown -R www-data:www-data /var/www/ \u0026\u0026 chown -R www-data:www-data /var/log/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/localhost/htdocs"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}