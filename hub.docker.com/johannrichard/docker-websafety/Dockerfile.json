{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.19",
      "SourceCode": "FROM phusion/baseimage:0.9.19",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.19"
      },
      "Commands": [
        {
          "Maintainer": "support@diladele.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends apt-utils             apache2             libapache2-mod-wsgi             python-ldap\t            sudo             python-openssl             krb5-user             sqlite \u0026\u0026     a2dissite 000-default \u0026\u0026     curl http://packages.diladele.com/diladele_pub.asc -o diladele_pub.asc \u0026\u0026 apt-key add diladele_pub.asc \u0026\u0026 rm diladele_pub.asc \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends python-pip \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install django==1.8.17 \u0026\u0026     pip install pytz \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libjpeg-dev zlib1g-dev python-dev \u0026\u0026     pip install setuptools \u0026\u0026     pip install reportlab==3.4.0 \u0026\u0026     apt-get remove -y --auto-remove python-pip \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ubuntu16.diladele.com/ubuntu/ xenial main\" \u003e /etc/apt/sources.list.d/ubuntu16.diladele.com.list \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends             libecap3             squid-common             squid             squidclient \u0026\u0026     rm -rf /var/run/squid.pid \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DDWS_VER",
              "Value": "5.2.0.210A"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl http://packages.diladele.com/websafety/${DDWS_VER}/amd64/release/ubuntu16/websafety-${DDWS_VER}_amd64.deb -o websafety-${DDWS_VER}_amd64.deb  \u0026\u0026 \tdpkg --install websafety-${DDWS_VER}_amd64.deb \u0026\u0026 \trm -f websafety-${DDWS_VER}_amd64.deb \u0026\u0026 \ta2ensite websafety \u0026\u0026 \tmkdir -p /var/log/websafety"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /etc/crontab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/squid /etc/service/apache2 /etc/service/wsicap /etc/service/wsmgr /etc/service/wssyncw/ /opt/websafety/bin/certmgr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/squid.conf",
            "/etc/squid/squid.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/websafety_update",
            "/etc/cron.daily"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/wsicap",
            "/etc/service/wsicap/run"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/wsmgr",
            "/etc/service/wsmgr/run"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/wssyncw",
            "/etc/service/wssyncw/run"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/squid",
            "/etc/service/squid/run"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/apache2",
            "/etc/service/apache2/run"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/reload.sh",
            "/opt/websafety/bin/reload.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/restart.sh",
            "/opt/websafety/bin/restart.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/system.json",
            "/opt/websafety/etc/system.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/license.pem",
            "/opt/websafety/etc/license.pem"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contents/firstrun.sh",
            "/usr/local/bin/firstrun.sh"
          ]
        },
        {
          "CmdLine": [
            "chown -R websafety:websafety /opt/websafety \u0026\u0026     chmod +x /opt/websafety/bin/* \u0026\u0026     chmod +x /usr/local/bin/firstrun.sh \u0026\u0026     chmod +x /etc/cron.daily/websafety_update \u0026\u0026     chmod u+s /opt/websafety/bin/* \u0026\u0026     chmod 755 /opt/websafety/bin/certmgr \u0026\u0026     chmod 755 /opt/websafety/bin/report \u0026\u0026     chmod +x /etc/service/squid/run \t\t/etc/service/wsmgr/run \t\t/etc/service/wssyncw/run \t\t/etc/service/wsicap/run \t\t/etc/service/apache2/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "18889",
            "18999",
            "3126",
            "3127",
            "3128",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/websafety/etc"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/websafety/var/spool"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/websafety/var/console"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/websafety/var/db"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/websafety/var/log"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/websafety/var/reports"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/squid"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/spool"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/squid"
          ]
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}