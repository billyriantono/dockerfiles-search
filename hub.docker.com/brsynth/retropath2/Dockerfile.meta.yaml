MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DOWNLOAD_URL
      Value: http://download.knime.org/analytics-platform/linux/knime_3.6.2.linux.gtk.x86_64.tar.gz
    Name: env
  - Env:
    - Key: INSTALLATION_DIR
      Value: /usr/local
    Name: env
  - Env:
    - Key: KNIME_DIR
      Value: $INSTALLATION_DIR/knime
    Name: env
  - Env:
    - Key: HOME_DIR
      Value: /home/knime
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y software-properties-common curl tzdata     &&
      apt-get update     && apt-get install -y          openjdk-8-jdk libgtk2.0-0
      libxtst6          libwebkitgtk-3.0-0          python python-dev python-pip          r-base
      r-recommended wget
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L "$DOWNLOAD_URL" | tar vxz -C $INSTALLATION_DIR     && mv $INSTALLATION_DIR/knime_*
      $INSTALLATION_DIR/knime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --purge autoremove -y software-properties-common curl  && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pandas && pip install protobuf
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e 'install.packages(c("Rserve"), repos="http://cran.rstudio.com/")'
    Name: run
    PrependShell: true
  - Expression: ARG WORKFLOW_DIR="workflow/"
    Name: onbuild
  - Expression: ARG UPDATE_SITES
    Name: onbuild
  - Expression: RUN mkdir -p /payload
    Name: onbuild
  - Expression: COPY $WORKFLOW_DIR /payload/workflow
    Name: onbuild
  - Expression: RUN mkdir -p /payload/meta
    Name: onbuild
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_conf/getversion.py
    - /scripts/getversion.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_conf/listvariables.py
    - /scripts/listvariables.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_conf/listplugins.py
    - /scripts/listplugins.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_conf/run.sh
    - /scripts/run.sh
  - CmdLine:
    - chmod +x /scripts/run.sh
    Name: run
    PrependShell: true
  - Expression: RUN full_version=$(python /scripts/getversion.py /payload/workflow/)
      && version=$(python /scripts/getversion.py /payload/workflow/ | awk '{split($0,a,".");
      print a[1]"."a[2]}') && echo "http://update.knime.org/analytics-platform/$version"
      >> /payload/meta/updatesites && echo "http://update.knime.org/community-contributions/trusted/$version"
      >> /payload/meta/updatesites && echo $UPDATE_SITES | tr ',' '\n' >> /payload/meta/updatesites
    Name: onbuild
  - Expression: RUN find /payload/workflow -name settings.xml -exec python /scripts/listplugins.py
      {} \; | sort -u | awk '!a[$0]++' > /payload/meta/features
    Name: onbuild
  - Expression: RUN python /scripts/listvariables.py /payload/workflow
    Name: onbuild
  - Expression: RUN "$KNIME_DIR/knime" -application org.eclipse.equinox.p2.director
      -r "$(cat /payload/meta/updatesites | tr '\n' ',' | sed 's/,*$//' | sed 's/^,*//')"
      -p2.arch x86_64 -profileProperties org.eclipse.update.install.features=true
      -i "$(cat /payload/meta/features | tr '\n' ',' | sed 's/,*$//' | sed 's/^,*//')"
      -p KNIMEProfile -nosplash
    Name: onbuild
  - Expression: RUN rm /scripts/getversion.py && rm /scripts/listvariables.py && rm
      /scripts/listplugins.py
    Name: onbuild
  - CmdLine:
    - /usr/local/knime/knime -application org.eclipse.equinox.p2.director -nosplash
      -consolelog -r http://update.knime.org/community-contributions/trunk,http://update.knime.com/analytics-platform/3.6,http://update.knime.com/community-contributions/trusted/3.6
      -i org.knime.features.chem.types.feature.group,org.knime.features.datageneration.feature.group,jp.co.infocom.cheminfo.marvin.feature.feature.group,org.knime.features.python.feature.group,org.rdkit.knime.feature.feature.group
      -bundlepool /usr/local/knime/ -d /usr/local/knime/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --quiet --yes install supervisor redis python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install rq redis flask-restful
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rp2.py
    - /home/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisor.conf
    - /home/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - flask_rq.py
    - /home/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /home/
  - CmdLine:
    - chmod +x /home/start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/start.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8991"
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
