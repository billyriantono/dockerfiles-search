MetaArgs: null
Stages:
- BaseName: python:3.5-slim
  Commands:
  - Maintainer: Yieldr
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Key: AIRFLOW_VERSION
    Name: arg
    Value: "1.9"
  - Key: AIRFLOW_HOME
    Name: arg
    Value: /usr/local/airflow
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_MESSAGES
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - set -ex     && buildDeps='         python3-dev         libkrb5-dev         libsasl2-modules         libsasl2-dev         libssl-dev         libffi-dev         build-essential         libblas-dev         liblapack-dev         libpq-dev         git     '     &&
      apt-get update -yqq     && apt-get upgrade -yqq     && apt-get install -yqq
      --no-install-recommends         $buildDeps         python3-pip         python3-requests         mysql-client         mysql-server         default-libmysqlclient-dev         apt-utils         curl         rsync         netcat         locales     &&
      sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen     &&
      locale-gen     && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8     && useradd
      -ms /bin/bash -d ${AIRFLOW_HOME} airflow     && usermod -a -G sudo airflow     &&
      pip install -U pip setuptools wheel     && pip install Cython     && pip install
      pytz     && pip install pyOpenSSL     && pip install ndg-httpsclient     &&
      pip install pyasn1     && pip install pymysql     && pip install flower     &&
      pip install mysqlclient     && pip install boto3     && pip install boto     &&
      pip install apache-airflow[s3,slack,crypto,mysql,postgres,jdbc]==$AIRFLOW_VERSION     &&
      pip install apache-airflow[celery]      && pip install celery[redis]      &&
      pip install thrift_sasl     && pip install unicodecsv==0.14.1     && pip install
      impyla==0.14.1     && pip install pyhive==0.5.1     && apt-get purge --auto-remove
      -yqq $buildDeps     && apt-get autoremove -yqq --purge     && pip install simplejson      &&
      pip install sqlalchemy     && pip install prometheus_client     && pip install
      flask-bcrypt     && apt-get clean     && rm -rf         /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /usr/share/man         /usr/share/doc         /usr/share/doc-base
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script/entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - mkdir ${AIRFLOW_HOME}/config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/airflow.cfg
    - ${AIRFLOW_HOME}/airflow.cfg
  - CmdLine:
    - mkdir /usr/local/logs
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 777 /usr/local/logs
    Name: run
    PrependShell: true
  - CmdLine:
    - 'chown -R airflow: ${AIRFLOW_HOME}'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - prometheus_exporter
    - /usr/local/plugins/prometheus_exporter
  - Name: expose
    Ports:
    - "5555"
    - "8080"
    - "8793"
  From:
    Image: python:3.5-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.5-slim
