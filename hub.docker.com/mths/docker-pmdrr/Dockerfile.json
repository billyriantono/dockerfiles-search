{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'deb http://www.rabbitmq.com/debian/ testing main' | tee /etc/apt/sources.list.d/rabbitmq.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get -y --no-install-recommends install apt-utils  \u0026\u0026 echo \"mysql-server mysql-server/root_password password root\" | debconf-set-selections  \u0026\u0026 echo \"mysql-server mysql-server/root_password_again password root\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -qq -y --allow-unauthenticated --no-install-recommends ca-certificates mysql-server libmysqlclient-dev git build-essential wget unzip curl mysql-client python-dev python python-pip nano redis-server default-jdk rabbitmq-server openssh-client libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip  \u0026\u0026 pip install setuptools  \u0026\u0026 pip install pytest mock MySQL-python redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dynamo-server",
            "/etc/init.d/dynamo-server"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt/dynamo  \u0026\u0026 cd /opt/dynamo  \u0026\u0026 /usr/bin/curl -L https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | /bin/tar xz  \u0026\u0026 echo \"/usr/bin/java -Djava.library.path=/opt/dynamo/DynamoDBLocal_lib -jar /opt/dynamo/DynamoDBLocal.jar -sharedDb --inMemory\" \u003e startDynamo.sh  \u0026\u0026 chmod +x startDynamo.sh  \u0026\u0026 chmod 755 /etc/init.d/dynamo-server  \u0026\u0026 cd ~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON_SITEPACKAGES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \u0026\u0026 unzip google-cloud-sdk.zip \u0026\u0026 rm google-cloud-sdk.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --additional-components app-engine-java app-engine-python app kubectl alpha beta gcd-emulator pubsub-emulator cloud-datastore-emulator app-engine-go bigtable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "google-cloud-sdk/bin/gcloud config set --installation component_manager/disable_update_check true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -- 's/\\\"disable_updater\\\": false/\\\"disable_updater\\\": true/g' /google-cloud-sdk/lib/googlecloudsdk/core/config.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/.config"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}