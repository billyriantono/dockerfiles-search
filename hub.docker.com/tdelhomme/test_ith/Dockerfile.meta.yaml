MetaArgs: null
Stages:
- BaseName: nfcore/base
  Commands:
  - Labels:
    - Key: base_image
      Value: '"nfcore/base"'
    Name: label
  - Labels:
    - Key: version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: software
      Value: '"svaba-nf"'
    Name: label
  - Labels:
    - Key: software.version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: about.summary
      Value: '"Container image containing all requirements for ITH_pipeline"'
    Name: label
  - Labels:
    - Key: about.home
      Value: '"http://github.com/delhommet/ITH_pipeline"'
    Name: label
  - Labels:
    - Key: about.documentation
      Value: '"http://github.com/delhommet/ITH_pipeline/README.md"'
    Name: label
  - Labels:
    - Key: about.license_file
      Value: '"http://github.com/delhommet/ITH_pipeline/LICENSE.txt"'
    Name: label
  - Labels:
    - Key: about.license
      Value: '"GNU-3.0"'
    Name: label
  - Maintainer: Tiffany Delhomme <delhommet@students.iarc.fr>
    Name: maintainer
  - CmdLine:
    - "apt-get update -y && \tDEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends
      -y build-essential # to have gcc compiler for seaborn"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ && wget http://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz && tar xf cmake-3.2.2.tar.gz
      && cd cmake-3.2.2 && ./configure && make
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x ~/cmake-3.2.2/bin/cmake && ln -s ~/cmake-3.2.2/bin/cmake /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c bioconda bcftools=1.7
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c bioconda samtools=1.7
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install multiprocess && pip install pandas && pip install seaborn && pip
      install matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install matplotlib-venn #in order to run the BBeval script'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ && git clone https://michaelchughes@bitbucket.org/michaelchughes/bnpy-dev/
    Name: run
    PrependShell: true
  - Env:
    - Key: BNPYROOT
      Value: ~/bnpy-dev
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: ${PYTHONPATH}:~/bnpy-dev
    Name: env
  - Env:
    - Key: BNPYOUTDIR
      Value: ~/nbpy-dev-results
    Name: env
  - CmdLine:
    - cd ~ && wget https://packages.gurobi.com/8.1/gurobi8.1.1_linux64.tar.gz && tar
      -zxvf gurobi8.1.1_linux64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/gurobi811/linux64/src/build/ && make && cp libgurobi_c++.a ../../lib/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:~/gurobi811/linux64/bin
    Name: env
  - Env:
    - Key: GRB_LICENSE_FILE
      Value: ~/gurobi811/gurobi.lic
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"${LD_LIBRARY_PATH}:~/gurobi811/linux64/lib"'
    Name: env
  - Env:
    - Key: GUROBI_LIB
      Value: ~/gurobi811/linux64/lib/libgurobi81.so
    Name: env
  - CmdLine:
    - cd ~ && git clone https://github.com/raphael-group/hatchet
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd ~/hatchet && sed -i ''5s/""/"~\/gurobi811\/"/g'' FindGUROBI.cmake && sed
      -i ''7s/-std=c++11/-std=c++11 -pthread/g'' CMakeLists.txt # second sed only
      in this dockerfile'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/hatchet/build && cd ~/hatchet/build/ && cmake ..         -DGUROBI_CPP_LIB=/root/gurobi811/linux64/lib/libgurobi_c++.a         -DGUROBI_INCLUDE_DIR=/root/gurobi811/linux64/include/         -DGUROBI_LIB=/root/gurobi811/linux64/lib/libgurobi81.so
      && make
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i ''451,452s/.*/#&/'' ~/hatchet/utils/ArgParsing.py # see issue: https://github.com/raphael-group/hatchet/issues/1'
    Name: run
    PrependShell: true
  From:
    Image: nfcore/base
  Name: ""
  Platform: ""
  SourceCode: FROM nfcore/base
