{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build-env",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04 AS build-env",
      "Platform": "",
      "As": "build-env",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.2.23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential autoconf make automake bison re2c libxml2-dev libssl-dev libfreetype6-dev libcurl4-gnutls-dev libjpeg-dev libpng-dev libreadline6-dev  pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /sbin/nologin www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -O nginx.tar.gz http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -zxf nginx.tar.gz \u0026\u0026 rm -f nginx.tar.gz \u0026\u0026      cd nginx-$NGINX_VERSION \u0026\u0026     ./configure --prefix=/usr/local/nginx     --user=www --group=www     --pid-path=/var/run/nginx.pid     --with-pcre     --without-mail_pop3_module     --without-mail_imap_module     --without-mail_smtp_module     --with-http_v2_module     --with-http_ssl_module     --with-http_gzip_static_module     --with-http_stub_status_module \u0026\u0026     make -j4 \u003e /dev/null \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -O php.tar.gz http://php.net/distributions/php-$PHP_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar zxf php.tar.gz \u0026\u0026 rm -f php.tar.gz \u0026\u0026      cd php-$PHP_VERSION \u0026\u0026     ./configure --prefix=/usr/local/php     --with-config-file-path=/usr/local/php/etc     --with-config-file-scan-dir=/usr/local/php/etc/php.d     --with-fpm-user=www     --with-fpm-group=www     --with-mysqli     --with-pdo-mysql     --with-openssl     --with-gd     --with-iconv     --with-zlib     --with-gettext     --with-curl     --with-png-dir     --with-jpeg-dir     --with-freetype-dir     --enable-fpm     --enable-xml     --enable-inline-optimization     --enable-mbregex     --enable-mbstring     --enable-mysqlnd     --enable-sockets     --enable-zip     --enable-soap     --enable-bcmath     --enable-exif     --enable-pcntl     --disable-cgi     --disable-phpdbg     \u0026\u0026     make -j4 \u003e /dev/null \u0026\u0026 make install;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp ./php-$PHP_VERSION/php.ini-production /usr/local/php/etc/php.ini \u0026\u0026     mv /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \u0026\u0026     mv /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     strip /usr/local/php/bin/php \u0026\u0026     strip /usr/local/php/sbin/php-fpm \u0026\u0026     strip /usr/local/nginx/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^;date\\.timezone[ ]*=[ ]*/date\\.timezone = Asia\\/Shanghai/' /usr/local/php/etc/php.ini  \u0026\u0026     sed -i 's/^session\\.use_strict_mode = 0/session\\.use_strict_mode = 1/' /usr/local/php/etc/php.ini  \u0026\u0026     sed -i 's/^session\\.cookie_httponly =$/session\\.cookie_httponly = 1/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^memory_limit = 128M/memory_limit = 128M/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^expose_php = On/expose_php = Off/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^upload_max_filesize = 2M/upload_max_filesize = 100M/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^listen = 127\\.0\\.0\\.1:9000/listen = \\/var\\/run\\/php-fpm\\.sock/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^;listen.owner = www/listen.owner = www/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^;listen.group = www/listen.group = www/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^;listen.mode = 0660/listen.mode = 0660/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^pm.max_children = 5/pm.max_children = 10/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^pm.max_spare_servers = 3/pm.max_spare_servers = 9/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^pm.start_servers = 2/pm.start_servers = 5/' /usr/local/php/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln  -s  /usr/local/php/bin/php    /usr/local/bin/php \u0026\u0026     ln  -s  /usr/local/php/bin/phpize    /usr/local/bin/phpize \u0026\u0026     ln  -s  /usr/local/php/bin/pecl    /usr/local/bin/pecl \u0026\u0026     ln  -s  /usr/local/php/bin/php-config    /usr/local/bin/php-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 -b 3.4.x git://github.com/phalcon/cphalcon.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd cphalcon/build \u0026\u0026 ./install  /usr/local/php/bin/phpize --php-config /usr/local/php/bin/php-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=phalcon.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "redis-4.3.0.tgz",
            "."
          ]
        },
        {
          "CmdLine": [
            "cd redis-4.3.0 \u0026\u0026 phpize \u0026\u0026  ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 echo \"extension=redis.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php --ri redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/longxinH/xhprof"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd xhprof/extension \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 echo \"extension=xhprof.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -O composer https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/nginx",
            "/usr/local/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/php",
            "/usr/local/php"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/src/composer",
            "/usr/local/bin/composer"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/lib/x86_64-linux-gnu/liblzma.so.5",
            "/lib/x86_64-linux-gnu/libcom_err.so.2",
            "/lib/x86_64-linux-gnu/libc.so.6",
            "/lib/x86_64-linux-gnu/libcrypt.so.1",
            "/lib/x86_64-linux-gnu/libdl.so.2",
            "/lib/x86_64-linux-gnu/libgcc_s.so.1",
            "/lib/x86_64-linux-gnu/libkeyutils.so.1",
            "/lib/x86_64-linux-gnu/libm.so.6",
            "/lib/x86_64-linux-gnu/libpthread.so.0",
            "/lib/x86_64-linux-gnu/libresolv.so.2",
            "/lib/x86_64-linux-gnu/libz.so.1",
            "/lib/x86_64-linux-gnu/"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/lib/x86_64-linux-gnu/libhx509.so.5",
            "/usr/lib/x86_64-linux-gnu/libsqlite3.so.0",
            "/usr/lib/x86_64-linux-gnu/libjpeg.so.8",
            "/usr/lib/x86_64-linux-gnu/libpng16.so.16",
            "/usr/lib/x86_64-linux-gnu/libcurl-gnutls.so.4",
            "/usr/lib/x86_64-linux-gnu/libssl.so.1.1",
            "/usr/lib/x86_64-linux-gnu/libasn1.so.8",
            "/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1",
            "/usr/lib/x86_64-linux-gnu/libgnutls.so.30",
            "/usr/lib/x86_64-linux-gnu/libhcrypto.so.4",
            "/usr/lib/x86_64-linux-gnu/libheimbase.so.1",
            "/usr/lib/x86_64-linux-gnu/libhogweed.so.4",
            "/usr/lib/x86_64-linux-gnu/libidn2.so.0",
            "/usr/lib/x86_64-linux-gnu/libk5crypto.so.3",
            "/usr/lib/x86_64-linux-gnu/liblber-2.4.so.2",
            "/usr/lib/x86_64-linux-gnu/libnettle.so.6",
            "/usr/lib/x86_64-linux-gnu/libroken.so.18",
            "/usr/lib/x86_64-linux-gnu/libstdc++.so.6",
            "/usr/lib/x86_64-linux-gnu/libwind.so.0",
            "/usr/lib/x86_64-linux-gnu/libxml2.so.2",
            "/usr/lib/x86_64-linux-gnu/libfreetype.so.6",
            "/usr/lib/x86_64-linux-gnu/libicuuc.so.60",
            "/usr/lib/x86_64-linux-gnu/libnghttp2.so.14",
            "/usr/lib/x86_64-linux-gnu/librtmp.so.1",
            "/usr/lib/x86_64-linux-gnu/libpsl.so.5",
            "/usr/lib/x86_64-linux-gnu/libgssapi_krb5.so.2",
            "/usr/lib/x86_64-linux-gnu/libldap_r-2.4.so.2",
            "/usr/lib/x86_64-linux-gnu/libicudata.so.60",
            "/usr/lib/x86_64-linux-gnu/libunistring.so.2",
            "/usr/lib/x86_64-linux-gnu/libgmp.so.10",
            "/usr/lib/x86_64-linux-gnu/libp11-kit.so.0",
            "/usr/lib/x86_64-linux-gnu/libtasn1.so.6",
            "/usr/lib/x86_64-linux-gnu/libkrb5.so.26",
            "/usr/lib/x86_64-linux-gnu/libkrb5support.so.0",
            "/usr/lib/x86_64-linux-gnu/libkrb5.so.3",
            "/usr/lib/x86_64-linux-gnu/libsasl2.so.2",
            "/usr/lib/x86_64-linux-gnu/libgssapi.so.3",
            "/usr/lib/x86_64-linux-gnu/libffi.so.6",
            "/usr/lib/x86_64-linux-gnu/libheimntlm.so.0",
            "/usr/lib/x86_64-linux-gnu/"
          ]
        },
        {
          "CmdLine": [
            "useradd -m -s /sbin/nologin www \u0026\u0026     mkdir /var/log/nginx \u0026\u0026     mkdir -p /etc/nginx/conf.d \u0026\u0026     mkdir -p /app/public \u0026\u0026 chown -R www:www /app \u0026\u0026     ln  -s  /usr/local/php/bin/php    /usr/local/bin/php \u0026\u0026     ln  -s  /usr/local/php/bin/phpize    /usr/local/bin/phpize \u0026\u0026     ln  -s  /usr/local/php/bin/pecl    /usr/local/bin/pecl \u0026\u0026     ln  -s  /usr/local/php/bin/php-config    /usr/local/bin/php-config \u0026\u0026     ln  -s  /usr/local/nginx/sbin/nginx    /usr/local/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/usr/local/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/default_server.conf",
            "/etc/nginx/conf.d/default_server.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/composer \u0026\u0026 chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y tzdata vim cron \u0026\u0026 apt-get clean \u0026\u0026 ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime \u0026\u0026 dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}