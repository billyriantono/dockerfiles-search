{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build-env",
      "BaseName": "centos:7.5.1804",
      "SourceCode": "FROM centos:7.5.1804 AS build-env",
      "Platform": "",
      "As": "build-env",
      "From": {
        "Image": "centos:7.5.1804"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.14.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.1.27"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "yum install -y epel-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y     gcc gcc-c++ make wget     zlib-devel openssl-devel pcre-devel libxml2-devel libcurl-devel gd-devel libpng-devel libjpeg-devel freetype-devel     libzip-devel     re2c     autoconf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /sbin/nologin www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -O nginx.tar.gz http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \u0026\u0026  tar -zxf nginx.tar.gz \u0026\u0026 rm -f nginx.tar.gz \u0026\u0026      cd nginx-$NGINX_VERSION \u0026\u0026     ./configure --prefix=/usr/local/nginx     --user=www --group=www     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --with-pcre     --without-mail_pop3_module     --without-mail_imap_module     --without-mail_smtp_module     --with-http_v2_module     --with-http_ssl_module     --with-http_gzip_static_module     --with-http_stub_status_module \u0026\u0026     make -j4 \u003e /dev/null \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -O php.tar.gz http://php.net/distributions/php-${PHP_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "whereis bison"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bison-3.2.1.tar.gz",
            "."
          ]
        },
        {
          "CmdLine": [
            "cd bison-3.2.1 \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "whereis bison"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bison -V"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar zxf php.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd php-${PHP_VERSION} \u0026\u0026     ./configure --prefix=/usr/local/php     --with-config-file-path=/usr/local/php/etc     --with-config-file-scan-dir=/usr/local/php/etc/php.d     --with-fpm-user=www     --with-fpm-group=www     --with-mysqli     --with-pdo-mysql     --with-openssl     --with-gd     --with-iconv     --with-zlib     --with-gettext     --with-curl     --with-png-dir     --with-jpeg-dir     --with-freetype-dir     --enable-fpm     --enable-xml     --enable-inline-optimization     --enable-mbregex     --enable-mbstring     --enable-mysqlnd     --enable-sockets     --enable-zip     --enable-soap     --enable-bcmath     --enable-exif     --enable-pcntl     --disable-cgi     --disable-phpdbg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd php-${PHP_VERSION} \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026     cp ./php-${PHP_VERSION}/php.ini-production /usr/local/php/etc/php.ini \u0026\u0026     mv /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \u0026\u0026     mv /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     strip /usr/local/php/bin/php \u0026\u0026     strip /usr/local/php/sbin/php-fpm \u0026\u0026     strip /usr/local/nginx/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^;date\\.timezone[ ]*=[ ]*/date\\.timezone = America\\/Los_Angeles/' /usr/local/php/etc/php.ini  \u0026\u0026     sed -i 's/^session\\.use_strict_mode = 0/session\\.use_strict_mode = 1/' /usr/local/php/etc/php.ini  \u0026\u0026     sed -i 's/^session\\.cookie_httponly =$/session\\.cookie_httponly = 1/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^memory_limit = 128M/memory_limit = 256M/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^expose_php = On/expose_php = Off/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^upload_max_filesize = 2M/upload_max_filesize = 100M/' /usr/local/php/etc/php.ini \u0026\u0026     sed -i 's/^pm.max_children = 5/pm.max_children = 20/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^pm.min_spare_servers = 1/pm.min_spare_servers = 3/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^pm.max_spare_servers = 3/pm.max_spare_servers = 7/' /usr/local/php/etc/php-fpm.d/www.conf  \u0026\u0026     sed -i 's/^pm.start_servers = 2/pm.start_servers = 5/' /usr/local/php/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -O composer https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln  -s  /usr/local/php/bin/php    /usr/local/bin/php \u0026\u0026     ln  -s  /usr/local/php/bin/phpize    /usr/local/bin/phpize \u0026\u0026     ln  -s  /usr/local/php/bin/pecl    /usr/local/bin/pecl \u0026\u0026     ln  -s  /usr/local/php/bin/php-config    /usr/local/bin/php-config \u0026\u0026     ln  -s  /usr/local/nginx/sbin/nginx    /usr/local/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "igbinary-3.0.1.tar.gz",
            "."
          ]
        },
        {
          "CmdLine": [
            "cd igbinary-3.0.1 \u0026\u0026 phpize \u0026\u0026  ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 echo \"extension=igbinary.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php --ri igbinary"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "redis-4.3.0.tgz",
            "."
          ]
        },
        {
          "CmdLine": [
            "cd redis-4.3.0 \u0026\u0026 phpize \u0026\u0026  ./configure --enable-redis-igbinary \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 echo \"extension=redis.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php --ri redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/longxinH/xhprof"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd xhprof/extension \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=xhprof.so\" \u003e\u003e /usr/local/php/etc/php.ini \u0026\u0026 echo 'xhprof.output_dir = \"/var/tmp/xhprof\"' \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install grpc-1.22.0 protobuf-3.8.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=grpc.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=protobuf.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"zend_extension=xdebug.so\" \u003e\u003e /usr/local/php/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "centos:7.5.1804",
      "SourceCode": "FROM centos:7.5.1804",
      "Platform": "",
      "From": {
        "Image": "centos:7.5.1804"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/nginx",
            "/usr/local/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/php",
            "/usr/local/php"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/src/composer",
            "/usr/local/bin/composer"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/lib64/libcrypt.so.1",
            "/lib64/libz.so.1",
            "/lib64/libresolv.so.2",
            "/lib64/librt.so.1",
            "/lib64/libpng15.so.15",
            "/lib64/libjpeg.so.62",
            "/lib64/libcurl.so.4",
            "/lib64/libm.so.6",
            "/lib64/libdl.so.2",
            "/lib64/libnsl.so.1",
            "/lib64/libxml2.so.2",
            "/lib64/libssl.so.10",
            "/lib64/libcrypto.so.10",
            "/lib64/libfreetype.so.6",
            "/lib64/libc.so.6",
            "/lib64/libfreebl3.so",
            "/lib64/libpthread.so.0",
            "/lib64/libidn.so.11",
            "/lib64/libssh2.so.1",
            "/lib64/libssl3.so",
            "/lib64/libsmime3.so",
            "/lib64/libnss3.so",
            "/lib64/libnssutil3.so",
            "/lib64/libplds4.so",
            "/lib64/libplc4.so",
            "/lib64/libnspr4.so",
            "/lib64/libgssapi_krb5.so.2",
            "/lib64/libkrb5.so.3",
            "/lib64/libk5crypto.so.3",
            "/lib64/libcom_err.so.2",
            "/lib64/liblber-2.4.so.2",
            "/lib64/libldap-2.4.so.2",
            "/lib64/ld-linux-x86-64.so.2",
            "/lib64/liblzma.so.5",
            "/lib64/libkrb5support.so.0",
            "/lib64/libkeyutils.so.1",
            "/lib64/libsasl2.so.3",
            "/lib64/libselinux.so.1",
            "/lib64/libpcre.so.1",
            "/lib64/"
          ]
        },
        {
          "CmdLine": [
            "useradd -m -s /sbin/nologin www \u0026\u0026     mkdir /var/log/nginx \u0026\u0026     mkdir -p /etc/nginx/conf.d \u0026\u0026     mkdir -p /app/web \u0026\u0026 chown -R www:www /app \u0026\u0026     ln  -s  /usr/local/php/bin/php    /usr/local/bin/php \u0026\u0026     ln  -s  /usr/local/php/bin/phpize    /usr/local/bin/phpize \u0026\u0026     ln  -s  /usr/local/php/bin/pecl    /usr/local/bin/pecl \u0026\u0026     ln  -s  /usr/local/php/bin/php-config    /usr/local/bin/php-config \u0026\u0026     ln  -s  /usr/local/nginx/sbin/nginx    /usr/local/sbin/nginx \u0026\u0026     mkdir -p /var/tmp/xhprof \u0026\u0026 chown -R www:www /var/tmp/xhprof"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/usr/local/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/default_server.conf",
            "/etc/nginx/conf.d/default_server.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/composer \u0026\u0026     chmod 755 /start.sh \u0026\u0026     ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}