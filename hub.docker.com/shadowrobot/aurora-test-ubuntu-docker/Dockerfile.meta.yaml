MetaArgs: null
Stages:
- BaseName: shadowrobot/aurora-test-ubuntu:xenial
  Commands:
  - Maintainer: '"Shadow Robot''s Software Team <software@shadowrobot.com>"'
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"This image is used for testing Ubuntu Xenial with Docker deployment"'
    - Key: Vendor
      Value: '"Shadow Robot"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: USER
      Value: testuser
    Name: env
  - Key: ts_docker_aurora_branch
    Name: arg
    Value: null
  - Env:
    - Key: ts_docker_aurora_branch
      Value: ${ts_docker_aurora_branch:-"master"}
    Name: env
  - Env:
    - Key: ts_docker_aurora_script
      Value: '"https://raw.githubusercontent.com/shadow-robot/aurora/$ts_docker_aurora_branch/bin/run-ansible.sh"'
    Name: env
  - CmdLine:
    - set -x &&     sudo apt-get update &&         echo "Installing wget" &&     sudo
      apt-get install -y --no-install-recommends ca-certificates wget &&         echo
      "Installing Docker" &&     wget -O /tmp/oneliner "$( echo "$ts_docker_aurora_script"
      | sed 's/#/%23/g' )" &&     chmod 755 /tmp/oneliner &&     /tmp/oneliner install_software
      --debug-branch $ts_docker_aurora_branch software=[docker] &&         echo "Clean
      up" &&     sudo apt-get clean &&     sudo rm -rf         /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /root/.ansible         /root/.gitconfig         /root/.cache
    Name: run
    PrependShell: true
  From:
    Image: shadowrobot/aurora-test-ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM shadowrobot/aurora-test-ubuntu:xenial
