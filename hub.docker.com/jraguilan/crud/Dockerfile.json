{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y install wget                 curl                 apt-utils                 ssmtp                 xz-utils                 libxrender-dev                 git \u0026\u0026   git config --global url.\"https://\".insteadOf git:// \u0026\u0026   wget -O - http://www.dotdeb.org/dotdeb.gpg | apt-key add - \u0026\u0026   echo \"deb http://packages.dotdeb.org jessie all\" \u003e /etc/apt/sources.list.d/dotdeb.list \u0026\u0026   echo \"\\ndeb-src http://packages.dotdeb.org jessie all\" \u003e\u003e /etc/apt/sources.list.d/dotdeb.list \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y php7.0-fpm                 php7.0                 php7.0-mysql                 php7.0-sqlite3                 php7.0-pgsql                 php7.0-curl                 php7.0-mcrypt                 php7.0-intl                 php7.0-bz2                 php7.0-imap                 php7.0-gd                 php7.0-json                 php7.0-xdebug                 php7.0-mbstring                 php7.0-ldap                 php7.0-zip                 php7.0-xml"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "php:5.6-apache",
      "SourceCode": "FROM php:5.6-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.6-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libpq-dev \u0026\u0026 docker-php-ext-install pdo pdo_pgsql \u0026\u0026     php -r \"readfile('https://getcomposer.org/installer');\" \u003e composer-setup.php \u0026\u0026     php composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026     php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home \u0026\u0026     mkdir renzel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/renzel/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/home/renzel"
          ]
        },
        {
          "CmdLine": [
            "composer update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php artisan serve --host=0.0.0.0 --port=8080"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        }
      ]
    }
  ]
}