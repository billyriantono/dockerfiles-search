MetaArgs:
- DefaultValue: "16.04"
  Key: UBUNTU_VERSION
  ProvidedValue: null
  Value: "16.04"
Stages:
- BaseName: ubuntu:${UBUNTU_VERSION}
  Commands:
  - Maintainer: '"ZeroC0D3 Team <zeroc0d3.team@gmail.com>"'
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update; sync
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"
      install       build-essential       ca-certificates       gcc       git       bash       curl       wget       software-properties-common       openssh-server       openssh-client       zip       unzip       net-tools       vim-tiny       nano       libpq-dev       make       python-pip       python2.7       python2.7-dev       ssh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - CmdLine:
    - echo 'root:root' | chpasswd; sync
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/^#?PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/ssh-keygen -t rsa -b 4096 -C "k8s@tokopedia.local" -f $HOME/.ssh/id_rsa
      -q -N ""; sync
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.ssh     && touch $HOME/.ssh/authorized_keys     && chmod 700
      $HOME/.ssh     && chmod go-w $HOME $HOME/.ssh     && chmod 600 $HOME/.ssh/authorized_keys     &&
      chown `whoami` $HOME/.ssh/authorized_keys     && cat $HOME/.ssh/id_rsa.pub >
      $HOME/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/ssh-keygen -f $HOME/.ssh/id_rsa.pub -e -m pem > $HOME/.ssh/id_rsa.pem
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/ssh-keygen -A; sync
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ssh-key/id_rsa.pub
    - /tmp/ownkey.pub
  - CmdLine:
    - cat /tmp/ownkey.pub >> $HOME/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  - Name: user
    User: root
  - Key: INSTALL_ANSIBLE
    Name: arg
    Value: "false"
  - CmdLine:
    - if [ "${INSTALL_ANSIBLE}" = true ]; then       /bin/sh /opt/install_ansible.sh     ;fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Key: INSTALL_GOLANG
    Name: arg
    Value: "false"
  - CmdLine:
    - if [ "${INSTALL_GOLANG}" = true ]; then       /bin/sh /opt/install_golang.sh     ;fi
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: $HOME/go
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin:$GOPATH/bin
    Name: env
  - CmdLine:
    - mkdir -p "${GOPATH}/src" "${GOPATH}/bin" && chmod -R 777 "${GOPATH}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -y -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\"
      install \tmc       nfs-common"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data-node
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/init
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "22"
    - 22/tcp
  - Name: expose
    Ports:
    - "2379"
    - 2379/tcp
  - Name: expose
    Ports:
    - "6443"
    - 6443/tcp
  - Name: expose
    Ports:
    - "10251"
    - 10251/tcp
  From:
    Image: ubuntu:${UBUNTU_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:${UBUNTU_VERSION}
