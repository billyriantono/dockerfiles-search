MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install git zip unzip -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install libpq-dev zlib1g-dev g++ -y &&     docker-php-ext-install
      pdo pgsql pdo_pgsql &&     apt-get remove -y g++
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&      apt-get install zlib1g-dev libicu-dev g++ -y &&      docker-php-ext-configure
      intl &&      docker-php-ext-install intl &&      apt-get remove -y g++
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install libcurl4-openssl-dev -y     && docker-php-ext-install
      curl     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      libcurl4-openssl-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         zlib1g-dev zlib1g     && docker-php-ext-install
      zip     && apt-get remove -y         zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         libmcrypt-dev libmcrypt4     &&
      docker-php-ext-install mcrypt     && apt-get remove -y         libmcrypt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "date.timezone=Europe/London" > /usr/local/etc/php/conf.d/zz-custom.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/var/www/html/vendor/bin"'
    Name: env
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061')
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;" &&     php composer-setup.php --install-dir=/usr/local/bin
      --filename=composer &&     php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OL https://github.com/phpmetrics/PhpMetrics/releases/download/v2.3.2/phpmetrics.phar
      &&     chmod +x phpmetrics.phar &&     mv phpmetrics.phar /usr/local/bin/phpmetrics
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OL http://www.phpdoc.org/phpDocumentor.phar &&     chmod +x phpDocumentor.phar
      &&     mv phpDocumentor.phar /usr/local/bin/phpdoc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y autoconf g++ make     && pecl install
      xdebug-2.5.5     && docker-php-ext-enable xdebug     && echo "xdebug.remote_enable=on"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && echo "xdebug.remote_port=9001"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && echo "xdebug.remote_connect_back=1"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && echo "xdebug.remote_autostart=off"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && echo "xdebug.profiler_enable=1"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && echo "xdebug.profiler_enable_trigger=1"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && echo "xdebug.profiler_output_dir=/app/profiling"
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     && apt-get remove
      -y autoconf g++ make
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /.composer &&     chgrp -R 0 /.composer &&     chmod -R g=u /.composer
    Name: run
    PrependShell: true
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
