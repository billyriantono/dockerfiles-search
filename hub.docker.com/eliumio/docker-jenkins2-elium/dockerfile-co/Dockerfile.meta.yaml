MetaArgs: null
Stages:
- BaseName: node:10
  Commands:
  - Maintainer: Elifarley Cruz <elifarley@gmail.com>
    Name: maintainer
  - Env:
    - Key: BASE_IMAGE
      Value: elifarley/docker-dev-env:wasm-rust
    Name: env
  - Key: APT_PACKAGES
    Name: arg
    Value: '"openssh-server ca-certificates curl rsync"'
  - Key: TINI_VERSION
    Name: arg
    Value: '''v0.18.0'''
  - Key: GOSU_VERSION
    Name: arg
    Value: '''1.5'''
  - Key: _USER
    Name: arg
    Value: app
  - Key: HOME
    Name: arg
    Value: /$_USER
  - Env:
    - Key: NODE_PATH
      Value: /usr/local/lib/node_modules
    - Key: NPM_CONFIG_LOGLEVEL
      Value: warn
    - Key: _USER
      Value: '"$_USER"'
    - Key: LANG
      Value: en_US.UTF-8
    - Key: TZ
      Value: ${TZ:-Brazil/East}
    - Key: HOME
      Value: '"$HOME"'
    - Key: IMAGE_SETUP_FILE
      Value: '"$HOME/docker-setup-image.sh"'
    Name: env
  - CmdLine:
    - tini
    - --
    - entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: $HOME
  - Name: expose
    Ports:
    - "2200"
    - "8080"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - '"$HOME"/'
  - CmdLine:
    - apt-get update -y && apt-get install -y ca-certificates curl &&   curl -fsSL
      https://raw.githubusercontent.com/elifarley/cross-installer/master/install.sh
      | sh &&   xinstall save-image-info &&   xinstall add gosu "$GOSU_VERSION" &&   xinstall
      add tini "$TINI_VERSION" &&   xinstall add-user "$_USER" &&   xinstall add entrypoint
      &&   xinstall add timezone &&   xinstall add-pkg &&   xinstall configure sshd
      &&   mkdir -p "$HOME"/.docker && chown -R "$_USER":"$_USER"     "$HOME"/.docker
      && chmod -R go=u /usr/local/lib &&   cat $IMAGE_SETUP_FILE && gosu app $IMAGE_SETUP_FILE
      &&   xinstall cleanup
    Name: run
    PrependShell: true
  From:
    Image: node:10
  Name: ""
  Platform: ""
  SourceCode: FROM node:10
