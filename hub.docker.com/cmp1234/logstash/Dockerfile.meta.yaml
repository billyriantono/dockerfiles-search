MetaArgs: null
Stages:
- BaseName: cmp1234/jre-allinone:with-ansible
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\tlibc6-compat \t\tlibzmq"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache 'su-exec>=0.2'
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 46095ACC8548582C1A2699A9D27D666CD88E42B4
    Name: env
  - Env:
    - Key: LOGSTASH_PATH
      Value: /usr/share/logstash/bin
    Name: env
  - Env:
    - Key: PATH
      Value: $LOGSTASH_PATH:$PATH
    Name: env
  - Env:
    - Key: LOGSTASH_VERSION
      Value: 5.5.1
    Name: env
  - Env:
    - Key: LOGSTASH_TARBALL
      Value: '"https://artifacts.elastic.co/downloads/logstash/logstash-5.5.1.tar.gz"'
    - Key: LOGSTASH_TARBALL_ASC
      Value: '"https://artifacts.elastic.co/downloads/logstash/logstash-5.5.1.tar.gz.asc"'
    - Key: LOGSTASH_TARBALL_SHA1
      Value: '"2cd1cdc1c01f7e7af3919221668e9ec2547070be"'
    Name: env
  - CmdLine:
    - "set -ex; \t\tif [ -z \"$LOGSTASH_TARBALL_SHA1\" ] && [ -z \"$LOGSTASH_TARBALL_ASC\"
      ]; then \t\techo >&2 'error: have neither a SHA1 _or_ a signature file -- cannot
      verify download!'; \t\texit 1; \tfi; \t\tapk add --no-cache --virtual .fetch-deps
      \t\tca-certificates \t\tgnupg \t\topenssl \t\ttar \t; \t\twget -O logstash.tar.gz
      \"$LOGSTASH_TARBALL\"; \t\tif [ \"$LOGSTASH_TARBALL_SHA1\" ]; then \t\techo
      \"$LOGSTASH_TARBALL_SHA1 *logstash.tar.gz\" | sha1sum -c -; \tfi; \t\tif [ \"$LOGSTASH_TARBALL_ASC\"
      ]; then \t\twget -O logstash.tar.gz.asc \"$LOGSTASH_TARBALL_ASC\"; \t\texport
      GNUPGHOME=\"$(mktemp -d)\"; \t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      \"$GPG_KEY\"; \t\tgpg --batch --verify logstash.tar.gz.asc logstash.tar.gz;
      \t\trm -rf \"$GNUPGHOME\" logstash.tar.gz.asc; \tfi; \t\tdir=\"$(dirname \"$LOGSTASH_PATH\")\";
      \t\tmkdir -p \"$dir\"; \ttar -xf logstash.tar.gz --strip-components=1 -C \"$dir\";
      \trm logstash.tar.gz; \t\tapk del .fetch-deps; \t\texport LS_SETTINGS_DIR=\"$dir/config\";
      \tif [ -f \"$LS_SETTINGS_DIR/log4j2.properties\" ]; then \t\tcp \"$LS_SETTINGS_DIR/log4j2.properties\"
      \"$LS_SETTINGS_DIR/log4j2.properties.dist\"; \t\ttruncate -s 0 \"$LS_SETTINGS_DIR/log4j2.properties\";
      \tfi; \t\tfor userDir in \t\t\"$dir/config\" \t\t\"$dir/data\" \t; do \t\tif
      [ -d \"$userDir\" ]; then \t\t\tchown -R cmp:cmp \"$userDir\"; \t\tfi; \tdone;
      \t\tlogstash --version"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -e
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: cmp1234/jre-allinone:with-ansible
  Name: ""
  Platform: ""
  SourceCode: FROM cmp1234/jre-allinone:with-ansible
