{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm-alpine",
      "SourceCode": "FROM php:7.1-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "pecl install xdebug-2.5.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe  \u0026\u0026 pkgs=\"freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev           libmcrypt-dev           postgresql-dev\"  \u0026\u0026 apk add --no-cache $pkgs             --repository=\"http://nl.alpinelinux.org/alpine/edge/testing\"             --repository=\"http://nl.alpinelinux.org/alpine/edge/community\"             --allow-untrusted"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe  \u0026\u0026 docker-php-ext-configure gd     --with-jpeg-dir=/usr/include/     --with-png-dir=/usr/include/     --with-freetype-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe  \u0026\u0026 docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gd iconv mcrypt exif pgsql pdo_pgsql mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe  \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"  \u0026\u0026 php -r \"if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"  \u0026\u0026 php composer-setup.php --install-dir=/bin --filename=composer \u0026\u0026 rm composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/app"
          ]
        }
      ]
    }
  ]
}