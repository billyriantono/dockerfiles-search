MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Tianon Gravi <admwiggin@gmail.com> (@tianon)
    Name: maintainer
  - CmdLine:
    - "apt-get update && apt-get install -y \tapparmor \taufs-tools \tautomake \tbtrfs-tools
      \tbuild-essential \tcurl \tdpkg-sig \tgit \tiptables \tlibapparmor-dev \tlibcap-dev
      \tlibsqlite3-dev \tmercurial \tparallel \tpython-mock \tpython-pip \tpython-websocket
      \treprepro \truby1.9.1 \truby1.9.1-dev \ts3cmd=1.1.0* \t--no-install-recommends"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/lvm2 \t&& ./configure --enable-static_link \t&& make device-mapper
      \t&& make install_device-mapper"
    Name: run
    PrependShell: true
  - Env:
    - Key: LXC_VERSION
      Value: 1.0.7
    Name: env
  - CmdLine:
    - "mkdir -p /usr/src/lxc \t&& curl -sSL https://linuxcontainers.org/downloads/lxc/lxc-${LXC_VERSION}.tar.gz
      | tar -v -C /usr/src/lxc/ -xz --strip-components=1"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/src/lxc \t&& ./configure \t&& make \t&& make install \t&& ldconfig"
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.4.1
    Name: env
  - CmdLine:
    - "curl -sSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/local
      -xz \t&& mkdir -p /go/bin"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /go/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go:/go/src/github.com/docker/docker/vendor
    Name: env
  - CmdLine:
    - cd /usr/local/go/src && ./make.bash --no-clean 2>&1
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_CROSSPLATFORMS
      Value: "linux/386 linux/arm \tdarwin/amd64 darwin/386 \tfreebsd/amd64 freebsd/386
        freebsd/arm \twindows/amd64 windows/386"
    Name: env
  - Env:
    - Key: GOARM
      Value: "5"
    Name: env
  - CmdLine:
    - "cd /usr/local/go/src \t&& set -x \t&& for platform in $DOCKER_CROSSPLATFORMS;
      do \t\tGOOS=${platform%/*} \t\tGOARCH=${platform##*/} \t\t\t./make.bash --no-clean
      2>&1; \tdone"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOFMT_VERSION
      Value: 1.3.3
    Name: env
  - CmdLine:
    - curl -sSL https://storage.googleapis.com/golang/go${GOFMT_VERSION}.$(go env
      GOOS)-$(go env GOARCH).tar.gz | tar -C /go/bin -xz --strip-components=2 go/bin/gofmt
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/cover
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install --no-rdoc --no-ri fpm --version 1.3.2
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b buildroot-2014.02 https://github.com/jpetazzo/docker-busybox.git
      /docker-busybox
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL -o /cirros.tar.gz https://github.com/ewindisch/docker-cirros/raw/1cded459668e8b9dbf4ef976c94c05add9bbd8e9/cirros-0.3.0-x86_64-lxc.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: REGISTRY_COMMIT
      Value: c448e0416925a9876d5576e412703c9b8b865e19
    Name: env
  - CmdLine:
    - "set -x \t&& git clone https://github.com/docker/distribution.git /go/src/github.com/docker/distribution
      \t&& (cd /go/src/github.com/docker/distribution && git checkout -q $REGISTRY_COMMIT)
      \t&& GOPATH=/go/src/github.com/docker/distribution/Godeps/_workspace:/go \t\tgo
      build -o /go/bin/registry-v2 github.com/docker/distribution/cmd/registry"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_PY_COMMIT
      Value: aa19d7b6609c6676e8258f6b900dea2eda1dbe95
    Name: env
  - CmdLine:
    - "git clone https://github.com/docker/docker-py.git /docker-py \t&& cd /docker-py
      \t&& git checkout -q $DOCKER_PY_COMMIT"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '[default]'; \t\techo 'access_key=$AWS_ACCESS_KEY'; \t\techo 'secret_key=$AWS_SECRET_KEY';
      \t} > ~/.s3cfg"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email 'docker-dummy@example.com'
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r docker
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --gid docker unprivilegeduser
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: workdir
    Path: /go/src/github.com/docker/docker
  - Env:
    - Key: DOCKER_BUILDTAGS
      Value: apparmor selinux btrfs_noversion
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vendor
    - /go/src/github.com/docker/docker/vendor
  - CmdLine:
    - "set -x \t&& git clone -b v1.0.1 https://github.com/cpuguy83/go-md2man.git /go/src/github.com/cpuguy83/go-md2man
      \t&& git clone -b v1.2 https://github.com/russross/blackfriday.git /go/src/github.com/russross/blackfriday
      \t&& go install -v github.com/cpuguy83/go-md2man"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b v0.1.0 https://github.com/BurntSushi/toml.git /go/src/github.com/BurntSushi/toml     &&
      go install -v github.com/BurntSushi/toml/cmd/tomlv
    Name: run
    PrependShell: true
  - CmdLine:
    - hack/dind
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/docker/docker
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
