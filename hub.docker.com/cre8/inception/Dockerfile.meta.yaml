MetaArgs: null
Stages:
- BaseName: docker:stable-git
  Commands:
  - Key: YQ_VERSION
    Name: arg
    Value: 2.4.0
  - CmdLine:
    - apk update && apk upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add --update   bash   ca-certificates   curl   g++   gnupg   jq   libffi   libffi-dev   make   openssl   openssl-dev   py3-pynacl   python3   python3-dev   rsync   tar   vim   which   &&
      update-ca-certificates   && pip3 --no-cache-dir install --upgrade   awscli   cookiecutter   docker-compose   pip   &&
      python3 -m ensurepip   && rm -r /usr/lib/python*/ensurepip   && if [[ ! -e /usr/bin/pip
      ]]; then ln -s pip3 /usr/bin/pip ; fi   && if [[ ! -e /usr/bin/python ]]; then
      ln -sf /usr/bin/python3 /usr/bin/python; fi   && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - curl https://storage.googleapis.com/git-repo-downloads/repo > /bin/repo   &&
      chmod a+x /bin/repo
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /bin/yq
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-go-packages   binutils-gold   curl   g++   gcc   gnupg   go   libgcc   linux-headers   make   python   &&
      go get -u github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login   &&
      apk del .build-go-packages
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p ~/.docker
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add --update   tmux   zsh
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/zsh
    Name: env
  - CmdLine:
    - sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh
      -O -)"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/tmux-plugins/tpm /root/.tmux/plugins/tpm
    Name: run
    PrependShell: true
  - Key: NODE_VERSION
    Name: arg
    Value: 10.16.0
  - CmdLine:
    - addgroup -g 1000 node   && adduser -u 1000 -G node -s /bin/sh -D node   && apk
      add --no-cache   libstdc++   && apk add --no-cache --virtual .build-deps   binutils-gold   curl   g++   gcc   gnupg   libgcc   linux-headers   make   python   xz   &&
      for key in   94AE36675C464D64BAFA68DD7434390BDBE9B9C5   FD3A5288F042B6850C66B31F09FE44734EB7990E   71DCFD284A79C3B38668286BC97EC7A07EDE3FC1   DD8F2338BAE7501E3DD5AC78C273792F7D83545D   C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   B9AE9905FFD7803F25714661B63B535A4C206CA9   77984A986EBC2AA786BC0F66B01FBB92821C587A   8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600   4ED778F539E3634C779C87C6D7062848A1AB005C   A48C2BEE680E841632CD4E44F07496B3EB3C1762   B9E2F5981AA6E0CD28160D9FF13993A75599653C   ;
      do   gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||   gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||   gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"   &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -   && tar -xf "node-v$NODE_VERSION.tar.xz"   &&
      cd "node-v$NODE_VERSION"   && ./configure   && make -j$(getconf _NPROCESSORS_ONLN)
      V=   && make install   && apk del .build-deps   && cd ..   && rm -Rf "node-v$NODE_VERSION"   &&
      rm "node-v$NODE_VERSION.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt
    Name: run
    PrependShell: true
  - Key: YARN_VERSION
    Name: arg
    Value: 1.16.0
  - CmdLine:
    - apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in   6A010C5166006599AA17F08146C2130DFD2497F5   ;
      do   gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||   gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||   gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn config set workspaces-experimental true
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /project
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/.tmux.conf
    - /root/.tmux.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/.zshrc
    - /root/.zshrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/zsh
    Name: cmd
    PrependShell: false
  From:
    Image: docker:stable-git
  Name: ""
  Platform: ""
  SourceCode: FROM docker:stable-git
