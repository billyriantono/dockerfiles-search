MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.4
    Name: env
  - Env:
    - Key: GOLANG_SRC_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_SRC_SHA256
      Value: 0573a8df33168977185aa44173305e5a0450f55213600e94541604b75d46dc06
    Name: env
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.8
    Name: env
  - Env:
    - Key: TERRAFORM_IBMCLOUD_VERSION
      Value: 0.16.1
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - "set -ex \t&& apk update \t&& apk add --no-cache ca-certificates  \t&& apk add
      --no-cache --virtual .build-deps \t&& apk add bash gcc musl-dev openssl zip
      make bash git go curl \t&& curl -s https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/alpine3.7/no-pic.patch
      -o /no-pic.patch \t&& cat /no-pic.patch \t&& export GOROOT_BOOTSTRAP=\"$(go
      env GOROOT)\" \t&& wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \t&& echo \"$GOLANG_SRC_SHA256
      \ golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz
      \t&& rm golang.tar.gz \t&& cd /usr/local/go/src \t&& patch -p2 -i /no-pic.patch
      \t&& ./make.bash     && rm -rf /*.patch \t&& apk del .build-deps"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/bin
  - CmdLine:
    - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x terraform
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/root"'
  - CmdLine:
    - echo $' providers { \n ibm = "/go/bin/terraform-provider-ibm_v${TERRAFORM_IBMCLOUD_VERSION}"
      \n }' > /root/.terraformrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/bin
  - CmdLine:
    - wget https://github.com/IBM-Cloud/terraform-provider-ibm/releases/download/v${TERRAFORM_IBMCLOUD_VERSION}/linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x terraform-provider-ibm_*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf linux_amd64.zip
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: From alpine:3.7
