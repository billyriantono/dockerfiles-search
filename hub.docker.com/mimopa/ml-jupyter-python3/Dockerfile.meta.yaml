MetaArgs: null
Stages:
- BaseName: python:3.6
  Commands:
  - Labels:
    - Key: maintainer
      Value: “Jun Terauchi<j_terauchi@msc-inc.co.jp>”
    Name: label
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee
      /etc/apt/sources.list.d/webupd8team-java.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main"
      | tee -a /etc/apt/sources.list.d/webupd8team-java.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8"
      | tee /etc/apt/sources.list.d/bazel.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     libblas-dev     liblapack-dev    libatlas-base-dev     mecab     mecab-naist-jdic     libmecab-dev     gfortran     libav-tools     python-opencv     python3-setuptools     zip     vim     oracle-java8-installer     bazel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TENSORFLOW_VERSION
      Value: 1.2.1
    Name: env
  - CmdLine:
    - pip --no-cache-dir install     http://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install         keras         sklearn         jupyter         ipykernel         scipy         simpy         matplotlib         numpy         pandas         plotly         sympy         mecab-python3         librosa         Pillow         h5py         google-api-python-client         opencv-python         nltk         gitpython         tensorflow-lattice         requests-oauthlib         tweepy         Flask         backports.weakref         bleach         click         html5lib         itsdangerous         Jinja2         Markdown         MarkupSafe         protobuf         six         Werkzeug         flickrapi         &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bin.equinox.io/c/ekMN3bCZFUn/forego-stable-linux-amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i forego-stable-linux-amd64.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: CONFIG
      Value: /root/.jupyter/jupyter_notebook_config.py
    Name: env
  - Env:
    - Key: CONFIG_IPYTHON
      Value: /root/.ipython/profile_default/ipython_config.py
    Name: env
  - CmdLine:
    - jupyter notebook --generate-config --allow-root &&     ipython profile create
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "c.NotebookApp.ip = '*'" >>${CONFIG} &&     echo "c.NotebookApp.token =
      ''" >>${CONFIG} &&     echo "c.NotebookApp.password = ''" >>${CONFIG} &&     echo
      "c.NotebookApp.open_browser = False" >>${CONFIG} &&     echo "c.NotebookApp.iopub_data_rate_limit=20000000000"
      >>${CONFIG} &&     echo "c.MultiKernelManager.default_kernel_name = 'python3'"
      >>${CONFIG}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "c.InteractiveShellApp.exec_lines = ['%matplotlib inline']" >>${CONFIG_IPYTHON}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - notebooks
    - /notebooks
  - Name: expose
    Ports:
    - "6006"
    - "8888"
  - Name: volume
    Volumes:
    - /notebooks
  - Name: workdir
    Path: '"/notebooks"'
  - CmdLine:
    - jupyter
    - notebook
    - --allow-root
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
