{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "wonderfall/nginx-php:7.2",
      "SourceCode": "FROM wonderfall/nginx-php:7.2",
      "Platform": "",
      "From": {
        "Image": "wonderfall/nginx-php:7.2"
      },
      "Commands": [
        {
          "Maintainer": "Florian Kleber \u003ckleberbaum@erebos.xyz\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "NEXTCLOUD_VERSION",
          "Name": "arg",
          "Value": "14.0.3"
        },
        {
          "Key": "GPG_nextcloud",
          "Name": "arg",
          "Value": "\"2880 6A87 8AE4 23A2 8372  792E D758 99B9 A724 937A\""
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"A server software for creating file hosting services\""
            },
            {
              "Key": "nextcloud",
              "Value": "\"Nextcloud v${NEXTCLOUD_VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "991"
            },
            {
              "Key": "GID",
              "Value": "991"
            },
            {
              "Key": "UPLOAD_MAX_SIZE",
              "Value": "10G"
            },
            {
              "Key": "APC_SHM_SIZE",
              "Value": "128M"
            },
            {
              "Key": "OPCACHE_MEM_SIZE",
              "Value": "128"
            },
            {
              "Key": "MEMORY_LIMIT",
              "Value": "512M"
            },
            {
              "Key": "CRON_PERIOD",
              "Value": "15m"
            },
            {
              "Key": "CRON_MEMORY_LIMIT",
              "Value": "1g"
            },
            {
              "Key": "TZ",
              "Value": "Etc/UTC"
            },
            {
              "Key": "DB_TYPE",
              "Value": "sqlite3"
            },
            {
              "Key": "DOMAIN",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"## Installing base ##\"     ;     echo \"@main http://dl-cdn.alpinelinux.org/alpine/edge/main/\" \u003e\u003e /etc/apk/main \u0026\u0026     echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing/\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@community http://dl-cdn.alpinelinux.org/alpine/edge/community/\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk upgrade --update-cache --available     ;     apk add --no-cache --virtual=build-dependencies         bash         gnupg         build-base         autoconf         automake         pcre-dev         libtool         samba-dev     ;     apk add --force         libressl         ca-certificates         libsmbclient         tzdata         tini@community     ;     pecl install         smbclient         apcu         redis         \u0026\u0026 echo \"extension=smbclient.so\" \u003e /php/conf.d/smbclient.ini     \u0026\u0026 echo \"extension=redis.so\" \u003e /php/conf.d/redis.ini     \u0026\u0026 mkdir /nextcloud     \u0026\u0026 cd /tmp     \u0026\u0026 NEXTCLOUD_TARBALL=\"nextcloud-${NEXTCLOUD_VERSION}.tar.bz2\"     \u0026\u0026 wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}     \u0026\u0026 wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}.sha512     \u0026\u0026 wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}.asc     \u0026\u0026 wget -q https://nextcloud.com/nextcloud.asc     \u0026\u0026 echo \"Verifying both integrity and authenticity of ${NEXTCLOUD_TARBALL}...\"     \u0026\u0026 CHECKSUM_STATE=$(echo -n $(sha512sum -c ${NEXTCLOUD_TARBALL}.sha512) | tail -c 2)     \u0026\u0026 if [ \"${CHECKSUM_STATE}\" != \"OK\" ]; then echo \"Warning! Checksum does not match!\" \u0026\u0026 exit 1; fi     \u0026\u0026 gpg --import nextcloud.asc     \u0026\u0026 FINGERPRINT=\"$(LANG=C gpg --verify ${NEXTCLOUD_TARBALL}.asc ${NEXTCLOUD_TARBALL} 2\u003e\u00261         | sed -n \"s#Primary key fingerprint: \\(.*\\)#\\1#p\")\"     \u0026\u0026 if [ -z \"${FINGERPRINT}\" ]; then echo \"Warning! Invalid GPG signature!\" \u0026\u0026 exit 1; fi     \u0026\u0026 if [ \"${FINGERPRINT}\" != \"${GPG_nextcloud}\" ]; then echo \"Warning! Wrong GPG fingerprint!\" \u0026\u0026 exit 1; fi     \u0026\u0026 echo \"All seems good, now unpacking ${NEXTCLOUD_TARBALL}...\"     \u0026\u0026 tar xjf ${NEXTCLOUD_TARBALL} --strip 1 -C /nextcloud     \u0026\u0026 update-ca-certificates     \u0026\u0026 apk del build-dependencies     \u0026\u0026 rm -rf /tmp/* /var/cache/apk/* /var/cache/distfiles/* /root/.gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/config",
            "/apps2",
            "/nextcloud/themes"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}