{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7.1-alpine3.8",
      "SourceCode": "FROM python:3.7.1-alpine3.8",
      "Platform": "",
      "From": {
        "Image": "python:3.7.1-alpine3.8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"The erebos website more manageable w/ wagtail.\""
            }
          ],
          "Name": "label"
        },
        {
          "Maintainer": "Florian Kleber \u003ckleberbaum@erebos.xyz\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_DEBUG",
              "Value": "off"
            },
            {
              "Key": "DJANGO_SETTINGS_MODULE",
              "Value": "esite.settings.production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UWSGI_VIRTUALENV",
              "Value": "/venv"
            },
            {
              "Key": "UWSGI_UID",
              "Value": "1000"
            },
            {
              "Key": "UWSGI_GID",
              "Value": "2000"
            },
            {
              "Key": "UWSGI_WSGI_FILE",
              "Value": "esite/wsgi_production.py"
            },
            {
              "Key": "UWSGI_HTTP",
              "Value": ":8000"
            },
            {
              "Key": "UWSGI_MASTER",
              "Value": "1"
            },
            {
              "Key": "UWSGI_WORKERS",
              "Value": "2"
            },
            {
              "Key": "UWSGI_THREADS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/code/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements/",
            "/requirements/"
          ]
        },
        {
          "CmdLine": [
            "echo \"## Installing base ##\" \u0026\u0026 \techo \"@main http://dl-cdn.alpinelinux.org/alpine/edge/main/\" \u003e\u003e /etc/apk/repositories \u0026\u0026 \techo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing/\" \u003e\u003e /etc/apk/repositories \u0026\u0026 \techo \"@community http://dl-cdn.alpinelinux.org/alpine/edge/community/\" \u003e\u003e /etc/apk/repositories \u0026\u0026 \tapk upgrade --update-cache --available \u0026\u0026 \t    apk add --no-cache --virtual .build-deps         gcc \t\tg++ \t\tmake \t\tlibc-dev \t\tmusl-dev \t\tlinux-headers \t\tpcre-dev \t\tmysql-dev \t\tpostgresql-dev \t\tlibjpeg-turbo-dev \t\tzlib-dev \t; \tapk add --force \t    git@main \t\tbash@main \t\tmysql-client@main         tini@community   \t\t\u0026\u0026 python -m venv /venv \t\u0026\u0026 /venv/bin/pip install -U pip \t\u0026\u0026 LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install -r /requirements/production.txt\" \t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /venv \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .python-rundeps $runDeps \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 rm -rf /tmp/* /var/tmp/* /var/cache/apk/* /var/cache/distfiles/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/code/media"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/code/"
          ]
        },
        {
          "CmdLine": [
            "DATABASE_URL=mysql://none REDIS_URL=none /venv/bin/python manage.py collectstatic --noinput"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /code/docker-entrypoint.sh / ;\tfind /venv/ -type f -iname \"*.py\" -exec chmod -v +x {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/venv/bin/uwsgi",
            "--http-auto-chunked",
            "--http-keepalive",
            "--static-map",
            "/media/=/code/media/"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}