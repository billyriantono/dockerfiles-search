MetaArgs: null
Stages:
- As: builder
  BaseName: elixir:1.9-alpine
  Commands:
  - CmdLine:
    - apk update &&       apk upgrade --no-cache &&       apk add --no-cache gcc git
      make musl-dev &&       mix local.rebar --force &&       mix local.hex --force
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apps/data/mix.*
    - /app/apps/data/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mix.*
    - /app/
  - CmdLine:
    - mix deps.get --only prod
    Name: run
    PrependShell: true
  - CmdLine:
    - mix deps.compile
    Name: run
    PrependShell: true
  From:
    Image: elixir:1.9-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM elixir:1.9-alpine as builder
- As: frontend
  BaseName: node:10.9
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/package.json
    - assets/yarn.lock
    - /app/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app/deps/phoenix
    - /deps/phoenix
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app/deps/phoenix_html
    - /deps/phoenix_html
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app/deps/phoenix_live_view
    - /deps/phoenix_live_view
  - CmdLine:
    - npm install -g yarn && yarn install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets
    - /app
  - CmdLine:
    - yarn run deploy
    Name: run
    PrependShell: true
  From:
    Image: node:10.9
  Name: frontend
  Platform: ""
  SourceCode: FROM node:10.9 as frontend
- As: releaser
  BaseName: builder
  Commands:
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Chown: ""
    From: frontend
    Name: copy
    SourcesAndDest:
    - /priv/static
    - /app/priv/static
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app/
  - CmdLine:
    - mix phx.digest
    Name: run
    PrependShell: true
  - CmdLine:
    - mix release
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: builder
  Name: releaser
  Platform: ""
  SourceCode: FROM builder as releaser
- BaseName: alpine:3.9
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk update &&   apk add -U bash openssl imagemagick &&   rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/app
  - Chown: ""
    From: releaser
    Name: copy
    SourcesAndDest:
    - /app/_build/prod/rel/grapevine
    - /opt/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/prod.docker.exs
    - /etc/grapevine/config.exs
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Name: expose
    Ports:
    - "4100"
  - Name: expose
    Ports:
    - "4110"
  - CmdLine:
    - bin/grapevine
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
