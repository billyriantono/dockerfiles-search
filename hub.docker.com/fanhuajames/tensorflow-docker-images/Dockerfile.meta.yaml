MetaArgs:
- DefaultValue: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Key: BASE_IMAGE
  ProvidedValue: null
  Value: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
Stages:
- BaseName: $BASE_IMAGE
  Commands:
  - Key: INSTALL_TFMA
    Name: arg
    Value: "yes"
  - Key: TF_PACKAGE
    Name: arg
    Value: tensorflow-gpu=1.8.0
  - Key: TF_PACKAGE_PY_27
    Name: arg
    Value: tensorflow-gpu=1.8.0
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: NB_USER
      Value: jovyan
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     apt-transport-https     build-essential     bzip2     ca-certificates     curl     g++     git     gnupg     graphviz     locales     lsb-release     openssh-client     sudo     unzip     vim     wget     zip     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -M -s /bin/bash -N -u $NB_UID $NB_USER &&     chown -R ${NB_USER}:users
      /usr/local/bin &&     mkdir -p $HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini
      &&     echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.5.11
    Name: env
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "e1045ee415162f944b6aebfe560b8fee *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p ${CONDA_DIR} &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     conda config --system --prepend channels conda-forge &&     conda config
      --system --set auto_update_conda false &&     conda config --system --set show_channel_urls
      true &&     conda update --all &&     conda update conda &&     conda clean
      -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip &&     conda install --quiet --yes ${TF_PACKAGE} &&     conda
      install -c pytorch -c fastai fastai pytorch-nightly cuda90 &&     pip --no-cache-dir
      install     jupyter     jupyterhub     jupyterlab     && conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -n py2 python=2 &&     source activate py2 &&     pip install --upgrade
      pip &&     pip --no-cache-dir install     ipykernel     tensorflow-transform     tensorflow-serving-api     &&     python
      -m ipykernel install &&     if [[ $INSTALL_TFMA == "yes" ]]; then         pip
      install --no-cache-dir tensorflow-model-analysis &&         jupyter nbextension
      install --py --system --symlink tensorflow_model_analysis &&         jupyter
      nbextension enable --py --system tensorflow_model_analysis ;     fi     &&     conda
      install --quiet --yes     nodejs ${TF_PACKAGE_PY_27} &&     jupyter labextension
      install @jupyter-widgets/jupyterlab-manager &&     chown -R ${NB_USER}:users
      $HOME &&     chown -R ${NB_USER}:users $CONDA_DIR &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - Chown: jovyan:users
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp
  - CmdLine:
    - pip --no-cache-dir install -r /tmp/requirements.txt &&     source activate py2
      &&     pip --no-cache-dir install -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - Chown: jovyan:users
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /tmp
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - rm -fr $(ls -A $HOME)
    Name: run
    PrependShell: true
  - Chown: jovyan:users
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - start-notebook.sh
    - start.sh
    - pvc-check.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod a+rx /usr/local/bin/*
    Name: run
    PrependShell: true
  - Chown: jovyan:users
    From: ""
    Name: copy
    SourcesAndDest:
    - mnist-data/
    - /home/jovyan/mnist-data
  - Chown: jovyan:users
    From: ""
    Name: copy
    SourcesAndDest:
    - Tensorflow-examples/
    - /home/jovyan/Tensorflow-examples
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  From:
    Image: $BASE_IMAGE
  Name: ""
  Platform: ""
  SourceCode: FROM $BASE_IMAGE
