{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     acl     asciidoc     cdbs     curl     debhelper     debianutils     devscripts     docbook-xml     dpkg-dev     fakeroot     gawk     iproute2     libxml2-utils     locales     lsb-release     make     mercurial     openssh-client     openssh-server     python-coverage     python-dbus     python-httplib2     python-jinja2     python-keyczar     python-mock     python-mysqldb     python-nose     python-paramiko     python-passlib     python-pip     python-setuptools     python-virtualenv     python-wheel     python-yaml     reprepro     rsync     ruby     subversion     sudo     virtualenv     xsltproc     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/apt/apt.conf.d/docker-clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/ansible/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/echo -e \"[local]\\nlocalhost ansible_connection=local\" \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup",
            "/run/lock",
            "/run",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "pip install junit-xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get -y install build-essential autoconf libtool pkg-config python-opengl python-imaging python-pyrex python-pyside.qtopengl idle-python2.7 qt4-dev-tools libqtcore4 libqt4-xml libqt4-script libqt4-network libqt4-dbus python-qt4 python-qt4-gl libgle3 libffi-dev libssl-dev python-dev     \u0026\u0026 pip install --upgrade pip     \u0026\u0026 pip install pytz     \u0026\u0026 pip install shade     \u0026\u0026 pip install ansible==2.1.2.0     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}