MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-devel-ubuntu16.04
  Commands:
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.0.5.15
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends             libcudnn7=$CUDNN_VERSION-1+cuda9.0             libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get install -y software-properties-common # for add-apt-repository'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl bash-completion
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git vim
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential python3-pip python3-venv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ffmpeg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select
      true | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ubuntu-restricted-extras
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install pip --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install wheel
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y graphviz libgraphviz-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements-gpu.txt
    - /tmp/requirements.txt
  - CmdLine:
    - python3 -m pip install -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install jupyter-tensorboard
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/jupyter-tensorboard enable
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get remove -y g++ gcc ssh make build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean autoclean &&     apt-get autoremove -y &&     rm -rf /var/lib/{apt,dpkg,cache,log}/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-tk
    Name: run
    PrependShell: true
  - Env:
    - Key: TARA_USER
      Value: tara_docker
    Name: env
  - CmdLine:
    - useradd -r -u 1000 -g 100 $TARA_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: TARA_DIR
      Value: '"/home/tara"'
    Name: env
  - CmdLine:
    - mkdir "$TARA_DIR"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $TARA_DIR
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cfg/
    - $TARA_DIR/cfg/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gcloud
    - $TARA_DIR/gcloud/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - tara
    - $TARA_DIR/tara/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '*.py'
    - $TARA_DIR/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - matlab/
    - $TARA_DIR/matlab/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/
    - $TARA_DIR/scripts/
  - CmdLine:
    - chmod 777 /home -R
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: '"$PYTHONPATH:$TARA_DIR"'
    Name: env
  - CmdLine:
    - echo "deb http://packages.cloud.google.com/apt cloud-sdk-xenial main" > /etc/apt/sources.list.d/google-cloud-sdk.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y google-cloud-sdk
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - Name: user
    User: $TARA_USER
  - Env:
    - Key: GOOGLE_APPLICATION_CREDENTIALS
      Value: '"$TARA_DIR/gcloud/service_accounts/docker-container-key.json"'
    Name: env
  - CmdLine:
    - gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
    Name: run
    PrependShell: true
  - CmdLine:
    - gcloud config set project tarantula-3d-project
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: TARA_BIN
      Value: /usr/local/bin/tara
    Name: env
  - CmdLine:
    - echo '#!/bin/bash\npython $TARA_DIR/cli.py "$@"' > $TARA_BIN && chmod +x $TARA_BIN
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cli/welcome.txt
    - $TARA_dir/cli/
  - CmdLine:
    - chmod 777 /home -R
    Name: run
    PrependShell: true
  - Name: user
    User: $TARA_USER
  - Name: workdir
    Path: /home/work
  - CmdLine:
    - cat $TARA_dir/cli/welcome.txt && /bin/bash
    Name: entrypoint
    PrependShell: true
  - Env:
    - Key: TARA_USER
      Value: $TARA_USER
    Name: env
  From:
    Image: nvidia/cuda:9.0-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-devel-ubuntu16.04
