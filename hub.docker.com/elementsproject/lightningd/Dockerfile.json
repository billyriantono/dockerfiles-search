{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "downloader",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim as downloader",
      "Platform": "",
      "As": "downloader",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -qq --no-install-recommends ca-certificates dirmngr wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget -qO /opt/tini \"https://github.com/krallin/tini/releases/download/v0.18.0/tini\"     \u0026\u0026 echo \"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 /opt/tini\" | sha256sum -c -     \u0026\u0026 chmod +x /opt/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "BITCOIN_VERSION",
          "Name": "arg",
          "Value": "0.18.1"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_TARBALL",
              "Value": "bitcoin-${BITCOIN_VERSION}-x86_64-linux-gnu.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_URL",
              "Value": "https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/$BITCOIN_TARBALL"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_ASC_URL",
              "Value": "https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/SHA256SUMS.asc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/bitcoin \u0026\u0026 cd /opt/bitcoin     \u0026\u0026 wget -qO $BITCOIN_TARBALL \"$BITCOIN_URL\"     \u0026\u0026 wget -qO bitcoin.asc \"$BITCOIN_ASC_URL\"     \u0026\u0026 grep $BITCOIN_TARBALL bitcoin.asc | tee SHA256SUMS.asc     \u0026\u0026 sha256sum -c SHA256SUMS.asc     \u0026\u0026 BD=bitcoin-$BITCOIN_VERSION/bin     \u0026\u0026 tar -xzvf $BITCOIN_TARBALL $BD/bitcoin-cli --strip-components=1     \u0026\u0026 rm $BITCOIN_TARBALL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LITECOIN_VERSION",
              "Value": "0.16.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LITECOIN_PGP_KEY",
              "Value": "FE3348877809386C"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LITECOIN_URL",
              "Value": "https://download.litecoin.org/litecoin-${LITECOIN_VERSION}/linux/litecoin-${LITECOIN_VERSION}-x86_64-linux-gnu.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LITECOIN_ASC_URL",
              "Value": "https://download.litecoin.org/litecoin-${LITECOIN_VERSION}/linux/litecoin-${LITECOIN_VERSION}-linux-signatures.asc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LITECOIN_SHA256",
              "Value": "686d99d1746528648c2c54a1363d046436fd172beadaceea80bdc93043805994"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/litecoin \u0026\u0026 cd /opt/litecoin     \u0026\u0026 wget -qO litecoin.tar.gz \"$LITECOIN_URL\"     \u0026\u0026 echo \"$LITECOIN_SHA256  litecoin.tar.gz\" | sha256sum -c -     \u0026\u0026 BD=litecoin-$LITECOIN_VERSION/bin     \u0026\u0026 tar -xzvf litecoin.tar.gz $BD/litecoin-cli --strip-components=1 --exclude=*-qt     \u0026\u0026 rm litecoin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "builder",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LIGHTNINGD_VERSION",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates autoconf automake build-essential git libtool python python3 python3-mako wget gnupg dirmngr git gettext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://zlib.net/zlib-1.2.11.tar.gz \u0026\u0026 tar xvf zlib-1.2.11.tar.gz \u0026\u0026 cd zlib-1.2.11 \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm zlib-1.2.11.tar.gz \u0026\u0026 rm -rf zlib-1.2.11"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends unzip tclsh \u0026\u0026 wget -q https://www.sqlite.org/2018/sqlite-src-3260000.zip \u0026\u0026 unzip sqlite-src-3260000.zip \u0026\u0026 cd sqlite-src-3260000 \u0026\u0026 ./configure --enable-static --disable-readline --disable-threadsafe --disable-load-extension \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm sqlite-src-3260000.zip \u0026\u0026 rm -rf sqlite-src-3260000"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz \u0026\u0026 tar xvf gmp-6.1.2.tar.xz \u0026\u0026 cd gmp-6.1.2 \u0026\u0026 ./configure --disable-assembly \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm gmp-6.1.2.tar.xz \u0026\u0026 rm -rf gmp-6.1.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/lightningd"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/tmp/lightning"
          ]
        },
        {
          "CmdLine": [
            "git clone --recursive /tmp/lightning . \u0026\u0026     git checkout $(git --work-tree=/tmp/lightning --git-dir=/tmp/lightning/.git rev-parse HEAD)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEVELOPER",
          "Name": "arg",
          "Value": "0"
        },
        {
          "CmdLine": [
            "./configure --prefix=/tmp/lightning_install --enable-static \u0026\u0026 make -j3 DEVELOPER=${DEVELOPER} \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "final",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim as final",
      "Platform": "",
      "As": "final",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "downloader",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/tini",
            "/usr/bin/tini"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends socat inotify-tools     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LIGHTNINGD_DATA",
              "Value": "/root/.lightning"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIGHTNINGD_RPC_PORT",
              "Value": "9835"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIGHTNINGD_PORT",
              "Value": "9735"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $LIGHTNINGD_DATA \u0026\u0026     touch $LIGHTNINGD_DATA/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.lightning"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/lightning_install/",
            "/usr/local/"
          ]
        },
        {
          "Chown": "",
          "From": "downloader",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/bitcoin/bin",
            "/usr/bin"
          ]
        },
        {
          "Chown": "",
          "From": "downloader",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/litecoin/bin",
            "/usr/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools/docker-entrypoint.sh",
            "entrypoint.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9735",
            "9835"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "-g",
            "--",
            "./entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}