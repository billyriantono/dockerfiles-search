{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.0.2h"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZLIB_VERSION",
              "Value": "1.2.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PCRE_VERSION",
              "Value": "8.38"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential     git     gcc     g++     make     wget  \u0026\u0026 git clone https://github.com/cuber/ngx_http_google_filter_module  \u0026\u0026 git clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module  \u0026\u0026 wget http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz  \u0026\u0026 wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz  \u0026\u0026 wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz  \u0026\u0026 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz  \u0026\u0026 tar xzf zlib-${ZLIB_VERSION}.tar.gz \u0026\u0026 rm -f zlib-${ZLIB_VERSION}.tar.gz  \u0026\u0026 tar xzf pcre-${PCRE_VERSION}.tar.gz \u0026\u0026 rm -f pcre-${PCRE_VERSION}.tar.gz  \u0026\u0026 tar xzf openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026 rm -f openssl-${OPENSSL_VERSION}.tar.gz  \u0026\u0026 tar xzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 rm -f nginx-${NGINX_VERSION}.tar.gz  \u0026\u0026 cd nginx-${NGINX_VERSION}  \u0026\u0026 ./configure  --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=%{_libdir}/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-threads  --with-stream  --with-stream_ssl_module  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-file-aio  --with-http_v2_module  --with-ipv6  --add-module=../ngx_http_google_filter_module  --add-module=../ngx_http_substitutions_filter_module  --with-pcre=../pcre-${PCRE_VERSION}  --with-openssl=../openssl-${OPENSSL_VERSION}  --with-zlib=../zlib-${ZLIB_VERSION}  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 cd ..  \u0026\u0026 rm -rf nginx-${NGINX_VERSION}     zlib-${ZLIB_VERSION}     openssl-${OPENSSL_VERSION}     pcre-${PCRE_VERSION}     ngx_http_google_filter_module     ngx_http_substitutions_filter_module  \u0026\u0026 apt-get remove -y build-essential git gcc g++ make wget  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd nginx  \u0026\u0026 useradd --create-home --home-dir /home/nginx -g nginx nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log  \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx",
            "/etc/nginx"
          ]
        },
        {
          "CmdLine": [
            "nginx -t"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}