MetaArgs: null
Stages:
- BaseName: openjdk:8-jre-alpine
  Commands:
  - Maintainer: Yannoff <https://github.com/yannoff>
    Name: maintainer
  - Key: ES_VERSION
    Name: arg
    Value: 6.5.3
  - Key: ES_HOME
    Name: arg
    Value: /usr/share/elasticsearch
  - Key: ELASTICSEARCH_REPO
    Name: arg
    Value: '"https://artifacts.elastic.co/downloads/elasticsearch"'
  - Key: ES_PLUGINS
    Name: arg
    Value: '"analysis-icu"'
  - Key: UID
    Name: arg
    Value: "9200"
  - Key: GID
    Name: arg
    Value: "9200"
  - Env:
    - Key: ES_HOME
      Value: ${ES_HOME}
    Name: env
  - CmdLine:
    - addgroup -g ${GID} -S elasticsearch &&     adduser -u ${UID} -S -G elasticsearch
      elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache 'su-exec>=0.2' bash
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 46095ACC8548582C1A2699A9D27D666CD88E42B4
    Name: env
  - Name: workdir
    Path: ${ES_HOME}
  - Env:
    - Key: PATH
      Value: ${ES_HOME}/bin:$PATH
    Name: env
  - Env:
    - Key: ELASTICSEARCH_VERSION
      Value: ${ES_VERSION}
    Name: env
  - CmdLine:
    - "set -ex; \t\tapk add --no-cache --virtual .fetch-deps \t\tca-certificates \t\tgnupg
      \t\topenssl \t\ttar         curl \t; \t    ELASTICSEARCH_TARBALL_URL=\"${ELASTICSEARCH_REPO}/elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz\";
      \tELASTICSEARCH_TARBALL_NAME=`basename ${ELASTICSEARCH_TARBALL_URL}`; \tELASTICSEARCH_TARBALL_SHA512=`curl
      ${ELASTICSEARCH_TARBALL_URL}.sha512`; \tELASTICSEARCH_TARBALL_ASC_URL=\"${ELASTICSEARCH_TARBALL_URL}.asc\";
      \t\tcurl -O \"$ELASTICSEARCH_TARBALL_URL\";     \tif [ \"$ELASTICSEARCH_TARBALL_SHA512\"
      ]; then \t\techo \"$ELASTICSEARCH_TARBALL_SHA512\" | sha512sum -c -; \tfi; \t\tif
      [ \"$ELASTICSEARCH_TARBALL_ASC_URL\" ]; then \t\twget -O elasticsearch.tar.gz.asc
      \"$ELASTICSEARCH_TARBALL_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tgpg
      --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\"; \t\tgpg
      --batch --verify elasticsearch.tar.gz.asc ${ELASTICSEARCH_TARBALL_NAME}; \t\trm
      -rf \"$GNUPGHOME\" elasticsearch.tar.gz.asc; \tfi; \t\ttar -xf ${ELASTICSEARCH_TARBALL_NAME}
      --strip-components=1; \trm ${ELASTICSEARCH_TARBALL_NAME};         rm -rf modules/x-pack-ml;
      \t\tapk del .fetch-deps; \t\tmkdir -p ./plugins; \tfor path in \t\t./data \t\t./logs
      \t\t./config \t\t./config/scripts \t; do \t\tmkdir -p \"$path\"; \t\tchown -R
      elasticsearch:elasticsearch \"$path\"; \tdone; \t    export ES_TMPDIR=`mktemp
      -d -t elasticsearch.XXXXXXXX`;     chown -R elasticsearch:elasticsearch ${ES_TMPDIR};
      \        if [ \"$ES_PLUGINS\" ]; then         for plugin in ${ES_PLUGINS}; do
      \            elasticsearch-plugin install ${plugin};         done;     fi; \texport
      ES_JAVA_OPTS='-Xms32m -Xmx32m'; \tif [ \"${ELASTICSEARCH_VERSION%%.*}\" -gt
      1 ]; then \t\telasticsearch --version; \telse \t\telasticsearch -v; \tfi;         rm
      -rf ${ES_TMPDIR}"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Chown: elasticsearch:elasticsearch
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  - Name: user
    User: elasticsearch
  From:
    Image: openjdk:8-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jre-alpine
