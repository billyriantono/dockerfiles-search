MetaArgs: null
Stages:
- BaseName: quay.io/pypa/manylinux1_x86_64
  Commands:
  - Env:
    - Key: OPENSSL_VERSION
      Value: '"1.0.2l"'
    Name: env
  - Env:
    - Key: LIBFFI_VERSION
      Value: '"3.2.1"'
    Name: env
  - Env:
    - Key: LIBXML_VERSION
      Value: '"2.9.2"'
    Name: env
  - Env:
    - Key: LIBXSLT_VERSION
      Value: '"1.1.29"'
    Name: env
  - CmdLine:
    - mkdir /dependencies
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /dependencies/requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: CFLAGS
      Value: '"-I/openssl/include -I/libffi/lib/libffi-${LIBFFI_VERSION}/include"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"-L/openssl/lib -L/libffi/lib64"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/libffi/lib64"'
    Name: env
  - CmdLine:
    - mkdir /build_cache
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /install
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y libtool texinfo zip
    Name: run
    PrependShell: true
  - CmdLine:
    - for MACRO in `ls /usr/share/aclocal`; do ln -s /usr/share/aclocal/${MACRO} /usr/local/share/aclocal/${MACRO}
      ; done
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y rpm-build python-devel libgcrypt-devel xz-devel zlib-devel &&     curl
      -O http://xmlsoft.org/sources/libxml2-${LIBXML_VERSION}-1.fc19.src.rpm &&     rpm
      -ivh libxml2-${LIBXML_VERSION}-1.fc19.src.rpm --nomd5 &&     rpmbuild -ba /usr/src/redhat/SPECS/libxml2.spec
      &&     rpm -ivh --force /usr/src/redhat/RPMS/x86_64/libxml2-${LIBXML_VERSION}-1.x86_64.rpm
      &&     rpm -ivh --force /usr/src/redhat/RPMS/x86_64/libxml2-devel-${LIBXML_VERSION}-1.x86_64.rpm
      &&     rpm -ivh --force /usr/src/redhat/RPMS/x86_64/libxml2-python-${LIBXML_VERSION}-1.x86_64.rpm
      &&     curl -O http://xmlsoft.org/sources/libxslt-${LIBXSLT_VERSION}-1.fc23.src.rpm
      &&     rpm -ivh libxslt-${LIBXSLT_VERSION}-1.fc23.src.rpm --nomd5 &&     rpmbuild
      -ba /usr/src/redhat/SPECS/libxslt.spec &&     rpm -ivh --force /usr/src/redhat/RPMS/x86_64/libxslt-${LIBXSLT_VERSION}-1.x86_64.rpm
      &&     rpm -ivh --force /usr/src/redhat/RPMS/x86_64/libxslt-devel-${LIBXSLT_VERSION}-1.x86_64.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz &&     tar
      xf openssl-${OPENSSL_VERSION}.tar.gz &&     cd openssl-${OPENSSL_VERSION} &&     ./config
      no-shared no-ssl2 -fPIC --prefix=/openssl &&     make && make install &&     cd
      ..
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o libffi-${LIBFFI_VERSION}.tar.gz https://github.com/libffi/libffi/archive/v${LIBFFI_VERSION}.tar.gz
      &&     tar xf libffi-${LIBFFI_VERSION}.tar.gz &&     cd libffi-${LIBFFI_VERSION}
      &&     ./autogen.sh &&     ./configure --prefix=/libffi &&     make && make
      install &&     cd ..
    Name: run
    PrependShell: true
  - CmdLine:
    - 'PYBIN="/opt/python/${PY_VERSION}/bin" &&     set -ex &&     if [[ -n "$EXTRA_PACKAGES"
      ]]; then yum install -y ${EXTRA_PACKAGES} ; else echo "no extra pkgs to install";
      fi &&     ${PYBIN}/pip install -U setuptools &&     if [[ -n "$REBUILD_DEPENDENCIES"
      ]]; then         echo "rebuilding dependencies";         ${PYBIN}/pip wheel
      --no-binary :all: -w /build_cache -r             /dependencies/requirements.txt
      &&         sha1sum /dependencies/requirements.txt |             cut -d " " -f
      1 > /build_cache/cache_version.sha1 ;     else echo "using cached dependencies;
      no rebuild" ;     fi &&     ${PYBIN}/pip install -U auditwheel &&     ${PYBIN}/pip
      install -t /install         --no-compile         --no-index         --find-links
      /build_cache         -r /dependencies/requirements.txt &&     cd /install &&         rm
      -f /dist/lambda_function.zip &&         zip -r /dist/lambda_function.zip ./*
      &&     cd /src &&         zip -r /dist/lambda_function.zip ${INCLUDE} &&     cd
      /tmp &&         echo "{\"VERSION_HASH\": \"${VERSION_HASH}\", \"BUILD_TIME\":
      \"${BUILD_TIME}\"}" > config.json &&         zip -r /dist/lambda_function.zip
      config.json'
    Name: cmd
    PrependShell: true
  From:
    Image: quay.io/pypa/manylinux1_x86_64
  Name: ""
  Platform: ""
  SourceCode: FROM quay.io/pypa/manylinux1_x86_64
