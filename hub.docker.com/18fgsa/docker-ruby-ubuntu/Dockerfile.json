{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "CmdLine": [
            "locale-gen en_US en_US.UTF-8   \u0026\u0026 dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential git curl libssl-dev libreadline-dev zlib1g-dev python3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_DEFAULT_VERSION",
              "Value": "4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/creationix/nvm/v0.31.3/install.sh | bash   \u0026\u0026 . \"$NVM_DIR/nvm.sh\"   \u0026\u0026 nvm install $NODE_DEFAULT_VERSION   \u0026\u0026 nvm install 6   \u0026\u0026 nvm use $NODE_DEFAULT_VERSION   \u0026\u0026 echo 'export OLD_PREFIX=$PREFIX \u0026\u0026 unset PREFIX' \u003e $HOME/.profile   \u0026\u0026 echo '[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 . \"$NVM_DIR/nvm.sh\"' \u003e\u003e $HOME/.profile   \u0026\u0026 echo 'export PREFIX=$OLD_PREFIX \u0026\u0026 unset OLD_PREFIX' \u003e\u003e $HOME/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "\\curl -sSL https://get.rvm.io | bash -s stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c 'rvm install $RUBY_VERSION \u0026\u0026 rvm use --default $RUBY_VERSION'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo rvm_silence_path_mismatch_check_flag=1 \u003e\u003e /etc/rvmrc"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}