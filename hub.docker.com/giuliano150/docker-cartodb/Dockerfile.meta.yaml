MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Stefan Verhoeven <s.verhoeven@esciencecenter.nl>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y -q apt-utils && apt-get install -y -q locales
      && dpkg-reconfigure locales &&       locale-gen en_US.UTF-8 &&       update-locale
      LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -m -d /home/cartodb -s /bin/bash cartodb &&   apt-get install -y -q     build-essential     autoconf     automake     libtool     checkinstall     unp     zip     unzip     git-core     git     subversion     curl     libgeos-c1v5     libgeos-dev     libjson0     python-simplejson     libjson0-dev     proj-bin     proj-data     libproj-dev     gdal-bin     libgdal1-dev     libgdal-dev     postgresql-9.5     postgresql-client-9.5     postgresql-contrib-9.5     postgresql-server-dev-9.5     postgresql-plpython-9.5     postgresql-9.5-plproxy     postgresql-9.5-postgis-2.2     postgresql-9.5-postgis-scripts     postgis     liblwgeom-2.2-5     ca-certificates     redis-server     python2.7-dev     python-setuptools     imagemagick     libmapnik-dev     mapnik-utils     python-mapnik     python-argparse     python-gdal     python-chardet     python-pip     python-all-dev     python-docutils     openssl     libreadline6     zlib1g     zlib1g-dev     libssl-dev     libyaml-dev     libsqlite3-dev     sqlite3     libxml2-dev     libxslt-dev     libc6-dev     ncurses-dev     bison     pkg-config     libpq5     libpq-dev     libcurl4-gnutls-dev     libffi-dev     libgdbm-dev     gnupg     libreadline6-dev     libcairo2-dev     libjpeg8-dev     libpango1.0-dev     libgif-dev     libgmp-dev     libicu-dev     wget     nginx-light     net-tools   --no-install-recommends
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email gtognrelli@entel.cl
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.name "Giuliano docker-cartodb bot"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget http://varnish-cache.org/_downloads/varnish-3.0.7.tgz &&     tar
      -zxf varnish-3.0.7.tgz &&     cd varnish-3.0.7 &&     ./configure --prefix=/opt/varnish
      &&     make &&     make install &&     cd /opt &&     rm -rf varnish-3.0.7 varnish-3.0.7.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     curl http://download.osgeo.org/gdal/2.1.1/gdal-2.1.1.tar.gz -o
      gdal-2.1.1.tar.gz &&     tar -zxf gdal-2.1.1.tar.gz &&     cd gdal-2.1.1 &&     ./configure
      --disable-shared &&     make -j 4 &&     cp apps/ogr2ogr /usr/bin/ogr2ogr2 &&     cd
      /opt &&     rm -rf /opt/ogr2ogr2 /opt/gdal-2.1.1.tar.gz /root/.gitconfig /opt/gdal-2.1.1
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://nodejs.org/download/release/v6.9.2/node-v6.9.2-linux-x64.tar.gz|
      tar -zxf - --strip-components=1 -C /usr &&   npm install -g grunt-cli &&   npm
      install -g npm@3.10.9 &&   rm -r /tmp/npm-* /root/.npm
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3 &&     curl -sSL https://raw.githubusercontent.com/wayneeseguin/rvm/stable/binscripts/rvm-installer
      | bash -s stable --ruby &&     echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc
      &&     /bin/bash -l -c rvm requirements &&     echo rvm_max_time_flag=15 >>
      ~/.rvmrc &&     /bin/bash -l -c 'rvm install 2.2.3' &&     /bin/bash -l -c 'rvm
      use 2.2.3 --default' &&     /bin/bash -l -c 'gem install bundle archive-tar-minitar'
      &&     /bin/bash -l -c 'gem install bundler compass --no-doc --no-ri' &&     ln
      -s /usr/local/rvm/rubies/ruby-2.2.3/bin/ruby /usr/bin &&     rm -rf /usr/local/rvm/src
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\(peer\|md5\)/trust/' /etc/postgresql/9.5/main/pg_hba.conf &&     service
      postgresql start &&     createuser publicuser --no-createrole --no-createdb
      --no-superuser -U postgres &&     createuser tileuser --no-createrole --no-createdb
      --no-superuser -U postgres &&     service postgresql stop
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / &&     git clone https://github.com/CartoDB/crankshaft.git &&     cd /crankshaft
      &&     git checkout master &&     make install &&     cd ..
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./template_postgis.sh
    - /tmp/template_postgis.sh
  - CmdLine:
    - service postgresql start && /bin/su postgres -c       /tmp/template_postgis.sh
      && service postgresql stop
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./cartodb_pgsql.sh
    - /tmp/cartodb_pgsql.sh
  - CmdLine:
    - git clone git://github.com/CartoDB/CartoDB-SQL-API.git &&     cd CartoDB-SQL-API
      &&     npm install &&     rm -r /tmp/npm-* /root/.npm
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://github.com/CartoDB/Windshaft-cartodb.git &&     cd Windshaft-cartodb
      &&     git checkout master &&     npm install -g yarn@0.27.5 &&     yarn install
      &&     rm -r /tmp/npm-* /root/.npm &&     mkdir logs
    Name: run
    PrependShell: true
  - CmdLine:
    - 'git clone --recursive git://github.com/entel-garage/cartodb.git &&     cd cartodb
      &&     git checkout master &&     cd lib/sql &&     PGUSER=postgres make install
      &&     service postgresql start && /bin/su postgres -c       /tmp/cartodb_pgsql.sh
      && service postgresql stop &&     cd - &&     npm install &&     rm -r /tmp/npm-*
      /root/.npm &&     perl -pi -e ''s/gdal==1\.10\.0/gdal==1.11.3/'' python_requirements.txt
      &&     pip install --upgrade pip==9.0.3 &&     pip install --no-binary :all:
      -r python_requirements.txt &&     /bin/bash -l -c ''bundle install'' &&     cp
      config/grunt_development.json ./config/grunt_true.json &&     /bin/bash -l -c
      ''bundle exec grunt'' &&     rm -rf .git /root/.cache/pip node_modules'
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/CartoDB/data-services.git &&   cd /data-services/geocoder/extension
      && PGUSER=postgres make all install && cd / &&   git clone https://github.com/CartoDB/dataservices-api.git
      &&   cd /dataservices-api/server/extension &&   PGUSER=postgres make install
      &&   cd ../lib/python/cartodb_services &&   pip install -r requirements.txt
      && pip install . &&   cd ../../../../client && PGUSER=postgres make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && git clone --recursive https://github.com/CartoDB/observatory-extension.git
      &&   cd observatory-extension &&   PGUSER=postgres make deploy
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/CartoDB-dev.js
    - /CartoDB-SQL-API/config/environments/development.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/WS-dev.js
    - /Windshaft-cartodb/config/environments/development.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/app_config.yml
    - /cartodb/config/app_config.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/database.yml
    - /cartodb/config/database.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./create_dev_user
    - /cartodb/script/create_dev_user
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup_organization.sh
    - /cartodb/script/setup_organization.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/cartodb.nginx.proxy.conf
    - /etc/nginx/sites-enabled/default
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/varnish.vcl
    - /etc/varnish.vcl
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./geocoder.sh
    - /cartodb/script/geocoder.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./geocoder_server.sql
    - /cartodb/script/geocoder_server.sql
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./fill_geocoder.sh
    - /cartodb/script/fill_geocoder.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./sync_tables_trigger.sh
    - /cartodb/script/sync_tables_trigger.sh
  - Env:
    - Key: PATH
      Value: /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - "mkdir -p /cartodb/log && touch /cartodb/log/users_modifications &&     /opt/varnish/sbin/varnishd
      -a :6081 -T localhost:6082 -s malloc,256m -f /etc/varnish.vcl &&     service
      postgresql start && service redis-server start && \tbash -l -c \"cd /cartodb
      && bash script/create_dev_user &&     bash script/setup_organization.sh && bash
      script/geocoder.sh\" && \tservice postgresql stop && service redis-server stop
      &&     chmod +x /cartodb/script/fill_geocoder.sh &&     chmod +x /cartodb/script/sync_tables_trigger.sh"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: GDAL_DATA
      Value: /usr/share/gdal/1.11
    Name: env
  - Env:
    - Key: SYNC_TABLES_INTERVAL
      Value: "3600"
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./startup.sh
    - /opt/startup.sh
  - CmdLine:
    - /bin/bash
    - /opt/startup.sh
    Name: cmd
    PrependShell: false
  - Health:
      Test:
      - CMD-SHELL
      - curl -f http://localhost || exit 1
    Name: healthcheck
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
