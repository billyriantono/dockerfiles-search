{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "1.14.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.14.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl",
            "/usr/local/bin/kubectl"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/config"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk add --no-cache curl ca-certificates gettext coreutils bash git jq \u0026\u0026     curl -o /usr/bin/yq -sSL https://github.com/deitch/yq/releases/download/1.1.0/yq-linux-amd64 \u0026\u0026     chmod +x /usr/bin/yq \u0026\u0026     chmod +x /usr/local/bin/kubectl \u0026\u0026         adduser kubectl -Du 2342 -h /config \u0026\u0026         kubectl version --client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz \u0026\u0026     tar -xvf helm-v${HELM_VERSION}-linux-amd64.tar.gz \u0026\u0026     mv linux-amd64/helm /usr/local/bin \u0026\u0026     helm version -c"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "kubectl"
        }
      ]
    }
  ]
}