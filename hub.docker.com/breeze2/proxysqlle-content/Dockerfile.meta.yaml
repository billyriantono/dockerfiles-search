MetaArgs: null
Stages:
- BaseName: ubuntu:17.10
  Commands:
  - Maintainer: brandonwillard
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Env:
    - Key: TINI_VERSION
      Value: v0.17.0
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_MESSAGES
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:/root/.cask/bin:$PATH
    Name: env
  - CmdLine:
    - set -ex   && buildDeps='   build-essential   curl   grep   sed   dpkg   bzip2   ca-certificates   '   &&
      apt-get update -yqq   && apt-get install -yqq --no-install-recommends   $buildDeps   git   ssh   make   rsync   apt-utils   locales   &&
      sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen   && locale-gen   &&
      update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && apt-get install -yqq --no-install-recommends   texlive-plain-generic   texlive-latex-base   texlive-latex-extra   texlive-fonts-recommended   texlive-pictures   poppler-utils   latexmk
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex &&   curl -fsSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      > ~/miniconda.sh &&   /bin/bash ~/miniconda.sh -b -p /opt/conda &&   rm ~/miniconda.sh
      &&   ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&   echo
      ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc &&   echo "conda activate
      base" >> ~/.bashrc &&   conda update -qy -n base conda &&   conda install -qy
      -n base python=3.6.4 pip openblas numpy pandas pandoc ipython jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && apt-get install -yqq --no-install-recommends   emacs25-nox   &&
      curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex &&   TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest
      | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` &&   curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb"
      > tini.deb &&   dpkg -i tini.deb &&   rm tini.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && apt-get purge --auto-remove -yqq $buildDeps   && apt-get clean   &&
      rm -rf   /var/lib/apt/lists/*   /tmp/*   /var/tmp/*   /usr/share/man   /usr/share/doc   /usr/share/doc-base
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:17.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.10
