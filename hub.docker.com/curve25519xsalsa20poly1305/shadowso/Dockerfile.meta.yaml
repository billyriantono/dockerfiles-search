MetaArgs: null
Stages:
- BaseName: openjdk:alpine
  Commands:
  - Maintainer: DUONG Dinh Cuong <cuong3ihut@gmail.com>
    Name: maintainer
  - Env:
    - Key: JAVA_APP
      Value: /opt/java-app
    - Key: JAVA_NAMESPACE
      Value: com.mario.Mario
    - Key: JAVA_XMS
      Value: 256m
    - Key: JAVA_XMX
      Value: 256m
    Name: env
  - CmdLine:
    - mkdir -p ${JAVA_APP}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${JAVA_APP}/extensions
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/html
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/
    - ${JAVA_APP}/conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./lib/
    - ${JAVA_APP}/lib
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./index.html
    - /usr/share/html/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./avatar/
    - /usr/share/html/avatar
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./upload/
    - /usr/share/html/upload
  - Name: workdir
    Path: ${JAVA_APP}
  - Name: volume
    Volumes:
    - ${JAVA_APP}/extensions
  - Env:
    - Key: NGINX_VERSION
      Value: 1.10.2
    Name: env
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--user=nginx \t\t--group=nginx
      \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-threads \t\t--with-stream \t\t--with-http_slice_module
      \t\t--with-file-aio \t\t--with-http_v2_module \t\t--with-ipv6 \t\" \t&& addgroup
      -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx
      \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake
      \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tgd-dev \t&&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz
      \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o
      nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \t&& gpg --batch --verify
      nginx.tar.gz.asc nginx.tar.gz \t&& rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t&&
      mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz
      \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug
      \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug
      \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make
      install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir
      -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/
      \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug
      /usr/sbin/nginx-debug \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules
      \t&& strip /usr/sbin/nginx* \t&& rm -rf /usr/src/nginx-$NGINX_VERSION \t\t&&
      apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst /tmp/
      \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'
      \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\"
      \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps
      \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& ln -sf /dev/stdout
      /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Env:
    - Key: S6_OVERLAY_VERSION
      Value: v1.17.2.0
    Name: env
  - CmdLine:
    - apk add --no-cache curl &&     curl -sSL https://github.com/just-containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz     |
      tar xfz - -C / &&     apk del curl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files
    - /
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - "java -Dcom.sun.management.jmxremote \t-Dcom.sun.management.jmxremote.port=9001
      \t-Dcom.sun.management.jmxremote.local.only=false \t-Dcom.sun.management.jmxremote.authenticate=false
      \t-Dcom.sun.management.jmxremote.ssl=false \t-Dhazelcast.hostaddr=$(getent hosts
      ${1:-$HOSTNAME} | awk '{print $1}' | head -1) \t-XX:+UseParNewGC \t-XX:NewRatio=3
      \t-XX:SurvivorRatio=4 \t-XX:TargetSurvivorRatio=90 \t-XX:MaxTenuringThreshold=8
      \t-XX:+UseConcMarkSweepGC \t-XX:+CMSScavengeBeforeRemark \t-XX:PretenureSizeThreshold=64m
      \t-XX:+UseCMSInitiatingOccupancyOnly \t-XX:CMSInitiatingOccupancyFraction=80
      \t-XX:CMSMaxAbortablePrecleanTime=6000 \t-XX:+CMSParallelRemarkEnabled \t-XX:+ParallelRefProcEnabled
      \t-server \t-d64 -Xms${JAVA_XMS} -Xmx${JAVA_XMX} \t-XX:MaxGCPauseMillis=200
      -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 \t-XX:InitiatingHeapOccupancyPercent=70
      \t-XX:+HeapDumpOnOutOfMemoryError \t-XX:HeapDumpPath='${JAVA_APP}/logs/dump-$(date
      +%Y%m%d%H%M%S).hprof' \t-Dfile.encoding=UTF-8 \t-Dlog4j.configurationFile=${JAVA_APP}/conf/log4j2.xml
      \t-cp ${JAVA_APP}:${JAVA_APP}/lib/*:${JAVA_APP}/extensions/__lib__/*: ${JAVA_NAMESPACE}"
    Name: cmd
    PrependShell: true
  From:
    Image: openjdk:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:alpine
