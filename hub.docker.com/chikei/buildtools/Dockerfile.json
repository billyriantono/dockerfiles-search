{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:10",
      "SourceCode": "FROM openjdk:10",
      "Platform": "",
      "From": {
        "Image": "openjdk:10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "2.12.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "1.2.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsL http://downloads.lightbend.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz | tar xfz - -C /root/ \u0026\u0026   echo \u003e\u003e /root/.bashrc \u0026\u0026   echo 'export PATH=~/scala-$SCALA_VERSION/bin:$PATH' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o sbt-$SBT_VERSION.deb http://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \u0026\u0026   dpkg -i sbt-$SBT_VERSION.deb \u0026\u0026   rm sbt-$SBT_VERSION.deb \u0026\u0026   apt-get update \u0026\u0026   apt-get install sbt \u0026\u0026   sbt sbtVersion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sbt -sbt-version 1.2.6 exit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/maven   \u0026\u0026 curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   \u0026\u0026 ln -s /usr/share/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/share/maven"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANT_VERSION",
              "Value": "1.9.14"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 wget -q http://www.apache.org/dist//ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \u0026\u0026     tar xzf apache-ant-${ANT_VERSION}-bin.tar.gz \u0026\u0026     mv apache-ant-${ANT_VERSION} /opt/ant \u0026\u0026     rm -f apache-ant-${ANT_VERSION}-bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANT_HOME",
              "Value": "/opt/ant"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/ant/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "2.13"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/bin"
        },
        {
          "CmdLine": [
            "curl -sLO https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-all.zip \u0026\u0026   unzip gradle-${GRADLE_VERSION}-all.zip \u0026\u0026   ln -s gradle-${GRADLE_VERSION} gradle \u0026\u0026   rm gradle-${GRADLE_VERSION}-all.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/bin/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.11.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "0.27.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 mkdir -p /opt/yarn   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg WORKDIR /root"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}