{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Key": "QT",
          "Name": "arg",
          "Value": "5.12.3"
        },
        {
          "Key": "QTM",
          "Name": "arg",
          "Value": "5.12"
        },
        {
          "Key": "QTSHA",
          "Name": "arg",
          "Value": "b72eeec96bef4daf14abf38a0f3f37748d7e483a706c59263a8129632fea98aa"
        },
        {
          "Key": "QTCOMPONENTS",
          "Name": "arg",
          "Value": "gcc_64"
        },
        {
          "Key": "DELETE",
          "Name": "arg",
          "Value": "\"Docs Examples MaintenanceTool /tmp/qt/installer.run /tmp/qt/script.qs\""
        },
        {
          "Key": "QMATRIXCLIENT",
          "Name": "arg",
          "Value": "0.5.1.2"
        },
        {
          "CmdLine": [
            "apt-get update -q \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -q -y --no-install-recommends         ca-certificates         libfontconfig1         libice6         libsm6         libx11-xcb1         libxext6         libxrender1         p7zip         xvfb         build-essential         cmake         git-core         libpulse0         libpulse-mainloop-glib0         locales         dbus         libxcb-xinerama0         libglib2.0-0         libxkbcommon-x11-0         libgl1-mesa-dev         gdb         clang-format         wget     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "QTRUNFILE",
          "Name": "arg",
          "Value": "http://download.qt.io/official_releases/qt/${QTM}/${QT}/qt-opensource-linux-x64-${QT}.run"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "qt-installer-noninteractive.qs",
            "/tmp/qt/script.qs"
          ]
        },
        {
          "Env": [
            {
              "Key": "QTM",
              "Value": "$QTM"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QTSHA",
              "Value": "$QTSHA"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QTCOMPONENTS",
              "Value": "$QTCOMPONENTS"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DELETE",
              "Value": "$DELETE"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "set -euo pipefail     \u0026\u0026 wget -O /tmp/qt/installer.run ${QTRUNFILE}     \u0026\u0026 echo \"${QTSHA}  /tmp/qt/installer.run\" | sha256sum -c     \u0026\u0026 chmod +x /tmp/qt/installer.run     \u0026\u0026 xvfb-run -e /dev/stderr /tmp/qt/installer.run --script /tmp/qt/script.qs --verbose     \u0026\u0026 rm -rf /tmp/qt     \u0026\u0026 cd /opt/qt     \u0026\u0026 rm -rf ${DELETE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for COMPONENT in `echo ${QTCOMPONENTS} | tr , ' '`; do echo /opt/qt/${QT}/${COMPONENT}/lib \u003e\u003e /etc/ld.so.conf.d/qt-${QT}.conf; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/qt/${QT}/gcc_64/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "set -euo pipefail     \u0026\u0026 cd ~     \u0026\u0026 git clone --single-branch --branch ${QMATRIXCLIENT} https://github.com/QMatrixClient/libqmatrixclient.git     \u0026\u0026 mkdir -p ~/libqmatrixclient/build_dir     \u0026\u0026 cd ~/libqmatrixclient/build_dir     \u0026\u0026 cmake -DQMATRIXCLIENT_INSTALL_EXAMPLE=OFF ..     \u0026\u0026 cmake --build . --target install     \u0026\u0026 rm -rf ~/libqmatrixclient"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "\"$BUILD_DATE\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"fmc-docker-qt-dev\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Qt $QT build environment\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"e.g. https://bitbucket.org:federatedmissioncontrol/fmc-docker-qt-dev\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "\"$VCS_REF\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://bitbucket.org:federatedmissioncontrol/fmc-docker-qt-dev.git\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "\"$QT\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}