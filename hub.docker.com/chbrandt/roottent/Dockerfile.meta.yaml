MetaArgs: null
Stages:
- As: pre-builder
  BaseName: ruby:2.6.5-alpine
  Commands:
  - Key: BUNDLE_WITHOUT
    Name: arg
    Value: '"development:test"'
  - Env:
    - Key: BUNDLE_WITHOUT
      Value: ${BUNDLE_WITHOUT}
    Name: env
  - Env:
    - Key: BUNDLER_VERSION
      Value: 2.1.2
    Name: env
  - Key: RAILS_SERVE_STATIC_FILES
    Name: arg
    Value: "true"
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: ${RAILS_SERVE_STATIC_FILES}
    Name: env
  - Key: RAILS_ENV
    Name: arg
    Value: production
  - Env:
    - Key: RAILS_ENV
      Value: ${RAILS_ENV}
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"/gems"'
    Name: env
  - CmdLine:
    - apk update   && apk add     openssl     tar     build-base     tzdata     postgresql-dev     postgresql-client     nodejs     yarn   &&
      mkdir -p /var/app   && gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - Gemfile.lock
    - ./
  - CmdLine:
    - if [ "$RAILS_ENV" = "production" ]; then   bundle install -j 4 -r 3 --without
      development test;   else bundle install -j 4 -r 3;   fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - yarn.lock
    - ./
  - CmdLine:
    - yarn install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - if [ "$RAILS_ENV" = "production" ]; then   SECRET_KEY_BASE=precompile_placeholder
      bundle exec rake assets:precompile;   fi
    Name: run
    PrependShell: true
  From:
    Image: ruby:2.6.5-alpine
  Name: pre-builder
  Platform: ""
  SourceCode: FROM ruby:2.6.5-alpine AS pre-builder
- BaseName: ruby:2.6.5-alpine
  Commands:
  - Key: BUNDLE_WITHOUT
    Name: arg
    Value: '"development:test"'
  - Env:
    - Key: BUNDLE_WITHOUT
      Value: ${BUNDLE_WITHOUT}
    Name: env
  - Env:
    - Key: BUNDLER_VERSION
      Value: 2.1.2
    Name: env
  - Key: EXECJS_RUNTIME
    Name: arg
    Value: '"Disabled"'
  - Env:
    - Key: EXECJS_RUNTIME
      Value: ${EXECJS_RUNTIME}
    Name: env
  - Key: RAILS_SERVE_STATIC_FILES
    Name: arg
    Value: "true"
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: ${RAILS_SERVE_STATIC_FILES}
    Name: env
  - Key: RAILS_ENV
    Name: arg
    Value: production
  - Env:
    - Key: RAILS_ENV
      Value: ${RAILS_ENV}
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"/gems"'
    Name: env
  - CmdLine:
    - apk add --update --no-cache     openssl     tzdata     postgresql-client     imagemagick   &&
      gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$RAILS_ENV" = "production" ]; then   rm -rf spec node_modules app/assets
      vendor/assets tmp/cache;   else apk add nodejs yarn;   fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: pre-builder
    Name: copy
    SourcesAndDest:
    - /gems/
    - /gems/
  - Chown: ""
    From: pre-builder
    Name: copy
    SourcesAndDest:
    - /app
    - /app
  - CmdLine:
    - rm -rf /gems/ruby/2.6.0/cache/*.gem   && find /gems/ruby/2.6.0/gems/ -name "*.c"
      -delete   && find /gems/ruby/2.6.0/gems/ -name "*.o" -delete
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  From:
    Image: ruby:2.6.5-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.6.5-alpine
