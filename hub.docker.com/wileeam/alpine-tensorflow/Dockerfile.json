{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCAL_RESOURCES",
              "Value": "2048,.5,1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BAZEL_VERSION",
              "Value": "0.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TENSORFLOW_VERSION",
              "Value": "1.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache ca-certificates wget python python2-tkinter py-numpy py2-numpy-f2py freetype libpng libjpeg-turbo imagemagick graphviz git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=.build-deps         bash         cmake         curl         freetype-dev         g++         libjpeg-turbo-dev         libpng-dev         linux-headers         make         musl-dev         openblas-dev         openjdk8         patch         perl         python-dev         py-numpy-dev         py-pip         rsync         sed         swig         zip     \u0026\u0026 cd /tmp     \u0026\u0026 pip install -U pip setuptools wheel     \u0026\u0026 pip install enum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 curl -SLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.27-r0/glibc-2.27-r0.apk     \u0026\u0026 apk add glibc-2.27-r0.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 curl -SLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.27-r0/glibc-bin-2.27-r0.apk     \u0026\u0026 apk add glibc-bin-2.27-r0.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 curl -SLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.27-r0/glibc-i18n-2.27-r0.apk     \u0026\u0026 apk add glibc-i18n-2.27-r0.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SLO https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip     \u0026\u0026 mkdir bazel-${BAZEL_VERSION}     \u0026\u0026 unzip -qd bazel-${BAZEL_VERSION} bazel-${BAZEL_VERSION}-dist.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd bazel-${BAZEL_VERSION}     \u0026\u0026 sed -i -e 's/-classpath/-J-Xmx8192m -J-Xms128m -classpath/g' scripts/bootstrap/compile.sh     \u0026\u0026 bash compile.sh     \u0026\u0026 cp -p output/bazel /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 curl -SL https://github.com/tensorflow/tensorflow/archive/v${TENSORFLOW_VERSION}.tar.gz         | tar xzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/tensorflow-${TENSORFLOW_VERSION}     \u0026\u0026 : musl-libc does not have \"secure_getenv\" function     \u0026\u0026 sed -i -e '/JEMALLOC_HAVE_SECURE_GETENV/d' third_party/jemalloc.BUILD     \u0026\u0026 sed -i -e '/define TF_GENERATE_BACKTRACE/d' tensorflow/core/platform/default/stacktrace.h     \u0026\u0026 sed -i -e '/define TF_GENERATE_STACKTRACE/d' tensorflow/core/platform/stacktrace_handler.cc     \u0026\u0026 PYTHON_BIN_PATH=/usr/bin/python         PYTHON_LIB_PATH=/usr/lib/python2.7/site-packages         CC_OPT_FLAGS=\"-march=native\"         TF_NEED_JEMALLOC=1         TF_NEED_GCP=0         TF_NEED_HDFS=0         TF_NEED_S3=0         TF_ENABLE_XLA=0         TF_NEED_GDR=0         TF_NEED_VERBS=0         TF_NEED_OPENCL=0         TF_NEED_CUDA=0         TF_NEED_MPI=0         bash configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/tensorflow-${TENSORFLOW_VERSION}     \u0026\u0026 bazel build -c opt --local_resources ${LOCAL_RESOURCES} //tensorflow/tools/pip_package:build_pip_package"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/tensorflow-${TENSORFLOW_VERSION}     \u0026\u0026 ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /tmp/tensorflow_pkg/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl /root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir /root/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl     \u0026\u0026 python -c 'import tensorflow'"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}