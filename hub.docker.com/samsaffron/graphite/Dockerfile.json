{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "from ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install software-properties-common \u0026\u0026\tapt-get -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update   \u0026\u0026 apt-get -y upgrade   \u0026\u0026 apt-get -y --force-yes install vim   nginx   python-dev   python-flup   python-pip   python-ldap   expect   git   memcached   sqlite3   libffi-dev   libcairo2   libcairo2-dev   python-cairo   python-rrdtool   pkg-config   nodejs   supervisor   wget   libssl-dev   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install gunicorn pyopenssl ndg-httpsclient pyasn1 django==1.8.18   python-memcached==1.53   txAMQP==0.6.2   \u0026\u0026 pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /src \u0026\u0026 git clone https://github.com/etsy/statsd.git /src/statsd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install whisper pytz scandir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026        wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana_4.4.3_amd64.deb \u0026\u0026        sudo dpkg -i grafana_4.4.3_amd64.deb \u0026\u0026        rm grafana_4.4.3_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./statsd/config.js",
            "/src/statsd/config.js"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/initial_data.json",
            "/var/lib/graphite/webapp/graphite/initial_data.json"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/local_settings.py",
            "/var/lib/graphite/webapp/graphite/local_settings.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/carbon.conf",
            "/var/lib/graphite/conf/carbon.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/storage-schemas.conf",
            "/var/lib/graphite/conf/storage-schemas.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/storage-aggregation.conf",
            "/var/lib/graphite/conf/storage-aggregation.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./grafana/config.ini",
            "/etc/grafana/config.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2003"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2003/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2004"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7002"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8125/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8126"
          ]
        },
        {
          "Env": [
            {
              "Key": "STATSD_IPV6",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./bin/init",
            "/usr/bin/init"
          ]
        },
        {
          "CmdLine": [
            "exec /usr/bin/init"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}