{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.14-cli",
      "SourceCode": "FROM php:7.1.14-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.1.14-cli"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     git     unzip     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     git     unzip     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     libicu-dev     libpcre3-dev     libicu52      \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install exif     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 pecl install xdebug     \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026 composer --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/bin \u0026\u0026 curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony \u0026\u0026 chmod a+x /usr/local/bin/symfony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/localtime \u0026\u0026 ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime \u0026\u0026 \"date\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev \"behat/behat\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev \"behat/mink-browserkit-driver\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev \"behat/mink-goutte-driver\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev \"behat/mink-extension\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev \"behat/symfony2-extension\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev \"behatch/contexts\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"squizlabs/php_codesniffer=*\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --dev nekih/symfony-coding-standard:3.x-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/.composer/vendor/bin/phpcs --config-set installed_paths /root/.composer/vendor/nekih/symfony-coding-standard"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}