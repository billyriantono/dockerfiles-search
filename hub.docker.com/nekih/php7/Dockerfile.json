{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.4-fpm",
      "SourceCode": "FROM php:7.1.4-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1.4-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     git     unzip     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     libicu-dev     libpcre3-dev     libicu52      \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install exif     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 pecl install xdebug     \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026 composer --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/bin \u0026\u0026 curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony \u0026\u0026 chmod a+x /usr/local/bin/symfony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/localtime \u0026\u0026 ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime \u0026\u0026 \"date\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"error_reporting = E_ALL\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"display_startup_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"display_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_port=9001\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo 'alias sf=\"php app/console\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias sf3=\"php bin/console\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default.conf",
            "/usr/local/etc/php-fpm.d/www.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/.composer     \u0026\u0026 composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1000"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/symfony"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/symfony"
        }
      ]
    }
  ]
}