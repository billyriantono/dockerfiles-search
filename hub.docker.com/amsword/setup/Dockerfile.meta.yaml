MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .tmux.conf
    - /app
  - CmdLine:
    - apt-get update && apt-get install -y         bc         build-essential         cmake         curl         devscripts         gdb         git         gfortran         gvfs-bin         libboost-all-dev         libleveldb-dev         libnotify4         libopenblas-dev         libclang-dev         libncurses5-dev         libbonoboui2-dev         libcairo2-dev         libgnome2-dev         libgnomeui-dev         libgtk2.0-dev         libx11-dev         libxpm-dev         libxt-dev         less         lsb-release         libperl-dev         libhdf5-serial-dev         cmake         libatlas-base-dev         rake         ruby-dev         silversearcher-ag         software-properties-common         wget         tmux
    Name: run
    PrependShell: true
  - Env:
    - Key: STAGE_DIR
      Value: /root/gpu/install
    - Key: CUDNN_DIR
      Value: /usr/local/cudnn
    - Key: CUDA_DIR
      Value: /usr/local/cuda-10.0
    Name: env
  - Env:
    - Key: OFED_VERSION
      Value: 4.2-1.2.0.0
    Name: env
  - CmdLine:
    - mkdir -p $STAGE_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update &&     apt-get -y install       build-essential       autotools-dev       rsync       curl       wget       jq       openssh-server       openssh-client       sudo       cmake       g++       gcc       net-tools
      &&     apt-get autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     apt-get install -y --no-install-recommends         dnsutils         pciutils         ethtool         lsof         python-libxml2         quilt         libltdl-dev         dpatch         autotools-dev         graphviz         autoconf         chrpath         swig         automake         tk8.4         tcl8.4         libgfortran3         tcl         libnl-3-200         libnl-route-3-200         libnl-route-3-dev         libnl-utils         gfortran         tk         bison         flex         libnuma1         checkinstall
      &&     apt-get -y autoremove &&     wget -q -O - http://www.infradead.org/~tgr/libnl/files/libnl-1.1.4.tar.gz
      | tar xzf - &&     cd libnl-1.1.4 &&     ./configure &&     make &&     checkinstall
      -D --showinstall=no --install=yes -y -pkgname=libnl1 -A amd64 &&     cd .. &&     rm
      -rf libnl-1.1.4 &&     wget -q -O - http://www.mellanox.com/downloads/ofed/MLNX_OFED-$OFED_VERSION/MLNX_OFED_LINUX-$OFED_VERSION-ubuntu16.04-x86_64.tgz
      | tar xzf - &&     cd MLNX_OFED_LINUX-$OFED_VERSION-ubuntu16.04-x86_64/DEBS
      &&     for dep in libibverbs1 libibverbs-dev ibverbs-utils libmlx4-1 libmlx5-1
      librdmacm1 librdmacm-dev libibumad libibumad-devel libibmad libibmad-devel;
      do         dpkg -i $dep\_*_amd64.deb;     done &&     cd ../.. &&     rm -rf
      MLNX_OFED_LINUX-*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      -O anaconda.sh &&     /bin/bash anaconda.sh -b -p /opt/conda &&     rm anaconda.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/conda/bin:${PATH}"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/opt/conda/lib:${LD_LIBRARY_PATH}"'
    Name: env
  - CmdLine:
    - conda install -y python=3.6
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y         python=3.6         libprotobuf         boost         gflags         glog         opencv         lmdb         mkl-include         leveldb
      &&     pip install --upgrade pip ipython &&     pip install --upgrade -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install pytorch torchvision cudatoolkit=10.0 -c pytorch
    Name: run
    PrependShell: true
  - Env:
    - Key: NCCL_VERSION
      Value: 2.4.7-1+cuda10.0
    Name: env
  - CmdLine:
    - apt-get install -y --allow-change-held-packages     libnccl2=${NCCL_VERSION}     libnccl-dev=${NCCL_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /app &&     git clone https://github.com/cocodataset/cocoapi &&     cd cocoapi/PythonAPI
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /app &&     git clone https://www.github.com/nvidia/apex &&     cd apex &&     python
      setup.py install --cuda_ext --cpp_ext
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /etc/skel/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - id_rsa
    - /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - id_rsa.pub
    - /app
  - CmdLine:
    - echo "alias ll='ls -alF'" >> /etc/skel/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz
      &&     tar zxf openmpi-4.0.0.tar.gz &&     cd openmpi-4.0.0 &&     ./configure
      --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install
      &&     ldconfig &&     rm -rf /tmp/openmpi
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     HOROVOD_GPU_ALLREDUCE=NCCL
      HOROVOD_WITH_PYTORCH=1 python -m pip install --no-cache-dir     git+https://github.com/horovod/horovod.git@910333f428e91c4cdca634864398f0952067f2a8
      &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         infiniband-diags
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install iperf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /app
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    StrictHostKeyChecking no' >> /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "root:Docker!" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sleep
    - infinity
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
