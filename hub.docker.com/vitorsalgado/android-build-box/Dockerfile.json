{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget git curl zip software-properties-common \u0026\u0026     add-apt-repository ppa:openjdk-r/ppa \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y openjdk-7-jdk openjdk-8-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA7_HOME",
              "Value": "/usr/lib/jvm/java-7-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA8_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "$JAVA8_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_TOOL_OPTIONS",
              "Value": "\"-Dfile.encoding=UTF8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "gradle-4.1-all"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_URL",
              "Value": "http://services.gradle.org/distributions/${GRADLE_VERSION}.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/local/${GRADLE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/usr/local/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_DATE",
              "Value": "20170206"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_COMPONENTS",
              "Value": "platform-tools,build-tools-27.0.1,android-27,extra-android-m2repository,extra-google-m2repository"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "android-accept-licenses.sh",
            "/opt/tools/android-accept-licenses.sh"
          ]
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026 apt-get update \u0026\u0026 apt-get install -yq libstdc++6:i386 zlib1g:i386 libncurses5:i386 lib32z1 ant maven expect --no-install-recommends \u0026\u0026     curl -L ${GRADLE_URL} -o /tmp/${GRADLE_VERSION}.zip \u0026\u0026 unzip /tmp/${GRADLE_VERSION}.zip -d /usr/local \u0026\u0026 rm /tmp/${GRADLE_VERSION}.zip \u0026\u0026     curl -L ${ANDROID_SDK_URL} | tar xz -C /usr/local \u0026\u0026     chmod -R +w $ANDROID_HOME \u0026\u0026     chmod +x /opt/tools/android-accept-licenses.sh \u0026\u0026     mkdir ${ANDROID_HOME}/licenses \u0026\u0026 echo 8933bad161af4178b1185d1a37fbf41ea5269c55 \u003e ${ANDROID_HOME}/licenses/android-sdk-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "/opt/tools/android-accept-licenses.sh \"${ANDROID_HOME}/tools/android update sdk --no-ui --all --filter ${ANDROID_SDK_COMPONENTS}\""
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${GRADLE_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y g++     automake     autoconf     gcc     groff     libc6-dev     libgmp-dev     libmpc-dev     libmpfr-dev     m4     rsync     unzip     ncurses-dev     ocaml     autoconf-archive     libtool     libboost-all-dev     libevent-dev     libdouble-conversion-dev     libgoogle-glog-dev     libgflags-dev     liblz4-dev     liblzma-dev     libsnappy-dev     make     binutils-dev     libjemalloc-dev     libssl-dev     python3     pkg-config     python-software-properties     libiberty-dev     zlib1g-dev     libjsoncpp-dev \u0026\u0026     git clone https://github.com/facebook/redex /redex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK",
              "Value": "$ANDROID_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/redex"
        },
        {
          "CmdLine": [
            "git submodule update --init \u0026\u0026     autoreconf -ivf \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPAM_VERSION",
              "Value": "1.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INFER_VERSION",
              "Value": "v0.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL     https://github.com/ocaml/opam/releases/download/$OPAM_VERSION/opam-${OPAM_VERSION}-x86_64-Linux     -o /usr/local/bin/opam \u0026\u0026     chmod 755 /usr/local/bin/opam \u0026\u0026     ((/usr/local/bin/opam --version | grep -q $OPAM_VERSION) ||     (echo \"failed to download opam from GitHub.\"; exit 1)) \u0026\u0026     opam init -y --comp=4.02.3 \u0026\u0026     cd /opt \u0026\u0026     curl -sL     https://github.com/facebook/infer/releases/download/${INFER_VERSION}/infer-linux64-${INFER_VERSION}.tar.xz |     tar xJ \u0026\u0026     rm -f /infer \u0026\u0026     ln -s ${PWD}/infer-linux64-$INFER_VERSION /infer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/infer"
        },
        {
          "CmdLine": [
            "opam install -y extlib.1.5.4 atdgen.1.6.0 javalib.2.3.1 sawja.1.5.1 \u0026\u0026     eval $(opam config env) \u0026\u0026     opam update \u0026\u0026     opam pin add --yes --no-action infer . \u0026\u0026     opam install --deps-only infer \u0026\u0026     eval $(opam config env) \u0026\u0026     ./build-infer.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "INFER_HOME",
              "Value": "/infer/infer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${INFER_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y ruby-full \u0026\u0026     gem install bundler \u0026\u0026     gem install fastlane --no-document     \u0026\u0026 fastlane --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}