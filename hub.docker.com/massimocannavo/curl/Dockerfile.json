{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "MBED_TLS_VER",
              "Value": "2.12.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CURL_VER",
              "Value": "7.61.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache   g++   make   nghttp2-dev   nghttp2-libs   perl     \u0026\u0026 addgroup curl \u0026\u0026 adduser -D -s /bin/sh -G curl curl     \u0026\u0026 mkdir --parents /usr/local/etc     \u0026\u0026 grep curl /etc/group \u003e /usr/local/etc/group   \u0026\u0026 grep curl /etc/passwd \u003e /usr/local/etc/passwd     \u0026\u0026 wget --directory-prefix=/usr/local/etc     https://curl.haxx.se/ca/cacert.pem     \u0026\u0026 wget \"https://tls.mbed.org/download/mbedtls-${MBED_TLS_VER}-apache.tgz\"   \u0026\u0026 tar --extract --gzip --verbose --file \"mbedtls-${MBED_TLS_VER}-apache.tgz\"   \u0026\u0026 cd \"mbedtls-${MBED_TLS_VER}\"     make \u0026\u0026 make install     \u0026\u0026 wget \"https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz\"   \u0026\u0026 tar --extract --gzip --verbose --file \"curl-${CURL_VER}.tar.gz\"   \u0026\u0026 cd \"curl-${CURL_VER}\"     \u0026\u0026 ./configure     --enable-optimize     --with-nghttp2=/usr     --without-ssl     --with-mbedtls     --enable-ipv6     --enable-unix-sockets     --without-libidn     --disable-static     --disable-ldap     --disable-manual     --disable-versioned-symbols     --enable-hidden-symbols     \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 strip --strip-all /usr/local/bin/curl   \u0026\u0026 strip --strip-all /usr/local/lib/libcurl.so.4"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/lib/ld-musl-x86_64.so.1",
            "/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/lib/libnghttp2.so.14",
            "/usr/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/lib/libz.so.1",
            "/lib"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/libcurl.so.4",
            "/usr/local/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/curl",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/etc/passwd",
            "/etc/passwd"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/etc/group",
            "/etc/group"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/etc/cacert.pem",
            "/etc/ssl/cert.pem"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/home/curl",
            "/home/curl"
          ]
        },
        {
          "Name": "user",
          "User": "curl"
        },
        {
          "Name": "workdir",
          "Path": "/home/curl"
        },
        {
          "CmdLine": [
            "/usr/local/bin/curl"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-h"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}