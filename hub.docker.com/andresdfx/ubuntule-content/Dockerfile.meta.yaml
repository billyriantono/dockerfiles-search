MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Key: NAME
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: NAME
      Value: $NAME
    Name: env
  - Env:
    - Key: VERSION
      Value: $VERSION
    Name: env
  - Env:
    - Key: HASHICORP_RELEASES
      Value: https://releases.hashicorp.com
    Name: env
  - CmdLine:
    - "echo name=${NAME} && \techo version=${VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -eux &&     apk add --no-cache ca-certificates curl gnupg libcap openssl
      su-exec iputils &&     BUILD_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='''';     for
      server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ;
      do         echo "Fetching GPG key $BUILD_GPGKEY from $server";         gpg --keyserver
      "$server" --recv-keys "$BUILD_GPGKEY" && found=yes && break;     done;     test
      -z "$found" && echo >&2 "error: failed to fetch GPG key $BUILD_GPGKEY" && exit
      1;     mkdir -p /tmp/build &&     cd /tmp/build &&     apkArch="armhf" &&     case
      "${apkArch}" in         aarch64) ARCH=''arm64'' ;;         armhf) ARCH=''arm''
      ;;         x86) ARCH=''386'' ;;         x86_64) ARCH=''amd64'' ;;         *)
      echo >&2 "error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/${NAME}/${VERSION}/)"
      && exit 1 ;;     esac &&     wget ${HASHICORP_RELEASES}/${NAME}/${VERSION}/${NAME}_${VERSION}_linux_${ARCH}.zip
      &&     wget ${HASHICORP_RELEASES}/${NAME}/${VERSION}/${NAME}_${VERSION}_SHA256SUMS
      &&     wget ${HASHICORP_RELEASES}/${NAME}/${VERSION}/${NAME}_${VERSION}_SHA256SUMS.sig
      &&     gpg --batch --verify ${NAME}_${VERSION}_SHA256SUMS.sig ${NAME}_${VERSION}_SHA256SUMS
      &&     grep ${NAME}_${VERSION}_linux_${ARCH}.zip ${NAME}_${VERSION}_SHA256SUMS
      | sha256sum -c &&     unzip -d /bin ${NAME}_${VERSION}_linux_${ARCH}.zip &&     cd
      /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg'
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
