MetaArgs: null
Stages:
- BaseName: ubuntu:12.04
  Commands:
  - Maintainer: Juanjo Mata <juanjo.mata@gmail.com>
    Name: maintainer
  - Env:
    - Key: DRONEDB_VERSION
      Value: agroviz
    Name: env
  - Env:
    - Key: SQL_API_STABLE_VERSION
      Value: 1.47.1
    Name: env
  - Env:
    - Key: WINDSHAFT_STABLE_VERSION
      Value: 5.2.0
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - dpkg-reconfigure locales &&       locale-gen en_US.UTF-8 &&       update-locale
      LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: volume
    Volumes:
    - /data
  - Env:
    - Key: ENVIRONMENT
      Value: development
    Name: env
  - CmdLine:
    - useradd -m -d /home/cartodb -s /bin/bash cartodb &&   apt-get update &&  apt-get
      install -y -q     autoconf binutils-doc bison build-essential flex     software-properties-common     python-software-properties     python-all-dev     automake     libtool     checkinstall     unp     vim     zip     unzip     gettext     git-core     git     subversion     curl
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cartodb/postgresql-9.5 && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q   libpq5   libpq-dev   postgresql-client-9.5   postgresql-client-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cartodb/gis && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y -q   proj proj-bin proj-data libproj-dev   libjson0
      libjson0-dev python-simplejson   libgeos-c1v5 libgeos-dev   gdal-bin libgdal1-dev
      libgdal-dev   gdal2.1-static-bin   liblwgeom-2.2.2 postgis postgresql-9.5-postgis-2.2
      postgresql-9.5-postgis-scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ubuntu-toolchain-r/test
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cartodb/cairo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y -q   gcc-4.9 g++-4.8 g++-4.9   make libjpeg-dev
      libhiredis-dev postgresql-plpython-9.5
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y -q     ca-certificates     redis-server     python2.7-dev     python-setuptools     varnish     imagemagick     openssl     libreadline6     zlib1g     zlib1g-dev     libssl-dev     libyaml-dev     libsqlite3-dev     sqlite3     libxml2-dev     libxslt-dev     libc6-dev     ncurses-dev     pkg-config     libpq5     libpq-dev     libcurl4-gnutls-dev     libffi-dev     libgdbm-dev     gnupg     libreadline6-dev     libcairo2-dev     libjpeg8-dev     libpango1.0-dev     libgif-dev     libgmp-dev     libicu-dev   --no-install-recommends
      &&  rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://nodejs.org/download/release/v6.9.2/node-v6.9.2-linux-x64.tar.gz
      |       tar -zxf - --strip-components=1 -C /usr && npm install -g npm@3.10.9
      && npm install mkdirp@latest
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - gpg --keyserver hkp://http-keys.gnupg.net/ --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      &&     curl -L https://raw.githubusercontent.com/wayneeseguin/rvm/stable/binscripts/rvm-installer
      | bash -s stable --ruby &&     echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc
      &&     /bin/bash -l -c rvm requirements &&     echo rvm_max_time_flag=15 >>
      ~/.rvmrc &&     /bin/bash -l -c 'rvm install 2.2.3' &&     /bin/bash -l -c 'rvm
      use 2.2.3 --default' &&     /bin/bash -l -c 'gem install bundle archive-tar-minitar'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'gem install bundler --no-doc --no-ri'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y -q   yarn=0.27.5-1
    Name: run
    PrependShell: true
  - Env:
    - Key: CXX
      Value: g++-4.8
    Name: env
  - CmdLine:
    - git clone https://github.com/CartoDB/CartoDB-SQL-API.git &&       cd CartoDB-SQL-API
      && git checkout tags/$SQL_API_STABLE_VERSION && ./configure && npm install
    Name: run
    PrependShell: true
  - Env:
    - Key: NPROCS
      Value: "1"
    - Key: JOBS
      Value: "1"
    - Key: CXX
      Value: g++-4.9
    Name: env
  - CmdLine:
    - git clone https://github.com/CartoDB/Windshaft-cartodb.git &&       cd Windshaft-cartodb
      && git checkout tags/$WINDSHAFT_STABLE_VERSION && yarn && mkdir logs
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/CartoDB/cartodb-nodejs.git &&       cd cartodb-nodejs
      && npm install cartodb -g
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/splashblot/dronedb.git dronedb &&       cd dronedb
      && mkdir log && git checkout $DRONEDB_VERSION &&       cp config/grunt_development.json
      ./config/grunt_true.json &&       /bin/bash -l -c 'bundle update thin' &&       /bin/bash
      -l -c 'bundle install' &&       cd /dronedb && git submodule update --init --recursive
      && npm install &&       cd /dronedb && npm update cartodb.js
    Name: run
    PrependShell: true
  - Env:
    - Key: CDB_LATEST_VERSION
      Value: 0.20.0
    Name: env
  - Env:
    - Key: PATH
      Value: /dronedb/node_modules/grunt-cli/bin:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - /bin/bash -l -c 'cd /dronedb && bundle exec grunt'
    Name: run
    PrependShell: true
  - Env:
    - Key: CPLUS_INCLUDE_PATH
      Value: /usr/include/gdal
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: /usr/include/gdal
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/include/gdal:/dronedb/node_modules/grunt-cli/bin:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - 'easy_install --index-url=https://pypi.python.org/simple/ pip && cd /dronedb
      && pip install --no-binary :all: -r python_requirements.txt'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'gem install god'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/CartoDB-dev.js
    - /CartoDB-SQL-API/config/environments/development.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/CartoDB-staging.js
    - /CartoDB-SQL-API/config/environments/staging.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/CartoDB-prod.js
    - /CartoDB-SQL-API/config/environments/production.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/WS-dev.js.envsubst
    - /Windshaft-cartodb/config/environments/development.js.envsubst
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/WS-staging.js.envsubst
    - /Windshaft-cartodb/config/environments/staging.js.envsubst
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/WS-prod.js.envsubst
    - /Windshaft-cartodb/config/environments/production.js.envsubst
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/app_config.yml.envsubst
    - /dronedb/config/app_config.yml.envsubst
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/database.yml
    - /dronedb/config/database.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./create_db_only.sh
    - /dronedb/script/create_db_only.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup_tiles_feature_flags.sh
    - /dronedb/script/setup_tiles_feature_flags.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./create_tiles_dev_user.sh
    - /dronedb/script/create_tiles_dev_user.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup_organization.sh
    - /dronedb/script/setup_organization.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup_geocoder.sh
    - /dronedb/script/setup_geocoder.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./fill_geocoder.sh
    - /dronedb/script/fill_geocoder.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./tiles/sampledata
    - /dronedb/script/tiles_sampledata
  - CmdLine:
    - /bin/bash -l -c 'gem install newrelic_postgres_plugin'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/newrelic/postgres
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/postgres_newrelic_plugin.yml.envsubst
    - /opt/newrelic/postgres/config/newrelic_plugin.yml.envsubst
  - Name: expose
    Ports:
    - "3000"
    - "8080"
    - "8181"
  - Env:
    - Key: GDAL_DATA
      Value: /usr/share/gdal/2.1
    Name: env
  - CmdLine:
    - mkdir -p /cartodb/log && touch /cartodb/log/users_modifications
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./startup.sh
    - /opt/startup.sh
  - CmdLine:
    - /bin/bash
    - /opt/startup.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:12.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:12.04
