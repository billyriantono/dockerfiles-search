MetaArgs: null
Stages:
- BaseName: postgres:9.6
  Commands:
  - Maintainer: Juanjo Mata <juanjo.mata@gmail.com>
    Name: maintainer
  - Env:
    - Key: POSTGIS_MAJOR
      Value: "2.4"
    Name: env
  - Env:
    - Key: POSTGIS_VERSION
      Value: 2.4.4+dfsg-4.pgdg90+1
    Name: env
  - CmdLine:
    - mkdir -p /data/backups
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data/backups
  - CmdLine:
    - apt-get update       && apt-get install -y --no-install-recommends            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION            postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION            postgis            postgresql-server-dev-$PG_MAJOR            postgresql-plpython-$PG_MAJOR            postgresql-$PG_MAJOR-plproxy            ca-certificates            python-pip            python-dev            python-setuptools            libgdal-dev            build-essential            automake            git-core            git            curl       &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade virtualenv
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - mkdir ~/.gnupg && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3                                                      7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      &&     curl -L https://raw.githubusercontent.com/wayneeseguin/rvm/stable/binscripts/rvm-installer
      | bash -s stable --ruby &&     echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc
      &&     /bin/bash -l -c rvm requirements &&     echo rvm_max_time_flag=15 >>
      ~/.rvmrc &&     /bin/bash -l -c 'rvm install 2.2.3' &&     /bin/bash -l -c 'rvm
      use 2.2.3 --default' &&     ln -s /usr/local/rvm/rubies/ruby-2.2.3/bin/ruby
      /usr/bin &&     rm -rf /usr/local/rvm/src
    Name: run
    PrependShell: true
  - Env:
    - Key: CDB_STABLE_VERSION
      Value: 0.20.0
    Name: env
  - CmdLine:
    - git clone https://github.com/CartoDB/cartodb-postgresql &&       cd cartodb-postgresql
      &&       git checkout $CDB_STABLE_VERSION  &&       PGUSER=postgres make install
    Name: run
    PrependShell: true
  - Env:
    - Key: CRANKSHAFT_STABLE_VERSION
      Value: 0.6.1
    Name: env
  - CmdLine:
    - git clone https://github.com/CartoDB/crankshaft &&       cd crankshaft &&       git
      checkout $CRANKSHAFT_LATEST_VERSION &&       PGUSER=postgres make install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/CartoDB/data-services.git &&   cd /data-services/geocoder/extension
      && PGUSER=postgres make all install && cd / &&   git clone https://github.com/CartoDB/dataservices-api.git
      &&   cd /dataservices-api/server/extension &&   PGUSER=postgres make install
      && cd ../lib/python/cartodb_services &&   pip install -r requirements.txt &&
      pip install . &&   cd ../../../../client && PGUSER=postgres make install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/CartoDB/observatory-extension.git &&   cd /observatory-extension
      && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update && apt-get -qq -y install bzip2     && curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      -o /tmp/miniconda.sh     && bash /tmp/miniconda.sh -bfp /usr/local     && rm
      -rf /tmp/miniconda.sh     && conda install -y python=3     && conda update conda     &&
      apt-get -qq -y remove bzip2     && apt-get -qq -y autoremove     && apt-get
      autoclean     && rm -rf /var/lib/apt/lists/* /var/log/dpkg.log     && conda
      clean --all --yes
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -y -n jupyter     && /bin/bash -c "source activate jupyter"     &&
      pip install numpy==1.15.0     && pip install rasterio==1.0.5     && pip install
      opencv-python     && pip install fiona     && pip install matplotlib xlrd     &&
      pip install jupyter notebook     && pip install cartoframes
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /docker-entrypoint-init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./01-init-crontab.sh
    - /docker-entrypoint-init.d/01_crontab.sh
  - CmdLine:
    - mkdir -p /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./01-initdb-postgis.sh
    - /docker-entrypoint-initdb.d/01_postgis.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./02-initdb-cartodb_pgsql.sh
    - /docker-entrypoint-initdb.d/02_cartodb_pgsql.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./03-initdb-cartodb_crankshaft.sh
    - /docker-entrypoint-initdb.d/03_cartodb_crankshaft.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./04-initdb-metabase.sh
    - /docker-entrypoint-initdb.d/04_metabase.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./05-initdb-webodm.sh
    - /docker-entrypoint-initdb.d/05_webodm.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./07-initdb-cachet.sh
    - /docker-entrypoint-initdb.d/07_cachet.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./08-initdb-ag_tracker.sh
    - /docker-entrypoint-initdb.d/08-ag_tracker.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./09-initdb-openduty.sh
    - /docker-entrypoint-initdb.d/09-openduty.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint-cron.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint-cron.sh / # backwards compat'
    Name: run
    PrependShell: true
  From:
    Image: postgres:9.6
  Name: ""
  Platform: ""
  SourceCode: FROM postgres:9.6
