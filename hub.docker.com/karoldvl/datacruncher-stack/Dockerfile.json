{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/datascience-notebook:28515ed64e5e",
      "SourceCode": "FROM jupyter/datascience-notebook:28515ed64e5e",
      "Platform": "",
      "From": {
        "Image": "jupyter/datascience-notebook:28515ed64e5e"
      },
      "Commands": [
        {
          "Maintainer": "Karol Piczak \u003ckarol@dvl.pl\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DATACRUNCHER_VERSION",
              "Value": "2016-10-11"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   build-essential   g++   git   less   libav-tools   libffi-dev   libgeos++   libopenblas-dev   libopencv-dev   libsamplerate0   libsamplerate0-dev   libsndfile-dev   libsndfile1   libssl-dev   module-init-tools   portaudio19-dev   python-opencv   sox   subversion   tmux   unzip   wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026   wget --no-verbose https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run \u0026\u0026   mkdir nvidia_installers \u0026\u0026   chmod +x cuda_8.0.44_linux-run \u0026\u0026   ./cuda_8.0.44_linux-run --extract=`pwd`/nvidia_installers \u0026\u0026   cd nvidia_installers \u0026\u0026   ./NVIDIA-Linux-x86_64-367.48.run -s -N --no-kernel-module \u0026\u0026   ./cuda-linux64-rel-8.0.44-21122537.run -noprompt \u0026\u0026   rm -f ../cuda_8.0.44_linux-run \u0026\u0026   rm -f *.run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/cuda-8.0/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"[samplerate]\\nlibrary_dirs=/usr/lib/x86_64-linux-gnu/\\ninclude_dirs=/usr/include/\" \u003e\u003e ~/.numpy-site.cfg \u0026\u0026   printf \"\\n[sndfile]\\nlibrary_dirs=/usr/lib/x86_64-linux-gnu/\\ninclude_dirs=/usr/include/\" \u003e\u003e ~/.numpy-site.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda update --quiet   bokeh   h5py   scikit-image   scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet libgfortran"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/share/fonts \u0026\u0026   wget --no-verbose \"https://github.com/google/fonts/raw/master/ofl/ptsans/PT_Sans-Web-Regular.ttf\" \u0026\u0026   fc-cache -fv \u0026\u0026   rm -f /root/.cache/matplotlib/fontList*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jovyan"
        },
        {
          "CmdLine": [
            "pip install --upgrade -I setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install   boto   coverage==3.7.1   descartes   GitPython   googlemaps   graphviz   ipdb   https://github.com/ipython-contrib/IPython-notebook-extensions/archive/master.zip   ipywidgets   joblib   librosa   line_profiler   mem_top   memory_profiler   msgpack-python   nose   objgraph   openpyxl   pep8   prettyplotlib   psutil   PyAudio==0.2.8   pycallgraph   https://github.com/karoldvl/fork-pydub/archive/quick-fix.zip   pympler   pysal   pytest   pytest-cov   pytest-pep8   pytest-xdist   python-coveralls   PyYAML   quandl   scikit-image   scikits.audiolab==0.11.0   scikits.bootstrap   scikits.samplerate==0.3.3   git+git://github.com/mwaskom/seaborn.git   git+git://github.com/TUT-ARG/sed_eval.git   git+git://github.com/TUT-ARG/sed_vis.git   tqdm   wavefile==1.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "THEANO_FLAGS",
              "Value": "floatX=float32,device=gpu0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /home/jovyan \u0026\u0026   git clone git://github.com/Theano/Theano.git \u0026\u0026   cd /home/jovyan/Theano \u0026\u0026   /opt/conda/bin/python setup.py develop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/jovyan \u0026\u0026   git clone git://github.com/lisa-lab/pylearn2.git \u0026\u0026   cd /home/jovyan/pylearn2 \u0026\u0026   /opt/conda/bin/python setup.py develop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYLEARN2_DATA_PATH",
              "Value": "/opt/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0-cp35-cp35m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install git+git://github.com/fchollet/keras.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/jovyan/.local/share/jupyter \u0026\u0026   ln -s /key.pem /home/jovyan/.local/share/jupyter/notebook.pem \u0026\u0026   chown -R jovyan:users /home/jovyan/.local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/conda/bin/ipython -c 'import matplotlib.pyplot'"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}