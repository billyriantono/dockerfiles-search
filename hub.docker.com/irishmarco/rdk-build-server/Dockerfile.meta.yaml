MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TZ
      Value: '''America/New_York'''
    Name: env
  - CmdLine:
    - apt-get update                                                                ;    echo
      'APT::Get::Assume-Yes "true";'  > /etc/apt/apt.conf.d/90forceyes         ;    echo
      $TZ > /etc/timezone                                                      ;    apt-get
      install --no-install-recommends                                                            make
      gcc g++ diffstat texinfo chrpath sudo unzip cpio socat                        gcc-multilib
      git gawk build-essential autoconf libtool curl                        libncurses-dev
      gettext gperf lib32z1 libc6-i386 g++-multilib                       python-git
      wget locales python3-pip python3-pexpect tzdata                         software-properties-common
      bash-completion openssh-server vim                      shellinabox                                                   ;    apt-get
      upgrade                                                               ;    add-apt-repository
      ppa:git-core/ppa                                           ;    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | sudo bash ;    sudo apt-get install git-lfs                                                  ;    git
      lfs install                                                               ;    apt-get
      clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen "en_US.UTF-8";      update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8  LANGUAGE=en_US.UTF-8;      dpkg-reconfigure
      --frontend=noninteractive locales
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > /bin/repo
      ;    chmod a+x /bin/repo                                                              ;    mkdir
      -p /export ; chmod 777 /export ; chmod +t /export
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /bin && rm sh && ln -s bash sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/sshd                                                                             ;    echo
      'root:arris21' | chpasswd                                                                     ;    sed
      -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config             ;    sed
      's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - Key: UNAME
    Name: arg
    Value: user
  - Key: UID
    Name: arg
    Value: "1001"
  - Key: GID
    Name: arg
    Value: "1001"
  - CmdLine:
    - 'groupadd -g $GID $UNAME                                    ;    useradd -m
      -u $UID -g $GID -s /bin/bash $UNAME             ;    echo "$UNAME:$UNAME" |
      chpasswd                            ;    echo "$UNAME ALL=(ALL) NOPASSWD: ALL"
      | tee -a /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /export
  - Name: user
    User: $UNAME
  - Env:
    - Key: USER
      Value: $UNAME
    Name: env
  - CmdLine:
    - git config --global user.email "user@example.com" ;    git config --global user.name
      "User Name"         ;    echo "machine url.com login user password password"
      > ~/.netrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/gitconfig
    - /home/$USER/.gitconfig
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/compile.sh
    - /bin/compile.sh
  - Env:
    - Key: WS_URL
      Value: url
    Name: env
  - Env:
    - Key: WS_MANIFEST
      Value: manifest
    Name: env
  - Env:
    - Key: WS_BRANCH
      Value: branch
    Name: env
  - Env:
    - Key: WS_MACHINE
      Value: machine
    Name: env
  - Env:
    - Key: WS_SETENV
      Value: setenv
    Name: env
  - Env:
    - Key: WS_TARGET
      Value: target
    Name: env
  - Name: expose
    Ports:
    - "22"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/start_container.sh
    - /start_container.sh
  - CmdLine:
    - /start_container.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
