MetaArgs: null
Stages:
- BaseName: elixir:1.8.1-slim
  Commands:
  - Env:
    - Key: SHELL
      Value: /bin/sh
    Name: env
  - Env:
    - Key: application_directory
      Value: /usr/src/app
    Name: env
  - Env:
    - Key: ENABLE_XVBF
      Value: "true"
    Name: env
  - CmdLine:
    - mkdir -p $application_directory
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $application_directory
  - CmdLine:
    - apt-get update --fix-missing && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y gnupg2 g++ wget     && rm -rf /var/lib/apt/lists/*     &&
      rm -rf /src/*.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add -     && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/
      stable main" >> /etc/apt/sources.list.d/google.list'     && apt-get update     &&
      apt-get install -y google-chrome-stable --no-install-recommends     && rm -rf
      /var/lib/apt/lists/*     && rm -rf /src/*.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --system chrome &&     useradd --system --create-home --gid chrome
      --groups audio,video chrome &&     mkdir --parents /home/chrome/reports &&     chown
      --recursive chrome:chrome /home/chrome &&     chown --recursive chrome:chrome
      $application_directory
    Name: run
    PrependShell: true
  - Name: user
    User: chrome
  - Key: ERLANG_COOKIE
    Name: arg
    Value: null
  - Env:
    - Key: ERLANG_COOKIE
      Value: $ERLANG_COOKIE
    Name: env
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - CmdLine:
    - mix do local.hex --force, local.rebar --force
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/
    - $application_directory/config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mix.exs
    - mix.lock
    - $application_directory/
  - CmdLine:
    - mix deps.get --only $MIX_ENV
    Name: run
    PrependShell: true
  - CmdLine:
    - mix deps.compile
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $application_directory/
  - CmdLine:
    - mix compile --no-deps-check
    Name: run
    PrependShell: true
  - CmdLine:
    - mix do deps.loadpaths --no-deps-check
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4000"
  - Env:
    - Key: PORT
      Value: "4000"
    Name: env
  - CmdLine:
    - mix
    - run
    - --no-halt
    Name: cmd
    PrependShell: false
  From:
    Image: elixir:1.8.1-slim
  Name: ""
  Platform: ""
  SourceCode: FROM elixir:1.8.1-slim
