{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "America/Lima"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libpng-dev     libjpeg-dev     libpq-dev     libxml2-dev     libbz2-dev      libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     vim git sudo zip cron python python3 python3-venv python3-pip jq unzip cron wget mariadb-client \t\u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-configure opcache --enable-opcache     \u0026\u0026 docker-php-ext-install gd mbstring pdo_mysql pdo_pgsql zip mysqli opcache bcmath soap bz2  intl xml     \u0026\u0026 pecl install mcrypt-1.0.1     \u0026\u0026 pecl install apcu      \u0026\u0026 pecl install redis-3.1.1     \u0026\u0026 docker-php-ext-enable redis     \u0026\u0026 docker-php-ext-enable mysqli     \u0026\u0026 docker-php-ext-enable apcu     \u0026\u0026 docker-php-ext-enable mcrypt     \u0026\u0026 a2enmod rewrite     \u0026\u0026 a2enmod substitute     \u0026\u0026 chmod 0777 -Rf /var/www     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/*.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y git ruby-full \u0026\u0026     gem install --no-rdoc --no-ri sass -v 3.4.22 \u0026\u0026     gem install --no-rdoc --no-ri compass \u0026\u0026     gem install susy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin/ --filename=composer     \u0026\u0026 rm /var/www/html/composer-setup.php     \u0026\u0026 curl https://drupalconsole.com/installer -L -o drupal.phar     \u0026\u0026 mv drupal.phar /usr/local/bin/drupal     \u0026\u0026 chmod +x /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/"
        }
      ]
    }
  ]
}