MetaArgs: null
Stages:
- BaseName: centos:7.6.1810
  Commands:
  - Labels:
    - Key: description
      Value: '"python development environment for CERN ROOT framework"'
    Name: label
  - Key: ROOT_TAR
    Name: arg
    Value: '"root_v6.16.00.Linux-centos7-x86_64-gcc4.8.tar.gz"'
  - Key: ANACONDA2_INSTALLER
    Name: arg
    Value: '"Anaconda2-2018.12-Linux-x86_64.sh"'
  - Key: ROOT_PASSWORD
    Name: arg
    Value: '"pass"'
  - Key: GDB_VERSION
    Name: arg
    Value: '"8.1"'
  - CmdLine:
    - yum -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o anaconda_installer.sh https://repo.anaconda.com/archive/${ANACONDA2_INSTALLER}
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install bzip2
    Name: run
    PrependShell: true
  - CmdLine:
    - bash anaconda_installer.sh -b && rm anaconda_installer.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/anaconda2/bin/:${PATH}"'
    Name: env
  - CmdLine:
    - pip install metakernel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install git cmake gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel
      libXext-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install gcc-gfortran openssl-devel pcre-devel mesa-libGL-devel mesa-libGLU-devel
      glew-devel ftgl-devel mysql-devel fftw-devel cfitsio-devel graphviz-devel avahi-compat-libdns_sd-devel
      libldap-dev python-devel libxml2-devel gsl-static
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install giflib
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/root.tar.gz https://root.cern/download/${ROOT_TAR}
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xzf /tmp/root.tar.gz -C /opt && rm -rf /tmp/root.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'source /opt/root/bin/thisroot.sh' >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: ROOTSYS
      Value: '"/opt/root"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${ROOTSYS}/bin:${PATH}"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"${ROOTSYS}/lib:${LD_LIBRARY_PATH}"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"${ROOTSYS}/lib:${PYTHONPATH}"'
    Name: env
  - CmdLine:
    - yum install -y sudo openssh-server openssh-clients
    Name: run
    PrependShell: true
  - CmdLine:
    - echo root:${ROOT_PASSWORD} | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y xauth
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "X11Forwarding yes" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "X11UseLocalhost no" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y epel-release
    Name: run
    PrependShell: true
  - CmdLine:
    - yum groupinstall -y "Development Tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y cmake3
    Name: run
    PrependShell: true
  - CmdLine:
    - yum remove -y cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/cmake3 /usr/bin/cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - yum remove -y gdb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o gdb.tar.xz http://ftp.gnu.org/gnu/gdb/gdb-${GDB_VERSION}.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xf gdb.tar.xz -C /opt && rm -f gdb.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - ./opt/gdb-${GDB_VERSION}/configure --with-python
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y texi2html texinfo
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "source /opt/root/bin/thisroot.sh\njupyter notebook --port=8888 --no-browser
      --allow-root --ip=0.0.0.0 --NotebookApp.token='' --NotebookApp.password=''"
      > ~/bin/startup_script.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x ~/bin/startup_script.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/notebooks
  - Name: expose
    Ports:
    - "22"
    - "8888"
  - CmdLine:
    - . ~/bin/startup_script.sh
    Name: cmd
    PrependShell: true
  From:
    Image: centos:7.6.1810
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7.6.1810
