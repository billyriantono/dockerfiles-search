MetaArgs: null
Stages:
- As: build-env
  BaseName: golang:alpine
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64
    - /usr/bin/dep
  - CmdLine:
    - chmod +x /usr/bin/dep
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update; apk add git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/src/github.com/platten/loadWS
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.toml
    - Gopkg.lock
    - ./
  - CmdLine:
    - dep ensure --vendor-only
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - loadws.go
    - ./
  - CmdLine:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o /loadws .
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: build-env
  Platform: ""
  SourceCode: FROM golang:alpine AS build-env
- BaseName: alpine
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build-env
    Name: copy
    SourcesAndDest:
    - /loadws
    - /app/
  - CmdLine:
    - ./loadws
    Name: entrypoint
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
