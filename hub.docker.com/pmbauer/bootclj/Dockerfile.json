{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "Paul Bauer \u003cpaul@bauer.codes\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "72"
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "15"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/default-jvm"
            },
            {
              "Key": "BOOT_AS_ROOT",
              "Value": "yes"
            },
            {
              "Key": "BOOT_EMIT_TARGET",
              "Value": "no"
            },
            {
              "Key": "BOOT_VERSION",
              "Value": "2.5.5"
            },
            {
              "Key": "BOOT_JVM_OPTIONS",
              "Value": "'-Xmx2g -Djava.security.egd=file:/dev/urandom'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update wget curl bash ca-certificates \u0026\u0026     cd /tmp \u0026\u0026     wget \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk\"          \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-bin-2.21-r2.apk\" \u0026\u0026     apk add --allow-untrusted glibc-2.21-r2.apk glibc-bin-2.21-r2.apk \u0026\u0026     /usr/glibc/usr/bin/ldconfig /lib /usr/glibc/usr/lib \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf \u0026\u0026     wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"         \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026     tar xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026     mkdir -p /usr/lib/jvm \u0026\u0026     mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \u0026\u0026     ln -s \"java-${JAVA_VERSION}-oracle\" $JAVA_HOME \u0026\u0026     ln -s $JAVA_HOME/bin/java /usr/bin/java \u0026\u0026     ln -s $JAVA_HOME/bin/javac /usr/bin/javac \u0026\u0026     rm -rf $JAVA_HOME/*src.zip \u0026\u0026     rm -rf $JAVA_HOME/lib/missioncontrol            $JAVA_HOME/lib/visualvm            $JAVA_HOME/lib/*javafx*            $JAVA_HOME/jre/lib/plugin.jar            $JAVA_HOME/jre/lib/ext/jfxrt.jar            $JAVA_HOME/jre/bin/javaws            $JAVA_HOME/jre/lib/javaws.jar            $JAVA_HOME/jre/lib/desktop            $JAVA_HOME/jre/plugin            $JAVA_HOME/jre/lib/deploy*            $JAVA_HOME/jre/lib/*javafx*            $JAVA_HOME/jre/lib/*jfx*            $JAVA_HOME/jre/lib/amd64/libdecora_sse.so            $JAVA_HOME/jre/lib/amd64/libprism_*.so            $JAVA_HOME/jre/lib/amd64/libfxplugins.so            $JAVA_HOME/jre/lib/amd64/libglass.so            $JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so            $JAVA_HOME/jre/lib/amd64/libjavafx*.so            $JAVA_HOME/jre/lib/amd64/libjfx*.so \u0026\u0026     rm -rf $JAVA_HOME/jre/bin/jjs            $JAVA_HOME/jre/bin/keytool            $JAVA_HOME/jre/bin/orbd            $JAVA_HOME/jre/bin/pack200            $JAVA_HOME/jre/bin/policytool            $JAVA_HOME/jre/bin/rmid            $JAVA_HOME/jre/bin/rmiregistry            $JAVA_HOME/jre/bin/servertool            $JAVA_HOME/jre/bin/tnameserv            $JAVA_HOME/jre/bin/unpack200            $JAVA_HOME/jre/lib/ext/nashorn.jar            $JAVA_HOME/jre/lib/jfr.jar            $JAVA_HOME/jre/lib/jfr            $JAVA_HOME/jre/lib/oblique-fonts \u0026\u0026     curl -fsSLo /usr/bin/boot https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh \u0026\u0026     chmod 755 /usr/bin/boot \u0026\u0026     apk del wget curl ca-certificates \u0026\u0026     /usr/bin/boot web -s doesnt/exist repl -e '(System/exit 0)' \u0026\u0026     rm -rf /tmp/* /var/cache/apk/* \u0026\u0026     mkdir /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/usr/bin/boot"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}