{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:1.10.0",
      "SourceCode": "FROM tensorflow/tensorflow:1.10.0",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:1.10.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"xusong \u003csong.xu01@bitmain.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026         echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list  \u0026\u0026         curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -  \u0026\u0026         apt-get update \u0026\u0026 apt-get install -y --no-install-recommends google-cloud-sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends        build-essential vim git wget ffmpeg sox \u0026\u0026         apt-get clean \u0026\u0026         rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip \u0026\u0026 pip install -U --no-cache-dir         tensor2tensor==1.6.6         jieba six pydub jupyterlab         colab jupyter_http_over_ws google-cloud-storage portpicker \u0026\u0026         jupyter serverextension enable --py jupyter_http_over_ws"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/googlecolab/colabtools.git \u0026\u0026         cd colabtools \u0026\u0026 python setup.py sdist \u0026\u0026         python -m pip install dist/google-colab-0.0.1a1.tar.gz  \u0026\u0026         jupyter nbextension install --py google.colab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/notebooks/tensor2tensor \u0026\u0026         T2T_PATH=https://github.com/tensorflow/tensor2tensor/raw/v1.6.6/tensor2tensor/notebooks \u0026\u0026         cd /root/notebooks/tensor2tensor \u0026\u0026         wget ${T2T_PATH}/asr_transformer.ipynb \u0026\u0026         wget ${T2T_PATH}/hello_t2t-rl.ipynb \u0026\u0026         wget ${T2T_PATH}/hello_t2t.ipynb \u0026\u0026         cd /root/notebooks/ \u0026\u0026         mkdir -p /root/notebooks/tensorflow-ayme \u0026\u0026         git clone https://github.com/aymericdamien/TensorFlow-Examples.git \u0026\u0026         mv TensorFlow-Examples/notebooks/*  /root/notebooks/tensorflow-ayme/ \u0026\u0026         mv TensorFlow-Examples/README.md /root/notebooks/tensorflow-ayme/ \u0026\u0026         rm -rf TensorFlow-Examples \u0026\u0026         cd /root/notebooks/ \u0026\u0026         mkdir -p /root/notebooks/tensorflow-model \u0026\u0026         git clone https://github.com/tensorflow/models.git \u0026\u0026         mv models/samples/core/*  /root/notebooks/tensorflow-model/ \u0026\u0026         rm -rf models \u0026\u0026         UDA_PATH=https://github.com/tensorflow/tensorflow/raw/master/tensorflow/examples/udacity \u0026\u0026         mkdir -p /root/notebooks/tensorflow-udacity \u0026\u0026         cd /root/notebooks/tensorflow-udacity \u0026\u0026         wget ${UDA_PATH}/1_notmnist.ipynb \u0026\u0026         wget ${UDA_PATH}/2_fullyconnected.ipynb \u0026\u0026         wget ${UDA_PATH}/3_regularization.ipynb \u0026\u0026         wget ${UDA_PATH}/4_convolutions.ipynb \u0026\u0026         wget ${UDA_PATH}/5_word2vec.ipynb\t\u0026\u0026         wget ${UDA_PATH}/6_lstm.ipynb \u0026\u0026         wget ${UDA_PATH}/README.md \u0026\u0026         EAGER_PATH=https://github.com/tensorflow/tensorflow/raw/master/tensorflow/contrib/eager/python/examples/notebooks \u0026\u0026         mkdir -p /root/notebooks/tensorflow-eager \u0026\u0026         cd /root/notebooks/tensorflow-eager \u0026\u0026         wget ${EAGER_PATH}/automatic_differentiation.ipynb \u0026\u0026         wget ${EAGER_PATH}/custom_layers.ipynb  \u0026\u0026         wget ${EAGER_PATH}/custom_training.ipynb \u0026\u0026         wget ${EAGER_PATH}/eager_basics.ipynb \u0026\u0026         cd /root/notebooks/ \u0026\u0026         mkdir -p /root/notebooks/tensorflow-lucid \u0026\u0026         git clone https://github.com/tensorflow/lucid.git \u0026\u0026         mv lucid/notebooks/*  /root/notebooks/tensorflow-lucid/ \u0026\u0026         mv lucid/README.md /root/notebooks/tensorflow-lucid/ \u0026\u0026         rm -rf lucid \u0026\u0026         mkdir -p /root/notebooks/tf-learn \u0026\u0026         cd /root/notebooks/tf-learn \u0026\u0026         wget https://github.com/tflearn/tflearn/raw/master/examples/notebooks/spiral.ipynb \u0026\u0026         mkdir -p /root/notebooks/pytorch \u0026\u0026         mkdir -p /root/notebooks/keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/root/\""
        },
        {
          "CmdLine": [
            "jupyter",
            "lab",
            "--allow-root",
            "--NotebookApp.allow_origin='https://colab.research.google.com'"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}