MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - "set -ex; \tpostgresHome=\"$(getent passwd postgres)\"; \tpostgresHome=\"$(echo
      \"$postgresHome\" | cut -d: -f6)\"; \t[ \"$postgresHome\" = '/var/lib/postgresql'
      ]; \tmkdir -p \"$postgresHome\"; \tchown -R postgres:postgres \"$postgresHome\""
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"-L/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server"'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"-I/usr/lib/jvm/java-1.8-openjdk/include"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/jvm/java-1.8-openjdk/bin/:$PATH
    Name: env
  - CmdLine:
    - "set -ex \t\t&& apk add --no-cache --virtual .fetch-deps \t\tca-certificates
      \t\topenssl \t\ttar \t\topenjdk8 \t\tzlib \t\tgit  \t\t&& apk add --no-cache
      --virtual .build-deps \t\topenssl-dev \t\tbuild-base \t\tlinux-headers \t\tperl
      \t\tperl-utils \t\tperl-ipc-run \t\treadline-dev \t\tzlib-dev    \t\tlibxml2
      libxml2-dev    \t\tlibxslt libxslt-dev    \t\tflex    \t\tbison      && git
      clone https://github.com/bitnine-oss/agensgraph.git    && cd agensgraph       &&
      ./configure         --prefix=$(pwd)    \t\t--enable-integer-datetimes \t\t--enable-thread-safety
      \t\t--enable-tap-tests \t\t--disable-rpath \t\t--with-gnu-ld \t\t--with-pgport=5432
      \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include,/usr/lib/jvm/java-1.8-openjdk/include
      \t\t--with-libraries=/usr/local/lib,/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server
      \t\t--with-openssl \t\t--with-libxml \t\t--with-libxslt \t\t\t&& make install
      \t&& make install-world     && make -C contrib install \t\t&& runDeps=\"$( \t\tscanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n'
      \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0
      { next } { print \"so:\" $1 }' \t\t)\" \t&& apk add --no-cache --virtual .postgresql-rundeps
      \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t&& apk del .fetch-deps .build-deps
      \t&& cd / \t&& rm -rf \t\t/agensgraph \t\t/usr/local/share/doc \t\t/usr/local/share/man
      \t&& find /usr/local -name '*.a' -delete"
    Name: run
    PrependShell: true
  - Env:
    - Key: AGDATA
      Value: /var/lib/agensgraph/data
    Name: env
  - CmdLine:
    - mkdir -p "$AGDATA" && chown -R postgres:postgres "$AGDATA" && chmod 777 "$AGDATA"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/agensgraph/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - agens-graph
    - /usr/local/bin/agens-graph
  - CmdLine:
    - 'chmod +x /usr/local/bin/entrypoint.sh &&     chmod +x /usr/local/bin/agens-graph
      &&     ln -s /usr/local/bin/entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - agens-graph
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
