MetaArgs: null
Stages:
- BaseName: jjanzic/docker-python3-opencv
  Commands: null
  From:
    Image: jjanzic/docker-python3-opencv
  Name: ""
  Platform: ""
  SourceCode: FROM jjanzic/docker-python3-opencv
- BaseName: tensorflow/tensorflow:1.15.0rc1-py3-jupyter
  Commands:
  - CmdLine:
    - mkdir /home/models
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Pillow opencv-python contextlib2 Cython
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pycocotools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git libsm6 libxext6 libxrender-dev curl unzip x264
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - models
    - /home/models
  - CmdLine:
    - curl -L https://github.com/protocolbuffers/protobuf/releases/download/v3.9.1/protoc-3.9.1-linux-x86_64.zip
      > protoc.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/protoc
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip protoc.zip -d /opt/protoc
    Name: run
    PrependShell: true
  - CmdLine:
    - rm protoc.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/protoc/bin:${PATH}"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"${PYTHONPATH}:/home/models"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"${PYTHONPATH}:/home/models/research"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"${PYTHONPATH}:/home/models/research/slim"'
    Name: env
  - CmdLine:
    - (cd /home/models/research && protoc --python_out=. object_detection/protos/*)
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "6006"
  From:
    Image: tensorflow/tensorflow:1.15.0rc1-py3-jupyter
  Name: ""
  Platform: ""
  SourceCode: FROM tensorflow/tensorflow:1.15.0rc1-py3-jupyter
