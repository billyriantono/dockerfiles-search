{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tutum/ubuntu:trusty",
      "SourceCode": "FROM tutum/ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "tutum/ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Michael Sevilla \u003cmikesevilla3@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"===\u003e Install the basics...\" \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     apt-get install -yq --force-yes       apache2       fontconfig       libcairo2       libcairo2-dev       memcached       python-cairo-dev       python-dev       python-django       python-django-tagging       python-ldap       python-memcache       python-pysqlite2       python-pip       python-setuptools       rabbitmq-server       ssh       sqlite3 \u0026\u0026     pip install       carbon       django-tagging       graphite-web       python-memcached       pytz       txAMQP       twisted       whisper \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Setup carbon...\" \u0026\u0026     cd /opt/graphite/conf \u0026\u0026     cp carbon.conf.example carbon.conf \u0026\u0026     cp storage-schemas.conf.example storage-schemas.conf \u0026\u0026     echo \"[stats]\" \u003e\u003e storage-schemas.conf \u0026\u0026     echo \"Pattern = ^stats.*\" \u003e\u003e storage-schemas.conf \u0026\u0026     echo \"Retentions = 10s:6h,1min:7d,10min:5y\" \u003e\u003e storage-schemas.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Setup graphite...\" \u0026\u0026     cd /opt/graphite/examples \u0026\u0026     cp example-graphite-vhost.conf /etc/apache2/sites-available/default \u0026\u0026     cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi \u0026\u0026     mkdir /etc/httpd \u0026\u0026     mkdir /etc/httpd/wsgi \u0026\u0026     sed -i \"s/WSGISocketPrefix run\\/wsgi/WSGISocketPrefix \\/etc\\/httpd\\/wsgi/g\" /etc/apache2/sites-available/default \u0026\u0026     /etc/init.d/apache2 restart \u0026\u0026     /etc/init.d/apache2 reload"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Setup inital database...\" \u0026\u0026     cd /opt/graphite/webapp/graphite/ \u0026\u0026     python manage.py syncdb --noinput \u0026\u0026     chown -R www-data:www-data /opt/graphite/storage/ \u0026\u0026     /etc/init.d/apache2 restart \u0026\u0026     cd /opt/graphite/webapp/graphite \u0026\u0026     cp local_settings.py.example local_settings.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 750 /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}