{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential postgresql git python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-virtualenv python3-pip graphviz-dev libpq-dev # faster builds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "1080"
          ]
        },
        {
          "CmdLine": [
            "pip install maildump"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026     createuser asylum \u0026\u0026     createdb -E utf-8 -T template0 -O asylum asylum \u0026\u0026     psql -U postgres -d postgres -c \"alter user asylum with password 'asylum';\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos '' asylum \u0026\u0026     adduser asylum sudo \u0026\u0026     echo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/asylum/ \u0026\u0026 chown asylum:asylum /opt/asylum/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/asylum/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "project/requirements.apt",
            "/opt/asylum/"
          ]
        },
        {
          "CmdLine": [
            "awk '/^\\s*[^#]/' requirements.apt | xargs -r -- sudo apt-get install --no-install-recommends -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "virtualenv -p `which python3.4` ../asylum-venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "project/requirements",
            "/opt/asylum/requirements/"
          ]
        },
        {
          "CmdLine": [
            ". ../asylum-venv/bin/activate \u0026\u0026 pip install -r requirements/local.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "project",
            "/opt/asylum/"
          ]
        },
        {
          "CmdLine": [
            "echo \"DATABASE_URL=postgres://asylum:asylum@localhost/asylum\" \u003e .env"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R asylum:asylum /opt/asylum/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "asylum"
        },
        {
          "CmdLine": [
            "npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "asylum"
        },
        {
          "CmdLine": [
            "sudo -u postgres service postgresql start;     . ../asylum-venv/bin/activate \u0026\u0026     ./manage.py migrate \u0026\u0026     echo \"from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'nospamplz@hacklab.fi', 'admin')\" | ./manage.py shell"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/asylum/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}