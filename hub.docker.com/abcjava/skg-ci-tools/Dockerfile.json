{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get install -y tzdata \u0026\u0026 ln -fs /usr/share/zoneinfo/Europe/Amsterdam /etc/localtime \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata \u0026\u0026     apt-get -y install curl netcat software-properties-common \u0026\u0026     apt-add-repository ppa:git-core/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y libunwind8 libcurl4 git gosu \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     echo \"export TERM=xterm\" \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "-Xmx5g"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y openjdk-8-jdk \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y maven \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbt/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "1.2.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "2.12.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_HOME",
              "Value": "/usr/local/sbt"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -o sbt-$SBT_VERSION.deb http://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \u0026\u0026     dpkg -i sbt-$SBT_VERSION.deb \u0026\u0026     rm sbt-$SBT_VERSION.deb \u0026\u0026     apt-get update \u0026\u0026     apt-get install sbt \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.ivy2"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.sbt"
          ]
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y nodejs \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y xvfb google-chrome-stable \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y x11vnc \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5900"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget https://get.docker.com/builds/Linux/x86_64/docker-1.13.0.tgz \u0026\u0026     tar -zxvf docker-1.13.0.tgz \u0026\u0026 \trm docker-1.13.0.tgz \u0026\u0026     ls /opt/docker \u0026\u0026     mv /opt/docker/docker /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://jcenter.bintray.com/io/github/swagger2markup/swagger2markup-cli/1.3.1/swagger2markup-cli-1.3.1.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y golang \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \tmkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/prasmussen/gdrive \u0026\u0026     go install github.com/prasmussen/gdrive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"    StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}