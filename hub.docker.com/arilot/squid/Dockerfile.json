{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SQUID_VER",
              "Value": "3.5.28"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SQUID_SIG_KEY",
              "Value": "EA31CC5E9488E5168D2DCC5EB268E706FF5CF463"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAXTCPLISTENPORTS",
              "Value": "100000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tapk add --no-cache  \t\tgcc \t\tg++ \t\tlibc-dev \t\tcurl \t\tgnupg \t\tlibressl-dev \t\tperl-dev \t\tautoconf \t\tautomake \t\tmake \t\tpkgconfig \t\theimdal-dev \t\tlibtool \t\tlibcap-dev \t\tlinux-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tmkdir -p /tmp/build \u0026\u0026 \tcd /tmp/build \u0026\u0026     curl -SsL http://www.squid-cache.org/Versions/v${SQUID_VER%.*.*}/${SQUID_VER%.*}/squid-${SQUID_VER}.tar.gz -o squid-${SQUID_VER}.tar.gz \u0026\u0026 \tcurl -SsL http://www.squid-cache.org/Versions/v${SQUID_VER%.*.*}/${SQUID_VER%.*}/squid-${SQUID_VER}.tar.gz.asc -o squid-${SQUID_VER}.tar.gz.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tcd /tmp/build \u0026\u0026 \texport GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026 \t( \t gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ${SQUID_SIG_KEY} ||      gpg --keyserver hkp://ipv4.pool.sks-keyservers.net   --recv-keys ${SQUID_SIG_KEY} ||       gpg --keyserver hkp://pgp.mit.edu:80                 --recv-keys ${SQUID_SIG_KEY} \t) \u0026\u0026 \tgpg --batch --verify squid-${SQUID_VER}.tar.gz.asc squid-${SQUID_VER}.tar.gz \u0026\u0026 \trm -rf \"$GNUPGHOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tcd /tmp/build \u0026\u0026 \ttar --strip 1 -xzf squid-${SQUID_VER}.tar.gz \u0026\u0026 \t\tCFLAGS=\"-g0 -O2\" \tCXXFLAGS=\"-g0 -O2 -DMAXTCPLISTENPORTS=${MAXTCPLISTENPORTS}\" \tLDFLAGS=\"-s\" \t\t./configure \t\t--build=\"$(uname -m)\" \t\t--host=\"$(uname -m)\" \t\t--prefix=/usr \t\t--datadir=/usr/share/squid \t\t--sysconfdir=/etc/squid \t\t--libexecdir=/usr/lib/squid \t\t--localstatedir=/var \t\t--with-logdir=/var/log/squid \t\t--disable-strict-error-checking \t\t--disable-arch-native \t\t--enable-removal-policies=\"lru,heap\" \t\t--enable-auth-digest \t\t--enable-auth-basic=\"getpwnam,NCSA\" \t\t--enable-epoll \t\t--enable-external-acl-helpers=\"file_userip,unix_group,wbinfo_group\" \t\t--enable-auth-ntlm=\"fake\" \t\t--enable-auth-negotiate=\"wrapper\" \t\t--enable-silent-rules \t\t--disable-mit \t\t--enable-heimdal \t\t--enable-delay-pools \t\t--enable-arp-acl \t\t--enable-openssl \t\t--enable-ssl-crtd \t\t--enable-ident-lookups \t\t--enable-useragent-log \t\t--enable-cache-digests \t\t--enable-referer-log \t\t--enable-async-io \t\t--enable-truncate \t\t--enable-arp-acl \t\t--enable-htcp \t\t--enable-carp \t\t--enable-epoll \t\t--enable-follow-x-forwarded-for \t\t--enable-storeio=\"diskd rock\" \t\t--enable-translation \t\t--disable-snmp \t\t--disable-dependency-tracking \t\t--with-large-files \t\t--with-default-user=squid \t\t--with-openssl \t\t--with-pidfile=/var/run/squid/squid.pid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tcd /tmp/build \u0026\u0026 \tmake -j $(grep -cs ^processor /proc/cpuinfo) \u0026\u0026 \tmake install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SQUID_CONFIG_FILE",
              "Value": "/etc/squid/squid.conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "UTC"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tdeluser squid 2\u003e/dev/null; delgroup squid 2\u003e/dev/null; \taddgroup -S squid -g 3128 \u0026\u0026 adduser -S -u 3128 -G squid -g squid -H -D -s /bin/false -h /var/cache/squid squid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache \t\tlibstdc++ \t\theimdal-libs \t\tlibcap \t\tlibressl2.7-libcrypto \t\tlibressl2.7-libssl \t\tlibltdl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/squid/",
            "/etc/squid/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/lib/squid/",
            "/usr/lib/squid/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/share/squid/",
            "/usr/share/squid/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/sbin/squid",
            "/usr/sbin/squid"
          ]
        },
        {
          "CmdLine": [
            "install -d -o squid -g squid \t\t/var/cache/squid \t\t/var/log/squid \t\t/var/run/squid \u0026\u0026 \tchmod +x /usr/lib/squid/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'include /etc/squid/conf.d/*.conf' \u003e\u003e \"$SQUID_CONFIG_FILE\" \u0026\u0026 \tinstall -d -m 755 -o squid -g squid /etc/squid/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tapk add --no-cache --virtual .tz alpine-conf tzdata \u0026\u0026 \t/sbin/setup-timezone -z $TZ \u0026\u0026 \tapk del .tz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/squid"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3128/tcp"
          ]
        },
        {
          "Name": "user",
          "User": "squid"
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "/usr/sbin/squid -f ${SQUID_CONFIG_FILE} -z \u0026\u0026 exec /usr/sbin/squid -f ${SQUID_CONFIG_FILE} -NCd 1"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}