{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic-20180821",
      "SourceCode": "FROM ubuntu:bionic-20180821",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic-20180821"
      },
      "Commands": [
        {
          "CmdLine": [
            "cd /bin \u0026\u0026 rm sh \u0026\u0026 ln -s bash sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y \t--no-install-recommends apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y \tvim bash-completion sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y \tbuild-essential make cmake cmake-curses-gui python3 \tflex bison automake bc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y \tcurl wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd docker -d /home/docker -m -s /bin/bash \u0026\u0026  \tpasswd -d docker \u0026\u0026 \techo \"docker  ALL=(ALL)       NOPASSWD: ALL\" \u003e\u003e /etc/sudoers; echo \"Defaults    !requiretty\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq         software-properties-common \topenjdk-11-jdk \txvfb         xz-utils \tgit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq \t\tlibgtk2.0 \t\tlibcanberra-gtk-module \t\tlibcanberra-gtk3-module"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \t\u0026\u0026 apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed \"s/^dialout.*/\u0026docker/\" /etc/group -i     \u0026\u0026 sed \"s/^root.*/\u0026docker/\" /etc/group -i"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ARDUINO_IDE_VERSION",
              "Value": "1.8.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(wget -q -O- https://downloads.arduino.cc/arduino-${ARDUINO_IDE_VERSION}-linux64.tar.xz \t| tar xJC /usr/local/share \t\u0026\u0026 ln -s /usr/local/share/arduino-${ARDUINO_IDE_VERSION} /usr/local/share/arduino \t\u0026\u0026 ln -s /usr/local/share/arduino-${ARDUINO_IDE_VERSION}/arduino /usr/local/bin/arduino)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/share/arduino/hardware \u0026\u0026 mkdir esp8266com \u0026\u0026 cd esp8266com \u0026\u0026\tgit clone https://github.com/esp8266/Arduino.git esp8266 \u0026\u0026\tcd esp8266/tools \u0026\u0026\tpython get.py \u0026\u0026 \tcd ../ \u0026\u0026 \tgit submodule update --init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXPORT_DIR",
              "Value": "/export"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$EXPORT_DIR"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$EXPORT_DIR"
        }
      ]
    }
  ]
}