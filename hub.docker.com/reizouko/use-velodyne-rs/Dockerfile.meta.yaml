MetaArgs: null
Stages:
- BaseName: osrf/ros:kinetic-desktop-full
  Commands:
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         pkg-config         libxau-dev         libxdmcp-dev         libxcb1-dev         libxext-dev         libx11-dev          mesa-utils         x11-apps         ca-certificates         build-essential         cmake         git         wget         unzip         curl         vim
      &&     apt-get autoclean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key del F42ED6FBAB17C654
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80'                 --recv-key
      C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y ros-kinetic-velodyne &&     apt-get
      autoclean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /catkin_ws/src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /catkin_ws/src/
  - CmdLine:
    - git clone https://github.com/ros-drivers/velodyne.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/IntelRealSense/realsense-ros.git
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /opt/ros/kinetic/setup.bash" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /catkin_ws/devel/setup.bash" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Name: workdir
    Path: /
  - CmdLine:
    - apt-get update -y &&     apt-get upgrade -y &&     apt-get dist-upgrade -y &&     apt-get
      install -y --install-recommends                        linux-generic-lts-xenial                        xserver-xorg-core-lts-xenial                        xserver-xorg-lts-xenial                        xserver-xorg-video-all-lts-xenial                        xserver-xorg-input-all-lts-xenial                        libwayland-egl1-mesa-lts-xenial                        libssl-dev                        libusb-1.0-0-dev                        pkg-config                        libgtk-3-dev                        libglfw3-dev
      &&     apt-get autoclean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /Source/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/
  - CmdLine:
    - wget https://github.com/IntelRealSense/librealsense/archive/v2.25.0.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip v2.25.0.zip && rm v2.25.0.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/librealsense-2.25.0/
  - CmdLine:
    - mkdir build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/librealsense-2.25.0/build/
  - CmdLine:
    - cmake ./../ && make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/librealsense-2.25.0/
  - CmdLine:
    - cp config/99-realsense-libusb.rules /etc/udev/rules.d/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/
  - CmdLine:
    - rm -rf ./librealsense-2.25.0/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&     apt-get upgrade -y &&     apt-get install -y qtcreator                        qt5-default                        libopenni2-dev
      &&     apt-get autoclean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/
  - CmdLine:
    - wget https://github.com/CloudCompare/CloudCompare/archive/v2.9.1.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip v2.9.1.zip && rm v2.9.1.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /Source/CloudCompare-2.9.1/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/CloudCompare-2.9.1/build/
  - CmdLine:
    - cmake .. -DOPTION_BUILD_CCVIEWER=ON              -DOPTION_GL_QUAD_BUFFER_SUPPORT=ON              -DOPTION_BUILD_PLUGIN=TRUE              -DOPTION_GL_QUAD_BUFFER_SUPPORT=ON              -DOPTION_USE_DXF_LIB=ON              -DOPTION_USE_GDAL=ON              -DINSTALL_QPCL_PLUGIN=TRUE              -DINSTALL_QANIMATION_PLUGIN=TRUE
      &&     make &&     make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Source/
  - CmdLine:
    - rm -rf ./CloudCompare-2.9.1/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&     apt-get install -y apt-transport-https &&     apt-get
      autoclean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable
      main" > /etc/apt/sources.list.d/vscode.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&     apt-get install -y code &&     apt-get autoclean &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/x86_64-linux-gnu
    - /usr/local/lib/x86_64-linux-gnu
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
  - CmdLine:
    - echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf &&     ldconfig
      &&     echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload &&     echo '/usr/local/$LIB/libEGL.so.1'
      >> /etc/ld.so.preload
    Name: run
    PrependShell: true
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: ${NVIDIA_VISIBLE_DEVICES:-all}
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
    Name: env
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/bin:/usr/local/sbin:/user/bin:/sbin:/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :0
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: QT_X11_NO_MITSHM
      Value: "1"
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: osrf/ros:kinetic-desktop-full
  Name: ""
  Platform: ""
  SourceCode: FROM osrf/ros:kinetic-desktop-full
