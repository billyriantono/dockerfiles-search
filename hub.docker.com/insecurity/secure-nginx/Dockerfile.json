{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "insecurity/debian:stretch",
      "SourceCode": "FROM insecurity/debian:stretch",
      "Platform": "",
      "From": {
        "Image": "insecurity/debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Vecten Sebastien \u003cjtof_fap@insecurity.fr\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD",
          "Name": "arg",
          "Value": "1.16.0"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "$BUILD-1"
        },
        {
          "Key": "NGINX_VERSION",
          "Name": "arg",
          "Value": "$VERSION~stretch"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y       ca-certificates gnupg lsb-release libc6-dev dpkg-dev build-essential:native debhelper dh-systemd quilt libpcre3-dev zlib1g-dev   \u0026\u0026 echo \"deb http://deb.debian.org/debian unstable main\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y openssl libssl1.1 libssl-dev   \u0026\u0026 curl -O https://nginx.org/keys/nginx_signing.key \u0026\u0026 apt-key add ./nginx_signing.key \u0026\u0026 rm ./nginx_signing.key   \u0026\u0026 echo \"deb http://nginx.org/packages/debian/ $(lsb_release -sc) nginx\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb-src http://nginx.org/packages/debian/ $(lsb_release -sc) nginx\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 apt-get update     \u0026\u0026 mkdir /tmp/nginx \u0026\u0026 cd /tmp/nginx \u0026\u0026 apt-get source nginx=${NGINX_VERSION}     \u0026\u0026 cd nginx-${BUILD}     \u0026\u0026 sed -e 's#--with-ld-opt=\"$(LDFLAGS)\"#--with-ld-opt=\"$(LDFLAGS)\" --with-openssl-opt\\=enable-tls1_3#g' debian/rules     \u0026\u0026 dpkg-buildpackage -b     \u0026\u0026 dpkg -i ../nginx_${NGINX_VERSION}_amd64.deb     \u0026\u0026 cd / \u0026\u0026 rm -r /tmp/nginx   \u0026\u0026 sed -i -e'/unstable\\|deb-src/d' /etc/apt/sources.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y     gettext-base     nginx-module-xslt=${NGINX_VERSION}     nginx-module-geoip=${NGINX_VERSION}     nginx-module-image-filter=${NGINX_VERSION}     nginx-module-perl=${NGINX_VERSION}   \u0026\u0026 apt-get remove -y --purge lsb-release gnupg dpkg-dev build-essential:native debhelper dh-systemd quilt libssl-dev libpcre3-dev zlib1g-dev libc6-dev   \u0026\u0026 usermod -u 3005 nginx     \u0026\u0026 groupmod -g 3005 nginx     \u0026\u0026 chown -R nginx:nginx /etc/nginx/     \u0026\u0026 chown -R nginx:nginx /var/cache/nginx/     \u0026\u0026 chown -R nginx:nginx /var/log/nginx/     \u0026\u0026 chmod -R 777 /var/log/nginx/   \u0026\u0026 sed -i -e \"s#\\(listen.*80\\)#listen       8080#\" /etc/nginx/conf.d/default.conf     \u0026\u0026 sed -i -e \"s#\\(/var/run\\)#/etc/nginx#\" /etc/nginx/nginx.conf   \u0026\u0026 mkdir -p /usr/local/bak/etc/ \u0026\u0026 mkdir -p /usr/local/bak/usr/   \u0026\u0026 cp -r /etc/nginx/ /usr/local/bak/etc/     \u0026\u0026 cp -r /usr/share/nginx/ /usr/local/bak/usr/nginx/     \u0026\u0026 chown -R nginx:nginx /usr/local/bak/   \u0026\u0026 echo '#!/bin/bash' \u003e /run.sh     \u0026\u0026 echo 'echo \"Create configuration and content dir if missing in volumes...\"' \u003e\u003e /run.sh     \u0026\u0026 echo 'cp -rn /usr/local/bak/etc/nginx/ /etc/' \u003e\u003e /run.sh     \u0026\u0026 echo 'cp -rn /usr/local/bak/usr/nginx/ /usr/share/' \u003e\u003e /run.sh     \u0026\u0026 echo 'echo \"Reset permissions...\"' \u003e\u003e /run.sh     \u0026\u0026 echo 'chown -R nginx:nginx /var/cache/nginx/' \u003e\u003e /run.sh     \u0026\u0026 echo 'exec /usr/sbin/nginx \u0026 tail -F /var/log/nginx/*' \u003e\u003e /run.sh     \u0026\u0026 chmod 755 /run.sh   \u0026\u0026 apt-get autoclean     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "8443"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}