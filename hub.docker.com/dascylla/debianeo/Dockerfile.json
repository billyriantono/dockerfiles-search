{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Ronan Guilloux \u003cronan.guilloux@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -yq install         sudo curl supervisor wget zip imagemagick vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install apt-transport-https lsb-release ca-certificates \u0026\u0026     wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \u0026\u0026     echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/php.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -yq install --no-install-recommends         mysql-server apache2 libapache2-mod-php7.0 php7.0 php7.0-cli         php7.0-xml php7.0-zip php7.0-curl php7.0-mongo php7.0-intl php7.0-mbstring         php7.0-mysql php7.0-gd php7.0-imagick php7.0-mcrypt php7.0-cli php7.0-apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2dismod mpm_event \u0026\u0026     a2enmod mpm_prefork \u0026\u0026     a2enmod php7.0 \u0026\u0026     a2enmod rewrite \u0026\u0026     phpenmod mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get -yq autoclean \u0026\u0026 apt-get -yq autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/locale /usr/share/doc /usr/share/man"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo useradd docker --shell /bin/bash --create-home   \u0026\u0026 sudo usermod -a -G sudo docker   \u0026\u0026 echo 'ALL ALL = (ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers   \u0026\u0026 echo 'docker:secret' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/;date.timezone =/date.timezone = Europe\\/Paris/\" /etc/php/7.0/cli/php.ini \u0026\u0026     sed -i \"s/;date.timezone =/date.timezone = Europe\\/Paris/\" /etc/php/7.0//apache2/php.ini \u0026\u0026     sed -i \"s/memory_limit = .*/memory_limit = 2G/\" /etc/php/7.0//cli/php.ini \u0026\u0026     sed -i \"s/memory_limit = .*/memory_limit = 512M/\" /etc/php/7.0//apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/export APACHE_RUN_USER=www-data/export APACHE_RUN_USER=docker/\" /etc/apache2/envvars \u0026\u0026     sed -i \"s/export APACHE_RUN_GROUP=www-data/export APACHE_RUN_GROUP=docker/\" /etc/apache2/envvars \u0026\u0026     chown -R docker: /var/lock/apache2 \u0026\u0026     echo \"ServerName localhost\" \u003e\u003e /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3306",
            "80",
            "9200"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "Name": "workdir",
          "Path": "/home/docker/"
        }
      ]
    }
  ]
}