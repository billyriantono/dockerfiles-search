MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Key: DOCKERIZE_VERSION
    Name: arg
    Value: v0.2.0
  - CmdLine:
    - groupadd -r postgres --gid=999 && useradd -r -g postgres -d /home/postgres  --uid=999
      postgres
    Name: run
    PrependShell: true
  - Key: GOSU_VERSION
    Name: arg
    Value: "1.11"
  - CmdLine:
    - "set -eux \t&& apt-get update && apt-get install -y --no-install-recommends
      ca-certificates wget gnupg2 libffi-dev openssh-server gosu && rm -rf /var/lib/apt/lists/*
      \ && \tgosu nobody true"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dockerfile/bin
    - /usr/local/bin/dockerfile
  - CmdLine:
    - chmod -R +x /usr/local/bin/dockerfile && ln -s /usr/local/bin/dockerfile/functions/*
      /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add
      - &&      sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg
      main" >> /etc/apt/sources.list.d/pgdg.list' &&      apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y postgresql-client-11
    Name: run
    PrependShell: true
  - CmdLine:
    - install_deb_pkg "http://launchpadlibrarian.net/160156688/libmemcached10_1.0.8-1ubuntu2_amd64.deb"
      "libmemcached10"
    Name: run
    PrependShell: true
  - CmdLine:
    - install_deb_pkg "http://security-cdn.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb"
      "libssl1.0.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - install_deb_pkg "http://atalia.postgresql.org/morgue/p/pgpool2/libpgpool0_3.6.7-1.pgdg90+1_amd64.deb"
      "libpgpool0"
    Name: run
    PrependShell: true
  - CmdLine:
    - install_deb_pkg "http://atalia.postgresql.org/morgue/p/pgpool2/pgpool2_3.6.7-1.pgdg90+1_amd64.deb"
      "pgpool2"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ssh
    - /tmp/.ssh
  - CmdLine:
    - mv /tmp/.ssh/sshd_start /usr/local/bin/sshd_start && chmod +x /usr/local/bin/sshd_start
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./pgpool/bin
    - /usr/local/bin/pgpool
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./pgpool/configs
    - /var/pgpool_configs
  - CmdLine:
    - chmod +x -R /usr/local/bin/pgpool
    Name: run
    PrependShell: true
  - Env:
    - Key: CHECK_USER
      Value: replication_user
    Name: env
  - Env:
    - Key: CHECK_PASSWORD
      Value: replication_pass
    Name: env
  - Env:
    - Key: CHECK_PGCONNECT_TIMEOUT
      Value: "10"
    Name: env
  - Env:
    - Key: WAIT_BACKEND_TIMEOUT
      Value: "120"
    Name: env
  - Env:
    - Key: REQUIRE_MIN_BACKENDS
      Value: "0"
    Name: env
  - Env:
    - Key: SSH_ENABLE
      Value: "0"
    Name: env
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - Env:
    - Key: CONFIGS_DELIMITER_SYMBOL
      Value: ','
    Name: env
  - Env:
    - Key: CONFIGS_ASSIGNMENT_SYMBOL
      Value: ':'
    Name: env
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "5432"
  - Name: expose
    Ports:
    - "9898"
  - Health:
      Interval: 60000000000
      Retries: 5
      Test:
      - CMD-SHELL
      - /usr/local/bin/pgpool/has_write_node.sh
      Timeout: 10000000000
    Name: healthcheck
  - CmdLine:
    - /usr/local/bin/pgpool/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
