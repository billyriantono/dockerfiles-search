MetaArgs: null
Stages:
- As: frontend
  BaseName: node:12.12.0-alpine
  Commands:
  - CmdLine:
    - apk --update add --no-cache     git gcc make autoconf automake musl-dev   &&
      rm -rf /var/cache/apk/* /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - chown -R node:node /app
    Name: run
    PrependShell: true
  - Name: user
    User: node
  - Chown: node:node
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol/front/package.json
    - ./eventol/front/yarn.lock
    - ./
  - CmdLine:
    - yarn install
    Name: run
    PrependShell: true
  - Chown: node:node
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol/front/
    - .
  - CmdLine:
    - yarn build
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: node:12.12.0-alpine
  Name: frontend
  Platform: ""
  SourceCode: FROM node:12.12.0-alpine as frontend
- As: development
  BaseName: python:3.7.4-alpine
  Commands:
  - Env:
    - Key: APP_ROOT
      Value: /usr/src/app/
    Name: env
  - Env:
    - Key: IS_ALPINE
      Value: "true"
    Name: env
  - Env:
    - Key: DJANGO_CONFIGURATION
      Value: Prod
    Name: env
  - CmdLine:
    - apk --update add --no-cache   bash git gcc cairo-dev postgresql-dev libxslt-dev   gettext
      musl-dev py3-setuptools jpeg-dev make   && rm -rf /var/cache/apk/* /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir cffi cairocffi psycopg2
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --no-cache cairo-dev   && rm -rf /var/cache/apk/* /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/eventol
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_ROOT}
  - CmdLine:
    - adduser -D -h ${APP_ROOT} -s /bin/bash app
    Name: run
    PrependShell: true
  - CmdLine:
    - chown app:app /var/log/eventol
    Name: run
    PrependShell: true
  - Chown: app:app
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - ./requirements-dev.txt
    - ${APP_ROOT}
  - CmdLine:
    - pip3 install --no-cache-dir -r requirements-dev.txt
    Name: run
    PrependShell: true
  - Name: user
    User: app
  - Chown: app:app
    From: ""
    Name: copy
    SourcesAndDest:
    - ./Makefile
    - ${APP_ROOT}/Makefile
  - Chown: app:app
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol
    - ${APP_ROOT}/eventol
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/manager/static
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/front/eventol/static
    Name: run
    PrependShell: true
  - Chown: app:app
    From: frontend
    Name: copy
    SourcesAndDest:
    - /app/webpack-stats-prod.json
    - ${APP_ROOT}/eventol/front/webpack-stats-prod.json
  - Chown: app:app
    From: frontend
    Name: copy
    SourcesAndDest:
    - /app/eventol/static
    - ${APP_ROOT}/eventol/front/eventol/static
  - Chown: app:app
    From: ""
    Name: copy
    SourcesAndDest:
    - ./deploy/docker/scripts/wait-for-it.sh
    - ${APP_ROOT}/wait-for-it.sh
  - Chown: app:app
    From: ""
    Name: copy
    SourcesAndDest:
    - ./deploy/docker/scripts/start_eventol.sh
    - ${APP_ROOT}/start_eventol.sh
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/static
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${APP_ROOT}/eventol && python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/media
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/log/eventol/eventol.log
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's@#~ @@g' ${APP_ROOT}/eventol/conf/locale/*/LC_MESSAGES/djangojs.po
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${APP_ROOT}/eventol && python manage.py compilemessages
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Name: volume
    Volumes:
    - ${APP_ROOT}/eventol/media
  - Name: volume
    Volumes:
    - ${APP_ROOT}/eventol/static
  - CmdLine:
    - tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.7.4-alpine
  Name: development
  Platform: ""
  SourceCode: FROM python:3.7.4-alpine as development
