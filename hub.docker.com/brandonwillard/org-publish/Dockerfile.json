{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:17.10",
      "SourceCode": "FROM ubuntu:17.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:17.10"
      },
      "Commands": [
        {
          "Maintainer": "brandonwillard",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.17.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_MESSAGES",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:/root/.cask/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 buildDeps='   build-essential   curl   grep   sed   dpkg   bzip2   ca-certificates   '   \u0026\u0026 apt-get update -yqq   \u0026\u0026 apt-get install -yqq --no-install-recommends   $buildDeps   git   ssh   make   rsync   apt-utils   locales   \u0026\u0026 sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen   \u0026\u0026 locale-gen   \u0026\u0026 update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apt-get install -yqq --no-install-recommends   texlive-plain-generic   texlive-latex-base   texlive-latex-extra   texlive-fonts-recommended   texlive-pictures   poppler-utils   latexmk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026   curl -fsSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \u003e ~/miniconda.sh \u0026\u0026   /bin/bash ~/miniconda.sh -b -p /opt/conda \u0026\u0026   rm ~/miniconda.sh \u0026\u0026   ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \u0026\u0026   echo \". /opt/conda/etc/profile.d/conda.sh\" \u003e\u003e ~/.bashrc \u0026\u0026   echo \"conda activate base\" \u003e\u003e ~/.bashrc \u0026\u0026   conda update -qy -n base conda \u0026\u0026   conda install -qy -n base python=3.6.4 pip openblas numpy pandas pandoc ipython jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apt-get install -yqq --no-install-recommends   emacs25-nox   \u0026\u0026 curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026   TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \u0026\u0026   curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" \u003e tini.deb \u0026\u0026   dpkg -i tini.deb \u0026\u0026   rm tini.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apt-get purge --auto-remove -yqq $buildDeps   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf   /var/lib/apt/lists/*   /tmp/*   /var/tmp/*   /usr/share/man   /usr/share/doc   /usr/share/doc-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}