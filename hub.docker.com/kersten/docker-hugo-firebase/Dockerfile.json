{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:stretch",
      "SourceCode": "FROM node:stretch",
      "Platform": "",
      "From": {
        "Image": "node:stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "USR_LOCAL",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_DIR",
              "Value": "$USR_LOCAL/app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENVIRONMENT",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ/etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget --no-install-recommends     \u0026\u0026 wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install libstdc++6     \u0026\u0026 apt-get install -y google-chrome-unstable       --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get purge --auto-remove -y curl     \u0026\u0026 rm -rf /src/*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn add puppeteer@1.10.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --unsafe-perm=true gulp hugulp firebase-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir $APP_DIR \u0026\u0026 mkdir $APP_DIR/functions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "RUN_AS",
          "Name": "arg",
          "Value": "node"
        },
        {
          "Key": "HUGO_VERSION",
          "Name": "arg",
          "Value": "0.55.5"
        },
        {
          "Key": "HUGO_BINARY",
          "Name": "arg",
          "Value": "\"hugo_extended_${HUGO_VERSION}_Linux-64bit\""
        },
        {
          "CmdLine": [
            "mkdir /usr/local/hugo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/spf13/hugo/releases/download/v${HUGO_VERSION}/${HUGO_BINARY}.tar.gz",
            "/usr/local/hugo/"
          ]
        },
        {
          "CmdLine": [
            "tar xzf /usr/local/hugo/${HUGO_BINARY}.tar.gz -C /usr/local/hugo/     \u0026\u0026 ln -s /usr/local/hugo/hugo /usr/local/bin/hugo     \u0026\u0026 rm /usr/local/hugo/${HUGO_BINARY}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 775 -R $USR_LOCAL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "$APP_DIR"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "functions/package.json",
            "$APP_DIR/functions"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$APP_DIR"
        },
        {
          "CmdLine": [
            "npm i"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd functions \u0026\u0026 npm i"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}