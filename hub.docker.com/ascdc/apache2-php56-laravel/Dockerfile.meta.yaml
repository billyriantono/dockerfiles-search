MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: ASCDC <asdc.sinica@gmail.com>
    Name: maintainer
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run.sh
    - /run.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - locale.gen
    - /etc/locale.gen
  - Chown: ""
    Name: add
    SourcesAndDest:
    - locale-archive
    - /usr/lib/locale/locale-archive
  - Chown: ""
    Name: add
    SourcesAndDest:
    - set_root_pw.sh
    - /set_root_pw.sh
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive && \tchmod +x /*.sh && \tapt-get update && \tapt-get
      -y install -y locales software-properties-common python-software-properties
      openssh-server pwgen wget curl vim git && \tmkdir -p /var/run/sshd && \tsed
      -i \"s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g\" /etc/ssh/sshd_config
      && \tsed -i \"s/UsePAM.*/UsePAM no/g\" /etc/ssh/sshd_config && \tsed -i \"s/PermitRootLogin.*/PermitRootLogin
      yes/g\" /etc/ssh/sshd_config && \techo \"cd /var/www/html\" >> /root/.profile
      && \techo \"alias ll='ls -al'\" >> /root/.profile && \techo \"export LANG=zh_TW.UTF-8\"
      >> /root/.profile && \techo \"export LANGUAGE=zh_TW\" >> /root/.profile && \techo
      \"export LC_ALL=zh_TW.UTF-8\" >> /root/.profile && \techo \"export PATH=$PATH:/root/.composer/vendor/bin\"
      >> /root/.profile && \techo \"export NVM_DIR=/root/.nvm\" >> /root/.profile
      && \techo \"[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && . \\\"\\$NVM_DIR/nvm.sh\\\"\"
      >> /root/.profile && \tlocale-gen zh_TW.UTF-8 && \tdpkg-reconfigure locales
      && \texport LANG=zh_TW.UTF-8 && \tadd-apt-repository -y ppa:ondrej/php && \tadd-apt-repository
      -y ppa:ondrej/apache2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive && apt-get update && \tapt-get -y upgrade &&
      \tapt-get install -y apache2 php5.6 php5.6-common php5.6-json php5.6-opcache
      php5.6-zip php5.6-mysql php5.6-phpdbg php5.6-gd php5.6-imap php5.6-ldap php5.6-pgsql
      php5.6-pspell php5.6-recode php5.6-tidy php5.6-dev php5.6-intl php5.6-curl php5.6-mcrypt
      php5.6-xmlrpc php5.6-xsl php5.6-bz2 php5.6-mbstring pkg-config libmagickwand-dev
      imagemagick build-essential libsasl2-dev libpcre3-dev libapache2-mod-php5 &&
      \techo 'autodetect'|pecl install imagick uploadprogress memcache mongodb-1.1.0
      && \techo \"extension=imagick.so\" | sudo tee /etc/php/5.6/mods-available/imagick.ini
      && \techo \"extension=uploadprogress.so\" | sudo tee /etc/php/5.6/mods-available/uploadprogress.ini
      && \techo \"extension=memcache.so\" | sudo tee /etc/php/5.6/mods-available/memcache.ini
      && \techo \"extension=mongodb.so\" | sudo tee /etc/php/5.6/mods-available/mongodb.ini
      && \tln -sf /etc/php/5.6/mods-available/imagick.ini /etc/php/5.6/apache2/conf.d/20-imagick.ini
      && \tln -sf /etc/php/5.6/mods-available/uploadprogress.ini /etc/php/5.6/apache2/conf.d/20-uploadprogress.ini
      && \tln -sf /etc/php/5.6/mods-available/memcache.ini /etc/php/5.6/apache2/conf.d/20-memcache.ini
      && \tln -sf /etc/php/5.6/mods-available/mongodb.ini /etc/php/5.6/apache2/conf.d/20-mongodb.ini
      && \tln -sf /etc/php/5.6/mods-available/imagick.ini /etc/php/5.6/cli/conf.d/20-imagick.ini
      && \tln -sf /etc/php/5.6/mods-available/uploadprogress.ini /etc/php/5.6/cli/conf.d/20-uploadprogress.ini
      && \tln -sf /etc/php/5.6/mods-available/memcache.ini /etc/php/5.6/cli/conf.d/20-memcache.ini
      && \tln -sf /etc/php/5.6/mods-available/mongodb.ini /etc/php/5.6/cli/conf.d/20-mongodb.ini
      && \tln -s ../mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load
      && \twget -qO /usr/local/bin/composer https://getcomposer.org/composer.phar
      && \tchmod 755 /usr/local/bin/composer && \texport PATH=$PATH:/root/.composer/vendor/bin
      && \tcomposer global require \"laravel/installer\" && \tmkdir /var/www/html/public
      && \tmv /var/www/html/*.html /var/www/html/public && \tsed -i \"s/DocumentRoot.*/DocumentRoot
      \\/var\\/www\\/html\\/public/g\" /etc/apache2/sites-available/000-default.conf
      && \tsed -i \"s/<\\/VirtualHost>/\\t<Directory \\\"\\/var\\/www\\/html\\/public\\\">\\n\\t\\tAllowOverride
      All\\n\\t<\\/Directory>\\n<\\/VirtualHost>/g\" /etc/apache2/sites-available/000-default.conf
      && \tcurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh
      | bash && \texport NVM_DIR=\"/root/.nvm\" && \t[ -s \"$NVM_DIR/nvm.sh\" ] &&
      . \"$NVM_DIR/nvm.sh\" && \tnvm install v6.9.2 && \tnvm use v6.9.2"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: zh_TW.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: zh_TW
    Name: env
  - Env:
    - Key: LC_ALL
      Value: zh_TW.UTF-8
    Name: env
  - Env:
    - Key: AUTHORIZED_KEYS
      Value: '**None**'
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /root/.nvm
    Name: env
  - Name: expose
    Ports:
    - "80"
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - /run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
