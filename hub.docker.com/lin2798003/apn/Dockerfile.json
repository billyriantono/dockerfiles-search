{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-cli-alpine3.7",
      "SourceCode": "FROM php:7.2-cli-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "php:7.2-cli-alpine3.7"
      },
      "Commands": [
        {
          "Maintainer": "lin2798003 development \"lin2798003@sina.com\"",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "APP_NAME",
              "Value": "apn"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_PATH",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEM_LIMIT",
              "Value": "512M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_POST_MAX_SIZE",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_UPLOAD_MAX_FILESIZE",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"http://mirrors.aliyun.com/alpine/v3.7/main/\" \u003e /etc/apk/repositories \u0026\u0026     echo \"http://mirrors.aliyun.com/alpine/v3.7/community/\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk add --no-cache     tzdata     wget     curl     libcurl     python     python-dev     py-pip     augeas-dev     ca-certificates     dialog     autoconf     make     gcc     musl-dev     linux-headers     libpng-dev     icu-dev     libpq     libxslt-dev     libffi-dev     freetype-dev     gettext-dev     postgresql-dev     libjpeg-turbo-dev \u0026\u0026     docker-php-ext-configure gd     --with-gd     --with-freetype-dir=/usr/include/     --with-png-dir=/usr/include/     --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install iconv pdo_mysql pdo_pgsql gd exif intl xsl soap zip opcache bcmath \u0026\u0026     docker-php-source delete \u0026\u0026     apk add libmemcached-libs libmemcached-dev zlib-dev     \u0026\u0026 pecl install igbinary     \u0026\u0026 echo 'extension=igbinary.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-igbinary.ini     \u0026\u0026 pecl install msgpack     \u0026\u0026 echo 'extension=msgpack.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-msgpack.ini     \u0026\u0026 pecl install memcached     \u0026\u0026 echo 'extension=memcached.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-memcached.ini     \u0026\u0026 apk add rabbitmq-c-dev     \u0026\u0026 pecl install amqp     \u0026\u0026 echo 'extension=amqp.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-amqp.ini     \u0026\u0026 pecl install redis \u0026\u0026     echo '[redis]' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-redis.ini \u0026\u0026     echo 'extension=redis.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-redis.ini \u0026\u0026     echo 'opcache.validate_timestamps=0' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \u0026\u0026     echo 'opcache.enable=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \u0026\u0026     echo 'opcache.enable_cli=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \u0026\u0026     pecl install yaf \u0026\u0026     echo '[yaf]' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini \u0026\u0026     echo 'extension=yaf.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini \u0026\u0026     echo 'yaf.cache_config=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini \u0026\u0026     echo 'yaf.use_namespace=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini \u0026\u0026     echo 'yaf.use_spl_autoload=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini \u0026\u0026     pecl install mongodb \u0026\u0026     echo '[mongodb]' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini \u0026\u0026     echo 'extension=mongodb.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini \u0026\u0026     pecl install apcu \u0026\u0026     echo '[apcu]' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \u0026\u0026     echo 'extension=apcu.so' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \u0026\u0026     echo 'apc.enabled=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \u0026\u0026     echo 'apc.shm_size=32M' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \u0026\u0026     echo 'apc.enable_cli=1' \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \u0026\u0026     apk add nodejs \u0026\u0026     apk del     dpkg-dev dpkg     file     g++     gcc     libc-dev     make     pkgconf     re2c"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add bash     \u0026\u0026 /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime     \u0026\u0026 echo 'Asia/Shanghai' \u003e/etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts/",
            "/extra/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./monitor/",
            "/extra/monitor/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${APP_PATH}"
        },
        {
          "CmdLine": [
            "bash",
            "/extra/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}