{
  "MetaArgs": [
    {
      "Key": "BASE_IMAGE",
      "DefaultValue": "php:7.1-apache",
      "ProvidedValue": null,
      "Value": "php:7.1-apache"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${BASE_IMAGE}",
      "SourceCode": "FROM ${BASE_IMAGE}",
      "Platform": "",
      "From": {
        "Image": "${BASE_IMAGE}"
      },
      "Commands": [
        {
          "Maintainer": "Kang Ki Tae \u003ckt.kang@ridi.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "sed -i 's/deb.debian.org/ftp.daumkakao.com/g' /etc/apt/sources.list \u0026\u0026 docker-php-source extract \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   wget software-properties-common vim git mysql-client zlib1g-dev libmcrypt-dev libldap2-dev \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \u0026\u0026 docker-php-ext-install ldap pdo zip pdo_mysql \u0026\u0026 wget http://packages.couchbase.com/ubuntu/couchbase.key \u0026\u0026 apt-key add couchbase.key \u0026\u0026 rm couchbase.key  \u0026\u0026 add-apt-repository 'deb http://packages.couchbase.com/ubuntu trusty trusty/main' \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y build-essential libcouchbase2-core libcouchbase-dev libcouchbase2-bin libcouchbase2-libevent \u0026\u0026 pecl install couchbase-2.2.3 \u0026\u0026 docker-php-ext-enable couchbase \u0026\u0026 pecl config-set preferred_state beta \u0026\u0026 pecl install -o -f xdebug \u0026\u0026 rm -rf /tmp/pear \u0026\u0026 pecl config-set preferred_state stable \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026 apt-get install nodejs -y \u0026\u0026 npm install -g bower \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026 apt-get update \u0026\u0026 apt-get install yarn -y \u0026\u0026 npm install -g bower \u0026\u0026 curl -sS https://getcomposer.org/installer | php \u0026\u0026 mv composer.phar /usr/bin/composer \u0026\u0026 apt-get autoclean -y \u0026\u0026 apt-get clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 docker-php-source delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./php/*.ini*",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_ENABLE",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_TIMEZONE",
              "Value": "Asia/Seoul"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOC_ROOT",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./index.php",
            "/var/www/html/index.php"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./health.php",
            "/var/www/html/health.php"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}