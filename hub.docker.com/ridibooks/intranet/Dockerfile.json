{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "ridibooks/performance-apache-base:7.1",
      "SourceCode": "FROM ridibooks/performance-apache-base:7.1 AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "ridibooks/performance-apache-base:7.1"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/build/assets"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets",
            "./"
          ]
        },
        {
          "CmdLine": [
            "npm install \u0026\u0026 bower install --allow-root \u0026\u0026 bower prune -p --allow-root \u0026\u0026 npm run-script build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.json",
            "composer.lock",
            "./"
          ]
        },
        {
          "CmdLine": [
            "composer install --optimize-autoloader"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ridibooks/performance-apache-base:7.1",
      "SourceCode": "FROM ridibooks/performance-apache-base:7.1",
      "Platform": "",
      "From": {
        "Image": "ridibooks/performance-apache-base:7.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APACHE_DOC_ROOT",
              "Value": "/var/www/html/web"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   zip   cron   libfreetype6-dev   libjpeg62-turbo-dev   libpng12-dev   libxpm-dev   libvpx-dev \u0026\u0026 docker-php-ext-configure gd   --with-freetype-dir=/usr/lib/x86_64-linux-gnu/   --with-jpeg-dir=/usr/lib/x86_64-linux-gnu/   --with-png-dir=/usr/lib/x86_64-linux-gnu/   --with-xpm-dir=/usr/lib/x86_64-linux-gnu/   --with-vpx-dir=/usr/lib/x86_64-linux-gnu/ \u0026\u0026 docker-php-ext-install gd exif \u0026\u0026 apt-get autoclean -y \u0026\u0026 apt-get clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -m 755 -p var/session var/cache \u0026\u0026 chown -R www-data:www-data var/session var/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/php/*",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/cron.d/intranet_crontab",
            "/etc/cron.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/docker-intranet-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-intranet-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/build",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "./"
          ]
        }
      ]
    }
  ]
}