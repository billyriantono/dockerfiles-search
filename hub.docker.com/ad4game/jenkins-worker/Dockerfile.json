{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "evarga/jenkins-slave:latest",
      "SourceCode": "FROM evarga/jenkins-slave:latest",
      "Platform": "",
      "From": {
        "Image": "evarga/jenkins-slave:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"jenkins:$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 ; echo '')\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nAPT::Get::Assume-Yes \"true\";\\nAPT::Get::force-yes \"true\";' \u003e /etc/apt/apt.conf.d/01norecommend-and-yes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install python-yaml     python-jinja2     python-httplib2     python-keyczar     python-paramiko     python-setuptools     python-pkg-resources"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libgconf-2-4     libssl-dev     libffi-dev     python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install git     wget     curl     telnet     vim     unzip     rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install python-pip     build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install chromium-browser     chromium-chromedriver     \u0026\u0026 ln -s /usr/bin/chromium-browser /usr/bin/google-chrome     \u0026\u0026 ln -s /usr/lib/chromium-browser/chromedriver /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install maven     ca-certificates-java     openjdk-8-jdk-headless     \u0026\u0026 /var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~     \u0026\u0026 wget https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.1.tar.gz     \u0026\u0026 tar -xvf ruby-2.5.1.tar.gz     \u0026\u0026 cd ruby-2.5.1     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"gem: --no-ri --no-rdoc\" \u003e ~/.gemrc     \u0026\u0026 gem install bundler     \u0026\u0026 gem install capistrano          --version=2.6.0     \u0026\u0026 gem install capistrano-ext      --version=1.2.1     \u0026\u0026 gem install railsless-deploy    --version=1.1.3     \u0026\u0026 gem install sshkit              --version=1.9.0     \u0026\u0026 gem install i18n                --version=0.7.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/ansible/ /var/jenkins-agent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '[local]\\nlocalhost\\n' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins:jenkins /etc/ansible/ /var/jenkins-agent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install ansible virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "virtualenv /home/jenkins/pyenv3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins:jenkins /home/jenkins/pyenv3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}