{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "gobuild",
      "BaseName": "golang:1.10.3-alpine3.8",
      "SourceCode": "FROM golang:1.10.3-alpine3.8 as gobuild",
      "Platform": "",
      "As": "gobuild",
      "From": {
        "Image": "golang:1.10.3-alpine3.8"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "\"/go\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add pkgconfig build-base bash autoconf automake libtool gettext openrc git libzmq zeromq-dev mercurial"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/gorilla/mux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/gorilla/websocket"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/pebbe/zmq4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/docker/docker/client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/docker/docker/api/types"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/pkg/errors"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/skip2/go-qrcode"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/docker/go-connections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/me-box/lib-go-databox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /go/src/github.com/docker/docker/vendor/github.com/docker/go-connections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d golang.org/x/net/proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "addgroup -S databox \u0026\u0026 adduser -S -g databox databox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "GGO_ENABLED=0 GOOS=linux go build -a -tags netgo -installsuffix netgo -ldflags '-s -w' -o app /*.go"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "amd64/alpine:3.8",
      "SourceCode": "FROM amd64/alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "amd64/alpine:3.8"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "gobuild",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/passwd",
            "/etc/passwd"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add libzmq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "From": "gobuild",
          "Name": "copy",
          "SourcesAndDest": [
            "/app",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "gobuild",
          "Name": "copy",
          "SourcesAndDest": [
            "/www",
            "/www"
          ]
        },
        {
          "Labels": [
            {
              "Key": "databox.type",
              "Value": "\"container-manager\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /certs/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./app"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}