MetaArgs: null
Stages:
- As: golang
  BaseName: golang:1.13.1-buster
  Commands: null
  From:
    Image: golang:1.13.1-buster
  Name: golang
  Platform: ""
  SourceCode: FROM golang:1.13.1-buster as golang
- As: nodejs
  BaseName: node:12.11-buster-slim
  Commands: null
  From:
    Image: node:12.11-buster-slim
  Name: nodejs
  Platform: ""
  SourceCode: FROM node:12.11-buster-slim as nodejs
- BaseName: hero/jupyter-langs:python
  Commands:
  - Labels:
    - Key: Maintainer
      Value: '"HeRoMo"'
    - Key: Description
      Value: '"Jupyter lab for various languages"'
    - Key: Version
      Value: '"3.1.0"'
    Name: label
  - CmdLine:
    - pip install sparqlkernel &&     jupyter sparqlkernel install
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes             'r-base'             'r-irkernel'             'r-plyr'             'r-devtools'             'r-tidyverse'             'r-shiny'             'r-rmarkdown'             'r-forecast'             'r-rsqlite'             'r-reshape2'             'r-nycflights13'             'r-caret'             'r-rcurl'             'r-crayon'             'r-randomforest'             'r-tensorflow'
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.13.1
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - Chown: ""
    From: golang
    Name: copy
    SourcesAndDest:
    - /usr/local/go/
    - /usr/local/go/
  - CmdLine:
    - go get -u github.com/gopherdata/gophernotes &&     mkdir -p $HOME/.local/share/jupyter/kernels/gophernotes
      &&     cp -r /go/src/github.com/gopherdata/gophernotes/kernel/* $HOME/.local/share/jupyter/kernels/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb     &&
      dpkg -i erlang-solutions_1.0_all.deb     && apt-get update -y     && apt-get
      install  -y --no-install-recommends         erlang         elixir     && rm
      -rf /var/lib/apt/lists/*     && mix local.hex --force     && mix local.rebar
      --force
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/filmor/ierl.git ierl &&     cd ierl &&     mkdir
      $HOME/.ierl &&     mix deps.get &&     (cd deps/lfe && ~/.mix/rebar3 compile)
      &&     env MIX_ENV=prod mix escript.build &&     cp ierl $HOME/.ierl/ierl.escript
      &&     chmod +x $HOME/.ierl/ierl.escript &&     $HOME/.ierl/ierl.escript install
      erlang --user &&     $HOME/.ierl/ierl.escript install elixir --user &&     cd
      .. &&     rm -rf ierl
    Name: run
    PrependShell: true
  - Env:
    - Key: RUSTUP_HOME
      Value: /usr/local/rustup
    - Key: CARGO_HOME
      Value: /usr/local/cargo
    - Key: PATH
      Value: /usr/local/cargo/bin:$PATH
    - Key: RUST_VERSION
      Value: 1.38.0
    - Key: rustupSha256
      Value: '''36285482ae5c255f2decfab27d32ba19465804cb3ddf5a23e6ff2a7b0f6e0250'''
    Name: env
  - CmdLine:
    - set -eux;     url="https://static.rust-lang.org/rustup/archive/1.19.0/x86_64-unknown-linux-gnu/rustup-init";     wget
      "$url";     echo "${rustupSha256} *rustup-init" | sha256sum -c -;     chmod
      +x rustup-init;     ./rustup-init -y --no-modify-path --default-toolchain $RUST_VERSION;     rm
      rustup-init;     chmod -R a+w $RUSTUP_HOME $CARGO_HOME;     rustup --version;     cargo
      --version;     rustc --version;
    Name: run
    PrependShell: true
  - CmdLine:
    - cargo install evcxr_jupyter &&     evcxr_jupyter --install
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_VERSION
      Value: 2.6.5
    - Key: RUBY_HOME
      Value: /opt/ruby
    Name: env
  - CmdLine:
    - git clone https://github.com/rbenv/ruby-build.git     && PREFIX=/usr/local ./ruby-build/install.sh     &&
      mkdir -p ${RUBY_HOME}     && ruby-build ${RUBY_VERSION} ${RUBY_HOME}/${RUBY_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${RUBY_HOME}/${RUBY_VERSION}/bin:$PATH
    Name: env
  - CmdLine:
    - gem install --no-document                 benchmark_driver                 cztop                 iruby     &&
      iruby register --force
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.17.3
    Name: env
  - CmdLine:
    - mkdir -p /opt
    Name: run
    PrependShell: true
  - Chown: ""
    From: nodejs
    Name: copy
    SourcesAndDest:
    - /opt/yarn-v${YARN_VERSION}
    - /opt/yarn
  - Chown: ""
    From: nodejs
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/node
    - /usr/local/bin/
  - Chown: ""
    From: nodejs
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/node_modules/
    - /usr/local/lib/node_modules/
  - CmdLine:
    - ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn     && ln -s /opt/yarn/bin/yarn
      /usr/local/bin/yarnpkg     && ln -s /usr/local/bin/node /usr/local/bin/nodejs     &&
      ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm     &&
      ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npx
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn global add ijavascript typescript itypescript @types/node &&     ijsinstall
      &&     its --install=global
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install 'openjdk=8.0.152' --quiet --yes     && conda install -y -c conda-forge
      ipywidgets beakerx     && jupyter labextension install @jupyter-widgets/jupyterlab-manager     &&
      jupyter labextension install beakerx-jupyterlab     && rm -rf /root/anaconda3/share/jupyter/kernels/clojure     &&
      rm -rf /root/anaconda3/share/jupyter/kernels/sql     && conda build purge-all
    Name: run
    PrependShell: true
  From:
    Image: hero/jupyter-langs:python
  Name: ""
  Platform: ""
  SourceCode: FROM hero/jupyter-langs:python
