{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm-alpine",
      "SourceCode": "FROM php:5.6-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"faiyaz7283@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk add --no-cache bash bash-completion busybox-suid sudo git nano curl man"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g 1000 -S dcutil \u0026\u0026     adduser -D -u 1000 -s /bin/bash -G dcutil dcutil"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GD_DEPS",
              "Value": "freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev libwebp-dev zlib-dev libxpm-dev             libvpx-dev libjpeg-turbo-utils"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .gd-deps $GD_DEPS     \u0026\u0026 docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/         --with-xpm-dir=/usr/include/         --with-vpx-dir=/usr/include/     \u0026\u0026 NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1)     \u0026\u0026 docker-php-ext-install -j${NPROC} gd     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MEMCACHED_DEPS",
              "Value": "zlib-dev libmemcached-dev cyrus-sasl-dev"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "docker-php-source extract     \u0026\u0026 apk add --no-cache libmemcached-libs libmemcached zlib     \u0026\u0026 apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS     \u0026\u0026 apk add --no-cache --virtual .memcached-deps $MEMCACHED_DEPS     \u0026\u0026 pecl install memcached-2.2.0     \u0026\u0026 docker-php-ext-enable memcached     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 apk del .memcached-deps .phpize-deps     \u0026\u0026 docker-php-source delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source extract      \u0026\u0026 apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS      \u0026\u0026 pecl install apcu-4.0.11      \u0026\u0026 docker-php-ext-enable apcu      \u0026\u0026 rm -rf /tmp/*      \u0026\u0026 apk del .phpize-deps      \u0026\u0026 docker-php-source delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source extract     \u0026\u0026 apk add --no-cache gettext-dev     \u0026\u0026 docker-php-ext-install gettext     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 docker-php-source delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql mysqli opcache exif zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dcutil"
        },
        {
          "CmdLine": [
            "echo \"\" \u003e\u003e \"${HOME}/.bashrc\" \u0026\u0026     echo 'export PATH=\"${HOME}/.composer/vendor/bin:vendor/bin:${PATH}\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}