{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "sed -i \"s/httpredir.debian/deb.debian/g\" /etc/apt/sources.list \u0026\u0026     apt-get clean \u0026\u0026     apt-get update \u0026\u0026     LC_ALL=C DEBIAN_FRONTEND=noninteractive apt-get install -y     duplicity     openssh-server     git     curl     jq     python-pip     python-dev     procmail     gnupg2 \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli boto virtualenv \u0026\u0026     rm -rf /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -d /git -s /usr/bin/git-shell git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -p $(od -An -N20 -v -w20 -tx1 /dev/urandom | tr -d ' ') git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd /var/log/git-deploy \u0026\u0026     chown git /var/run/sshd /var/log/git-deploy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/sshd_config"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /backup_volume"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R git:git /backup_volume"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "2222"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/git/bin:/git/git-shell-commands:/git/git-shell-hooks:/opt/git-deploy/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_TIMEOUT_TERM",
              "Value": "600s"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_TIMEOUT_KILL",
              "Value": "620s"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CAPTURE_OUTPUT",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Git-Deploy Shell\" \u003e /etc/motd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "$PORT"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/git"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin",
            "/opt/git-deploy/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "base-hooks",
            "/opt/git-deploy/base-hooks/"
          ]
        },
        {
          "CmdLine": [
            "mkdir git-shell-commands \u0026\u0026 ln -s /opt/git-deploy/bin/* git-shell-commands/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir git-shell-hooks \u0026\u0026 ln -s /opt/git-deploy/base-hooks/* git-shell-hooks/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init.sh",
            "/init.sh"
          ]
        },
        {
          "CmdLine": [
            "chown -R git: /git/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/log/secure \u0026\u0026     chown git /var/log/secure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "git"
        },
        {
          "CmdLine": [
            "bash",
            "/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}