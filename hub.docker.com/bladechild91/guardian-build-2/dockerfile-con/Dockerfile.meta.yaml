MetaArgs: null
Stages:
- BaseName: blacklabelops/centos
  Commands:
  - Maintainer: Steffen Bleul <sbl@blacklabelops.com>
    Name: maintainer
  - Key: LETSENCRYPT_VERSION
    Name: arg
    Value: latest
  - Key: CONTAINER_UID
    Name: arg
    Value: "1000"
  - Key: CONTAINER_GID
    Name: arg
    Value: "1000"
  - Key: JOBBER_VERSION
    Name: arg
    Value: v1.1
  - Env:
    - Key: CONTAINER_USER
      Value: jobber_client
    - Key: CONTAINER_GROUP
      Value: jobber_client
    Name: env
  - CmdLine:
    - yum install -y epel-release &&     yum install -y     golang     make     git     sudo     python-pip     python-tools     python-virtualenv     python-devel     augeas-libs     dialog     libffi-devel     openssl     openssl-devel     redhat-rpm-config     ca-certificates     mercurial
      &&     pip install --upgrade pip &&     yum clean all && rm -rf /var/cache/yum/*
    Name: run
    PrependShell: true
  - Env:
    - Key: JOBBER_HOME
      Value: /opt/jobber
    Name: env
  - Env:
    - Key: JOBBER_LIB
      Value: $JOBBER_HOME/lib
    Name: env
  - Env:
    - Key: GOPATH
      Value: $JOBBER_LIB
    Name: env
  - Env:
    - Key: LETSENCRYPT_HOME
      Value: /opt/letsencrypt
    Name: env
  - CmdLine:
    - mkdir -p $JOBBER_HOME &&     mkdir -p $JOBBER_LIB &&     /usr/sbin/groupadd
      --gid $CONTAINER_GID $CONTAINER_GROUP &&     /usr/sbin/useradd --uid $CONTAINER_UID
      --gid $CONTAINER_GID --create-home --shell /bin/bash $CONTAINER_USER &&     cd
      $JOBBER_LIB &&     go get github.com/dshearer/jobber;true &&     if  [ "${JOBBER_VERSION}"
      != "latest" ];       then         cd src/github.com/dshearer/jobber &&         git
      checkout tags/${JOBBER_VERSION} &&         cd $JOBBER_LIB ;     fi &&     make
      -C src/github.com/dshearer/jobber install DESTDIR=$JOBBER_HOME &&     cp $JOBBER_LIB/bin/*
      /usr/bin &&     mkdir -p $LETSENCRYPT_HOME &&     cd $LETSENCRYPT_HOME &&     git
      clone https://github.com/letsencrypt/letsencrypt &&     if  [ "${LETSENCRYPT_VERSION}"
      != "latest" ];       then cd letsencrypt && git checkout tags/v${LETSENCRYPT_VERSION}
      ;     fi &&     /opt/letsencrypt/letsencrypt/letsencrypt-auto --no-self-upgrade
      --help
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/letsencrypt/letsencrypt
  - Name: volume
    Volumes:
    - /etc/letsencrypt
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - imagescripts/docker-entrypoint.sh
    - /opt/jobber/docker-entrypoint.sh
  - CmdLine:
    - /opt/jobber/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jobberd
    Name: cmd
    PrependShell: false
  From:
    Image: blacklabelops/centos
  Name: ""
  Platform: ""
  SourceCode: FROM blacklabelops/centos
