MetaArgs: null
Stages:
- As: base
  BaseName: postgres:10
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: POSTGIS_MAJOR
      Value: "2.5"
    Name: env
  - Env:
    - Key: POSTGIS_VERSION
      Value: 2.5.2+dfsg-1~exp1.pgdg90+1
    Name: env
  - CmdLine:
    - echo "Installing PostgreSQL/PostGIS..."  && apt-get -qq update  && apt-get install
      -y -q --no-install-recommends     postgis=$POSTGIS_VERSION     postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION     postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION     postgresql-server-dev-$PG_MAJOR  &&
      echo "Installing plpython and plproxy PG extensions..."  && apt-get install
      -y -q --no-install-recommends     postgresql-plpython-$PG_MAJOR     postgresql-$PG_MAJOR-plproxy  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Installing build dependencies for Carto PG extensions..."  && apt-get
      -qq update  && apt-get install -y -q --no-install-recommends     make     git     build-essential     ruby     python-pip     python-dev     python-setuptools     python-wheel     unixodbc-dev  &&
      echo "Installing runtime dependencies for PG extensions..."  && apt-get install
      -y -q --no-install-recommends     odbc-postgresql  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CARTO_PGEXT_REPO
      Value: https://github.com/CartoDB/cartodb-postgresql.git
    Name: env
  - Env:
    - Key: CARTO_DATASVCS_API_REPO
      Value: https://github.com/CartoDB/dataservices-api.git
    Name: env
  - Env:
    - Key: CARTO_DATASVCS_REPO
      Value: https://github.com/CartoDB/data-services.git
    Name: env
  - Env:
    - Key: CARTO_ODBC_FDW_REPO
      Value: https://github.com/CartoDB/odbc_fdw.git
    Name: env
  - Env:
    - Key: CARTO_CRANKSHAFT_REPO
      Value: https://github.com/CartoDB/crankshaft.git
    Name: env
  - Env:
    - Key: CARTO_OBSERVATORY_REPO
      Value: https://github.com/CartoDB/observatory-extension.git
    Name: env
  - Name: workdir
    Path: /carto
  - CmdLine:
    - git clone --recursive ${CARTO_PGEXT_REPO}  && cd /carto/cartodb-postgresql  &&
      git checkout ${CARTO_PGEXT_VERSION}  && git submodule update --recursive  &&
      make install  && cd /carto  && git clone --recursive ${CARTO_DATASVCS_API_REPO}  &&
      cd /carto/dataservices-api  && git checkout ${CARTO_DATASVCS_API_CLIENT_VERSION}  &&
      git submodule update --recursive  && cd /carto/dataservices-api/client  && make
      install  && cd /carto/dataservices-api  && git checkout ${CARTO_DATASVCS_API_SERVER_VERSION}  &&
      git submodule update --recursive  && cd /carto/dataservices-api/server/extension  &&
      make install  && cd /carto/dataservices-api/server/lib/python/cartodb_services  &&
      pip install --no-cache-dir -r requirements.txt  && pip install . --upgrade --no-cache-dir  &&
      cd /carto  && git clone --recursive ${CARTO_DATASVCS_REPO}  && cd /carto/data-services  &&
      git checkout ${CARTO_DATASVCS_VERSION}  && git submodule update --recursive  &&
      cd /carto/data-services/geocoder/extension  && make install  && cd /carto  &&
      git clone --recursive ${CARTO_ODBC_FDW_REPO}  && cd /carto/odbc_fdw  && git
      checkout ${CARTO_ODBC_FDW_VERSION}  && git submodule update --recursive  &&
      make install  && cd /carto  && git clone --recursive ${CARTO_CRANKSHAFT_REPO}  &&
      cd /carto/crankshaft  && git checkout ${CARTO_CRANKSHAFT_VERSION}  && git submodule
      update --recursive  && make install  && cd /carto  && git clone --recursive
      ${CARTO_OBSERVATORY_REPO}  && cd /carto/observatory-extension  && git checkout
      ${CARTO_OBSERVATORY_VERSION}  && git submodule update --recursive  && make install  &&
      cd /usr/share/postgresql/10/extension  && cp ./observatory--dev.sql ./observatory--current--1.9.0.sql
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /docker-entrypoint-initdb.d  && chmod 777 /usr/share/doc  && chown
      -R postgres:postgres /usr/share/postgresql
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./initdb.d/*.sh
    - /docker-entrypoint-initdb.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./initdb.d/*.sql
    - /docker-entrypoint-initdb.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ssl/osscartoCA.pem
    - /usr/local/share/ca-certificates/osscartoCA.crt
  - CmdLine:
    - update-ca-certificates
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5432"
  - Env:
    - Key: POSTGRES_USER
      Value: postgres
    Name: env
  From:
    Image: postgres:10
  Name: base
  Platform: ""
  SourceCode: FROM postgres:10 AS base
