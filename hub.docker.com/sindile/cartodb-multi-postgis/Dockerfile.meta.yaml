MetaArgs: null
Stages:
- BaseName: postgres:10
  Commands:
  - CmdLine:
    - apt-get update   && apt-get -y --no-install-recommends install     build-essential     git     curl     wget     ca-certificates     libpq-dev     libpq5     postgresql-contrib-10     postgresql-plpython-10     postgresql-10-plproxy     postgresql-server-dev-10     libproj-dev     proj-bin     proj-data     python-simplejson     libgeos-c1v5     libgeos-dev     gdal-bin     libgdal-dev     liblwgeom-2.5.0     libxml2-dev     postgis     postgresql-10-postgis-2.5     postgresql-10-postgis-2.5-scripts     python2.7-dev     ruby   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CARTODB_POSTGRESQL_VERSION
      Value: 0.24.0
    Name: env
  - Env:
    - Key: CRANKSHAFT_VERSION
      Value: 0.8.1
    Name: env
  - Env:
    - Key: DATASERVICES_VERSION
      Value: 0.0.2
    Name: env
  - Env:
    - Key: DATASERVICESAPI_VERSION
      Value: python-0.20.2
    Name: env
  - Env:
    - Key: OBSERVATORY_VERSION
      Value: 1.9.0
    Name: env
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py | python   && git clone     --branch
      ${CARTODB_POSTGRESQL_VERSION}     --depth 1 git://github.com/CartoDB/cartodb-postgresql.git   &&
      cd cartodb-postgresql   && make all install   && cd /   && git clone     --branch
      ${CRANKSHAFT_VERSION}     --depth 1 git://github.com/CartoDB/crankshaft.git   &&
      cd /crankshaft   && make install   && pip install --force-reinstall --no-cache-dir
      scikit-learn==0.14.1   && cd / && git clone     --branch ${DATASERVICES_VERSION}     --depth
      1 git://github.com/CartoDB/data-services.git   && cd /data-services/geocoder/extension   &&
      PGUSER=$POSTGRES_USER make all install   && cd / && git clone     --branch ${DATASERVICESAPI_VERSION}     --depth
      1 git://github.com/CartoDB/dataservices-api.git   && cd /dataservices-api/server/extension   &&
      PGUSER=$POSTGRES_USER make install   && cd ../lib/python/cartodb_services   &&
      pip install -r requirements.txt && pip install .   && cd ../../../../client   &&
      PGUSER=$POSTGRES_USER make install   && cd / && git clone     --branch ${OBSERVATORY_VERSION}     --depth
      1 git://github.com/CartoDB/observatory-extension.git   && cd observatory-extension   &&
      PGUSER=$POSTGRES_USER make deploy   && mkdir -p /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - initdb-postgis.sh
    - /docker-entrypoint-initdb.d/01-postgis.sh
  - CmdLine:
    - chmod +rx /docker-entrypoint-initdb.d/01-postgis.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    - postgres
    - -c
    - listen_addresses=*
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: postgres:10
  Name: ""
  Platform: ""
  SourceCode: FROM postgres:10
