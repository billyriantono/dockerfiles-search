MetaArgs: null
Stages:
- BaseName: resero/docker-ds
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - "set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates
      \t\tcurl \t\tunzip \t; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PATH
      Value: /usr/local/julia
    Name: env
  - Env:
    - Key: PATH
      Value: $JULIA_PATH/bin:$PATH
    Name: env
  - Env:
    - Key: JULIA_GPG
      Value: 3673DF529D9049477F76B37566E3C7DC03D6E495
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 1.1.1
    Name: env
  - CmdLine:
    - "set -eux; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tif ! command -v gpg
      > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends
      \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi; \t\tdpkgArch=\"$(dpkg
      --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) tarArch='x86_64';
      dirArch='x64'; sha256='f0a83a139a89a2ccf2316814e5ee1c0c809fca02cbaf4baf3c1fd8eb71594f06'
      ;; \t\tarm64) tarArch='aarch64'; dirArch='aarch64'; sha256='3d9ba9c2204ea920006b3a91ecd2803cac808b29250f2120000e29fc0384099a'
      ;; \t\ti386) tarArch='i686'; dirArch='x86'; sha256='3e6941326522ac4bc34c5663c2c5752417e92677ff9befc56ba264eb283f37f1'
      ;; \t\t*) echo >&2 \"error: current architecture ($dpkgArch) does not have a
      corresponding Julia binary release\"; exit 1 ;; \tesac; \t\tfolder=\"$(echo
      \"$JULIA_VERSION\" | cut -d. -f1-2)\"; \tcurl -fL -o julia.tar.gz.asc \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc\";
      \tcurl -fL -o julia.tar.gz     \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz\";
      \t\techo \"${sha256} *julia.tar.gz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$JULIA_GPG\";
      \tgpg --batch --verify julia.tar.gz.asc julia.tar.gz; \tcommand -v gpgconf >
      /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\" julia.tar.gz.asc; \t\tmkdir
      \"$JULIA_PATH\"; \ttar -xzf julia.tar.gz -C \"$JULIA_PATH\" --strip-components
      1; \trm julia.tar.gz; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\"
      ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \t\tjulia --version"
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PKGDIR
      Value: $JULIA_PKGDIR
    Name: env
  - Name: user
    User: $NB_UID
  - CmdLine:
    - julia -e 'import Pkg; Pkg.update()' &&     julia -e 'using Pkg; pkg"add CSV
      Gadfly IJulia InstantiateFromURL Plots@0.23.1 PyPlot PlotlyJS"; pkg"precompile"'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  From:
    Image: resero/docker-ds
  Name: ""
  Platform: ""
  SourceCode: FROM resero/docker-ds
