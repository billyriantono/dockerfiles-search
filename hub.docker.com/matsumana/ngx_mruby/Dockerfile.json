{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.3.1611",
      "SourceCode": "FROM centos:7.3.1611",
      "Platform": "",
      "From": {
        "Image": "centos:7.3.1611"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "RUBY_MAJOR_VERSION",
              "Value": "2.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_FULL_VERSION",
              "Value": "2.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_MRUBY_VERSION",
              "Value": "v1.18.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_CONFIG_OPT_ENV",
              "Value": "--prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y git wget gcc make gcc-c++ bison openssl-devel zlib-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src \u0026\u0026   curl -O http://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR_VERSION}/ruby-${RUBY_FULL_VERSION}.tar.gz \u0026\u0026   tar xvf ruby-${RUBY_FULL_VERSION}.tar.gz \u0026\u0026   cd ruby-${RUBY_FULL_VERSION} \u0026\u0026   ./configure --prefix /usr/local/ruby \u0026\u0026   make \u0026\u0026   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/ruby/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm \u0026\u0026   yum install -y mysql-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y libmemcached-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 --branch=$NGX_MRUBY_VERSION https://github.com/matsumoto-r/ngx_mruby.git /usr/local/src/ngx_mruby \u0026\u0026   cd /usr/local/src/ngx_mruby \u0026\u0026   sed -i -e '/matsumotory\\/mruby-memcached/s/#//' build_config.rb \u0026\u0026   sed -i -e '/mattn\\/mruby-mysql/s/#//' build_config.rb \u0026\u0026   sh build.sh \u0026\u0026   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/cache/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum clean all \u0026\u0026   rm -rf /usr/local/src/ruby-${RUBY_FULL_VERSION}* \u0026\u0026   rm -rf /usr/local/src/ngx_mruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Expression": "ADD docker/hook.d /etc/nginx/hook.d",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD docker/conf.d /etc/nginx/conf.d",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD docker/nginx.conf /etc/nginx/nginx.conf",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}