{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.1-cudnn7-runtime-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:9.1-cudnn7-runtime-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.1-cudnn7-runtime-ubuntu16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get -f -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -f -y install     tmux     build-essential     gcc g++ make     binutils     curl     git     zsh     software-properties-common file locales uuid-runtime     wget bzip2 ca-certificates     libglib2.0-0 libxext6 libsm6 libxrender1     mercurial subversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:neovim-ppa/stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y -f cmake neovim htop tree fonts-powerline"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "SHELL",
              "Value": "/bin/zsh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ruby sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LC_ALL=en_US.UTF-8\" \u003e\u003e /etc/environment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LANG=en_US.UTF-8\" \u003e /etc/locale.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/zsh uesu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'uesu ALL=(ALL) NOPASSWD:ALL' \u003e\u003e/etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "uesu"
        },
        {
          "Name": "workdir",
          "Path": "/home/uesu"
        },
        {
          "CmdLine": [
            "sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \u0026\u0026     /bin/bash ~/anaconda.sh -b -p /home/uesu/anaconda3 \u0026\u0026     rm ~/anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/Linuxbrew/brew.git /home/uesu/.linuxbrew"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/uesu/anaconda3/bin:/home/uesu/.linuxbrew/bin:/home/uesu/.linuxbrew/sbin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "brew doctor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "brew update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MANPATH",
              "Value": "\"$(brew --prefix)/share/man:$MANPATH\""
            },
            {
              "Key": "INFOPATH",
              "Value": "\"$(brew --prefix)/share/info:$INFOPATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/home/uesu/anaconda3/bin/pip install keras==2.1.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/.keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '{ \"image_dim_ordering\": \"th\", \"epsilon\": 1e-07, \"floatx\": \"float32\", \"backend\": \"tensorflow\" }' \u003e ~/.keras/keras.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.ip = '*'\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.open_browser = False\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ipython profile create"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"set editing-mode vi\" \u003e\u003e $HOME/.inputrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/etheleon/nvim.git $HOME/.config/nvim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo | echo | nvim -i NONE -c PlugInstall -c quitall \u003e /dev/null 2\u003e\u00261"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo | echo | nvim -i NONE -c UpdateRemotePlugins -c quitall \u003e /dev/null 2\u003e\u00261"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"set keymap vi-command\\n\" \u003e\u003e $HOME/.inputrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Control-l: clear-screen\\n\" \u003e\u003e $HOME/.inputrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"set keymap vi-insert\\n\" \u003e\u003e $HOME/.inputrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Control-l: clear-screen\\n\" \u003e\u003e $HOME/.inputrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"bindkey -v\\n\" \u003e\u003e $HOME/.zshrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"bindkey '^R' history-incremental-search-backward\" \u003e\u003e $HOME/.zshrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.InteractiveShellApp.extensions = ['autoreload']\\n\" \u003e\u003e $HOME/.ipython/profile_default/ipython_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.InteractiveShellApp.exec_lines = ['%autoreload 2']\\n\" \u003e\u003e $HOME/.ipython/profile_default/ipython_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.InteractiveShellApp.exec_lines.append('print(\\\"Warning: disable autoreload in ipython_config.py to improve performance.\\\")')\\n\" \u003e\u003e $HOME/.ipython/profile_default/ipython_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "$HOME/anaconda3/bin/pip install --upgrade https://github.com/mind/wheels/releases/download/tf1.4.1-gpu-cuda91/tensorflow-1.4.1-cp36-cp36m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$HOME/anaconda3/bin/conda install pytorch torchvision cuda90 -c pytorch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$HOME/anaconda3/bin/pip install jupyter-tensorboard"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/uesu"
        },
        {
          "CmdLine": [
            "git clone https://github.com/gpakosz/.tmux.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s -f .tmux/.tmux.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp .tmux/.tmux.conf.local ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/01org/mkl-dnn.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "mkl-dnn"
        },
        {
          "CmdLine": [
            "cd scripts \u0026\u0026 ./prepare_mkl.sh \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "build"
        },
        {
          "CmdLine": [
            "sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/uesu"
        },
        {
          "CmdLine": [
            "rm -r mkl-dnn"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}