{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"cdadmin@clonedeploy.org\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "CLONEDEPLOY_VERSION",
              "Value": "1.4.0"
            },
            {
              "Key": "LOAD_TFTP",
              "Value": "true"
            },
            {
              "Key": "LOAD_SMB",
              "Value": "true"
            },
            {
              "Key": "RW_SMB_PASS",
              "Value": "rwpass"
            },
            {
              "Key": "RO_SMB_PASS",
              "Value": "ropass"
            },
            {
              "Key": "MYSQL_ROOT_PASS",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt install gnupg ca-certificates -y \t\u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \t\u0026\u0026 echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | tee /etc/apt/sources.list.d/mono-official-stable.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \tapache2 \tlibapache2-mod-mono \tliblz4-tool \tmono-devel \tmysql-server \tsamba \ttftpd-hpa \tudpcast \tunzip \twget \tmkisofs \t\u0026\u0026 rm -rf /var/lib/mysql \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -P /tmp \"https://sourceforge.net/projects/clonedeploy/files/Docker/clonedeploy-${CLONEDEPLOY_VERSION}.tar.gz\" \t\u0026\u0026 tar xzf /tmp/clonedeploy-${CLONEDEPLOY_VERSION}.tar.gz -C /usr/src/ \t\u0026\u0026 rm /tmp/clonedeploy-${CLONEDEPLOY_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/clonedeploy \t\t\u0026\u0026 cp clonedeploy.conf /etc/apache2/sites-available/ \t\t\u0026\u0026 a2ensite clonedeploy \t\t\u0026\u0026 mkdir /opt/clonedeploy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo '[cd_share]'; \t\techo 'path = /cd_dp'; \t\techo 'valid users = @cdsharewriters, cd_share_ro'; \t\techo 'create mask = 02775'; \t\techo 'directory mask = 02775'; \t\techo 'guest ok = no'; \t\techo 'writable = yes'; \t\techo 'browsable = yes'; \t\techo 'read list = @cdsharewriters, cd_share_ro'; \t\techo 'write list = @cdsharewriters'; \t\techo 'force create mode = 02775'; \t\techo 'force directory mode = 02775'; \t\techo 'force group = +cdsharewriters'; } \u003e\u003e /etc/samba/smb.conf \t\u0026\u0026 addgroup cdsharewriters \t\u0026\u0026 useradd cd_share_ro --shell=/usr/sbin/nologin --no-create-home \t\u0026\u0026 useradd cd_share_rw --shell=/usr/sbin/nologin --no-create-home -G cdsharewriters \t\u0026\u0026 adduser www-data cdsharewriters"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'TFTP_USERNAME=\"root\"'; \t\techo 'TFTP_DIRECTORY=\"/tftpboot\"'; \t\techo 'TFTP_ADDRESS=\"0.0.0.0:69\"'; \t\techo 'TFTP_OPTIONS=\"-s -vvvv -m /tftpboot/remap\"'; } \u003e /etc/default/tftpd-hpa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "137-139/udp",
            "445/tcp",
            "69/udp",
            "80/tcp",
            "9000-10002/udp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html",
            "/tftpboot",
            "/cd_dp",
            "/var/lib/mysql"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/apache2ctl",
            "-D",
            "FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}