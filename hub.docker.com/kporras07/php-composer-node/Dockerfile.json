{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Maintainer": "Andrew Whalen \u003cgithub@amwhalen.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOCROOT",
              "Value": "/var/www/html/web"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y  curl  apt-transport-https  git  build-essential  libssl-dev  wget  unzip  bzip2  libbz2-dev  zlib1g-dev  mysql-client  libfontconfig  libfreetype6-dev  libjpeg62-turbo-dev  libpng-dev  libicu-dev  libxml2-dev  libldap2-dev  libmcrypt-dev  python-pip  fabric  jq  gnupg  \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y  nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/composer/vendor/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/da290238de6d63faace0343efbdd5aa9354332c5/web/installer  \u0026\u0026 php -r \"     \\$signature = '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410';     \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}  \u0026\u0026 rm /tmp/installer.php  \u0026\u0026 composer --ansi --version --no-interaction  \u0026\u0026 composer global require drush/drush --prefer-dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php wp-cli.phar --info --allow-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x wp-cli.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu     \u0026\u0026 docker-php-ext-install -j$(nproc)       bcmath       bz2       calendar       exif       ftp       gd       gettext       intl       ldap       mysqli       opcache       pcntl       pdo_mysql       shmop       soap       sockets       sysvmsg       sysvsem       sysvshm       zip     \u0026\u0026 pecl install redis apcu     \u0026\u0026 docker-php-ext-enable redis apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e $PHP_INI_DIR/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e $PHP_INI_DIR/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e $PHP_INI_DIR/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone = \\\"America/New_York\\\"\" \u003e $PHP_INI_DIR/conf.d/timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e $PHP_INI_DIR/conf.d/timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"upload_max_filesize = 128M\\npost_max_size = 128M\" \u003e $PHP_INI_DIR/conf.d/00-max_filesize.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite headers expires ssl   \u0026\u0026 sed -i \"/User www-data/c\\User \\$\\{APACHE_RUN_USER\\}\" /etc/apache2/apache2.conf   \u0026\u0026 sed -i \"/Group www-data/c\\Group \\$\\{APACHE_RUN_GROUP\\}\" /etc/apache2/apache2.conf   \u0026\u0026 sed -i \"/DocumentRoot \\/var\\/www\\/html/c\\\\\\tDocumentRoot \\$\\{APACHE_DOCROOT\\}\" /etc/apache2/sites-enabled/000-default.conf   \u0026\u0026 adduser --uid 1000 --gecos 'My OSX User' --disabled-password osxuser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install mkdocs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test.sh",
            "/test.sh"
          ]
        }
      ]
    }
  ]
}