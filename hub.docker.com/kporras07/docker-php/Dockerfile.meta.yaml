MetaArgs: null
Stages:
- BaseName: php:7.3-fpm-alpine
  Commands:
  - Env:
    - Key: XDEBUG_VERSION
      Value: 2.3.3
    Name: env
  - Env:
    - Key: PHP_MEMORY_LIMIT
      Value: 256M
    Name: env
  - Env:
    - Key: PHP_MAX_EXECUTION_TIME
      Value: "120"
    Name: env
  - Env:
    - Key: PHP_POST_MAX_SIZE
      Value: 100M
    Name: env
  - Env:
    - Key: PHP_UPLOAD_MAX_FILESIZE
      Value: 100M
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - apk add --no-cache zlib-dev libzip-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract     && apk --no-cache --update add        libxml2-dev        libpng        libpng-dev        libjpeg-turbo        libjpeg-turbo-dev        freetype-dev        freetype        curl        icu-dev        g++        autoconf        make        rabbitmq-c        rabbitmq-c-dev     &&
      rm -rf /tmp/*     && rm -rf /var/cache/apk/*     && docker-php-ext-configure
      bcmath     && docker-php-ext-configure json     && docker-php-ext-configure
      session     && docker-php-ext-configure ctype     && docker-php-ext-configure
      tokenizer     && docker-php-ext-configure simplexml     && docker-php-ext-configure
      dom     && docker-php-ext-configure mbstring     && docker-php-ext-configure
      zip --with-libzip     && docker-php-ext-configure iconv     && docker-php-ext-configure
      xml     && docker-php-ext-configure opcache     && docker-php-ext-configure
      pdo     && docker-php-ext-configure pdo_mysql     && docker-php-ext-configure
      gd --with-gd --with-freetype-dir=/usr/include/       --with-jpeg-dir=/usr/include/       --with-png-dir=/usr/include/     &&
      NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1)     && docker-php-ext-install
      -j${NPROC} gd     && docker-php-source delete
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install bcmath     json     session     ctype     tokenizer     simplexml     dom     mbstring     zip     iconv     xml     opcache     pdo     pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update     && apk add ca-certificates wget     && update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")     && curl -A
      "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version     &&
      mkdir -p /tmp/blackfire     && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire     &&
      mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so     &&
      printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n"
      > $PHP_INI_DIR/conf.d/blackfire.ini     && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug-2.7.0RC1
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./xdebug.ini
    - /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  - CmdLine:
    - pecl install amqp
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable amqp
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache imagemagick-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .imagick-runtime-deps imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add      go      git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/go
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /root/go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/bin
    Name: env
  - CmdLine:
    - go get github.com/mailhog/mhsendmail
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /root/go/bin/mhsendmail /usr/bin/mhsendmail
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php.ini
    - /usr/local/etc/php/conf.d/docker-php.ini
  - CmdLine:
    - apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing
      gnu-libiconv
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so php
    Name: env
  - CmdLine:
    - rm -rf /tmp/*     && rm -rf /var/cache/apk/*     && rm -rf tmp/*
    Name: run
    PrependShell: true
  From:
    Image: php:7.3-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-fpm-alpine
