MetaArgs: null
Stages:
- BaseName: nvidia/cuda:7.5-cudnn4-devel
  Commands:
  - Maintainer: Craig Citro <craigcitro@google.com>
    Name: maintainer
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         build-essential         curl         git         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         python-numpy         python-pip         software-properties-common         swig         zip         zlib1g-dev         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda-latest-Linux-`uname
      -p`.sh   && bash Miniconda-latest-Linux-`uname -p`.sh -b   && rm Miniconda-latest-Linux-`uname
      -p`.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/miniconda2/bin:$PATH
    Name: env
  - CmdLine:
    - conda create --name keras python=3.5
    Name: run
    PrependShell: true
  - CmdLine:
    - source activate keras   && conda install -y     mkl     h5py     pandas     scikit-learn     networkx     pyyaml     pymongo     smart_open     matplotlib     quandl     ipykernel     jupyter   &&
      python -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /root/.jupyter/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_jupyter.sh
    - /
  - CmdLine:
    - add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get
      install -y openjdk-8-jdk openjdk-8-jre-headless &&     apt-get clean &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "startup --batch" >>/root/.bazelrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "build --spawn_strategy=standalone --genrule_strategy=standalone"     >>/root/.bazelrc
    Name: run
    PrependShell: true
  - Env:
    - Key: BAZELRC
      Value: /root/.bazelrc
    Name: env
  - Env:
    - Key: BAZEL_VERSION
      Value: 0.3.0
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
      &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt
      &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
      &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recurse-submodules https://github.com/tensorflow/tensorflow.git
      &&     cd tensorflow &&     git checkout r0.8 &&     git submodule update --init
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tensorflow
  - Env:
    - Key: CUDA_TOOLKIT_PATH
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: CUDNN_INSTALL_PATH
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: TF_NEED_CUDA
      Value: "1"
    Name: env
  - CmdLine:
    - source activate keras &&     ./configure &&     bazel build -c opt --config=cuda
      tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package
      /tmp/pip &&     pip install --upgrade /tmp/pip/tensorflow-*.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - source activate keras   && pip install git+git://github.com/pykalman/pykalman.git   &&
      pip install git+git://github.com/fchollet/keras.git --no-deps   && pip install
      --no-deps git+https://github.com/lukovkin/hyperopt.git   && pip install git+https://github.com/lukovkin/holidays.py.git   &&
      pip install bdateutil
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /notebook
  - Name: workdir
    Path: /notebook
  - Env:
    - Key: CUDA_PATH
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: OMP_NUM_THREADS
      Value: "8"
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '/notebook/nnt-backend-py/:/notebook/UFCNN/ufcnn:'
    Name: env
  - Name: expose
    Ports:
    - "6006"
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - /bin/bash
    Name: run
    PrependShell: false
  From:
    Image: nvidia/cuda:7.5-cudnn4-devel
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:7.5-cudnn4-devel
