MetaArgs:
- DefaultValue: latest
  Key: BASEIMAGE_VERION
  ProvidedValue: null
  Value: latest
Stages:
- As: lemp-nginx
  BaseName: wolodin/lemp-base:${BASEIMAGE_VERION}
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Volodin Vasiliy <wolodin@vvp24.ru>"'
    - Key: version
      Value: '"1.0.2"'
    - Key: name
      Value: '"lemp-nginx"'
    Name: label
  - Key: UNPRIVILEGUE_PORT_MAPPING_80_ARG
    Name: arg
    Value: '"8080"'
  - Key: UNPRIVILEGUE_PORT_MAPPING_443_ARG
    Name: arg
    Value: '"8443"'
  - Env:
    - Key: UNPRIVILEGUE_PORT_MAPPING_80_ENV
      Value: ${UNPRIVILEGUE_PORT_MAPPING_80_ARG}
    Name: env
  - Env:
    - Key: UNPRIVILEGUE_PORT_MAPPING_443_ENV
      Value: ${UNPRIVILEGUE_PORT_MAPPING_443_ARG}
    Name: env
  - Env:
    - Key: ROOT_USERNAME_ENV
      Value: '"root"'
    Name: env
  - Name: user
    User: ${ROOT_USERNAME_ENV}:${ROOT_USERNAME_ENV}
  - CmdLine:
    - APT_INSTALL="apt-get install -qq --no-install-recommends" &&     apt-get update
      --fix-missing -qq &&         DEBIAN_FRONTEND=noninteractive $APT_INSTALL             nginx             &&         ldconfig
      &&         apt-get clean -qq &&         apt-get autoremove -qq &&         rm
      -rf /var/lib/apt/lists/* /tmp/* ~/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/nginx/
    - /etc/nginx/
  - CmdLine:
    - EDIT_NGINX_CONFIG="find /etc/nginx/ -name '*' -type f -exec " &&     eval "$EDIT_NGINX_CONFIG
      sed -i -e 's@%UNIX_RUN_DIR%@${UNIX_RUN_DIR_ENV}@g' '{}' \;" &&     eval "$EDIT_NGINX_CONFIG
      sed -i -e 's@%USERNAME%@${DOCKER_USERNAME_ENV}@g' '{}' \;" &&     eval "$EDIT_NGINX_CONFIG
      sed -i -e 's@%MAPPING_PORT_80%@${UNPRIVILEGUE_PORT_MAPPING_80_ENV}@g' '{}' \;"
      &&     eval "$EDIT_NGINX_CONFIG sed -i -e 's@%MAPPING_PORT_443%@${UNPRIVILEGUE_PORT_MAPPING_443_ENV}@g'
      '{}' \;"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default &&     chown
      -hR ${DOCKER_USERNAME_ENV}:${DOCKER_USERNAME_ENV} /etc/nginx/sites-available
      &&     chown -hR ${DOCKER_USERNAME_ENV}:${DOCKER_USERNAME_ENV} /etc/nginx/sites-enabled
      &&     chown -hR ${DOCKER_USERNAME_ENV}:${DOCKER_USERNAME_ENV} /var/lib/nginx
      &&     chown -hR ${DOCKER_USERNAME_ENV}:${DOCKER_USERNAME_ENV} /var/log/nginx
      &&     mkdir -p /var/tmp/nginx &&     chown -hR ${DOCKER_USERNAME_ENV}:${DOCKER_USERNAME_ENV}
      /var/tmp/nginx
    Name: run
    PrependShell: true
  - Name: stopsignal
    Signal: SIGTERM
  - Name: user
    User: ${DOCKER_USERNAME_ENV}:${DOCKER_USERNAME_ENV}
  - Name: workdir
    Path: ${DOCKER_WORKDIR_ENV}
  - CmdLine:
    - mkdir -p ${UNIX_RUN_DIR_ENV}/nginx/ &&     mkdir -p logs/nginx/ &&     mkdir
      -p www/ &&     mkdir -p www/default/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./src/web/
    - www/default/
  - Name: expose
    Ports:
    - ${UNPRIVILEGUE_PORT_MAPPING_443_ENV}
    - ${UNPRIVILEGUE_PORT_MAPPING_80_ENV}
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: wolodin/lemp-base:${BASEIMAGE_VERION}
  Name: lemp-nginx
  Platform: ""
  SourceCode: FROM wolodin/lemp-base:${BASEIMAGE_VERION} as lemp-nginx
