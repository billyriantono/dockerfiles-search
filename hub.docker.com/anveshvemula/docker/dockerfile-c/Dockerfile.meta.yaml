MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: '"Anton Petrov" petrov.anton.k@gmail.com'
    Name: maintainer
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get upgrade -y && \tapt-get install -y cmake unzip
      zip nano wget curl git net-tools htop"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y python3 python3-pip && \tpip3 install -U pip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y python3-numpy python3-matplotlib python3-pandas && \tpip
      install scikit-learn && \tpip install hyperopt && \tpip install xgboost"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt &&  \tgit clone --recursive --depth=1 https://github.com/Microsoft/LightGBM
      &&  \tcd LightGBM &&  \tmkdir build &&  \tcd build &&  \tcmake .. &&  \tmake
      -j &&  \tpip install git+https://github.com/ArdalanM/pyLightGBM.git"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip install seaborn && \tpip install ggplot && \tpip install wordcloud"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip install pandas-summary && \tpip install prettypandas && \tpip install tqdm
      && \tpip install openpyxl && \tpip install editdistance && \tpip install h5py"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip install jupyter && \tpip install yapf && \tpip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master
      && \tjupyter contrib nbextension install --user && \tjupyter nbextensions_configurator
      enable --user && \tjupyter nbextension enable --py --sys-prefix widgetsnbextension
      && \tjupyter nbextension enable nbextensions_configurator/tree_tab/main && \tjupyter
      nbextension enable toc2/main && \tjupyter nbextension enable spellchecker/main
      && \tjupyter nbextension enable codefolding/main && \tjupyter nbextension enable
      collapsible_headings/main && \tjupyter nbextension enable init_cell/main &&
      \tjupyter nbextension enable code_prettify/code_prettify && \tjupyter nbextension
      enable table_beautifier/main && \tjupyter nbextension enable chrome-clipboard/main
      && \tjupyter nbextension enable hide_input_all/main && \tjupyter nbextension
      enable python-markdown/main && \tjupyter nbextension enable freeze/main"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/\" | tee -a /etc/apt/sources.list
      && \tgpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 && \tgpg -a --export
      E084DAB9 | apt-key add - && \tapt-get install -y r-base r-base-dev libssl-dev
      libcurl4-openssl-dev && \techo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org';
      options(repos = r);\" > ~/.Rprofile"
    Name: run
    PrependShell: true
  - CmdLine:
    - "Rscript -e \"install.packages('ggplot2')\" && \tRscript -e \"install.packages('caret')\"
      && \tRscript -e \"install.packages('xgboost')\" && \tRscript -e \"install.packages('rpart')\"
      && \tRscript -e \"install.packages('randomForest')\" && \tRscript -e \"install.packages('stringr')\"
      && \tRscript -e \"install.packages(c('lubridate', 'zoo', 'timeDate'))\" && \tRscript
      -e \"install.packages(c('data.table', 'reshape2', 'plyr', 'dplyr', 'tidyr'))\"
      && \tRscript -e \"install.packages(c('curl', 'httr'))\" && \tRscript -e \"install.packages(c('repr',
      'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))\"
      && \tRscript -e \"devtools::install_github('IRkernel/IRkernel')\" && \tRscript
      -e \"IRkernel::installspec(user = FALSE)\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip install bash_kernel && \tpython3 -m bash_kernel.install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip list -o | cut --delimiter=\" \" --fields=1 | xargs --no-run-if-empty pip
      install -U && \tapt-get clean &&     rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /mnt/data
  - Name: expose
    Ports:
    - "27017"
    - "8888"
    - "8889"
    - "8890"
  - CmdLine:
    - jupyter notebook --no-browser --port 8888 --ip=0.0.0.0 --notebook-dir=/mnt/data
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
