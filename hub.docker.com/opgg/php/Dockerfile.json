{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install -y make git wget software-properties-common python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php \u0026\u0026  add-apt-repository -y ppa:nginx/stable \u0026\u0026  wget -O - https://download.newrelic.com/548C16BF.gpg | apt-key add - \u0026\u0026  echo \"deb http://apt.newrelic.com/debian/ newrelic non-free\" \u003e /etc/apt/sources.list.d/newrelic.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install -y supervisor nginx curl \u0026\u0026  DEBIAN_FRONTEND=noninteractive apt-get install -y php7.1-fpm php-redis php-imagick php-igbinary php-geoip php-apcu php-curl php-gd php-zip php-xml php-mbstring php-mysql \u0026\u0026  DEBIAN_FRONTEND=noninteractive apt-get install -y newrelic-php5 newrelic-sysmond"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/php-fpm /run/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerconfigs/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerconfigs/logrotate_nginx.conf",
            "/etc/logrotate.d/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerconfigs/nginx.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "dockerconfigs/php",
            "/etc/php/7.1"
          ]
        },
        {
          "CmdLine": [
            "phpenmod newrelic override"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src"
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026  php -r \"if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \u0026\u0026  php composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026  php -r \"unlink('composer-setup.php');\" \u0026\u0026  composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-n"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}