MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: Description
      Value: '"ROS melodic compiled for python3 in Ubuntu 18.04"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - printf '\n\n Applying Ubuntu Settings.. \n\n'
    Name: run
    PrependShell: true
  - Key: shell
    Name: arg
    Value: /bin/bash
  - Key: pathToAppDir
    Name: arg
    Value: '"/opt/SimulationManager"'
  - Key: ros_ws
    Name: arg
    Value: '"${pathToAppDir}/SimulationManager/ROS/catkin_build_ws"'
  - CmdLine:
    - mv /bin/sh /bin/sh-old && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: America/Sao_Paulo
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y     apt-utils     python3.6 python-pip
      python3-pip     git     lsb-release mesa-utils     software-properties-common
      locales x11-apps     gedit gedit-plugins nano     screen tree     sudo ssh synaptic     wget
      curl unzip htop     gdb valgrind     libcanberra-gtk*     xsltproc     libgtest-dev     iputils-ping
      iproute2 && rm -rf /var/lib/apt/lists/* && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - printf '\n\n Installing ROS.. \n\n'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U netifaces gnupg empy rospkg numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y     sip-dev     pyqt5-dev     python3-sip-dev     pyqt5-dev-tools     python-catkin-pkg
      && rm -rf /var/lib/apt/lists/* && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U rosdep rosinstall-generator wstool queuelib nose pyros_setup
      pyyaml catkin-tools rostful opencv-contrib-python defusedxml
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U catkin_pkg
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y     python3-rosinstall build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 uninstall vcstools -y
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b mock_server_tar_test https://github.com/tkruse/vcstools.git &&
      pip3 install ./vcstools/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /etc/ros/rosdep/sources.list.d/* && rosdep init && rosdep update
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/lib/python3.6/dist-packages /usr/local/lib/python3.6/site-packages
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/catkin_ws && cd ~/catkin_ws && rosinstall_generator desktop --rosdistro
      melodic --deps --tar > melodic-desktop.rosinstall && wstool init -j8 src melodic-desktop.rosinstall
      && rosdep install --from-paths src --ignore-src --rosdistro melodic -y && export
      PYTHONPATH=/usr/local/lib/python3.6/dist-packages && ./src/catkin/bin/catkin_make_isolated
      --install --install-space /opt/ros/melodic -DPYTHON_EXECUTABLE=/usr/bin/python3
      -DCMAKE_BUILD_TYPE=Release
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /opt/ros/melodic/setup.sh" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - printf '\n\n Installing SimulationManager.. \n\n'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${ros_ws}/src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ros_ws}
  - CmdLine:
    - /bin/bash -c ". /opt/ros/melodic/setup.sh && rm -rf /devel /build /logs /src/CMakeLists.txt
      && cd src && catkin_init_workspace ${ros_ws}/src&& cd .. && catkin config -DPYTHON_EXECUTABLE=/usr/bin/python3
      -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so
      && catkin config --install && catkin_make"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source ${ros_ws}/devel/setup.bash" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c ". ${ros_ws}/devel/setup.bash"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
