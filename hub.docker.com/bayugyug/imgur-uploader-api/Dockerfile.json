{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:wheezy-scm",
      "SourceCode": "FROM buildpack-deps:wheezy-scm",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:wheezy-scm"
      },
      "Commands": [
        {
          "Maintainer": "bayugyug\u003cbayugyug@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_SHA256",
              "Value": "43ad621c9b014cde8db17393dc108378d37bc853aa351a6c74bf6432c1bbd182"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSRC",
              "Value": "$GOPATH/src"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends make curl git \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026     curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \u0026\u0026 \techo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \u0026\u0026 \ttar -C /usr/local -xzf golang.tar.gz \u0026\u0026 \trm -f golang.tar.gz \u0026\u0026     mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \"$GOSRC/github.com/bayugyug\" \u0026\u0026     chmod -R 777 \"$GOPATH\" \u0026\u0026     cd $GOSRC/github.com/bayugyug \u0026\u0026     git clone https://github.com/bayugyug/imgur-uploader-api.git \u0026\u0026     cd $GOSRC/github.com/bayugyug/imgur-uploader-api \u0026\u0026     go get -v \u0026\u0026     go build -tags netgo -installsuffix netgo -installsuffix cgo -v -ldflags \"-s -w -X main.pBuildTime=`date -u +%Y%m%d.%H%M%S`\" . \u0026\u0026     cd $GOSRC \u0026\u0026     go install github.com/bayugyug/imgur-uploader-api \u0026\u0026     cd $GOSRC/github.com/bayugyug/imgur-uploader-api  \u0026\u0026     cp -f Docker/cleanup.sh $GOPATH/bin/ \u0026\u0026     cp -f Docker/wheezy/go-wrapper /usr/local/bin/ \u0026\u0026     chmod +x $GOPATH/bin/* \u0026\u0026     $GOPATH/bin/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "imgur-uploader-api"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}