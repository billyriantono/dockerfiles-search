MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Maintainer: Zoran Kikic <zoran@kikic.name>
    Name: maintainer
  - Env:
    - Key: JAVA_SE_VERSION_MAJOR
      Value: "10"
    - Key: JAVA_SE_VERSION_MINOR
      Value: "0"
    - Key: JAVA_SE_VERSION_SECURITY
      Value: "2"
    - Key: JAVA_SE_VERSION_PATCH
      Value: "13"
    - Key: JAVA_DOWNLOAD_HASH
      Value: 19aef61b38124481863b1413dce1855f
    - Key: GLIBC_REPO
      Value: https://github.com/sgerrand/alpine-pkg-glibc
    - Key: GLIBC_VERSION
      Value: 2.28-r0
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk
    Name: env
  - Env:
    - Key: PATH
      Value: ${JAVA_HOME}/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - set -ex &&     apk -U upgrade &&     apk add libstdc++ curl ca-certificates
      bash java-cacerts &&     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION}
      glibc-i18n-${GLIBC_VERSION}; do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk
      -o /tmp/${pkg}.apk; done &&     apk add --allow-untrusted /tmp/*.apk &&     rm
      -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --quiet --force --inputfile
      POSIX --charmap UTF-8 C.UTF-8 || true ) &&     echo "export LANG=${LANG}" >
      /etc/profile.d/locale.sh &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://www.archlinux.org/packages/core/x86_64/zlib/download" -O /tmp/libz.tar.xz
      &&     mkdir -p /tmp/libz &&     tar -xf /tmp/libz.tar.xz -C /tmp/libz &&     cp
      /tmp/libz/usr/lib/libz.so.1.2.11 /usr/glibc-compat/lib &&     /usr/glibc-compat/sbin/ldconfig
      &&     rm -rf /tmp/libz /tmp/libz.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir /opt &&     curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"
      -o /tmp/java.tar.gz     http://download.oracle.com/otn-pub/java/jdk/${JAVA_SE_VERSION_MAJOR}.${JAVA_SE_VERSION_MINOR}.${JAVA_SE_VERSION_SECURITY}+${JAVA_SE_VERSION_PATCH}/${JAVA_DOWNLOAD_HASH}/serverjre-${JAVA_SE_VERSION_MAJOR}.${JAVA_SE_VERSION_MINOR}.${JAVA_SE_VERSION_SECURITY}_linux-x64_bin.tar.gz
      &&     JAVA_PACKAGE_SHA256=$(curl -sSL https://www.oracle.com/webfolder/s/digest/${JAVA_SE_VERSION_MAJOR}-${JAVA_SE_VERSION_MINOR}-${JAVA_SE_VERSION_SECURITY}checksum.html
      | grep -w "serverjre-${JAVA_SE_VERSION_MAJOR}.${JAVA_SE_VERSION_MINOR}.${JAVA_SE_VERSION_SECURITY}_linux-x64_bin\.tar\.gz"
      | grep -Eo ''(sha256: )[^<]+'' | cut -d: -f2 | xargs) &&     echo "${JAVA_PACKAGE_SHA256}  /tmp/java.tar.gz"
      > /tmp/java.tar.gz.sha256 &&     sha256sum -c /tmp/java.tar.gz.sha256 &&     tar
      -xzf /tmp/java.tar.gz -C /opt &&     ln -s ${JAVA_HOME}-${JAVA_SE_VERSION_MAJOR}.${JAVA_SE_VERSION_MINOR}.${JAVA_SE_VERSION_SECURITY}
      ${JAVA_HOME} &&     sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/
      $JAVA_HOME/lib/security/default.policy &&     apk del curl glibc-i18n &&     rm
      -rf /tmp/* /var/cache/apk/* &&     ln -sf /etc/ssl/certs/java/cacerts $JAVA_HOME/lib/security/cacerts
      &&     echo ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
