{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Markus Fix \u003clispmeister@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y     ca-certificates     clang-3.6     curl     git     libncurses5-dev     libssl-dev     llvm-3.6     llvm-3.6-dev     make     --no-install-recommends \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "clang-3.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "clang++-3.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SL -o /usr/src/repo.tbz2 ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre2-10.20.tar.bz2 \u0026\u0026     tar xf /usr/src/repo.tbz2 -C /usr/src \u0026\u0026     ln -s /usr/src/*pcre* /usr/src/pcre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/pcre"
        },
        {
          "CmdLine": [
            "./configure --prefix=/usr \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data/pony"
        },
        {
          "CmdLine": [
            "git clone https://github.com/Sendence/ponyc.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "ponyc"
        },
        {
          "Env": [
            {
              "Key": "PONY_TAG",
              "Value": "'sendence-0.1.1'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git checkout $PONY_TAG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"/usr/local/lib:$LD_LIBRARY_PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "make -j4 config=release test \u0026\u0026     ./build/release/ponyc examples/helloworld \u0026\u0026     ./helloworld"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j4 test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /data/pony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "runasuser.sh",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /root/runasuser.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/root/runasuser.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}