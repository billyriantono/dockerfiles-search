MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - "apt-get update \t&& apt-get install -y php-cli php-mcrypt php-curl nodejs npm
      apt-transport-https ca-certificates \t&& php -r \"copy('https://getcomposer.org/installer',
      'composer-setup.php');\" \t&& php composer-setup.php -- --install-dir=/bin --filename=composer
      \t&& php -r \"unlink('composer-setup.php');\" \t&& ln -s /usr/bin/nodejs /usr/bin/node
      \t&& npm install -g gulp bower \t&& apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \t&& echo \"deb https://apt.dockerproject.org/repo
      ubuntu-xenial main\" > /etc/apt/sources.list.d/docker.list \t&& apt-get update
      \t&& apt-get install -y docker-engine"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y php-mbstring php-dom php-zip
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y unzip curl \t&& curl \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\"
      -o \"awscli-bundle.zip\" \t&& unzip awscli-bundle.zip \t&& ./awscli-bundle/install
      -i /usr/local/aws -b /usr/local/bin/aws"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_HOST
      Value: '"tcp://docker:2375"'
    Name: env
  - Name: volume
    Volumes:
    - /var/run/docker.sock
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
