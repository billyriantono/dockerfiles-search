{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "cogniteev/flume:1.6.0",
      "SourceCode": "FROM cogniteev/flume:1.6.0",
      "Platform": "",
      "From": {
        "Image": "cogniteev/flume:1.6.0"
      },
      "Commands": [
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "arch=\"$(dpkg --print-architecture)\"     \u0026\u0026 set -x     \u0026\u0026 curl -o /usr/local/bin/gosu -fSL \"https://github.com/tianon/gosu/releases/download/1.7/gosu-$arch\"     \u0026\u0026 curl -o /usr/local/bin/gosu.asc -fSL \"https://github.com/tianon/gosu/releases/download/1.7/gosu-$arch.asc\"     \u0026\u0026 gpg --verify /usr/local/bin/gosu.asc     \u0026\u0026 rm /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y apt-transport-https ca-certificates     \u0026\u0026 apt-key adv         --keyserver hkp://p80.pool.sks-keyservers.net:80         --recv-keys 58118E89F3A912897C070ADBF76221572C52609D     \u0026\u0026 echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main'         \u003e /etc/apt/sources.list.d/docker.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y docker-engine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/*",
            "/var/src/agent/conf/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/*",
            "/var/src/scripts/"
          ]
        },
        {
          "Env": [
            {
              "Key": "AGENT_ROOT_DIR",
              "Value": "/var/src/agent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AGENT_CONFIG_DIR",
              "Value": "${AGENT_ROOT_DIR}/conf"
            }
          ],
          "Name": "env"
        },
        {
          "Expression": "RUN mkdir -p /var/src/agent/extra-jars/",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD extra-jars/* /var/src/agent/extra-jars/",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD extra-src /var/src/agent/extra-src/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN /var/src/scripts/10-build-extra-src",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD conf /var/src/agent/conf",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "/var/src/scripts/20-start-agent"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}