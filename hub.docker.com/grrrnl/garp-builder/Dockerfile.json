{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:8-stretch",
      "SourceCode": "FROM node:8-stretch",
      "Platform": "",
      "From": {
        "Image": "node:8-stretch"
      },
      "Commands": [
        {
          "Maintainer": "David Spreekmeester \u003cdavid@grrr.nl\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_HOME",
          "Name": "arg",
          "Value": "/home/builder"
        },
        {
          "Env": [
            {
              "Key": "APPLICATION_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:./vendor/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "composer:latest",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/builder \u0026\u0026     apt-get -y update \u0026\u0026     apt-get -y install build-essential apt-utils git vim \u0026\u0026     apt-get -y install mysql-client \u0026\u0026     apt-get -y install php-cli php-mbstring php-xml php-curl \u0026\u0026     apt-get -y install ruby-dev rubygems-integration \u0026\u0026     gem install scss_lint \u0026\u0026     gem install semver \u0026\u0026     npm i -g gulp jshint gulp-load-plugins \u0026\u0026     npm link gulp \u0026\u0026     gem install net-ssh -v 2.9.2 \u0026\u0026     gem install capistrano \u0026\u0026     apt-get -y install python python-pip \u0026\u0026     pip install awscli \u0026\u0026     ln -s $BUILD_HOME/build/gulpfile.js $BUILD_HOME/gulpfile.js \u0026\u0026     ln -s $BUILD_HOME/build/package.json $BUILD_HOME/package.json \u0026\u0026     ln -s $BUILD_HOME/build/composer.json $BUILD_HOME/composer.json \u0026\u0026     ln -s $BUILD_HOME/build/Makefile $BUILD_HOME/Makefile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$BUILD_HOME"
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3001"
          ]
        }
      ]
    }
  ]
}