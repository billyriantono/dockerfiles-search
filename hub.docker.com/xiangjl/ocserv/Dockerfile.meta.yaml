MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Maintainer: XiangJL <xjl-tommy@qq.com>
    Name: maintainer
  - Env:
    - Key: OC_VERSION
      Value: 0.12.2
    Name: env
  - CmdLine:
    - "buildDeps=\" \t\tcurl \t\tg++ \t\tgnutls-dev \t\tgpgme \t\tlibev-dev \t\tlibnl3-dev
      \t\tlibseccomp-dev \t\tlinux-headers \t\tlinux-pam-dev \t\tlz4-dev \t\tmake
      \t\treadline-dev \t\ttar \t\txz \t\"; \tset -x \t&& mkdir -p /docker \t&& cd
      /docker \t&& apk add --update --virtual .build-deps $buildDeps \t&& curl -SL
      \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz\" -o ocserv.tar.xz
      \t&& curl -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz.sig\"
      -o ocserv.tar.xz.sig \t&& gpg --keyserver pgp.mit.edu --recv-key 7F343FA7 \t&&
      gpg --keyserver pgp.mit.edu --recv-key 96865171 \t&& gpg --verify ocserv.tar.xz.sig
      \t&& mkdir -p /usr/src/ocserv \t&& tar -xf ocserv.tar.xz -C /usr/src/ocserv
      --strip-components=1 \t&& rm ocserv.tar.xz* \t&& cd /usr/src/ocserv \t&& ./configure
      \t&& make \t&& make install \t&& mkdir -p /etc/ocserv \t&& mkdir -p /docker/config
      \t&& cp /usr/src/ocserv/doc/sample.config /docker/config/ocserv.conf \t&& cd
      / \t&& rm -fr /usr/src/ocserv \t&& runDeps=\"$( \t\tscanelf --needed --nobanner
      /usr/local/sbin/ocserv \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\"
      $2 }' \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t\t)\" \t&& apk
      add --virtual .run-deps $runDeps gnutls-utils iptables \t&& apk del .build-deps
      \t&& rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-ocertsmgr.sh
    - /docker/ocertsmgr.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - groupinfo.txt
    - /tmp/
  - CmdLine:
    - "set -x \t&& sed -i 's/\\.\\/sample\\.passwd/\\/etc\\/ocserv\\/ocpasswd/' /docker/config/ocserv.conf
      \t&& sed -i 's/\\(max-same-clients = \\)2/\\110/' /docker/config/ocserv.conf
      \t&& sed -i 's/\\.\\.\\/tests/\\/etc\\/ocserv/' /docker/config/ocserv.conf \t&&
      sed -i 's/#\\(compression.*\\)/\\1/' /docker/config/ocserv.conf \t&& sed -i
      's/^#enable-auth = \"certificate\"/enable-auth = \"certificate\"/' /docker/config/ocserv.conf
      \t&& sed -i 's/^cert-user-oid = 0.9.2342.19200300.100.1.1/cert-user-oid = 2.5.4.3/'
      /docker/config/ocserv.conf \t&& sed -i 's/#cert-group-oid/cert-group-oid/' /docker/config/ocserv.conf
      \t&& sed -i 's/^#crl = \\/path\\/to\\/crl.pem/crl = \\/etc\\/ocserv\\/certs\\/crl.pem/'
      /docker/config/ocserv.conf \t&& sed -i '/^ipv4-network = /{s/192.168.1.0/192.168.99.0/}'
      /docker/config/ocserv.conf \t&& sed -i 's/192.168.1.2/8.8.8.8/' /docker/config/ocserv.conf
      \t&& sed -i 's/^route/#route/' /docker/config/ocserv.conf \t&& sed -i 's/^no-route/#no-route/'
      /docker/config/ocserv.conf \t&& sed -i '/\\[vhost:www.example.com\\]/,$d' /docker/config/ocserv.conf
      \t&& ln -sf /docker/ocertsmgr.sh /usr/local/bin/ocertsmgr \t&& mkdir -p /docker/config/config-per-group
      \t&& cat /tmp/groupinfo.txt >> /docker/config/ocserv.conf \t&& rm -fr /tmp/groupinfo.txt"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /etc/ocserv
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - all-route.txt
    - /docker/config/config-per-group/All
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cn-no-route.txt
    - /docker/config/config-per-group/Route
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker/startup.sh
  - CmdLine:
    - /docker/startup.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - ocserv
    - -c
    - /etc/ocserv/ocserv.conf
    - -f
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
