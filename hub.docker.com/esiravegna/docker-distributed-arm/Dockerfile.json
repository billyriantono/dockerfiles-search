{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "resin/armv7hf-debian",
      "SourceCode": "FROM resin/armv7hf-debian",
      "Platform": "",
      "From": {
        "Image": "resin/armv7hf-debian"
      },
      "Commands": [
        {
          "Maintainer": "Esteban Siravegna \u003cesiravegna@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "cross-build-start"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get update -yqq  \u0026\u0026 apt-get install -yqq   wget   bzip2   git   libglib2.0-0   libfreetype6-dev   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /work/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BASICUSER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "wget -O miniconda.sh   https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-armv7l.sh   \u0026\u0026 bash miniconda.sh -b -p /work/miniconda   \u0026\u0026 rm miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/work/bin:/work/miniconda/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda update -y python conda \u0026\u0026   conda install -y python=3.6 -c rpi \u0026\u0026   conda install -y --no-deps -c rpi   freetype   cycler   libpng   pyparsing   pytz   python-dateutil   networkx   pillow   six   \u0026\u0026 conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y -c rpi   pip   setuptools   notebook   terminado   psutil   numpy   scipy   pandas   bokeh   matplotlib   scikit-image   scikit-learn   \u0026\u0026 conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "."
          ]
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt \u0026\u0026 rm -rf ~/.cache/pip/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-notebook.sh",
            "./bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-dworker.sh",
            "./bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-dscheduler.sh",
            "./bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "examples",
            "examples"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "matplotlibrc",
            "/work/.config/matplotlib/matplotlibrc"
          ]
        },
        {
          "Env": [
            {
              "Key": "MATPLOTLIBRC",
              "Value": "/work/.config/matplotlib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python -c \"import matplotlib.pyplot\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "chown $BASICUSER:users -R /work/.config /work/examples /work/bin /work/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cross-build-end"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}