{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "build-arg-user"
        },
        {
          "Env": [
            {
              "Key": "admin",
              "Value": "${user}"
            },
            {
              "Key": "hadoop",
              "Value": "\"hadoop-3.1.1\""
            },
            {
              "Key": "spark",
              "Value": "'spark-3.0.0-SNAPSHOT-bin-custom-spark'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "rc_file",
              "Value": "\"/home/${admin}/.bashrc\""
            },
            {
              "Key": "hadoop_home",
              "Value": "\"/home/${admin}/${hadoop}\""
            },
            {
              "Key": "spark_install_path",
              "Value": "\"/home/${admin}/${spark}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "hadoop_conf_dir",
              "Value": "\"${hadoop_home}/etc/hadoop\""
            },
            {
              "Key": "export_target",
              "Value": "\"${hadoop_home}/hadoop.env\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update; \tapt-get install -y openjdk-8-jdk coreutils vim sudo; \tuseradd -m -p \"admin\" -s /bin/bash ${admin}; \tusermod -aG sudo ${admin}; \techo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "user_setup",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar -C /home/${admin}/ -xzvf /tmp/${hadoop}.tar.gz; \ttar -C /home/${admin}/ -xzvf /tmp/${spark}.tgz; \ttouch ${rc_file} ${export_target}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export HADOOP_HOME=${hadoop_home}\" \u003e\u003e ${export_target}; \techo \"export HADOOP_COMMON_HOME=${hadoop_home}\" \u003e\u003e ${export_target}; \techo \"export HADOOP_CONF_DIR=${hadoop_conf_dir}\" \u003e\u003e ${export_target}; \techo \"export HADOOP_HDFS_HOME=${hadoop_home}\" \u003e\u003e ${export_target}; \techo \"export HADOOP_MAPRED_HOME=${hadoop_home}\" \u003e\u003e ${export_target}; \techo \"export HADOOP_YARN_HOME=${hadoop_home}\" \u003e\u003e ${export_target}; \techo 'export PATH=$HADOOP_HOME/bin:$PATH' \u003e\u003e ${export_target}; \techo 'export LD_LIBRARY_PATH=$HADOOP_HOME/lib/native:$LD_LIBRARY_PATH' \u003e\u003e ${export_target}; \techo 'export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))' \u003e\u003e ${export_target}; \techo 'export CLASSPATH=$(hadoop classpath --glob)' \u003e\u003e ${export_target}; \techo \"export SPARK_HOME=${spark_install_path}\" \u003e\u003e ${export_target}; \techo 'export PATH=$SPARK_HOME/bin:$PATH' \u003e\u003e ${export_target}; \techo \"source ${hadoop_home}/hadoop.env\" \u003e\u003e ${rc_file}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf ${hadoop_conf_dir}/* ${spark_install_path}/conf/*; \tcp /tmp/hadoop_conf/* ${hadoop_conf_dir}/; \tcp /tmp/spark_conf/* ${spark_install_path}/conf/; \trm -rf /tmp/*; \tchown -R ${admin}:${admin} ${hadoop_home} ${spark_install_path}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${admin}"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-l"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}