MetaArgs: null
Stages:
- BaseName: adoptopenjdk/openjdk8:alpine
  Commands:
  - Env:
    - Key: JIRA_HOME
      Value: /var/atlassian/jira
    Name: env
  - Env:
    - Key: JIRA_INSTALL_DIR
      Value: /opt/atlassian/jira
    Name: env
  - Env:
    - Key: RUN_USER
      Value: jira
    Name: env
  - Env:
    - Key: RUN_GROUP
      Value: jira
    Name: env
  - Env:
    - Key: RUN_UID
      Value: "2001"
    Name: env
  - Env:
    - Key: RUN_GID
      Value: "2001"
    Name: env
  - Env:
    - Key: ATL_SSLENABLED
      Value: '''False'''
    Name: env
  - Name: workdir
    Path: $JIRA_HOME
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8443"
  - CmdLine:
    - /entrypoint.py
    Name: cmd
    PrependShell: false
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apk add --no-cache ca-certificates wget curl openssh bash procps openssl perl
      ttf-dejavu tini python3 py3-jinja2 tzdata tomcat-native
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/lib/libfontconfig.so.1 /usr/lib/libfontconfig.so     && ln -s /lib/libuuid.so.1
      /usr/lib/libuuid.so.1     && ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib
    Name: env
  - Key: JIRA_VERSION
    Name: arg
    Value: 8.3.4
  - Key: DOWNLOAD_URL
    Name: arg
    Value: https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-${JIRA_VERSION}.tar.gz
  - CmdLine:
    - "set -eux; \tgetent group ${RUN_GROUP} || addgroup -g ${RUN_GID} -S ${RUN_GROUP};
      \tgetent passwd ${RUN_USER} || adduser --uid ${RUN_UID}  -S ${RUN_USER}  -G
      ${RUN_GROUP} -s \"/bin/bash\";"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x   && mkdir -p                                     ${JIRA_INSTALL_DIR}
      \  && curl -L --silent                             ${DOWNLOAD_URL} | tar -xz
      --strip-components=1 -C \"${JIRA_INSTALL_DIR}\"   && rm -f                   \t\t\t\t
      \             \"${JIRA_INSTALL_DIR}/lib/postgresql-9.4.1212.jar\"   && curl
      -Ls                \t\t\t\t              \"https://jdbc.postgresql.org/download/postgresql-42.2.9.jar\"
      -o \"${JIRA_INSTALL_DIR}/lib/postgresql-42.2.9.jar\"   && chmod -R \"u=rwX,g=rX,o=rX\"
      \                  ${JIRA_INSTALL_DIR}/   && chown -R root.                               ${JIRA_INSTALL_DIR}/
      \  && chown -R ${RUN_USER}:${RUN_GROUP}            ${JIRA_INSTALL_DIR}/logs
      \  && chown -R ${RUN_USER}:${RUN_GROUP}            ${JIRA_INSTALL_DIR}/temp
      \  && chown -R ${RUN_USER}:${RUN_GROUP}            ${JIRA_INSTALL_DIR}/work
      \    && sed -i -e 's/^JVM_SUPPORT_RECOMMENDED_ARGS=\"\"$/: \\${JVM_SUPPORT_RECOMMENDED_ARGS:=\"\"}/g'
      ${JIRA_INSTALL_DIR}/bin/setenv.sh   && sed -i -e 's/^JVM_\\(.*\\)_MEMORY=\"\\(.*\\)\"$/:
      \\${JVM_\\1_MEMORY:=\\2}/g' ${JIRA_INSTALL_DIR}/bin/setenv.sh     && touch /etc/container_id
      \  && chown ${RUN_USER}:${RUN_GROUP}               /etc/container_id   && chown
      -R ${RUN_USER}:${RUN_GROUP}            ${JIRA_HOME}"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${JIRA_HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.py
    - shared-components/image/entrypoint_helpers.py
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shared-components/support
    - /opt/atlassian/support
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/*
    - /opt/atlassian/etc/
  - CmdLine:
    - chmod +x /entrypoint.py
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /entrypoint_helpers.py
    Name: run
    PrependShell: true
  From:
    Image: adoptopenjdk/openjdk8:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM adoptopenjdk/openjdk8:alpine
