{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Brint O'Hearn \u003cbrintly@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_MACHINE_VERSION",
              "Value": "0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORKON_HOME",
              "Value": "/home/user/.virtualenvs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RBENV_VERSION",
              "Value": "2.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026   apk upgrade \u0026\u0026   apk add --no-cache build-base                      linux-headers                      readline-dev                      zlib-dev                      openssl                      openssl-dev                      vim                      zsh                      bash                      curl                      openssh-client                      ca-certificates                      file                      lftp \u0026\u0026   adduser -D -s /bin/zsh user \u0026\u0026   apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --repository  http://dl-cdn.alpinelinux.org/alpine/edge/community docker go \u0026\u0026   curl -L https://github.com/docker/machine/releases/download/v${DOCKER_MACHINE_VERSION}/docker-machine-`uname -s`-`uname -m` \u003e/usr/local/bin/docker-machine \u0026\u0026   chmod +x /usr/local/bin/docker-machine \u0026\u0026   apk --update add py2-pip py-yaml \u0026\u0026   pip install -U pip virtualenv \u0026\u0026   rm -rf `find / -regex '.*\\.py[co]' -or -name apk`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/user/.rbenv/bin:/home/user/.virtualenvs/user/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".zshrc",
            "/home/user/.zshrc"
          ]
        },
        {
          "CmdLine": [
            "git clone git://github.com/robbyrussell/oh-my-zsh.git /home/user/.oh-my-zsh \u0026\u0026   mkdir -p $WORKON_HOME \u0026\u0026   virtualenv /home/user/.virtualenvs/user \u0026\u0026   source /home/user/.virtualenvs/user/bin/activate \u0026\u0026   pip install -U docker-compose==${DOCKER_COMPOSE_VERSION} awscli \u0026\u0026   git clone https://github.com/rbenv/rbenv.git /home/user/.rbenv \u0026\u0026   git clone https://github.com/sstephenson/ruby-build.git /home/user/.rbenv/plugins/ruby-build \u0026\u0026   rbenv install $RBENV_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/user"
        },
        {
          "CmdLine": [
            "/bin/zsh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}