{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Ilya Kovalenko \u003cagentsib@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'deb http://archive.ubuntu.com/ubuntu/ xenial-security multiverse' \u003e\u003e /etc/apt/sources.list \u0026\u0026     echo 'deb-src http://archive.ubuntu.com/ubuntu/ xenial-security multiverse' \u003e\u003e /etc/apt/sources.list \u0026\u0026     echo 'deb http://archive.ubuntu.com/ubuntu/ xenial multiverse' \u003e\u003e /etc/apt/sources.list \u0026\u0026     echo 'deb-src http://archive.ubuntu.com/ubuntu/ xenial multiverse' \u003e\u003e /etc/apt/sources.list \u0026\u0026     apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y --force-yes dist-upgrade \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https wget vim cabextract libmspack0 xfonts-75dpi xvfb xz-utils curl supervisor git unzip     php php-fpm php-zip php-imagick libapache2-mod-php apache2 libapache2-mod-rpaf libapache2-mod-xsendfile \u0026\u0026     echo 'ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true' | debconf-set-selections \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y ttf-mscorefonts-installer \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y install flashplugin-installer \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y install wkhtmltopdf \u0026\u0026      apt-get clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026      a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_files/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_files/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_files/apache-host.conf",
            "/etc/apache2/sites-available/000-default.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "web",
            "/var/www/shot/web"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "composer.json",
            "/var/www/shot/composer.json"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "composer.lock",
            "/var/www/shot/composer.lock"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "cd /var/www/shot \u0026\u0026     curl -o installer https://getcomposer.org/installer \u0026\u0026     php installer \u0026\u0026     rm installer \u0026\u0026     php composer.phar install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBUG",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENABLE_PLUGINS",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROCESS_WAIT_TIME",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/shot"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/shot/cache"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}