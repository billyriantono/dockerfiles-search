MetaArgs:
- DefaultValue: fsbi/jupyter:analytics-base
  Key: BASE_CONTAINER
  ProvidedValue: null
  Value: fsbi/jupyter:analytics-base
Stages:
- BaseName: $BASE_CONTAINER
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     gnupg2 curl
      ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
      | apt-key add - &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove
      -y curl &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 10.2.89
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 10-2=$CUDA_VERSION-1
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     cuda-cudart-$CUDA_PKG_VERSION     cuda-compat-10-2
      &&     ln -s cuda-10.2 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=10.2 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=396,driver<397
        brand=tesla,driver>=410,driver<411"'
    Name: env
  - CmdLine:
    - pip install --no-cache-dir     fastai     torch     torchvision     nltk     keras     tensorflow-gpu
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  From:
    Image: $BASE_CONTAINER
  Name: ""
  Platform: ""
  SourceCode: FROM $BASE_CONTAINER
