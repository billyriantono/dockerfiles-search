MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/init-fake.conf
    - /etc/init/fake-container-events.conf
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     apt-get update     && apt-get install -y       openssh-server       sudo       curl       gdebi-core       sshpass       cron       netcat       net-tools       crudini       uuid-runtime       apache2-utils       bash-completion
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-divert /etc/bash.bashrc &&     sed -i '/^# enable bash completion/,/^#
      sudo hint/{//p;//d;s/^#//}' /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "#!/bin/sh\nexit 101\n" > /usr/sbin/policy-rc.d     && rm /sbin/initctl;
      dpkg-divert --rename --remove /sbin/initctl     && locale-gen en_US.UTF-8 &&
      update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - '/usr/sbin/update-rc.d -f ondemand remove;   for f in     /etc/init/u*.conf     /etc/init/mounted-dev.conf     /etc/init/mounted-proc.conf     /etc/init/mounted-run.conf     /etc/init/mounted-tmp.conf     /etc/init/mounted-var.conf     /etc/init/hostname.conf     /etc/init/networking.conf     /etc/init/tty*.conf     /etc/init/plymouth*.conf     /etc/init/hwclock*.conf     /etc/init/module*.conf  ;
      do     dpkg-divert --local --rename --add "$f";   done;   echo ''# /lib/init/fstab:
      cleared out for bare-bones Docker'' > /lib/init/fstab'
    Name: run
    PrependShell: true
  - Key: ST2_REPO
    Name: arg
    Value: stable
  - CmdLine:
    - curl -s https://packagecloud.io/install/repositories/StackStorm/${ST2_REPO}/script.deb.sh
      | sudo bash
    Name: run
    PrependShell: true
  - Key: CIRCLE_SHA1
    Name: arg
    Value: null
  - Key: CIRCLE_BUILD_URL
    Name: arg
    Value: null
  - Key: CIRCLE_PROJECT_USERNAME
    Name: arg
    Value: null
  - Key: CIRCLE_PROJECT_REPONAME
    Name: arg
    Value: null
  - Key: ST2_TAG
    Name: arg
    Value: null
  - Key: ST2_VERSION
    Name: arg
    Value: null
  - Key: ST2WEB_VERSION
    Name: arg
    Value: null
  - Key: ST2MISTRAL_VERSION
    Name: arg
    Value: null
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/install.sh
    - /install.sh
  - CmdLine:
    - /install.sh --user=st2admin --password=password
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - && sudo apt-get
      install -y st2chatops && echo manual | sudo tee /etc/init/st2chatops.override
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/start on filesystem and net-device-up IFACE!=lo/start on runlevel
      \[2345\]/' /etc/init/st2*.conf     && sed -i 's/stop on starting rc RUNLEVEL=\[016\]/stop
      on runlevel \[!2345\]/' /etc/init/st2*.conf     && sed -i 's/start on filesystem
      and net-device-up IFACE!=lo/start on runlevel \[2345\]/' /etc/init/mistral.conf     &&
      sed -i 's/stop on starting rc RUNLEVEL=\[016\]/stop on runlevel \[!2345\]/'
      /etc/init/mistral.conf     && sed -i '/start mistral-api/i\  /opt/stackstorm/mistral/bin/mistral-db-manage
      --config-file /etc/mistral/mistral.conf upgrade head\n  /opt/stackstorm/mistral/bin/mistral-db-manage
      --config-file /etc/mistral/mistral.conf populate\n' /etc/init/mistral.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/st2/keys     && st2-generate-symmetric-crypto-key --key-path /etc/st2/keys/datastore_key.json     &&
      usermod -a -G st2 st2 && chgrp st2 /etc/st2/keys && chmod o-r /etc/st2/keys     &&
      chgrp st2 /etc/st2/keys/datastore_key.json && chmod o-r /etc/st2/keys/datastore_key.json     &&
      crudini --set /etc/st2/st2.conf keyvalue encryption_key_path /etc/st2/keys/datastore_key.json     &&
      crudini --set /etc/st2/st2.conf auth enable True
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c 'source /opt/stackstorm/st2/bin/activate && pip install redis'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir -p /home/stanley/.ssh && chmod 0700 /home/stanley/.ssh     && ssh-keygen
      -f /home/stanley/.ssh/stanley_rsa -P ""     && cat /home/stanley/.ssh/stanley_rsa.pub
      >> /home/stanley/.ssh/authorized_keys     && chown -R stanley:stanley /home/stanley/.ssh     &&
      echo "stanley    ALL=(ALL)       NOPASSWD: SETENV: ALL" >> /etc/sudoers.d/st2     &&
      chmod 0440 /etc/sudoers.d/st2     && sed -i -r "s/^Defaults\s+\+?requiretty/#
      Defaults +requiretty/g" /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - http://nginx.org/keys/nginx_signing.key | apt-key add -     && echo
      "deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx" >> /etc/apt/sources.list     &&
      echo "deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx" >> /etc/apt/sources.list     &&
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62     &&
      apt-get update     && apt-get install -y nginx     && cp /usr/share/doc/st2/conf/nginx/st2.conf
      /etc/nginx/conf.d/st2-base.cnf     && ( cd /etc/nginx/conf.d && ln -s st2-base.cnf
      st2.conf )     && mkdir -p /etc/ssl/st2     && mkdir /var/run/sshd     && openssl
      req -x509 -newkey rsa:2048 -keyout /etc/ssl/st2/st2.key -out /etc/ssl/st2/st2.crt
      -days 3650 -nodes -subj '/O=st2 self signed/CN=localhost'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "443"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/entrypoint.sh
    - /st2-docker/bin/entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/st2.sh
    - /st2-docker/bin/st2.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/local.conf
    - /etc/init/local.conf
  - CmdLine:
    - /st2-docker/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - wget -O /dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64     &&
      chmod +x /dumb-init
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/entrypoint-1ppc.sh
    - /st2-docker/bin/entrypoint-1ppc.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/inject_env.py
    - /st2-docker/bin/inject_env.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx.st2-1ppc.conf.tpl
    - /etc/nginx/conf.d/st2-1ppc.conf.tpl
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
