{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "krallin/ubuntu-tini:xenial",
      "SourceCode": "FROM krallin/ubuntu-tini:xenial",
      "Platform": "",
      "From": {
        "Image": "krallin/ubuntu-tini:xenial"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y -qq curl clamav clamav-daemon clamav-freshclam wget gettext-base \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/clamav \u0026\u0026     touch /etc/clamav/clamd.conf \u0026\u0026     touch /etc/clamav/freshclam.conf \u0026\u0026     chown -R clamav:clamav /var/run/clamav /etc/clamav \u0026\u0026     chmod 640 /etc/clamav/*.conf \u0026\u0026     chmod 750 /var/run/clamav"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3310"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bootstrap.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "clamd.conf.template",
            "/etc/clamav/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "freshclam.conf.template",
            "/etc/clamav/"
          ]
        },
        {
          "CmdLine": [
            "freshclam --verbose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAX_THREADS",
              "Value": "12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_CONNECTION_QUEUE_LENGTH",
              "Value": "15"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_QUEUE",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_SCAN_SIZE",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_FILE_SIZE",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_STREAM_LENGTH",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "for i in `find / -user clamav`; do chown 1000 $i; done \u0026\u0026     usermod -u 1000 clamav"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1000"
        },
        {
          "CmdLine": [
            "/bootstrap.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}