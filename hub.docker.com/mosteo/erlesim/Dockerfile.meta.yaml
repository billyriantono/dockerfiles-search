MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - sh -c 'echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
      && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends         pkg-config
      \        libxau-dev         libxdmcp-dev         libxcb1-dev         libxext-dev
      \        libx11-dev  \tgawk  \tmake  \tgit  \tcurl  \tcmake  \twget \tg++  \tpython-pip
      \ \tpython-matplotlib  \tpython-serial \tpython-wxgtk3.0 \tpython-scipy  \tpython-opencv
      \tpython-numpy \tpython-pyparsing  \tccache \trealpath \tlibopencv-dev \tlibxml2-dev
      \tlibxslt1-dev \tlibtool \tlibtool-bin \tautomake \tautoconf \tlibexpat1-dev
      \tpython-rosinstall \tlibeigen3-dev \tros-kinetic-ros-base \tros-kinetic-octomap-msgs
      \tros-kinetic-joy \tros-kinetic-geodesy \tros-kinetic-octomap-ros \tros-kinetic-mavlink
      \tros-kinetic-control-toolbox \tros-kinetic-transmission-interface \tros-kinetic-joint-limits-interface
      \tros-kinetic-image-common \tros-kinetic-vision-opencv \tros-kinetic-geometry
      \tros-kinetic-driver-common \tros-kinetic-ros-control \tros-kinetic-robot \tunzip
      \tnet-tools \tvim \tnedit \tjoe \txterm \tsudo &&     rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - rosdep init
    Name: run
    PrependShell: true
  - CmdLine:
    - rosdep update
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wheel
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install future
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install pymavlink catkin_pkg --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install MAVProxy==1.5.2
    Name: run
    PrependShell: true
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/x86_64-linux-gnu
    - /usr/local/lib/x86_64-linux-gnu
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
  - CmdLine:
    - echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf &&     ldconfig
      &&     echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload &&     echo '/usr/local/$LIB/libEGL.so.1'
      >> /etc/ld.so.preload
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ros
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c '. /opt/ros/kinetic/setup.bash; catkin_init_workspace /home/ros/workspace/src'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c '. /opt/ros/kinetic/setup.bash; cd /home/ros/workspace; catkin_make'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ros/Desktop
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /home/ros/workspace/devel/setup.bash" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && git clone https://github.com/mosteo/erlesim-docker.git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ros/Downloads
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/aruco-1.3.0 /home/ros/Downloads
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/ros/Downloads/aruco-1.3.0/build && cd /home/ros/Downloads/aruco-1.3.0/build
      && cmake .. && make && echo ros | sudo -S make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ros/simulation
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/ardupilot /home/ros/simulation/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/ros/simulation/ardupilot && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/catkin_simple /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/glog_catkin /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /home/ros/workspace/src/glog_catkin/fix-unused-typedef-warning.patch /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - source /home/ros/workspace/devel/setup.bash && cd /home/ros/workspace && catkin_make
    Name: run
    PrependShell: false
  - CmdLine:
    - rm /home/ros/workspace/src/fix-unused-typedef-warning.patch
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/ardupilot_sitl_gazebo_plugin /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/hector_gazebo /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/rotors_simulator /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/mav_comm /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/mavros /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/gazebo_ros_pkgs /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/gazebo_cpp_examples /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/gazebo_python_examples /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/workspace/src/drcsim /home/ros/workspace/src
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ros | sudo -S sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable
      `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - set -o pipefail && wget -O - http://packages.osrfoundation.org/gazebo.key |
      sudo -S apt-key add -
    Name: run
    PrependShell: false
  - CmdLine:
    - echo ros | sudo -S apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ros | sudo -S apt-get remove .*gazebo.* '.*sdformat.*' '.*ignition-math.*'
      && echo ros |  sudo -S apt-get update && echo ros | sudo -S apt-get install
      gazebo7 libgazebo7-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - source /home/ros/workspace/devel/setup.bash && cd /home/ros/workspace && catkin_make  --pkg
      mav_msgs mavros_msgs gazebo_msgs
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - source /home/ros/workspace/devel/setup.bash && cd /home/ros/workspace && catkin_make  -j
      4
    Name: run
    PrependShell: false
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/.gazebo /home/ros
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /tmp/erlesim-docker/src/.gazebo /root
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r /tmp/erlesim-docker/
    Name: run
    PrependShell: true
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: ${NVIDIA_VISIBLE_DEVICES:-all}
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
    Name: env
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
