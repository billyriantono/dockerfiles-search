MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: PROJECT
      Value: '"tomcat-apr"'
    - Key: VERSION
      Value: '"1.0"'
    - Key: AUTHOR
      Value: '"harry"'
    - Key: COMPANY
      Value: '"www.buglife.cn"'
    Name: label
  - Maintainer: harry "zhangjun@buglife.cn"
    Name: maintainer
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apk add --no-cache --update-cache bash curl ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GLIBC_PKG_VERSION
      Value: 2.23-r3
    Name: env
  - CmdLine:
    - curl -Lo /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo glibc-${GLIBC_PKG_VERSION}.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-${GLIBC_PKG_VERSION}.apk
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo glibc-bin-${GLIBC_PKG_VERSION}.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-bin-${GLIBC_PKG_VERSION}.apk
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo glibc-i18n-${GLIBC_PKG_VERSION}.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-i18n-${GLIBC_PKG_VERSION}.apk
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add glibc-${GLIBC_PKG_VERSION}.apk glibc-bin-${GLIBC_PKG_VERSION}.apk glibc-i18n-${GLIBC_PKG_VERSION}.apk
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --no-cache bash tzdata &&     cp /usr/share/zoneinfo/Asia/Shanghai
      /etc/localtime &&     echo "Asia/Shanghai" > /etc/timezone &&     apk del tzdata
      &&     rm -rf /var/cache
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    - Key: JAVA_VERSION_MINOR
      Value: "73"
    - Key: JAVA_VERSION_BUILD
      Value: "02"
    - Key: JAVA_PACKAGE
      Value: server-jre
    Name: env
  - CmdLine:
    - 'curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"   "http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz"
      | gunzip -c - | tar -xf - &&   mv jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR}/jre
      /jre &&   mv jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR}/include/linux
      /jre/linux &&   rm /jre/bin/keytool &&   rm /jre/bin/orbd &&   rm /jre/bin/pack200
      &&   rm /jre/bin/policytool &&   rm /jre/bin/rmid &&   rm /jre/bin/rmiregistry
      &&   rm /jre/bin/servertool &&   rm /jre/bin/tnameserv &&   rm /jre/bin/unpack200
      &&   rm /jre/lib/jfr.jar &&   rm -rf /jre/lib/jfr &&   rm -rf /jre/lib/oblique-fonts
      &&   rm -rf /tmp/* &&   rm -rf /var/cache/* &&   echo ''hosts: files mdns4_minimal
      [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /jre
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin
    Name: env
  - Env:
    - Key: CATALINA_HOME
      Value: /apache-tomcat
    Name: env
  - Env:
    - Key: PATH
      Value: $CATALINA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$CATALINA_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - Env:
    - Key: TOMCAT_NATIVE_LIBDIR
      Value: $CATALINA_HOME/native-jni-lib
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR
    Name: env
  - CmdLine:
    - apk add --no-cache busybox
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache libgcc
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache pinentry-gtk
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache gnupg
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex         && for key in                 05AB33110949707C93A279E3D3EFE6B686867BA6                 07E48665A34DCAFAE522E5E6266191C37C037D42                 47309207D818FFD8DCD3F83F1931D684307A10A5                 541FBE7D8F78B25E055DDEE13C370389288584E7                 61B832AC2F1C5A90F0F9B00A1C506407564C17A3                 713DA88BE50911535FE716F5208B0AB1D63011C7                 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED                 9BA44C2621385CB966EBA586F72C284D731FABEE                 A27677289986DB50844682F8ACB77FC2E86E29AC                 A9C5DF4D22E99998D9875A5110C01C5A2F6059E7                 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243                 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE                 F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23         ;
      do                 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";         done
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 8.5.6
    Name: env
  - Env:
    - Key: TOMCAT_TGZ_URL
      Value: http://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
    Name: env
  - Env:
    - Key: TOMCAT_ASC_URL
      Value: http://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
    Name: env
  - CmdLine:
    - "set -x                 && apk add --no-cache --virtual .fetch-deps                 ca-certificates
      \                tar                 openssl         && wget -O tomcat.tar.gz
      \"$TOMCAT_TGZ_URL\"         && wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_URL\"
      \        && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz         &&
      tar -xvf tomcat.tar.gz --strip-components=1                 && nativeBuildDir=\"$(mktemp
      -d)\"         && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1
      \t&& ls -l $nativeBuildDir         && apk add --no-cache --virtual .native-build-deps
      \                apr-dev                 gcc                 libc-dev                 make
      \                openssl-dev         && (                 export CATALINA_HOME=$PWD
      \                && cd $nativeBuildDir/native                 && ./configure
      \                        --libdir=$TOMCAT_NATIVE_LIBDIR                         --prefix=$CATALINA_HOME
      \                        --with-apr=\"$(which apr-1-config)\"                         --with-java-home=$JAVA_HOME
      \                        --with-ssl=yes                         --with-os-type=linux
      \                && make -j$(getconf _NPROCESSORS_ONLN)                 && make
      install         )         && runDeps=\"$(                 scanelf --needed --nobanner
      --recursive \"$TOMCAT_NATIVE_LIBDIR\"                         | awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }'                         | sort -u                         |
      xargs -r apk info --installed                         | sort -u         )\"
      \        && apk add --virtual .tomcat-native-rundeps $runDeps         && apk
      del .fetch-deps .native-build-deps         && rm -rf \"$nativeBuildDir\"         &&
      rm bin/tomcat-native.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -e         && nativeLines="$(catalina.sh configtest 2>&1)"         && nativeLines="$(echo
      "$nativeLines" | grep ''Apache Tomcat Native'')"         && nativeLines="$(echo
      "$nativeLines" | sort -u)"         && if ! echo "$nativeLines" | grep ''INFO:
      Loaded APR based Apache Tomcat Native library'' >&2; then                 echo
      >&2 "$nativeLines";                 exit 1;         fi'
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /apache-tomcat/bin/*.bat   && rm -rf /apache-tomcat/webapps/docs   &&
      rm -rf /apache-tomcat/webapps/examples   && rm -rf /apache-tomcat/webapps/manager   &&
      rm -rf /apache-tomcat/webapps/host-manager   && rm -rf /apache-tomcat/webapps/ROOT/*   &&
      rm -rf /tmp/*   && rm -rf /var/cache/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /apache-tomcat/conf/server.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '$i\ \ <role rolename="admin-gui"/>  \ <role rolename="manager-gui"/>  \
      <user username="buglife" password="buglife" roles=" admin-gui , manager-gui
      "/>' /apache-tomcat/conf/tomcat-users.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "TEST" > /apache-tomcat/webapps/ROOT/readme.txt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /apache-tomcat/webapps
  - Name: expose
    Ports:
    - "8080"
    - "8443"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
