MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - "set -ex; \tpostgresHome=\"$(getent passwd postgres)\"; \tpostgresHome=\"$(echo
      \"$postgresHome\" | cut -d: -f6)\"; \t[ \"$postgresHome\" = '/var/lib/postgresql'
      ]; \tmkdir -p \"$postgresHome\"; \tchown -R postgres:postgres \"$postgresHome\""
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.1"
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.1.24
    Name: env
  - Env:
    - Key: OSSP_UUID_VERSION
      Value: 1.6.2
    Name: env
  - Env:
    - Key: OSSP_UUID_SHA256
      Value: 11a615225baa5f8bb686824423f50e4427acd3f70d394765bdff32801f0fd5b0
    Name: env
  - CmdLine:
    - "set -ex \t\t&& apk add --no-cache --virtual .fetch-deps \t\tca-certificates
      \t\topenssl \t\ttar \t\t&& wget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"
      \t&& mkdir -p /usr/src/postgresql \t&& tar \t\t--extract \t\t--file postgresql.tar.bz2
      \t\t--directory /usr/src/postgresql \t\t--strip-components 1 \t&& rm postgresql.tar.bz2
      \t\t&& apk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev
      dpkg \t\tflex \t\tgcc \t\tlibc-dev \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev
      \t\tmake \t\topenssl-dev \t\tperl-utils \t\tperl-ipc-run \t\tutil-linux-dev
      \t\tzlib-dev \t\t&& wget -O uuid.tar.gz \"https://www.mirrorservice.org/sites/ftp.ossp.org/pkg/lib/uuid/uuid-$OSSP_UUID_VERSION.tar.gz\"
      \t&& echo \"$OSSP_UUID_SHA256 *uuid.tar.gz\" | sha256sum -c - \t&& mkdir -p
      /usr/src/ossp-uuid \t&& tar \t\t--extract \t\t--file uuid.tar.gz \t\t--directory
      /usr/src/ossp-uuid \t\t--strip-components 1 \t&& rm uuid.tar.gz \t&& ( \t\tcd
      /usr/src/ossp-uuid \t\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t\t&& wget -O config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'
      \t\t&& wget -O config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'
      \t\t&& ./configure \t\t\t--build=\"$gnuArch\" \t\t\t--prefix=/usr/local \t\t&&
      make -j \"$(nproc)\" \t\t&& make install \t) \t&& rm -rf /usr/src/ossp-uuid
      \t\t&& cd /usr/src/postgresql \t&& awk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\"
      && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next
      } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new
      \t&& grep '/var/run/postgresql' src/include/pg_config_manual.h.new \t&& mv src/include/pg_config_manual.h.new
      src/include/pg_config_manual.h \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'
      \t&& wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-integer-datetimes \t\t--enable-thread-safety
      \t\t--disable-rpath \t\t--with-ossp-uuid \t\t--with-gnu-ld \t\t--with-pgport=5432
      \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t--with-includes=/usr/local/include
      \t\t--with-libraries=/usr/local/lib \t\t\t\t--with-openssl \t\t--with-libxml
      \t\t--with-libxslt \t&& make -j \"$(nproc)\" world \t&& make install-world \t&&
      make -C contrib install \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner
      --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u
      \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .postgresql-rundeps \t\t$runDeps
      \t\tbash \t\tsu-exec \t\ttzdata \t&& apk del .fetch-deps .build-deps \t&& cd
      / \t&& rm -rf \t\t/usr/src/postgresql \t\t/usr/local/share/doc \t\t/usr/local/share/man
      \t&& find /usr/local -name '*.a' -delete"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql
      && chmod 2777 /var/run/postgresql
    Name: run
    PrependShell: true
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - CmdLine:
    - 'mkdir -p "$PGDATA" && chown -R postgres:postgres "$PGDATA" && chmod 777 "$PGDATA"
      # this 777 will be replaced by 700 at runtime (allows semi-arbitrary "--user"
      values)'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod 755 /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
