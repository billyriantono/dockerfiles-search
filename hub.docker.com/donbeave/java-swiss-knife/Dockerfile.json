{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:11.0.3-jdk-stretch",
      "SourceCode": "FROM openjdk:11.0.3-jdk-stretch",
      "Platform": "",
      "From": {
        "Image": "openjdk:11.0.3-jdk-stretch"
      },
      "Commands": [
        {
          "Maintainer": "Alexey Zhokhov \u003calexey@zhokhov.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "java -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y --no-install-recommends                locales     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "locale.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /locale.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/locale.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y --no-install-recommends                ca-certificates                apt-transport-https                ssh                net-tools                openvpn                software-properties-common                procps                dnsutils                unzip                zip                uchardet                git                redis-server                nano                curl                wget                httpie                gpg-agent                dirmngr     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" \u003e\u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y --no-install-recommends                postgresql-client-11                postgresql-11                postgresql-contrib-11     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/postgresql/$PG_MAJOR/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_HOME",
              "Value": "/usr/lib/postgresql/11/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/     \u0026\u0026 ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\"     \u0026\u0026 sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/postgresql     \u0026\u0026 chown -R postgres:postgres /var/run/postgresql     \u0026\u0026 chmod 2777 /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p \"$PGDATA\"     \u0026\u0026 chown -R postgres:postgres \"$PGDATA\"     \u0026\u0026 chmod 777 \"$PGDATA\" # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"local   all             all                                     trust\" \u003e /etc/postgresql/$PG_MAJOR/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host    all             all             127.0.0.1/32            trust\" \u003e\u003e /etc/postgresql/$PG_MAJOR/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host    all             all             ::1/128                 trust\" \u003e\u003e /etc/postgresql/$PG_MAJOR/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host    all             all             0.0.0.0/0               md5\" \u003e\u003e /etc/postgresql/$PG_MAJOR/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "postgresql.conf",
            "/etc/postgresql/$PG_MAJOR/main/"
          ]
        },
        {
          "CmdLine": [
            "wget -O - \"https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc\" | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.bintray.com/rabbitmq-erlang/debian stretch erlang\" \u003e /etc/apt/sources.list.d/bintray.rabbitmq.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.bintray.com/rabbitmq/debian stretch main\" \u003e\u003e /etc/apt/sources.list.d/bintray.rabbitmq.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y --no-install-recommends                rabbitmq-server     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rabbitmq-plugins enable --offline rabbitmq_federation"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rabbitmq-plugins enable --offline rabbitmq_federation_management"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rabbitmq-plugins enable --offline rabbitmq_shovel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rabbitmq-plugins enable --offline rabbitmq_shovel_management"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" \u003e\u003e /etc/apt/sources.list.d/mongodb-org-4.0.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y                mongodb-org     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /etc/init.d     \u0026\u0026 wget https://raw.githubusercontent.com/mongodb/mongo/master/debian/init.d -O mongod     \u0026\u0026 chmod a+x mongod"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y --no-install-recommends                apt-transport-https                ca-certificates                curl                gnupg2                software-properties-common     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key fingerprint 0EBFCD88"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y                docker-ce                docker-ce-cli                containerd.io     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_11.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y                nodejs                gcc                g++                make     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y yarn     \u0026\u0026 rm -rf /var/lib/apt/lists/*               /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s \"https://get.sdkman.io\" | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SDKMAN_DIR",
              "Value": "/root/.sdkman"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash -c \"source $SDKMAN_DIR/bin/sdkman-init.sh \u0026\u0026 sdk install groovy\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "tail",
            "-f",
            "/dev/null"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}