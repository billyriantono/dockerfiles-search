MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Francesco Marconi <francesco.marconi@polimi.it>
    Name: maintainer
  - Env:
    - Key: USERHOME
      Value: /root
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: USER
      Value: root
    Name: env
  - Env:
    - Key: Z3_VERSION
      Value: 4.5.0
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt-get update && apt-get install -y --force-yes --no-install-recommends     unzip     xorg     gcc     g++     make     git     python     python-dev     python-distribute     python-tk     sbcl     zlib1g-dev     curl
      &&     apt-get build-dep -y --force-yes python-matplotlib &&     apt-get autoclean
      &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L http://minisat.se/downloads/minisat-2.2.0.tar.gz -o /tmp/minisat-2.2.0.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - tar -xvzf minisat-2.2.0.tar.gz &&         export MROOT=/tmp/minisat &&        cd
      minisat/core/ &&         make &&         cp minisat /usr/local/bin/minisat
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L https://github.com/Z3Prover/z3/releases/download/z3-${Z3_VERSION}/z3-${Z3_VERSION}-x64-ubuntu-14.04.zip
      -o /tmp/z3.zip     \t&& unzip /tmp/z3.zip -d /tmp     \t&& cp /tmp/z3-${Z3_VERSION}-x64-ubuntu-14.04/bin/z3
      /usr/local/bin/z3     \t&& chmod a+x /usr/local/bin/z3"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/fm-polimi/zot /usr/local/zot/ &&         ln -s
      /usr/local/zot/asdfs/*.asd /usr/lib/sbcl/site-systems/ &&         cp /usr/local/zot/bin/zot
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&         python get-pip.py &&         rm
      get-pip.py
    Name: run
    PrependShell: true
  - Env:
    - Key: PROJECT_FOLDER
      Value: /opt/DICE-Verification/
    Name: env
  - Env:
    - Key: SERVER_CODE_FOLDER
      Value: ${PROJECT_FOLDER}d-vert-server/
    Name: env
  - Env:
    - Key: JSON2MC_FOLDER
      Value: ${SERVER_CODE_FOLDER}d-vert-json2mc/
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - $SERVER_CODE_FOLDER
  - CmdLine:
    - pip install virtualenv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PROJECT_FOLDER
  - CmdLine:
    - virtualenv -p /usr/bin/python2.7 venv
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - source venv/bin/activate
    Name: run
    PrependShell: false
  - CmdLine:
    - pip install -r ${SERVER_CODE_FOLDER}requirements.txt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $JSON2MC_FOLDER
  - CmdLine:
    - pip install .
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --disabled-password --gecos '' celery-user && adduser celery-user sudo
      && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R celery-user ${SERVER_CODE_FOLDER}static/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SERVER_CODE_FOLDER
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
