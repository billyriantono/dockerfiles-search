MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: kev <noreplay@easypi.pro>
    Name: maintainer
  - Env:
    - Key: NGROK_GIT
      Value: https://github.com/inconshreveable/ngrok.git
    Name: env
  - Env:
    - Key: NGROK_BASE_DOMAIN
      Value: ngrok.foobar.site
    Name: env
  - Env:
    - Key: NGROK_DIR
      Value: /ngrok
    Name: env
  - Env:
    - Key: NGROK_TMP
      Value: /tmp/ngrok
    Name: env
  - Env:
    - Key: NGROK_CA_KEY
      Value: assets/client/tls/ngrokroot.key
    Name: env
  - Env:
    - Key: NGROK_CA_CRT
      Value: assets/client/tls/ngrokroot.crt
    Name: env
  - Env:
    - Key: NGROK_SERVER_KEY
      Value: assets/server/tls/snakeoil.key
    Name: env
  - Env:
    - Key: NGROK_SERVER_CSR
      Value: assets/server/tls/snakeoil.csr
    Name: env
  - Env:
    - Key: NGROK_SERVER_CRT
      Value: assets/server/tls/snakeoil.crt
    Name: env
  - Name: workdir
    Path: $NGROK_DIR
  - CmdLine:
    - apt-get update     && apt-get install -y build-essential                           curl                           git                           golang                           mercurial     &&
      git clone ${NGROK_GIT} ${NGROK_TMP}     && cd ${NGROK_TMP}     && openssl genrsa
      -out ${NGROK_CA_KEY} 2048     && openssl req -new -x509 -nodes -key ${NGROK_CA_KEY}
      -subj "/CN=${NGROK_BASE_DOMAIN}" -days 365 -out ${NGROK_CA_CRT}     && openssl
      genrsa -out ${NGROK_SERVER_KEY} 2048     && openssl req -new -key ${NGROK_SERVER_KEY}
      -subj "/CN=${NGROK_BASE_DOMAIN}" -out ${NGROK_SERVER_CSR}     && openssl x509
      -req -in ${NGROK_SERVER_CSR} -CA ${NGROK_CA_CRT} -CAkey ${NGROK_CA_KEY} -CAcreateserial
      -days 365 -out ${NGROK_SERVER_CRT}     && for GOOS in darwin linux windows;        do          for
      GOARCH in 386 amd64 arm;          do            echo "=== $GOOS-$GOARCH ===";            export
      GOOS GOARCH;            make release-all;            echo "=== done ===";          done        done     &&
      mv ${NGROK_CA_KEY}           ${NGROK_CA_CRT}           ${NGROK_SERVER_KEY}           ${NGROK_SERVER_CSR}           ${NGROK_SERVER_CRT}           ./bin/*           ${NGROK_DIR}     &&
      apt-get purge --auto-remove -y build-essential                                       curl                                       git                                       golang                                       mercurial     &&
      cd ${NGROK_DIR}     && rm -rf ${NGROK_TMP}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $NGROK_DIR
  - Name: expose
    Ports:
    - "443"
    - "4443"
    - "80"
  - CmdLine:
    - ./ngrokd
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
