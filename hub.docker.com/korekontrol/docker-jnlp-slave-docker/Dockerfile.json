{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk",
      "SourceCode": "FROM openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk"
      },
      "Commands": [
        {
          "Maintainer": "Marek Obuchowicz \u003cmarek@korekontrol.eu\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/v0.18.0/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://get.docker.com/ | sh \u0026\u0026     curl https://raw.githubusercontent.com/helm/helm/master/scripts/get \u003e get_helm.sh \u0026\u0026     chmod 700 get_helm.sh \u0026\u0026     ./get_helm.sh \u0026\u0026     rm -f get_helm.sh \u0026\u0026     curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \u0026\u0026     chmod 755 kubectl \u0026\u0026     mv kubectl /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qy \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -qy python-pip groff-base \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli \u0026\u0026     pip install j2cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 999 -m jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"This is a base image, which provides the Jenkins agent executable (slave.jar) and tools: j2cli, awscli, docker client, kubectl and helm\""
            },
            {
              "Key": "Vendor",
              "Value": "\"KoreKontrol\""
            },
            {
              "Key": "Version",
              "Value": "\"3.27\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "3.27"
        },
        {
          "CmdLine": [
            "curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   \u0026\u0026 chmod 755 /usr/share/jenkins   \u0026\u0026 chmod 644 /usr/share/jenkins/slave.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "mkdir /home/jenkins/.jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins/.jenkins"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave",
            "/usr/local/bin/jenkins-slave"
          ]
        },
        {
          "CmdLine": [
            "/tini",
            "--",
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}