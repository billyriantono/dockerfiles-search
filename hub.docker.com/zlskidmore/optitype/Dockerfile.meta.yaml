MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: optitype_version
      Value: 1.3.2
    Name: env
  - Env:
    - Key: samtools_version
      Value: "1.2"
    Name: env
  - Env:
    - Key: bcftools_version
      Value: "1.2"
    Name: env
  - Env:
    - Key: bwa_version
      Value: 0.7.17
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get install -y     build-essential     curl     unzip     python-minimal     bzip2     zlib1g-dev     libncurses5-dev     libncursesw5-dev     libnss-sss     libbz2-dev     liblzma-dev     libhdf5-dev     glpk-utils     python-pip     libpng-dev     libfreetype6-dev     libfreetype6     pkg-config     vim     less     coinor-cbc     libz-dev
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/bin/
  - CmdLine:
    - mkdir -p /usr/local/bin/   && curl -SL http://packages.seqan.de/razers3/razers3-3.4.0-Linux-x86_64.zip   >  razers3-3.4.0-Linux-x86_64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip razers3-3.4.0-Linux-x86_64.zip && rm -f razers3-3.4.0-Linux-x86_64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/bin/razers3-3.4.0-Linux-x86_64/bin/razers3 /usr/local/bin/razers3
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/samtools/samtools/releases/download/${samtools_version}/samtools-${samtools_version}.tar.bz2
    - /usr/local/bin/
  - CmdLine:
    - tar -xjf /usr/local/bin/samtools-${samtools_version}.tar.bz2 -C /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/samtools-${samtools_version}/ && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/samtools-${samtools_version}/ && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'NumPy==1.9.3'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'Pyomo==4.2.10784'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'Pandas==0.16.2'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'Pysam==0.8.3'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'Matplotlib==1.4.3'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'Future==0.15.2'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'tables==3.2.2'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/bin/   && curl -SL https://github.com/FRED-2/OptiType/archive/v${optitype_version}.zip   >  v${optitype_version}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip v${optitype_version}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /usr/local/bin/OptiType-${optitype_version}/config.ini.example /usr/local/bin/OptiType-${optitype_version}/config.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\/path\/to\//\/usr\/local\/bin\//' /usr/local/bin/OptiType-${optitype_version}/config.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/threads=16/threads=8/g' /usr/local/bin/OptiType-${optitype_version}/config.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/glpk/cbc/' /usr/local/bin/OptiType-${optitype_version}/config.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/deletebam=true/deletebam=false/g' /usr/local/bin/OptiType-${optitype_version}/config.ini
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/bin/
  - CmdLine:
    - mkdir -p /usr/local/bin/   && curl -SL https://github.com/lh3/bwa/archive/v${bwa_version}.zip   >  v${bwa_version}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip v${bwa_version}.zip && rm -f v${bwa_version}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/bwa-${bwa_version} && make
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/bin/bwa-${bwa_version}/bwa /usr/local/bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/bin/OptiType-${optitype_version}/
  - Env:
    - Key: PATH
      Value: '"/usr/local/bin/OptiType-${optitype_version}/:${PATH}"'
    Name: env
  - CmdLine:
    - python
    - OptiTypePipeline.py
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
