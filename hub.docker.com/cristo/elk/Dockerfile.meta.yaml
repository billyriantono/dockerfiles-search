MetaArgs: null
Stages:
- BaseName: ubuntu:14.04.4
  Commands:
  - Maintainer: Olexander Kutsenko <olexander.kutsenko@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common python-software-properties     git
      git-core vim nano mc nginx tmux curl unzip zip wget     python-dev python-setuptools
      postfix     apache2-utils tmux apt-transport-https supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/supervisor/*.conf
    - /etc/supervisor/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/nginx/default
    - /etc/nginx/sites-available/default
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "postfix postfix/mailname string elk.hostname.com" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "postfix postfix/main_mailer_type string 'ELK'" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:webupd8team/java
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y oracle-java8-installer     oracle-java8-set-default
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "JAVA_HOME=/usr/lib/jvm/java-8-oracle" | tee -a /etc/environment
    Name: run
    PrependShell: true
  - CmdLine:
    - export JAVA_HOME=/usr/lib/jvm/java-8-oracle
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openssh-server openssh-client
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:root' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> tee -a /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/pki/tls
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/pki/tls/private/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/pki/tls/certs
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i ''s/# Extensions for a typical CA/subjectAltName = IP: 127.0.0.1/g''
      /etc/ssl/openssl.cnf'
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey
      rsa:2048 -keyout /etc/pki/tls/private/logstash-forwarder.key -out /etc/pki/tls/certs/logstash-forwarder.crt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/autostart.sh
    - /root/autostart.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/bash.bashrc
    - /etc/bash.bashrc
  - CmdLine:
    - chmod +x /root/autostart.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "force_color_prompt=yes" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u\[\033[01;33m\]@\[\033[01;36m\]\h
      \[\033[01;33m\]\w \[\033[01;35m\]\$ \[\033[00m\]'" >> .bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" |
      tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "network.host: localhost" | tee -a /etc/elasticsearch/elasticsearch.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "MAX_MAP_COUNT=" | tee -a /etc/default/elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/elasticsearch/config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/elasticsearch/elasticsearch.yml
    - /usr/share/elasticsearch/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/elasticsearch/logging.yml
    - /usr/share/elasticsearch/config
  - CmdLine:
    - echo "deb http://packages.elastic.co/kibana/4.6/debian stable main" | tee -a
      /etc/apt/sources.list.d/kibana-4.x.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''server.host: localhost'' | tee -a /opt/kibana/config/kibana.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - service kibana start
    Name: run
    PrependShell: true
  - CmdLine:
    - htpasswd -b -c /etc/nginx/htpasswd.users admin admin
    Name: run
    PrependShell: true
  - CmdLine:
    - service nginx restart
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://packages.elastic.co/logstash/2.2/debian stable main' | tee
      /etc/apt/sources.list.d/logstash-2.2.x.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install logstash -y
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/logstash/*
    - /etc/logstash/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/supervisor/*.conf
    - /etc/supervisor/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/alerts.zip
    - /opt/alerts.zip
  - CmdLine:
    - unzip -d /opt/elastalert /opt/alerts.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /opt/alerts.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/etckeeper.sh
    - /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/etckeeper-hook.sh
    - /root/etckeeper
  - CmdLine:
    - /root/etckeeper.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/apt/sources.list.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5044"
    - "80"
  From:
    Image: ubuntu:14.04.4
  Name: ""
  Platform: ""
  SourceCode: FROM      ubuntu:14.04.4
