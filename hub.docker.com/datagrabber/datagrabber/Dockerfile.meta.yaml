MetaArgs: null
Stages:
- BaseName: ubuntu:17.04
  Commands:
  - Name: user
    User: root
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt-get update;     apt-get -y install         software-properties-common         python-software-properties         language-pack-en-base         zip         unzip         curl         wget         nano
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php;     apt-get update;     apt-get
      -y install         php7.1         php7.1-cli         php7.1-mysql         php7.1-sqlite3         php7.1-mcrypt         php7.1-dom         php7.1-mbstring         php7.1-zip         php7.1-xml         php7.1-intl
    Name: run
    PrependShell: true
  - Env:
    - Key: ADMIN_GROUP
      Value: admin
    Name: env
  - Env:
    - Key: ADMIN_USER
      Value: admin
    Name: env
  - Env:
    - Key: ADMIN_GID
      Value: "50000"
    Name: env
  - Env:
    - Key: ADMIN_UID
      Value: "50000"
    Name: env
  - Env:
    - Key: ADMIN_HOME
      Value: /home/${ADMIN_USER}
    Name: env
  - CmdLine:
    - groupadd -g ${ADMIN_GID} ${ADMIN_GROUP};     useradd -d ${ADMIN_HOME} -s /bin/bash
      -g ${ADMIN_GROUP} -u ${ADMIN_UID} ${ADMIN_USER};     mkdir ${ADMIN_HOME};     chown
      ${ADMIN_USER}:${ADMIN_GROUP} ${ADMIN_HOME};     chmod 700 ${ADMIN_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: ${ADMIN_DIR}/.composer
    Name: env
  - CmdLine:
    - mkdir ${COMPOSER_HOME};     chown ${ADMIN_USER}:${ADMIN_GROUP} ${COMPOSER_HOME};     chmod
      770 ${COMPOSER_HOME};     curl -sS https://getcomposer.org/installer | php --
      --install-dir=/usr/local/bin --filename=composer
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${COMPOSER_HOME}/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: APP_DIR
      Value: /app
    Name: env
  - CmdLine:
    - mkdir ${APP_DIR};     chown ${ADMIN_USER}:${ADMIN_GROUP} ${APP_DIR};     chmod
      775 ${APP_DIR}
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: ${ADMIN_HOME}
    Name: env
  - Env:
    - Key: APP_RESOURCES
      Value: ${APP_DIR}/app/resources
    Name: env
  - Env:
    - Key: APP_EXAMPLES
      Value: ${APP_RESOURCES}/examples
    Name: env
  - Env:
    - Key: APP_DATA_EXAMPLES
      Value: ${APP_EXAMPLES}/data
    Name: env
  - Env:
    - Key: APP_RESULT_EXAMPLES
      Value: ${APP_EXAMPLES}/result
    Name: env
  - Env:
    - Key: APP_STORAGE
      Value: ${APP_RESOURCES}/storage/data
    Name: env
  - Env:
    - Key: APP_CSV_STORAGE
      Value: ${APP_STORAGE}/csv
    Name: env
  - Env:
    - Key: APP_JSON_STORAGE
      Value: ${APP_STORAGE}/json
    Name: env
  - Env:
    - Key: APP_YAML_STORAGE
      Value: ${APP_STORAGE}/yaml
    Name: env
  - Env:
    - Key: APP_XML_STORAGE
      Value: ${APP_STORAGE}/xml
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - ${APP_DIR}/
  - CmdLine:
    - chown -R ${ADMIN_USER}:${ADMIN_GROUP} ${APP_DIR}
    Name: run
    PrependShell: true
  - Name: user
    User: ${ADMIN_USER}
  - CmdLine:
    - cd ${APP_DIR};     composer dumpautoload;     composer update --optimize-autoloader
    Name: run
    PrependShell: true
  - Labels:
    - Key: name
      Value: '"DataGrabber/CLI"'
    - Key: description
      Value: '"PHP CLI application to convert data sources to different formats"'
    Name: label
  - Name: workdir
    Path: ${APP_DIR}
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -s
    Name: cmd
    PrependShell: false
  - Name: user
    User: admin
  From:
    Image: ubuntu:17.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.04
