{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.12.0~ce-0~debian"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "10.x"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_CHECKSUM",
              "Value": "b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES",
              "Value": "\"apt-transport-https python-pip python-setuptools gnupg2 software-properties-common\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUNTIME_PACKAGES",
              "Value": "\"git mercurial curl build-essential ca-certificates fontconfig ruby-compass\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ACBUILD_VERSION",
              "Value": "0.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ACBUILD_FILE",
              "Value": "acbuild-v$ACBUILD_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends $BUILD_PACKAGES $RUNTIME_PACKAGES     \u0026\u0026 curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'     \u0026\u0026 curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add -     \u0026\u0026 apt-key fingerprint 0EBFCD88     \u0026\u0026 add-apt-repository         \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")         $(lsb_release -cs)         stable\"     \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont     \u0026\u0026 apt-get install -y --no-install-recommends docker-ce=$DOCKER_VERSION     \u0026\u0026 pip install docker-compose --force --upgrade     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_$NODEJS_VERSION | bash     \u0026\u0026 apt-get install -y --no-install-recommends nodejs yarn     \u0026\u0026 npm install -g --unsafe-perm bower gulp phantomjs-prebuilt eslint eslint-plugin-security eslint-plugin-chai-friendly     \u0026\u0026 curl -fsSL \"https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\" -o golang.tar.gz     \u0026\u0026 echo \"$GOLANG_CHECKSUM golang.tar.gz\" | sha256sum -c -     \u0026\u0026 tar -C /usr/local -xzf golang.tar.gz     \u0026\u0026 rm golang.tar.gz     \u0026\u0026 mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\"     \u0026\u0026 chmod -R 777 \"$GOPATH\"     \u0026\u0026 apt-get remove --purge -y $BUILD_PACKAGES     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 go get -u gopkg.in/alecthomas/gometalinter.v2     \u0026\u0026 gometalinter.v2 --install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -g install npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/containers/build/releases/download/v$ACBUILD_VERSION/$ACBUILD_FILE | tar xz -C /usr/bin --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}