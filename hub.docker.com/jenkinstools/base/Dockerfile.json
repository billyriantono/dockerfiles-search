{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'APT::Get::Assume-Yes \"true\";' \u003e /etc/apt/apt.conf.d/90jenkins   \u0026\u0026 echo 'DPkg::Options \"--force-confnew\";' \u003e\u003e /etc/apt/apt.conf.d/90jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 mkdir -p /usr/share/man/man1     \u0026\u0026 apt-get install -y --no-install-recommends apt-utils     \u0026\u0026 apt-get install -y ca-certificates locales curl sudo python3-distutils unzip     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${JENKINS_HOME}"
          ]
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "groupadd --gid ${gid} ${group}   \u0026\u0026 useradd --uid ${uid} --gid ${gid} --shell /bin/bash --create-home ${user}   \u0026\u0026 echo 'jenkins ALL=NOPASSWD: ALL' \u003e\u003e /etc/sudoers.d/50-jenkins   \u0026\u0026 echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' \u003e\u003e /etc/sudoers.d/env_keep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1)   \u0026\u0026 DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\"   \u0026\u0026 echo Docker URL: $DOCKER_URL   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\"   \u0026\u0026 ls -lha /tmp/docker.tgz   \u0026\u0026 tar -xz -C /tmp -f /tmp/docker.tgz   \u0026\u0026 mv /tmp/docker/docker /usr/local/bin/docker   \u0026\u0026 chown root:root /usr/local/bin/docker   \u0026\u0026 chmod +s /usr/local/bin/docker   \u0026\u0026 rm -rf /tmp/docker /tmp/docker.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "COMPOSE_VERSION",
          "Name": "arg",
          "Value": "1.22.0"
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-Linux-x86_64   \u0026\u0026 chown root:root /usr/local/bin/docker-compose   \u0026\u0026 chmod +sx /usr/local/bin/docker-compose   \u0026\u0026 docker-compose --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$HOME/.local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py   \u0026\u0026 python3 get-pip.py --user --no-warn-script-location"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}