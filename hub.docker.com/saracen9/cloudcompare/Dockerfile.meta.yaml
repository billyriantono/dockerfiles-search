MetaArgs: null
Stages:
- As: base
  BaseName: dorowu/ubuntu-desktop-lxde-vnc
  Commands:
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y qtdeclarative5-dev         build-essential
      g++ git cmake libqt5svg5-dev qttools5-dev unzip wget apt-utils         ffmpeg         libavcodec-dev         libavformat-dev         libavutil-dev         libeigen3-dev         libqt5opengl5-dev         libswscale-dev         libtbb-dev         libxerces-c-dev         libssl-dev         python3-dev         libcgal-dev         libcgal-qt5-dev         zip         zlib1g-dev         libglu1-mesa-dev         freeglut3-dev         mesa-common-dev         mesa-utils         python3-setuptools         libpng-dev         libusb-dev         libpcap-dev         python3-vtk7
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository --yes ppa:ubuntugis/ppa &&     apt-get update &&     apt-get
      install -y libproj-dev libgdal-dev &&     apt-get upgrade -y &&     apt-get
      install -y gdal-bin python-gdal python3-gdal libgeotiff-dev libjsoncpp-dev python-numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/LASzip &&     cd /tmp/LASzip &&     git init &&     git remote
      add origin https://github.com/LASzip/LASzip.git &&     git fetch --tags &&     latestTag=$(git
      describe --tags `git rev-list --tags --max-count=1`) &&     cd /root && rm -rf
      /tmp/LASzip &&     git clone --branch $latestTag --depth 1 https://github.com/LASzip/LASzip.git
      LASzip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p LASzip/build &&     cd LASzip/build &&     cmake -G "Unix Makefiles"
      -H/root/LASzip -B/root/LASzip/build     && make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/eigen3/3.3.4-2/eigen3_3.3.4.orig.tar.bz2
      &&     tar xvjf eigen* &&     cd eigen-eigen* &&     mkdir build &&     cd build
      &&     cmake -DCMAKE_BUILD_TYPE=Release     .. &&     make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O "fbx.tar.gz" "http://download.autodesk.com/us/fbx_release_older/2016.1.2/fbx20161_2_fbxsdk_linux.tar.gz"
      &&     mkdir -p fbx &&     tar xf "fbx.tar.gz" --directory="fbx" &&     chmod
      +x fbx/fbx20161_2_fbxsdk_linux &&     mkdir -p /usr/fbxsdk &&     echo "yes\nno\nn"
      | fbx/fbx20161_2_fbxsdk_linux /usr/fbxsdk
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/PDAL &&     cd /tmp/PDAL &&     git init &&     git remote add
      origin https://github.com/PDAL/PDAL.git &&     git fetch --tags &&     latestTag=$(git
      describe --tags `git rev-list --tags --max-count=1`) &&     cd /root && rm -rf
      /tmp/PDAL &&     git clone --branch $latestTag --depth 1 https://github.com/PDAL/PDAL.git
      PDAL
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir PDAL/build &&     cd PDAL/build &&     cmake -G "Unix Makefiles" -H/root/PDAL
      -B/root/PDAL/build         -DCMAKE_BUILD_TYPE=Release         -DWITH_TESTS=OFF         -DWITH_LASZIP=ON         -DBUILD_PLUGIN_PYTHON=ON         -DBUILD_PLUGIN_PGPOINTCLOUD=ON     &&
      make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libpcl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/davisking/dlib &&     mkdir -p dlib/build &&     cd
      dlib/build &&     cmake -G "Unix Makefiles" -H/root/dlib -B/root/dlib/build
      &&     make &&     make install &&     cd .. &&     python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/lib/x86_64-linux-gnu/libvtkCommonCore-6.2.so /usr/lib/libvtkproj4.so
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/cloudcompare/CloudCompare.git &&     mkdir
      -p CloudCompare/build &&     cd /root/CloudCompare/build &&     git submodule
      init &&     git submodule update &&     cmake -G "Unix Makefiles" -H/root/CloudCompare
      -B/root/CloudCompare/build         -DCMAKE_BUILD_TYPE=Release         -DCMAKE_INSTALL_PREFIX=/opt/CloudCompare         -DPLUGIN_GL_QEDL=ON         -DPLUGIN_GL_QSSAO=ON         -DPLUGIN_STANDARD_QANIMATION=ON         -DWITH_FFMPEG_SUPPORT=ON         -DFFMPEG_INCLUDE_DIR=/usr/include/x86_64-linux-gnu         -DFFMPEG_LIBRARY_DIR=/usr/lib/x86_64-linux-gnu         -DPLUGIN_STANDARD_QBROOM=ON         -DPLUGIN_STANDARD_QCSF=ON         -DPLUGIN_STANDARD_QCOMPASS=ON         -DPLUGIN_STANDARD_QFACETS=ON         -DOPTION_USE_SHAPE_LIB=ON         -DPLUGIN_STANDARD_QHPR=ON         -DPLUGIN_STANDARD_QHOUGH_NORMALS=ON         -DEIGEN_ROOT_DIR=/usr/include/eigen3         -DPLUGIN_STANDARD_QM3C2=ON         -DPLUGIN_STANDARD_QPCL=ON         -DPLUGIN_STANDARD_QPCV=ON         -DPLUGIN_STANDARD_QPOISSON_RECON=ON         -DPOISSON_RECON_WITH_OPEN_MP=ON         -DPLUGIN_STANDARD_QRANSAC_SD=ON         -DPLUGIN_STANDARD_QSRA=ON         -DOPTION_USE_DXF_LIB=ON         -DPLUGIN_IO_QADDITIONAL=ON         -DPLUGIN_IO_QCSV_MATRIX=ON         -DPLUGIN_IO_QCORE=ON         -DPLUGIN_IO_QE57=ON         -DPLUGIN_IO_QFBX=ON         -DFBX_SDK_INCLUDE_DIR=/usr/fbxsdk/include         -DFBX_SDK_LIBRARY_FILE=/usr/fbxsdk/lib/gcc4/x64/release/libfbxsdk.so         -DPLUGIN_IO_QPDAL=TRUE         -DPLUGIN_IO_QPHOTOSCAN=ON         -DOPTION_USE_GDAL=ON         -DCOMPILE_CC_CORE_LIB_WITH_TBB=ON         -DCOMPILE_CC_CORE_LIB_WITH_CGAL=ON         -DJSON_ROOT_DIR=/usr/include/jsoncpp         &&     make
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/ldconfig -v
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/opt/CloudCompare/lib/cloudcompare:$LD_LIBRARY_PATH"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"/opt/CloudCompare/bin:$PATH"'
    Name: env
  - CmdLine:
    - "apt-get -y autoremove &&     apt-get clean && \trm -rf /var/lib/apt/lists/*
      &&     echo \"Timestamp:\" `date --utc` | tee /image-build-info.txt"
    Name: run
    PrependShell: true
  From:
    Image: dorowu/ubuntu-desktop-lxde-vnc
  Name: base
  Platform: ""
  SourceCode: FROM dorowu/ubuntu-desktop-lxde-vnc as Base
