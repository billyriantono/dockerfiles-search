MetaArgs:
- DefaultValue: '''Europe/London'''
  Key: TZ
  ProvidedValue: null
  Value: '''Europe/London'''
Stages:
- As: base
  BaseName: ubuntu
  Commands:
  - Env:
    - Key: BUILD_ROOT
      Value: '''/opt/sources'''
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Name: workdir
    Path: ${BUILD_ROOT}
  - CmdLine:
    - "apt-get update &&     echo ${TZ} > /etc/timezone &&     apt-get install -y
      \        software-properties-common         build-essential g++ git cmake unzip
      wget apt-utils         ffmpeg         libavcodec-dev         libavformat-dev
      \        libavutil-dev         libeigen3-dev         libswscale-dev         libtbb-dev
      \        libxerces-c-dev         libssl-dev         python3-dev         libcgal-dev
      \        zip         zlib1g-dev         libglu1-mesa-dev         freeglut3-dev
      \        mesa-common-dev         mesa-utils         libpng-dev         libusb-dev
      \        libpcap-dev     &&     add-apt-repository --yes ppa:ubuntugis/ppa &&
      \    apt-get update &&     apt-get install -y libproj-dev libgdal-dev &&     apt-get
      upgrade -y &&     apt-get install -y gdal-bin python-gdal python3-gdal libgeotiff-dev
      libjsoncpp-dev python-numpy     &&     mkdir -p /tmp/LASzip &&     cd /tmp/LASzip
      &&     git init &&     git remote add origin https://github.com/LASzip/LASzip.git
      &&     git fetch --tags &&     latestTag=$(git describe --tags `git rev-list
      --tags --max-count=1`) &&     cd ${BUILD_ROOT} && rm -rf /tmp/LASzip &&     git
      clone --branch $latestTag --depth 1 https://github.com/LASzip/LASzip.git LASzip
      \    &&     mkdir -p LASzip/build &&     cd LASzip/build &&     cmake -G \"Unix
      Makefiles\" -H${BUILD_ROOT}/LASzip -B${BUILD_ROOT}/LASzip/build     && make
      &&     make install     &&     wget https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/eigen3/3.3.4-2/eigen3_3.3.4.orig.tar.bz2
      &&     tar xvjf eigen* &&     cd eigen-eigen* &&     mkdir build &&     cd build
      &&     cmake -DCMAKE_BUILD_TYPE=Release     .. &&     make &&     make install
      \    &&     wget -O \"fbx.tar.gz\" \"http://download.autodesk.com/us/fbx_release_older/2016.1.2/fbx20161_2_fbxsdk_linux.tar.gz\"
      &&     mkdir -p fbx &&     tar xf \"fbx.tar.gz\" --directory=\"fbx\" &&     chmod
      +x fbx/fbx20161_2_fbxsdk_linux &&     mkdir -p /usr/fbxsdk &&     echo \"yes\\nno\\nn\\n\"
      | fbx/fbx20161_2_fbxsdk_linux /usr/fbxsdk     &&     mkdir -p /tmp/PDAL &&     cd
      /tmp/PDAL &&     git init &&     git remote add origin https://github.com/PDAL/PDAL.git
      &&     git fetch --tags &&     latestTag=$(git describe --tags `git rev-list
      --tags --max-count=1`) &&     cd ${BUILD_ROOT} && rm -rf /tmp/PDAL &&     git
      clone --branch $latestTag --depth 1 https://github.com/PDAL/PDAL.git PDAL     &&
      \    mkdir PDAL/build &&     cd PDAL/build &&     cmake -G \"Unix Makefiles\"
      -H${BUILD_ROOT}/PDAL -B${BUILD_ROOT}/PDAL/build         -DCMAKE_BUILD_TYPE=Release
      \        -DWITH_TESTS=OFF         -DWITH_COMPLETION=ON         -DWITH_LASZIP=ON
      \        -DBUILD_PLUGIN_PYTHON=ON         -DBUILD_PLUGIN_PGPOINTCLOUD=ON         -DBUILD_PLUGIN_SQLITE=ON
      \        -DFBX_INCLUDE_DIRS=/usr/fbxsdk/include         -DFBX_LIBRARIES=/usr/fbxsdk/lib/gcc4/x64/release
      \        -DBUILD_PLUGIN_FBX=ON         -DBUILD_PLUGIN_E57=ON     && make &&
      \    make install     &&     apt-get install -y libpcl-dev     &&     /sbin/ldconfig
      -v     &&     apt-get -y autoremove &&     apt-get clean && \trm -rf /var/lib/apt/lists/*
      &&     rm -rf /opt/sources &&     echo \"Timestamp:\" `date --utc` | tee /image-build-info.txt"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /data
  From:
    Image: ubuntu
  Name: base
  Platform: ""
  SourceCode: FROM ubuntu as Base
