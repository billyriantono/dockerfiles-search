MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apk add --no-cache dcron ca-certificates python python2-dev py-setuptools &&     chmod
      go+x /usr/sbin/crond &&     if [[ ! -e /usr/bin/python ]];        then ln -sf
      /usr/bin/python2.7 /usr/bin/python; fi &&     if [[ ! -e /usr/bin/python-config
      ]]; then ln -sf /usr/bin/python2.7-config /usr/bin/python-config; fi &&     if
      [[ ! -e /usr/bin/easy_install ]]; then ln -sf /usr/bin/easy_install-2.7 /usr/bin/easy_install;
      fi &&     easy_install pip &&     pip install --upgrade pip &&     addgroup
      -S -g 50 docker &&     adduser -D -S -u 1001 -G docker docker &&     addgroup
      docker cron
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - ./
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ecr-update.sh
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - swarm-update.sh
    - ./
  - CmdLine:
    - rm -rf /var/spool/cron/crontabs &&     mkdir -m 0777 -p /var/spool/cron/crontabs
      &&     chown 1001:50 /opt/ecr-update.sh &&     chown 1001:50 /opt/swarm-update.sh
      &&     chmod +x /opt/*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: REGION
      Value: '"eu-west-1"'
    Name: env
  - Name: volume
    Volumes:
    - /home/docker
  - CmdLine:
    - ./entrypoint.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
