{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6",
      "SourceCode": "FROM php:5.6",
      "Platform": "",
      "From": {
        "Image": "php:5.6"
      },
      "Commands": [
        {
          "Maintainer": "\"Diego Marangoni\" \u003chttps://github.com/diegomarangoni\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APCU_VERSION",
              "Value": "4.0.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MEMCACHE_VERSION",
              "Value": "3.0.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_VERSION",
              "Value": "1.6.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps=\"         libssl-dev         zlib1g-dev         libicu-dev         libmcrypt-dev         libxml2-dev         libmemcached-dev         libjpeg-dev         libpng12-dev     \"     extraPkgs=\"         git         nodejs         npm     \"    \u0026\u0026 set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y $buildDeps $extraPkgs --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 { yes 'no' | pecl install mongo-$MONGO_VERSION; }     \u0026\u0026 { yes '' | pecl install apcu-$APCU_VERSION; }     \u0026\u0026 { yes '' | pecl install memcache-$MEMCACHE_VERSION; }     \u0026\u0026 pecl install xdebug-$XDEBUG_VERSION     \u0026\u0026 docker-php-ext-install intl zip pdo_mysql mcrypt soap gd mbstring     \u0026\u0026 docker-php-ext-enable mongo apcu opcache memcache     \u0026\u0026 echo 'date.timezone=\"UTC\"' \u003e /usr/local/etc/php/conf.d/date-timezone.ini     \u0026\u0026 npm install -g less"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"readfile('https://getcomposer.org/installer');\" \u003e composer-setup.php     \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('composer-setup.php')) !== '781c98992e23d4a5ce559daf0170f8a9b3b91331ddc4a3fa9f7d42b6d981513cdc1411730112495fbf9d59cffbf20fb2') { echo 'Installer corrupt'; unlink('composer-setup.php'); }\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/bin --filename=composer     \u0026\u0026 php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}