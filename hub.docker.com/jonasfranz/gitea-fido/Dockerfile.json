{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build-env",
      "BaseName": "golang:1.11-alpine3.8",
      "SourceCode": "FROM golang:1.11-alpine3.8 AS build-env",
      "Platform": "",
      "As": "build-env",
      "From": {
        "Image": "golang:1.11-alpine3.8"
      },
      "Commands": [
        {
          "Key": "GITEA_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "TAGS",
          "Name": "arg",
          "Value": "\"sqlite sqlite_unlock_notify\""
        },
        {
          "Env": [
            {
              "Key": "TAGS",
              "Value": "\"bindata $TAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add build-base git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "${GOPATH}/src/code.gitea.io/gitea"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${GOPATH}/src/code.gitea.io/gitea"
        },
        {
          "CmdLine": [
            "if [ -n \"${GITEA_VERSION}\" ]; then git checkout \"${GITEA_VERSION}\"; fi  \u0026\u0026 make clean generate build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"maintainers@gitea.io\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "3000"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add     bash     ca-certificates     curl     gettext     git     linux-pam     openssh     s6     sqlite     su-exec     tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup     -S -g 1000     git \u0026\u0026   adduser     -S -H -D     -h /data/git     -s /bin/bash     -u 1000     -G git     git \u0026\u0026   echo \"git:$(dd if=/dev/urandom bs=24 count=1 status=none | base64)\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITEA_CUSTOM",
              "Value": "/data/gitea"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/s6-svscan",
            "/etc/s6"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/code.gitea.io/gitea/gitea",
            "/app/gitea/gitea"
          ]
        },
        {
          "CmdLine": [
            "ln -s /app/gitea/gitea /usr/local/bin/gitea"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}