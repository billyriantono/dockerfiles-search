MetaArgs: null
Stages:
- As: basis
  BaseName: python:3.6-alpine
  Commands:
  - CmdLine:
    - apk update && apk --no-cache add postgresql-dev gcc musl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cython
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/requirements
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - python3 -m venv /usr/src/venv
    Name: run
    PrependShell: true
  - Env:
    - Key: VIRTUAL_ENV
      Value: '"/usr/src/venv"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"$VIRTUAL_ENV/bin:$PATH"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /usr/src/app
  - CmdLine:
    - pip install -r requirements/requirements.txt
    Name: run
    PrependShell: true
  From:
    Image: python:3.6-alpine
  Name: basis
  Platform: ""
  SourceCode: FROM python:3.6-alpine as basis
- BaseName: python:3.6-alpine
  Commands:
  - Chown: ""
    From: basis
    Name: copy
    SourcesAndDest:
    - /usr/src/venv
    - /usr/src/venv
  - Chown: ""
    From: basis
    Name: copy
    SourcesAndDest:
    - /usr/src/app
    - /usr/src/app
  - CmdLine:
    - apk update && apk --no-cache add libpq
    Name: run
    PrependShell: true
  - Env:
    - Key: VIRTUAL_ENV
      Value: '"/usr/src/venv"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"$VIRTUAL_ENV/bin:$PATH"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"/usr/src/app"'
    Name: env
  - Name: workdir
    Path: /usr/src/app
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - sh
    - ./docker/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-alpine
