{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Wodby \u003chello@wodby.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGX_VER",
              "Value": "1.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_UP_VER",
              "Value": "0.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_LUA_VER",
              "Value": "0.10.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_NDK_VER",
              "Value": "0.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_NXS_VER",
              "Value": "0.54"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/lib/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/include/luajit-2.0/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -S -g 82 www-data \u0026\u0026     addgroup -S nginx \u0026\u0026     adduser -S -D -H -h /var/www/localhost/htdocs -s /sbin/nologin -G nginx -g nginx nginx \u0026\u0026     addgroup nginx www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update         openssl         ca-certificates         pcre         zlib         luajit         geoip         tar         libcrypto1.0         libssl1.0         tar         build-base         autoconf         libtool         openssl-dev         pcre-dev         zlib-dev         luajit-dev         geoip-dev \u0026\u0026     wget -qO- http://nginx.org/download/nginx-${NGX_VER}.tar.gz | tar xz -C /tmp/ \u0026\u0026     wget -qO- https://github.com/simpl/ngx_devel_kit/archive/v${NGX_NDK_VER}.tar.gz | tar xz -C /tmp/ \u0026\u0026     wget -qO- https://github.com/masterzen/nginx-upload-progress-module/archive/v${NGX_UP_VER}.tar.gz | tar xz -C /tmp/ \u0026\u0026     wget -qO- https://github.com/openresty/lua-nginx-module/archive/v${NGX_LUA_VER}.tar.gz | tar xz -C /tmp/ \u0026\u0026     wget -qO- https://github.com/nbs-system/naxsi/archive/${NGX_NXS_VER}.tar.gz | tar xz -C /tmp/ \u0026\u0026     cd /tmp/nginx-${NGX_VER} \u0026\u0026     ./configure         --prefix=/usr/share/nginx         --sbin-path=/usr/sbin/nginx         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --pid-path=/var/run/nginx/nginx.pid         --lock-path=/var/run/nginx/nginx.lock         --http-client-body-temp-path=/var/lib/nginx/tmp/client_body         --http-proxy-temp-path=/var/lib/nginx/tmp/proxy         --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi         --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi         --http-scgi-temp-path=/var/lib/nginx/tmp/scgi         --user=nginx         --group=nginx         --with-pcre-jit         --with-http_ssl_module         --with-http_realip_module         --with-http_addition_module         --with-http_sub_module         --with-http_dav_module         --with-http_flv_module         --with-http_mp4_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_random_index_module         --with-http_secure_link_module         --with-http_stub_status_module         --with-http_auth_request_module         --with-mail         --with-mail_ssl_module         --with-http_v2_module         --with-ipv6         --with-threads         --with-stream         --with-stream_ssl_module         --with-http_geoip_module         --with-ld-opt=\"-Wl,-rpath,/usr/lib/\"         --add-module=/tmp/ngx_devel_kit-${NGX_NDK_VER}/         --add-module=/tmp/nginx-upload-progress-module-${NGX_UP_VER}/         --add-module=/tmp/lua-nginx-module-${NGX_LUA_VER}/         --add-module=/tmp/naxsi-${NGX_NXS_VER}/naxsi_src/ \u0026\u0026     make -j2 \u0026\u0026     make install \u0026\u0026     apk del --purge *-dev build-base autoconf libtool \u0026\u0026     rm -rf /var/cache/apk/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/nginx/conf.d \u0026\u0026     mkdir -p /var/lib/nginx/tmp \u0026\u0026     chmod 755 /var/lib/nginx \u0026\u0026     chmod -R 755 /var/lib/nginx/tmp \u0026\u0026     mkdir -p /etc/nginx/pki \u0026\u0026     chmod 400 /etc/nginx/pki"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fastcgi_params",
            "/etc/nginx/fastcgi_params"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wordpress.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "\"docker-entrypoint.sh\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}