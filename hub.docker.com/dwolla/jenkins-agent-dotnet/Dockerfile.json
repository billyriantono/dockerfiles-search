{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jre",
      "SourceCode": "FROM openjdk:8-jre",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jre"
      },
      "Commands": [
        {
          "Maintainer": "Dwolla Dev \u003cdev+jenkins-dotnet@dwolla.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/Dwolla/jenkins-agent-docker-dotnet\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/home/jenkins"
            },
            {
              "Key": "JENKINS_AGENT",
              "Value": "/usr/share/jenkins"
            },
            {
              "Key": "AGENT_VERSION",
              "Value": "2.61"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-agent",
            "/usr/local/bin/jenkins-agent"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_CLI_TELEMETRY_OPTOUT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SKIP_FIRST_TIME_EXPERIENCE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         libc6         libcurl3         libgcc1         libgssapi-krb5-2         libicu57         liblttng-ust0         libssl1.0.2         libstdc++6         libunwind8         libuuid1         zlib1g     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_VERSION",
              "Value": "2.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_DOWNLOAD_URL",
              "Value": "https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_DOWNLOAD_SHA",
              "Value": "E457F3A5685382F7F24851A2E76EDBE75B575948C8A7F43220F159BA29C329A5008BBE7220C18DFB31EAF0398FC72177B1948B65E19B34ED0D907EFB459CF4B0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz     \u0026\u0026 echo \"$DOTNET_SDK_DOWNLOAD_SHA dotnet.tar.gz\" | sha512sum -c -     \u0026\u0026 mkdir -p /usr/share/dotnet     \u0026\u0026 tar -zxf dotnet.tar.gz -C /usr/share/dotnet     \u0026\u0026 rm dotnet.tar.gz     \u0026\u0026 ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir warmup     \u0026\u0026 cd warmup     \u0026\u0026 dotnet new     \u0026\u0026 cd ..     \u0026\u0026 rm -rf warmup     \u0026\u0026 rm -rf /tmp/NuGetScratch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --create-dirs -sSLo ${JENKINS_AGENT}/agent.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${AGENT_VERSION}/remoting-${AGENT_VERSION}.jar \u0026\u0026     chmod 755 ${JENKINS_AGENT} \u0026\u0026     chmod 644 ${JENKINS_AGENT}/agent.jar \u0026\u0026     mkdir -p ${JENKINS_HOME} \u0026\u0026     useradd --home ${JENKINS_HOME} --system jenkins \u0026\u0026     chown -R jenkins ${JENKINS_HOME} \u0026\u0026     chmod 755 /usr/local/bin/jenkins-agent \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${JENKINS_HOME}"
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "git config --global user.email \"dev+jenkins@dwolla.com\" \u0026\u0026     git config --global user.name \"Jenkins Build Agent\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jenkins-agent"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}