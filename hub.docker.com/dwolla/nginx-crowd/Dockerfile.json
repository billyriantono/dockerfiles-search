{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add nginx-mod-http-lua ca-certificates \u0026\u0026     apk add --virtual build-deps bash build-base curl lua5.1-dev luarocks5.1 openssl-dev \u0026\u0026     /usr/bin/luarocks-5.1 install luasec \u0026\u0026     /usr/bin/luarocks-5.1 install lua-Spore \u0026\u0026     mkdir -p /tmp/src \u0026\u0026     cd /tmp/src \u0026\u0026         curl --location -o nginx-crowd-lua.tgz https://github.com/Dwolla/nginx-crowd-lua/archive/master.tar.gz \u0026\u0026     tar xzvf nginx-crowd-lua.tgz \u0026\u0026     mkdir -p /etc/nginx/lua /usr/local/share/lua/5.1/Spore/Middleware \u0026\u0026     cp nginx-crowd-lua-master/crowd-auth.lua /etc/nginx/lua \u0026\u0026     cp nginx-crowd-lua-master/Spore/Middleware/AdvancedCacheKey.lua /usr/local/share/lua/5.1/Spore/Middleware/AdvancedCacheKey.lua \u0026\u0026         mkdir -p /run/nginx \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026         apk del build-deps \u0026\u0026     rm -rf /tmp/src \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}