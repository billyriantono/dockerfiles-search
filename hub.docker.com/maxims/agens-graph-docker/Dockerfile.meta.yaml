MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - "apt-get update && apt-get -y -q install git build-essential libreadline-dev
      zlib1g-dev flex bison                                             libxml2-dev
      libxslt-dev libssl-dev openssl libgnutls-openssl27 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlibcrypto++-dev
      libldap2-dev libpam0g-dev tcl-dev python-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/bitnine-oss/agens-graph.git
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /agens-graph       && ./configure --prefix=`pwd` --with-tcl --with-pam --with-ldap
      --with-openssl --with-libxml --with-libxslt \t\t\t&& export PATH=$(pwd)/bin:$PATH
      \t\t\t&& make install       && make install-world"
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999 postgres
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /agens-graph/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /agens-graph/data
    Name: env
  - CmdLine:
    - mkdir -p /agens-graph/data && chown -R postgres agens-graph/data
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /agens-graph/data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R postgres /agens-graph/data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /agens-graph/data
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: PORT
      Value: "5432"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/*
      \t&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
