{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y     sudo     wget     autoconf     automake     make     git     vim     gcc     g++     gfortran     zlib1g-dev     libffi-dev     libx11-dev     libssl-dev     \u0026\u0026 apt-get clean all     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /build/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /build \u0026\u0026 wget --no-check-certificate https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz   \u0026\u0026 tar xvzf Python-3.7.2.tgz \u0026\u0026 cd /build/Python-3.7.2   \u0026\u0026 ./configure --with-ensurepip=install \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026 make clean \u0026\u0026 rm /build/Python-3.7.2.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /build \u0026\u0026 wget --no-check-certificate https://www.mpich.org/static/downloads/3.3/mpich-3.3.tar.gz   \u0026\u0026 tar xvzf mpich-3.3.tar.gz \u0026\u0026 cd /build/mpich-3.3   \u0026\u0026 ./configure \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026 make clean \u0026\u0026 rm /build/mpich-3.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /build \u0026\u0026 wget --no-check-certificate https://bitbucket.org/mpi4py/mpi4py/downloads/mpi4py-3.0.1.tar.gz   \u0026\u0026 tar xvzf mpi4py-3.0.1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /build/mpi4py-3.0.1 \u0026\u0026 python3 setup.py build \u0026\u0026 python3 setup.py install \u0026\u0026 rm -rf /build/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install     numpy     scipy     h5py     matplotlib     openPMD-viewer     Forthon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GIT_SSL_NO_VERIFY",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://bitbucket.org/dpgrote/pygist.git     \u0026\u0026 cd pygist     \u0026\u0026 python3 setup.py config     \u0026\u0026 python3 setup.py install     \u0026\u0026 cd ../     \u0026\u0026 rm -rf pygist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --create-home warp_user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/warp_user/warp/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/home/warp_user/warp/"
          ]
        },
        {
          "CmdLine": [
            "cd /home/warp_user/warp/pywarp90     \u0026\u0026 rm -f *local*     \u0026\u0026 echo 'FCOMP= -F gfortran' \u003e\u003e Makefile.local3     \u0026\u0026 echo 'FCOMP= -F gfortran' \u003e\u003e Makefile.local3.pympi     \u0026\u0026 echo 'FCOMPEXEC= --fcompexec mpifort' \u003e\u003e Makefile.local3.pympi     \u0026\u0026 make install3     \u0026\u0026 make clean3     \u0026\u0026 make pinstall3     \u0026\u0026 make pclean3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R warp_user /home/warp_user/warp/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chgrp -R warp_user /home/warp_user/warp/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'warp_user ALL=(ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/warp_user"
        },
        {
          "Name": "user",
          "User": "warp_user"
        },
        {
          "CmdLine": [
            "mkdir run/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/warp_user/run/"
        }
      ]
    }
  ]
}