{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "UID",
          "Name": "arg",
          "Value": "1001"
        },
        {
          "Key": "GID",
          "Name": "arg",
          "Value": "1001"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026 apt-get install -y nodejs fontforge ttfautohint \u0026\u0026 apt-get install -y build-essential \u0026\u0026 npm install -g grunt-cli --save-dev \u0026\u0026 npm install -g grunt-contrib-jshint --save-dev \u0026\u0026 npm install -g grunt-contrib-uglify --save-dev \u0026\u0026 npm install -g grunt-contrib-clean --save-dev \u0026\u0026 npm install -g grunt-contrib-concat --save-dev \u0026\u0026 npm install -g grunt-contrib-cssmin --save-dev \u0026\u0026 npm install -g grunt-contrib-less --save-dev \u0026\u0026 npm install -g grunt-shell --save-dev \u0026\u0026 npm install -g grunt-contrib-coffee --save-dev \u0026\u0026 npm install -g grunt-bower-task --save-dev \u0026\u0026 npm install -g grunt-contrib-symlink --save-dev \u0026\u0026 npm install -g grunt-symlink --save-dev \u0026\u0026 npm install -g grunt-contrib-copy --save-dev \u0026\u0026 npm install -g grunt-contrib-watch --save-dev \u0026\u0026 npm install -g grunt-webfont --save-dev \u0026\u0026 npm install -g bower --save-dev \u0026\u0026 npm install -g generator-angular --save-dev \u0026\u0026 npm install -g coffee-script --save-dev \u0026\u0026 apt-get install -y ruby-full \u0026\u0026 gem install bundler \u0026\u0026 ln -s /usr/bin/nodejs /usr/local/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export uid=$UID gid=$GID \u0026\u0026     mkdir -p /home/developer/project \u0026\u0026     echo \"developer:x:$UID:$GID:Developer,,,:/home/developer:/bin/bash\" \u003e\u003e /etc/passwd \u0026\u0026     echo \"developer:x:$UID:\" \u003e\u003e /etc/group \u0026\u0026     echo \"developer ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     chown $UID:$GID -R /home/developer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "developer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/developer/project"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/developer/project"
        }
      ]
    }
  ]
}