MetaArgs: null
Stages:
- BaseName: ubuntu:vivid
  Commands:
  - Maintainer: Angus Lees <gus@inodes.org>
    Name: maintainer
  - Env:
    - Key: PATH
      Value: /usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
    - Key: PREFIX
      Value: /home/install
    - Key: ETC_IN
      Value: /home/install/etc
    - Key: ETC
      Value: /home/user/etc
    - Key: BRANCH
      Value: stable/liberty
    Name: env
  - CmdLine:
    - apt-get -q update && apt-get -qy upgrade &&  adduser --disabled-login --gecos
      'Unprivileged runtime user' user &&  adduser --disabled-login --gecos 'Unprivileged
      install user' install &&  apt-get -qy --no-install-recommends install  sudo
      virtualenv python-dev python-pip git build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -x &&  apt-get -qy --no-install-recommends install  libxslt-dev libxml2-dev
      zlib1g-dev libyaml-dev libffi-dev libssl-dev  iproute2 iptables novnc python-libvirt
      &&  mkdir -p /etc/nova /var/lib/nova /var/lock/nova &&  chown user:user /var/lib/nova
      /var/lock/nova &&  ln -s $ETC/nova/rootwrap.conf /etc/nova/rootwrap.conf &&  ln
      -s $ETC/nova/rootwrap.d /etc/nova/rootwrap.d &&  echo "user ALL = (root) NOPASSWD:
      $PREFIX/venv/bin/nova-rootwrap /etc/nova/rootwrap.conf *" > /etc/sudoers.d/rootwrap'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - _wrap.sh
    - /usr/local/bin/
  - CmdLine:
    - /usr/local/bin/_wrap.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Name: user
    User: install
  - CmdLine:
    - set -x &&  cd $PREFIX &&  git clone --depth 1 --single-branch --branch $BRANCH
      https://github.com/openstack/nova.git git-fetch &&  cd git-fetch &&  virtualenv
      --system-site-packages $PREFIX/venv &&  $PREFIX/venv/bin/pip install --upgrade
      --compile 'pip>=6' &&  $PREFIX/venv/bin/pip install --compile 'pbr>=1.3' &&  $PREFIX/venv/bin/pip
      install --compile . PyMySQL &&  mkdir -p $ETC_IN &&  cp -r etc/nova $ETC_IN/nova
      &&  . $PREFIX/venv/bin/activate && nova-api --help >/dev/null
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nova.conf.in
    - /home/install/etc/nova/
  - Name: user
    User: user
  - Name: workdir
    Path: /
  - Name: volume
    Volumes:
    - /instances
  - Name: expose
    Ports:
    - "6080"
    - "8773"
    - "8774"
    - "8775"
  From:
    Image: ubuntu:vivid
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:vivid
