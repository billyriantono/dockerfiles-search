{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:vivid",
      "SourceCode": "FROM ubuntu:vivid",
      "Platform": "",
      "From": {
        "Image": "ubuntu:vivid"
      },
      "Commands": [
        {
          "Maintainer": "Angus Lees \u003cgus@inodes.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
            },
            {
              "Key": "PREFIX",
              "Value": "/home/install"
            },
            {
              "Key": "ETC_IN",
              "Value": "/home/install/etc"
            },
            {
              "Key": "ETC",
              "Value": "/home/user/etc"
            },
            {
              "Key": "BRANCH",
              "Value": "stable/liberty"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -q update \u0026\u0026 apt-get -qy upgrade \u0026\u0026  adduser --disabled-login --gecos 'Unprivileged runtime user' user \u0026\u0026  adduser --disabled-login --gecos 'Unprivileged install user' install \u0026\u0026  apt-get -qy --no-install-recommends install  sudo virtualenv python-dev python-pip git build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qy --no-install-recommends install  libxslt-dev libxml2-dev libffi-dev libssl-dev \u0026\u0026  mkdir -p /etc/cinder /var/lib/cinder /var/lock/cinder \u0026\u0026  chown user:user /var/lib/cinder /var/lock/cinder \u0026\u0026  ln -s $ETC/cinder/rootwrap.conf /etc/cinder/rootwrap.conf \u0026\u0026  ln -s $ETC/cinder/rootwrap.d /etc/cinder/rootwrap.d \u0026\u0026  echo \"user ALL = (root) NOPASSWD: $PREFIX/venv/bin/cinder-rootwrap /etc/cinder/rootwrap.conf *\" \u003e /etc/sudoers.d/rootwrap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "_wrap.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/_wrap.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "install"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026  cd $PREFIX \u0026\u0026  git clone --depth 1 --single-branch --branch $BRANCH https://github.com/openstack/cinder.git git-fetch \u0026\u0026  cd git-fetch \u0026\u0026  virtualenv --system-site-packages $PREFIX/venv \u0026\u0026  $PREFIX/venv/bin/pip install --upgrade pip \u0026\u0026  $PREFIX/venv/bin/pip install --compile . PyMySQL \u0026\u0026  mkdir -p $ETC_IN/cinder \u0026\u0026  cp -r etc/cinder/* $ETC_IN/cinder/ \u0026\u0026  . $PREFIX/venv/bin/activate \u0026\u0026 cinder-api --help \u003e/dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cinder.conf.in",
            "/home/install/etc/nova/"
          ]
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "expose",
          "Ports": [
            "8776"
          ]
        }
      ]
    }
  ]
}