{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Key": "GLPI_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "GLPI_VERSION",
              "Value": "\"${GLPI_VERSION}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLPI_PATHS_ROOT",
              "Value": "/var/www"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLPI_PATHS_PLUGINS",
              "Value": "/var/www/plugins"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLPI_ENABLE_CRONJOB",
              "Value": "yes"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLPI_REMOVE_INSTALLER",
              "Value": "no"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLPI_CHMOD_PATHS_FILES",
              "Value": "no"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLPI_INSTALL_PLUGINS",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add       curl       nginx       fping       graphviz       iputils       php5       php5-apcu       php5-cli       php5-ctype       php5-curl       php5-dom       php5-fpm       php5-gd       php5-imap       php5-json       php5-ldap       php5-pdo_mysql       php5-phar       php5-mysqli       php5-openssl       php5-opcache       php5-soap       php5-xml       php5-xmlreader       php5-xmlrpc       php5-zlib       supervisor       tar       tzdata     \u0026\u0026 mkdir -p /run/nginx     \u0026\u0026 mkdir -p \"${GLPI_PATHS_ROOT}\"     \u0026\u0026 adduser -h \"${GLPI_PATHS_ROOT}\" -g 'Web Application User' -S -D -H -G www-data www-data     \u0026\u0026 cd \"${GLPI_PATHS_ROOT}\"     \u0026\u0026 curl -s -O -L \"https://github.com/glpi-project/glpi/releases/download/${GLPI_VERSION}/glpi-${GLPI_VERSION}.tgz\"     \u0026\u0026 tar -xzf \"glpi-${GLPI_VERSION}.tgz\" --strip 1     \u0026\u0026 EXPECTED_SIGNATURE=\"$(curl -s -o - https://composer.github.io/installer.sig)\"     \u0026\u0026 php5 -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\"     \u0026\u0026 CURRENT_SIGNATURE=\"$(php5 -r \"echo hash_file('SHA384', '/tmp/composer-setup.php');\")\"     \u0026\u0026 [ \"$EXPECTED_SIGNATURE\" == \"$CURRENT_SIGNATURE\" ] || (echo 'ERROR: Invalid installer signature' \u003e\u00262; rm composer-setup.php; exit 1)     \u0026\u0026 php5 /tmp/composer-setup.php --install-dir=/tmp/ \u0026\u0026 rm /tmp/composer-setup.php     \u0026\u0026 COMPOSER_HOME=/tmp/composer php5 /tmp/composer.phar require --no-interaction apereo/phpcas     \u0026\u0026 rm \"glpi-${GLPI_VERSION}.tgz\"     \u0026\u0026 rm -rf AUTHORS.txt CHANGELOG.md COPYING.txt LISEZMOI.txt README.md composer.json composer.lock     \u0026\u0026 find /root /tmp -mindepth 1 -maxdepth 1 -not -name '.' -and -not -name '..' | xargs rm -rf     \u0026\u0026 apk del --no-cache       php5-phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s|;daemonize\\s*=\\s*yes|daemonize = no|g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|display_errors = Off|display_errors = stderr|\" /etc/php5/php.ini \u0026\u0026     sed -i -e \"s|display_startup_errors = Off|display_startup_errors = On|\" /etc/php5/php.ini \u0026\u0026     sed -i -e \"s|user\\s*=\\s*nobody|user = www-data|g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|group\\s*=\\s*nobody|group = www-data|g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|listen\\s*=\\s*127\\.0\\.0\\.1:9000|listen = /var/run/php-fpm5.sock|g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|;listen\\.owner\\s*=\\s*.*$|listen.owner = www-data|g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|;listen\\.group\\s*=.*$|listen.group = nginx|g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|;listen\\.mode\\s*=\\s*|listen.mode = |g\" /etc/php5/php-fpm.conf \u0026\u0026     sed -i -e \"s|max_execution_time\\s*=.*$|max_execution_time = 600|\" /etc/php5/php.ini \u0026\u0026     sed -i -e \"s|upload_max_filesize\\s*=.*$|upload_max_filesize = 30M|\" /etc/php5/php.ini \u0026\u0026     chown -R www-data:www-data /var/www \u0026\u0026     chmod -R g=rX,o=--- /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/files",
            "/var/www/config"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"${GLPI_PATHS_ROOT}\""
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 3,
            "Test": [
              "CMD-SHELL",
              "curl --silent --fail http://localhost:80 || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}