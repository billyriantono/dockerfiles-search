MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Protopopys <protopopys@gmail.com>"'
    Name: label
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: OPENSSL_VERSION
      Value: '"1.0.2o"'
    Name: env
  - Key: GPG_KEYS
    Name: arg
    Value: '"0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7"'
  - Key: PHP_VERSION
    Name: arg
    Value: 5.3.29
  - Key: PHP_URL
    Name: arg
    Value: '"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror"'
  - Key: PHP_ASC_URL
    Name: arg
    Value: '"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz.asc/from/this/mirror"'
  - Key: PHP_SHA256
    Name: arg
    Value: 8438c2f14ab8f3d6cd2495aa37de7b559e33b610f9ab264f0c61b531bf0c262d
  - Key: PHP_MD5
    Name: arg
    Value: null
  - Key: PHP_USER
    Name: arg
    Value: www-data
  - Key: PHP_GROUP
    Name: arg
    Value: www-data
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=${PHP_USER} --with-fpm-group=${PHP_GROUP}
        --disable-cgi
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpkgconf \t\tre2c"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-*
    - /usr/local/bin/
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --update --no-cache --virtual .persistent-deps \tca-certificates \tcurl
      \ttar \txz && mkdir -p $PHP_INI_DIR/conf.d && set -xe; \tapk add --update --no-cache
      --virtual .fetch-deps \t\twget \t\tgnupg \t; \tmkdir -p /usr/src; \tcd /usr/src;
      \twget -O php.tar.xz \"$PHP_URL\"; \tif [ -n \"$PHP_SHA256\" ]; then \t\techo
      \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \tfi; \tif [ -n \"$PHP_MD5\" ];
      then \t\techo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; \tfi; \tif [ -n \"$PHP_ASC_URL\"
      ]; then \t\twget -O php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp
      -d)\"; \t\tfor key in ${GPG_KEYS}; do \t\t\tfound=''; \t\t\tfor server in \t
      \   \t\tipv4.pool.sks-keyservers.net \t\t\t\tha.pool.sks-keyservers.net \t\t\t\thkp://keyserver.ubuntu.com:80
      \t\t\t\thkp://p80.pool.sks-keyservers.net:80 \t\t\t\tpgp.mit.edu \t\t\t; do
      \t\t\t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\t\t\tgpg --keyserver
      \"${server}\" --keyserver-options timeout=10 --recv-keys \"$key\" && found=yes
      && break; \t\t\tdone; \t\t\ttest -z \"$found\" && echo >&2 \"error: failed to
      fetch GPG key $key\" && exit 1; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc
      php.tar.xz; \t\trm -rf \"$GNUPGHOME\"; \tfi && apk del .fetch-deps && apk add
      --update --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcoreutils \t\tcurl-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\tsqlite-dev && set -xe;     cd /tmp;     mkdir
      openssl;     curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\"
      -o openssl.tar.gz;     curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc\"
      -o openssl.tar.gz.asc;     tar -xzf openssl.tar.gz -C openssl --strip-components=1;
      \    cd /tmp/openssl;     ./config && make && make install;     rm -rf /tmp/*
      && export \tCFLAGS=\"$PHP_CFLAGS\"     CPPFLAGS=\"$PHP_CPPFLAGS\" \tLDFLAGS=\"$PHP_LDFLAGS\"
      && docker-php-source extract && cd /usr/src/php && gnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\" && set -xe; \t./configure \t--build=\"$gnuArch\"
      \t--with-config-file-path=\"$PHP_INI_DIR\" \t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t--enable-ftp \t--enable-mbstring \t--enable-mysqlnd \t--with-curl \t--with-libedit
      \t--with-openssl \t--with-zlib \t$(test \"$gnuArch\" = 's390x-linux-gnu' &&
      echo '--without-pcre-jit') \t$PHP_EXTRA_CONFIGURE_ARGS && make -j \"$(nproc)\"
      && make install && { find /usr/local/bin /usr/local/sbin -type f -perm +0111
      -exec strip --strip-all '{}' + || true; } && make clean && cd / && docker-php-source
      delete && runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive
      /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" && apk add --no-cache --virtual
      .php-rundeps $runDeps && apk del .build-deps && apk add --no-cache --virtual
      .gettext gettext && mv /usr/bin/envsubst /tmp/ && envsubstDeps=\"$( \tscanelf
      --needed --nobanner --format '%n#p' /tmp/envsubst \t| tr ',' '\\n' \t| sort
      -u \t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\" && apk add --no-cache tzdata && apk add --no-cache --virtual
      .envsubst-rundeps $envsubstDeps && apk del .gettext && mv /tmp/envsubst /usr/local/bin/
      && rm -rf /tmp/pear ~/.pearrc && set -ex; \tcd /usr/local/etc; \tif [ -d php-fpm.d
      ]; then \t\tsed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;
      \t\tcp php-fpm.d/www.conf.default php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d;
      \t\tcp php-fpm.conf.default php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]';
      \t\t\techo 'include=etc/php-fpm.d/*.conf'; \t\t} | tee php-fpm.conf; \tfi; \t{
      \t\techo '[global]'; \t\techo 'error_log = /proc/self/fd/2'; \t\techo; \t\techo
      '[www]'; \t\techo '; if we send this to /proc/self/fd/1, it never appears';
      \t\techo 'access.log = /proc/self/fd/2'; \t\techo; \t\techo; \t\techo '; Ensure
      worker stdout and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf; \t{ \t\techo '[global]'; \t\techo 'daemonize
      = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = 9000'; \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
