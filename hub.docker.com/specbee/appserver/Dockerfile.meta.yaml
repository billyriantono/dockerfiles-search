MetaArgs:
- DefaultValue: 7.1-fpm
  Key: PHP_BASE_IMAGE
  ProvidedValue: null
  Value: 7.1-fpm
Stages:
- BaseName: php:${PHP_BASE_IMAGE}
  Commands:
  - Key: PHP_BASE_IMAGE
    Name: arg
    Value: null
  - Env:
    - Key: PHP_VERSION
      Value: $PHP_BASE_IMAGE
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y         git         openssl         supervisor         wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get -y install nginx
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /etc/nginx
  - CmdLine:
    - rm -Rf conf.d/default.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./templates/default.nginx.cnf
    - sites-available/default
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - apt-get install -y     bzip2     curl     imagemagick     libjpeg-dev     libldap2-dev     libmagickwand-dev     libmcrypt-dev     libmemcached-dev     libpq-dev     libxml2-dev     mysql-client     openssh-client     rsync     &&
      pecl install        imagick        memcached     && docker-php-ext-configure
      gd --with-png-dir=/usr --with-jpeg-dir=/usr     && docker-php-ext-enable         imagick         memcached     &&
      docker-php-ext-install         calendar         dom         gd         json         mbstring         mysqli         opcache         pdo         pdo_mysql         soap         xml         zip     &&
      echo default_mimetype="" > /usr/local/etc/php/conf.d/default_mimetype.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $PHP_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$PHP_VERSION" = "7.2-fpm" ]; then     pecl install mcrypt-1.0.1;     docker-php-ext-enable
      mcrypt;     else     echo $PHP_VERSION;     docker-php-ext-install mcrypt;     fi;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./templates/core-php.ini
    - /usr/local/etc/php/conf.d/core-php.ini
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php     && mv composer.phar /usr/local/bin/     &&
      ln -s /usr/local/bin/composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require hirak/prestissimo
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /etc/supervisor
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./templates/supervisord.conf
    - conf.d/super.conf
  - CmdLine:
    - /usr/bin/supervisord
    - -n
    - -c
    - /etc/supervisor/conf.d/super.conf
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - apt-get -y clean     && apt-get -y autoclean     && apt-get -y autoremove
    Name: run
    PrependShell: true
  From:
    Image: php:${PHP_BASE_IMAGE}
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_BASE_IMAGE}
