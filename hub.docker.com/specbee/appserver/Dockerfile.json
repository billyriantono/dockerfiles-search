{
  "MetaArgs": [
    {
      "Key": "PHP_BASE_IMAGE",
      "DefaultValue": "7.1-fpm",
      "ProvidedValue": null,
      "Value": "7.1-fpm"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:${PHP_BASE_IMAGE}",
      "SourceCode": "FROM php:${PHP_BASE_IMAGE}",
      "Platform": "",
      "From": {
        "Image": "php:${PHP_BASE_IMAGE}"
      },
      "Commands": [
        {
          "Key": "PHP_BASE_IMAGE",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "$PHP_BASE_IMAGE"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         git         openssl         supervisor         wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/nginx"
        },
        {
          "CmdLine": [
            "rm -Rf conf.d/default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./templates/default.nginx.cnf",
            "sites-available/default"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y     bzip2     curl     imagemagick     libjpeg-dev     libldap2-dev     libmagickwand-dev     libmcrypt-dev     libmemcached-dev     libpq-dev     libxml2-dev     mysql-client     openssh-client     rsync     \u0026\u0026 pecl install        imagick        memcached     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-enable         imagick         memcached     \u0026\u0026 docker-php-ext-install         calendar         dom         gd         json         mbstring         mysqli         opcache         pdo         pdo_mysql         soap         xml         zip     \u0026\u0026 echo default_mimetype=\"\" \u003e /usr/local/etc/php/conf.d/default_mimetype.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo $PHP_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"$PHP_VERSION\" = \"7.2-fpm\" ]; then     pecl install mcrypt-1.0.1;     docker-php-ext-enable mcrypt;     else     echo $PHP_VERSION;     docker-php-ext-install mcrypt;     fi;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/core-php.ini",
            "/usr/local/etc/php/conf.d/core-php.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/     \u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/supervisor"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/supervisord.conf",
            "conf.d/super.conf"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-n",
            "-c",
            "/etc/supervisor/conf.d/super.conf"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "apt-get -y clean     \u0026\u0026 apt-get -y autoclean     \u0026\u0026 apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}