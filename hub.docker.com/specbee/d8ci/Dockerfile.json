{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache-stretch",
      "SourceCode": "FROM php:7.1-apache-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache-stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y   openssh-client   git   wget   gnupg   libjpeg-dev   libpng-dev   libsqlite3-dev   sqlite3   zip   \u0026\u0026 docker-php-ext-configure     gd --with-png-dir=/usr --with-jpeg-dir=/usr   \u0026\u0026 docker-php-ext-install     gd     mbstring     opcache     zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'memory_limit = -1' \u003e /usr/local/etc/php/php-cli.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 777 /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php   \u0026\u0026 mv composer.phar /usr/local/bin/   \u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drupal/coder --update-no-dev --no-suggest --prefer-dist ^8.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require dealerdirect/phpcodesniffer-composer-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /root/.composer/vendor/bin/phpcs /usr/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpcs --config-set installed_paths /root/.composer/vendor/drupal/coder/coder_sniffer/   \u0026\u0026 phpcs --config-set default_standard Drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O -L https://github.com/mglaman/drupal-check/releases/latest/download/drupal-check.phar \u0026\u0026 mv drupal-check.phar /usr/local/bin/drupal-check \u0026\u0026 chmod +x /usr/local/bin/drupal-check"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026   apt-get install -y build-essential nodejs \u0026\u0026   npm i -g eslint \u0026\u0026   npm i -g yarn \u0026\u0026   npm i -g stylelint \u0026\u0026   npm i -g stylelint-checkstyle-formatter \u0026\u0026   npm i -g stylelint-config-standard \u0026\u0026   npm i -g stylelint-no-browser-hacks \u0026\u0026   npm i -g stylelint-scss"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "apt-get -y clean   \u0026\u0026 apt-get -y autoclean   \u0026\u0026 apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}