MetaArgs: null
Stages:
- BaseName: ruby:2.4.1
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - bundle config --global frozen 1 &&   bundle config --global build.nokogiri --use-system-libraries
    Name: run
    PrependShell: true
  - Env:
    - Key: CMAKE_MAJOR
      Value: "3.4"
    Name: env
  - Env:
    - Key: CMAKE_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: CMAKE_SHASUM256
      Value: 66b8d315c852908be9f79e1a18b8778714659fce4ddb2d041af8680a239202fc
    Name: env
  - CmdLine:
    - cd /usr/local &&   curl -sfLO https://cmake.org/files/v$CMAKE_MAJOR/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz
      &&   echo "${CMAKE_SHASUM256}  cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" | sha256sum
      -c - &&  tar --strip-components 1 -xzf cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz
      cmake-$CMAKE_VERSION-Linux-x86_64/bin/cmake cmake-$CMAKE_VERSION-Linux-x86_64/share/cmake-$CMAKE_MAJOR/Modules
      cmake-$CMAKE_VERSION-Linux-x86_64/share/cmake-$CMAKE_MAJOR/Templates &&   rm
      cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBSSH2_VERSION
      Value: 1.6.0
    Name: env
  - CmdLine:
    - gpg --keyserver pgp.mit.edu --recv-keys 279D5C91
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local &&   curl -sfLO http://www.libssh2.org/download/libssh2-$LIBSSH2_VERSION.tar.gz
      &&   curl -sfLO http://www.libssh2.org/download/libssh2-$LIBSSH2_VERSION.tar.gz.asc
      &&   gpg --verify libssh2-$LIBSSH2_VERSION.tar.gz.asc &&   tar -xzf libssh2-$LIBSSH2_VERSION.tar.gz
      &&   cd libssh2-$LIBSSH2_VERSION &&   ./configure --with-openssl --without-libgcrypt
      --with-libz &&   make install &&   cd .. &&   rm -r libssh2-$LIBSSH2_VERSION
      libssh2-$LIBSSH2_VERSION.* share/man/man3/libssh2_*
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 8.1.2
    Name: env
  - Env:
    - Key: NODE_SHASUM256
      Value: 73b116238dd930efbed7c2f6ba24c5c04f27223fcc44d1d35305e22d70c4bb87
    Name: env
  - CmdLine:
    - cd /usr/local &&   curl -sfLO https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz
      &&   echo "${NODE_SHASUM256}  node-v$NODE_VERSION-linux-x64.tar.gz" | sha256sum
      -c - &&  tar --strip-components 1 -xzf node-v$NODE_VERSION-linux-x64.tar.gz
      node-v$NODE_VERSION-linux-x64/bin node-v$NODE_VERSION-linux-x64/include node-v$NODE_VERSION-linux-x64/lib
      &&   rm node-v$NODE_VERSION-linux-x64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -    && echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get update     && apt-get install -y yarn
    Name: run
    PrependShell: true
  - Expression: RUN mkdir -p /usr/src/app
    Name: onbuild
  - Expression: WORKDIR /usr/src/app
    Name: onbuild
  - Expression: COPY package.json* yarn.lock* .npmrc* Gemfile* /usr/src/app/
    Name: onbuild
  - Expression: RUN if [ -f package.json ]; then     yarn install || { echo "\033[0;31mMake
      sure you have run 'npm login' and have an ~/.npmrc file" && exit 1; };     rm
      -f .npmrc;     fi;
    Name: onbuild
  - Expression: COPY vendor /usr/src/app/vendor
    Name: onbuild
  - Expression: RUN bundle install --local --jobs `nproc`
    Name: onbuild
  - Expression: COPY . /usr/src/app
    Name: onbuild
  - Expression: RUN   ! gem list -i badcom > /dev/null || RAILS_ENV=production RAILS_ASSETS_COMPILE=true
      rake badcom:requirejs:optimize_all &&   RAILS_ENV=production RAILS_ASSETS_COMPILE=true
      rake assets:precompile
    Name: onbuild
  - Expression: EXPOSE 3000
    Name: onbuild
  - Expression: CMD ["puma", "-t", "8:8", "-p", "3000"]
    Name: onbuild
  From:
    Image: ruby:2.4.1
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.4.1
