{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"michel@michel.eti.br\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "mv /etc/apt/sources.list /etc/apt/sources.list.backup  \t\u0026\u0026 sed \t-e 's#deb http://archive.ubuntu.com/ubuntu/ xenial universe#deb http://archive.ubuntu.com/ubuntu/ xenial universe#g' \t-e 's#deb http://archive.ubuntu.com/ubuntu/ xenial-updates universe#deb http://archive.ubuntu.com/ubuntu/ xenial-updates universe#g' \t-e 's#deb-src http://archive.ubuntu.com/ubuntu/ xenial-updates universe#deb-src http://archive.ubuntu.com/ubuntu/ xenial-updates universe#g' \t-e 's#deb-src http://archive.ubuntu.com/ubuntu/ xenial universe#deb-src http://archive.ubuntu.com/ubuntu/ xenial universe#g' \t-e 's#\\# deb http://archive.ubuntu.com/ubuntu/ xenial-security multiverse#deb http://archive.ubuntu.com/ubuntu/ xenial-security#g' \t-e 's#\\# deb-src http://archive.ubuntu.com/ubuntu/ xenial-security multiverse#deb-src http://archive.ubuntu.com/ubuntu/ xenial-security#g' \t-e 's#archive.ubuntu.com#br.archive.ubuntu.com#g' /etc/apt/sources.list.backup \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y software-properties-common python-software-properties imagemagick build-essential \tsubversion git-core checkinstall texi2html libopencore-amrnb-dev libopencore-amrwb-dev libsdl1.2-dev \tlibtheora-dev libvorbis-dev libx11-dev libxfixes-dev libxvidcore-dev zlib1g-dev libavcodec-dev nasm yasm libfaac0 \tdcraw ufraw gpac unzip\t\u0026\u0026 apt-add-repository -y ppa:webupd8team/java \t\u0026\u0026 apt-get update -y \t\u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \t\u0026\u0026 echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \t\u0026\u0026 apt-get install -y oracle-java8-installer \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone --depth=1 git://git.videolan.org/x264.git \u0026\u0026 cd x264 \t\u0026\u0026 ./configure --enable-static --disable-opencl --disable-asm \u0026\u0026 make \t\u0026\u0026 checkinstall --pkgname=x264 --default --backup=no --deldoc=yes --fstrans=no --pkgversion=3.4.5 \t\u0026\u0026 cd ../ \u0026\u0026 rm -rf x264"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 wget -nv http://downloads.sourceforge.net/project/lame/lame/3.98.4/lame-3.98.4.tar.gz \t\u0026\u0026 tar xzvf lame-3.98.4.tar.gz \u0026\u0026 cd lame-3.98.4 \t\u0026\u0026 ./configure --enable-nasm --disable-shared \t\u0026\u0026 make \t\u0026\u0026 checkinstall --pkgname=lame-ffmpeg --pkgversion=\"3.98.4\" --backup=no --default --deldoc=yes \t\u0026\u0026 cd ../ \u0026\u0026 rm -rf lame-3.98.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone --depth=1 https://chromium.googlesource.com/webm/libvpx.git \t\u0026\u0026 cd libvpx \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 checkinstall --pkgname=libvpx --pkgversion=\"`date +%Y%m%d%H%M`-git\" --backup=no \t\t--default --deldoc=yes \t\u0026\u0026 cd ../ \u0026\u0026 rm -rf libvpx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone --depth=1 git://source.ffmpeg.org/ffmpeg.git \u0026\u0026 cd ffmpeg \t\u0026\u0026 ./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc \t\t--enable-libopencore-amrnb --enable-libopencore-amrwb \t\t--enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid \t\t--enable-libvpx --enable-libmp3lame \t\u0026\u0026 make \t\u0026\u0026 checkinstall --pkgname=ffmpeg --pkgversion=`./version.sh | sed -e \"s#git-##g\"` --backup=no --deldoc=yes --default \t\u0026\u0026 cd ../ \u0026\u0026 rm -rf ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 wget -nv -c \"https://downloads.sourceforge.net/project/exiftool/Image-ExifTool-10.61.tar.gz?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fexiftool%2Ffiles%2F%3Fsource%3Dnavbar\u0026ts=1506268522\u0026use_mirror=ufpr\" -O \"Image-ExifTool-10.61.tar.gz\" \t\u0026\u0026 gzip -dc Image-ExifTool-10.61.tar.gz | tar -xf - \u0026\u0026 cd Image-ExifTool-10.61  \t\u0026\u0026 perl Makefile.PL \u0026\u0026 make install \t\u0026\u0026 cd ../ \u0026\u0026 rm -rf Image-ExifTool-10.61"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 wget -nv http://cloud.razuna.com/installers/1.9.1/razuna_tomcat_1_9_1.zip \t\u0026\u0026 unzip -q razuna_tomcat_1_9_1.zip \u0026\u0026 mv razuna_tomcat_1_9_1 razuna \t\u0026\u0026 rm razuna_tomcat_1_9_1.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/razuna/tomcat/bin"
        },
        {
          "CmdLine": [
            "./catalina.sh",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}