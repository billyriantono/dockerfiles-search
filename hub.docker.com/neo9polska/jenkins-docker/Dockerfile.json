{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "neo9polska/java:8",
      "SourceCode": "FROM neo9polska/java:8",
      "Platform": "",
      "From": {
        "Image": "neo9polska/java:8"
      },
      "Commands": [
        {
          "Maintainer": "Neo9 Polska \u003clabs@neo9.pl\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2015-08-12"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy apt-transport-https iptables ca-certificates git-core"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://get.docker.com/gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo deb http://get.docker.com/ubuntu docker main \u003e /etc/apt/sources.list.d/docker.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy  lxc lxc-docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSE_VERSION",
              "Value": "1.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/$COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` \u003e /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/opt/jenkins/data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_MIRROR",
              "Value": "http://mirrors.jenkins-ci.org"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $JENKINS_HOME/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sf -o /opt/jenkins/jenkins.war -L $JENKINS_MIRROR/war-stable/latest/jenkins.war"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for plugin in greenballs scm-api git-client git ws-cleanup ;    do curl -sf -o $JENKINS_HOME/plugins/${plugin}.hpi        -L $JENKINS_MIRROR/plugins/${plugin}/latest/${plugin}.hpi ; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/dockerjenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}