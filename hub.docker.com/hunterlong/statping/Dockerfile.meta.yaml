MetaArgs: null
Stages:
- As: base
  BaseName: golang:1.13.5-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Hunter Long (https://github.com/hunterlong)"'
    Name: label
  - Key: VERSION
    Name: arg
    Value: null
  - CmdLine:
    - apk add --no-cache libstdc++ gcc g++ make git ca-certificates linux-headers
      wget curl jq libsass
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -s https://assets.statping.com/sass -o /usr/local/bin/sass &&     chmod
      +x /usr/local/bin/sass
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/hunterlong/statping
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Makefile
    - go.mod
    - /go/src/github.com/hunterlong/statping/
  - CmdLine:
    - go mod vendor &&     make dev-deps
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /go/src/github.com/hunterlong/statping
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  From:
    Image: golang:1.13.5-alpine
  Name: base
  Platform: ""
  SourceCode: FROM golang:1.13.5-alpine as base
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Hunter Long (https://github.com/hunterlong)"'
    Name: label
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: IS_DOCKER
      Value: "true"
    Name: env
  - Env:
    - Key: STATPING_DIR
      Value: /app
    Name: env
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - CmdLine:
    - apk --no-cache add curl jq libsass
    Name: run
    PrependShell: true
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/sass
    - /usr/local/bin/sass
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /go/bin/statping
    - /usr/local/bin/statping
  - Name: workdir
    Path: /app
  - Name: volume
    Volumes:
    - /app
  - Name: expose
    Ports:
    - $PORT
  - Health:
      Interval: 60000000000
      Retries: 3
      Test:
      - CMD-SHELL
      - curl -s "http://localhost:$PORT/health" | jq -r -e ".online==true"
      Timeout: 10000000000
    Name: healthcheck
  - CmdLine:
    - statping -port $PORT
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
