MetaArgs: null
Stages:
- BaseName: amazonlinux:2
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Joe Zhou <joe.zhou@sydney.edu.au>"'
    Name: label
  - Env:
    - Key: SDKMAN_DIR
      Value: /opt/sdkman
    Name: env
  - Env:
    - Key: AWS_CLI_VERSION
      Value: 1.16.140
    Name: env
  - Env:
    - Key: AWS_SAM_CLI_VERSION
      Value: 0.14.2
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.06.1
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8.0.232-amzn
    Name: env
  - Env:
    - Key: GRADLE_VERSION
      Value: 5.3.1
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.6.1
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 1.2.8
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 10.16.0
    Name: env
  - Env:
    - Key: CDK_VERSION
      Value: 1.19.0
    Name: env
  - CmdLine:
    - yum -y update     && yum -y install         which         unzip         zip         python-pip         python-devel         gcc*         tar.x86_64         gzip     &&
      yum clean all     && rm -rf /var/cache/yum
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli==${AWS_CLI_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install aws-sam-cli==${AWS_SAM_CLI_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y remove python-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - amazon-linux-extras install docker=${DOCKER_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s "https://get.sdkman.io" | bash     && echo "sdkman_auto_answer=true"
      > $SDKMAN_DIR/etc/config     && echo "sdkman_auto_selfupdate=false" >> $SDKMAN_DIR/etc/config     &&
      echo "sdkman_insecure_ssl=true" >> $SDKMAN_DIR/etc/config     && bash -c "source
      ${SDKMAN_DIR}/bin/sdkman-init.sh && sdk install java ${JAVA_VERSION}"     &&
      bash -c "source ${SDKMAN_DIR}/bin/sdkman-init.sh && sdk install gradle ${GRADLE_VERSION}"     &&
      bash -c "source ${SDKMAN_DIR}/bin/sdkman-init.sh && sdk install maven ${MAVEN_VERSION}"     &&
      bash -c "source ${SDKMAN_DIR}/bin/sdkman-init.sh && sdk install sbt ${SBT_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source /root/.nvm/nvm.sh; nvm install ${NODE_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source /root/.nvm/nvm.sh; npm i -g aws-cdk@${CDK_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - '{   echo ''dockerd &> /tmp/docker.log &'';   echo ''source ${SDKMAN_DIR}/bin/sdkman-init.sh'';   echo
      ''export NVM_DIR=~/.nvm'';   echo ''. ~/.nvm/nvm.sh'';   } > /root/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: true
  From:
    Image: amazonlinux:2
  Name: ""
  Platform: ""
  SourceCode: FROM amazonlinux:2
