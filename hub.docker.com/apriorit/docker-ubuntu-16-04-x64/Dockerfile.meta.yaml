MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: v.stovba <netpanik@apriorit.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - sed -i -- 's/#deb-src/deb-src/g' /etc/apt/sources.list && sed -i -- 's/# deb-src/deb-src/g'
      /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y apt-transport-https curl vim lsb-core bison++
      libssl-dev libprocps4-dev libxalan-c-dev libxerces-c-dev libnl-3-dev subversion
      gdb libcrypto++-dev libcrypto++9v5 libpcre++-dev uuid-dev libsnappy-dev build-essential
      libboost-all-dev cmake maven libicu-dev zlib1g-dev liblog4cpp5-dev libncurses5-dev
      libselinux1-dev wget libsqlite3-dev google-mock libvirt-dev libmysqlclient-dev
      qtbase5-dev qtdeclarative5-dev patchelf libblkid-dev giblib-dev libimlib2-dev
      libglib2.0-dev libgtk-3-dev libcanberra-gtk3-dev unzip postgresql-client git
      valgrind
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgtest-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/gtest/ && cmake . && make && cp *.a /usr/lib
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - ACCEPT_EULA=Y apt-get install -y msodbcsql17
    Name: run
    PrependShell: true
  - CmdLine:
    - ACCEPT_EULA=Y apt-get install -y mssql-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install unixodbc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install odbc-postgresql && sed -i 's/psqlodbcw.so/\/usr\/lib\/x86_64-linux-gnu\/odbc\/psqlodbcw.so/g'
      /etc/odbcinst.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && git clone -b "poco-1.9.0" https://github.com/pocoproject/poco.git
      && cd poco/ && mkdir cmake-build && cd cmake-build && sed -i '/project(Poco)/a
      SET(CMAKE_INSTALL_RPATH "\$ORIGIN")' ../CMakeLists.txt && cmake .. -DCMAKE_BUILD_TYPE=RELEASE
      && cmake --build . && make DESTDIR=/opt/apriorit-poco all install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install build-essential autoconf libtool pkg-config libgflags-dev
      libgtest-dev clang libc++-dev patchelf
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && git clone -b "v1.13.x" https://github.com/grpc/grpc && cd grpc &&
      git submodule update --init && make && make install && cd third_party/protobuf
      && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgpr.so.6.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgrpc_cronet.so.6.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgrpc++_reflection.so.1.13.1
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgrpc++.so.1.13.1
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgrpc.so.6.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgrpc++_unsecure.so.1.13.1
    Name: run
    PrependShell: true
  - CmdLine:
    - patchelf --set-rpath '$ORIGIN' /usr/local/lib/libgrpc_unsecure.so.6.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && mkdir -p golang && cd golang && wget https://dl.google.com/go/go1.13.linux-amd64.tar.gz
      && tar -C /usr/local -xzf go1.13.linux-amd64.tar.gz && cd /tmp && rm -rf ./golang
    Name: run
    PrependShell: true
  - Env:
    - Key: GOBIN
      Value: /usr/local/go/bin
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOBIN
    Name: env
  - Env:
    - Key: GOPATH
      Value: /root/go
    Name: env
  - Env:
    - Key: GOSRC
      Value: $GOPATH/src
    Name: env
  - CmdLine:
    - mkdir -p $GOSRC/github.com/golang && cd $GOSRC/github.com/golang && git clone
      https://github.com/golang/protobuf && cd protobuf && git checkout tags/v1.2.0
      -b v1.2.0
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $GOSRC/github.com/grpc-ecosystem && cd $GOSRC/github.com/grpc-ecosystem
      && git clone https://github.com/grpc-ecosystem/grpc-gateway && cd grpc-gateway
      && git checkout tags/v1.11.2 -b v1.11.2
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOSRC/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway &&
      go install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOSRC/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger && go install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOSRC/github.com/golang/protobuf/protoc-gen-go && go install
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
