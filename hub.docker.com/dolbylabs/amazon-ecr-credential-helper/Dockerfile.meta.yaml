MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.9-alpine3.6
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ecr-login
    - /go/src/github.com/awslabs/amazon-ecr-credential-helper/ecr-login
  - CmdLine:
    - env CGO_ENABLED=0 go install -installsuffix "static"     github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login
    Name: run
    PrependShell: true
  From:
    Image: golang:1.9-alpine3.6
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.9-alpine3.6 AS builder
- As: certs
  BaseName: debian:latest
  Commands:
  - CmdLine:
    - apt-get update &&      apt-get install -y ca-certificates &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /etc/ca-certificates.conf /tmp/caconf &&   cat /tmp/caconf | grep -v "mozilla/CNNIC_ROOT\.crt"
      > /etc/ca-certificates.conf &&   update-ca-certificates --fresh
    Name: run
    PrependShell: true
  From:
    Image: debian:latest
  Name: certs
  Platform: ""
  SourceCode: FROM debian:latest as certs
- BaseName: scratch
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/docker-credential-ecr-login
    - /usr/local/bin/docker-credential-ecr-login
  - Chown: ""
    From: certs
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs/ca-certificates.crt
    - /etc/ssl/certs/ca-certificates.crt
  - CmdLine:
    - /usr/local/bin/docker-credential-ecr-login
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - eval
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
