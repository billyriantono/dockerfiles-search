MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Alexey Ivanov <lexa.ivanov@gmail.com>
    Name: maintainer
  - Env:
    - Key: REDMINE_VERSION
      Value: 3.3.2
    - Key: REDMINE_USER
      Value: '"redmine"'
    - Key: REDMINE_HOME
      Value: '"/home/redmine"'
    - Key: REDMINE_LOG_DIR
      Value: '"/var/log/redmine"'
    - Key: REDMINE_CACHE_DIR
      Value: '"/etc/docker-redmine"'
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Env:
    - Key: REDMINE_INSTALL_DIR
      Value: '"${REDMINE_HOME}/redmine"'
    - Key: REDMINE_DATA_DIR
      Value: '"${REDMINE_HOME}/data"'
    - Key: REDMINE_BUILD_DIR
      Value: '"${REDMINE_CACHE_DIR}/build"'
    - Key: REDMINE_RUNTIME_DIR
      Value: '"${REDMINE_CACHE_DIR}/runtime"'
    Name: env
  - Labels:
    - Key: org.label-schema.docker.dockerfile
      Value: '"./Dockerfile"'
    - Key: org.label-schema.license
      Value: '"MIT"'
    - Key: org.label-schema.name
      Value: '"redmine-alpine"'
    - Key: org.label-schema.vcs-type
      Value: '"Git"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/inspired-geek/redmine-alpine"'
    - Key: org.label-schema.version
      Value: '"latest"'
    Name: label
  - Env:
    - Key: BRANCH_NAME
      Value: master
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Name: workdir
    Path: ${REDMINE_INSTALL_DIR}
  - CmdLine:
    - "addgroup -S redmine         && adduser -S -G redmine redmine \t&& apk --no-cache
      add --virtual .run-deps                 mariadb-client-libs \t\tsqlite-libs
      \                imagemagick                 tzdata                 ruby \t\truby-bigdecimal
      \t\truby-bundler                 tini                 su-exec                 bash
      \        && apk --no-cache add --virtual .build-deps                 build-base
      \                ruby-dev                 libxslt-dev                 imagemagick-dev
      \                mariadb-dev                 sqlite-dev                 linux-headers
      \                patch                 coreutils                 curl                 git
      \        && echo 'gem: --no-document' > /etc/gemrc         && gem update --system
      \t&& git clone -b ${BRANCH_NAME} https://github.com/redmine/redmine.git .         &&
      rm -rf files/delete.me log/delete.me .git test        && mkdir -p tmp/pdf public/plugin_assets
      \        && chown -R redmine:redmine ./\t&& for adapter in mysql2 sqlite3; do
      \t\techo \"$RAILS_ENV:\" > ./config/database.yml; \t\techo \"  adapter: $adapter\"
      >> ./config/database.yml; \t\tbundle install --without development test; \tdone
      \t&& rm ./config/database.yml \t&& rm -rf /root/* `gem env gemdir`/cache         &&
      apk --purge del .build-deps"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${REDMINE_DATA_DIR}
    - ${REDMINE_LOG_DIR}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/runtime/
    - ${REDMINE_RUNTIME_DIR}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /sbin/docker-entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - rails
    - server
    - -b
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
