MetaArgs: null
Stages:
- BaseName: rocker/verse:latest
  Commands:
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.name
      Value: '"osmosisfoundation/rocker"'
    - Key: org.label-schema.description
      Value: '"A full Rocker rstudio (rocker/verse) with NONMEM and PSN"'
    - Key: org.label-schema.url
      Value: '"http://osmosis.foundation"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/osmosisfoundation/pmx-docker"'
    - Key: org.label-schema.vendor
      Value: '"Osmosis Foundation"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Key: NONMEM_MAJOR_VERSION
    Name: arg
    Value: "7"
  - Key: NONMEM_MINOR_VERSION
    Name: arg
    Value: "4"
  - Key: NONMEM_PATCH_VERSION
    Name: arg
    Value: "1"
  - Key: NONMEM_ZIP_PASS_74
    Name: arg
    Value: null
  - Env:
    - Key: NONMEM_URL
      Value: https://nonmem.iconplc.com/nonmem${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}${NONMEM_PATCH_VERSION}/NONMEM${NONMEM_MAJOR_VERSION}.${NONMEM_MINOR_VERSION}.${NONMEM_PATCH_VERSION}.zip
    Name: env
  - CmdLine:
    - "apt-get update     && apt-get install --yes --no-install-recommends         ca-certificates
      \        gfortran         libmpich-dev         mpich         wget         unzip
      \    && rm -rf         /var/lib/apt/lists/         /var/cache/apt/archives/
      \t    /usr/share/doc/ \t    /usr/share/man/ \t    /usr/share/locale/"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && wget --no-verbose --no-check-certificate -O NONMEM.zip     https://nonmem.iconplc.com/nonmem${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}${NONMEM_PATCH_VERSION}/NONMEM${NONMEM_MAJOR_VERSION}.${NONMEM_MINOR_VERSION}.${NONMEM_PATCH_VERSION}.zip     &&
      unzip -P ${NONMEM_ZIP_PASS_74} NONMEM.zip     && cd /tmp/nm${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}${NONMEM_PATCH_VERSION}CD     &&
      bash SETUP${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}         /tmp/nm${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}${NONMEM_PATCH_VERSION}CD         /opt/nm         gfortran         y         /usr/bin/ar         same         rec         q         unzip         nonmem${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}e.zip         nonmem${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}r.zip     &&
      rm -r /tmp/*     && rm /opt/nm/mpi/mpi_ling/libmpich.a     && ln -s /usr/lib/mpich/lib/libmpich.a
      /opt/nm/mpi/mpi_ling/libmpich.a     && (cd /opt/nm &&         rm -rf             examples/             guides/             help/             html/             *.pdf             *.txt             *.zip             install*             nonmem.lic             SETUP*             unzip.SunOS             unzip.exe             mpi/mpi_lini             mpi/mpi_wing             mpi/mpi_wini             run/*.bat             run/*.EXE             run/*.LNK             run/CONTROL*             run/DATA*             run/REPORT*             run/fpiwin*             run/mpiwin*             run/FCON             run/FDATA             run/FREPORT             run/FSIZES             run/FSTREAM             run/FSUBS             run/INTER             run/computername.exe             run/garbage.out             run/gfortran.txt             run/nmhelp.exe             run/psexec.exe             runfiles/GAWK.EXE             runfiles/GREP.EXE             runfiles/computername.exe             runfiles/fpiwin*             runfiles/mpiwin*             runfiles/nmhelp.exe             runfiles/psexec.exe             util/*.bat             util/*~             util/CONTROL*             util/F*             util/DATA3             util/ERROR1             util/INTER             util/finish_Darwin*             util/finish_Linux_f95             util/finish_Linux_g95             util/finish_SunOS*)
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/nm/run:$PATH
    Name: env
  - CmdLine:
    - ln -s /opt/nm/run/nmfe${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION} /opt/nm/run/nmfe
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update     && apt-get -y --no-install-recommends install \t\tca-certificates
      \t\tgcc \t\tbuild-essential \t\tcurl \t\texpect     && rm -fr /var/lib/apt/lists/*
      \    && wget -qO- \t    https://raw.githubusercontent.com/miyagawa/cpanminus/master/cpanm
      | \t    perl - --skip-satisfied App::cpanminus     && rm -r ~/.cpanm     &&
      cpanm \t\tMath::Random \t\tStatistics::Distributions \t\tArchive::Zip \t\tFile::Copy::Recursive
      \t\tStorable \t\tMoose \t\tMooseX::Params::Validate \t\tTest::Exception \t\tYAML::Tiny"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "curl -SL https://github.com/UUPharmacometrics/PsN/releases/download/4.7.0/PsN-4.7.0.tar.gz
      -o PsN-4.7.0.tar.gz     && tar -zxf /tmp/PsN-4.7.0.tar.gz     && cd /tmp/PsN-Source
      \    && expect -c \"set timeout { 2 exit };         spawn perl setup.pl; \t\texpect
      -ex \\\"PsN Utilities installation directory \\[/usr/local/bin\\]:\\\"; \t\tsend
      \\\"\\r\\\"; \t\texpect -ex \\\"Path to perl binary used to run Utilities \\[/usr/bin/perl\\]:\\\";
      \t\tsend \\\"\\r\\\"; \t\texpect -ex \\\"PsN Core and Toolkit installation directory
      \\[/usr/local/share/perl\\\"; \t\tsend \\\"\\r\\\"; \t\texpect -ex \\\"Would
      you like this script to check Perl modules \\[y/n\\]?\\\"; \t\tsend \\\"y\\r\\\";
      \t\texpect -ex \\\"Continue installing PsN (installing is possible even if modules
      are missing)\\[y/n\\]?\\\"; \t\tsend \\\"y\\r\\\"; \t\texpect -ex \\\"Would
      you like to copy the PsN documentation to a file system location of your choice?\\\";
      \t\tsend \\\"n\\r\\\"; \t\texpect -ex \\\"Would you like to install the PsN
      test library?\\\"; \t\tsend \\\"y\\r\\\"; \t\texpect -ex \\\"PsN test library
      installation directory \\[/usr/local/share/perl/\\\"; \t\tsend \\\"\\r\\\";
      \t\texpect -ex \\\"Would you like help to create a configuration file?\\\";
      \t\tsend \\\"y\\r\\\";         expect -ex \\\"Enter the *complete* path of the
      NM-installation directory:\\\";         send \\\"/opt/nm/\\r\\\"; \t\texpect
      -ex \\\"Would you like to add another one\\\"; \t\tsend \\\"n\\r\\\"; \t\texpect
      -ex \\\"or press ENTER to use the name\\\"; \t\tsend \\\"nm\\r\\\"; \t\texpect
      -ex \\\"installation program.\\\"; \t\tsend \\\"\\r\\\";\"     && rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: NUM_THREADS
      Value: "4"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /home/rstudio
  - CmdLine:
    - /init
    Name: cmd
    PrependShell: false
  From:
    Image: rocker/verse:latest
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/verse:latest
