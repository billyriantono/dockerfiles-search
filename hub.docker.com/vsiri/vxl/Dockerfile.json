{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:9",
      "SourceCode": "FROM debian:9",
      "Platform": "",
      "From": {
        "Image": "debian:9"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "bash",
            "-euxvc"
          ]
        },
        {
          "CmdLine": [
            "apt-get update;     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends         python python-dev gcc g++ curl bzip2 rsync unzip ca-certificates         libglew1.10 libglu1-mesa libxmu6 libxi6 freeglut3 libgtk2.0-0         libglew-dev libglu1-mesa-dev libxmu-dev libxi-dev freeglut3-dev libgtk2.0-dev         geotiff-bin libgeotiff-dev;     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CMAKE_VERSION",
          "Name": "arg",
          "Value": "3.11.0"
        },
        {
          "CmdLine": [
            "cd /tmp;     curl -fLO https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz;     curl -fLo cmake.txt https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-SHA-256.txt;     grep 'Linux-x86_64\\.tar\\.gz' cmake.txt | sha256sum -c - \u003e /dev/null;     tar --strip-components=1 -xf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz -C /usr/local;     rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz cmake.txt;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp;     curl -fLO http://www2.ati.com/drivers/linux-amd-14.41rc1-opencl2-sep19.zip --referer support.amd.com;     unzip -q linux-amd-14.41rc1-opencl2-sep19.zip;     rm linux-amd-14.41rc1-opencl2-sep19.zip;     sh fglrx-14.41/amd-driver-installer-14.41-x86.x86_64.run --extract /tmp/ati;     cp -dr --no-preserve=ownership /tmp/ati/arch/x86_64/* /tmp/ati/common/* /;     ln -s /usr/lib64/libOpenCL.so.1 /usr/lib64/libOpenCL.so;     echo /usr/lib64 \u003e /etc/ld.so.conf.d/lib64.conf;     rm -r /tmp/fglrx-14.41 /tmp/ati;     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/include/CL;     for x in opencl cl_platform cl cl_ext cl_gl cl_gl_ext cl_version; do       curl -fLo \"/usr/include/CL/${x}.h\" \"https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/master/CL/${x}.h\";     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/bin \u0026\u0026     curl -fLO https://github.com/ninja-build/ninja/releases/download/v1.7.1/ninja-linux.zip \u0026\u0026     unzip ninja-linux.zip \u0026\u0026 rm ninja-linux.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update;     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git ssh;     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "com.nvidia.volumes.needed",
              "Value": "\"nvidia_driver\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NVIDIA_VISIBLE_DEVICES",
              "Value": "all"
            },
            {
              "Key": "NVIDIA_DRIVER_CAPABILITIES",
              "Value": "compute,utility"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo libnvidia-opencl.so.1 \u003e /etc/OpenCL/vendors/nvidia.icd \u0026\u0026     echo '/usr/local/nvidia/lib64\\n/vxl_hack\\n/usr/local/nvidia/lib' \u003e /etc/ld.so.conf.d/nvidia.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/nvidia/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/vxl_hack:${LD_LIBRARY_PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "vxl_entrypoint.bsh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/vxl_entrypoint.bsh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "vxl"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}