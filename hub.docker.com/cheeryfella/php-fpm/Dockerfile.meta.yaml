MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: CheeryFella <cheeryfella@gmail.com>
    Name: maintainer
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    - Key: GPG_KEYS
      Value: 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763
    - Key: PHP_VERSION
      Value: 7.0.10
    - Key: PHP_FILENAME
      Value: php-7.0.10.tar.xz
    - Key: PHP_SHA256
      Value: 348476ff7ba8d95a1e28e1059430c10470c5f8110f6d9133d30153dda4cdf56a
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - "set -x \t&& apk add --no-cache --virtual .phpize-deps \t\tautoconf \t\tfile
      \t\tg++ \t\tgcc \t\tgit \t\tlibc-dev \t\tmake \t\tpkgconf \t\tre2c \t&& apk
      add --no-cache --virtual .persistent-deps \t\tca-certificates \t\tcurl \t&&
      addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data www-data \t&&
      mkdir -p $PHP_INI_DIR/conf.d \t&& apk add --no-cache --virtual .build-deps \t\tcurl-dev
      \t\tgnupg \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\topenssl-dev \t\tpostgresql-dev
      \t\tsqlite-dev \t&& curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\"
      -o \"$PHP_FILENAME\" \t&& echo \"$PHP_SHA256 *$PHP_FILENAME\" | sha256sum -c
      - \t&& curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o
      \"$PHP_FILENAME.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& for key in
      $GPG_KEYS; do \t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \tdone \t&& gpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" \t&&
      rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \t&& mkdir -p /usr/src \t&& tar -Jxf
      \"$PHP_FILENAME\" -C /usr/src \t&& mv \"/usr/src/php-$PHP_VERSION\" /usr/src/php
      \t&& rm \"$PHP_FILENAME\" \t&& cd /usr/src/php \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t--enable-fpm \t\t--with-fpm-user=www-data
      \t\t--with-fpm-group=www-data \t\t--with-pdo-pgsql \t\t--disable-cgi \t\t--enable-mysqlnd
      \t\t--enable-mbstring \t\t--with-curl \t\t--with-libedit \t\t--with-openssl
      \t\t--with-zlib \t\t--with-xsl \t&& make -j\"$(getconf _NPROCESSORS_ONLN)\"
      \t&& make install \t&& { find /usr/local/bin /usr/local/sbin -type f -perm +0111
      -exec strip --strip-all '{}' + || true; } \t&& make clean \t&& runDeps=\"$(
      \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --virtual .php-rundeps $runDeps
      \t&& apk del .phpize-deps .build-deps \t&& rm -rf /var/cache/apk/* \t&& cd /usr/local/etc
      \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g' php-fpm.conf.default |
      tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default php-fpm.d/www.conf;
      \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default php-fpm.d/www.conf;
      \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf'; \t\t}
      | tee php-fpm.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'error_log = /proc/self/fd/2';
      \t\techo; \t\techo '[www]'; \t\techo '; if we send this to /proc/self/fd/1,
      it never appears'; \t\techo 'access.log = /proc/self/fd/2'; \t\techo; \t\techo
      'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout and stderr are
      sent to the main error log.'; \t\techo 'catch_workers_output = yes'; \t} | tee
      php-fpm.d/docker.conf \t&& { \t\techo '[global]'; \t\techo 'daemonize = no';
      \t\techo; \t\techo '[www]'; \t\techo 'listen = [::]:9000'; \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php.ini
    - /usr/local/etc/php/php.ini
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "9000"
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
