{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yafraorg/docker-yafrabase",
      "SourceCode": "FROM yafraorg/docker-yafrabase",
      "Platform": "",
      "From": {
        "Image": "yafraorg/docker-yafrabase"
      },
      "Commands": [
        {
          "Maintainer": "Martin Weber \u003cinfo@yafra.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026   apk upgrade \u0026\u0026   apk add --update openssl openssl-dev nodejs supervisor apache2 apache2-mod-wsgi apache2-ssl libffi libffi-dev build-base gcc \u0026\u0026   apk add --update python3 python3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /work/repos \u0026\u0026   mkdir -p /work/yafra-runtime \u0026\u0026   cd /work/repos \u0026\u0026   git clone https://github.com/yafraorg/yafra.git \u0026\u0026   git clone https://github.com/yafraorg/yapki.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/supervisor.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor.d/yapki.ini"
          ]
        },
        {
          "CmdLine": [
            "cd /work/repos/yapki/backend \u0026\u0026   python3 -m ensurepip \u0026\u0026   rm  -r /usr/lib/python*/ensurepip \u0026\u0026   pip3 install --upgrade pip setuptools \u0026\u0026   pip3 install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8082"
          ]
        },
        {
          "CmdLine": [
            "/work/repos/yapki/run-docker.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}