{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yafraorg/docker-yafrabase",
      "SourceCode": "FROM yafraorg/docker-yafrabase",
      "Platform": "",
      "From": {
        "Image": "yafraorg/docker-yafrabase"
      },
      "Commands": [
        {
          "Maintainer": "Yafra \u003cyafraorg@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026 apk add --update git nodejs nodejs-dev wget curl \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /work/repos \u0026\u0026   cd /work/repos \u0026\u0026   git clone https://github.com/yafraorg/yafra-nodejs.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /work \u0026\u0026   npm install -g gulp-cli bower phantomjs-prebuilt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /work/repos/yafra-nodejs/restserver \u0026\u0026   npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "/work/repos/yafra-nodejs/run-docker.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}