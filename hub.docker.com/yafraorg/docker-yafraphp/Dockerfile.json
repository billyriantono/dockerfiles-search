{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yafraorg/docker-yafrabase",
      "SourceCode": "FROM yafraorg/docker-yafrabase",
      "Platform": "",
      "From": {
        "Image": "yafraorg/docker-yafrabase"
      },
      "Commands": [
        {
          "Maintainer": "Martin Weber \u003cinfo@yafra.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   curl -sL https://deb.nodesource.com/setup | sudo bash - \u0026\u0026   apt-get install -yq apache2 apache2-mpm-prefork apache2-utils libapache2-mod-php5 libapr1 libaprutil1  \u0026\u0026   apt-get install -yq libpq5 mysql-client-5.5 php5-common curl php5-curl php5-mysqlnd nodejs \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -g install bower gulp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s http://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /work/repos \u0026\u0026 git clone https://github.com/yafraorg/yafra-php.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /var/www/html/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"/Listen/s/80/8083/\" /etc/apache2/ports.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run-docker.sh",
            "/work/run-docker.sh"
          ]
        },
        {
          "CmdLine": [
            "cd /work \u0026\u0026   chmod 755 run-docker.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "Name": "expose",
          "Ports": [
            "8083"
          ]
        },
        {
          "CmdLine": [
            "/work/run-docker.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}