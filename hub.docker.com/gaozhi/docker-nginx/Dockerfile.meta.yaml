MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: NPS_VERSION
      Value: 1.13.35.2-stable
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.14.0
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get -y upgrade && \tapt-get install -y build-essential
      software-properties-common curl git htop man unzip vim wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - "add-apt-repository -y ppa:maxmind/ppa && \tapt-get install -y aptitude && \taptitude
      update && \taptitude install libmaxminddb0 libmaxminddb-dev mmdb-bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zlib1g-dev libpcre3 libpcre3-dev libssl-dev libxml2-dev libxslt-dev
      libgd2-xpm-dev geoip-database libgeoip-dev uuid-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://github.com/apache/incubator-pagespeed-ngx/archive/v${NPS_VERSION}.zip
      && \tunzip v${NPS_VERSION}.zip && \trm v${NPS_VERSION}.zip && \tfind . -name
      \"*pagespeed-ngx-${NPS_VERSION}\" -type d && \tnps_dir=$(find . -name \"*pagespeed-ngx-${NPS_VERSION}\"
      -type d) && \tcd ${nps_dir} && \tNPS_RELEASE_NUMBER=${NPS_VERSION%beta} && \tNPS_RELEASE_NUMBER=${NPS_VERSION%stable}
      && \tpsol_url=https://dl.google.com/dl/page-speed/psol/${NPS_RELEASE_NUMBER}.tar.gz
      [ -e scripts/format_binary_url.sh ] && \tpsol_url=$(scripts/format_binary_url.sh
      PSOL_BINARY_URL) && \twget ${psol_url} && \ttar -xzvf $(basename ${psol_url})
      && \trm $(basename ${psol_url}) && \tcd ../"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/leev/ngx_http_geoip2_module.git
    Name: run
    PrependShell: true
  - CmdLine:
    - "nps_dir=$(find . -name \"*pagespeed-ngx-${NPS_VERSION}\" -type d) && \twget
      http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \ttar -xvzf nginx-${NGINX_VERSION}.tar.gz
      && \trm -rf nginx-${NGINX_VERSION}.tar.gz && \tcd nginx-${NGINX_VERSION}/ &&
      \t./configure --prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--modules-path=/etc/nginx/modules
      \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/var/log/nginx/error.log
      \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid
      \t--lock-path=/var/run/nginx.lock \t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t--user=nginx \t--group=nginx \t--with-http_ssl_module \t--with-http_realip_module
      \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module
      \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module
      \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_secure_link_module
      \t--with-http_stub_status_module \t--with-http_auth_request_module \t--with-http_xslt_module=dynamic
      \t--with-http_image_filter_module=dynamic \t--with-http_geoip_module=dynamic
      \t--with-threads \t--with-stream \t--with-stream_ssl_module \t--with-http_slice_module
      \t--with-mail \t--with-mail_ssl_module \t--with-file-aio \t--with-http_v2_module
      \t--with-ipv6 \t--add-dynamic-module=/ngx_http_geoip2_module \t--add-dynamic-module=/${nps_dir}
      \t${PS_NGX_EXTRA_FLAGS} && \tmake && \tmake install && \tcd ../"
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -r nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - "rm -rf ngx_pagespeed-release-${NPS_VERSION}-beta/ && \trm -rf nginx-${NGINX_VERSION}/
      && \trm -rf ngx_http_geoip2_module/ && \trm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/* && \taptitude clean && \tapt-get clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"daemon off;\" >> /etc/nginx/nginx.conf && \tmkdir -p ${HOME}/nginx-default-conf
      && \tcp -R /etc/nginx/* ${HOME}/nginx-default-conf"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./init.sh
    - /root/
  - Name: volume
    Volumes:
    - /var/cache/nginx
    - /etc/nginx
    - /var/www
  - Name: workdir
    Path: /etc/nginx
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - sh
    - -c
    - ${HOME}/init.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
