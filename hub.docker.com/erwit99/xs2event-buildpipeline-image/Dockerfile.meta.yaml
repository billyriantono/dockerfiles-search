MetaArgs: null
Stages:
- BaseName: python:3.7-slim
  Commands:
  - Labels:
    - Key: Description
      Value: '"Python BUILD"'
    - Key: Vendor
      Value: '"xs2event"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: VIRTUALENV
      Value: '"/opt/venv"'
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update && apt-get install -y     curl     nano     nginx     lsof     make     wget     python3     git     python3-distutils  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -snf /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.3.1
    Name: env
  - CmdLine:
    - set -ex;     wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';         python
      get-pip.py         --disable-pip-version-check         --no-cache-dir         "pip==$PYTHON_PIP_VERSION"     ;     pip
      --version;         find /usr/local -depth         \(             \( -type d
      -a \( -name test -o -name tests \) \)             -o             \( -type f
      -a \( -name '*.pyc' -o -name '*.pyo' \) \)         \) -exec rm -rf '{}' +;     rm
      -f get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;     curl -sL https://deb.nodesource.com/setup_8.x | bash -     && apt-get
      install -y nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && buildDeps="         dpkg-dev         gcc         libbz2-dev         libc6-dev         libexpat1-dev         libffi-dev         libgdbm-dev         liblzma-dev         libncursesw5-dev         libreadline-dev         libsqlite3-dev         libssl-dev         tcl-dev         tk-dev         wget         xz-utils         zlib1g-dev         python3-dev         libxml2-dev         libxslt1-dev         netbase     "     &&
      apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm
      -rf /var/lib/apt/lists/*     && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"     &&
      pip install virtualenv     && virtualenv -p python3.7 ${VIRTUALENV}     && ANSIBLE_VERSION=2.8.7     &&
      /opt/venv/bin/pip3 install ansible==${ANSIBLE_VERSION}     && /opt/venv/bin/pip3
      install safety     && /opt/venv/bin/pip3 install pytest     && /opt/venv/bin/pip3
      install pytest_mock     && /opt/venv/bin/pip3 install mongomock     && /opt/venv/bin/pip3
      install tox     && /opt/venv/bin/pip3 install cffi     && apt-get purge -y --auto-remove
      $buildDeps         && find /usr/local -depth         \(             \( -type
      d -a \( -name test -o -name tests \) \)             -o             \( -type
      f -a \( -name '*.pyc' -o -name '*.pyo' \) \)         \) -exec rm -rf '{}' +
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${VIRTUALENV}/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"'
    Name: env
  - CmdLine:
    - mkdir -p /root/.ssh && mkdir -p /opt/scripts/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - merge.sh
    - /opt/scripts
  - CmdLine:
    - chmod +x /opt/scripts/merge.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.bitbucket
    - /root/.ssh/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - protocols.bitbucket
    - /etc/protocols
  - CmdLine:
    - ln -snf /usr/local/bin/python3.7 /usr/bin/python
    Name: run
    PrependShell: true
  From:
    Image: python:3.7-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7-slim
