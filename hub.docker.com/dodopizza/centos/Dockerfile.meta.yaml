MetaArgs: null
Stages:
- As: jsonnet_builder
  BaseName: alpine:3.10.3
  Commands:
  - Name: workdir
    Path: /workdir
  - CmdLine:
    - apk -U add build-base git     && git clone https://github.com/google/jsonnet
      .     && export LDFLAGS=-static     && make
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.10.3
  Name: jsonnet_builder
  Platform: ""
  SourceCode: FROM alpine:3.10.3 AS jsonnet_builder
- As: redis_builder
  BaseName: centos:7.6.1810
  Commands:
  - Name: workdir
    Path: /workdir
  - CmdLine:
    - yum install -y gcc make     && curl -L http://download.redis.io/redis-stable.tar.gz
      | tar -xz     && cd ./redis-stable     && make
    Name: run
    PrependShell: true
  From:
    Image: centos:7.6.1810
  Name: redis_builder
  Platform: ""
  SourceCode: FROM centos:7.6.1810 AS redis_builder
- BaseName: centos:7.6.1810
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Vitaly Uvarov <v.uvarov@dodopizza.com>"'
    Name: label
  - Chown: ""
    From: jsonnet_builder
    Name: copy
    SourcesAndDest:
    - /workdir/jsonnet
    - /usr/local/bin/
  - Chown: ""
    From: jsonnet_builder
    Name: copy
    SourcesAndDest:
    - /workdir/jsonnetfmt
    - /usr/local/bin/
  - Chown: ""
    From: redis_builder
    Name: copy
    SourcesAndDest:
    - /workdir/redis-stable/src/redis-cli
    - /usr/local/bin/
  - CmdLine:
    - yum install -y epel-release     && yum install -y python36 jq unzip git     &&
      yum clean all     && alternatives --install /usr/bin/python python /usr/bin/python2.7
      50     && alternatives --install /usr/bin/python python /usr/bin/python3.6 60     &&
      alternatives --set python /usr/bin/python2.7     && curl https://bootstrap.pypa.io/get-pip.py
      | python2.7     && curl https://bootstrap.pypa.io/get-pip.py | python3.6     &&
      pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y expect     && pip2 install pexpect==4.7.0     && pip3 install
      pexpect==4.7.0     && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - (    pip install 'ansible==' || true )     && ( pip install 'azure-cli==' ||
      true )
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm --import https://packages.microsoft.com/keys/microsoft.asc     && echo -e
      "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc"
      > /etc/yum.repos.d/azure-cli.repo     && yum install -y azure-cli     && yum
      clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - az aks install-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install     'ansible==2.9.1'     'ansible-lint'     'pywinrm>=0.3.0'     'requests-ntlm'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/     && curl -L https://aka.ms/downloadazcopy-v10-linux | tar --strip-components
      1 -xz     && mv -f /tmp/azcopy /usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm     &&
      yum list | grep percona     && yum install -y Percona-Server-client-57 percona-xtrabackup
      percona-toolkit innotop     && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/drone/drone-cli/releases/download/v1.2.0/drone_linux_arm64.tar.gz
      | tar zx     && chmod +x ./drone     && mv ./drone /usr/bin/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/az-mysqlpump
    - /usr/local/bin/
  - CmdLine:
    - curl -C - https://pkg.scaleft.com/scaleft_yum.repo | tee /etc/yum.repos.d/scaleft.repo     &&
      yes | rpm --import https://dist.scaleft.com/pki/scaleft_rpm_key.asc     && yum
      install -y scaleft-client-tools.x86_64     && yum install -y openssh-clients     &&
      yum install -y sudo     && yum clean all     && mkdir /root/.ssh && sft ssh-config
      > /root/.ssh/config
    Name: run
    PrependShell: true
  - CmdLine:
    - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo     &&
      yum install -y docker-client     && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip     &&
      unzip /tmp/terraform.zip -d /usr/bin/     && rm -f /tmp/terraform.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pt-online-schema-change --version || true
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/pt-online-schema-change-3.0.14-dev
    - /usr/bin/pt-online-schema-change
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - CmdLine:
    - 'echo ''------------------------------''     && jq --version     && git --version     &&
      jsonnet --version     && redis-cli --version     && python --version     &&
      python3.6 --version     && pip2 --version     && pip3 --version     && az --version
      | head -n 1     && echo -n "kubectl: " && kubectl version --client=true --short=true     &&
      ansible --version | head -n 1     && ansible-lint --version     && azcopy --version     &&
      mysql --version     && mysqldump --version     && mysqlpump --version     &&
      xtrabackup --version     && pt-online-schema-change --version     && innotop
      --version     && terraform --version     && ( drone --version || true )     &&
      sft --version     && az-mysqlpump --version     && docker --version     && docker-compose
      --version     && echo ''------------------------------'''
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $' \n    alias k="kubectl" \n    alias dodo-login="az login && sft enroll
      && sft login" \n    ' >> ~/.bashrc
    Name: run
    PrependShell: true
  From:
    Image: centos:7.6.1810
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7.6.1810
