MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: rsyuzyov@gmail.com
    Name: maintainer
  - Env:
    - Key: PG_APP_HOME
      Value: '"/etc/docker-postgresql"'
    - Key: PG_VERSION
      Value: "9.6"
    - Key: PG_USER
      Value: postgres
    - Key: PG_HOME
      Value: /var/lib/postgresql
    - Key: PG_RUNDIR
      Value: /run/postgresql
    - Key: PG_LOGDIR
      Value: /var/log/postgresql
    - Key: PG_CERTDIR
      Value: /etc/postgresql/certs
    Name: env
  - Env:
    - Key: PG_BINDIR
      Value: /usr/lib/postgresql/${PG_VERSION}/bin
    - Key: PG_DATADIR
      Value: ${PG_HOME}/${PG_VERSION}/main
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y sudo locales wget gnupg2         && localedef
      -i ru_RU -c -f UTF-8 -A /usr/share/locale/locale.alias ru_RU.UTF-8         &&
      update-locale LANG=ru_RU.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ru_RU.UTF-8
    Name: env
  - CmdLine:
    - wget --quiet -O - http://1c.postgrespro.ru/keys/GPG-KEY-POSTGRESPRO-1C | apt-key
      add -  && echo 'deb http://1c.postgrespro.ru/archive/2018_06_09/deb xenial main'
      > /etc/apt/sources.list.d/postgrespro-1c.list  && apt-get update  && DEBIAN_FRONTEND=noninteractive
      apt-get install -y acl       postgresql-pro-1c-${PG_VERSION} postgresql-client-pro-1c-${PG_VERSION}
      postgresql-contrib-pro-1c-${PG_VERSION}  && ln -sf ${PG_DATADIR}/postgresql.conf
      /etc/postgresql/${PG_VERSION}/main/postgresql.conf  && ln -sf ${PG_DATADIR}/pg_hba.conf
      /etc/postgresql/${PG_VERSION}/main/pg_hba.conf  && ln -sf ${PG_DATADIR}/pg_ident.conf
      /etc/postgresql/${PG_VERSION}/main/pg_ident.conf  && rm -rf ${PG_HOME}  && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runtime/
    - ${PG_APP_HOME}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 5432/tcp
  - Name: volume
    Volumes:
    - ${PG_HOME}
    - ${PG_RUNDIR}
  - Name: workdir
    Path: ${PG_HOME}
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
