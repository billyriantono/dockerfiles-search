MetaArgs: null
Stages:
- BaseName: golang:stretch
  Commands:
  - Env:
    - Key: TAG
      Value: debian
    Name: env
  - Env:
    - Key: ARCH
      Value: amd64
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/pihole:${PATH}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./install.sh
    - /usr/local/bin/docker-install.sh
  - Env:
    - Key: setupVars
      Value: /etc/pihole/setupVars.conf
    Name: env
  - Env:
    - Key: PIHOLE_INSTALL
      Value: /tmp/ph_install.sh
    Name: env
  - Env:
    - Key: S6OVERLAY_RELEASE
      Value: https://github.com/just-containers/s6-overlay/releases/download/v1.21.2.2/s6-overlay-amd64.tar.gz
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y wget curl net-tools cron procps &&     curl
      -L -s $S6OVERLAY_RELEASE         | tar xvzf - -C / &&     docker-install.sh
      &&     rm -rf /var/cache/apt/archives /var/lib/apt/lists/* &&     mv /init /s6-init
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./s6/debian-root
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./s6/service
    - /usr/local/bin/service
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./dnscrypt-proxy/dnscrypt-proxy.toml
    - /dnscrypt-proxy.toml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start-pihole.sh
    - /start-pihole.sh
  - CmdLine:
    - chmod +x /start-pihole.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/jedisct1/dnscrypt-proxy src &&         cd src/dnscrypt-proxy
      &&         go get -d &&         go clean &&         go build -ldflags=\"-s -w\"
      -o $GOPATH/linux-amd64/dnscrypt-proxy && \tcd ../.. && \trm -rf ./src && \tmkdir
      -p /etc/dnscrypt-proxy"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_ENV_CONFIG
      Value: '''/etc/lighttpd/conf-enabled/15-fastcgi-php.conf'''
    Name: env
  - Env:
    - Key: PHP_ERROR_LOG
      Value: '''/var/log/lighttpd/error.log'''
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./bash_functions.sh
    - /
  - Env:
    - Key: IPv6
      Value: "true"
    Name: env
  - Env:
    - Key: S6_LOGGING
      Value: "0"
    Name: env
  - Env:
    - Key: S6_KEEP_ENV
      Value: "1"
    Name: env
  - Env:
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    Name: env
  - Env:
    - Key: FTL_CMD
      Value: no-daemon
    Name: env
  - Health:
      Test:
      - CMD-SHELL
      - dig @127.0.0.1 pi.hole || exit 1
    Name: healthcheck
  - CmdLine:
    - /start-pihole.sh
    Name: cmd
    PrependShell: false
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  From:
    Image: golang:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM golang:stretch
