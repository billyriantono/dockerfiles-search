{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "python:slim-buster",
      "SourceCode": "FROM python:slim-buster AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "python:slim-buster"
      },
      "Commands": [
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "0.6.1"
        },
        {
          "Key": "PGP_KEY",
          "Name": "arg",
          "Value": "2B6FC204D9BF332D062B461A141001A1AF77F20B"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "${VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGP_KEY",
              "Value": "${PGP_KEY}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_USER",
              "Value": "jm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_DATA",
              "Value": "/jm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VIRTUAL_ENV",
              "Value": "/opt/venv"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 apt-get update \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests -y \tca-certificates \twget \tgpg \tdirmngr \tgpg-agent \tpkg-config \tlibtool \tlibffi-dev \tlibgmp-dev \tlibsodium-dev \t\u0026\u0026 TAR_URL=\"https://github.com/JoinMarket-Org/joinmarket-clientserver/archive/v${VERSION}.tar.gz\" \t\u0026\u0026 ASC_URL=\"https://github.com/JoinMarket-Org/joinmarket-clientserver/releases/download/v${VERSION}/joinmarket-clientserver-${VERSION}.tar.gz.asc\" \t\u0026\u0026 wget -qO jm.tar.gz $TAR_URL \t\u0026\u0026 wget -qO jm.asc $ASC_URL \t\u0026\u0026 found=''; \tfor server in \thkp://keyserver.ubuntu.com:80 \tha.pool.sks-keyservers.net \thkp://p80.pool.sks-keyservers.net:80 \tipv4.pool.sks-keyservers.net \tkeys.gnupg.net \tpgp.mit.edu \t; do \techo \"Fetching GPG key ${PGP_KEY} from $server\"; \tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"${PGP_KEY}\" \u0026\u0026 found=yes \u0026\u0026 break; \tdone; \ttest -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch PGP key ${PGP_KEY}\" \u0026\u0026 exit 1; \tgpg --verify jm.asc jm.tar.gz \t\u0026\u0026 mkdir jm \t\u0026\u0026 tar -xzvf jm.tar.gz -C /tmp/jm --strip-components=1 \t\u0026\u0026 python3 -m pip install virtualenv --no-cache-dir \t\u0026\u0026 python3 -m virtualenv --python=/usr/local/bin/python3 $VIRTUAL_ENV"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$VIRTUAL_ENV/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp/jm"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 pip install -r requirements-dev.txt \t\u0026\u0026 pip install scipy \t\u0026\u0026 python setupall.py --daemon \t\u0026\u0026 python setupall.py --client-bitcoin"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "python:slim-buster",
      "SourceCode": "FROM python:slim-buster",
      "Platform": "",
      "From": {
        "Image": "python:slim-buster"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SERVICE_USER",
              "Value": "jm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_DATA",
              "Value": "/jm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VIRTUAL_ENV",
              "Value": "/opt/venv"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 groupadd -g 65539 docker \t\u0026\u0026 useradd -g docker -m -d $SERVICE_DATA -u 1040 $SERVICE_USER \t\u0026\u0026 apt-get update \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests -y \tlibsodium-dev \tgosu \tnano \tprocps \t\u0026\u0026 apt-get clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 python3 -m pip install virtualenv --no-cache-dir \t\u0026\u0026 python3 -m virtualenv --python=/usr/local/bin/python3 $VIRTUAL_ENV"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$VIRTUAL_ENV/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/jm",
            "$SERVICE_DATA"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/venv",
            "/opt/venv"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/jm/scripts"
        },
        {
          "CmdLine": [
            "entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python",
            "joinmarketd.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}