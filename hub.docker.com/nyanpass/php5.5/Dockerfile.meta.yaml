MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf
        \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \t\tca-certificates \t\tcurl
      \t\ttar \t\txz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-maintainer-zts
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1
        F38252826ACD957EF380D39F2F7956BC5DA04B5D
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 5.5.38
    Name: env
  - Env:
    - Key: PHP_FILENAME
      Value: php-5.5.38.tar.xz
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: cb527c44b48343c8557fe2446464ff1d4695155a95601083e5d1f175df95580f
    Name: env
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t&& mkdir
      -p /usr/src \t&& cd /usr/src \t&& curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\"
      -o php.tar.xz \t&& echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \t&& curl
      -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& for key in $GPG_KEYS; do \t\tgpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone \t&& gpg
      --batch --verify php.tar.xz.asc php.tar.xz \t&& rm -r \"$GNUPGHOME\" \t&& apk
      del .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcurl-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev \t\t&& docker-php-source
      extract \t&& cd /usr/src/php \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--disable-cgi
      \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl
      \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS
      \t&& make -j\"$(getconf _NPROCESSORS_ONLN)\" \t&& make install \t&& { find /usr/local/bin
      /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true;
      } \t&& make clean \t&& docker-php-source delete \t\t&& runDeps=\"$( \t\tscanelf
      --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\",
      $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed
      \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .php-rundeps $runDeps
      \t\t&& apk del .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - php
    - -a
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
