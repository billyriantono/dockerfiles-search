MetaArgs: null
Stages:
- BaseName: dunkelfrosch/alpine:3.7
  Commands:
  - Maintainer: Patrick Paechnatz <patrick.paechnatz@gmail.com>
    Name: maintainer
  - Key: ISO_LANGUAGE
    Name: arg
    Value: en
  - Key: ISO_COUNTRY
    Name: arg
    Value: US
  - Key: JIRA_VERSION
    Name: arg
    Value: 7.13.0
  - Key: JIRA_PRODUCT
    Name: arg
    Value: jira-software
  - Key: MYSQL_CONNECTOR_VERSION
    Name: arg
    Value: 5.1.46
  - Key: BUILD_DATE
    Name: arg
    Value: undefined
  - Env:
    - Key: TERM
      Value: '"xterm"'
    - Key: TIMEZONE
      Value: '"Europe/Berlin"'
    - Key: JIRA_CROWD_SSO
      Value: "false"
    - Key: JIRA_CONTEXT_PATH
      Value: ROOT
    - Key: JIRA_HOME
      Value: /var/atlassian/jira
    - Key: JIRA_INSTALL
      Value: /opt/jira
    - Key: JIRA_SCRIPTS
      Value: /usr/local/share/atlassian
    - Key: MYSQL_CONNECTOR_URL
      Value: '"http://dev.mysql.com/get/Downloads/Connector-J"'
    - Key: DOWNLOAD_URL
      Value: '"https://www.atlassian.com/software/jira/downloads/binary"'
    - Key: RUN_USER
      Value: jira
    - Key: RUN_GROUP
      Value: jira
    - Key: RUN_UID
      Value: "1000"
    - Key: RUN_GID
      Value: "1000"
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: $JIRA_INSTALL/jre
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin
    - Key: LANG
      Value: ${ISO_LANGUAGE}_${ISO_COUNTRY}.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - ${JIRA_SCRIPTS}/
  - CmdLine:
    - mkdir -p ${JIRA_HOME}/caches/indexes              ${JIRA_INSTALL}/conf/Catalina              ${JIRA_INSTALL}/lib
    Name: run
    PrependShell: true
  - CmdLine:
    - export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin &&     export
      KEYSTORE=$JAVA_HOME/lib/security/cacerts &&     apk add --update ca-certificates
      gzip curl tini wget xmlstarlet &&     wget -O /tmp/jira.bin https://www.atlassian.com/software/jira/downloads/binary/${JIRA_BIN}
      && chmod +x /tmp/jira.bin &&     /tmp/jira.bin -q -varfile ${JIRA_SCRIPTS}/response.varfile
      &&     rm -f ${JIRA_INSTALL}/lib/mysql-connector-java*.jar &&     wget -O /tmp/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.tar.gz
      http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.tar.gz
      &&     tar xzf /tmp/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.tar.gz --directory=/tmp
      &&     cp /tmp/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}-bin.jar
      ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}-bin.jar
      &&     addgroup -g $RUN_GID $RUN_GROUP &&     adduser  -u $RUN_UID -G $RUN_GROUP
      -h /home/$RUN_USER -s /bin/bash -S $RUN_USER &&     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der
      &&     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt
      -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der &&     keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der &&     keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1
      -file /tmp/lets-encrypt-x1-cross-signed.der &&     keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2
      -file /tmp/lets-encrypt-x2-cross-signed.der &&     keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3
      -file /tmp/lets-encrypt-x3-cross-signed.der &&     keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4
      -file /tmp/lets-encrypt-x4-cross-signed.der &&     wget -O /home/${RUN_USER}/SSLPoke.class
      https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class
      &&     chown -R ${RUN_USER}:${RUN_GROUP} ${JIRA_HOME} ${JIRA_INSTALL} ${JIRA_SCRIPTS}
      /home/${RUN_USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del ca-certificates gzip wget &&     rm -rf /var/cache/apk/* &&     rm -rf
      /tmp/* &&      rm -rf /var/log/*
    Name: run
    PrependShell: true
  - Labels:
    - Key: com.container.vendor
      Value: '"dunkelfrosch impersonate"'
    - Key: com.container.service
      Value: '"atlassian/jira"'
    - Key: com.container.service.verion
      Value: '"${JIRA_VERSION}"'
    - Key: com.container.priority
      Value: '"1"'
    - Key: com.container.project
      Value: '"jira"'
    - Key: img.builddate
      Value: '"${BUILD_DATE}"'
    - Key: img.version
      Value: '"1.0.6"'
    - Key: img.description
      Value: '"atlassian jira application container"'
    Name: label
  - Name: user
    User: ${RUN_USER}:${RUN_GROUP}
  - Name: workdir
    Path: ${JIRA_HOME}
  - Name: volume
    Volumes:
    - /var/atlassian/jira
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/local/share/atlassian/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jira
    Name: cmd
    PrependShell: false
  From:
    Image: dunkelfrosch/alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM dunkelfrosch/alpine:3.7
