{
  "MetaArgs": [
    {
      "Key": "NODE_VERSION",
      "DefaultValue": "10.17.0-slim",
      "ProvidedValue": null,
      "Value": "10.17.0-slim"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:${NODE_VERSION}",
      "SourceCode": "FROM node:${NODE_VERSION}",
      "Platform": "",
      "From": {
        "Image": "node:${NODE_VERSION}"
      },
      "Commands": [
        {
          "Key": "GITHUB_ACCOUNT",
          "Name": "arg",
          "Value": "telefonicaid"
        },
        {
          "Key": "GITHUB_REPOSITORY",
          "Name": "arg",
          "Value": "lightweightm2m-iotagent"
        },
        {
          "Key": "DOWNLOAD",
          "Name": "arg",
          "Value": "latest"
        },
        {
          "Key": "SOURCE_BRANCH",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Env": [
            {
              "Key": "GITHUB_ACCOUNT",
              "Value": "${GITHUB_ACCOUNT}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITHUB_REPOSITORY",
              "Value": "${GITHUB_REPOSITORY}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOWNLOAD",
              "Value": "${DOWNLOAD}"
            }
          ],
          "Name": "env"
        },
        {
          "Maintainer": "FIWARE IoTAgent Team. Telef√≥nica I+D",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "if [ \"${DOWNLOAD}\" = \"latest\" ] ; \tthen \t\tRELEASE=\"${SOURCE_BRANCH}\"; \t\techo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\"; \telif [ \"${DOWNLOAD}\" = \"stable\" ]; \tthen \t\tRELEASE=$(curl -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4); \t\techo \"INFO: Building Latest Stable Release: ${RELEASE}\"; \telse \t \tRELEASE=\"${DOWNLOAD}\"; \t \techo \"INFO: Building Release: ${RELEASE}\"; \tfi \u0026\u0026 \tRELEASE_CONCAT=$(echo \"${RELEASE}\" | tr / -); \tapt-get update \u0026\u0026 \tapt-get install -y  --no-install-recommends unzip \u0026\u0026 \twget --no-check-certificate -O source.zip https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip \u0026\u0026 \tunzip source.zip \u0026\u0026 \trm source.zip \u0026\u0026 \tmv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\" /opt/iota-lwm2m \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get remove -y unzip \u0026\u0026 \tapt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/iota-lwm2m"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y git \u0026\u0026 \tnpm install pm2@3.2.2 -g \u0026\u0026 \techo \"INFO: npm install --production...\" \u0026\u0026 \tnpm install --production \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get remove -y git \u0026\u0026 \tapt-get -y autoremove \u0026\u0026 \tchmod +x docker/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "node"
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "${IOTA_NORTH_PORT:-4041}",
            "${LWM2M_PORT:-5683}/udp"
          ]
        },
        {
          "CmdLine": [
            "docker/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-- ",
            "config.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}