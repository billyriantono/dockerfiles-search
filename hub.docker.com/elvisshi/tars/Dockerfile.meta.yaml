MetaArgs: null
Stages:
- BaseName: centos/systemd
  Commands:
  - Name: workdir
    Path: /root/
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - Env:
    - Key: DBIP
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: DBPort
      Value: "3306"
    Name: env
  - Env:
    - Key: DBUser
      Value: root
    Name: env
  - Env:
    - Key: DBPassword
      Value: password
    Name: env
  - Env:
    - Key: DBTarsPass
      Value: tars2015
    Name: env
  - Env:
    - Key: GOPATH
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"zh_CN.UTF-8"'
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/java/jdk-11.0.2
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/local/apache-maven-3.6.2
    Name: env
  - CmdLine:
    - "yum -y install https://repo.mysql.com/yum/mysql-8.0-community/el/7/x86_64/mysql80-community-release-el7-1.noarch.rpm
      \t&& yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      \t&& yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \t&&
      yum -y install yum-utils && yum-config-manager --enable remi-php73 \t&& yum
      -y install git gcc gcc-c++ go make wget cmake mysql mysql-devel unzip iproute
      which glibc-devel flex bison ncurses-devel protobuf-devel zlib-devel kde-l10n-Chinese
      glibc-common hiredis-devel rapidjson-devel boost boost-devel php php-cli php-devel
      php-mbstring php-pecl-mcrypt php-json php-gd php-curl php-mysqlnd php-pecl-zip
      php-fileinfo php-phpiredis php-pecl-redis4 php-seld-phar-utils php-xmlwriter
      pcre-devel tzdata rsync \t&& ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
      && echo $TZ > /etc/timezone \t&& localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \t&&
      wget -c -t 0 https://dev.mysql.com/get/Downloads/Connector-C++/mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz
      \t&& tar zxf mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz && cd mysql-connector-c++-8.0.11-linux-el7-x86-64bit
      \t&& cp -Rf include/jdbc/* /usr/include/mysql/ && cp -Rf include/mysqlx/* /usr/include/mysql/
      && cp -Rf lib64/* /usr/lib64/mysql/ \t&& cd /root && rm -rf mysql-connector*
      \t&& mkdir -p /usr/local/mysql && ln -s /usr/lib64/mysql /usr/local/mysql/lib
      && ln -s /usr/include/mysql /usr/local/mysql/include && echo \"/usr/local/mysql/lib/\"
      >> /etc/ld.so.conf && ldconfig \t&& cd /usr/local/mysql/lib/ && rm -f libmysqlclient.a
      && ln -s libmysqlclient.so.*.*.* libmysqlclient.a \t&& cd /root/ && git clone
      https://github.com/TarsCloud/Tars \t&& cd /root/Tars/ && git submodule update
      --init --recursive framework \t&& git submodule update --init --recursive web
      \t&& git submodule update --init --recursive php \t&& git submodule update --init
      --recursive go \t&& git submodule update --init --recursive java \t&& mkdir
      -p /data && chmod u+x /root/Tars/framework/build/build.sh \t&& sed -i '32s/rt/rt
      crypto ssl/' /root/Tars/framework/CMakeLists.txt \t&& cd /root/Tars/framework/build/
      && ./build.sh all \t&& ./build.sh install \t&& cd /root/Tars/framework/build/
      && make framework-tar \t&& make tarsstat-tar && make tarsnotify-tar && make
      tarsproperty-tar && make tarslog-tar && make tarsquerystat-tar && make tarsqueryproperty-tar
      \t&& mkdir -p /usr/local/app/tars/ && cp /root/Tars/framework/build/framework.tgz
      /usr/local/app/tars/ && cp /root/Tars/framework/build/t*.tgz /root/ \t&& cd
      /usr/local/app/tars/ && tar xzfv framework.tgz && rm -rf framework.tgz \t&&
      mkdir -p /usr/local/app/patchs/tars.upload \t&& cd /tmp && curl -fsSL https://getcomposer.org/installer
      | php \t&& chmod +x composer.phar && mv composer.phar /usr/local/bin/composer
      \t&& cd /root/Tars/php/tars-extension/ && phpize --clean && phpize \t&& ./configure
      --enable-phptars --with-php-config=/usr/bin/php-config && make && make install
      \t&& echo \"extension=phptars.so\" > /etc/php.d/phptars.ini \t&& cd /root &&
      git clone https://github.com/swoole/swoole-src.git \t&& cd swoole-src && phpize
      \t&& ./configure --enable-openssl --enable-sockets \t&& make && make install
      \t&& echo \"extension=swoole.so\" > /etc/php.d/swoole.ini \t&& cd /root && rm
      -rf swoole-src \t&& mkdir -p /root/phptars && cp -f /root/Tars/php/tars2php/src/tars2php.php
      /root/phptars \t&& go get github.com/TarsCloud/TarsGo/tars \t&& cd $GOPATH/src/github.com/TarsCloud/TarsGo/tars/tools/tars2go
      && go build . \t&& wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash \t&& source ~/.bashrc && nvm install v8.15.1 \t&& cp -Rf /root/Tars/web
      /usr/local/tarsweb && cd /usr/local/tarsweb/ && npm install \t&& npm install
      -g pm2 @tars/deploy @tars/stream @tars/rpc @tars/logs @tars/config @tars/monitor
      @tars/notify @tars/utils @tars/dyeing @tars/registry \t&& mkdir -p /root/init
      && mkdir -p /usr/java && cd /root/init/ \t&& wget -c -t 0 https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz
      \t&& tar zxf openjdk-11.0.2_linux-x64_bin.tar.gz && mv jdk-11.0.2 /usr/java/
      \t&& rm -rf /root/init/openjdk-11.0.2_linux-x64_bin.tar.gz \t&& echo \"export
      JAVA_HOME=/usr/java/jdk-11.0.2\" >> /etc/profile \t&& echo \"CLASSPATH=\\$JAVA_HOME/lib/dt.jar:\\$JAVA_HOME/lib/tools.jar\"
      >> /etc/profile \t&& echo \"PATH=\\$JAVA_HOME/bin:\\$PATH\" >> /etc/profile
      \t&& echo \"export PATH JAVA_HOME CLASSPATH\" >> /etc/profile \t&& echo \"export
      JAVA_HOME=/usr/java/jdk-11.0.2\" >> /root/.bashrc \t&& echo \"CLASSPATH=\\$JAVA_HOME/lib/dt.jar:\\$JAVA_HOME/lib/tools.jar\"
      >> /root/.bashrc \t&& echo \"PATH=\\$JAVA_HOME/bin:\\$PATH\" >> /root/.bashrc
      \t&& echo \"export PATH JAVA_HOME CLASSPATH\" >> /root/.bashrc \t&& cd /usr/local/
      && wget -c -t 0 http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz
      \t&& tar zxvf apache-maven-3.6.2-bin.tar.gz && echo \"export MAVEN_HOME=/usr/local/apache-maven-3.6.2/\"
      >> /etc/profile \t&& echo \"export PATH=\\$PATH:\\$MAVEN_HOME/bin\" >> /etc/profile
      \t&& echo \"export PATH=\\$PATH:\\$MAVEN_HOME/bin\" >> /root/.bashrc \t&& source
      /etc/profile && mvn -v \t&& rm -rf apache-maven-3.6.2-bin.tar.gz \t&& sed -i
      's/<dependencies>/<dependencies>\\n<dependency>\\n\\t<groupId>javax\\.annotation<\\/groupId>\\n\\t<artifactId>javax\\.annotation-api<\\/artifactId>\\n\\t<version>1\\.3\\.2<\\/version>\\n<\\/dependency>/g'
      /root/Tars/java/core/server.pom.xml \t&& sed -i 's/<dependencies>/<dependencies>\\n<dependency>\\n\\t<groupId>javax\\.annotation<\\/groupId>\\n\\t<artifactId>javax\\.annotation-api<\\/artifactId>\\n\\t<version>1\\.3\\.2<\\/version>\\n<\\/dependency>/g'
      /root/Tars/java/core/client.pom.xml \t&& sed -i 's/<dependencies>/<dependencies>\\n<dependency>\\n\\t<groupId>javax\\.annotation<\\/groupId>\\n\\t<artifactId>javax\\.annotation-api<\\/artifactId>\\n\\t<version>1\\.3\\.2<\\/version>\\n<\\/dependency>/g'
      /root/Tars/java/core/pom.xml \t&& cd /root/Tars/java && source /etc/profile
      \t&& mvn clean install && mvn clean install -f core/client.pom.xml \t&& mvn
      clean install -f core/server.pom.xml \t&& cd /root/init && mvn archetype:generate
      -DgroupId=com.tangramor -DartifactId=TestJava -DarchetypeArtifactId=maven-archetype-webapp
      -DinteractiveMode=false \t&& cd /root/Tars/java/examples/quickstart-server/
      && mvn tars:tars2java && mvn package \t&& mkdir -p /root/sql && cp -rf /root/Tars/framework/sql/*
      /root/sql/ \t&& cd /root/Tars/framework/build/ && ./build.sh cleanall \t&& yum
      clean all && rm -rf /var/cache/yum"
    Name: run
    PrependShell: true
  - Env:
    - Key: ENABLE_LOGIN
      Value: "false"
    Name: env
  - Env:
    - Key: MOUNT_DATA
      Value: "false"
    Name: env
  - Env:
    - Key: INET_NAME
      Value: eth0
    Name: env
  - Name: volume
    Volumes:
    - /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install.sh
    - /root/init/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - confs
    - /root/confs
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/entrypoint.sh
    - start
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - "80"
  From:
    Image: centos/systemd
  Name: ""
  Platform: ""
  SourceCode: FROM centos/systemd
