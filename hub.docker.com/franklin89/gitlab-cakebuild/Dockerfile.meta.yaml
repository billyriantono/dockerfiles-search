MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - "echo \"deb [arch=amd64] http://apt-mo.trafficmanager.net/repos/dotnet-release/
      xenial main\" > /etc/apt/sources.list.d/dotnetdev.list     && apt-key adv --keyserver
      hkp://keyserver.ubuntu.com:80 --recv-keys 417A0893     && apt-get update \t&&
      apt-get install -y     curl     gettext     libunwind8     libcurl4-openssl-dev
      \    libicu-dev     libssl-dev     git     dotnet-dev-1.0.1  && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/4.2.3.4
      main\" > /etc/apt/sources.list.d/mono-xamarin.list \t&& apt-get update \t&&
      apt-get install -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget \t&&
      rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://git.io/n-install | bash -s -- -ny -     && ~/n/bin/n stable     &&
      npm install -g bower grunt gulp n     && rm -rf ~/n
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir dotnettest     && cd dotnettest     && dotnet new mvc --auth None --framework
      netcoreapp1.1     && dotnet restore     && dotnet build     && cd ..     &&
      rm -r dotnettest
    Name: run
    PrependShell: true
  - CmdLine:
    - gulp --version
    Name: run
    PrependShell: true
  - CmdLine:
    - npm --version
    Name: run
    PrependShell: true
  - CmdLine:
    - mono --version
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet --info
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
