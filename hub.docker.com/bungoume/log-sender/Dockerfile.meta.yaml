MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - CmdLine:
    - 'apk --no-cache --update add                             build-base                             ca-certificates                             openssl                             ruby                             ruby-irb                             ruby-etc                             ruby-webrick                             ruby-dev
      &&     echo ''gem: --no-document'' >> /etc/gemrc &&     gem install oj json
      &&     gem install fluentd -v 1.7.4 &&     gem install fluent-plugin-beats &&     apk
      del build-base ruby-dev &&     rm -rf /tmp/* /var/tmp/* /var/cache/apk/* /usr/lib/ruby/gems/*/cache/*.gem'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/fluent/plugin && mkdir -p /data/buffer && mkdir /data/pos && mkdir
      /data/log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugin
    - /etc/fluent/plugin/
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&     tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&     rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app/
  - Name: workdir
    Path: /app/
  - Name: expose
    Ports:
    - "10224"
  - Name: expose
    Ports:
    - 10514/udp
  - Name: expose
    Ports:
    - "5044"
  - Env:
    - Key: TO_HOST
      Value: logserver.example.com
    Name: env
  - Env:
    - Key: APP_NAME
      Value: noname
    Name: env
  - CmdLine:
    - dockerize
    - -template
    - /app/fluent.tmpl:/etc/fluent/fluent.conf
    - fluentd
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
