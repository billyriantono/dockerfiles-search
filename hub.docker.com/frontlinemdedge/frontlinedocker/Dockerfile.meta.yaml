MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Chris Roane <chris.roane@fourkitchens.com>
    Name: maintainer
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tphp7.0 \tphp7.0-bz2 \tphp7.0-cgi \tphp7.0-cli \tphp7.0-common
      \tphp7.0-curl \tphp7.0-dev \tphp7.0-enchant \tphp7.0-fpm \tphp7.0-gd \tphp7.0-gmp
      \tphp7.0-imap \tphp7.0-interbase \tphp7.0-intl \tphp7.0-json \tphp7.0-ldap \tphp7.0-mcrypt
      \tphp7.0-mysql \tphp7.0-odbc \tphp7.0-opcache \tphp7.0-pgsql \tphp7.0-phpdbg
      \tphp7.0-pspell \tphp7.0-readline \tphp7.0-recode \tphp7.0-snmp \tphp7.0-sqlite3
      \tphp7.0-sybase \tphp7.0-tidy \tphp7.0-xmlrpc \tphp7.0-xsl \tunzip \twget \tsudo
      \truby-sass \tsnmp \tiputils-ping"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apache2 libapache2-mod-php7.0 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install git composer nano tree vim curl ftp php7.0-mbstring default-jre
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jre-headless xvfb libxi6 libgconf-2-4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y --yes --force-yes --install-recommends
      linux-generic-hwe-16.04
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0xcbcb082a1bb943db
      &&   wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo
      apt-key add - &&   echo "deb [arch=amd64,i386,ppc64el] http://mirror.lstn.net/mariadb/repo/10.2/ubuntu
      xenial main" > /etc/apt/sources.list.d/mariadb.list &&   apt-get update &&   DEBIAN_FRONTEND=noninteractive
      apt-get install -y --allow-unauthenticated mariadb-server &&   rm -rf /var/lib/apt/lists/*
      &&   sed -i 's/^\(bind-address\s.*\)/# \1/' /etc/mysql/my.cnf &&   echo "mysqld_safe
      &" > /tmp/config &&   echo "mysqladmin --silent --wait=30 ping || exit 1" >>
      /tmp/config &&   bash /tmp/config &&   rm -f /tmp/config &&   apt-get clean
      all
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libnss3-1d libxss1 libgconf2-4 libappindicator1 libindicator7
      libpango1.0-0 fonts-liberation xdg-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://bbgentoo.ilb.ru/distfiles/google-chrome-stable_55.0.2883.87-1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo dpkg -i google-chrome-stable_55.0.2883.87-1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -f install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-check-certificate https://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip chromedriver_linux64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mv -f chromedriver /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chown -R root:root /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chmod -R 0755 /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - Env:
    - Key: LOG_STDOUT
      Value: '**Boolean**'
    Name: env
  - Env:
    - Key: LOG_STDERR
      Value: '**Boolean**'
    Name: env
  - Env:
    - Key: LOG_LEVEL
      Value: warn
    Name: env
  - Env:
    - Key: ALLOW_OVERRIDE
      Value: All
    Name: env
  - Env:
    - Key: DATE_TIMEZONE
      Value: UTC
    Name: env
  - Env:
    - Key: TERM
      Value: dumb
    Name: env
  - Name: volume
    Volumes:
    - /var/www/html
  - Name: volume
    Volumes:
    - /var/log/httpd
  - Name: volume
    Volumes:
    - /var/log/mysql
  - Name: volume
    Volumes:
    - /etc/mysql
    - /var/lib/mysql
  - CmdLine:
    - mkdir -p /tmp/node
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/node
  - Env:
    - Key: NODE_VERSION
      Value: 6.1.0
    Name: env
  - Env:
    - Key: NPM_VERSION
      Value: 5.4.0
    Name: env
  - CmdLine:
    - curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"   &&
      tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1   &&
      rm "node-v$NODE_VERSION-linux-x64.tar.gz"   && npm install -g npm@"$NPM_VERSION"   &&
      npm cache clear --force   && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo npm install -g gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo composer global require drush/drush:8.1.2
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/.composer/vendor/bin:${PATH}"'
    Name: env
  - CmdLine:
    - git config --global core.fileMode false
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global http.sslverify false
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HOME/.ssh/ && echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"~/"'
  - CmdLine:
    - wget http://archive.apache.org/dist/lucene/solr/4.7.2/solr-4.7.2.tgz   && tar
      -xvzf solr-4.7.2.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://ftp.drupal.org/files/projects/apachesolr-7.x-1.x-dev.tar.gz | tar
      -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r apachesolr/solr-conf/solr-4.x/* solr-4.7.2/example/solr/collection1/conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mv solr-4.7.2 ~/solr
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf apachesolr solr-4.7.2.tgz apachesolr-7.x-1.x-dev.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O ~/selenium-server-standalone-3.3.1.jar http://selenium-release.storage.googleapis.com/3.3/selenium-server-standalone-3.3.1.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mkdir /root/medstat
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mkdir /root/medstat/build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config/default-apache-page.html
    - /root/medstat/build/
  - CmdLine:
    - sudo mv /root/medstat/build/default-apache-page.html /root/medstat/build/index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chown -R www-data:www-data /root/medstat/build
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chmod -R g+rwX /root/medstat/build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config/medstat.conf
    - /etc/apache2/sites-available/
  - CmdLine:
    - sudo a2ensite medstat
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +rx /root
    Name: run
    PrependShell: true
  - CmdLine:
    - supervisord
    - --nodaemon
    Name: cmd
    PrependShell: false
  - CmdLine:
    - service
    - php7-fpm
    - start
    Name: cmd
    PrependShell: false
  - CmdLine:
    - service
    - apache2
    - start
    Name: cmd
    PrependShell: false
  - CmdLine:
    - mysqld_safe
    Name: cmd
    PrependShell: false
  - CmdLine:
    - rm -R /root/medstat
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "3306"
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
