{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "Shing.L \u003cicodex@msn.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "addgroup -S mysql     \u0026\u0026 adduser -S mysql -G mysql     \u0026\u0026 apk update     \u0026\u0026 apk add --update bash vim vimdiff ca-certificates supervisor wget git mysql     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 mkdir -p /var/log/supervisor     \u0026\u0026 chmod -R 777 /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "awk '{ print } $1 ~ /\\[mysqld\\]/ \u0026\u0026 c == 0 { c = 1; print \"skip-host-cache\\nskip-name-resolve\\nlower_case_table_names=1\"}' /etc/mysql/my.cnf \u003e /tmp/my.cnf     \u0026\u0026 mv /tmp/my.cnf /etc/mysql/my.cnf     \u0026\u0026 mkdir -p /run/mysqld     \u0026\u0026 chown -R mysql:mysql /run/mysqld     \u0026\u0026 chmod -R 777 /run/mysqld"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add php7-intl php7-openssl php7-dba php7-sqlite3 php7-pear \tphp7-tokenizer php7-phpdbg php7-gmp php7-pdo_mysql php7-pcntl \tphp7-common php7-xsl php7-fpm php7-imagick php7-mysqlnd \tphp7-enchant php7-pspell php7-redis php7-snmp php7-fileinfo \tphp7-mbstring php7-dev php7-xmlrpc php7-embed php7-xmlreader \tphp7-pdo_sqlite php7-exif php7-opcache php7-ldap php7-posix \tphp7-session php7-gd php7-gettext php7-json php7-xml php7-iconv \tphp7-sysvshm php7-curl php7-shmop php7-odbc php7-phar php7-pdo_pgsql \tphp7-imap php7-pdo_dblib php7-pgsql php7-zip php7-cgi php7-ctype \tphp7-mcrypt php7-wddx php7-bcmath php7-calendar php7-tidy php7-dom \tphp7-sockets php7-memcached php7-soap php7-sysvmsg php7-zlib \tphp7-imagick-dev php7-ftp php7-sysvsem php7-pdo php7-bz2 php7-mysqli \tphp7-simplexml php7-xmlwriter     \u0026\u0026 rm -f /var/cache/apk/* \t\u0026\u0026 mkdir -p /run/php-fpm \t\u0026\u0026 chown -R nobody:nobody /run/php-fpm \t\u0026\u0026 chmod -R 777 /run/php-fpm \t\u0026\u0026 echo \"Success\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /etc/php7/php-fpm.conf /etc/php7/php-fpm.conf.origin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./php-fpm.conf",
            "/etc/php7/"
          ]
        },
        {
          "CmdLine": [
            "mv /etc/php7/php-fpm.d/www.conf /etc/php7/php-fpm.d/www.conf.origin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./www.conf",
            "/etc/php7/php-fpm.d/"
          ]
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(open_basedir.*$\\)#;\\1#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^;\\(opcache.enable=\\).*$#\\11#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^;\\(opcache.enable_cli=\\).*$#\\11#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(post_max_size = \\).*$#\\150M#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(upload_max_filesize = \\).*$#\\150M#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(short_open_tag = \\).*$#\\1On#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(max_execution_time = \\).*$#\\1300#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^;\\(error_log = \\).*\\.log$#\\1/var/log/php7/php_errors.log#g' /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add apache2 apache2-proxy apache-mod-fcgid apache2-ssl apache2-http2 apache2-lua apache2-utils curl     \u0026\u0026 rm -f /var/cache/apk/*     \u0026\u0026 mkdir -p /run/apache2     \u0026\u0026 chown -R apache:apache /run/apache2     \u0026\u0026 chmod -R 777 /run/apache2 \t\u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 mkdir -p /app \u0026\u0026 chown -R apache:apache /app     \u0026\u0026 echo \"Success\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^#\\(LoadModule deflate_module.*$\\):\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^#\\(LoadModule mpm_event_module.*$\\):\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^\\(LoadModule mpm_prefork_module.*$\\):#\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^#\\(LoadModule rewrite_module.*$\\):\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^#\\(LoadModule slotmem_shm_module.*$\\):\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^#\\(LoadModule slotmem_plain_module.*$\\):\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^#\\(ServerName www.example.com\\).*$:\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#\\(AllowOverride\\).*#\\1 All#' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(DocumentRoot\\).*$#\\1 /app#g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(\u003cDirectory \\).*htdocs\"\u003e$#\\1 \"/app\"\u003e#g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#\\(ScriptAlias /cgi-bin/\\).*\\\u003e$#\\1 \"/app/cgi-bin/\"\u003e#g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(\u003cDirectory \\).*cgi-bin\"\u003e$#\\1 \"/app/cgi-bin/\"\u003e#g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's:^\\(LoadModule authn_file_module.*$\\):# PHP-FPM default settings\\nInclude /etc/apache2/conf.d/httpd-php.conf\\n# PhpMyAdmin settings\\nInclude /etc/apache2/conf.d/phpmyadmin.conf\\n\\1:g' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./httpd-php.conf",
            "/etc/apache2/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./phpmyadmin.conf",
            "/etc/apache2/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "apk apk update     \u0026\u0026 apk add --update redis memcached     \u0026\u0026 rm -f /var/cache/apk/*     \u0026\u0026 chown redis:redis /etc/redis.conf     \u0026\u0026 mkdir -p /var/log/redis     \u0026\u0026 chown -R redis:redis /var/log/redis     \u0026\u0026 chmod -R 777 /var/log/redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's#^\\(daemonize\\).*yes$#\\1 no#g' /etc/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/supervisor.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./init.ini",
            "/etc/supervisor.d/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html \t\u0026\u0026 cd /var/www/html \t\u0026\u0026 wget \"https://files.phpmyadmin.net/phpMyAdmin/4.7.4/phpMyAdmin-4.7.4-all-languages.tar.gz\" -O - |tar -zxvf - \t\u0026\u0026 mv phpMyAdmin-4.7.4-all-languages/ phpMyAdmin \t\u0026\u0026 chown -R apache:apache /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /var/log/ -type f -exec rm -f {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-n"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}