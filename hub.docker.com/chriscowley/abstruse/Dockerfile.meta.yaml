MetaArgs: null
Stages:
- As: base
  BaseName: mhart/alpine-node:8
  Commands:
  - Env:
    - Key: DOCKER_VERSION
      Value: 17.09.0-ce
    Name: env
  - CmdLine:
    - apk --no-cache add openssl     && wget https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz
      -O /tmp/docker.tgz     && mkdir /tmp/docker && tar xzf /tmp/docker.tgz -C /tmp     &&
      ln -s /tmp/docker/docker /usr/bin/docker && chmod 755 /usr/bin/docker && rm
      -rf /tmp/docker.tgz     && apk del openssl
    Name: run
    PrependShell: true
  From:
    Image: mhart/alpine-node:8
  Name: base
  Platform: ""
  SourceCode: FROM mhart/alpine-node:8 as base
- As: build
  BaseName: base
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package-lock.json
    - tsconfig.json
    - webpack.*.js
    - /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./src
    - /app/src
  - CmdLine:
    - apk add --no-cache --virtual .build-dependencies make gcc g++ python curl sqlite
      git     && npm set progress=false && npm config set depth 0     && npm i --only=production     &&
      cp -R node_modules prod_node_modules     && npm i && npm run build:prod && ls
      -lha /usr/lib/node_modules     && apk del .build-dependencies
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: base
  Name: build
  Platform: ""
  SourceCode: FROM base as build
- BaseName: alpine:3.6
  Commands:
  - Key: VCS_REF
    Name: arg
    Value: n/a
  - Key: VERSION
    Name: arg
    Value: dev
  - Key: BUILD_DATE
    Name: arg
    Value: n/a
  - Labels:
    - Key: maintainer
      Value: '"Jan Kuri <jan@bleenco.com>"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.name
      Value: '"abstruse"'
    - Key: org.label-schema.description
      Value: '"Continuous integration platform, simple, scalable and fast"'
    - Key: org.label-schema.url
      Value: '"https://abstruse.bleenco.io/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/bleenco/abstruse"'
    - Key: org.label-schema.vendor
      Value: '"Bleenco"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    Name: label
  - Name: workdir
    Path: /app
  - CmdLine:
    - apk --no-cache add tini sqlite git wget
    Name: run
    PrependShell: true
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /usr/bin/node
    - /usr/bin/
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /usr/lib/libgcc*
    - /usr/lib/libstdc*
    - /usr/lib/
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /tmp/docker/docker
    - /usr/bin/docker
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app/package.json
    - /app/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app/prod_node_modules
    - ./node_modules
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app/dist
    - ./dist
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app/src/files
    - ./src/files
  - Health:
      Interval: 10000000000
      StartPeriod: 20000000000
      Test:
      - CMD-SHELL
      - wget -q -O- http://localhost:6500/status || exit 1
      Timeout: 2000000000
    Name: healthcheck
  - Name: expose
    Ports:
    - "6500"
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - node
    - dist/api/index.js
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
