{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ROCKSDB_LIB_DIR",
              "Value": "/usr/lib"
            },
            {
              "Key": "SNAPPY_LIB_DIR",
              "Value": "/usr/lib/x86_64-linux-gnu"
            },
            {
              "Key": "CARGO_TARGET_DIR",
              "Value": "/target"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y --no-install-recommends     software-properties-common     gcc     g++     pkg-config     libssl-dev     libcurl4-openssl-dev     libelf-dev     libdw-dev     binutils-dev     libiberty-dev     curl \u0026\u0026   curl https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \u0026\u0026   add-apt-repository -y ppa:exonum/rocksdb \u0026\u0026   add-apt-repository -y ppa:maarten-fonville/protobuf \u0026\u0026   add-apt-repository -y ppa:fsgmhoward/shadowsocks-libev \u0026\u0026   add-apt-repository -y 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main' \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y --no-install-recommends     libprotobuf-dev     libsnappy-dev     libsodium-dev     librocksdb5.17     protobuf-compiler     clang-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "RUST_VERSION",
          "Name": "arg",
          "Value": "1.36.0"
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUST_VERSION \u0026\u0026   ln -s $HOME/.cargo/bin/* /usr/bin \u0026\u0026   mkdir -p /cargo/git \u0026\u0026   ln -s /cargo/git $HOME/.cargo/git \u0026\u0026   mkdir -p /cargo/registry \u0026\u0026   ln -s /cargo/registry $HOME/.cargo/registry"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/project"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/cargo",
            "/target",
            "/project"
          ]
        }
      ]
    }
  ]
}