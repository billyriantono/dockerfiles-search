{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Holger Amann \u003cholger@nextjournal.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "ERLANG_VERSION",
          "Name": "arg",
          "Value": "20.1"
        },
        {
          "Key": "DISABLED_APPS",
          "Name": "arg",
          "Value": "'megaco wx debugger jinterface orber reltool observer gs et'"
        },
        {
          "Key": "ERLANG_DOWNLOAD_URL",
          "Name": "arg",
          "Value": "\"https://github.com/erlang/otp/archive/OTP-${ERLANG_VERSION}.tar.gz\""
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk --update add --virtual build-dependencies curl ca-certificates build-base autoconf perl ncurses-dev openssl-dev unixodbc-dev tar ncurses openssl unixodbc     \u0026\u0026 curl -fSL -o otp-src.tar.gz \"$ERLANG_DOWNLOAD_URL\"     \u0026\u0026 mkdir -p /usr/src/otp-src     \u0026\u0026 tar -xzf otp-src.tar.gz -C /usr/src/otp-src --strip-components=1     \u0026\u0026 rm otp-src.tar.gz     \u0026\u0026 cd /usr/src/otp-src     \u0026\u0026 for lib in ${DISABLED_APPS} ; do touch lib/${lib}/SKIP ; done     \u0026\u0026 ./otp_build autoconf     \u0026\u0026 ./configure         --enable-smp-support         --enable-m64-build         --disable-native-libs         --enable-sctp         --enable-threads         --enable-kernel-poll         --disable-hipe     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)     \u0026\u0026 make install     \u0026\u0026 find /usr/local -name examples | xargs rm -rf     \u0026\u0026 apk del build-dependencies     \u0026\u0026 ls -d /usr/local/lib/erlang/lib/*/src | xargs rm -rf     \u0026\u0026 rm -rf       /opt       /var/cache/apk/*       /tmp/*       /usr/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "ELIXIR_VERSION",
          "Name": "arg",
          "Value": "1.5.2"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk --update add openssl ca-certificates     \u0026\u0026 wget --no-check-certificate https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/Precompiled.zip     \u0026\u0026 mkdir -p /opt/elixir-${ELIXIR_VERSION}/     \u0026\u0026 unzip Precompiled.zip -d /opt/elixir-${ELIXIR_VERSION}/     \u0026\u0026 rm Precompiled.zip     \u0026\u0026 rm -rf /etc/ssl     \u0026\u0026 rm -rf       /var/cache/apk/*       /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/elixir-${ELIXIR_VERSION}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}