MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: thisgithub
    Name: maintainer
  - Env:
    - Key: USER
      Value: mpirun
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&     apt-get install -y --no-install-recommends sudo apt-utils
      &&     apt-get install -y --no-install-recommends openssh-server         python3-tk
      python-dev python-numpy python-pip python-virtualenv python-scipy         bzip2
      g++ git curl unzip graphviz libgl1-mesa-glx libhdf5-dev wget         libfreetype6-dev
      libhdf5-serial-dev libzmq3-dev pkg-config software-properties-common unzip         gcc
      gfortran libopenmpi-dev openmpi-bin openmpi-common openmpi-doc binutils &&     apt-get
      clean && apt-get purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:${USER}' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --disabled-password --gecos "" ${USER} &&     echo "${USER} ALL=(ALL)
      NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - Env:
    - Key: SSHDIR
      Value: ${HOME}/.ssh/
    Name: env
  - CmdLine:
    - mkdir -p ${SSHDIR}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh/config
    - ${SSHDIR}/config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh/id_rsa.mpi
    - ${SSHDIR}/id_rsa
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh/id_rsa.mpi.pub
    - ${SSHDIR}/id_rsa.pub
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh/id_rsa.mpi.pub
    - ${SSHDIR}/authorized_keys
  - CmdLine:
    - chmod -R 600 ${SSHDIR}* &&     chown -R ${USER}:${USER} ${SSHDIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - CmdLine:
    - pip install --user -U setuptools     && pip install --user mpi4py
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /bin/bash
    - -cu
  - Name: user
    User: root
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/archive/Anaconda3-5.0.0.1-Linux-x86_64.sh
      -O ~/anaconda.sh &&     /bin/bash ~/anaconda.sh -b -p /opt/conda &&     rm ~/anaconda.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Key: python_version
    Name: arg
    Value: "3.6"
  - CmdLine:
    - conda config --append channels conda-forge
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/conda/envs/idp/bin:$PATH
    Name: env
  - CmdLine:
    - conda update conda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels intel
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -n idp intelpython3_full python=3
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --append channels conda-forge
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y python=${python_version} &&     pip install       sklearn_pandas       h5py       MedPy       nibabel       Keras       numpy       scipy       Pillow       click       torch       mxnet       tensorflow       horovod       cntk
      &&     conda install       bcolz       h5py       matplotlib       mkl       nose       notebook       pandas       pydot       pyyaml       scikit-learn       six       theano       mkdocs       &&     git
      clone git://github.com/keras-team/keras.git /src && pip install -e /src[tests]
      &&     pip install git+git://github.com/keras-team/keras.git &&     conda clean
      -yt
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $(which python) /usr/local/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir
      -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new
      &&     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new &&     mv
      /etc/ssh/ssh_config.new /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash docker
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/docker
    Name: env
  - CmdLine:
    - mkdir $HOME/src
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /$HOME/src:${PATH}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - __init__.py
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .theanorc
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - app.py
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cnn_scripts.py
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - libs
    - $HOME/src/libs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - utils
    - $HOME/src/utils
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh
    - $HOME/src/ssh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker
    - $HOME/src/docker
  - Chown: ""
    Name: add
    SourcesAndDest:
    - logonic.png
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nic_train_network_batch.py
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nic_infer_segmentation_batch.py
    - $HOME/src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - tensorboardlogs
    - $HOME/src/
  - Name: user
    User: docker
  - Name: workdir
    Path: $HOME/src
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
