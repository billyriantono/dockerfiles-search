{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "America/Sao_Paulo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "128M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add --update tzdata \u0026\u0026     cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \u0026\u0026     echo \"${TIMEZONE}\" \u003e /etc/timezone \u0026\u0026     apk upgrade \u0026\u0026     apk add --update tzdata \u0026\u0026     apk add --update     make     gcc     re2c     g++     autoconf     bash     git     curl     wget     php7-mcrypt@testing     php7-mbstring@testing     php7-soap@testing     php7-openssl@testing     php7-gmp@testing     php7-pdo_odbc@testing     php7-json@testing     php7-dom@testing     php7-pdo@testing     php7-zip@testing     php7-pdo_mysql@testing     php7-sqlite3@testing     php7-pdo_pgsql@testing     php7-bcmath@testing     php7-odbc@testing     php7-pdo_mysql@testing     php7-pdo_sqlite@testing     php7-gettext@testing     php7-xmlreader@testing     php7-xmlrpc@testing     php7-bz2@testing     php7-iconv@testing     php7-pdo_dblib@testing     php7-curl@testing     php7-ctype@testing     php7-phar@testing     php7-zlib@testing     php7-dev@testing     php7-common@testing     php7-tokenizer@testing     php7-simplexml@testing     php7-intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz     \u0026\u0026 tar -zxvf xdebug-$XDEBUG_VERSION.tgz     \u0026\u0026 cd xdebug-$XDEBUG_VERSION \u0026\u0026 phpize     \u0026\u0026 ./configure --enable-xdebug \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 rm -rf /xdebug-$XDEBUG_VERSION*     \u0026\u0026 echo \"zend_extension=$(find /usr/lib/php7/modules/ -name xdebug.so)\" \u003e /etc/php7/php.ini     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /etc/php7/php.ini     \u0026\u0026 echo \"xdebug.remote_handler=dbgp\" \u003e\u003e /etc/php7/php.ini     \u0026\u0026 echo \"xdebug.remote_connect_back=1\" \u003e\u003e /etc/php7/php.ini     \u0026\u0026 echo \"xdebug.remote_autostart=on\" \u003e\u003e /etc/php7/php.ini     \u0026\u0026 echo \"xdebug.remote_port=9004\" \u003e\u003e /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026     apk del tzdata \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s|;date.timezone =.*|date.timezone = ${TIMEZONE}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer     \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig     \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "CmdLine": [
            "sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "sh",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}