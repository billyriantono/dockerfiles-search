MetaArgs: null
Stages:
- BaseName: debian:8
  Commands:
  - Env:
    - Key: SYMFONY_ENV
      Value: prod
    Name: env
  - Env:
    - Key: PROJECT_ENV
      Value: prod
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy     sudo     curl     apt-utils     acl     openssl     nginx     ca-certificates     gettext-base     &&
      echo "Europe/Paris" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata     &&
      echo 'alias ll="ls -lah --color=auto"' >> /etc/bash.bashrc     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: 0.6.1
    Name: env
  - CmdLine:
    - curl --location https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz
      |         tar xvz -C /usr/bin && chown root:root /usr/bin/dockerize
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - /root/scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf
    - /root/conf
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /root/scripts/start.sh
    Name: entrypoint
    PrependShell: false
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: debian:8
  Name: ""
  Platform: ""
  SourceCode: FROM debian:8
