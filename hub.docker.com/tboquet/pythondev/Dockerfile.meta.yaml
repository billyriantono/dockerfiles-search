MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Thomas Boquet <thomas.boquet@hec.ca>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8 && /usr/sbin/update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/v0.8.4/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apt-get update &&     apt-get -y install         wget         libssl-dev         gfortran         build-essential         make         gcc         build-essential         git-core         vim-tiny         nano         libffi-dev         python-pip         python-software-properties         software-properties-common
      &&     add-apt-repository -y ppa:fkrull/deadsnakes &&     apt-get update &&     apt-get
      -y install         python2.6         python2.7         python3.3         python3.4         python3.5         pypy         python2.6-dev         python2.7-dev         python3.3-dev         python3.4-dev         python3.5-dev         pypy-dev
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /install &&     wget -O /install/pypy3-2.4-linux_x86_64-portable.tar.bz2             "https://bitbucket.org/squeaky/portable-pypy/downloads/pypy3-2.4-linux_x86_64-portable.tar.bz2"
      &&     tar jxf /install/pypy3-*.tar.bz2 -C /install &&     rm /install/pypy3-*.tar.bz2
      &&     ln -s /install/pypy3-*/bin/pypy3 /usr/local/bin/pypy3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip && pip install tox
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update --fix-missing && apt-get install -y libopenblas-dev &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: volume
    Volumes:
    - /src
  - Expression: COPY install-prereqs*.sh requirements*.txt tox.ini /app/
    Name: onbuild
  - Expression: ARG SKIP_TOX=false
    Name: onbuild
  - Expression: RUN bash -c "     if [ -f '/app/install-prereqs.sh' ]; then         bash
      /app/install-prereqs.sh;     fi &&     if [ $SKIP_TOX == false ]; then         TOXBUILD=true
      tox;     fi"
    Name: onbuild
  - CmdLine:
    - cp -rT /src/ /app/ && tox
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
