MetaArgs: null
Stages:
- BaseName: golang:1.6.0
  Commands:
  - Env:
    - Key: GO_VER
      Value: go1.4.2.linux-amd64
    Name: env
  - Env:
    - Key: HAUS_VER
      Value: 0.1.7
    Name: env
  - Env:
    - Key: GOPATH
      Value: /app/go
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin:$GOPATH/bin
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get -y install \t\tmake \t\tcmake \t\tpkg-config \t\tlibssh2-1-dev
      \t\tlibssh2-1 \t\tlibssl-dev \t\topenssh-client \t\topenssh-server \t\tzlibc
      \t\tgit"
    Name: run
    PrependShell: true
  - CmdLine:
    - "go get -d gopkg.in/libgit2/git2go.v22 && \tcd $GOPATH/src/gopkg.in/libgit2/git2go.v22
      && \tgit checkout next && \tgit submodule update --init && \t./script/build-libgit2-static.sh
      && \tcd vendor/libgit2/build/ && \tmake && \tmake install && \tcd ../../../
      && \tmake test && \tmake install"
    Name: run
    PrependShell: true
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: $GOPATH/src/gopkg.in/libgit2/git2go/vendor/libgit2/build/
    Name: env
  - CmdLine:
    - "go get gopkg.in/yaml.v2 && \tgo get github.com/SearchSpring/RepoTsar && \tmkdir
      ${GOPATH}/src/github.com/SearchSpring/haus"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${GOPATH}/src/github.com/SearchSpring/haus/
  - CmdLine:
    - "cd ${GOPATH}/src/github.com/SearchSpring/haus/ && \tgo test ./... && \tgo install"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /mnt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start
    - /bin/start
  - Env:
    - Key: HAUSPATH
      Value: /var/tmp
    Name: env
  - CmdLine:
    - /bin/start
    Name: entrypoint
    PrependShell: false
  From:
    Image: golang:1.6.0
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.6.0
