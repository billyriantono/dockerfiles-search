MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Guiomar Tu√±on <gtunon@naevatec.com>
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y  software-properties-common &&     add-apt-repository
      ppa:webupd8team/java
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install -y curl wget
      apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | debconf-set-selections &&     apt-get install -y oracle-java8-installer &&     rm
      -rf /var/lib/apt/lists/* &&     rm -rf /var/cache/oracle-jdk8-installer
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - wget http://mirrors.viethosting.vn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
      &&     tar -xf apache-maven-3.3.9-bin.tar.gz  -C /usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/apache-maven-3.3.9 /usr/local/maven
    Name: run
    PrependShell: true
  - Env:
    - Key: M2_HOME
      Value: /usr/local/maven
    Name: env
  - Env:
    - Key: PATH
      Value: ${M2_HOME}/bin:${PATH}
    Name: env
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository     "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export DOCKER_HOST='unix:///var/run/docker.sock'" >> /root/.bashrc  &&
      echo "export DEBIAN_FRONTEND=noninteractive" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - apt-get install -y     less     man     python     python-pip     python-virtualenv     vim
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install git
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash jenkins &&    echo "jenkins:jenkins" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG docker jenkins
    Name: run
    PrependShell: true
  - Env:
    - Key: WORKSPACE
      Value: /home/jenkins
    Name: env
  - Name: user
    User: jenkins
  - Name: workdir
    Path: ${WORKSPACE}
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
