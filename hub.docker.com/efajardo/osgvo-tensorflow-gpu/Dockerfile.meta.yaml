MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Maintainer: Mats Rynge <rynge@isi.edu>
    Name: maintainer
  - Chown: ""
    Name: add
    SourcesAndDest:
    - environment
    - /environment
  - Chown: ""
    Name: add
    SourcesAndDest:
    - exec
    - /.exec
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run
    - /.run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - shell
    - /.shell
  - CmdLine:
    - chmod 755 .exec .run .shell
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive &&     apt-get update && apt-get upgrade
      -y --allow-unauthenticated &&     apt-get install -y --allow-unauthenticated         build-essential         cmake         cuda-drivers         curl         git         libfreetype6-dev         libpng12-dev         libssl-dev         libxpm-dev         libzmq3-dev         module-init-tools         openssh-client         openssh-server         pkg-config         python         python-dev         python-tk         python3         python3-dev         python3-tk         rsync         software-properties-common         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         vim         wget         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8"
      >/etc/apt/sources.list.d/bazel.list &&     curl https://bazel.build/bazel-release.pub.gpg
      | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install
      -y --allow-unauthenticated         bazel
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install         h5py         ipykernel         jupyter         matplotlib         numpy         pandas         Pillow         scipy         sklearn         &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/cuda/lib64/" >/etc/ld.so.conf.d/cuda.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/cuda/extras/CUPTI/lib64/" >>/etc/ld.so.conf.d/cuda.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - pip uninstall tensorflow-gpu || true
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade tensorflow-gpu==1.12
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade keras
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install         h5py         ipykernel         jupyter         matplotlib         numpy         pandas         Pillow         scipy         sklearn         &&     python3
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 uninstall tensorflow-gpu || true
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade tensorflow-gpu==1.12
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade keras
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /host-libs /etc/OpenCL/vendors &&     echo "/host-libs/" >/etc/ld.so.conf.d/000-host-libs.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /cvmfs
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /bin/nvidia-smi
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /bin/nvidia-smi
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /.singularity.d/libs
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget -nv https://root.cern.ch/download/root_v6.10.02.Linux-ubuntu16-x86_64-gcc5.4.tar.gz
      &&     tar xzf root_v6.10.02.Linux-ubuntu16-x86_64-gcc5.4.tar.gz &&     rm -f
      root_v6.10.02.Linux-ubuntu16-x86_64-gcc5.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget http://xrootd.org/download/v4.7.1/xrootd-4.7.1.tar.gz &&     tar
      xzf xrootd-4.7.1.tar.gz &&     cd xrootd-4.7.1 &&     mkdir build &&     cd  build
      &&     cmake /opt/xrootd-4.7.1 -DCMAKE_INSTALL_PREFIX=/opt/xrootd -DENABLE_PERL=FALSE
      &&     make &&     make install &&     cd /opt &&     rm -rf xrootd-4.7.1.tar.gz
      xrootd-4.7.1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     git clone https://github.com/opensciencegrid/StashCache.git
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Timestamp:" `date --utc` | tee /image-build-info.txt
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
