{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nothingdocker/centos-systemd",
      "SourceCode": "FROM nothingdocker/centos-systemd",
      "Platform": "",
      "From": {
        "Image": "nothingdocker/centos-systemd"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum install -y gcc gcc-c++ bzip2 bzip2-devel bzip2-libs python-devel.x86_64 make cmake clang;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MONGODB_VER",
              "Value": "3.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -e \"\\n[mongodb-org-3.4]\\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/redhat/\\$releasever/mongodb-org/3.4/x86_64/\\ngpgcheck=1\\nenabled=1\\ngpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc\\n\" \u003e\u003e /etc/yum.repos.d/mongodb-org-3.4.repo \t\u0026\u0026 yum install -y mongodb-org \t\u0026\u0026 yum clean all \t\u0026\u0026 systemctl enable mongod.service"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/mongo \t\u0026\u0026 mkdir -p /var/log/mongod \t\u0026\u0026 chown -R mongod:mongod /var/lib/mongo \t\u0026\u0026 chown -R mongod:mongod /var/log/mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mongo",
            "/var/log/mongodb"
          ]
        },
        {
          "CmdLine": [
            "yum install -y redis \t\u0026\u0026 yum clean all \t\u0026\u0026 systemctl enable redis.service"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mongod.conf",
            "/etc/mongod.conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "RMQ_VER",
              "Value": "3.6.9"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./rabbitmq.config",
            "/etc/rabbitmq/rabbitmq.config"
          ]
        },
        {
          "CmdLine": [
            "wget https://github.com/rabbitmq/rabbitmq-server/releases/download/rabbitmq_v3_6_9/rabbitmq-server-3.6.9-1.el7.noarch.rpm;\trpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc;\tyum -y install rabbitmq-server-3.6.9-1.el7.noarch.rpm;\tyum clean all;\trm -f rabbitmq-server-3.6.9-1.el7.noarch.rpm;\tsystemctl enable rabbitmq-server;\trabbitmq-plugins enable rabbitmq_management;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y nginx;systemctl enable nginx;yum clean all;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VER",
              "Value": "v8.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local;\twget https://nodejs.org/dist/$NODE_VER/node-$NODE_VER-linux-x64.tar.xz;\ttar xJf node-$NODE_VER-linux-x64.tar.xz;\trm -f node.tar.xz;\tmv node-$NODE_VER-linux-x64 node;\tln -s /usr/local/node/bin/node /usr/local/bin/node;\tln -s /usr/local/node/bin/npm /usr/local/bin/npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"PATH=/usr/local/node/bin:$PATH\" \u003e\u003e /etc/bashrc; \techo \"export PATH\" \u003e\u003e /etc/bashrc;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias cnpm=\\\"npm --registry=https://registry.npm.taobao.org \t--cache=$HOME/.npm/.cache/cnpm \t--disturl=https://npm.taobao.org/dist \t--userconfig=$HOME/.cnpmrc\\\"\" \u003e\u003e /etc/bashrc;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/.npm-global;\techo \"prefix=~/.npm-global\" \u003e\u003e ~/.npmrc;\techo \"export LANG=en_GB.utf8\" \u003e\u003e /etc/bashrc;\techo \"export TERM=linux\" \u003e\u003e /etc/bashrc;\techo \"export PATH=~/.npm-global/bin:$PATH\" \u003e\u003e /etc/bashrc;\techo \"export NODE_PATH=~/.npm-global/lib/node_modules\" \u003e\u003e /etc/bashrc;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -g config set user root;npm config set cache=~/.npm-global; npm install -g node-gyp;npm install -g v8-profiler;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y etcd;yum clean all;systemctl enable etcd;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y golang;yum install -y git;yum clean all;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/src"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data/src"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}