MetaArgs: null
Stages:
- BaseName: php:7.3-fpm-alpine
  Commands:
  - Maintainer: Guillaume Kulakowski <guillaume@kulakowski.fr>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"Fork of php-fpm:7.3"'
    Name: label
  - Labels:
    - Key: Vendor
      Value: '"Guillaume Kulakowski"'
    Name: label
  - Labels:
    - Key: License
      Value: '"MIT"'
    Name: label
  - Labels:
    - Key: Version
      Value: 7.3-fpm
    Name: label
  - Key: DOCKER_PHP_ENABLE_APCU
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_COMPOSER
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_EXIF
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_IMAGICK
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_LDAP
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_MEMCACHED
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_MONGODB
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_MYSQL
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_POSTGRESQL
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_REDIS
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_SYMFONY
    Name: arg
    Value: null
  - Key: DOCKER_PHP_ENABLE_XDEBUG
    Name: arg
    Value: null
  - Key: DOCKER_USER_UID
    Name: arg
    Value: "false"
  - Key: DOCKER_USER_GID
    Name: arg
    Value: "false"
  - CmdLine:
    - 'echo -n "With apcu support:          " ; if [[ "${DOCKER_PHP_ENABLE_APCU}"
      = "on" ]] ;        then echo "Yes"; else echo "No" ; fi &&     echo -n "With
      composer support:      " ; if [[ "${DOCKER_PHP_ENABLE_COMPOSER}" = "on" ]] ;    then
      echo "Yes"; else echo "No" ; fi &&     echo -n "With exif support:          "
      ; if [[ "${DOCKER_PHP_ENABLE_EXIF}" = "on" ]] ;      then echo "Yes"; else echo
      "No" ; fi &&     echo -n "With imagick support:       " ; if [[ "${DOCKER_PHP_ENABLE_IMAGICK}"
      = "on" ]] ;      then echo "Yes"; else echo "No" ; fi &&     echo -n "With ldap
      support:          " ; if [[ "${DOCKER_PHP_ENABLE_LDAP}" = "on" ]] ;      then
      echo "Yes"; else echo "No" ; fi &&     echo -n "With memcached support:     "
      ; if [[ "${DOCKER_PHP_ENABLE_MEMCACHED}" = "on" ]] ;  then echo "Yes"; else
      echo "No" ; fi &&     echo -n "With mongodb support:       " ; if [[ "${DOCKER_PHP_ENABLE_MONGODB}"
      = "on" ]] ;    then echo "Yes"; else echo "No" ; fi &&     echo -n "With mysql
      support:         " ; if [[ "${DOCKER_PHP_ENABLE_MYSQL}" = "on" ]] ;    then
      echo "Yes"; else echo "No" ; fi &&     echo -n "With postgresql support:    "
      ; if [[ "${DOCKER_PHP_ENABLE_POSTGRESQL}" = "on" ]] ; then echo "Yes"; else
      echo "No" ; fi &&     echo -n "With redis support:         " ; if [[ "${DOCKER_PHP_ENABLE_REDIS}"
      = "on" ]] ;    then echo "Yes"; else echo "No" ; fi &&     echo -n "With symfony
      support:       " ; if [[ "${DOCKER_PHP_ENABLE_SYMFONY}" = "on" ]] ;    then
      echo "Yes"; else echo "No" ; fi &&     echo -n "With xdebug support:        "
      ; if [[ "${DOCKER_PHP_ENABLE_XDEBUG}" = "on" ]] ;      then echo "Yes"; else
      echo "No" ; fi &&     if [ -z ${DOCKER_USER_UID+x} ]; then echo "DOCKER_USER_UID
      is unset"; DOCKER_USER_UID=1000; else echo "DOCKER_USER_UID is set to ''$DOCKER_USER_UID''";
      fi &&     if [ -z ${DOCKER_USER_GID+x} ]; then echo "DOCKER_USER_GID is unset";
      DOCKER_USER_GID=1000; else echo "DOCKER_USER_GID is set to ''$DOCKER_USER_GID''";
      fi'
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache         icu-libs         libintl         libzip         git         patch
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache --virtual .docker-php-global-dependancies         freetype-dev         libjpeg-turbo-dev         libpng-dev         gettext-dev         icu-dev         libxml2-dev         ldb-dev         libzip-dev         autoconf         g++         make         pcre-dev         wget
    Name: run
    PrependShell: true
  - CmdLine:
    - php -m &&     docker-php-ext-configure bcmath --enable-bcmath &&     docker-php-ext-configure
      gd       --with-freetype-dir=/usr/include/       --with-jpeg-dir=/usr/include/       --with-png-dir=/usr/include/
      &&     docker-php-ext-configure gettext &&     docker-php-ext-configure intl
      --enable-intl &&     docker-php-ext-configure mbstring --enable-mbstring &&     docker-php-ext-configure
      opcache --enable-opcache &&     docker-php-ext-configure pcntl --enable-pcntl
      &&     docker-php-ext-configure soap &&     docker-php-ext-configure zip --enable-zip
      --with-libzip &&     docker-php-ext-install bcmath         gd         gettext         intl         mbstring         opcache         pcntl         soap         zip
      &&     php -m
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_APCU}" != "off" ]; then       pecl install apcu &&       docker-php-ext-enable
      apcu &&       php -m;     else       echo "Skip apcu support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_EXIF}" != "off" ]; then       docker-php-ext-install
      exif &&       docker-php-ext-enable exif &&       php -m;     else       echo
      "Skip apcu support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_IMAGICK}" != "off" ]; then       apk add --update
      --no-cache           imagemagick           imagemagick-libs &&       apk add
      --update --no-cache --virtual .docker-php-imagick-dependancies           imagemagick-dev
      &&       pecl install imagick &&       docker-php-ext-enable imagick &&       apk
      del .docker-php-imagick-dependancies &&       php -m;     else       echo "Skip
      apcu support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_LDAP}" != "off" ]; then       apk add --update --no-cache           libldap
      &&       apk add --update --no-cache --virtual .docker-php-ldap-dependancies           openldap-dev
      &&       docker-php-ext-configure ldap &&       docker-php-ext-install ldap
      &&       apk del .docker-php-ldap-dependancies &&       php -m;     else       echo
      "Skip ldap support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_MEMCACHED}" != "off" ]; then       apk add --update
      --no-cache           libevent           libmemcached-libs &&       apk add --update
      --no-cache --virtual .docker-php-memcached-dependancies           cyrus-sasl-dev           libevent-dev           libmemcached-dev
      &&       pecl install memcached &&       docker-php-ext-enable memcached &&       apk
      del .docker-php-memcached-dependancies &&       php -m;     else       echo
      "Skip memcached support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_MONGODB}" != "off" ]; then       apk add --update
      --no-cache --virtual .docker-php-mongodb-dependancies           heimdal-dev
      &&       pecl install mongodb &&       docker-php-ext-enable mongodb &&       apk
      del .docker-php-mongodb-dependancies &&       php -m;     else       echo "Skip
      mongodb support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_MYSQL}" != "off" ]; then       apk add --update --no-cache
      --virtual .docker-php-mysql-dependancies           mysql-client &&       docker-php-ext-configure
      mysqli &&       docker-php-ext-configure pdo_mysql &&       docker-php-ext-install
      mysqli           pdo_mysql &&       apk del .docker-php-mysql-dependancies &&       php
      -m;     else       echo "Skip mysql support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_POSTGRESQL}" != "off" ]; then       apk add --update
      --no-cache           libpq &&       apk add --update --no-cache --virtual .docker-php-postgresql-dependancies           postgresql-client           postgresql-dev
      &&       docker-php-ext-configure pdo_pgsql &&       docker-php-ext-configure
      pgsql &&       docker-php-ext-install pdo_pgsql           pgsql &&       apk
      del .docker-php-postgresql-dependancies &&       php -m;     else       echo
      "Skip postgresql support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_REDIS}" != "off" ]; then       pecl install redis
      &&       docker-php-ext-enable redis &&       php -m;     else       echo "Skip
      redis support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_SYMFONY}" != "off" ]; then       apk add --update
      --no-cache           yaml &&       apk add --update --no-cache --virtual .docker-php-symfony-dependancies           yaml-dev
      &&       pecl install yaml &&       docker-php-ext-enable yaml;       apk del
      .docker-php-symfony-dependancies &&       php -m;     else       echo "Skip
      symfony support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_PHP_ENABLE_XDEBUG}" != "off" ]; then       apk add --update --no-cache
      --virtual .docker-php-xdebug-dependancies           bash           git &&       git
      clone https://github.com/xdebug/xdebug.git &&       cd xdebug &&       ./rebuild.sh
      &&       docker-php-ext-enable xdebug &&       echo "xdebug.remote_enable=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini &&       echo "xdebug.remote_autostart=off"
      >> /usr/local/etc/php/conf.d/xdebug.ini &&       rm -rf xdebug &&       apk
      del .docker-php-xdebug-dependancies &&       php -m;     else       echo "Skip
      xdebug support";     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - 'if [ "${DOCKER_PHP_ENABLE_COMPOSER}" != "off" ]; then       EXPECTED_SIGNATURE=$(wget
      -q -O - https://composer.github.io/installer.sig) &&       php -r "copy(''https://getcomposer.org/installer'',
      ''composer-setup.php'');" &&       ACTUAL_SIGNATURE=$(php -r "echo hash_file(''SHA384'',
      ''composer-setup.php'');") &&       if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE"
      ]; then         >&2 echo ''ERROR: Invalid installer signature'' &&         rm
      composer-setup.php &&         exit 1;       else         php composer-setup.php
      --install-dir=/usr/bin --filename=composer &&         RESULT=$? &&         rm
      composer-setup.php &&         exit $RESULT &&         composer -V;       fi;     else       echo
      "Skip composer support";     fi'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "/^;security.limit_extensions =.*/asecurity.limit_extensions = .php .php7
      .php73" /usr/local/etc/php-fpm.d/www.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.d
    - /usr/local/etc/php/conf.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc
    - /usr/local/etc/php
  - CmdLine:
    - apk del .docker-php-global-dependancies &&     rm -rf /var/cache/apk/* &&     docker-php-source
      delete
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_USER_GID}" != "false" ] && [ "${DOCKER_USER_UID}" != "false"
      ]; then       addgroup -g ${DOCKER_USER_GID} php-cli &&       adduser -D -u
      ${DOCKER_USER_UID} -G php-cli php-cli;     else       echo "No user for php-cli";     fi
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - Name: workdir
    Path: /var/www
  From:
    Image: php:7.3-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-fpm-alpine
