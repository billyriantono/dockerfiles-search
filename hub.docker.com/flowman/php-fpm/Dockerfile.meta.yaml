MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Maintainer: Peter Szalatnay <theotherland@gmail.com>
    Name: maintainer
  - Env:
    - Key: PHP_VERSION
      Value: 7.3.2
    - Key: PHPREDIS_FILENAME
      Value: 4.2.0.tar.gz
    - Key: PHP_FILENAME
      Value: php-7.3.2.tar.xz
    - Key: NEWRELIC_FILENAME
      Value: newrelic-php5-8.5.0.235-linux-musl.tar.gz
    Name: env
  - CmdLine:
    - addgroup -S nginx     && adduser -D -S -h /var/cache/nginx -s /sbin/nologin
      -G nginx nginx     && apk add --update         curl         tar         xz         libxml2         readline         freetype         libjpeg-turbo         libpng         libwebp         libedit         libmcrypt         libbz2         libzip     &&
      apk add --no-cache --virtual .build-deps         git         autoconf         file         g++         gcc         libc-dev         make         pkgconf         re2c         curl-dev         libedit-dev         libxml2-dev         readline-dev         freetype-dev         libjpeg-turbo-dev         libpng-dev         libwebp-dev         libmcrypt-dev         libedit-dev         libssh2-dev         libzip-dev     &&
      cd /tmp     && curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror"
      -o "$PHP_FILENAME"     && mkdir -p /tmp/php     && tar -Jxf "$PHP_FILENAME"
      -C /tmp/php --strip-components=1     && rm "$PHP_FILENAME"     && cd /tmp/php     &&
      ./configure         --prefix=/usr         --libdir=/usr/lib/php         --datadir=/usr/share/php         --sysconfdir=/etc/php         --localstatedir=/etc/php/var         --with-pear=/usr/share/php         --with-config-file-scan-dir=/etc/php/conf.d         --with-config-file-path=/etc/php         --disable-debug         --disable-cgi         --disable-gd-jis-conv         --disable-short-tags         --enable-fpm
      --with-fpm-user=nginx --with-fpm-group=nginx         --enable-mysqlnd         --enable-mbstring         --enable-opcache         --enable-zip         --enable-libxml
      --with-libxml-dir         --with-mysqli         --with-curl         --with-libedit         --with-openssl         --with-gd         --with-jpeg-dir         --with-png-dir         --with-webp-dir         --with-xpm-dir=no         --with-freetype-dir         --with-zlib         --without-readline         --without-sqlite3         --without-pdo-sqlite     &&
      make     && make install     && { find /usr/local/bin /usr/local/sbin -type
      f -perm +0111 -exec strip --strip-all '{}' + || true; }     && make clean     &&
      runDeps="$(         scanelf --needed --nobanner --recursive /usr/local             |
      awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'             | sort -u             |
      xargs -r apk info --installed             | sort -u     )"     && apk add --virtual
      .php-rundeps $runDeps     && mkdir /etc/php/conf.d/     && echo "zend_extension=opcache.so"
      >> "/etc/php/conf.d/docker-php-ext-opcache.ini"     && cd /tmp     && curl -fSL
      "https://github.com/phpredis/phpredis/archive/$PHPREDIS_FILENAME" -o "$PHPREDIS_FILENAME"     &&
      mkdir -p /tmp/phpredis     && tar -xzf "$PHPREDIS_FILENAME" -C /tmp/phpredis
      --strip-components=1     && cd /tmp/phpredis     && phpize && ./configure &&
      make install     && echo "extension=redis.so" >> "/etc/php/conf.d/docker-php-ext-redis.ini"     &&
      cd /tmp     && git clone https://github.com/xdebug/xdebug.git     && cd /tmp/xdebug     &&
      git checkout master     && phpize && ./configure --enable-xdebug && make install     &&
      echo ";zend_extension=xdebug.so" >> "/etc/php/conf.d/docker-php-ext-xdebug.ini"     &&
      cd /tmp     && curl -fSL "https://download.newrelic.com/php_agent/release/$NEWRELIC_FILENAME"
      -o "$NEWRELIC_FILENAME"     && mkdir -p /tmp/newrelic /var/log/newrelic     &&
      tar -xzf "$NEWRELIC_FILENAME" -C /tmp/newrelic --strip-components=1     && rm
      "$NEWRELIC_FILENAME"     && cd /tmp/newrelic     && cp agent/x64/newrelic-20180731.so
      /usr/lib/php/extensions/no-debug-non-zts-20180731/newrelic.so     && cp daemon/newrelic-daemon.x64
      /usr/bin/newrelic-daemon     && cp scripts/newrelic.ini.template /etc/php/conf.d/newrelic.ini     &&
      apk del .build-deps     && rm -rf /tmp/*     && cd /etc/php     && if [ -d php-fpm.d
      ]; then         sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf >
      /dev/null;     fi     && {         echo '[global]';         echo 'error_log
      = /proc/self/fd/2';         echo 'daemonize = no';         echo;         echo
      '[www]';         echo '; if we send this to /proc/self/fd/1, it never appears';         echo
      ';access.log = /proc/self/fd/2';         echo;         echo 'clear_env = no';         echo;         echo
      '; Ensure worker stdout and stderr are sent to the main error log.';         echo
      'catch_workers_output = yes';     } | tee php-fpm.d/docker.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./www.conf
    - /etc/php/php-fpm.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./opcache.ini
    - ./xdebug.ini
    - /etc/php/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
