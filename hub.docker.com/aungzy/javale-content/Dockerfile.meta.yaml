MetaArgs: null
Stages:
- BaseName: php:7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Shahriyar Imanov <shehi@imanov.me>"'
    Name: label
  - Name: workdir
    Path: /var/www
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -y     && apt-get install -y apt-utils     && apt-get upgrade
      -y     && mkdir -p /usr/share/man/man1     && apt-get install -y         bzip2         cron         daemon         fontforge         git         gnupg         libfreetype6-dev         libicu-dev         libjpeg-dev         libjpeg62-turbo-dev         libmcrypt-dev         libmemcached-dev         libpng-dev         libpq-dev         libsqlite3-dev         libssl-dev         libxml2-dev         libxslt1-dev         locales         locales-all         mysql-client         nano         openjdk-8-jre         sudo         telnet         unzip         wget
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install         bcmath         calendar         exif         gettext         intl         pdo_mysql         pdo_pgsql         soap         sockets         xsl         zip
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     &&
      docker-php-ext-install gd
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install -of mcrypt memcached     && docker-php-ext-enable mcrypt memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8 && locale-gen az_AZ.UTF-8 && locale-gen tr_TR.UTF-8 &&
      dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install -of mongodb     && rm -rf /tmp/pear     && echo "extension=mongodb.so"
      > /usr/local/etc/php/conf.d/mongo.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install -of xdebug-2.6.0beta1     && rm -rf /tmp/pear     && echo "zend_extension=xdebug.so"
      | tee /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.max_nesting_level
      = 1000" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.idekey
      = basisPhp" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_enable
      = 1" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_port
      = 54321" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_connect_back
      = 1" | tee -a /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "54321"
  - CmdLine:
    - echo "date.timezone = UTC" | tee /usr/local/etc/php/conf.d/date.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/phpredis/phpredis.git /tmp/phpredis     && cd /tmp/phpredis     &&
      git checkout 3.1.4     && phpize     && ./configure     && make     && make
      install     && echo "extension=redis.so" | tee /usr/local/etc/php/conf.d/redis.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - php -m
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && for key in         94AE36675C464D64BAFA68DD7434390BDBE9B9C5         FD3A5288F042B6850C66B31F09FE44734EB7990E         71DCFD284A79C3B38668286BC97EC7A07EDE3FC1         DD8F2338BAE7501E3DD5AC78C273792F7D83545D         C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8         B9AE9905FFD7803F25714661B63B535A4C206CA9         56730D5401028683275BD23C23EFEFE93C4CFFFE         77984A986EBC2AA786BC0F66B01FBB92821C587A     ;
      do         gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ;     done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.9.4
    Name: env
  - Env:
    - Key: NPM_VERSION
      Value: "5"
    Name: env
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"     &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c -     &&
      tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1     &&
      rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt     &&
      ln -s /usr/local/bin/node /usr/local/bin/nodejs     && npm install -g npm@$NPM_VERSION     &&
      rm -rf /tmp/npm-*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g ttf2eot jshint
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9229"
  - CmdLine:
    - apt-get clean     && apt-get remove -y gnupg     && apt-get autoremove -y     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Key: PUID
    Name: arg
    Value: "1000"
  - Key: PGID
    Name: arg
    Value: "1000"
  - CmdLine:
    - groupadd -g $PGID basis && useradd -u $PUID -g basis -M basis
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG sudo basis
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i -e "s/%sudo.*/%sudo ALL=(ALL:ALL) NOPASSWD: ALL/g" /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: basis
  - Env:
    - Key: PATH
      Value: $PATH:/var/www/storage/build/tools/sfnt2woff:/var/www/storage/build/tools/woff2
    Name: env
  From:
    Image: php:7
  Name: ""
  Platform: ""
  SourceCode: FROM php:7
