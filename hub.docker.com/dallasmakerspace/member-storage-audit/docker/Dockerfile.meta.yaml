MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Key: TOOLCHAIN
    Name: arg
    Value: stable
  - CmdLine:
    - apt-get update &&     apt-get install -y         build-essential         cmake         curl         file         git         musl-dev         musl-tools         libpq-dev         libsqlite-dev         libssl-dev         pkgconf         sudo         xutils-dev         gcc-4.7-multilib-arm-linux-gnueabihf         &&     apt-get
      clean && rm -rf /var/lib/apt/lists/* &&     useradd rust --user-group --create-home
      --shell /bin/bash --groups sudo &&     MDBOOK_VERSION=0.1.5 &&     curl -LO
      https://github.com/rust-lang-nursery/mdBook/releases/download/v$MDBOOK_VERSION/mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-musl.tar.gz
      &&     tar xf mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-musl.tar.gz &&     mv
      mdbook /usr/local/bin/ &&     rm -f mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-musl.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo ln -s "/usr/bin/g++" "/usr/bin/musl-g++"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sudoers
    - /etc/sudoers.d/nopasswd
  - Name: user
    User: rust
  - CmdLine:
    - mkdir -p /home/rust/libs /home/rust/src
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/rust/.cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - curl https://sh.rustup.rs -sSf |     sh -s -- -y --default-toolchain $TOOLCHAIN
      &&     rustup target add x86_64-unknown-linux-musl &&     rustup target add
      armv7-unknown-linux-musleabihf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cargo-config.toml
    - /home/rust/.cargo/config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - git-credential-ghtoken
    - /usr/local/bin
  - CmdLine:
    - git config --global credential.https://github.com.helper ghtoken
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Building OpenSSL" &&     cd /tmp &&     OPENSSL_VERSION=1.0.2o &&     curl
      -LO "https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz" &&     tar
      xvzf "openssl-$OPENSSL_VERSION.tar.gz" && cd "openssl-$OPENSSL_VERSION" &&     env
      CC=musl-gcc ./Configure no-shared no-zlib -fPIC --prefix=/usr/local/musl linux-x86_64
      &&     env C_INCLUDE_PATH=/usr/local/musl/include/ make depend &&     make &&
      sudo make install &&         echo "Building zlib" &&     cd /tmp &&     ZLIB_VERSION=1.2.11
      &&     curl -LO "http://zlib.net/zlib-$ZLIB_VERSION.tar.gz" &&     tar xzf "zlib-$ZLIB_VERSION.tar.gz"
      && cd "zlib-$ZLIB_VERSION" &&     CC=musl-gcc ./configure --static --prefix=/usr/local/musl
      &&     make && sudo make install &&         echo "Building libpq" &&     cd
      /tmp &&     POSTGRESQL_VERSION=9.6.8 &&     curl -LO "https://ftp.postgresql.org/pub/source/v$POSTGRESQL_VERSION/postgresql-$POSTGRESQL_VERSION.tar.gz"
      &&     tar xzf "postgresql-$POSTGRESQL_VERSION.tar.gz" && cd "postgresql-$POSTGRESQL_VERSION"
      &&     CC=musl-gcc CPPFLAGS=-I/usr/local/musl/include LDFLAGS=-L/usr/local/musl/lib
      ./configure --with-openssl --without-readline --prefix=/usr/local/musl &&     cd
      src/interfaces/libpq && make all-static-lib && sudo make install-lib-static
      &&     cd ../../bin/pg_config && make && sudo make install &&         rm -r
      /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENSSL_DIR
      Value: /usr/local/musl/
    - Key: OPENSSL_INCLUDE_DIR
      Value: /usr/local/musl/include/
    - Key: DEP_OPENSSL_INCLUDE
      Value: /usr/local/musl/include/
    - Key: OPENSSL_LIB_DIR
      Value: /usr/local/musl/lib/
    - Key: OPENSSL_STATIC
      Value: "1"
    - Key: PQ_LIB_STATIC_X86_64_UNKNOWN_LINUX_MUSL
      Value: "1"
    - Key: PG_CONFIG_X86_64_UNKNOWN_LINUX_GNU
      Value: /usr/bin/pg_config
    - Key: PKG_CONFIG_ALLOW_CROSS
      Value: "true"
    - Key: PKG_CONFIG_ALL_STATIC
      Value: "true"
    - Key: LIBZ_SYS_STATIC
      Value: "1"
    - Key: TARGET
      Value: musl
    Name: env
  - CmdLine:
    - cargo install -f cargo-audit &&     rm -rf /home/rust/.cargo/registry/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/rust/src
  - Name: user
    User: root
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
