MetaArgs: null
Stages:
- As: alpine-glibc
  BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: '"Vlad Frolov"'
    Name: label
  - Labels:
    - Key: SRC
      Value: https://github.com/frol/docker-alpine-glibc
    Name: label
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.28-r0" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates
      &&     echo         "-----BEGIN PUBLIC KEY-----        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m        1QIDAQAB        -----END
      PUBLIC KEY-----" | sed 's/   */\n/g' > "/etc/apk/keys/sgerrand.rsa.pub" &&     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&         rm "/etc/apk/keys/sgerrand.rsa.pub" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 "$LANG" || true &&     echo "export
      LANG=$LANG" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm
      "/root/.wget-hsts" &&     apk del .build-dependencies &&     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.9
  Name: alpine-glibc
  Platform: ""
  SourceCode: FROM alpine:3.9 as alpine-glibc
- BaseName: alpine-glibc
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: '"Anaconda, Inc"'
    Name: label
  - Env:
    - Key: ANACONDA_VERSION
      Value: "2019.03"
    Name: env
  - Env:
    - Key: ANACONDA_MD5
      Value: 43caea3d726779843f130a7fb2d380a2
    Name: env
  - CmdLine:
    - apk add build-base &&     addgroup -S anaconda -g 1003 &&     adduser -D -u
      999 anaconda -G anaconda &&     wget --quiet https://repo.continuum.io/archive/Anaconda3-$ANACONDA_VERSION-Linux-x86_64.sh
      -O anaconda.sh &&     echo "${ANACONDA_MD5}  anaconda.sh" > anaconda.md5 &&     if
      [ $(md5sum -c anaconda.md5 | awk '{print $2}') != "OK" ] ; then exit 1; fi &&     mkdir
      -p /opt &&     sh ./anaconda.sh -b -p /opt/conda &&     rm anaconda.sh anaconda.md5
      &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     chown
      -R anaconda /opt &&     echo ". /opt/conda/etc/profile.d/conda.sh" >> /home/anaconda/.profile
      &&     echo "conda activate base" >> /home/anaconda/.profile
    Name: run
    PrependShell: true
  - Name: user
    User: "999"
  - Env:
    - Key: PATH
      Value: '"/bin:/sbin:/usr/bin"'
    Name: env
  - CmdLine:
    - sh
    - --login
    - -i
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: alpine-glibc
  Name: ""
  Platform: ""
  SourceCode: FROM alpine-glibc
