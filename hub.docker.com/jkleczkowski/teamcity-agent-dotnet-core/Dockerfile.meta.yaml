MetaArgs: null
Stages:
- BaseName: jetbrains/teamcity-agent
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jacek Kleczkowski <jacek@ksoft.biz>"'
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - libicu52_52.1-8_amd64.deb
    - /tmp/libicu52_52.1-8_amd64.deb
  - CmdLine:
    - dpkg -i /tmp/libicu52_52.1-8_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb [arch=amd64] http://apt-mo.trafficmanager.net/repos/dotnet-release/
      trusty main" > /etc/apt/sources.list.d/dotnetdev.list' &&     apt-key adv --keyserver
      hkp://keyserver.ubuntu.com:80 --recv-keys 417A0893 &&     apt-get update &&     apt-get
      install mc wget unzip -y &&     export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
      &&     wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
      && dpkg -i packages-microsoft-prod.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https apt-utils  &&
      apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_VER
      Value: '"dotnet-sdk-2.2"'
    Name: env
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive  apt-get install ${DOTNET_VER} -y
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive  apt-get install mono-devel mono-dbg mono-xbuild
      libmono-addins-* -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt remove nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nodejs -y &&     npm install npm -g &&     npm install bower
      gulp -g
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> /etc/apt/sources.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
      &&     apt-get update &&     apt-get install -y ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby p7zip-full
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/packer.zip  https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip
      &&     unzip /tmp/packer.zip -d /usr/bin &&     chmod 0755 /usr/bin/packer
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt/buildagent/work
  - Name: volume
    Volumes:
    - /opt/buildagent/logs
  - Name: volume
    Volumes:
    - /data/teamcity_agent/conf
  - Name: volume
    Volumes:
    - /opt/buildagent/plugins
  - Env:
    - Key: DOCKER_HOST
      Value: '""'
    Name: env
  - Env:
    - Key: DOCKER_BIN
      Value: '"/usr/bin/docker"'
    Name: env
  From:
    Image: jetbrains/teamcity-agent
  Name: ""
  Platform: ""
  SourceCode: FROM jetbrains/teamcity-agent
