MetaArgs: null
Stages:
- BaseName: python:3.5
  Commands:
  - Key: BUILD_USER
    Name: arg
    Value: django
  - Key: BUILD_USER_GROUP
    Name: arg
    Value: django
  - Key: BUILD_USER_PASSWORD
    Name: arg
    Value: django
  - Key: BUILD_USER_SHELL
    Name: arg
    Value: /bin/bash
  - Key: BUILD_USER_UID
    Name: arg
    Value: "1000"
  - Key: BUILD_USER_GID
    Name: arg
    Value: "1000"
  - Key: BUILD_USER_HOME
    Name: arg
    Value: /home/django
  - Key: BUILD_PROJECT_PATH
    Name: arg
    Value: /opt/django
  - Key: BUILD_PROJECT_PORT
    Name: arg
    Value: "8000"
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Env:
    - Key: DJANGO_USER
      Value: ${BUILD_USER}
    Name: env
  - Env:
    - Key: DJANGO_USER_GROUP
      Value: ${BUILD_USER_GROUP}
    Name: env
  - Env:
    - Key: DJANGO_USER_PASSWORD
      Value: ${BUILD_USER_PASSWORD}
    Name: env
  - Env:
    - Key: DJANGO_USER_SHELL
      Value: ${BUILD_USER_SHELL}
    Name: env
  - Env:
    - Key: DJANGO_USER_UID
      Value: ${BUILD_USER_UID}
    Name: env
  - Env:
    - Key: DJANGO_USER_HOME
      Value: ${BUILD_USER_HOME}
    Name: env
  - Env:
    - Key: PROJECT_PATH
      Value: ${BUILD_PROJECT_PATH}
    Name: env
  - Env:
    - Key: PROJECT_PORT
      Value: ${BUILD_PROJECT_PORT}
    Name: env
  - Env:
    - Key: VENV_PATH
      Value: ${DJANGO_USER_HOME}/venv/
    Name: env
  - Env:
    - Key: VENV_PIP
      Value: ${VENV_PATH}/bin/pip3
    Name: env
  - Env:
    - Key: VENV_PY
      Value: ${VENV_PATH}/bin/python
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         curl         git         build-essential         linux-headers-amd64         postgresql-client         postgresql-contrib         libpq-dev     ;
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install virtualenv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${PROJECT_PATH}
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - ${PROJECT_PATH}
  - CmdLine:
    - virtualenv -p $(which python3) ${VENV_PATH}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'db:5432:*:django:django' > ~/.pgpass;     chmod 600 ~/.pgpass;
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${PROJECT_PATH}
  - Env:
    - Key: CQLENG_ALLOW_SCHEMA_MANAGEMENT
      Value: '"True"'
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - "apt-get update \t&& apt-get install -y openssh-server \t&& mkdir /var/run/sshd
      \t&&  echo \"root:root\" | chpasswd \t&& sed -i 's/PermitRootLogin without-password/PermitRootLogin
      yes/' /etc/ssh/sshd_config \t&& sed 's@session\\s*required\\s*pam_loginuid.so@session
      optional pam_loginuid.so@g' -i /etc/pam.d/sshd \t&& /usr/bin/ssh-keygen -A"
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.5
