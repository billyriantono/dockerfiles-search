MetaArgs: null
Stages:
- As: base
  BaseName: debian:stretch-slim
  Commands:
  - CmdLine:
    - apt-get update     && apt-get dist-upgrade -y     && apt-get clean     && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Image: debian:stretch-slim
  Name: base
  Platform: ""
  SourceCode: FROM debian:stretch-slim AS base
- BaseName: base
  Commands:
  - CmdLine:
    - apt-get update     && apt-get install -y curl unzip git bash-completion jq ssh
      sudo     && apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh -T -o "StrictHostKeyChecking no" -o "PubkeyAuthentication no" git@github.com
      || true
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y python python-pip python3 python3-pip     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: AWSCLI_VERSION
      Value: 1.16.95
    Name: env
  - CmdLine:
    - python3 -m pip install --upgrade pip     && pip3 install pipenv awscli==${AWSCLI_VERSION}     &&
      echo "complete -C '$(which aws_completer)' aws" >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: AZURECLI_VERSION
      Value: 2.0.55-1~stretch
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y apt-transport-https lsb-release software-properties-common
      dirmngr     && apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - AZ_REPO=$(lsb_release -cs)     && echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/
      $AZ_REPO main" |         tee /etc/apt/sources.list.d/azure-cli.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key --keyring /etc/apt/trusted.gpg.d/Microsoft.gpg adv     --keyserver packages.microsoft.com     --recv-keys
      BC528686B50D79E339D3721CEB3E94ADBE1229CF
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install azure-cli=${AZURECLI_VERSION}     && apt-get
      clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.10
    Name: env
  - CmdLine:
    - curl -L https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      -o terraform.zip     && unzip terraform.zip     && rm terraform.zip     && mv
      terraform /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAGRUNT_VERSION
      Value: 0.17.4
    Name: env
  - CmdLine:
    - curl -L https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
      -o terragrunt     && chmod +x terragrunt     && mv terragrunt /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBECTL_VERSION
      Value: 1.12.0
    Name: env
  - CmdLine:
    - curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      -o kubectl     && chmod +x kubectl     && mv kubectl /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_VERSION
      Value: 2.15.1
    Name: env
  - CmdLine:
    - curl -L https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      -o helm.tgz     && tar -zxvf helm.tgz     && rm helm.tgz     && mv linux-amd64/helm
      /usr/local/bin/     && rm -R linux-amd64     && echo "source <(helm completion
      bash)" >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: AWSIAMAUTH_VERSION
      Value: 1.10.3/2018-07-26
    Name: env
  - CmdLine:
    - curl -L https://amazon-eks.s3-us-west-2.amazonaws.com/${AWSIAMAUTH_VERSION}/bin/linux/amd64/aws-iam-authenticator
      -o aws-iam-authenticator     && chmod +x aws-iam-authenticator     && mv aws-iam-authenticator
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: ARGOCDCLI_VERSION
      Value: 0.12.0
    Name: env
  - CmdLine:
    - curl -L https://github.com/argoproj/argo-cd/releases/download/v${ARGOCDCLI_VERSION}/argocd-linux-amd64
      -o argocd     && chmod +x argocd     && mv argocd /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y kafkacat     && apt-get clean     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: base
  Name: ""
  Platform: ""
  SourceCode: FROM base
