MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get install -y --no-install-recommends apt-utils \t\tsoftware-properties-common
      \t\tpython-software-properties \t\tlanguage-pack-en-base && \tLC_ALL=en_US.UTF-8
      add-apt-repository ppa:ondrej/php"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update &&     apt-get -y -q --no-install-recommends install -y php-fpm
      php-cli php-gd php-mcrypt php-mysql php-curl                        php-intl
      \                       php-imagick                        php-json                        php-pear
      \                       php-dev                        php7.1-sqlite                        nginx
      \                       curl                        mysql-server                        mysql-client
      \                       unzip                        sudo                        nano
      \                       openssh-server                        ssh                        bash-completion
      \                       openssl                        ca-certificates                        wget
      \                       git                        phpmyadmin php-mbstring php-gettext
      \t\t       supervisor &&                \tcurl -sS https://getcomposer.org/installer
      | php -- --install-dir=/usr/local/bin --filename=composer &&                \tyes
      \"\" | adduser --uid=1000 --disabled-password docker &&                \techo
      \"docker   ALL=(ALL:ALL) NOPASSWD: ALL\" >> /etc/sudoers &&                \tsudo
      -H -u docker bash -c \"/usr/local/bin/composer global require fxp/composer-asset-plugin:~1.1.3\"
      &&                \tmkdir -p /web/docker &&                \techo \"<?php echo
      'web server is running';\" > /web/docker/index.php &&                \tchown
      -R docker:docker /web &&                 \tphpenmod custom &&                 \tphpenmod
      mcrypt &&     echo \"mysql-server mysql-server/root_password password\" | debconf-set-selections
      &&     echo \"mysql-server mysql-server/root_password_again password\" | debconf-set-selections
      &&     apt install -y mysql-server &&     rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^listen\s*=.*$/listen = 127.0.0.1:9000/' /etc/php/7.1/fpm/pool.d/www.conf
      &&     sed -i 's/^\;error_log\s*=\s*syslog\s*$/error_log = \/var\/log\/php\/cgi.log/'
      /etc/php/7.1/fpm/php.ini &&     sed -i 's/^\;error_log\s*=\s*syslog\s*$/error_log
      = \/var\/log\/php\/cli.log/' /etc/php/7.1/cli/php.ini &&     sed -i 's/^key_buffer\s*=/key_buffer_size
      =/' /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/root
    - /
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/docker/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '' > /home/docker/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'First SSH public key' >> /home/docker/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Second SSH public key' >> /home/docker/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/ssh
    - /etc/ssh/sshd_config
  - CmdLine:
    - echo "root:root" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash /opt/mysql-server
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse"
      | tee /etc/apt/sources.list.d/mongodb-org-3.2.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y  --allow-unauthenticated mongodb-org
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/db
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /web/projects
    - /web/www
    - /web/markup
    - /var/lib/mysql
  - Name: workdir
    Path: /web
  - Name: expose
    Ports:
    - "2202"
    - "27017"
    - "3306"
    - "443"
    - "80"
    - "9000"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
