MetaArgs: null
Stages:
- As: builder
  BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"k@ndk.name"'
    Name: label
  - Key: BUILD_DEPENDENCIES
    Name: arg
    Value: '"build-base     libffi-dev     libxml2-dev     mariadb-connector-c-dev     openldap-dev     py3-pip     python3-dev     xmlsec-dev     yarn"'
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    - Key: FLASK_APP
      Value: /build/powerdnsadmin/__init__.py
    Name: env
  - CmdLine:
    - apk add --no-cache ${BUILD_DEPENDENCIES} &&     ln -s /usr/bin/pip3 /usr/bin/pip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - /build/requirements.txt
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /build
  - CmdLine:
    - yarn install --pure-lockfile --production &&     yarn cache clean &&     sed
      -i -r -e "s|'cssmin',\s?'cssrewrite'|'cssmin'|g" /build/powerdnsadmin/assets.py
      &&     flask assets build
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /build/powerdnsadmin/static /tmp/static &&     mkdir /build/powerdnsadmin/static
      &&     cp -r /tmp/static/generated /build/powerdnsadmin/static &&     find /tmp/static/node_modules
      -name 'fonts' -exec cp -r {} /build/powerdnsadmin/static \; &&     find /tmp/static/node_modules/icheck/skins/square
      -name '*.png' -exec cp {} /build/powerdnsadmin/static/generated \;
    Name: run
    PrependShell: true
  - CmdLine:
    - '{       echo "from flask_assets import Environment";       echo "assets = Environment()";       echo
      "assets.register(''js_login'', ''generated/login.js'')";       echo "assets.register(''js_validation'',
      ''generated/validation.js'')";       echo "assets.register(''css_login'', ''generated/login.css'')";       echo
      "assets.register(''js_main'', ''generated/main.js'')";       echo "assets.register(''css_main'',
      ''generated/main.css'')";     } > /build/powerdnsadmin/assets.py'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app &&     cp -r /build/migrations/ /build/powerdnsadmin/ /build/run.py
      /app &&     mkdir -p /app/configs &&     cp -r /build/configs/docker_config.py
      /app/configs
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pip-autoremove &&     pip-autoremove cssmin -y &&     pip-autoremove
      jsmin -y &&     pip-autoremove pytest -y &&     pip uninstall -y pip-autoremove
      &&     apk del ${BUILD_DEPENDENCIES}
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: builder
  Platform: ""
  SourceCode: FROM alpine:3.10 AS builder
- BaseName: alpine:3.10
  Commands:
  - Env:
    - Key: FLASK_APP
      Value: /app/powerdnsadmin/__init__.py
    Name: env
  - CmdLine:
    - apk add --no-cache mariadb-connector-c postgresql-client py3-gunicorn py3-psycopg2
      xmlsec &&     addgroup -S pda &&     adduser -S -D -G pda pda
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/bin/flask
    - /usr/bin/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/lib/python3.7/site-packages
    - /usr/lib/python3.7/site-packages/
  - Chown: pda:pda
    From: builder
    Name: copy
    SourcesAndDest:
    - /app
    - /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/entrypoint.sh
    - /usr/bin/
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - 80/tcp
  - Health:
      Test:
      - CMD
      - wget
      - --output-document=-
      - --quiet
      - --tries=1
      - http://127.0.0.1/
    Name: healthcheck
  - CmdLine:
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gunicorn
    - powerdnsadmin:create_app()
    - --user
    - pda
    - --group
    - pda
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
