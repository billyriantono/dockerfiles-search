MetaArgs: null
Stages:
- BaseName: openjdk:jdk-alpine
  Commands:
  - Maintainer: Dominik Hahn <dominik@monostream.com>
    Name: maintainer
  - Maintainer: Cedric Gatay <c.gatay@code-troopers.com>
    Name: maintainer
  - Env:
    - Key: ANDROID_SDK_VERSION
      Value: r25.2.3
    Name: env
  - Env:
    - Key: ANDROID_BUILD_TOOLS_VERSION
      Value: build-tools-22.0.1,build-tools-23.0.3,build-tools-24.0.3,build-tools-25.0.2
    Name: env
  - Env:
    - Key: ANDROID_SDK_FILENAME
      Value: tools_${ANDROID_SDK_VERSION}-linux.zip
    Name: env
  - Env:
    - Key: ANDROID_SDK_URL
      Value: https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME}
    Name: env
  - Env:
    - Key: ANDROID_API_LEVELS
      Value: android-17,android-18,android-19,android-20,android-21,android-22,android-23,android-24,android-25
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: /usr/local/bin/android-sdk-linux
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools
    Name: env
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.25-r0" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates
      &&     wget         "https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub"         -O
      "/etc/apk/keys/sgerrand.rsa.pub" &&     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&         rm "/etc/apk/keys/sgerrand.rsa.pub" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true &&     echo "export
      LANG=C.UTF-8" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm
      "/root/.wget-hsts" &&     apk del .build-dependencies &&     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --quiet --no-cache libstdc++ bash &&     apk add --quiet --no-cache
      --virtual build-dependencies curl unzip&&     curl --create-dirs -sSLo ${ANDROID_HOME}/${ANDROID_SDK_FILENAME}
      ${ANDROID_SDK_URL} &&     unzip -q ${ANDROID_HOME}/${ANDROID_SDK_FILENAME} -d
      ${ANDROID_HOME} &&     rm -rf ${ANDROID_HOME}/${ANDROID_SDK_FILENAME} &&     (while
      sleep 3; do echo "y"; done) | android -s --clear-cache update sdk --no-ui --force
      --all --filter tools,platform-tools,${ANDROID_BUILD_TOOLS_VERSION},${ANDROID_API_LEVELS},extra-android-m2repository
      &&     apk del build-dependencies &&     rm -rf /var/cache/* /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "$ANDROID_HOME/licenses" &&    echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55"
      > "$ANDROID_HOME/licenses/android-sdk-license" &&    echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd"
      > "$ANDROID_HOME/licenses/android-sdk-preview-license"
    Name: run
    PrependShell: true
  From:
    Image: openjdk:jdk-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:jdk-alpine
