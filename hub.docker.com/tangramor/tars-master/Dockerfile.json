{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos",
      "SourceCode": "FROM centos",
      "Platform": "",
      "From": {
        "Image": "centos"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root/"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBIP",
              "Value": "127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBPort",
              "Value": "3306"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBUser",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBPassword",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBTarsPass",
              "Value": "tars2015"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y install https://repo.mysql.com/mysql57-community-release-el7-11.noarch.rpm \t\u0026\u0026 yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \t\u0026\u0026 yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \t\u0026\u0026 yum -y install yum-utils \u0026\u0026 yum-config-manager --enable remi-php72 \t\u0026\u0026 yum --enablerepo=mysql80-community -y install git gcc gcc-c++ make wget cmake mysql mysql-devel unzip iproute which glibc-devel flex bison ncurses-devel protobuf-devel zlib-devel kde-l10n-Chinese glibc-common hiredis-devel rapidjson-devel boost boost-devel redis php php-cli php-devel php-mcrypt php-gd php-curl php-mysql php-zip php-fileinfo php-phpiredis \t\u0026\u0026 ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone \t\u0026\u0026 localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \t\u0026\u0026 sed -i \"s@;date.timezone =@date.timezone = ${TZ}@\" /etc/php.ini \t\u0026\u0026 sed -i \"s@AllowOverride None@AllowOverride All@g\" /etc/httpd/conf/httpd.conf \t\u0026\u0026 wget -c -t 0 https://dev.mysql.com/get/Downloads/Connector-C++/mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \t\u0026\u0026 tar zxf mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \u0026\u0026 cd mysql-connector-c++-8.0.11-linux-el7-x86-64bit \t\u0026\u0026 cp -Rf include/jdbc/* /usr/include/mysql/ \u0026\u0026 cp -Rf include/mysqlx/* /usr/include/mysql/ \u0026\u0026 cp -Rf lib64/* /usr/lib64/mysql/ \t\u0026\u0026 cd /root \u0026\u0026 rm -rf mysql-connector* \t\u0026\u0026 wget -c -t 0 https://github.com/Tencent/Tars/archive/master.zip -O master.zip \t\u0026\u0026 unzip -a master.zip \u0026\u0026 mv Tars-master Tars \u0026\u0026 rm -f /root/master.zip \t\u0026\u0026 mkdir -p /usr/local/mysql \u0026\u0026 ln -s /usr/lib64/mysql /usr/local/mysql/lib \u0026\u0026 ln -s /usr/include/mysql /usr/local/mysql/include \u0026\u0026 echo \"/usr/local/mysql/lib/\" \u003e\u003e /etc/ld.so.conf \u0026\u0026 ldconfig \t\u0026\u0026 cd /usr/local/mysql/lib/ \u0026\u0026 rm -f libmysqlclient.a \u0026\u0026 ln -s libmysqlclient.so.*.*.* libmysqlclient.a \t\u0026\u0026 cd /root/Tars/cpp/thirdparty \u0026\u0026 wget -c -t 0 https://github.com/Tencent/rapidjson/archive/master.zip -O master.zip \t\u0026\u0026 unzip -a master.zip \u0026\u0026 mv rapidjson-master rapidjson \u0026\u0026 rm -f master.zip \t\u0026\u0026 mkdir -p /data \u0026\u0026 chmod u+x /root/Tars/cpp/build/build.sh \t\u0026\u0026 sed -i '11s/rt/rt crypto ssl/' /root/Tars/cpp/framework/CMakeLists.txt \u0026\u0026 sed -i '20s/5.1.14/8.0.11/' /root/Tars/web/pom.xml \t\u0026\u0026 sed -i '38 a\\\\t\u003cjaxb-ap.version\u003e2.3.0\u003c/jaxb-ap.version\u003e' /root/Tars/web/pom.xml \t\u0026\u0026 sed -i '303 a\\\\t\u003cdependency\u003e\\n\\t\\t\u003cgroupId\u003ejavax.xml.bind\u003c/groupId\u003e\\n\\t\\t\u003cartifactId\u003ejaxb-api\u003c/artifactId\u003e\\n\\t\\t\u003cversion\u003e${jaxb-ap.version}\u003c/version\u003e\\n\\t\u003c/dependency\u003e' /root/Tars/web/pom.xml \t\u0026\u0026 sed -i '25s/org.gjt.mm.mysql.Driver/com.mysql.cj.jdbc.Driver/' /root/Tars/web/src/main/resources/conf-spring/spring-context-datasource.xml \t\u0026\u0026 sed -i '26s/convertToNull/CONVERT_TO_NULL/' /root/Tars/web/src/main/resources/conf-spring/spring-context-datasource.xml \t\u0026\u0026 cd /root/Tars/cpp/build/ \u0026\u0026 ./build.sh all \t\u0026\u0026 ./build.sh install \t\u0026\u0026 cd /root/Tars/cpp/build/ \u0026\u0026 make framework-tar \t\u0026\u0026 make tarsstat-tar \u0026\u0026 make tarsnotify-tar \u0026\u0026 make tarsproperty-tar \u0026\u0026 make tarslog-tar \u0026\u0026 make tarsquerystat-tar \u0026\u0026 make tarsqueryproperty-tar \t\u0026\u0026 mkdir -p /usr/local/app/tars/ \u0026\u0026 cp /root/Tars/cpp/build/framework.tgz /usr/local/app/tars/ \u0026\u0026 cp /root/Tars/cpp/build/t*.tgz /root/ \t\u0026\u0026 cd /usr/local/app/tars/ \u0026\u0026 tar xzfv framework.tgz \u0026\u0026 rm -rf framework.tgz \t\u0026\u0026 mkdir -p /usr/local/app/patchs/tars.upload \t\u0026\u0026 cd /tmp \u0026\u0026 curl -fsSL https://getcomposer.org/installer | php \t\u0026\u0026 chmod +x composer.phar \u0026\u0026 mv composer.phar /usr/local/bin/composer \t\u0026\u0026 cd /root/Tars/php/tars-extension/ \u0026\u0026 phpize --clean \u0026\u0026 phpize \t\u0026\u0026 ./configure --enable-phptars --with-php-config=/usr/bin/php-config \u0026\u0026 make \u0026\u0026 make install \t\u0026\u0026 echo \"extension=phptars.so\" \u003e /etc/php.d/phptars.ini \t\u0026\u0026 cd /root \u0026\u0026 wget -c -t 0 https://github.com/swoole/swoole-src/archive/v2.2.0.tar.gz \t\u0026\u0026 tar zxf v2.2.0.tar.gz \u0026\u0026 cd swoole-src-2.2.0 \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t\u0026\u0026 echo \"extension=swoole.so\" \u003e /etc/php.d/swoole.ini \t\u0026\u0026 cd /root \u0026\u0026 rm -rf v2.2.0.tar.gz swoole-src-2.2.0 \t\u0026\u0026 mkdir -p /root/phptars \u0026\u0026 cp -f /root/Tars/php/tars2php/src/tars2php.php /root/phptars \t\u0026\u0026 mkdir -p /root/init \u0026\u0026 cd /root/init/ \t\u0026\u0026 wget -c -t 0 --header \"Cookie: oraclelicense=accept\" -c --no-check-certificate http://download.oracle.com/otn-pub/java/jdk/10.0.2+13/19aef61b38124481863b1413dce1855f/jdk-10.0.2_linux-x64_bin.rpm \t\u0026\u0026 rpm -ivh /root/init/jdk-10.0.2_linux-x64_bin.rpm \u0026\u0026 rm -rf /root/init/jdk-10.0.2_linux-x64_bin.rpm \t\u0026\u0026 echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"CLASSPATH=\\$JAVA_HOME/lib/dt.jar:\\$JAVA_HOME/lib/tools.jar\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"PATH=\\$JAVA_HOME/bin:\\$PATH\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"export PATH JAVA_HOME CLASSPATH\" \u003e\u003e /etc/profile \t\u0026\u0026 cd /usr/local/ \u0026\u0026 wget -c -t 0 http://mirror.bit.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz \t\u0026\u0026 tar zxvf apache-maven-3.5.4-bin.tar.gz \u0026\u0026 echo \"export MAVEN_HOME=/usr/local/apache-maven-3.5.4/\" \u003e\u003e /etc/profile \t\u0026\u0026 echo \"export PATH=\\$PATH:\\$MAVEN_HOME/bin\" \u003e\u003e /etc/profile \u0026\u0026 source /etc/profile \u0026\u0026 mvn -v \t\u0026\u0026 rm -rf apache-maven-3.5.4-bin.tar.gz  \t\u0026\u0026 cd /usr/local/ \u0026\u0026 wget -c -t 0 http://caucho.com/download/resin-4.0.56.tar.gz \u0026\u0026 tar zxvf resin-4.0.56.tar.gz \u0026\u0026 mv resin-4.0.56 resin \u0026\u0026 rm -rf resin-4.0.56.tar.gz \t\u0026\u0026 source /etc/profile \u0026\u0026 cd /root/Tars/java \u0026\u0026 mvn clean install \u0026\u0026 mvn clean install -f core/client.pom.xml \u0026\u0026 mvn clean install -f core/server.pom.xml \t\u0026\u0026 cd /root/Tars/web/ \u0026\u0026 source /etc/profile \u0026\u0026 mvn clean package \t\u0026\u0026 cp /root/Tars/build/conf/resin.xml /usr/local/resin/conf/ \t\u0026\u0026 sed -i 's/servlet-class=\"com.caucho.servlets.FileServlet\"\\/\u003e/servlet-class=\"com.caucho.servlets.FileServlet\"\u003e\\n\\t\u003cinit\u003e\\n\\t\\t\u003ccharacter-encoding\u003eutf-8\u003c\\/character-encoding\u003e\\n\\t\u003c\\/init\u003e\\n\u003c\\/servlet\u003e/g' /usr/local/resin/conf/app-default.xml \t\u0026\u0026 sed -i 's/\u003cpage-cache-max\u003e1024\u003c\\/page-cache-max\u003e/\u003cpage-cache-max\u003e1024\u003c\\/page-cache-max\u003e\\n\\t\\t\u003ccharacter-encoding\u003eutf-8\u003c\\/character-encoding\u003e/g' /usr/local/resin/conf/app-default.xml \t\u0026\u0026 cp /root/Tars/web/target/tars.war /usr/local/resin/webapps/ \t\u0026\u0026 mkdir -p /root/sql \u0026\u0026 cp -rf /root/Tars/cpp/framework/sql/* /root/sql/ \t\u0026\u0026 rm -rf /root/Tars \t\u0026\u0026 yum clean all \u0026\u0026 rm -rf /var/cache/yum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/java/jdk-10.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/local/apache-maven-3.5.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MOUNT_DATA",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INET_NAME",
              "Value": "eth0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"zh_CN.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install.sh",
            "/root/init/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "confs",
            "/root/confs"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pid1-0.1.0-amd64",
            "/sbin/pid1"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /sbin/pid1 /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/pid1"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash -c '/sbin/entrypoint.sh start'"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}