MetaArgs: null
Stages:
- BaseName: centos
  Commands:
  - Name: workdir
    Path: /root/
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - Env:
    - Key: DBIP
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: DBPort
      Value: "3306"
    Name: env
  - Env:
    - Key: DBUser
      Value: root
    Name: env
  - Env:
    - Key: DBPassword
      Value: password
    Name: env
  - Env:
    - Key: DBTarsPass
      Value: tars2015
    Name: env
  - CmdLine:
    - "yum -y install https://repo.mysql.com/mysql57-community-release-el7-11.noarch.rpm
      \t&& yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      \t&& yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \t&&
      yum -y install yum-utils && yum-config-manager --enable remi-php72 \t&& yum
      --enablerepo=mysql80-community -y install git gcc gcc-c++ make wget cmake mysql
      mysql-devel unzip iproute which glibc-devel flex bison ncurses-devel protobuf-devel
      zlib-devel kde-l10n-Chinese glibc-common hiredis-devel rapidjson-devel boost
      boost-devel redis php php-cli php-devel php-mcrypt php-gd php-curl php-mysql
      php-zip php-fileinfo php-phpiredis \t&& ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
      && echo $TZ > /etc/timezone \t&& localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \t&&
      sed -i \"s@;date.timezone =@date.timezone = ${TZ}@\" /etc/php.ini \t&& sed -i
      \"s@AllowOverride None@AllowOverride All@g\" /etc/httpd/conf/httpd.conf \t&&
      wget -c -t 0 https://dev.mysql.com/get/Downloads/Connector-C++/mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz
      \t&& tar zxf mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz && cd mysql-connector-c++-8.0.11-linux-el7-x86-64bit
      \t&& cp -Rf include/jdbc/* /usr/include/mysql/ && cp -Rf include/mysqlx/* /usr/include/mysql/
      && cp -Rf lib64/* /usr/lib64/mysql/ \t&& cd /root && rm -rf mysql-connector*
      \t&& wget -c -t 0 https://github.com/Tencent/Tars/archive/master.zip -O master.zip
      \t&& unzip -a master.zip && mv Tars-master Tars && rm -f /root/master.zip \t&&
      mkdir -p /usr/local/mysql && ln -s /usr/lib64/mysql /usr/local/mysql/lib &&
      ln -s /usr/include/mysql /usr/local/mysql/include && echo \"/usr/local/mysql/lib/\"
      >> /etc/ld.so.conf && ldconfig \t&& cd /usr/local/mysql/lib/ && rm -f libmysqlclient.a
      && ln -s libmysqlclient.so.*.*.* libmysqlclient.a \t&& cd /root/Tars/cpp/thirdparty
      && wget -c -t 0 https://github.com/Tencent/rapidjson/archive/master.zip -O master.zip
      \t&& unzip -a master.zip && mv rapidjson-master rapidjson && rm -f master.zip
      \t&& mkdir -p /data && chmod u+x /root/Tars/cpp/build/build.sh \t&& sed -i '11s/rt/rt
      crypto ssl/' /root/Tars/cpp/framework/CMakeLists.txt && sed -i '20s/5.1.14/8.0.11/'
      /root/Tars/web/pom.xml \t&& sed -i '38 a\\\\t<jaxb-ap.version>2.3.0</jaxb-ap.version>'
      /root/Tars/web/pom.xml \t&& sed -i '303 a\\\\t<dependency>\\n\\t\\t<groupId>javax.xml.bind</groupId>\\n\\t\\t<artifactId>jaxb-api</artifactId>\\n\\t\\t<version>${jaxb-ap.version}</version>\\n\\t</dependency>'
      /root/Tars/web/pom.xml \t&& sed -i '25s/org.gjt.mm.mysql.Driver/com.mysql.cj.jdbc.Driver/'
      /root/Tars/web/src/main/resources/conf-spring/spring-context-datasource.xml
      \t&& sed -i '26s/convertToNull/CONVERT_TO_NULL/' /root/Tars/web/src/main/resources/conf-spring/spring-context-datasource.xml
      \t&& cd /root/Tars/cpp/build/ && ./build.sh all \t&& ./build.sh install \t&&
      cd /root/Tars/cpp/build/ && make framework-tar \t&& make tarsstat-tar && make
      tarsnotify-tar && make tarsproperty-tar && make tarslog-tar && make tarsquerystat-tar
      && make tarsqueryproperty-tar \t&& mkdir -p /usr/local/app/tars/ && cp /root/Tars/cpp/build/framework.tgz
      /usr/local/app/tars/ && cp /root/Tars/cpp/build/t*.tgz /root/ \t&& cd /usr/local/app/tars/
      && tar xzfv framework.tgz && rm -rf framework.tgz \t&& mkdir -p /usr/local/app/patchs/tars.upload
      \t&& cd /tmp && curl -fsSL https://getcomposer.org/installer | php \t&& chmod
      +x composer.phar && mv composer.phar /usr/local/bin/composer \t&& cd /root/Tars/php/tars-extension/
      && phpize --clean && phpize \t&& ./configure --enable-phptars --with-php-config=/usr/bin/php-config
      && make && make install \t&& echo \"extension=phptars.so\" > /etc/php.d/phptars.ini
      \t&& cd /root && wget -c -t 0 https://github.com/swoole/swoole-src/archive/v2.2.0.tar.gz
      \t&& tar zxf v2.2.0.tar.gz && cd swoole-src-2.2.0 && phpize && ./configure &&
      make && make install \t&& echo \"extension=swoole.so\" > /etc/php.d/swoole.ini
      \t&& cd /root && rm -rf v2.2.0.tar.gz swoole-src-2.2.0 \t&& mkdir -p /root/phptars
      && cp -f /root/Tars/php/tars2php/src/tars2php.php /root/phptars \t&& mkdir -p
      /root/init && cd /root/init/ \t&& wget -c -t 0 --header \"Cookie: oraclelicense=accept\"
      -c --no-check-certificate http://download.oracle.com/otn-pub/java/jdk/10.0.2+13/19aef61b38124481863b1413dce1855f/jdk-10.0.2_linux-x64_bin.rpm
      \t&& rpm -ivh /root/init/jdk-10.0.2_linux-x64_bin.rpm && rm -rf /root/init/jdk-10.0.2_linux-x64_bin.rpm
      \t&& echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /etc/profile \t&& echo
      \"CLASSPATH=\\$JAVA_HOME/lib/dt.jar:\\$JAVA_HOME/lib/tools.jar\" >> /etc/profile
      \t&& echo \"PATH=\\$JAVA_HOME/bin:\\$PATH\" >> /etc/profile \t&& echo \"export
      PATH JAVA_HOME CLASSPATH\" >> /etc/profile \t&& cd /usr/local/ && wget -c -t
      0 http://mirror.bit.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      \t&& tar zxvf apache-maven-3.5.4-bin.tar.gz && echo \"export MAVEN_HOME=/usr/local/apache-maven-3.5.4/\"
      >> /etc/profile \t&& echo \"export PATH=\\$PATH:\\$MAVEN_HOME/bin\" >> /etc/profile
      && source /etc/profile && mvn -v \t&& rm -rf apache-maven-3.5.4-bin.tar.gz  \t&&
      cd /usr/local/ && wget -c -t 0 http://caucho.com/download/resin-4.0.56.tar.gz
      && tar zxvf resin-4.0.56.tar.gz && mv resin-4.0.56 resin && rm -rf resin-4.0.56.tar.gz
      \t&& source /etc/profile && cd /root/Tars/java && mvn clean install && mvn clean
      install -f core/client.pom.xml && mvn clean install -f core/server.pom.xml \t&&
      cd /root/Tars/web/ && source /etc/profile && mvn clean package \t&& cp /root/Tars/build/conf/resin.xml
      /usr/local/resin/conf/ \t&& sed -i 's/servlet-class=\"com.caucho.servlets.FileServlet\"\\/>/servlet-class=\"com.caucho.servlets.FileServlet\">\\n\\t<init>\\n\\t\\t<character-encoding>utf-8<\\/character-encoding>\\n\\t<\\/init>\\n<\\/servlet>/g'
      /usr/local/resin/conf/app-default.xml \t&& sed -i 's/<page-cache-max>1024<\\/page-cache-max>/<page-cache-max>1024<\\/page-cache-max>\\n\\t\\t<character-encoding>utf-8<\\/character-encoding>/g'
      /usr/local/resin/conf/app-default.xml \t&& cp /root/Tars/web/target/tars.war
      /usr/local/resin/webapps/ \t&& mkdir -p /root/sql && cp -rf /root/Tars/cpp/framework/sql/*
      /root/sql/ \t&& rm -rf /root/Tars \t&& yum clean all && rm -rf /var/cache/yum"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/java/jdk-10.0.2
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/local/apache-maven-3.5.4
    Name: env
  - Env:
    - Key: MOUNT_DATA
      Value: "false"
    Name: env
  - Env:
    - Key: INET_NAME
      Value: eth0
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"zh_CN.UTF-8"'
    Name: env
  - Name: volume
    Volumes:
    - /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install.sh
    - /root/init/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - confs
    - /root/confs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pid1-0.1.0-amd64
    - /sbin/pid1
  - CmdLine:
    - chmod 755 /sbin/pid1 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/pid1
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash -c '/sbin/entrypoint.sh start'
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "80"
  From:
    Image: centos
  Name: ""
  Platform: ""
  SourceCode: FROM centos
