{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_VERSION",
              "Value": "4.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UNIT_VERSION",
              "Value": "1.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_BUILD_DEPS",
              "Value": "\"dpkg-dev dpkg pkgconf gcc g++ libc-dev libc-dev make autoconf make file bison re2c tar wget\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "\"/usr/local/etc/php\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk add --no-cache ca-certificates postgresql-dev libsodium-dev argon2-dev     \u0026\u0026 apk add --no-cache --virtual .build-deps $PHP_BUILD_DEPS         \u0026\u0026 mkdir -p $PHP_INI_DIR/conf.d     \u0026\u0026 wget -nv -O /tmp/php.tar.gz \"https://secure.php.net/get/php-$PHP_VERSION.tar.gz/from/this/mirror\"     \u0026\u0026 cd /tmp     \u0026\u0026 tar -xf php.tar.gz     \u0026\u0026 cd /tmp/php-$PHP_VERSION     \u0026\u0026 ./configure         --with-config-file-path=\"$PHP_INI_DIR\"         --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"         --disable-all         --enable-option-checking=fatal         --enable-opcache         --enable-pdo         --enable-filter         --enable-hash         --enable-json         --enable-ctype         --enable-embed         --with-pdo-pgsql         --without-sqlite3         --without-pdo_sqlite         --without-pdo_sqlite         --without-iconv         --with-password-argon2         --with-sodium         CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"         \u0026\u0026 make -j \"$(nproc)\"     \u0026\u0026 make install     \u0026\u0026 make clean         \u0026\u0026 wget -nv -O /tmp/redis.tar.gz \"https://github.com/phpredis/phpredis/archive/$REDIS_VERSION.tar.gz\"     \u0026\u0026 cd /tmp     \u0026\u0026 tar -xf redis.tar.gz     \u0026\u0026 cd /tmp/phpredis-$REDIS_VERSION     \u0026\u0026 phpize     \u0026\u0026 ./configure --disable-redis-session     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 make clean     \u0026\u0026 echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/redis.ini     \u0026\u0026 echo \"zend_extension=opcache.so\" \u003e /usr/local/etc/php/conf.d/opcache.ini         \u0026\u0026 wget -nv -O /tmp/unit.tar.gz \"https://unit.nginx.org/download/unit-$UNIT_VERSION.tar.gz\"     \u0026\u0026 cd /tmp     \u0026\u0026 tar -xf unit.tar.gz     \u0026\u0026 cd /tmp/unit-$UNIT_VERSION     \u0026\u0026 mkdir -p /opt/unit/state -m 777     \u0026\u0026 ./configure --prefix=/opt/unit --log=/dev/stdout     \u0026\u0026 ./configure php --module=php72 --config=/usr/local/bin/php-config --lib-path=/usr/local/lib     \u0026\u0026 make all     \u0026\u0026 make install     \u0026\u0026 make test     \u0026\u0026 make clean         \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "index.php",
            "/app/index.php"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "$PHP_INI_DIR/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.json",
            "/opt/unit/state/conf.json"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/opt/unit/sbin/unitd"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--no-daemon",
            "--control",
            "unix:/opt/unit/control.unit.sock"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}