MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Maintainer: DUONG Dinh Cuong <cuong3ihut@gmail.com>
    Name: maintainer
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /data
  - Name: workdir
    Path: /data
  - Name: volume
    Volumes:
    - /root/.aws/
  - CmdLine:
    - chmod +x ./app-deploy
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''{ "allow_root": true }''>.bowerrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add curl git ca-certificates openssh-client python build-base nodejs
      &&    mkdir /root/.ssh/ && cp /data/ssh/id_rsa /root/.ssh/id_rsa && chmod 600
      /root/.ssh/id_rsa && touch /root/.ssh/known_hosts && ssh-keyscan bitbucket.org
      >> /root/.ssh/known_hosts &&    ./app-deploy "R1" "YES" "sensor-remote-dashboard"
      "/root" &&    npm install -g --unsafe-perm node-red &&    cd /root/.node-red/
      && npm install node-red-contrib-http-auth0 && npm install node-red-contrib-aws-sdk
      && npm install node-red-contrib-func-exec && npm install node-red-contrib-job-queue
      &&    apk del ca-certificates git python build-base &&    rm -rf /var/lib/apt/lists/*
      &&    rm -rf /var/cache/apk/* &&    cp /data/flows/settings.js /root/.node-red/settings.js
      &&    cp /data/flows/flows.json /root/.node-red/flows.json &&    rm -rf /data
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "1880"
  - CmdLine:
    - node
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/node-red
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
