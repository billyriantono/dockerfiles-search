MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: tuna7@fsoft.com.vn
    Name: maintainer
  - CmdLine:
    - /bin/bash -c 'echo "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/" >>
      /etc/apt/sources.list' &&   gpg --keyserver keyserver.ubuntu.com --recv-key
      E084DAB9 &&   gpg -a --export E084DAB9 | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y curl git
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - && apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install r-base r-base-core r-recommended r-base-html r-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libcurl4-gnutls-dev libxml2-dev libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('devtools', repos='http://cran.rstudio.com/', dependencies
      = TRUE)" &&     Rscript -e "devtools::install_github('twitter/AnomalyDetection')"
      &&     Rscript -e "install.packages('RSQLite', repos='http://cran.rstudio.com/',
      dependencies = TRUE)" &&     Rscript -e "install.packages('httr', repos='http://cran.rstudio.com/',
      dependencies = TRUE)" &&     Rscript -e "install.packages('jsonlite', repos='http://cran.rstudio.com/',
      dependencies = TRUE)"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /installation
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /installation
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /installation
  - CmdLine:
    - npm install && npm update && npm install pm2 -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g --unsafe-perm node-red
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - flows/settings.js
    - /root/.node-red/settings.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - flows/flows.json
    - /root/.node-red/flows.json
  - CmdLine:
    - "cd /root/.node-red/ && \tnpm install node-red-contrib-http-auth0 && \tnpm install
      node-red-contrib-aws-sdk && \tnpm install node-red-contrib-job-queue && \tnpm
      uninstall -g node-red-node-serialport && \tnpm rebuild"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "1880"
  - CmdLine:
    - pm2
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    - node-red
    - --no-daemon
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
