MetaArgs: null
Stages:
- BaseName: wolfdeng/alpine:3.7
  Commands:
  - Maintainer: Tony Deng (wolf.deng@gmail.com)
    Name: maintainer
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.3
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patch/*.patch
    - /go-alpine-patches/
  - CmdLine:
    - "set -eux;         apk add --no-cache --virtual .build-deps             bash
      \            gcc             musl-dev             openssl             go         ;
      \        export \t\t  GOROOT_BOOTSTRAP=\"$(go env GOROOT)\"     \t\tGOOS=\"$(go
      env GOOS)\"     \t\tGOARCH=\"$(go env GOARCH)\"     \t\tGOHOSTOS=\"$(go env
      GOHOSTOS)\"     \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\"     \t;     \tapkArch=\"$(apk
      --print-arch)\";     \tcase \"$apkArch\" in     \t\tarmhf) export GOARM='6'
      ;;     \t\tx86) export GO386='387' ;;     \tesac;     \t    \twget -O go.tgz
      \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\";     \techo '4e3d0ad6e91e02efa77d54e86c8b9e34fbe1cbc2935b6d38784dca93331c47ae
      *go.tgz' | sha256sum -c -;     \ttar -C /usr/local -xzf go.tgz;     \trm go.tgz;
      \    \t    \tcd /usr/local/go/src;     \tfor p in /go-alpine-patches/*.patch;
      do     \t\t[ -f \"$p\" ] || continue;     \t\tpatch -p2 -i \"$p\";     \tdone;
      \    \t./make.bash;     \t    \trm -rf /go-alpine-patches;     \tapk del .build-deps;
      \    \t    \texport PATH=\"/usr/local/go/bin:$PATH\";     \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go-wrapper
    - /usr/local/bin/
  From:
    Image: wolfdeng/alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM wolfdeng/alpine:3.7
