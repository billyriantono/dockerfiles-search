{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc:alpine-3.10",
      "SourceCode": "FROM frolvlad/alpine-glibc:alpine-3.10",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc:alpine-3.10"
      },
      "Commands": [
        {
          "Key": "CONDA_VERSION",
          "Name": "arg",
          "Value": "\"4.7.12.1\""
        },
        {
          "Key": "CONDA_MD5",
          "Name": "arg",
          "Value": "\"81c773ff87af5cfac79ab862942ab6b3\""
        },
        {
          "Key": "CONDA_DIR",
          "Name": "arg",
          "Value": "\"/opt/conda\""
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$CONDA_DIR/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONDONTWRITEBYTECODE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"**** install dev packages ****\" \u0026\u0026     apk add --no-cache --virtual .build-dependencies bash ca-certificates wget \u0026\u0026         echo \"**** get Miniconda ****\" \u0026\u0026     mkdir -p \"$CONDA_DIR\" \u0026\u0026     wget \"http://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh\" -O miniconda.sh \u0026\u0026     echo \"$CONDA_MD5  miniconda.sh\" | md5sum -c \u0026\u0026         echo \"**** install Miniconda ****\" \u0026\u0026     bash miniconda.sh -f -b -p \"$CONDA_DIR\" \u0026\u0026     echo \"export PATH=$CONDA_DIR/bin:\\$PATH\" \u003e /etc/profile.d/conda.sh \u0026\u0026         echo \"**** setup Miniconda ****\" \u0026\u0026     conda update --all --yes \u0026\u0026     conda config --set auto_update_conda False \u0026\u0026         echo \"**** cleanup ****\" \u0026\u0026     apk del --purge .build-dependencies \u0026\u0026     rm -f miniconda.sh \u0026\u0026     conda clean --all --force-pkgs-dirs --yes \u0026\u0026     find \"$CONDA_DIR\" -follow -type f \\( -iname '*.a' -o -iname '*.pyc' -o -iname '*.js.map' \\) -delete \u0026\u0026         echo \"**** finalize ****\" \u0026\u0026     mkdir -p \"$CONDA_DIR/locks\" \u0026\u0026     chmod 777 \"$CONDA_DIR/locks\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}