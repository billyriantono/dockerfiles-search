{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "William Yeh \u003cwilliam.pjyeh@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VER",
              "Value": "2.8.19"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TARBALL",
              "Value": "http://download.redis.io/releases/redis-$VER.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026         echo \"==\u003e Install curl and helper tools...\"  \u0026\u0026     DEBIAN_FRONTEND=noninteractive  apt-get install -y  curl make gcc  \u0026\u0026                 echo \"==\u003e Download, compile, and install...\"  \u0026\u0026     cd /tmp  \u0026\u0026     curl -L $TARBALL -o redis.tar.gz \u0026\u0026     tar xvzf redis.tar.gz  \u0026\u0026     cd redis-$VER  \u0026\u0026     make  \u0026\u0026     make install  \u0026\u0026             echo \"==\u003e Copy default configuration...\"  \u0026\u0026     cp -f src/redis-sentinel /usr/local/bin  \u0026\u0026     mkdir -p /etc/redis  \u0026\u0026     cp -f *.conf /etc/redis  \u0026\u0026     rm -rf /tmp/redis*  \u0026\u0026             echo \"==\u003e Configure for Dockerized version of Redis...\"  \u0026\u0026     sed -i 's/^\\(bind .*\\)$/#\\1/'       /etc/redis/redis.conf  \u0026\u0026     sed -i 's/^\\(daemonize .*\\)$/#\\1/'  /etc/redis/redis.conf  \u0026\u0026     sed -i 's/^\\(logfile .*\\)$/#\\1/'    /etc/redis/redis.conf  \u0026\u0026     sed -i 's/^\\(dir .*\\)$/dir \\/data/' /etc/redis/redis.conf  \u0026\u0026             echo \"==\u003e Clean up...\"  \u0026\u0026     apt-get remove -y --auto-remove curl make gcc  \u0026\u0026     apt-get clean  \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/etc/redis"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "usage.sh",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "client",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "benchmark",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "date '+%Y-%m-%dT%H:%M:%S%:z' \u003e /var/log/DOCKER_BUILD_TIME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usage.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}