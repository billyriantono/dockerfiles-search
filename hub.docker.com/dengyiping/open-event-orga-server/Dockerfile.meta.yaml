MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Scott Deng <scottdeng@live.cn>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: "9.4"
    Name: env
  - Env:
    - Key: PG_CONF
      Value: /etc/postgresql/$PG_VERSION/main/postgresql.conf
    Name: env
  - Env:
    - Key: PG_HBA
      Value: /etc/postgresql/$PG_VERSION/main/pg_hba.conf
    Name: env
  - Env:
    - Key: PG_DIR
      Value: /var/lib/postgresql/$PG_VERSION/main
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git wget
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main" > "/etc/apt/sources.list.d/pgdg.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/DengYiping/open-event-orga-server.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: open-event-orga-server
  - CmdLine:
    - apt-get install -y build-essential python python-dev python-setuptools python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libxml2-dev libxslt1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nginx uwsgi uwsgi-plugin-python
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y postgresql-$PG_VERSION postgresql-contrib-$PG_VERSION libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/" "/etc/postgresql/$PG_VERSION/main/postgresql.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "host    all             all             all                     md5" >>
      "/etc/postgresql/$PG_VERSION/main/pg_hba.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "client_encoding = utf8" >> "/etc/postgresql/$PG_VERSION/main/postgresql.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql restart
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -v -c -i en_US -f UTF-8 en_US.UTF-8; exit 0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y postgresql postgresql-contrib libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql restart
    Name: run
    PrependShell: true
  - Name: user
    User: postgres
  - CmdLine:
    - /etc/init.d/postgresql start     && psql --command "CREATE USER open_event_user
      WITH PASSWORD 'start';"     && psql --command "CREATE DATABASE test WITH OWNER=open_event_user
      LC_COLLATE='en_US.utf8' LC_CTYPE='en_US.utf8' ENCODING='UTF8' TEMPLATE=template0;"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - export DATABASE_URL=postgresql://open_event_user:start@localhost:5432/test
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - python create_db.py
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export DATABASE_URL=$DATABASE_URL" >> /open-event-orga-server/.bashrc
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5000"
    - "80"
  - CmdLine:
    - chmod 0755 *.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
