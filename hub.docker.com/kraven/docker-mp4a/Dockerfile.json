{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jfloff/alpine-python:3.4",
      "SourceCode": "FROM jfloff/alpine-python:3.4",
      "Platform": "",
      "From": {
        "Image": "jfloff/alpine-python:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Benjamin Runnels \u003ckraven@kraven.org",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SOFTWARE_VERSION",
              "Value": "3.3.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOFTWARE_VERSION_URL",
              "Value": "http://ffmpeg.org/releases/ffmpeg-${SOFTWARE_VERSION}.tar.bz2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BIN",
              "Value": "/usr/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp/ffmpeg"
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 apk update \u0026\u0026 apk upgrade \u0026\u0026 apk --no-cache add   git   freetype-dev   gnutls-dev   lame-dev   libass-dev   libogg-dev   libtheora-dev   libvorbis-dev   libvpx-dev   libwebp-dev   libssh2   opus-dev   rtmpdump-dev   x264-dev   x265-dev   yasm-dev   libffi-dev \u0026\u0026 apk add --no-cache   --virtual   .build-dependencies   build-base   bzip2   coreutils   gnutls   nasm   tar   x264 \u0026\u0026 echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026 apk add --update --no-cache fdk-aac-dev \u0026\u0026 echo \"http://dl-cdn.alpinelinux.org/alpine/v3.4/main/\" \u003e /etc/apk/repositories \u0026\u0026 DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026 wget ${SOFTWARE_VERSION_URL} \u0026\u0026 tar xjvf ffmpeg-${SOFTWARE_VERSION}.tar.bz2  \u0026\u0026 cd ffmpeg* \u0026\u0026 PATH=\"$BIN:$PATH\" \u0026\u0026 ./configure     --disable-ffplay     --enable-avresample     --enable-gnutls     --enable-gpl     --enable-libass     --enable-libfreetype     --enable-libmp3lame     --enable-libopus     --enable-librtmp     --enable-libtheora     --enable-libvorbis     --enable-libvpx     --enable-libwebp     --enable-libx264     --enable-libx265     --enable-nonfree     --enable-postproc     --enable-small     --enable-version3     --enable-libfdk-aac     --enable-openssl     --enable-runtime-cpudetect     --disable-debug \u0026\u0026 make -j20 \u0026\u0026 make -j20 install \u0026\u0026 make -j20 distclean \u0026\u0026 rm -rf ${DIR}  \u0026\u0026 apk del --purge   .build-dependencies \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/share"
        },
        {
          "CmdLine": [
            "git clone -b master --single-branch git://github.com/brunnels/sickbeard_mp4_automator.git mp4_automator \u0026\u0026 wget https://bootstrap.pypa.io/ez_setup.py -O - | python \u0026\u0026 rm -rf setuptools-33.1.1.zip \u0026\u0026 pip install requests \u0026\u0026 pip install requests-cache \u0026\u0026 pip install babelfish \u0026\u0026 pip install \"guessit\u003c2\" \u0026\u0026 pip install stevedore==1.19.1 \u0026\u0026 pip install \"subliminal\u003c2\" \u0026\u0026 pip install deluge-client \u0026\u0026 pip install qtfaststart \u0026\u0026 pip install requests[security]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "autoProcess.ini",
            "/usr/share/mp4_automator/autoProcess.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "processFolder.sh",
            "/usr/share/mp4_automator/processFolder.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "_lib_jobs.sh",
            "/usr/share/_lib_jobs.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/outgoing",
            "/incoming"
          ]
        }
      ]
    }
  ]
}