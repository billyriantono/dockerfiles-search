{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "toopher/centos-i386:centos6",
      "SourceCode": "FROM toopher/centos-i386:centos6",
      "Platform": "",
      "From": {
        "Image": "toopher/centos-i386:centos6"
      },
      "Commands": [
        {
          "Maintainer": "Dmitry Svintsov \u003croot@uralbash.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME_USER",
              "Value": "vagrant"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME_PASS",
              "Value": "123"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash ${HOME_USER} -u 1000 \u0026\u0026     echo \"${HOME_USER}:${HOME_PASS}\"|chpasswd \u0026\u0026     groupadd sudo \u0026\u0026     gpasswd -a ${HOME_USER} sudo \u0026\u0026     echo ${HOME_USER}' ALL=(ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "this.py",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /this.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y install openssh-server openssh-clients"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/ssh/ssh_host_rsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/ssh/ssh_host_dsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/ssh/ssh_host_ecdsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -N \"\" -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/vagrant/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 0700 /home/vagrant/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\" \u003e /home/vagrant/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 0600 /home/vagrant/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R vagrant: /home/vagrant/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/sudoers.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install -b -m 0440 /dev/null /etc/sudoers.d/vagrant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'vagrant ALL=NOPASSWD: ALL' \u003e\u003e /etc/sudoers.d/vagrant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/Defaults    requiretty/#Defaults    requiretty/g' /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum install bzip2 tar wget -yyy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://mirror.tochlab.net/pub/gnu/gcc/gcc-4.8.2/gcc-4.8.2.tar.gz \u0026\u0026 tar xvzf gcc-4.8.2.tar.gz \u0026\u0026 rm gcc-4.8.2.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum groupinstall \"Development Tools\" -yyy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum install glibc-devel.i686 glibc-devel ibstdc++-devel.i686 -yyy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum install gcc gcc.i686 -yyy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum install gcc gcc.i386 -yyy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum install glibc-devel.i386 glibc-devel ibstdc++-devel.i386 -yyy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/gcc-4.8.2 \u0026\u0026 ./contrib/download_prerequisites"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/objdir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/objdir"
        },
        {
          "CmdLine": [
            "/tmp/gcc-4.8.2/configure       --prefix=/opt/gcc-4.8.2       --build=i686-pc-linux-gnu \"CFLAGS=-m32\" \"CXXFLAGS=-m32\" \"LDFLAGS=-m32\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/lib/libstdc++.so.6 /usr/lib/libstdc++.so.6.backup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -P /opt/gcc-4.8.2/lib/libstdc++.so.6 /usr/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/gcc-4.8.2/lib/libstdc++.so.6.0.18 /usr/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y install libX11-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y groupinstall \"X Window System\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y install libxcb libxcb-devel xcb-util xcb-util-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y install freetype-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/this.py \u0026\u0026 yum -y install fontconfig-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y perl-Digest-SHA"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -m 0755 /nix \u0026\u0026 chown ${HOME_USER} /nix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${HOME_USER}"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "${HOME_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/${HOME_USER}"
        },
        {
          "CmdLine": [
            "curl https://nixos.org/nix/install | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". .nix-profile/etc/profile.d/nix.sh \u0026\u0026     nix-channel --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". .nix-profile/etc/profile.d/nix.sh \u0026\u0026     nix-env -i git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "yum -y remove git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /home/vagrant/.nix-profile/bin/git /usr/bin/git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Expression": "CMD [\"/usr/sbin/sshd\", \"-D\"]",
          "Name": "onbuild"
        },
        {
          "Expression": "EXPOSE 22",
          "Name": "onbuild"
        }
      ]
    }
  ]
}