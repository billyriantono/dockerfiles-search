{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "downloader",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 as downloader",
      "Platform": "",
      "As": "downloader",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache wget tar xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz \u0026\u0026     tar xf Python-${PYTHON_VERSION}.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "kotaru23",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y     git     build-essential     libreadline-dev     libsqlite3-dev     libssl-dev     zlib1g-dev     libbz2-dev     xz-utils     wget     llvm     libncurses5-dev     libncursesw5-dev     tk-dev     libffi-dev     gfortran     libopenblas-dev     liblapack-dev  \u0026\u0026     apt-get autoremove -y \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "downloader",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/src/Python-${PYTHON_VERSION}",
            "/usr/local/src/python"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/python/"
        },
        {
          "CmdLine": [
            "./configure --with-ensurepip --enable-optimizations \u0026\u0026     make -j \u0026\u0026     make install \u0026\u0026     rm -rf /usr/local/src/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir     numpy     scipy     scikit-learn     pandas     xgboost     imbalanced-learn     h5py     joblib     tqdm     click"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/apps"
        },
        {
          "CmdLine": [
            "python3"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}