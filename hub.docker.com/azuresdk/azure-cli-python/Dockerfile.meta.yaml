MetaArgs:
- DefaultValue: '"3.6.4"'
  Key: PYTHON_VERSION
  ProvidedValue: null
  Value: '"3.6.4"'
Stages:
- BaseName: python:${PYTHON_VERSION}-alpine3.7
  Commands:
  - Key: CLI_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: maintainer
      Value: '"Microsoft"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.vendor
      Value: '"Microsoft"'
    - Key: org.label-schema.name
      Value: '"Azure CLI"'
    - Key: org.label-schema.version
      Value: $CLI_VERSION
    - Key: org.label-schema.license
      Value: '"MIT"'
    - Key: org.label-schema.description
      Value: '"The Azure CLI is used for all Resource Manager deployments in Azure."'
    - Key: org.label-schema.url
      Value: '"https://docs.microsoft.com/en-us/cli/azure/overview"'
    - Key: org.label-schema.usage
      Value: '"https://docs.microsoft.com/en-us/cli/azure/install-az-cli2#docker"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/Azure/azure-cli.git"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -v \${HOME}/.azure:/root/.azure -it microsoft/azure-cli:$CLI_VERSION"'
    Name: label
  - CmdLine:
    - apk add --no-cache bash openssh ca-certificates jq curl openssl git  && apk
      add --no-cache --virtual .build-deps gcc make openssl-dev libffi-dev musl-dev  &&
      update-ca-certificates
    Name: run
    PrependShell: true
  - Key: JP_VERSION
    Name: arg
    Value: '"0.1.3"'
  - CmdLine:
    - curl https://github.com/jmespath/jp/releases/download/${JP_VERSION}/jp-linux-amd64
      -o /usr/local/bin/jp  && chmod +x /usr/local/bin/jp  && pip install --no-cache-dir
      --upgrade jmespath-terminal
    Name: run
    PrependShell: true
  - Name: workdir
    Path: azure-cli
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /azure-cli
  - CmdLine:
    - /bin/bash -c 'TMP_PKG_DIR=$(mktemp -d);     for d in src/azure-cli src/azure-cli-telemetry
      src/azure-cli-core src/azure-cli-nspkg src/azure-cli-command_modules-nspkg src/command_modules/azure-cli-*/;     do
      cd $d; echo $d; python setup.py bdist_wheel -d $TMP_PKG_DIR; cd -;     done;     [
      -d privates ] && cp privates/*.whl $TMP_PKG_DIR;     all_modules=`find $TMP_PKG_DIR
      -name "*.whl"`;     pip install --no-cache-dir $all_modules;     pip install
      --no-cache-dir --force-reinstall --upgrade azure-nspkg azure-mgmt-nspkg;'  &&
      cat /azure-cli/az.completion > ~/.bashrc  && runDeps="$(     scanelf --needed
      --nobanner --recursive /usr/local         | awk '{ gsub(/,/, "\nso:", $2); print
      "so:" $2 }'         | sort -u         | xargs -r apk info --installed         |
      sort -u     )"  && apk add --virtual .rundeps $runDeps
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - rm -rf ./azure-cli &&     dos2unix /root/.bashrc /usr/local/bin/az
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: true
  From:
    Image: python:${PYTHON_VERSION}-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:${PYTHON_VERSION}-alpine3.7
