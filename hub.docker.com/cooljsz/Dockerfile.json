{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jre-alpine",
      "SourceCode": "FROM openjdk:8-jre-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jre-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"mritd \u003cmritd1234@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "TZ",
          "Name": "arg",
          "Value": "\"Asia/Shanghai\""
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "${TZ}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_VERSION",
              "Value": "5.6.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_HOME",
              "Value": "/usr/local/logstash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_TARBALL",
              "Value": "https://artifacts.elastic.co/downloads/logstash/logstash-${LOGSTASH_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 addgroup -S logstash     \u0026\u0026 adduser -S -G logstash logstash     \u0026\u0026 apk upgrade --update     \u0026\u0026 apk add 'su-exec\u003e=0.2' bash tzdata     \u0026\u0026 apk add --virtual .fetch-deps         wget         ca-certificates         tar     \u0026\u0026 wget -O logstash.tar.gz \"${LOGSTASH_TARBALL}\"     \u0026\u0026 tar -zxf logstash.tar.gz     \u0026\u0026 mv logstash-${LOGSTASH_VERSION} ${LOGSTASH_HOME}     \u0026\u0026 mkdir -p /data/logstash /var/log/logstash     \u0026\u0026 chown -R logstash:logstash ${LOGSTASH_HOME} /data /var/log/logstash     \u0026\u0026 ln -sf ${LOGSTASH_HOME}/bin/* /usr/local/bin     \u0026\u0026 ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime     \u0026\u0026 echo ${TZ} \u003e /etc/timezone     \u0026\u0026 apk del .fetch-deps     \u0026\u0026 rm -rf logstash.tar.gz.asc         logstash.tar.gz         ${logstash_HOME}/bin/*.exe         ${logstash_HOME}/bin/*.bat         /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "${logstash_HOME}/config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/var/log/logstash"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-e",
            ""
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}