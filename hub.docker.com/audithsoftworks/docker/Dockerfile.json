{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm",
      "SourceCode": "FROM php:7.3-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Shahriyar Imanov \u003cshehi@imanov.me\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y apt-utils     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 mkdir -p /usr/share/man/man1     \u0026\u0026 apt-get install -y         bzip2         cron         daemon         fontforge         git         gnupg         iputils-ping         locales         locales-all         mariadb-client         nano         openjdk-11-jre         procps         rsyslog         sudo         telnet         unzip         wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 locale-gen de_DE.UTF-8 \u0026\u0026 dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "docker-php-ext-install         bcmath         calendar         exif         gettext         pdo_mysql         sockets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libfreetype6-dev libjpeg-dev libjpeg62-turbo-dev libpng-dev     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include     \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libicu-dev \u0026\u0026 docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libmcrypt-dev libmemcached-dev     \u0026\u0026 pecl install -of mcrypt memcached     \u0026\u0026 docker-php-ext-enable mcrypt memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpq-dev \u0026\u0026 docker-php-ext-install pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libxml2-dev \u0026\u0026 docker-php-ext-install soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libxslt1-dev \u0026\u0026 docker-php-ext-install xsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libzip-dev \u0026\u0026 docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -of mongodb     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/mongo.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -of xdebug     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 echo \"zend_extension=xdebug.so\" | tee /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.max_nesting_level = 1000\" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.idekey = basisPhp\" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable = 1\" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_port = 54321\" | tee -a /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back = 1\" | tee -a /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "54321"
          ]
        },
        {
          "CmdLine": [
            "echo \"date.timezone = UTC\" | tee /usr/local/etc/php/conf.d/date.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/phpredis/phpredis.git /tmp/phpredis     \u0026\u0026 cd /tmp/phpredis     \u0026\u0026 git checkout 5.1.1     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo \"extension=redis.so\" | tee /usr/local/etc/php/conf.d/redis.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service rsyslog start \u0026\u0026 service cron start \u0026\u0026 service --status-all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -m"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 for key in         94AE36675C464D64BAFA68DD7434390BDBE9B9C5         FD3A5288F042B6850C66B31F09FE44734EB7990E         71DCFD284A79C3B38668286BC97EC7A07EDE3FC1         DD8F2338BAE7501E3DD5AC78C273792F7D83545D         C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8         B9AE9905FFD7803F25714661B63B535A4C206CA9         77984A986EBC2AA786BC0F66B01FBB92821C587A         8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600         4ED778F539E3634C779C87C6D7062848A1AB005C         A48C2BEE680E841632CD4E44F07496B3EB3C1762         B9E2F5981AA6E0CD28160D9FF13993A75599653C     ; do         gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||         gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||         gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "12.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_VERSION",
              "Value": "6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1     \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt     \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs     \u0026\u0026 npm install -g npm@$NPM_VERSION     \u0026\u0026 rm -rf /tmp/npm-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g ttf2eot jshint webpack webpack-cli prettier mocha"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9229"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install woff-tools     \u0026\u0026 git clone --depth=1 https://github.com/google/woff2.git /opt/woff2     \u0026\u0026 cd /opt/woff2     \u0026\u0026 git submodule init     \u0026\u0026 git submodule update     \u0026\u0026 make clean all     \u0026\u0026 chmod +x /opt/woff2/woff2_*     \u0026\u0026 git clone --depth=1 https://github.com/zoltan-dulac/css3FontConverter.git /opt/css3_font_converter     \u0026\u0026 chmod +x /opt/css3_font_converter/convertFonts.sh;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y         libasound2         libgconf-2-4         libgtk-3-dev         libnotify-dev         libnss3         libxss1         xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026   echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "FIREFOX_VERSION",
          "Name": "arg",
          "Value": "70.0.1"
        },
        {
          "CmdLine": [
            "wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2   \u0026\u0026 tar -C /opt -xjf /tmp/firefox.tar.bz2   \u0026\u0026 rm /tmp/firefox.tar.bz2   \u0026\u0026 ln -fs /opt/firefox/firefox /usr/bin/firefox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 apt-get remove -y gnupg     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PUID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "PGID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "groupadd -g $PGID audith \u0026\u0026 useradd -u $PUID -g audith -M audith"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG sudo audith"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/%sudo.*/%sudo ALL=(ALL:ALL) NOPASSWD: ALL/g\" /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./profile",
            "/etc/profile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./profile",
            "/etc/bashrc"
          ]
        },
        {
          "Name": "user",
          "User": "audith"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/woff2:/opt/css3_font_converter"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}