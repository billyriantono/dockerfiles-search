{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:12.04",
      "SourceCode": "FROM ubuntu:12.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:12.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026\tupdate-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026apt-get install -q -y autoconf binutils-doc bison build-essential flex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y ruby-rvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y varnish"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:cartodb/postgresql-9.5 \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y libpq5                      libpq-dev                      postgresql-client-9.5                      postgresql-client-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y postgresql-9.5                      postgresql-contrib-9.5                      postgresql-server-dev-9.5                      postgresql-plpython-9.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\\(peer\\|md5\\)/trust/' /etc/postgresql/9.5/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026 createuser publicuser --no-createrole --no-createdb --no-superuser -U postgres \u0026\u0026 createuser tileuser --no-createrole --no-createdb --no-superuser -U postgres \u0026\u0026 service postgresql stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/CartoDB/cartodb-postgresql.git \u0026\u0026cd cartodb-postgresql \u0026\u0026git checkout 0.18.5 \u0026\u0026PGUSER=postgres make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade -q -y \u0026\u0026 add-apt-repository ppa:cartodb/gis \u0026\u0026 apt-get update \u0026\u0026 apt-get install -q -y proj proj-bin proj-data libproj-dev \u0026\u0026 apt-get install -q -y libjson0 libjson0-dev python-simplejson \u0026\u0026 apt-get install -q -y libgeos-c1v5 libgeos-dev \u0026\u0026 apt-get install -q -y gdal-bin libgdal1-dev libgdal-dev \u0026\u0026 apt-get install -q -y gdal2.1-static-bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q -y install libxml2-dev \u0026\u0026apt-get install -q -y liblwgeom-2.2.2 postgis postgresql-9.5-postgis-2.2 postgresql-9.5-postgis-scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026   createdb -T template0 -O postgres -U postgres -E UTF8 template_postgis \u0026\u0026  psql -U postgres template_postgis -c 'CREATE EXTENSION postgis;CREATE EXTENSION postgis_topology;' \u0026\u0026  ldconfig \u0026\u0026  service postgresql stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:cartodb/redis \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:cartodb/nodejs-010 \u0026\u0026 apt-get update \u0026\u0026apt-get install -q -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/CartoDB/CartoDB-SQL-API.git \u0026\u0026cd CartoDB-SQL-API \u0026\u0026git checkout 1.42.6 \u0026\u0026npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/CartoDB/Windshaft-cartodb.git \u0026\u0026cd Windshaft-cartodb \u0026\u0026git checkout 2.87.3 \u0026\u0026apt-get install -q -y libpango1.0-dev \u0026\u0026npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y wget \u0026\u0026wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz \u0026\u0026tar -xzvf ruby-install-0.5.0.tar.gz \u0026\u0026cd ruby-install-0.5.0/ \u0026\u0026make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q -y install libreadline6-dev openssl \u0026\u0026ruby-install ruby 2.2.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/rubies/ruby-2.2.3/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install bundler \u0026\u0026gem install compass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/CartoDB/cartodb.git \u0026\u0026cd cartodb \u0026\u0026wget  -O /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py \u0026\u0026python /tmp/get-pip.py \u0026\u0026apt-get install -q -y python-all-dev \u0026\u0026apt-get install -q -y imagemagick unp zip \u0026\u0026bundle install \u0026\u0026npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CPLUS_INCLUDE_PATH",
              "Value": "/usr/include/gdal"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "C_INCLUDE_PATH",
              "Value": "/usr/include/gdal"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/include/gdal"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd cartodb \u0026\u0026 pip install --no-use-wheel -r python_requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/SQLAPI-prod.js",
            "/CartoDB-SQL-API/config/environments/production.js"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/WS-prod.js",
            "/Windshaft-cartodb/config/environments/production.js"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/app_config.yml",
            "/cartodb/config/app_config.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/database.yml",
            "/cartodb/config/database.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/grunt_production.json",
            "/cartodb/config/grunt_production.json"
          ]
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen pt_BR.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "pt_BR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd cartodb \u0026\u0026    git checkout 4.0.4 \u0026\u0026    npm install npm@2.14.16 -g \u0026\u0026    npm -v \u0026\u0026    export PATH=$PATH:$PWD/node_modules/grunt-cli/bin \u0026\u0026    bundle install \u0026\u0026    bundle exec grunt --environment production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026 service redis-server start \u0026\u0026    cd cartodb \u0026\u0026    bundle exec rake db:create \u0026\u0026    bundle exec rake db:migrate \u0026\u0026    service postgresql stop \u0026\u0026 service redis-server stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./create_user",
            "/cartodb/script/create_user"
          ]
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026 service redis-server start \u0026\u0026 \tbash -l -c \"cd /cartodb \u0026\u0026 bash script/create_user\" \u0026\u0026 \tservice postgresql stop \u0026\u0026 service redis-server stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000",
            "8080",
            "8181"
          ]
        },
        {
          "Env": [
            {
              "Key": "GDAL_DATA",
              "Value": "/usr/share/gdal/2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./startup.sh",
            "/opt/startup.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/varnish",
            "/etc/default/varnish"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/postgresql",
            "/var/log/postgresql",
            "/var/lib/postgresql",
            "/data",
            "/cartodb/public/assets"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/opt/startup.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}