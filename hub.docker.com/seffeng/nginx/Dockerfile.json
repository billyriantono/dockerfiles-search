{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "seffeng/alpine:latest",
      "SourceCode": "FROM    seffeng/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "seffeng/alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "seffeng \"seffeng@sina.cn\"",
          "Name": "maintainer"
        },
        {
          "Key": "BASE_DIR",
          "Name": "arg",
          "Value": "\"/opt/websrv\""
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.16.1"
            },
            {
              "Key": "PCRE_VERSION",
              "Value": "\"pcre-8.43\""
            },
            {
              "Key": "ZLIB_VERSION",
              "Value": "\"zlib-1.2.11\""
            },
            {
              "Key": "CONFIG_DIR",
              "Value": "\"${BASE_DIR}/config\""
            },
            {
              "Key": "INSTALL_DIR",
              "Value": "${BASE_DIR}/program/nginx"
            },
            {
              "Key": "EXTEND",
              "Value": "\"gcc g++ make bzip2 perl openssl-dev file\""
            },
            {
              "Key": "WWWROOT_DIR",
              "Value": "\"${BASE_DIR}/data/wwwroot\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_URL",
              "Value": "\"http://nginx.org/download/${NGINX_VERSION}.tar.gz\""
            },
            {
              "Key": "PCRE_URL",
              "Value": "\"https://ftp.pcre.org/pub/pcre/${PCRE_VERSION}.tar.gz\""
            },
            {
              "Key": "ZLIB_URL",
              "Value": "\"http://zlib.net/${ZLIB_VERSION}.tar.gz\""
            },
            {
              "Key": "CONFIGURE",
              "Value": "\"./configure --conf-path=${CONFIG_DIR}/nginx/nginx.conf --error-log-path=${BASE_DIR}/logs/error.log --group=wwww --http-log-path=${BASE_DIR}/logs/access.log --lock-path=${BASE_DIR}/tmp/nginx.lock --pid-path=${BASE_DIR}/tmp/nginx.pid --prefix=${INSTALL_DIR} --sbin-path=${INSTALL_DIR}/sbin/nginx --user=www --with-http_addition_module --with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-mail --with-mail_ssl_module --with-pcre=/tmp/${PCRE_VERSION} --with-stream_realip_module --with-stream_ssl_module --with-zlib=/tmp/${ZLIB_VERSION}\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf",
            "./conf"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add ${EXTEND} \u0026\u0026 wget ${NGINX_URL} \u0026\u0026 wget ${PCRE_URL} \u0026\u0026 wget ${ZLIB_URL} \u0026\u0026 tar -zxf ${NGINX_VERSION}.tar.gz \u0026\u0026 tar -zxf ${PCRE_VERSION}.tar.gz \u0026\u0026 tar -zxf ${ZLIB_VERSION}.tar.gz \u0026\u0026 mkdir -p ${WWWROOT_DIR} ${BASE_DIR}/logs ${BASE_DIR}/tmp ${CONFIG_DIR}/nginx/certs.d \u0026\u0026 addgroup wwww \u0026\u0026 adduser -H -D -G wwww www \u0026\u0026 cd ${NGINX_VERSION} \u0026\u0026 ${CONFIGURE} \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 ln -s ${INSTALL_DIR}/sbin/nginx /usr/bin/nginx \u0026\u0026 cp -Rf /tmp/conf/* ${CONFIG_DIR}/nginx \u0026\u0026 apk del ${EXTEND} \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${CONFIG_DIR}/nginx/conf.d",
            "${CONFIG_DIR}/nginx/certs.d",
            "${BASE_DIR}/logs",
            "${WWWROOT_DIR}",
            "${BASE_DIR}/tmp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}