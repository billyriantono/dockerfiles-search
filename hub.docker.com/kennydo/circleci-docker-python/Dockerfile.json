{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "chinesedewey@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y locales     \u0026\u0026 sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     \u0026\u0026 dpkg-reconfigure --frontend=noninteractive locales     \u0026\u0026 update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:/opt/cli_venv/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y software-properties-common   \u0026\u0026 add-apt-repository -y ppa:maxmind/ppa   \u0026\u0026 add-apt-repository -y ppa:deadsnakes/ppa   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y     curl     git-all     language-pack-id     libcurl4-openssl-dev     libffi-dev     libjpeg-dev     libmaxminddb-dev     libmaxminddb0     libmysqlclient-dev     libpng-dev     libpq-dev     libssl-dev     libxml2-dev     libxslt1-dev     mmdb-bin     mysql-client     ntp     postgresql-client     python3.6     python3.6-dev     python3.6-venv     unzip     wget     zlib1g-dev   \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /usr/share/GeoIP \u0026\u0026     chmod 755 /usr/share/GeoIP \u0026\u0026     cd /usr/share/GeoIP/ \u0026\u0026     wget http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \u0026\u0026     tar xzvf GeoLite2-City.tar.gz \u0026\u0026     mv GeoLite2-City_*/GeoLite2-City.mmdb GeoIP2-City.mmdb \u0026\u0026     rm -r GeoLite2-City_* GeoLite2-City.tar.gz \u0026\u0026     chmod 444 GeoIP2-City.mmdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz   \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz   \u0026\u0026 rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O /usr/local/bin/jq   \u0026\u0026 chmod a+x /usr/local/bin/jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3.6 -m venv /opt/cli_venv   \u0026\u0026 /opt/cli_venv/bin/pip install --upgrade pip   \u0026\u0026 /opt/cli_venv/bin/pip install --upgrade awscli requests   \u0026\u0026 rm -r /root/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}