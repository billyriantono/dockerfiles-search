{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkinsci/jnlp-slave",
      "SourceCode": "FROM jenkinsci/jnlp-slave",
      "Platform": "",
      "From": {
        "Image": "jenkinsci/jnlp-slave"
      },
      "Commands": [
        {
          "Maintainer": "Brad Pinter \u003cbrad.pinter@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.name",
              "Value": "\"Jenkins JNLP-enabled slave agent\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"A Jenkins slave agent that is intended to be used with a Jenkins master that has the kubernernetes plugin installed.\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"CDW\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://cdw.com\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0.0-rc.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y --no-install-recommends       g++       gcc       libc6-dev       make       jq \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_CORE_DISABLE_PROMPTS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://sdk.cloud.google.com | bash \u0026\u0026 mv google-cloud-sdk /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gcloud components install kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /usr/bin/docker --no-check-certificate     https://get.docker.com/builds/Linux/x86_64/docker-1.10.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x /usr/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL \"https://storage.googleapis.com/kubernetes-helm/helm-$HELM_VERSION-linux-amd64.tar.gz\" -o helm.tar.gz \u0026\u0026     tar -C /usr/local/ -xzf helm.tar.gz \u0026\u0026     cp /usr/local/linux-amd64/helm /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.7.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_SHA256",
              "Value": "508028aac0654e993564b6e2014bf2d4a9751e3b286661b0b0040046cf18028e"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \u0026\u0026     echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \u0026\u0026     tar -C /usr/local -xzf golang.tar.gz \u0026\u0026     rm golang.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        },
        {
          "CmdLine": [
            "go get -u github.com/Masterminds/glide \u0026\u0026     go get -u github.com/tools/godep \u0026\u0026     go get github.com/alecthomas/gometalinter \u0026\u0026     gometalinter --install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}