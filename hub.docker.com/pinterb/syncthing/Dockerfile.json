{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pinterb/base:alpine",
      "SourceCode": "FROM pinterb/base:alpine",
      "Platform": "",
      "From": {
        "Image": "pinterb/base:alpine"
      },
      "Commands": [
        {
          "Maintainer": "Brad Pinter \u003cbrad.pinter@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"Syncthing\""
            },
            {
              "Key": "net.syncthing.version",
              "Value": "\"0.14.7\""
            },
            {
              "Key": "net.syncthing.release-date",
              "Value": "\"2016-09-21\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SYNCTHING_VERSION",
              "Value": "0.14.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_PKG_VERSION",
              "Value": "2.23-r3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PUID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --update-cache ca-certificates bash sudo graphviz \u0026\u0026   curl -Lo /etc/apk/keys/sgerrand.rsa.pub \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/sgerrand.rsa.pub\" \u0026\u0026   curl -Lo glibc-${GLIBC_PKG_VERSION}.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-${GLIBC_PKG_VERSION}.apk\" \u0026\u0026   curl -Lo glibc-bin-${GLIBC_PKG_VERSION}.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-bin-${GLIBC_PKG_VERSION}.apk\" \u0026\u0026   curl -Lo glibc-i18n-${GLIBC_PKG_VERSION}.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-i18n-${GLIBC_PKG_VERSION}.apk\" \u0026\u0026   apk add glibc-${GLIBC_PKG_VERSION}.apk glibc-bin-${GLIBC_PKG_VERSION}.apk glibc-i18n-${GLIBC_PKG_VERSION}.apk \u0026\u0026   curl -Lo /syncthing.tar.gz \"https://github.com/syncthing/syncthing/releases/download/v${SYNCTHING_VERSION}/syncthing-linux-amd64-v${SYNCTHING_VERSION}.tar.gz\" \u0026\u0026   gunzip /syncthing.tar.gz \u0026\u0026 tar -xvf /syncthing.tar \u0026\u0026   mv /syncthing-linux-amd64-v${SYNCTHING_VERSION}/syncthing /bin/syncthing \u0026\u0026   rm -rf /syncthing-linux-amd64-v${SYNCTHING_VERSION} \u0026\u0026   rm -rf /syncthing.tar \u0026\u0026   apk del --purge curl ca-certificates \u0026\u0026   rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g $PGID dev \u0026\u0026   adduser -h /home/dev -u $PUID -D -G dev -s /bin/bash dev \u0026\u0026   sed -ri 's/(wheel:x:10:root)/\\1,dev/' /etc/group \u0026\u0026   sed -ri 's/# %wheel ALL=\\(ALL\\) NOPASSWD: ALL/%wheel ALL=\\(ALL\\) NOPASSWD: ALL/' /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "node_id",
            "/bin/node_id"
          ]
        },
        {
          "CmdLine": [
            "mkdir /data/ /ops/ /state/ /config/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /data/.extra /ops/.extra /state/.extra /config/.extra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R dev:dev /data \u0026\u0026     chown -R dev:dev /ops \u0026\u0026     chown -R dev:dev /state \u0026\u0026     chown -R dev:dev /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/ops",
            "/state",
            "/config"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22000",
            "8080",
            "8384"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/config"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-version"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}