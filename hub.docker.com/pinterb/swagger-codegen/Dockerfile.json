{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk-alpine",
      "SourceCode": "FROM openjdk:8-jdk-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Brad Pinter \"brad.pinter@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"Swagger\""
            },
            {
              "Key": "io.swagger.swagger-codegen.version",
              "Value": "\"2.2.0\""
            },
            {
              "Key": "io.swagger.swagger-codegen.release-date",
              "Value": "\"2016-07-17\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PUID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBUG",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MVN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWAGGER_CODEGEN_TAG",
              "Value": "2.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWAGGER_CODEGEN_GIT_REPO",
              "Value": "http://github.com/swagger-api/swagger-codegen.git"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add --no-cache bash sudo wget git ca-certificates \u0026\u0026   addgroup -g $PGID dev \u0026\u0026   adduser -h /config -u $PUID -H -D -G dev -s /bin/bash dev \u0026\u0026   sed -ri 's/(wheel:x:10:root)/\\1,dev/' /etc/group \u0026\u0026   sed -ri 's/# %wheel ALL=\\(ALL\\) NOPASSWD: ALL/%wheel ALL=\\(ALL\\) NOPASSWD: ALL/' /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://apache.mirrors.tds.net/maven/maven-3/3.3.9/binaries/apache-maven-${MVN_VERSION}-bin.tar.gz \u0026\u0026   tar -zxvf apache-maven-${MVN_VERSION}-bin.tar.gz \u0026\u0026   rm apache-maven-${MVN_VERSION}-bin.tar.gz \u0026\u0026   mv apache-maven-${MVN_VERSION} /usr/lib/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026  git clone --branch v$SWAGGER_CODEGEN_TAG --depth 1 $SWAGGER_CODEGEN_GIT_REPO  /opt/swagger-codegen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/swagger-codegen"
        },
        {
          "CmdLine": [
            "/usr/lib/mvn/bin/mvn clean package \u0026\u0026   mv /opt/swagger-codegen/modules/swagger-codegen-cli/target/swagger-codegen-cli.jar /opt/ \u0026\u0026   mv /opt/swagger-codegen/modules/swagger-codegen/target/swagger-codegen-2.2.0.jar /opt/ \u0026\u0026   mv /opt/swagger-codegen/modules/swagger-generator/target/swagger-generator-2.2.0.war /opt/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "rm -rf /opt/swagger-codegen/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del --purge wget ca-certificates git \u0026\u0026   rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data /output /state /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /data/.extra /output/.extra /state/.extra /config/.extra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R dev:dev /data \u0026\u0026     chown -R dev:dev /output \u0026\u0026     chown -R dev:dev /state \u0026\u0026     chown -R dev:dev /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/output",
            "/state",
            "/config"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--lang"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}