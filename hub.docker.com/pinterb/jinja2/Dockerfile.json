{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pinterb/base:alpine",
      "SourceCode": "FROM pinterb/base:alpine",
      "Platform": "",
      "From": {
        "Image": "pinterb/base:alpine"
      },
      "Commands": [
        {
          "Maintainer": "Brad Pinter \u003cbrad.pinter@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PUID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update   python-dev   python   sshpass   sudo   py-pip \u0026\u0026   pip install --upgrade pip \u0026\u0026   pip install   PyYAML   Jinja2   httplib2   urllib3   simplejson"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del   python-dev   make \u0026\u0026   rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g $PGID dev \u0026\u0026   adduser -h /config -u $PUID -H -D -G dev -s /bin/bash dev \u0026\u0026   mkdir -p /home/dev/bin \u0026\u0026   sed -ri 's/(wheel:x:10:root)/\\1,dev/' /etc/group \u0026\u0026   sed -ri 's/# %wheel ALL=\\(ALL\\) NOPASSWD: ALL/%wheel ALL=\\(ALL\\) NOPASSWD: ALL/' /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data/ /out/ \u0026\u0026  touch /data/.extra /out/.extra \u0026\u0026  chown -R dev:dev /data \u0026\u0026  chown -R dev:dev /out"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/out"
          ]
        },
        {
          "Env": [
            {
              "Key": "TEMPLATES_DIR",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUT_DIR",
              "Value": "/out"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEMPLATE",
              "Value": "my.tmpl"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "render.py",
            "/home/dev/bin/render.py"
          ]
        },
        {
          "CmdLine": [
            "chown -R dev:dev /home/dev \u0026\u0026 chmod 700 /home/dev/bin/render.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}