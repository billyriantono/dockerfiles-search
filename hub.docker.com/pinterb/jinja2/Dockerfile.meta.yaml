MetaArgs: null
Stages:
- BaseName: pinterb/base:alpine
  Commands:
  - Maintainer: Brad Pinter <brad.pinter@gmail.com>
    Name: maintainer
  - Env:
    - Key: PUID
      Value: "1000"
    Name: env
  - Env:
    - Key: PGID
      Value: "1000"
    Name: env
  - CmdLine:
    - apk add --update   python-dev   python   sshpass   sudo   py-pip &&   pip install
      --upgrade pip &&   pip install   PyYAML   Jinja2   httplib2   urllib3   simplejson
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del   python-dev   make &&   rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'addgroup -g $PGID dev &&   adduser -h /config -u $PUID -H -D -G dev -s /bin/bash
      dev &&   mkdir -p /home/dev/bin &&   sed -ri ''s/(wheel:x:10:root)/\1,dev/''
      /etc/group &&   sed -ri ''s/# %wheel ALL=\(ALL\) NOPASSWD: ALL/%wheel ALL=\(ALL\)
      NOPASSWD: ALL/'' /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data/ /out/ &&  touch /data/.extra /out/.extra &&  chown -R dev:dev /data
      &&  chown -R dev:dev /out
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
    - /out
  - Env:
    - Key: TEMPLATES_DIR
      Value: /data
    Name: env
  - Env:
    - Key: OUT_DIR
      Value: /out
    Name: env
  - Env:
    - Key: TEMPLATE
      Value: my.tmpl
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - render.py
    - /home/dev/bin/render.py
  - CmdLine:
    - chown -R dev:dev /home/dev && chmod 700 /home/dev/bin/render.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Name: workdir
    Path: /data
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: pinterb/base:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM pinterb/base:alpine
