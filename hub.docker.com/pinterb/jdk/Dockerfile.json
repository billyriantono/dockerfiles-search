{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pinterb/base:alpine",
      "SourceCode": "FROM pinterb/base:alpine",
      "Platform": "",
      "From": {
        "Image": "pinterb/base:alpine"
      },
      "Commands": [
        {
          "Maintainer": "Brad Pinter \u003cbrad.pinter@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION_MAJOR",
              "Value": "8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION_MINOR",
              "Value": "66"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION_BUILD",
              "Value": "17"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_PACKAGE",
              "Value": "jdk"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add --update wget ca-certificates tar \u0026\u0026     apk add --update bash openssh-client sudo \u0026\u0026     wget -q \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk\" \u0026\u0026     apk add --allow-untrusted glibc-2.21-r2.apk \u0026\u0026     mkdir /opt \u0026\u0026     curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\"     http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz     | tar -xzf - -C /opt \u0026\u0026     ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \u0026\u0026     rm -rf /opt/jdk/*src.zip            /opt/jdk/lib/missioncontrol            /opt/jdk/lib/visualvm            /opt/jdk/lib/*javafx*            /opt/jdk/jre/lib/plugin.jar            /opt/jdk/jre/lib/ext/jfxrt.jar            /opt/jdk/jre/bin/javaws            /opt/jdk/jre/lib/javaws.jar            /opt/jdk/jre/lib/desktop            /opt/jdk/jre/plugin            /opt/jdk/jre/lib/deploy*            /opt/jdk/jre/lib/*javafx*            /opt/jdk/jre/lib/*jfx*            /opt/jdk/jre/lib/amd64/libdecora_sse.so            /opt/jdk/jre/lib/amd64/libprism_*.so            /opt/jdk/jre/lib/amd64/libfxplugins.so            /opt/jdk/jre/lib/amd64/libglass.so            /opt/jdk/jre/lib/amd64/libgstreamer-lite.so            /opt/jdk/jre/lib/amd64/libjavafx*.so            /opt/jdk/jre/lib/amd64/libjfx*.so \u0026\u0026     apk del --purge wget ca-certificates \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/jdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${JAVA_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup dev \u0026\u0026     adduser -G dev dev -D -h /home/dev \u0026\u0026     mkdir -p /home/dev/bin /home/dev/lib /home/dev/include /home/dev/.ssh \u0026\u0026     sed -ri 's/(wheel:x:10:root)/\\1,dev/' /etc/group \u0026\u0026     sed -ri 's/# %wheel ALL=\\(ALL\\) NOPASSWD: ALL/%wheel ALL=\\(ALL\\) NOPASSWD: ALL/' /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/dev/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ssh-keygen -t rsa -N '' -f /home/dev/.ssh/dummy_rsa \u0026\u0026     chown -R dev:dev /home/dev/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data/ /ops/ /state/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /data/.extra /ops/.extra /state/.extra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R dev:dev /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R dev:dev /ops"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R dev:dev /state"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/ops",
            "/state",
            "/home/dev/.ssh"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/dev"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "dev"
        },
        {
          "Name": "workdir",
          "Path": "/data"
        }
      ]
    }
  ]
}