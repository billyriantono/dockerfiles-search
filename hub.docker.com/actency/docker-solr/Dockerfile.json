{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:11-stretch",
      "SourceCode": "FROM openjdk:11-stretch",
      "Platform": "",
      "From": {
        "Image": "openjdk:11-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Martijn Koster \\\"mak-docker@greenhills.co.uk\\\"\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "repository",
              "Value": "\"https://github.com/docker-solr/docker-solr\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "SOLR_DOWNLOAD_SERVER",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y install acl dirmngr gpg lsof procps wget \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SOLR_USER",
              "Value": "\"solr\""
            },
            {
              "Key": "SOLR_UID",
              "Value": "\"8983\""
            },
            {
              "Key": "SOLR_GROUP",
              "Value": "\"solr\""
            },
            {
              "Key": "SOLR_GID",
              "Value": "\"8983\""
            },
            {
              "Key": "SOLR_VERSION",
              "Value": "\"7.7.2\""
            },
            {
              "Key": "SOLR_URL",
              "Value": "\"${SOLR_DOWNLOAD_SERVER:-https://archive.apache.org/dist/lucene/solr}/7.7.2/solr-7.7.2.tgz\""
            },
            {
              "Key": "SOLR_SHA256",
              "Value": "\"eb8ee4038f25364328355de3338e46961093e39166c9bcc28b5915ae491320df\""
            },
            {
              "Key": "SOLR_KEYS",
              "Value": "\"2CECBFBA181601547B654B9FFA81AC8A490F538E\""
            },
            {
              "Key": "PATH",
              "Value": "\"/opt/solr/bin:/opt/docker-solr/scripts:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_KEY",
              "Value": "B42F6819007F00F88E364FD4036A9C25BF357DD4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_KEY",
              "Value": "595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -r --gid \"$SOLR_GID\" \"$SOLR_GROUP\" \u0026\u0026   useradd -r --uid \"$SOLR_UID\" --gid \"$SOLR_GID\" \"$SOLR_USER\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e;   export GNUPGHOME=\"/tmp/gnupg_home\" \u0026\u0026   mkdir -p \"$GNUPGHOME\" \u0026\u0026   chmod 700 \"$GNUPGHOME\" \u0026\u0026   echo \"disable-ipv6\" \u003e\u003e \"$GNUPGHOME/dirmngr.conf\" \u0026\u0026   for key in $SOLR_KEYS $GOSU_KEY $TINI_KEY; do     found='';     for server in       ha.pool.sks-keyservers.net       hkp://keyserver.ubuntu.com:80       hkp://p80.pool.sks-keyservers.net:80       pgp.mit.edu     ; do       echo \"  trying $server for $key\";       gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \u0026\u0026 found=yes \u0026\u0026 break;       gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \u0026\u0026 found=yes \u0026\u0026 break;     done;     test -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch $key from several disparate servers -- network issues?\" \u0026\u0026 exit 1;   done;   exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e;   export GNUPGHOME=\"/tmp/gnupg_home\" \u0026\u0026   pkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \u0026\u0026   wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch\" \u0026\u0026   wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch.asc\" \u0026\u0026   gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \u0026\u0026   rm /usr/local/bin/gosu.asc \u0026\u0026   chmod +x /usr/local/bin/gosu \u0026\u0026   gosu nobody true \u0026\u0026   wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-$pkgArch\" \u0026\u0026   wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-$pkgArch.asc\" \u0026\u0026   gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini;   rm /usr/local/bin/tini.asc \u0026\u0026   chmod +x /usr/local/bin/tini \u0026\u0026   tini --version \u0026\u0026   echo \"downloading $SOLR_URL\" \u0026\u0026   wget -nv \"$SOLR_URL\" -O \"/opt/solr-$SOLR_VERSION.tgz\" \u0026\u0026   echo \"downloading $SOLR_URL.asc\" \u0026\u0026   wget -nv \"$SOLR_URL.asc\" -O \"/opt/solr-$SOLR_VERSION.tgz.asc\" \u0026\u0026   echo \"$SOLR_SHA256 */opt/solr-$SOLR_VERSION.tgz\" | sha256sum -c - \u0026\u0026   (\u003e\u00262 ls -l \"/opt/solr-$SOLR_VERSION.tgz\" \"/opt/solr-$SOLR_VERSION.tgz.asc\") \u0026\u0026   gpg --batch --verify \"/opt/solr-$SOLR_VERSION.tgz.asc\" \"/opt/solr-$SOLR_VERSION.tgz\" \u0026\u0026   tar -C /opt --extract --file \"/opt/solr-$SOLR_VERSION.tgz\" \u0026\u0026   mv \"/opt/solr-$SOLR_VERSION\" /opt/solr \u0026\u0026   rm \"/opt/solr-$SOLR_VERSION.tgz\"* \u0026\u0026   rm -Rf /opt/solr/docs/ \u0026\u0026   mkdir -p /opt/solr/server/solr/lib /docker-entrypoint-initdb.d /opt/docker-solr \u0026\u0026   mkdir -p /opt/solr/server/solr /opt/solr/server/logs /opt/mysolrhome \u0026\u0026   sed -i -e \"s/\\\"\\$(whoami)\\\" == \\\"root\\\"/\\$(id -u) == 0/\" /opt/solr/bin/solr \u0026\u0026   sed -i -e 's/lsof -PniTCP:/lsof -t -PniTCP:/' /opt/solr/bin/solr \u0026\u0026   if [ -f \"/opt/solr/contrib/prometheus-exporter/bin/solr-exporter\" ]; then chmod 0755 \"/opt/solr/contrib/prometheus-exporter/bin/solr-exporter\"; fi \u0026\u0026   chmod -R 0755 /opt/solr/server/scripts/cloud-scripts \u0026\u0026   chown -R \"$SOLR_USER:$SOLR_GROUP\" /opt/solr /docker-entrypoint-initdb.d /opt/docker-solr \u0026\u0026   chown -R \"$SOLR_USER:$SOLR_GROUP\" /opt/mysolrhome \u0026\u0026   { command -v gpgconf \u0026\u0026 gpgconf --kill all || :; } \u0026\u0026   rm -r \"$GNUPGHOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "solr:solr",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "/opt/docker-solr/scripts"
          ]
        },
        {
          "CmdLine": [
            "chmod -R +x /opt/docker-solr/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config",
            "/tmp/config-drupal"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt/solr/server/solr/collection1/conf \u0026\u0026     mkdir -p /opt/solr/server/solr/collection1/data \u0026\u0026     cd /tmp/config-drupal \u0026\u0026 cp -f * /opt/solr/server/solr/collection1/conf/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./core.properties",
            "/tmp/core.properties"
          ]
        },
        {
          "CmdLine": [
            "cp -f /tmp/core.properties /opt/solr/server/solr/collection1/core.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R solr:solr /opt/solr/server/solr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8983"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/solr"
        },
        {
          "Name": "user",
          "User": "$SOLR_USER"
        },
        {
          "CmdLine": [
            "bash",
            "/opt/docker-solr/scripts/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "solr-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}