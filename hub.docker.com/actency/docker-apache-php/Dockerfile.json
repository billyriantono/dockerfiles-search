{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.12-apache",
      "SourceCode": "FROM php:7.3.12-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.3.12-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install --fix-missing wget apt-transport-https lsb-release ca-certificates gnupg2 -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install --fix-missing -y   ruby-dev   rubygems   imagemagick   graphviz   memcached   libmemcached-tools   libmemcached-dev   libjpeg62-turbo-dev   libmcrypt-dev   libxml2-dev   libxslt1-dev   default-mysql-client   sudo   git   vim   zip   wget   htop   iputils-ping   dnsutils   telnet   linux-libc-dev   libyaml-dev   libpng-dev   zlib1g-dev   libzip-dev   libicu-dev   libpq-dev   bash-completion   libldap2-dev   libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \u0026\u0026 echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y postgresql-client-9.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mcrypt-1.0.3 \u0026\u0026   docker-php-ext-enable mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd web -d /var/www -g www-data -s /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG sudo web"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'web ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install yaml-2.0.4 \u0026\u0026 echo \"extension=yaml.so\" \u003e /usr/local/etc/php/conf.d/ext-yaml.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --fix-missing automake ruby2.5-dev libtool -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install sass -v 3.5.6 ;  gem install compass;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash - \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y nodejs \u0026\u0026 npm install npm@latest -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g less \u0026\u0026 npm install -g less-plugin-clean-css"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 curl -sS http://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 mv composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/drush-ops/drush.git /usr/local/src/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r /usr/local/src/drush/ /usr/local/src/drush8/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r /usr/local/src/drush/ /usr/local/src/drush9/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/drush8 \u0026\u0026 git checkout -f 8.1.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/drush8 \u0026\u0026 composer update \u0026\u0026 composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/src/drush8/drush /usr/bin/drush8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/drush9 \u0026\u0026 git checkout 9.1.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/drush9 \u0026\u0026 composer update \u0026\u0026 composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/src/drush9/drush /usr/bin/drush9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026 wget http://xdebug.org/files/xdebug-2.9.0.tgz \u0026\u0026 tar -xvzf xdebug-2.9.0.tgz \u0026\u0026 cd xdebug-2.9.0/ \u0026\u0026 phpize \u0026\u0026 ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/xdebug-2.9.0 \u0026\u0026 cp modules/xdebug.so /usr/local/lib/php/extensions/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'zend_extension = /usr/local/lib/php/extensions/xdebug.so' \u003e\u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.remote_enable=1' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.remote_autostart=0' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.remote_connect_back=0' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.remote_port=9000' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.remote_log=/tmp/php7-xdebug.log' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.remote_host=docker_host' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo 'xdebug.idekey=PHPSTORM' \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/apache2.conf",
            "/etc/apache2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "core/envvars",
            "/etc/apache2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "core/other-vhosts-access-log.conf",
            "/etc/apache2/conf-enabled/"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/apache2/sites-enabled/000-default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOG_DIR",
              "Value": "/var/log/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_PID_FILE",
              "Value": "/var/run/apache2/apache2.pid"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_DIR",
              "Value": "/var/run/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOCK_DIR",
              "Value": "/var/lock/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOG_DIR",
              "Value": "/var/log/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "docker-php-ext-install opcache pdo_mysql \u0026\u0026 docker-php-ext-install mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-jpeg-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd mbstring zip soap pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp bcmath ldap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(   echo \"opcache.memory_consumption=128\";   echo \"opcache.interned_strings_buffer=8\";   echo \"opcache.max_accelerated_files=20000\";   echo \"opcache.revalidate_freq=5\";   echo \"opcache.fast_shutdown=1\";   echo \"opcache.enable_cli=1\";   ) \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/www/html \u0026\u0026   mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \u0026\u0026   chown -R web:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite expires ssl \u0026\u0026 service apache2 restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drupal/coder"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 DEBIAN_FRONTEND=noninteractive     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends msmtp \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "core/msmtprc.conf",
            "/usr/local/etc/msmtprc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "core/php-smtp.ini",
            "/usr/local/etc/php/conf.d/php-smtp.ini"
          ]
        },
        {
          "CmdLine": [
            "curl https://drupalconsole.com/installer -L -o drupal.phar \u0026\u0026 mv drupal.phar /usr/local/bin/drupal \u0026\u0026 chmod +x /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get remove -y libqt4-dev qt4-dev-tools wkhtmltopdf \u0026\u0026 apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install openssl build-essential libssl-dev libxrender-dev git-core libx11-dev libxext-dev libfontconfig1-dev libfreetype6-dev fontconfig -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/wkhtmltopdf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/wkhtmltopdf \u0026\u0026 wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \u0026\u0026 tar xf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /var/wkhtmltopdf/wkhtmltox/bin/wkhtmltopdf /bin/wkhtmltopdf \u0026\u0026 cp /var/wkhtmltopdf/wkhtmltox/bin/wkhtmltoimage /bin/wkhtmltoimage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/wkhtmltopdf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /bin/wkhtmltopdf \u0026\u0026 chmod +x /bin/wkhtmltoimage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/www/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R web:www-data /var/www/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Europe/Paris\" \u003e /etc/timezone \u0026\u0026 dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/bashrc",
            "/var/www/"
          ]
        },
        {
          "CmdLine": [
            "mv /var/www/bashrc /var/www/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown www-data:www-data /var/www/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source .bashrc\" \u003e\u003e /var/www/.profile ;    chown www-data:www-data /var/www/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"exec su - web\" \u003e /root/.bashrc \u0026\u0026     echo \". .profile\" \u003e /var/www/.bashrc \u0026\u0026     echo \"alias ll='ls -al'\" \u003e /var/www/.profile \u0026\u0026     echo \"cd /var/www/html\" \u003e\u003e /var/www/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "core/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /docker-entrypoint.sh \u0026\u0026 chmod +x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}