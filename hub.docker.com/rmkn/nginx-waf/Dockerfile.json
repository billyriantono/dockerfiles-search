{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "rmkn/centos7",
      "SourceCode": "FROM rmkn/centos7",
      "Platform": "",
      "From": {
        "Image": "rmkn/centos7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"rmkn\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.1.1d"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_VERSION",
              "Value": "2.1-20190912"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NDK_VERSION",
              "Value": "0.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAMOD_VERSION",
              "Value": "0.10.15"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEADERS_MORE_VERSION",
              "Value": "0.33"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MODSECURITY_NGINX_VERSION",
              "Value": "1.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RESTY_CORE_VERSION",
              "Value": "0.1.17"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RESTY_LRUCACHE_VERSION",
              "Value": "0.09"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OWASP_CRS_VERSION",
              "Value": "3.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_VERSION",
              "Value": "3.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y install libtool autoconf git file make gcc-c++ flex bison yajl yajl-devel curl-devel curl GeoIP-devel doxygen pcre-devel zlib-devel ccache unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/openssl.tar.gz -SL https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/openssl.tar.gz -C /usr/local/src \t\u0026\u0026 cd /usr/local/src/openssl-${OPENSSL_VERSION} \t\u0026\u0026 ./config no-threads shared zlib -g enable-ssl3 enable-ssl3-method --prefix=/usr/local/openssl -Wl,-rpath,/usr/local/openssl/lib \t\u0026\u0026 make CC='ccache gcc -fdiagnostics-color=always' \t\u0026\u0026 make install_sw"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/luajit.tar.gz -SL https://github.com/openresty/luajit2/archive/v${LUAJIT_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/luajit.tar.gz -C /usr/local/src \t\u0026\u0026 cd /usr/local/src/luajit2-${LUAJIT_VERSION} \t\u0026\u0026 make PREFIX=/usr/local/luajit \t\u0026\u0026 make install PREFIX=/usr/local/luajit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/ndk.tar.gz -SL https://github.com/simpl/ngx_devel_kit/archive/v${NDK_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/ndk.tar.gz -C /usr/local/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/lua-nginx.tar.gz -SL https://github.com/openresty/lua-nginx-module/archive/v${LUAMOD_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/lua-nginx.tar.gz -C /usr/local/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/headers-more-nginx.tar.gz -SL https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/headers-more-nginx.tar.gz -C /usr/local/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src \t\u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity \t\u0026\u0026 cd /usr/local/src/ModSecurity \t\u0026\u0026 ./build.sh \t\u0026\u0026 git submodule init \t\u0026\u0026 git submodule update \t\u0026\u0026 ./configure  \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/modsecurity-nginx.tar.gz -SL https://github.com/SpiderLabs/ModSecurity-nginx/archive/v${MODSECURITY_NGINX_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/modsecurity-nginx.tar.gz -C /usr/local/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/lua-resty-core.tar.gz -SL https://github.com/openresty/lua-resty-core/archive/v${RESTY_CORE_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/lua-resty-core.tar.gz -C /usr/local/src \t\u0026\u0026 cp -r /usr/local/src/lua-resty-core-${RESTY_CORE_VERSION}/lib /usr/local/lib/resty"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/lua-resty-lrucache.tar.gz -SL https://github.com/openresty/lua-resty-lrucache/archive/v${RESTY_LRUCACHE_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/lua-resty-lrucache.tar.gz -C /usr/local/src \t\u0026\u0026 cp -r /usr/local/src/lua-resty-lrucache-${RESTY_LRUCACHE_VERSION}/lib/resty/* /usr/local/lib/resty/resty/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/local/luajit/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/local/luajit/include/luajit-2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/nginx.tar.gz -SL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/nginx.tar.gz -C /usr/local/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/nginx-${NGINX_VERSION} \t\u0026\u0026 ./configure \t\t--prefix=/usr/local/nginx \t\t--with-ld-opt=\"-Wl,-rpath,/usr/local/luajit/lib:/usr/local/openssl/lib -L/usr/local/openssl/lib\" \t\t--with-cc-opt=\"-I/usr/local/openssl/include\" \t\t--with-ipv6 \t\t--with-http_ssl_module \t\t--with-http_v2_module \t\t--with-http_realip_module \t\t--with-http_stub_status_module \t\t--add-dynamic-module=../ngx_devel_kit-${NDK_VERSION} \t\t--add-dynamic-module=../lua-nginx-module-${LUAMOD_VERSION} \t\t--add-dynamic-module=../ModSecurity-nginx-${MODSECURITY_NGINX_VERSION} \t\t--add-dynamic-module=../headers-more-nginx-module-${HEADERS_MORE_VERSION} \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/owasp-modsecurity-crs.tar.gz -SL https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${OWASP_CRS_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/owasp-modsecurity-crs.tar.gz -C /usr/local \t\u0026\u0026 cd /usr/local \t\u0026\u0026 ln -sf owasp-modsecurity-crs-${OWASP_CRS_VERSION} owasp-modsecurity-crs \t\u0026\u0026 mv /usr/local/owasp-modsecurity-crs/crs-setup.conf.example /usr/local/owasp-modsecurity-crs/crs-setup.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/src/luarocks.tar.gz -SL https://luarocks.org/releases/luarocks-${LUAROCKS_VERSION}.tar.gz \t\u0026\u0026 tar zxf /usr/local/src/luarocks.tar.gz  -C /usr/local/src \t\u0026\u0026 cd /usr/local/src/luarocks-${LUAROCKS_VERSION} \t\u0026\u0026 ./configure --with-lua=/usr/local/luajit/ \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/usr/local/nginx/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "security.conf",
            "virtual.conf",
            "/usr/local/nginx/conf/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "main.conf",
            "/usr/local/nginx/modsec/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "openssl.cnf",
            "/usr/local/openssl/ssl/"
          ]
        },
        {
          "CmdLine": [
            "cp /usr/local/src/ModSecurity/modsecurity.conf-recommended /usr/local/nginx/modsec/modsecurity.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/local/src/ModSecurity/unicode.mapping /usr/local/nginx/modsec/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/nginx/sbin/nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}