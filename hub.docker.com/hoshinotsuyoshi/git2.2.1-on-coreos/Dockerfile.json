{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install libcurl4-gnutls-dev libexpat1-dev gettext       libz-dev libssl-dev wget build-essential zlib1g-dev \u0026\u0026     export DIR=/opt \u0026\u0026     mkdir -p $DIR/source \u0026\u0026     cd $DIR/source \u0026\u0026     wget \"https://www.kernel.org/pub/software/scm/git/git-2.2.1.tar.gz\" \u0026\u0026     tar xzvf git-2.2.1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DIR=/opt \u0026\u0026     cd $DIR/source/git-2.2.1 \u0026\u0026     ./configure --prefix=$DIR/git-2.2.1-static CFLAGS=\"${CFLAGS} -static\" NO_OPENSSL=1 NO_CURL=1 \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '#!/bin/sh\\nif mountpoint -q /target; then\\n    echo \"Installing git to /target\"\\n    cp /opt/git-2.2.1-static/bin/git /target/git\\nelse\\n    echo \"/target is not a mountpoint.\"\\n    echo \"- re-run this with -v /opt/bin:/target\"\\nfi\\n' \u003e /install.sh \u0026\u0026     chmod +x /install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/install.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}