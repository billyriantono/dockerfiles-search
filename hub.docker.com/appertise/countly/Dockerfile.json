{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.16",
      "SourceCode": "FROM phusion/baseimage:0.9.16",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.16"
      },
      "Commands": [
        {
          "Maintainer": "Leone Parise \u003cleone.parise@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "15.08"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DIR",
              "Value": "/opt/countly"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INSIDE_DOCKER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y python-software-properties wget g++ software-properties-common unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://deb.nodesource.com/setup | bash - \u0026\u0026 \tapt-get install -y nginx nodejs supervisor imagemagick sendmail \u0026\u0026 \tapt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 \twget https://github.com/Countly/countly-server/releases/download/$VERSION/countly-community-edition-v$VERSION.zip \u0026\u0026 \tunzip countly-community-edition-v$VERSION.zip -d /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp $DIR/bin/config/nginx.server.conf /etc/nginx/sites-enabled/default \u0026\u0026\tcp $DIR/bin/config/nginx.conf /etc/nginx/nginx.conf \u0026\u0026 \techo \"\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026     echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026 \tcp $DIR/api/config.sample.js $DIR/api/config.js \u0026\u0026 \ttouch $DIR/plugins/plugins.json \u0026\u0026 echo '[\"plugins\",\"density\",\"locale\",\"enterpriseinfo\",\"push\"]' \u003e $DIR/plugins/plugins.json \u0026\u0026 \tcp $DIR/frontend/express/config.sample.js $DIR/frontend/express/config.js \u0026\u0026 \tcp $DIR/frontend/express/public/javascripts/countly/countly.config.sample.js $DIR/frontend/express/public/javascripts/countly/countly.config.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $DIR \u0026\u0026 \tnpm install -g grunt-cli --unsafe-perm \u0026\u0026 npm install \u0026\u0026 \tnode $DIR/bin/scripts/install_plugins.js \u0026\u0026 \tgrunt dist-all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/nginx \u0026\u0026     mkdir -p /etc/service/countly-api \u0026\u0026     mkdir -p /etc/service/countly-dashboard \u0026\u0026     cp $DIR/bin/commands/docker/nginx.sh /etc/service/nginx/run \u0026\u0026     cp $DIR/bin/commands/docker/countly-api.sh /etc/service/countly-api/run \u0026\u0026     cp $DIR/bin/commands/docker/countly-dashboard.sh /etc/service/countly-dashboard/run \u0026\u0026 \tbash $DIR/bin/scripts/detect.init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -r -M -U -d /opt/countly -s /bin/false countly \u0026\u0026 \techo \"countly ALL=(ALL) NOPASSWD: /usr/bin/sv restart countly-api countly-dashboard\" \u003e\u003e /etc/sudoers.d/countly \u0026\u0026 \tchown -R countly:countly $DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./_config.api.js",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./_config.frontend.js",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}