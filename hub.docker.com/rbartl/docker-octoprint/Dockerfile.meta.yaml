MetaArgs: null
Stages:
- BaseName: python:2.7
  Commands:
  - Maintainer: Ohad Galor Kimchi <ohadgk@gmail.com>
    Name: maintainer
  - Env:
    - Key: OCTOPRINT_VERSION
      Value: 1.3.2
    Name: env
  - Env:
    - Key: CURA_ENGINE_VERSION
      Value: 15.04.6
    Name: env
  - CmdLine:
    - "set -xe \t&& echo \"Setup Temporary packages for compilation\" \t&& export
      PKGS='build-essential subversion libjpeg-dev zlib1g-dev libv4l-dev wget unzip
      git cmake' \t&& echo \"Installing Dependencies\" \t&& apt-get update \t&& apt-get
      install -y libprotobuf10 libav-tools avrdude libjpeg62-turbo curl imagemagick
      psmisc --no-install-recommends \t&& apt-get install -y ${PKGS} --no-install-recommends
      \t&& echo \"Download OctoPrint/CuraEngine/mjpg-streamer\" \t&& cd /tmp/ \t&&
      wget https://github.com/Ultimaker/CuraEngine/archive/${CURA_ENGINE_VERSION}.tar.gz
      \t&& wget https://github.com/jacksonliam/mjpg-streamer/archive/master.zip \t&&
      echo \"Installing mjpg-streamer\" \t&& unzip master.zip \t&& cd mjpg-streamer-master/mjpg-streamer-experimental
      \t&& make \t&& make install \t&& cd ../.. \t&& echo \"Installing CuraEngine\"
      \t&& tar -zxf ${CURA_ENGINE_VERSION}.tar.gz \t&& cd CuraEngine-${CURA_ENGINE_VERSION}
      \t&& mkdir build \t&& make \t&& mv -f ./build /CuraEngine/ \t&& cd .. \t&& echo
      \"Cleaning Temporary Packages + Installation leftovers\" \t&& rm -rf /var/lib/apt/lists/*
      \t&& rm -rf /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe \t&& cd /tmp/ \t&& wget https://github.com/foosel/OctoPrint/archive/${OCTOPRINT_VERSION}.tar.gz
      \t&& echo \"Installing OctoPrint\" \t&& tar -zxf ${OCTOPRINT_VERSION}.tar.gz
      \t&& mv -f OctoPrint-${OCTOPRINT_VERSION} /octoprint/ \t&& cd /octoprint/ \t&&
      echo \"Install OctoPrint requirements\" \t&& pip install -r requirements.txt
      \t&& pip install pillow \t&& python setup.py install \t&& rm -rf /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - Name: expose
    Ports:
    - "5000"
  - Name: expose
    Ports:
    - "8088"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - octoprint.sh
    - /usr/bin/
  - Env:
    - Key: YUV_CAMERA
      Value: '"true"'
    Name: env
  - CmdLine:
    - octoprint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7
