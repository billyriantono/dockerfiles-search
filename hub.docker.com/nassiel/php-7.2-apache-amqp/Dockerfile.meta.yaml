MetaArgs: null
Stages:
- BaseName: php:7.2-apache
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: php_conf
      Value: /etc/php/7.2/apache2/php.ini
    Name: env
  - Env:
    - Key: apache2_conf
      Value: $APACHE_CONFDIR/conf-available/docker-php.conf
    Name: env
  - Env:
    - Key: APACHE_RUN_USER
      Value: ps-data
    Name: env
  - Env:
    - Key: APACHE_RUN_GROUP
      Value: www-data
    Name: env
  - Env:
    - Key: WEB_ROOT
      Value: /var/www/html
    Name: env
  - CmdLine:
    - "apt-get update     && apt-get install -y -q --no-install-recommends     apt-transport-https
      \    lsb-release     wget     vim     host     tzdata     apt-utils     ca-certificates
      \tgnupg \tsudo"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.dotdeb.org jessie all" > /etc/apt/sources.list.d/dotdeb.list
      &&     echo "deb-src http://packages.dotdeb.org jessie all" >> /etc/apt/sources.list.d/dotdeb.list
      &&     wget https://www.dotdeb.org/dotdeb.gpg && apt-key add dotdeb.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
      &&     echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list
      &&     wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libcurl4-openssl-dev         locales         git         openssl         openssh-client         librabbitmq-dev         pkg-config         net-tools         libmagickwand-dev         libmagickcore-dev         libssl-dev         zlib1g-dev         libicu-dev         g++         unzip         make     &&
      docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     &&
      docker-php-ext-install -j$(nproc) gd     && docker-php-ext-configure intl     &&
      docker-php-ext-install -j$(nproc) pdo_mysql json bcmath intl opcache mbstring
      xml zip
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install redis     && pecl install amqp     && pecl install igbinary     &&
      pecl install mongodb     && pecl install imagick \t&& pecl install mcrypt-1.0.1
      \    && docker-php-ext-enable redis amqp igbinary imagick mongodb mcrypt"
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -G $APACHE_RUN_GROUP -ms /bin/bash $APACHE_RUN_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /var/www/* && mkdir $WEB_ROOT
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/# nb_NO.UTF-8 UTF-8/nb_NO.UTF-8 UTF-8/' /etc/locale.gen &&     ln
      -sf /etc/locale.alias /usr/share/locale/locale.alias &&     locale-gen nb_NO.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - composer_hash=$(wget -q -O - https://composer.github.io/installer.sig) &&     php
      -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      -r "if (hash_file('SHA384', 'composer-setup.php') === '${composer_hash}') {
      echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;" &&     php composer-setup.php --install-dir=/usr/bin --filename=composer
      &&     php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/default.conf
    - $APACHE_CONFDIR/sites-available/000-default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/mods-available/opcache.ini
    - /etc/php/7.2/mods-available/opcache.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/start.sh
    - /start.sh
  - CmdLine:
    - chmod 755 /start.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - errors/
    - /var/www/errors
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src/info.php
    - $WEB_ROOT/info.php
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - mkfifo -m 600 /tmp/logpipe
    Name: run
    PrependShell: true
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.2-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-apache
