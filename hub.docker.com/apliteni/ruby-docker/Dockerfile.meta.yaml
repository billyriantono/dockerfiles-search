MetaArgs: null
Stages:
- BaseName: docker:18.09
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache \t\tgmp-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \tmkdir -p /usr/local/etc; \t{ \t\techo 'install: --no-document';
      \t\techo 'update: --no-document'; \t} >> /usr/local/etc/gemrc"
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_MAJOR
      Value: "2.4"
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.4.9
    Name: env
  - Env:
    - Key: RUBY_DOWNLOAD_SHA256
      Value: 0c4e000253ef7187feeb940a01a1c7594f28d63aa16f978e892a0e2864f58614
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: 3.0.3
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .ruby-builddeps \t\tautoconf \t\tbison
      \t\tbzip2 \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\tgcc \t\tgdbm-dev
      \t\tglib-dev \t\tlibc-dev \t\tlibffi-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlinux-headers
      \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tprocps \t\treadline-dev
      \t\truby \t\ttar \t\txz \t\tyaml-dev \t\tzlib-dev \t; \t\twget -O ruby.tar.xz
      \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\";
      \techo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum --check --strict;
      \t\tmkdir -p /usr/src/ruby; \ttar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1;
      \trm ruby.tar.xz; \t\tcd /usr/src/ruby; \t\twget -O 'thread-stack-fix.patch'
      'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch';
      \techo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch'
      | sha256sum --check --strict; \tpatch -p1 -i thread-stack-fix.patch; \trm thread-stack-fix.patch;
      \t\t{ \t\techo '#define ENABLE_PATH_CHECK 0'; \t\techo; \t\tcat file.c; \t}
      > file.c.new; \tmv file.c.new file.c; \t\tautoconf; \tgnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"; \texport ac_cv_func_isnan=yes ac_cv_func_isinf=yes;
      \t./configure \t\t--build=\"$gnuArch\" \t\t--disable-install-doc \t\t--enable-shared
      \t; \tmake -j \"$(nproc)\"; \tmake install; \t\trunDeps=\"$( \t\tscanelf --needed
      --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t|
      sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next
      } { print \"so:\" $1 }' \t)\"; \tapk add --no-network --virtual .ruby-rundeps
      \t\t$runDeps \t\tbzip2 \t\tca-certificates \t\tlibffi-dev \t\tprocps \t\tyaml-dev
      \t\tzlib-dev \t; \t\tcd /; \trm -r /usr/src/ruby; \truby -e 'exit(Gem::Version.create(ENV[\"RUBYGEMS_VERSION\"])
      > Gem::Version.create(Gem::VERSION))'; \tgem update --system \"$RUBYGEMS_VERSION\"
      && rm -r /root/.gem/; \t! apk --no-network list --installed \t\t| grep -v '^[.]ruby-rundeps'
      \t\t| grep -i ruby \t; \t[ \"$(command -v ruby)\" = '/usr/local/bin/ruby' ];
      \truby --version; \tgem --version; \tbundle --version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GEM_HOME" && chmod 777 "$GEM_HOME"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add wget &&     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-2.25-r0.apk
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-bin-2.25-r0.apk
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-i18n-2.25-r0.apk
      &&     apk add glibc-bin-2.25-r0.apk glibc-i18n-2.25-r0.apk glibc-2.25-r0.apk
    Name: run
    PrependShell: true
  - Env:
    - Key: MUSL_LOCPATH
      Value: /usr/local/share/i18n/locales/musl
    Name: env
  - CmdLine:
    - apk add --update git cmake make musl-dev gcc gettext-dev libintl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && git clone https://github.com/rilian-la-te/musl-locales.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/musl-locales && cmake . && make && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: c.UTF-8
    - Key: LANGUAGE
      Value: ru_RU.UTF-8
    Name: env
  From:
    Image: docker:18.09
  Name: ""
  Platform: ""
  SourceCode: FROM docker:18.09
