{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "williamyeh/ansible:debian8-onbuild",
      "SourceCode": "FROM williamyeh/ansible:debian8-onbuild",
      "Platform": "",
      "From": {
        "Image": "williamyeh/ansible:debian8-onbuild"
      },
      "Commands": [
        {
          "Maintainer": "Chu-Siang Lai \u003cchusiang@drx.tw\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"===\u003e Fix policy-rc.d for Docker ...\"                              \u0026\u0026       sed -i -e 's/exit\\s\\s*101/exit 0/' /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Install necessary packages ...\"                              \u0026\u0026       apt-get install -y curl git make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Get playbook ...\"                                            \u0026\u0026     git clone --depth=1 https://github.com/chusiang/testlink.ansible.role.git ;    cd testlink.ansible.role                                                \u0026\u0026     make init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PLAYBOOK",
              "Value": "testlink.ansible.role/setup.yml"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"===\u003e Run playbook ...\"                                            \u0026\u0026       ansible-playbook-wrapper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Clean ...\"                                                   \u0026\u0026       apt-get clean                                                         \u0026\u0026       cd /tmp                                                               \u0026\u0026       rm -rf Dockerfile run.sh testlink.ansible.role testlink.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}