MetaArgs: null
Stages:
- As: static-docker-source
  BaseName: docker:17.12.0-ce
  Commands: null
  From:
    Image: docker:17.12.0-ce
  Name: static-docker-source
  Platform: ""
  SourceCode: FROM docker:17.12.0-ce as static-docker-source
- BaseName: debian:jessie
  Commands:
  - Maintainer: pierolucianihearst <piero.luciani.hearst@gmail.com>
    Name: maintainer
  - Env:
    - Key: CLOUD_SDK_VERSION
      Value: 206.0.0
    Name: env
  - Chown: ""
    From: static-docker-source
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker
    - /usr/local/bin/docker
  - CmdLine:
    - apt-get -qqy update && apt-get install -qqy         curl         gcc         php5         php5-cli         php5-curl         nasm         python-dev         python-setuptools         apt-transport-https         lsb-release         openssh-client         git     &&
      easy_install -U pip &&     pip install -U crcmod   &&     export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release
      -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO
      main" > /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key add - &&     apt-get update &&     apt-get install -y google-cloud-sdk=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-app-engine-python=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-app-engine-python-extras=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-app-engine-java=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-datalab=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-datastore-emulator=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-pubsub-emulator=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-bigtable-emulator=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-cbt=${CLOUD_SDK_VERSION}-0         kubectl
      &&     gcloud config set core/disable_usage_reporting true &&     gcloud config
      set component_manager/disable_update_check true &&     gcloud config set metrics/environment
      github_docker_image &&     gcloud --version &&     docker --version && kubectl
      version --client
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90circleci   && echo
      'APT::Get::force-Yes "true";' >> /etc/apt/apt.conf.d/90circleci   && echo 'DPkg::Options
      "--force-confnew";' >> /etc/apt/apt.conf.d/90circleci
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install -y  -q --no-install-recommends     git mercurial
      xvfb     locales sudo openssh-client ca-certificates tar gzip parallel     net-tools
      netcat unzip zip bzip2 apt-transport-https build-essential libssl-dev     curl
      g++ gcc git make wget && rm -rf /var/lib/apt/lists/* && apt-get -y autoclean
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen C.UTF-8 || true
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - JQ_URL=$(curl --location --fail --retry 3 https://api.github.com/repos/stedolan/jq/releases/latest  |
      grep browser_download_url | grep '/jq-linux64"' | grep -o -e 'https.*jq-linux64')   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq
      $JQ_URL   && chmod +x /usr/bin/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex   && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/  |
      grep -P -o ''docker-\d+\.\d+\.\d+-ce\.tgz'' | head -n 1)   && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}"   &&
      echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail
      --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}"   && ls -lha /tmp/docker.tgz   &&
      tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf
      /tmp/docker /tmp/docker.tgz'
    Name: run
    PrependShell: true
  - CmdLine:
    - COMPOSE_URL=$(curl --location --fail --retry 3 https://api.github.com/repos/docker/compose/releases/latest
      | jq -r '.assets[] | select(.name == "docker-compose-Linux-x86_64") | .browser_download_url')   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose
      $COMPOSE_URL   && chmod +x /usr/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - DOCKERIZE_URL=$(curl --location --fail --retry 3 https://api.github.com/repos/jwilder/dockerize/releases/latest
      | jq -r '.assets[] | select(.name | startswith("dockerize-linux-amd64")) | .browser_download_url')   &&
      curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz
      $DOCKERIZE_URL   && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   &&
      rm -rf /tmp/dockerize-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell
      /bin/bash --create-home circleci   && echo ''circleci ALL=NOPASSWD: ALL'' >>
      /etc/sudoers.d/50-circleci   && echo ''Defaults    env_keep += "DEBIAN_FRONTEND"''
      >> /etc/sudoers.d/env_keep'
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 9.4.0
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update --fix-missing
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/nvm
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 775 /usr/local/nvm
    Name: run
    PrependShell: true
  - CmdLine:
    - chown circleci:circleci /usr/local/nvm
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh |
      bash     && source $NVM_DIR/nvm.sh     && nvm install $NODE_VERSION     && nvm
      alias default $NODE_VERSION     && nvm use default
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
    Name: env
  - CmdLine:
    - node
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
