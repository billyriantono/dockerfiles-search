MetaArgs: null
Stages:
- BaseName: rocker/verse:3.4.3
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"adrien@scorelab.io"'
    Name: label
  - Key: GITHUB_PAT
    Name: arg
    Value: null
  - Key: NJOBS
    Name: arg
    Value: "1"
  - Key: PYTHON_VER
    Name: arg
    Value: "2"
  - Key: FASTFM_COMMIT
    Name: arg
    Value: 3a194c1
  - CmdLine:
    - apt-get update --fix-missing   && apt-get install -y --allow-unauthenticated
      --no-install-recommends   ca-certificates   git   gzip   ssh   tar   libglu1-mesa-dev   libpng-dev   bzip2   wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge &&   apt-get clean &&   rm -rf /var/lib/apt/lists/* /var/log/dpkg.log
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - CmdLine:
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O
      /tmp/miniconda.sh   && /bin/bash /tmp/miniconda.sh -bfp ${CONDA_DIR}   && rm
      -rf /tmp/miniconda.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${CONDA_DIR}/bin:$PATH
    Name: env
  - CmdLine:
    - conda config --add channels conda-forge   && conda config --add channels anaconda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda update -y conda   && conda install -y     python=${PYTHON_VER}     pip
    Name: run
    PrependShell: true
  - CmdLine:
    - FASTFM_COMMIT=${FASTFM_COMMIT} git clone --recursive https://github.com/adrtod/fastFM.git   &&
      cd fastFM   && conda install -y --file requirements.txt   && make -j${NJOBS}   &&
      pip install .   && cd ..   && rm -rf fastFM
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - ./
  - CmdLine:
    - conda install -y --file requirements.txt   && rm requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R root:staff ${CONDA_DIR}   && chmod -R g+w ${CONDA_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PATH=${PATH}" >> `R RHOME`/etc/Renviron   && echo "options(Ncpus = ${NJOBS})"
      >> `R RHOME`/etc/Rprofile.site
    Name: run
    PrependShell: true
  - Env:
    - Key: RPYTHON_PYTHON_VERSION
      Value: ${PYTHON_VER}
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.r
    - ./
  - CmdLine:
    - R -q -e "source('requirements.r')"   && rm requirements.r
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: rstudio
    Name: env
  - CmdLine:
    - export ROOT=TRUE   && bash /etc/cont-init.d/userconf
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${HOME}/winerec-gvp
  - CmdLine:
    - chown -R ${USER}:${USER} ${HOME}/winerec-gvp
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Name: workdir
    Path: ${HOME}/winerec-gvp
  - CmdLine:
    - cp docker.env .env
    Name: run
    PrependShell: true
  - CmdLine:
    - make run_all
    Name: cmd
    PrependShell: true
  From:
    Image: rocker/verse:3.4.3
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/verse:3.4.3
