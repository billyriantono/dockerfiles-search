MetaArgs: null
Stages:
- BaseName: fullerb18/nginx:latest
  Commands:
  - Maintainer: Ben Fuller <bfuller@investability.com>
    Name: maintainer
  - Chown: ""
    Name: add
    SourcesAndDest:
    - container-files/config/install*
    - /config/
  - CmdLine:
    - '`# Prepare dummy SSL certificates`   mkdir -p /etc/nginx/ssl &&   openssl genrsa
      -out /etc/nginx/ssl/dummy.key 2048 &&   openssl req -new -key /etc/nginx/ssl/dummy.key
      -out /etc/nginx/ssl/dummy.csr -subj "/C=GB/L=London/O=Company Ltd/CN=docker"
      &&   openssl x509 -req -days 3650 -in /etc/nginx/ssl/dummy.csr -signkey /etc/nginx/ssl/dummy.key
      -out /etc/nginx/ssl/dummy.crt &&   rpm --rebuilddb && yum update -y &&   `#
      Install yum-utils (provides yum-config-manager) + some basic web-related tools...`   yum
      install -y yum-utils wget patch mysql tar bzip2 unzip openssh-clients &&   `#
      Install PHP 5.6`   rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
      &&   yum-config-manager -q --enable remi &&   yum-config-manager -q --enable
      remi-php56 &&   yum install -y php-fpm php-bcmath php-cli php-gd php-intl php-mbstring                   php-pecl-imagick
      php-mcrypt php-mysql php-opcache php-pdo &&   yum install -y --disablerepo=epel
      php-pecl-redis php-pecl-yaml &&   `# Install libs required to build some gem/npm
      packages (e.g. PhantomJS requires zlib-devel, libpng-devel)`   yum install -y
      ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel
      &&   `# Install common tools needed/useful during Web App development`   `#
      Install Ruby 2`   yum install -y ruby ruby-devel &&   `# Install/compile other
      software (Git, NodeJS)`   source /config/install.sh &&   yum clean all && rm
      -rf /tmp/yum* &&   `# Install common npm packages: grunt, gulp, bower, browser-sync`   `#
      Update RubyGems, install Bundler`   `# Disable SSH strict host key checking:
      needed to access git via SSH in non-interactive mode`   echo -e "StrictHostKeyChecking
      no" >> /etc/ssh/ssh_config &&   curl -sS https://getcomposer.org/installer |
      php -- --install-dir=/usr/local/bin --filename=composer &&   chown www /usr/local/bin/composer'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - container-files
    - /
  - Env:
    - Key: STATUS_PAGE_ALLOWED_IP
      Value: 127.0.0.1
    Name: env
  From:
    Image: fullerb18/nginx:latest
  Name: ""
  Platform: ""
  SourceCode: FROM fullerb18/nginx:latest
