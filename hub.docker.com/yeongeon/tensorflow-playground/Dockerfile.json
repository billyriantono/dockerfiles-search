{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "Maintainer": "yeongeon \u003cyeongeon@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "template/sources.list.tmp",
            "/etc/apt/sources.list"
          ]
        },
        {
          "CmdLine": [
            "apt update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Asia/Seoul\" | tee /etc/timezone \u0026\u0026     ln -fs /usr/share/zoneinfo/Asia/Seoul /etc/localtime \u0026\u0026     apt-get --allow-unauthenticated install -y tzdata \u0026\u0026     dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --allow-unauthenticated -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo en_US.UTF-8 UTF-8 \u003e\u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ko_KR.UTF-8 UTF-8 \u003e\u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen \u0026\u0026     update-locale LC_ALL=C LANG=C"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get --allow-unauthenticated install -y \t    net-tools \t    bash-completion \t    bc \t    curl \t    git \t    inetutils-traceroute \t    iputils-ping \t    lsof \t    man \t    netcat \t    nmap \t    psmisc \t    screen \t    telnet \t    unzip \t    vim \t    sysstat \t    wget \t    libcupti-dev \t    build-essential \t    python3 python3-dev python3-venv \t    font-manager \t    fonts-nanum             default-jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m venv tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source tensorflow/bin/activate\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --ignore-installed --upgrade word2vec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade pandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade konlpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade networkx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade gremlinpython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade ipython-gremlin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade tensorboard"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tensorflow/bin/pip3 install --upgrade -v --trusted-host files.pythonhosted.org --trusted-host pypi.org  torch torchvision"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "template/profile.tmp",
            "/root/profile.tmp"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"cat /root/profile.tmp \u003e\u003e /root/.profile\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "template/tensorboard.tmp",
            "/tensorflow/bin/tensorboard.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"chmod +x /tensorflow/bin/tensorboard.sh\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"mkdir -p /notebooks/conf\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "template/jupyter_notebook_config.py",
            "/notebooks/conf/jupyter_notebook_config.py"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"wget -P /tmp http://mirror.apache-kr.org/tinkerpop/3.4.0/apache-tinkerpop-gremlin-server-3.4.0-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"unzip /tmp/apache-tinkerpop-gremlin-server-3.4.0-bin.zip -d /.\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "template/gremlin-server.yaml.tmp",
            "/tmp/gremlin-server.yaml.tmp"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"cat /tmp/gremlin-server.yaml.tmp \u003e /apache-tinkerpop-gremlin-server-3.4.0/conf/gremlin-server.yaml\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "template/gremlin-server-launcher.tmp",
            "/apache-tinkerpop-gremlin-server-3.4.0/bin/gremlin-server-launcher.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"chmod +x /apache-tinkerpop-gremlin-server-3.4.0/bin/gremlin-server-launcher.sh\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8182",
            "8888"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"/apache-tinkerpop-gremlin-server-3.4.0/bin/gremlin-server-launcher.sh \u0026\u0026 /tensorflow/bin/tensorboard.sh \u0026\u0026 source tensorflow/bin/activate \u0026\u0026 tensorflow/bin/jupyter notebook --allow-root --config /notebooks/conf/jupyter_notebook_config.py\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}