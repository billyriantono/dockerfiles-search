{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "amancevice/superset",
      "SourceCode": "FROM amancevice/superset",
      "Platform": "",
      "From": {
        "Image": "amancevice/superset"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 DEBIAN_FRONTEND=noninteractive     \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv C2518248EEA14886"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-transport-https apt-utils software-properties-common     \u0026\u0026 apt-get update -y \u0026\u0026 apt-get install software-properties-common     \u0026\u0026 add-apt-repository \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y  \u0026\u0026 apt-get install -y build-essential libssl-dev libffi-dev python3-dev libsasl2-dev     libldap2-dev libxi-dev libxi-dev libsasl2-modules libgtk-3-0 xvfb firefox-esr libglib2.0-0  libnss3 libgconf-2-4     libfontconfig1 vim less postgresql-client redis-tools chromium nodejs default-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/superset"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements-dev.txt",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements-extra.txt",
            "."
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade setuptools pip     \u0026\u0026 pip install -r requirements-dev.txt -r requirements-extra.txt     \u0026\u0026 rm -rf /root/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz     \u0026\u0026 tar -x geckodriver -zf geckodriver-v0.26.0-linux64.tar.gz -O \u003e /usr/bin/geckodriver     \u0026\u0026 chmod +x /usr/bin/geckodriver     \u0026\u0026 rm geckodriver-v0.26.0-linux64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q \"https://chromedriver.storage.googleapis.com/80.0.3987.16/chromedriver_linux64.zip\" -O /tmp/chromedriver.zip     \u0026\u0026 unzip /tmp/chromedriver.zip -d /usr/bin/     \u0026\u0026 ls     \u0026\u0026 rm /tmp/chromedriver.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "superset"
        },
        {
          "CmdLine": [
            "export USE_TZ=True \u0026\u0026 export TZ=\"Etc/UTC\" \u0026\u0026 export CELERY_ENABLE_UTC=True     \u0026\u0026 export CELERY_TIMEZONE='Etc/UTC'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Xvfb :10 -ac \u0026"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DISPLAY=:10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "superset:superset",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "superset_config.py",
            "/home/superset/superset_config.py"
          ]
        },
        {
          "Chown": "superset:superset",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/home/superset/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "./entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Health": {
            "Test": [
              "CMD",
              "curl",
              "-f",
              "http://localhost:8088/health"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "8088"
          ]
        }
      ]
    }
  ]
}