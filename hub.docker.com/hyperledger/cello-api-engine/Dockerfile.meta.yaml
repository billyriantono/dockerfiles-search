MetaArgs: null
Stages:
- As: downloader
  BaseName: busybox
  Commands:
  - CmdLine:
    - cd /tmp && wget -c https://github.com/hyperledger/cello/archive/master.zip &&     unzip
      master.zip
    Name: run
    PrependShell: true
  From:
    Image: busybox
  Name: downloader
  Platform: ""
  SourceCode: FROM busybox as downloader
- BaseName: python:3.6
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"github.com/hyperledger/cello"'
    Name: label
  - CmdLine:
    - "apt-get update && apt-get install -y gettext-base graphviz libgraphviz-dev
      && \tapt-get autoclean && apt-get clean && apt-get autoremove && rm -rf /var/cache/apt/"
    Name: run
    PrependShell: true
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/cello-master/src/api-engine/requirements.txt
    - /
  - CmdLine:
    - "cd / && \tpip install -r requirements.txt"
    Name: run
    PrependShell: true
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/cello-master/src/api-engine
    - /var/www/server
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/cello-master/src/api-engine/docker/uwsgi/server.ini
    - /etc/uwsgi/apps-enabled/
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/cello-master/src/api-engine/docker/scripts
    - /scripts
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/cello-master/build_image/docker/common/api-engine/entrypoint.sh
    - /
  - CmdLine:
    - cd /var/www/server/api_engine && cp settings.py.initial settings.py && cd ..
      && python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/server
  - Env:
    - Key: RUN_MODE
      Value: server
    Name: env
  - CmdLine:
    - bash /entrypoint.sh
    Name: cmd
    PrependShell: true
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
