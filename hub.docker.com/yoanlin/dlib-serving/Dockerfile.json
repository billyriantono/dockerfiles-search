{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yoanlin/alpine-boost-dev:edge",
      "SourceCode": "FROM yoanlin/alpine-boost-dev:edge",
      "Platform": "",
      "From": {
        "Image": "yoanlin/alpine-boost-dev:edge"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add --no-cache git     cmake     g++     make     jpeg jpeg-dev     libpng libpng-dev     giflib-dev     boost-dev     openblas-dev      ca-certificates wget     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --progress zip zlib jpeg libpng openblas boost libcrypto1.0 libssl1.0 protobuf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --progress libstdc++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --progress --update git make g++ unzip autoconf automake libtool file libressl curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GRPC_VERSION",
          "Name": "arg",
          "Value": "v1.12.x"
        },
        {
          "CmdLine": [
            "git clone --depth 1 --branch $GRPC_VERSION https://github.com/grpc/grpc /tmp/grpc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(cd /tmp/grpc     \u0026\u0026 git submodule update --init --recursive     \u0026\u0026 (cd third_party/protobuf \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make install)     \u0026\u0026 make     \u0026\u0026 make install     ) \u0026\u0026 rm -rf /tmp/grpc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/lib/libgrpc++.so /usr/local/lib/libgrpc++.so.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c -q https://github.com/davisking/dlib/archive/master.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvf master.tar.gz     \u0026\u0026 mv dlib-master dlib     \u0026\u0026 (mkdir -p dlib/build     \u0026\u0026 cd dlib/build     \u0026\u0026 cmake -DDLIB_PNG_SUPPORT=ON -DDLIB_GIF_SUPPORT=ON -DDLIB_JPEG_SUPPORT=ON ..     \u0026\u0026 cmake --build . --config Release     \u0026\u0026 make install     ) \u0026\u0026 rm master.tar.gz \u0026\u0026 rm -rf /dlib/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.cc",
            "/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.h",
            "/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cmake/",
            "/src/cmake/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "CMakeLists.txt",
            "/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "protos/",
            "/src/protos/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "CmdLine": [
            "cmake /src \u0026\u0026 cmake --build . -- -j2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://storage.googleapis.com/dlib-models/shape_predictor_68_face_landmarks.dat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://storage.googleapis.com/dlib-models/shape_predictor_5_face_landmarks.dat"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add --no-cache giflib     jpeg     libjpeg-turbo     libpng     boost-system     boost-program_options     boost-filesystem     openblas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add libcrypto1.0 libssl1.0 protobuf libstdc++ libressl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/",
            "/usr/local/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/*.dat",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/face-detection-server",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/face-detection-client",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/shape-detection-server",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/train-shape-predictor",
            "/"
          ]
        }
      ]
    }
  ]
}