{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "seeruk/java:openjdk-java8",
      "SourceCode": "FROM seeruk/java:openjdk-java8",
      "Platform": "",
      "From": {
        "Image": "seeruk/java:openjdk-java8"
      },
      "Commands": [
        {
          "Maintainer": "Elliot Wright \u003chello@elliotdwright.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "provisioning/docker-entrypoint.sh",
            "/opt/jenkins-slave-setup/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "provisioning/start-slave.sh",
            "/opt/jenkins-slave-setup/start-slave.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-Dfile.encoding=UTF8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_GID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/opt/jenkins-slave"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MASTER_HOST",
              "Value": "\"jenkins.docker\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MASTER_PORT",
              "Value": "\"8080\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_NAME",
              "Value": "\"jenkins-slave\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_WORKSPACE",
              "Value": "/opt/jenkins-slave"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y         build-essential         ca-certificates         curl         git-core         iputils-ping         language-pack-en-base         wget     \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get autoremove     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 chmod +x /opt/jenkins-slave-setup/docker-entrypoint.sh     \u0026\u0026 chmod +x /opt/jenkins-slave-setup/start-slave.sh     \u0026\u0026 mkdir -p /opt/jenkins-slave-setup/provisioning"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/jenkins-slave-setup"
        },
        {
          "CmdLine": [
            "/opt/jenkins-slave-setup/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/opt/jenkins-slave-setup/start-slave.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}