{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.18",
      "SourceCode": "FROM phusion/baseimage:0.9.18",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.18"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.10.33.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.9.12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-key E5267A6C \u0026\u0026     apt-get update \u0026\u0026     apt-get install --assume-yes python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --assume-yes --fix-missing         build-essential zlib1g-dev libpcre3 libpcre3-dev libssl-dev unzip         wget         nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     wget https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip \u0026\u0026     unzip release-${NPS_VERSION}-beta.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 cd ngx_pagespeed-release-${NPS_VERSION}-beta/ \u0026\u0026     wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz \u0026\u0026     tar -xzvf ${NPS_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     tar -xvzf nginx-${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 cd nginx-${NGINX_VERSION}/ \u0026\u0026 ./configure       --add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta       --without-http_autoindex_module       --with-http_ssl_module       --with-http_gzip_static_module       --with-http_gunzip_module       --without-http_browser_module       --without-http_limit_req_module       --without-http_limit_conn_module       --without-http_memcached_module       --without-http_referer_module       --without-http_scgi_module       --without-http_split_clients_module       --without-http_ssi_module       --without-http_userid_module       --without-http_uwsgi_module \u0026\u0026     make \u0026\u0026 make install \u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove --assume-yes \u0026\u0026     apt-get remove --assume-yes build-essential zlib1g-dev libpcre3-dev libssl-dev unzip python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean all \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     rm -rf nginx-${NGINX_VERSION}* ngx_pagespeed-release-${NPS_VERSION}-beta release-${NPS_VERSION}-beta.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/cache/ngx_pagespeed/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R root:www-data /var/cache/ngx_pagespeed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R ug+rw /var/cache/ngx_pagespeed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Package: nginx Pin: version ${NGINX_VERSION}-pagespeed Pin-Priority: 1001\" \u003e /etc/apt/preferences.d/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/nginx/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown www-data /var/lib/nginx/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 700 /var/lib/nginx/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/sbin/nginx \u0026\u0026 ln -s /usr/local/nginx/sbin/nginx /usr/sbin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/run.sh",
            "/root/run.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/.vimrc",
            "/root/.vimrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/sites",
            "/etc/nginx/sites-enabled"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/gzip_params",
            "/etc/nginx/gzip_params"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/proxy_params",
            "/etc/nginx/proxy_params"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/pagespeed_params",
            "/etc/nginx/pagespeed_params"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/services/nginx.sh",
            "/etc/service/nginx/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /etc/service/nginx/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/nginx"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/root/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}