{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "diatigrah/nginx:1.9.12",
      "SourceCode": "FROM diatigrah/nginx:1.9.12",
      "Platform": "",
      "From": {
        "Image": "diatigrah/nginx:1.9.12"
      },
      "Commands": [
        {
          "CmdLine": [
            "add-apt-repository ppa:ondrej/php5-5.6 \u0026\u0026     apt-key adv --keyserver keyserver.ubuntu.com --recv-key E5267A6C \u0026\u0026     apt-get update \u0026\u0026     apt-get install --assume-yes python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --assume-yes --fix-missing         build-essential zlib1g-dev libpcre3 libpcre3-dev libssl-dev unzip         php5         php5-fpm         php5-mysql         php5-mcrypt         php5-gd         php5-memcached         php5-curl         php5-xdebug         php5-xsl         php5-apcu         php5-intl         php5-ldap         php5-sqlite         php5-pgsql         php-pear         php5-xmlrpc         libxslt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove --assume-yes \u0026\u0026     apt-get remove --assume-yes build-essential zlib1g-dev libpcre3-dev libssl-dev unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     composer global require \"fxp/composer-asset-plugin:~1.0.3\" \u0026\u0026     composer global dumpautoload --optimize"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/php5-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/php5-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/services/php5-fpm/php5-fpm.sh",
            "/etc/service/php5-fpm/run"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/services/php5-fpm/php.ini",
            "/etc/php5/fpm/conf.d/40-custom.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "application",
            "/var/www"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/run.sh",
            "/root/run.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "application/bin/wait-for-db.sh",
            "/wait-for-db.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /wait-for-db.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "80",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/root/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}