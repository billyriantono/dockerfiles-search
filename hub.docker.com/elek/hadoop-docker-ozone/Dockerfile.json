{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.6.1810",
      "SourceCode": "FROM centos:7.6.1810",
      "Platform": "",
      "From": {
        "Image": "centos:7.6.1810"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum -y install epel-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install gcc gcc-c++ kernel-devel make autoconf automake libtool which    java-1.8.0-openjdk-headless java-1.8.0-openjdk-devel   docker    python-pip    file python-devel    git    jq    sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/src/ \u0026\u0026     cd /usr/local/src/ \u0026\u0026     curl -sL https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz | tar xz \u0026\u0026     cd protobuf-2.5.0 \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure --prefix=/usr \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     protoc --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026     curl -sL https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-3.0.1.tar.gz/download | tar -xz  \u0026\u0026      mv findbugs-* /opt/findbugs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026     curl -sL 'https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download\u0026filename=/ant/binaries/apache-ant-1.10.7-bin.tar.gz' | tar -xz  \u0026\u0026        mv apache-ant* /opt/ant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL 'https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download\u0026filename=maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz' | tar -xz  \u0026\u0026         mv apache-maven* /opt/maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/findbugs/bin:/opt/maven/bin:/opt/ant/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g 1000 default \u0026\u0026    mkdir -p /home/user \u0026\u0026    chmod 777 /home/user \u0026\u0026    for i in $(seq 1 5000); do adduser jenkins$i -u $i -g default -d /home/user -N; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ALL ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /home/user/.m2 /root/.m2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install virtualenv \u0026\u0026 virtualenv /opt/blockade \u0026\u0026 /opt/blockade/bin/pip install pytest==2.8.7 blockade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/blockade/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \u0026\u0026    chmod +x ./kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install robotframework"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://github.com/muquit/mailsend-go/releases/download/v1.0.5/mailsend-go_1.0.5_linux-64bit.tar.gz | tar zxf - \u0026\u0026 mv mailsend-go-dir/mailsend-go /usr/local/bin/ \u0026\u0026 rm -rf mailsend-go-dir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/elek/flekszible/releases/download/v1.5.2/flekszible_1.5.2_Linux_x86_64.tar.gz | tar zx \u0026\u0026 mv flekszible /usr/local/bin \u0026\u0026 chmod +x /usr/local/bin/flekszible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins1000"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone --depth=1 https://github.com/apache/hadoop.git -b trunk \u0026\u0026    cd /tmp/hadoop \u0026\u0026 mvn -B package dependency:go-offline -DskipTests=true -f pom.ozone.xml \u0026\u0026    rm -rf /home/user/.m2/repository/org/apache/hadoop/*hdds* \u0026\u0026    rm -rf /home/user/.m2/repository/org/apache/hadoop/*ozone* \u0026\u0026    rm -rf /tmp/hadoop \u0026\u0026    find /home/user/.m2/repository -exec chmod go+wx {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}