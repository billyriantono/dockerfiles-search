MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: FETCH
      Value: "no"
    Name: env
  - Env:
    - Key: INIT
      Value: "no"
    Name: env
  - Env:
    - Key: DOMAIN
      Value: server.tld
    Name: env
  - Env:
    - Key: MAIL
      Value: admin@admin.com
    Name: env
  - Env:
    - Key: WEB_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Taipei
    Name: env
  - Env:
    - Key: APP_KEY
      Value: base64:fx/bpfXs+pQ3j7eeZP5gkqWxBtbhUpaqELdpQeeP/N8=
    Name: env
  - Env:
    - Key: DB_HOST
      Value: db
    Name: env
  - Env:
    - Key: DB_PORT
      Value: "3306"
    Name: env
  - Env:
    - Key: DB_DATABASE
      Value: laravel
    Name: env
  - Env:
    - Key: DB_USERNAME
      Value: root
    Name: env
  - Env:
    - Key: DB_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: REDIS_HOST
      Value: redis
    Name: env
  - Env:
    - Key: REDIS_PORT
      Value: "6379"
    Name: env
  - Env:
    - Key: REDIS_PASSWORD
      Value: "null"
    Name: env
  - Env:
    - Key: CACHE_DRIVER
      Value: redis
    Name: env
  - Env:
    - Key: SESSION_DRIVER
      Value: redis
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gencerts.sh
    - /usr/local/bin/
  - Name: workdir
    Path: /var/www/localhost/htdocs
  - CmdLine:
    - chmod 755 /usr/local/bin/*.sh     && apk update     && apk add --no-cache bash
      sudo git zip mc curl certbot acme-client openssl ca-certificates findutils openldap-clients                           mysql-client
      nodejs apache2 apache2-ssl python php7-apache2 php7-ldap php7-xmlwriter php7-opcache                           php7-curl
      php7-openssl php7-json php7-phar php7-dom php7-mysqlnd php7-pdo_mysql php7-iconv                           php7-mcrypt
      php7-ctype php7-xml php7-mbstring php7-tokenizer php7-session php7-fileinfo
      php7-zlib     && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ
      > /etc/timezone     && mkdir /run/apache2     && sed -ri            -e 's!^DocumentRoot
      "/var/www/localhost/htdocs"$!DocumentRoot "/var/www/localhost/htdocs/public"!g'            -e
      's!^<Directory "/var/www/localhost/htdocs">$!<Directory "/var/www/localhost/htdocs/public">!g'            -e
      's!^#(LoadModule rewrite_module .*)$!\1!g'            -e 's!^(\s*AllowOverride)
      None.*$!\1 All!g'            -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'            -e
      's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'            "/etc/apache2/httpd.conf"            &&
      sed -ri            -e 's!^DocumentRoot "/var/www/localhost/htdocs"$!DocumentRoot
      "/var/www/localhost/htdocs/public"!g'            -e 's!^ServerName .*$!ServerName
      localhost!g'            "/etc/apache2/conf.d/ssl.conf"            && sed -ri            -e
      's!^(max_execution_time = )(.*)$!\1 72000!g'            -e 's!^(post_max_size
      = )(.*)$!\1 1024M!g'            -e 's!^(upload_max_filesize = )(.*)$!\1 1024M!g'            -e
      's!^(memory_limit = )(.*)$!\1 2048M!g'            -e 's!^;(opcache.enable=)(.*)!\1
      1!g'            -e 's!^;(opcache.memory_consumption=)(.*)!\1 1280!g'            -e
      's!^;(opcache.max_accelerated_files=)(.*)!\1 65407!g'            -e 's!^;(opcache.validate_timestamps=)(.*)!\1
      0!g'            -e 's!^;(opcache.save_comments=)(.*)!\1 1!g'            -e 's!^;(opcache.fast_shutdown=)(.*)!\1
      0!g'            "/etc/php7/php.ini"            && rm -f index.html     && curl
      -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer     &&
      /usr/bin/composer create-project --no-progress --prefer-dist laravel/laravel
      /var/www/localhost/htdocs     && composer require predis/predis                         laravel/socialite                         laravel/passport                         guzzlehttp/guzzle                         appstract/laravel-opcache                         tcg/voyager     &&
      chown -R apache:apache /var/www     && sed -ri            -e '/^DB_HOST=/d'            -e
      '/^DB_PORT=/d'            -e '/^DB_DATABASE=/d'            -e '/^DB_USERNAME=/d'            -e
      '/^DB_PASSWORD=/d'            -e '/^REDIS_HOST=/d'            -e '/^REDIS_PORT=/d'            -e
      '/^REDIS_PASSWORD=/d'            -e '/^CACHE_DRIVER=/d'            -e '/^SESSION_DRIVER=/d'            /var/www/localhost/htdocs/.env     &&
      cp -Rp /var/www/localhost/htdocs /root
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www/localhost/htdocs
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
