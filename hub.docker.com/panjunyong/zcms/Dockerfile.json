{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:12.04",
      "SourceCode": "FROM ubuntu:12.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:12.04"
      },
      "Commands": [
        {
          "Maintainer": "panjunyong@gmail.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"deb http://mirrors.ustc.edu.cn/ubuntu precise main universe restricted multiverse\" \u003e /etc/apt/sources.list \u0026\u0026     apt-get update  \u0026\u0026     apt-get -y install python-dev python-pip \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-get -y clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\\ndaemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir mkdir -p /opt/buildout-cache/eggs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -i http://pypi.douban.com/simple/ --upgrade setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -i http://pypi.douban.com/simple/ zc.buildout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/zcms/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "buildout.cfg",
            "/var/zcms/buildout.cfg"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "production.ini",
            "/var/zcms/production.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "development.ini",
            "/var/zcms/development.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx_conf.py",
            "/var/zcms/nginx_conf.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sites",
            "/var/sites"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/zcms"
        },
        {
          "CmdLine": [
            "python -c \"from zc.buildout import buildout; buildout.main(['bootstrap'])\" \u0026\u0026     bin/buildout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run",
            "/usr/local/bin/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/share/locales/install-language-pack en_US"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/bin/run"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}