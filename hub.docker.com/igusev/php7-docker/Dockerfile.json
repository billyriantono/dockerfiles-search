{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0.12-cli",
      "SourceCode": "FROM php:7.0.12-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.0.12-cli"
      },
      "Commands": [
        {
          "Maintainer": "Ilya Gusev \u003cmail@igusev.ru\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/     \u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure mysqli --with-mysqli=mysqlnd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mbstring bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://xdebug.org/files/xdebug-2.4.0.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzf xdebug-2.4.0.tgz     \u0026\u0026 cd xdebug-2.4.0/     \u0026\u0026 phpize     \u0026\u0026 ./configure --enable-xdebug     \u0026\u0026 make     \u0026\u0026 echo 'zend_extension=\"/xdebug-2.4.0/modules/xdebug.so\"' \u003e /usr/local/etc/php/conf.d/20-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libmcrypt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "3.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz     \u0026\u0026 tar xfz /tmp/redis.tar.gz     \u0026\u0026 rm -r /tmp/redis.tar.gz     \u0026\u0026 mkdir -p /usr/src/php/ext     \u0026\u0026 mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis     \u0026\u0026 docker-php-ext-install redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libicu-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libssl-dev \u0026\u0026     pecl install mongodb \u0026\u0026     echo 'extension=mongodb.so' \u003e /usr/local/etc/php/conf.d/20-mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main 9.5\" \u003e\u003e /etc/apt/sources.list.d/pgdb.list \u0026\u0026     apt-get install -y wget \u0026\u0026     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y postgresql-9.5 libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo pdo_pgsql pgsql sockets intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "/etc/init.d/postgresql start \u0026\u0026    psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\" \u0026\u0026    createdb -O docker docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"    IdentityFile /root/.ssh/id_rsa\" \u003e\u003e /etc/ssh/ssh_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"    StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yqq memcached libmemcached-dev \u0026\u0026     git clone https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached       \u0026\u0026 cd /usr/src/php/ext/memcached \u0026\u0026 git checkout -b php7 origin/php7       \u0026\u0026 docker-php-ext-configure memcached       \u0026\u0026 docker-php-ext-install memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}