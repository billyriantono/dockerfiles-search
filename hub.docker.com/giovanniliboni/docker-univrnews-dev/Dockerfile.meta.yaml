MetaArgs: null
Stages:
- BaseName: node:10.6.0-alpine
  Commands:
  - Maintainer: Stafford Brunk <stafford.brunk@gmail.com>
    Name: maintainer
  - Labels:
    - Key: version
      Value: '''7.6.0'''
    Name: label
  - Labels:
    - Key: description
      Value: '''Heroku CLI packaged on alpine linux'''
    Name: label
  - Env:
    - Key: HEROKU_CLI_VERSION
      Value: '''7.20.1'''
    Name: env
  - CmdLine:
    - yarn global add heroku@$HEROKU_CLI_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache \t\tgit ca-certificates openssh-keygen openssh-client postgresql-client"
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.11.5
    Name: env
  - CmdLine:
    - "set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev
      \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go
      env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\"
      \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\";
      \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387'
      ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\";
      \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz'
      | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src;
      \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj
      \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo
      version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - Name: volume
    Volumes:
    - /root/.config
  From:
    Image: node:10.6.0-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.6.0-alpine
