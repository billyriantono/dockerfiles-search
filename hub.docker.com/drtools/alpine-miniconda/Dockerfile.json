{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Alan Hoeng \u003calan.f.hoeng@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 apk --update add     bash     curl     ca-certificates     libstdc++     glib     tini@testing     \u0026\u0026 curl \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" -o /etc/apk/keys/sgerrand.rsa.pub     \u0026\u0026 curl -L \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o glibc.apk     \u0026\u0026 apk add glibc.apk     \u0026\u0026 curl -L \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o glibc-bin.apk     \u0026\u0026 apk add glibc-bin.apk     \u0026\u0026 curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.25-r0/glibc-i18n-2.25-r0.apk\" -o glibc-i18n.apk     \u0026\u0026 apk add --allow-untrusted glibc-i18n.apk     \u0026\u0026 /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8     \u0026\u0026 /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc/usr/lib     \u0026\u0026 rm -rf glibc*apk /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_USER",
              "Value": "drtools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_VER",
              "Value": "4.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA",
              "Value": "Miniconda3-$MINICONDA_VER-Linux-x86_64.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_URL",
              "Value": "https://repo.continuum.io/miniconda/$MINICONDA"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_MD5_SUM",
              "Value": "0c28787e3126238df24c5d4858bd0744"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser -s /bin/bash -u $CONTAINER_UID -D $CONTAINER_USER \u0026\u0026     mkdir -p /opt/conda \u0026\u0026     chown $CONTAINER_USER /opt/conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$CONTAINER_USER"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     curl -L $MINICONDA_URL  -o miniconda.sh \u0026\u0026     echo \"$MINICONDA_MD5_SUM  miniconda.sh\" | md5sum -c - \u0026\u0026     /bin/bash miniconda.sh -f -b -p $CONDA_DIR \u0026\u0026     rm miniconda.sh \u0026\u0026     $CONDA_DIR/bin/conda install --yes conda==$MINICONDA_VER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda upgrade -y pip \u0026\u0026     conda config --add channels conda-forge \u0026\u0026     conda clean --all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/home/$CONTAINER_USER/"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "$CONTAINER_USER"
        }
      ]
    }
  ]
}