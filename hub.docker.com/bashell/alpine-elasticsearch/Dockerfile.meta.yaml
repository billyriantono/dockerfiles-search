MetaArgs: null
Stages:
- BaseName: quay.io/bashell/alpine-bash
  Commands:
  - CmdLine:
    - apk add openjdk8-jre openssl coreutils
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_BASE
      Value: https://github.com/tianon/gosu/releases/download
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - set -x     && apk add gnupg     && wget -O /usr/local/bin/gosu "$GOSU_BASE/$GOSU_VERSION/gosu-$(apk
      --print-arch |sed -e 's/x86_64/amd64/')"     && wget -O /usr/local/bin/gosu.asc
      "$GOSU_BASE/$GOSU_VERSION/gosu-$(apk --print-arch |sed -e 's/x86_64/amd64/').asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg2 --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg2 --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true     && apk del gnupg
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION
      Value: 6.2.4
    Name: env
  - Env:
    - Key: DOWNLOAD_URL
      Value: https://artifacts.elastic.co/downloads/elasticsearch
    Name: env
  - CmdLine:
    - mkdir -p /opt && adduser -h /opt/elasticsearch -g elasticsearch -s /bin/bash
      -D elasticsearch
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - ln -s elasticsearch elasticsearch-$VERSION
    Name: run
    PrependShell: true
  - Name: user
    User: elasticsearch
  - CmdLine:
    - set -x     && wget -O - "$DOWNLOAD_URL/elasticsearch-$VERSION.tar.gz" | tar
      zxf -
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/elasticsearch/bin:$PATH
    Name: env
  - Name: workdir
    Path: /opt/elasticsearch
  - CmdLine:
    - set -ex     && for path in         ./data         ./logs         ./config         ./config/scripts     ;
      do         mkdir -p "$path";         chown -R elasticsearch:elasticsearch "$path";     done
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - Name: volume
    Volumes:
    - /opt/elasticsearch/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: quay.io/bashell/alpine-bash
  Name: ""
  Platform: ""
  SourceCode: FROM quay.io/bashell/alpine-bash
