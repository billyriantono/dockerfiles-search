{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Key": "ST2_VERSION",
          "Name": "arg",
          "Value": "2.10.1"
        },
        {
          "CmdLine": [
            ": \"${ST2_VERSION:?Docker build argument needs to be set and non-empty.}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENV",
              "Value": "/etc/skel/.profile"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update   \u0026\u0026 apt-get install -y     curl     locales   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 locale-gen en_US.UTF-8   \u0026\u0026 update-locale LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'en_US.UTF-8'"
            },
            {
              "Key": "LANGUAGE",
              "Value": "'en_US:en'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'en_US.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /data/db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gnupg-curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO - https://www.mongodb.org/static/pgp/server-3.4.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\" \u003e /etc/apt/sources.list.d/mongodb-org-3.4.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y crudini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y mongodb-org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y rabbitmq-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ST2_PASSWORD",
              "Value": "antidotepassword"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sf https://packagecloud.io/install/repositories/StackStorm/stable/script.deb.sh | bash   \u0026\u0026 apt-get install -y st2=${ST2_VERSION}-*   \u0026\u0026 rm -f /etc/apt/sources.list.d/StackStorm_*.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "htpasswd",
            "/etc/st2/htpasswd"
          ]
        },
        {
          "CmdLine": [
            "echo \"stanley:stanley\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start_st2_services.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y openssh-server python git vim screen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "napalm.yaml",
            "/opt/stackstorm/configs"
          ]
        },
        {
          "CmdLine": [
            "cp -r /usr/share/doc/st2/examples/ /opt/stackstorm/packs/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CACHEBUST",
          "Name": "arg",
          "Value": "1"
        },
        {
          "CmdLine": [
            "screen -d -m /start_st2_services.sh \u0026\u0026 sleep 15     \u0026\u0026 st2ctl reload --register-all     \u0026\u0026 st2 run packs.setup_virtualenv packs=examples     \u0026\u0026 st2 pack remove napalm \u0026\u0026 st2 pack install https://github.com/nre-learning/stackstorm-napalm.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/stackstorm/virtualenvs/napalm/bin/pip install ncclient==0.6.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CACHEBUST",
          "Name": "arg",
          "Value": "0"
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/antidote"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd antidote -p antidotepassword"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/antidote/.st2/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "st2config",
            "/home/antidote/.st2/config"
          ]
        },
        {
          "CmdLine": [
            "chown antidote:antidote /home/antidote /home/antidote/.st2 /home/antidote/.st2/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh antidote --shell=/bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'antidote:antidotepassword' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:$(uuidgen)' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/update-motd.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/legal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".welcome.sh",
            "/etc/update-motd.d/00-antidote-motd"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/update-motd.d/00-antidote-motd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"auth required pam_wheel.so use_uid\" \u003e\u003e /etc/pam.d/su"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/start_st2_services.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}