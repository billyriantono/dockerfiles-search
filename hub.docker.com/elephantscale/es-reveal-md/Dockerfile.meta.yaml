MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Key: MYUSER
    Name: arg
    Value: ubuntu
  - Key: HOME_DIR
    Name: arg
    Value: /home/${MYUSER}
  - Key: CONDA_DIR
    Name: arg
    Value: ${HOME_DIR}/conda
  - Key: NVM_VERSION
    Name: arg
    Value: 0.34.0
  - Env:
    - Key: NVM_DIR
      Value: ${HOME_DIR}/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 10.15.2
    Name: env
  - Env:
    - Key: ES_HOME
      Value: ${HOME_DIR}
    Name: env
  - Env:
    - Key: WORKING_DIR
      Value: ${HOME_DIR}/dev
    Name: env
  - Env:
    - Key: NODE_PATH
      Value: ${NVM_DIR}/v${NODE_VERSION}/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: ${NVM_DIR}/versions/node/v${NODE_VERSION}/bin:${PATH}
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    Name: env
  - CmdLine:
    - echo "*** http_proxy=${http_proxy} ***"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update --fix-missing -yq &&     apt-get -yq upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq  --no-install-recommends     atop     build-essential     ca-certificates     curl     git     less     jq     openssh-client     nano     rsync     screen     sudo     vim     unzip     wget     zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq         ca-certificates         fonts-liberation         gconf-service         gnupg         libappindicator1         libasound2         libatk1.0-0         libc6         libcairo2         libcups2         libdbus-1-3         libexpat1         libfontconfig1         libgcc1         libgconf-2-4         libgdk-pixbuf2.0-0         libglib2.0-0         libgtk-3-0         libnspr4         libnss3         libpango-1.0-0         libpangocairo-1.0-0         libstdc++6         libx11-6         libx11-xcb1         libxcb1         libxcomposite1         libxcursor1         libxdamage1         libxext6         libxfixes3         libxi6         libxrandr2         libxrender1         libxss1         libxtst6         lsb-release         ttf-bitstream-vera         ttf-dejavu         wget         xdg-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq     texlive-latex-base texlive-fonts-recommended
      texlive-fonts-extra texlive-latex-extra
    Name: run
    PrependShell: true
  - CmdLine:
    - apt clean &&         rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -rm -d ${HOME_DIR} -s /bin/bash -g root -G sudo,audio,video -u 1000
      ${MYUSER}
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "${MYUSER} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: ${MYUSER}
  - Name: workdir
    Path: ${HOME_DIR}
  - CmdLine:
    - mkdir -p ${NVM_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh
      | bash     && . ${NVM_DIR}/nvm.sh     && nvm install ${NODE_VERSION}     &&
      nvm alias default ${NODE_VERSION}     && nvm use default
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -g install npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g -f elephantscale/es-reveal-md#r-es-prod
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh
      -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p ${CONDA_DIR} &&     rm
      ~/miniconda.sh &&     echo ". ${CONDA_DIR}/etc/profile.d/conda.sh" >> ~/.bashrc
      &&     echo "conda activate base" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ${CONDA_DIR}/bin/conda install         beautifulsoup4         matplotlib         pandoc          pillow         pygments
    Name: run
    PrependShell: true
  - CmdLine:
    - ${CONDA_DIR}/bin/pip install         anytree         mistletoe         pytablewriter         python-pptx
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${WORKING_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${HOME_DIR}/.ssh/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssh-config-ubuntu
    - ${HOME_DIR}/.ssh/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deploy-utils.pem
    - ${HOME_DIR}/.ssh/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deploy-utils.pub
    - ${HOME_DIR}/.ssh/
  - CmdLine:
    - touch ${HOME_DIR}/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keyscan github.com >> ${HOME_DIR}/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chown -R ${MYUSER}  ${HOME_DIR}/.ssh  &&     chmod 600  ${HOME_DIR}/.ssh/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd  ${HOME_DIR} &&      git clone git@github.com:elephantscale/utils.git &&      cd
      ${HOME_DIR}/utils && git checkout r-reveal-prod &&      sudo chown -R ${MYUSER}  $HOME_DIR/utils
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PS1="\e[0;31m\u@es-reveal-md  \[\w\] > \e[m "' >> ~/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./startup.sh
    - $HOME_DIR/
  - CmdLine:
    - sudo chown ${MYUSER}  $HOME_DIR/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chmod +x  $HOME_DIR/*.sh
    Name: run
    PrependShell: true
  - Name: user
    User: ${MYUSER}
  - CmdLine:
    - /bin/bash
    - /home/ubuntu/startup.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
