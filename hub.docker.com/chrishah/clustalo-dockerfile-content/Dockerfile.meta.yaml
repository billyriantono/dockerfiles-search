MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Chris Miller <c.a.miller@wustl.edu>
    Name: maintainer
  - Labels:
    - Key: Image
      Value: for basic ad-hoc bioinformatic analyses
    Name: label
  - CmdLine:
    - apt-get update -y && apt-get install -y --no-install-recommends     build-essential     bzip2     curl     csh     default-jdk     default-jre     emacs     emacs-goodies-el     evince     g++     gawk     git     grep     less     libcurl4-openssl-dev     libpng-dev     librsvg2-bin     libssl-dev     libxml2-dev     lsof     make     man     ncurses-dev     nodejs     openssh-client     pdftk     pkg-config     python     rsync     screen     tabix     unzip     wget     zip     zlib1g-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: HTSLIB_INSTALL_DIR
      Value: /opt/htslib
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/samtools/htslib/releases/download/1.3.2/htslib-1.3.2.tar.bz2
      &&     tar --bzip2 -xvf htslib-1.3.2.tar.bz2 &&     cd /tmp/htslib-1.3.2 &&     ./configure  --enable-plugins
      --prefix=$HTSLIB_INSTALL_DIR &&     make &&     make install &&     cp $HTSLIB_INSTALL_DIR/lib/libhts.so*
      /usr/lib/
    Name: run
    PrependShell: true
  - Env:
    - Key: SAMTOOLS_INSTALL_DIR
      Value: /opt/samtools
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2
      &&     tar --bzip2 -xf samtools-1.3.1.tar.bz2 &&     cd /tmp/samtools-1.3.1
      &&     ./configure --with-htslib=$HTSLIB_INSTALL_DIR --prefix=$SAMTOOLS_INSTALL_DIR
      &&     make &&     make install &&     cd / &&     rm -rf /tmp/samtools-1.3.1
      &&     ln -s /opt/samtools/bin/* /usr/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: SAMTOOLS_ROOT
      Value: /opt/samtools
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cmake         patch
      &&     mkdir /opt/bam-readcount &&     cd /opt/bam-readcount &&     git clone
      https://github.com/genome/bam-readcount.git /tmp/bam-readcount-0.7.4 &&     git
      -C /tmp/bam-readcount-0.7.4 checkout v0.7.4 &&     cmake /tmp/bam-readcount-0.7.4
      &&     make &&     rm -rf /tmp/bam-readcount-0.7.4 &&     ln -s /opt/bam-readcount/bin/bam-readcount
      /usr/bin/bam-readcount
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bam_readcount_helper.py
    - /usr/bin/bam_readcount_helper.py
  - Env:
    - Key: BCFTOOLS_INSTALL_DIR
      Value: /opt/bcftools
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/samtools/bcftools/releases/download/1.3.1/bcftools-1.3.1.tar.bz2
      &&     tar --bzip2 -xf bcftools-1.3.1.tar.bz2 &&     cd /tmp/bcftools-1.3.1
      &&     make prefix=$BCFTOOLS_INSTALL_DIR &&     make prefix=$BCFTOOLS_INSTALL_DIR
      install &&     cd / &&     rm -rf /tmp/bcftools-1.3.1
    Name: run
    PrependShell: true
  - Env:
    - Key: picard_version
      Value: 2.4.1
    Name: env
  - CmdLine:
    - apt-get update && apt-get install ant --no-install-recommends -y &&     cd /usr/
      &&     git config --global http.sslVerify false &&     git clone --recursive
      https://github.com/broadinstitute/picard.git &&     cd /usr/picard &&     git
      checkout tags/${picard_version} &&     cd /usr/picard &&     git config --global
      http.sslVerify false &&     git clone https://github.com/samtools/htsjdk.git
      &&     cd htsjdk &&     git checkout tags/${picard_version} &&     cd .. &&     ant
      clean all &&     mv dist/picard.jar picard.jar &&     mv src/scripts/picard/docker_helper.sh
      docker_helper.sh &&     ant clean &&     rm -rf htsjdk &&     rm -rf src &&     rm
      -rf lib &&     rm build.xml
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - split_interval_list_helper.pl
    - /usr/bin/split_interval_list_helper.pl
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     software-properties-common     glib-networking-common
      &&     mkdir -p /igv &&     cd /igv &&     wget http://data.broadinstitute.org/igv/projects/downloads/3.0_beta/IGV_3.0_beta.zip
      &&     unzip IGV_3.0_beta.zip &&     cd IGV_3.0_beta &&     sed -i 's/Xmx4000/Xmx8000/g'
      igv.sh &&     cd /usr/bin &&     ln -s /igv/IGV_3.0_beta/igv.sh ./igv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local
  - CmdLine:
    - git clone https://github.com/arq5x/bedtools2.git &&     cd /usr/local/bedtools2
      &&     git checkout v2.25.0 &&     make &&     ln -s /usr/local/bedtools2/bin/*
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: ZIP
      Value: vcftools-0.1.14.tar.gz
    Name: env
  - Env:
    - Key: URL
      Value: https://github.com/vcftools/vcftools/releases/download/v0.1.14/
    Name: env
  - Env:
    - Key: FOLDER
      Value: vcftools-0.1.14
    Name: env
  - Env:
    - Key: DST
      Value: /tmp
    Name: env
  - CmdLine:
    - wget $URL/$ZIP -O $DST/$ZIP &&     tar xvf $DST/$ZIP -C $DST &&     rm $DST/$ZIP
      &&     cd $DST/$FOLDER &&     ./configure &&     make &&     make install &&     cd
      / &&     rm -rf $DST/$FOLDER
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/ucsc &&     cd /tmp/ucsc &&     wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig
      http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bigBedToBed
      http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bigWigAverageOverBed http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bigWigToBedGraph
      http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/wigToBigWig &&     chmod
      ugo+x * &&     mv * /usr/bin/
    Name: run
    PrependShell: true
  - Key: R_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: BUILD_DATE
      Value: "2017-06-20"
    Name: env
  - Env:
    - Key: R_VERSION
      Value: ${R_VERSION:-3.4.0}
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends locales &&     echo
      "en_US.UTF-8 UTF-8" >> /etc/locale.gen &&     locale-gen en_US.UTF-8 &&     LC_ALL=en_US.UTF-8
      &&     LANG=en_US.UTF-8 &&     /usr/sbin/update-locale LANG=en_US.UTF-8 &&     TERM=xterm
      &&     apt-get install -y --no-install-recommends     bash-completion     ca-certificates     file     fonts-texgyre     g++     gfortran     gsfonts     libbz2-1.0     libcurl3     libicu55     libjpeg-turbo8     libopenblas-dev     libpangocairo-1.0-0     libpcre3     libpng12-0     libtiff5     liblzma5     locales     zlib1g     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libmariadb-client-lgpl-dev     libmysqlclient-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     perl     tcl8.5-dev     tk8.5-dev     texinfo     texlive-extra-utils     texlive-fonts-recommended     texlive-fonts-extra     texlive-latex-recommended     x11proto-core-dev     xauth     xfonts-base     xvfb     zlib1g-dev
      &&     cd /tmp/ &&     curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz
      &&     tar -xf R-${R_VERSION}.tar.gz &&     cd R-${R_VERSION} &&     R_PAPERSIZE=letter
      &&     R_BATCHSAVE="--no-save --no-restore" &&     R_BROWSER=xdg-open &&     PAGER=/usr/bin/pager
      &&     PERL=/usr/bin/perl &&     R_UNZIPCMD=/usr/bin/unzip &&     R_ZIPCMD=/usr/bin/zip
      &&     R_PRINTCMD=/usr/bin/lpr &&     LIBnn=lib &&     AWK=/usr/bin/awk &&     CFLAGS="-g
      -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2
      -g" &&     CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security
      -Wdate-time -D_FORTIFY_SOURCE=2 -g" &&     ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas="-lopenblas"                --disable-nls                --without-recommended-packages
      &&     make &&     make install &&     echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'),
      download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site &&     mkdir
      -p /usr/local/lib/R/site-library &&     chown root:staff /usr/local/lib/R/site-library
      &&     chmod g+wx /usr/local/lib/R/site-library &&     echo "R_LIBS_USER='/usr/local/lib/R/site-library'"
      >> /usr/local/lib/R/etc/Renviron &&     echo "R_LIBS=\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}"
      >> /usr/local/lib/R/etc/Renviron &&     [ -z "$BUILD_DATE" ] && BUILD_DATE=$(TZ="America/Los_Angeles"
      date -I) || true &&     MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE}
      &&     echo MRAN=$MRAN >> /etc/environment &&     export MRAN=$MRAN &&     echo
      "options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site
      &&     Rscript -e "install.packages(c('littler', 'docopt'), repo = '$MRAN')"
      &&     ln -s /usr/local/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r
      &&     ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r &&     ln -s /usr/local/lib/R/site-library/littler/bin/r
      /usr/local/bin/r
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - rpackages.R
    - /tmp/
  - CmdLine:
    - R -f /tmp/rpackages.R &&    cd /tmp/ &&     wget https://github.com/chrisamiller/fishplot/archive/v0.4.tar.gz
      &&     mv v0.4.tar.gz fishplot_0.4.tar.gz &&     R CMD INSTALL fishplot_0.4.tar.gz
      &&     cd && rm -rf /tmp/fishplot_0.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / &&    rm -rf /tmp/* &&    apt-get autoremove -y &&    apt-get autoclean
      -y &&    rm -rf /var/lib/apt/lists/* &&    apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     curl -s https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh
      -o miniconda.sh &&     /bin/bash miniconda.sh -f -b -p $CONDA_DIR &&     rm
      miniconda.sh &&     $CONDA_DIR/bin/conda config --system --add channels conda-forge
      &&     $CONDA_DIR/bin/conda config --system --set auto_update_conda false &&     conda
      clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --yes 'pip' &&     conda clean -tipsy &&     pip install numpy==1.13.0
      &&     pip install scipy==0.19.0 &&     pip install cruzdb==0.5.6 &&     pip
      install cython==0.25.2 &&     pip install pyensembl==1.1.0 &&     pip install
      pyfaidx==0.4.9.2 &&     pip install pybedtools==0.7.10 &&     pip install cyvcf2==0.7.4
      &&     pip install intervaltree_bio==1.0.1 &&     pip install pandas==0.20.2
      &&     pip install scipy==0.19.0 &&     pip install pysam==0.11.2.2 &&     pip
      install seaborn==0.7.1 &&     pip install scikit-learn==0.18.2 &&     pip install
      svviz==1.6.1
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create --quiet --yes -p $CONDA_DIR/envs/python2 python=2.7 'pip' &&     conda
      clean -tipsy &&     /bin/bash -c "source activate python2 &&     pip install
      numpy==1.13.0 &&     pip install scipy==0.19.0 &&     pip install cruzdb==0.5.6
      &&     pip install cython==0.25.2 &&     pip install pyensembl==1.1.0 &&     pip
      install pyfaidx==0.4.9.2 &&     pip install pybedtools==0.7.10 &&     pip install
      cyvcf2==0.7.4 &&     pip install intervaltree_bio==1.0.1 &&     pip install
      pandas==0.20.2 &&     pip install scipy==0.19.0 &&     pip install pysam==0.11.2.2
      &&     pip install seaborn==0.7.1 &&     pip install scikit-learn==0.18.2 &&     pip
      install openpyxl==2.4.8 &&     source deactivate"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tsv2xlsx.py
    - /usr/bin/tsv2xlsx.py
  - CmdLine:
    - apt-get update && apt-get install -y libnss-sss && apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime &&     echo "America/Chicago"
      > /etc/timezone &&     dpkg-reconfigure --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y dbus && apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - dbus-uuidgen >/etc/machine-id
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
