{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Conor Heine \u003cconor.heine@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "export",
              "Value": "LANGUAGE=en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "export",
              "Value": "LC_ALL=en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "export",
              "Value": "LANG=en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "export",
              "Value": "LC_TYPE=en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get --yes install     \tautomake \tautoconf \tbuild-essential \tffmpeg \tgit \tlibav-tools \tlibavcodec-dev \tlibavformat-dev \tlibavutil-dev \tlibcurl4-openssl-dev \tlibjpeg-dev \tlibssl-dev \tlibswscale-dev \tpkgconf         python-dev         python-pip \tpython-setuptools \tsubversion \tv4l-utils \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install tornado jinja2 pillow pycurl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/Mr-Dave/motion.git motion-mrdave \u0026\u0026     cd /tmp/motion-mrdave \u0026\u0026     autoreconf -fiv \u0026\u0026     ./configure --prefix=/usr --without-pgsql --without-sdl --without-sqlite3 --without-mysql \u0026\u0026     make \u0026\u0026     touch README     make install \u0026\u0026     cp motion /usr/local/bin/motion \u0026\u0026     rm -rf /tmp/motion-mrdave"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/tmp/motioneye"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp/motioneye \u0026\u0026     python setup.py install \u0026\u0026     mkdir /etc/motioneye \u0026\u0026     mkdir -p /var/lib/motioneye \u0026\u0026     mkdir -p /usr/share/motioneye/extra \u0026\u0026     cp /tmp/motioneye/extra/motioneye.conf.sample /usr/share/motioneye/extra/motioneye.conf.sample \u0026\u0026     rm -rf /tmp/motioneye"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/motioneye"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/run/motion"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/motioneye"
          ]
        },
        {
          "CmdLine": [
            "test -e /etc/motioneye/motioneye.conf ||     cp /usr/share/motioneye/extra/motioneye.conf.sample /etc/motioneye/motioneye.conf ;     /usr/local/bin/meyectl startserver -c /etc/motioneye/motioneye.conf"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8765"
          ]
        }
      ]
    }
  ]
}