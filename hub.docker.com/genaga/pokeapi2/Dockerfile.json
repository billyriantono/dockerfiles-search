{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'deb http://ppa.launchpad.net/chris-lea/redis-server/ubuntu xenial main' \u003e /etc/apt/sources.list.d/redis-server.list \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C7917B12"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get -y install git python-dev make python-pip libpq-dev postgresql postgresql-contrib redis-server \u0026\u0026 apt-get -y clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/# bind 127\\.0\\.0\\.1/bind 127\\.0\\.0\\.1/' /etc/redis/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app \u0026\u0026 chown -R postgres:postgres /app"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/app/requirements.txt"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "test-requirements.txt",
            "/app/test-requirements.txt"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app/"
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "service postgresql start                                 \u0026\u0026     service redis-server start                               \u0026\u0026     su - postgres -c \"psql --command \\\"CREATE USER ash WITH PASSWORD 'pokemon'\\\"\" \t\u0026\u0026     su - postgres -c \"createdb -O ash pokeapi\"                                  \t\u0026\u0026     python manage.py migrate --settings=config.docker                         \t\t\u0026\u0026     echo \"from data.v2.build import build_all; build_all(); quit()\" | python -u manage.py shell --settings=config.docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026 service redis-server start \u0026\u0026 python manage.py runserver --settings=config.docker 0.0.0.0:8000"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}