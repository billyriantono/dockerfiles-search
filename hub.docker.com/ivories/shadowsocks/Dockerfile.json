{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "Acris Liu \"https://github.com/Acris/docker-shadowsocks-libev\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SHADOWSOCKS_LIBEV_VERSION",
              "Value": "v3.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIMPLE_OBFS_VERSION",
              "Value": "v0.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .build-deps                autoconf                automake                build-base                libev-dev                libtool                linux-headers                udns-dev                libsodium-dev                mbedtls-dev                pcre-dev                tar                udns-dev                git                c-ares-dev     \u0026\u0026 mkdir -p /tmp/build-shadowsocks-libev     \u0026\u0026 cd /tmp/build-shadowsocks-libev     \u0026\u0026 git clone https://github.com/shadowsocks/shadowsocks-libev.git     \u0026\u0026 cd shadowsocks-libev     \u0026\u0026 git checkout \"$SHADOWSOCKS_LIBEV_VERSION\"     \u0026\u0026 git submodule update --init --recursive     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure --disable-documentation     \u0026\u0026 make install     \u0026\u0026 ssRunDeps=\"$(         scanelf --needed --nobanner /usr/local/bin/ss-server             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache --virtual .ss-rundeps $ssRunDeps     \u0026\u0026 cd /     \u0026\u0026 rm -rf /tmp/build-shadowsocks-libev     \u0026\u0026 mkdir -p /tmp/build-simple-obfs     \u0026\u0026 cd /tmp/build-simple-obfs     \u0026\u0026 git clone https://github.com/shadowsocks/simple-obfs.git     \u0026\u0026 cd simple-obfs     \u0026\u0026 git checkout \"$SIMPLE_OBFS_VERSION\"     \u0026\u0026 git submodule update --init --recursive     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure --disable-documentation     \u0026\u0026 make install     \u0026\u0026 simpleObfsRunDeps=\"$(         scanelf --needed --nobanner /usr/local/bin/obfs-server             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache --virtual .simple-obfs-rundeps $simpleObfsRunDeps     \u0026\u0026 cd /     \u0026\u0026 rm -rf /tmp/build-simple-obfs     \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SERVER_HOST",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "8388"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "shadowsocks"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENCRYPT_METHOD",
              "Value": "chacha20-ietf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEOUT",
              "Value": "60"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR",
              "Value": "8.8.8.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PLUGIN",
              "Value": "obfs-server"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PLUGIN_OPTS",
              "Value": "obfs=tls"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/tcp",
            "$SERVER_PORT/udp"
          ]
        },
        {
          "CmdLine": [
            "ss-server -s \"$SERVER_HOST\"                      -p \"$SERVER_PORT\"                      -k \"$PASSWORD\"                      -m \"$ENCRYPT_METHOD\"                      -t \"$TIMEOUT\"                      -d \"$DNS_ADDR\"                      -u                      --fast-open                      --reuse-port                      --plugin \"$PLUGIN\"                      --plugin-opts \"$PLUGIN_OPTS\""
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}