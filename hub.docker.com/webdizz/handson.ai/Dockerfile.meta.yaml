MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04
  Commands:
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - "apt-get update \t&& apt-get install -y wget bzip2 ca-certificates libglib2.0-0
      libxext6 libsm6 libxrender1 \t&& apt-get install -y libgomp1 vim \t&& echo 'export
      PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \t&& wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      -O ~/miniconda.sh \t&& /bin/bash ~/miniconda.sh -b -p /opt/conda \t&& rm ~/miniconda.sh
      \t&& . /etc/profile.d/conda.sh \t&& conda update -n base conda"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./environment.yml
    - /environment.yml
  - CmdLine:
    - "conda env create -f /environment.yml  \t&& conda clean --all -y \t&& groupadd
      appuser \t&& useradd --create-home -r --shell=/bin/bash -g appuser appuser \t&&
      mkdir -p /opt/notebooks \t&& chown appuser:appuser /opt/notebooks \t&& chown
      -R appuser:appuser /opt/conda/envs"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"/opt/notebooks"'
  - Name: user
    User: appuser
  - CmdLine:
    - /opt/conda/envs/handson.ai/bin/jupyter
    - notebook
    - --notebook-dir=/opt/notebooks
    - --ip='0.0.0.0'
    - --port=8888
    - --no-browser
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8888"
  From:
    Image: nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04
