{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:trusty-curl",
      "SourceCode": "FROM buildpack-deps:trusty-curl",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:trusty-curl"
      },
      "Commands": [
        {
          "Maintainer": "Software Craftsmen GmbH und CoKG \u003coffice@software-craftsmen.at\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get purge -y --auto-remove ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y openssh-client git \u0026\u0026     echo \"deb https://download.go.cd /\" | sudo tee /etc/apt/sources.list.d/gocd.list \u0026\u0026     apt-get install -y  apt-transport-https \u0026\u0026     wget -O - https://download.go.cd/GOCD-GPG-KEY.asc | sudo apt-key add - \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y go-server \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     sed -i -e 's/DAEMON=Y/DAEMON=N/' /etc/default/go-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cruise-config.xml",
            "cruise-config.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "docker-entrypoint.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "ARTIFACTS_LOCATION",
              "Value": "/var/lib/go-server/artifacts"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chmod +x docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8153",
            "8154"
          ]
        },
        {
          "CmdLine": [
            "./docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}