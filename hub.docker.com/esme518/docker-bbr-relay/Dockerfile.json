{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian",
      "SourceCode": "FROM debian",
      "Platform": "",
      "From": {
        "Image": "debian"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LKL_URL",
              "Value": "http://soft.91yun.org/uml/lkl/liblkl-hijack.so"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/etc/lkl"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y iptables haproxy wget     \u0026\u0026 wget --no-check-certificate \"$LKL_URL\" -O /etc/lkl/liblkl-hijack.so     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "haproxy.cfg",
            "/etc/lkl/haproxy.cfg"
          ]
        },
        {
          "Env": [
            {
              "Key": "BIND_PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TARGET_HOST",
              "Value": "target"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$BIND_PORT/tcp"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "haproxy",
            "-f",
            "/etc/lkl/haproxy.cfg"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}