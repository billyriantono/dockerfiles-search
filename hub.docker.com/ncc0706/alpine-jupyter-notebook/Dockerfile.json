{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "niuyuxian \u003c\"ncc0706@gmail.com\"\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \t\u0026\u0026 apk update \u0026\u0026 apk upgrade \t\u0026\u0026 apk add --no-cache tini python3 libstdc++ openblas freetype wget ca-certificates \t\u0026\u0026 python3 -m ensurepip \u0026\u0026 rm -r /usr/lib/python*/ensurepip \t\u0026\u0026 pip3 install --upgrade pip setuptools \t\u0026\u0026 apk add --no-cache --virtual .build-deps@testing python3-dev make cmake clang clang-dev g++ linux-headers libtbb@testing libtbb-dev@testing openblas-dev freetype-dev \t\u0026\u0026 export CC=/usr/bin/clang CXX=/usr/bin/clang++ \t\u0026\u0026 ln -s /usr/include/locale.h /usr/include/xlocale.h \t\u0026\u0026 mkdir -p /opt/tmp \u0026\u0026 cd /opt/tmp \t\u0026\u0026 pip3 download -d /opt/tmp numpy \t\u0026\u0026 unzip -q numpy*.zip \t\u0026\u0026 cd numpy* \u0026\u0026 echo \"Building numpy...\" \t\u0026\u0026 echo -e \"[ALL]\\nlibrary_dirs = /usr/lib\\ninclude_dirs = /usr/include\\n[atlas]\\natlas_libs = openblas\\nlibraries = openblas\\n[openblas]\\nlibraries = openblas\\nlibrary_dirs = /usr/lib\\ninclude_dirs = /usr/include\\n\" \u003e site.cfg \t\u0026\u0026 python3 setup.py build -j 4 install \u0026\u003e /dev/null \u0026\u0026 echo \"Successfully installed numpy\" \t\u0026\u0026 cd /opt/tmp \t\u0026\u0026 echo \"Downloading opencv\" \u0026\u0026 wget --quiet https://github.com/opencv/opencv/archive/3.4.0.zip \t\u0026\u0026 unzip -q 3.4.0.zip \t\u0026\u0026 cd opencv* \t\u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 echo \"Building opencv...\" \t\u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE \t\t-D CMAKE_INSTALL_PREFIX=/usr \t\t-D INSTALL_C_EXAMPLES=OFF \t\t-D INSTALL_PYTHON_EXAMPLES=OFF \t\t-D WITH_FFMPEG=NO \t\t-D WITH_IPP=NO \t\t-D WITH_OPENEXR=NO \t\t-D WITH_WEBP=NO \t\t-D WITH_TIFF=NO \t\t-D WITH_JASPER=NO \t\t-D BUILD_EXAMPLES=OFF \t\t-D BUILD_PERF_TESTS=NO \t\t-D BUILD_TESTS=NO .. \u0026\u003e /dev/null \t\u0026\u0026 make \u0026\u003e /dev/null \u0026\u0026 make install \u0026\u003e /dev/null \u0026\u0026 echo \"Successfully installed opencv\" \t\u0026\u0026 pip3 install --upgrade matplotlib jupyter ipywidgets \t\u0026\u0026 jupyter nbextension enable --py widgetsnbextension \t\u0026\u0026 echo \"c.NotebookApp.token = ''\" \u003e /root/.jupyter/jupyter_notebook_config.py \t\u0026\u0026 cd /opt \u0026\u0026 rm -r /opt/tmp \u0026\u0026 mkdir -p /opt/notebook \t\u0026\u0026 unset CC CXX \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 rm -r /root/.cache \t\u0026\u0026 find /usr/lib/python3.6/ -type d -name tests -depth -exec rm -rf {} \\; \t\u0026\u0026 find /usr/lib/python3.6/ -type d -name test -depth -exec rm -rf {} \\; \t\u0026\u0026 find /usr/lib/python3.6/ -name __pycache__ -depth -exec rm -rf {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/notebook"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--ip=0.0.0.0",
            "--port=8888",
            "--no-browser",
            "--allow-root"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}