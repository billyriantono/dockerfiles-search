{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "niuyuxian \u003c\"ncc0706@gmail.com\"\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add tzdata curl \t\u0026\u0026 cp /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.12.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add openssl-dev pcre-dev zlib-dev wget build-base     \u0026\u0026 addgroup -g 499 -S nginx     \u0026\u0026 adduser -HDu 499 -s /sbin/nologin -g 'web server' -G nginx nginx     \u0026\u0026 mkdir -p /tmp/src     \u0026\u0026 cd /tmp/src     \u0026\u0026 wget http://nginx.org/download/${NGINX_VERSION}.tar.gz     \u0026\u0026 tar -zxvf ${NGINX_VERSION}.tar.gz     \u0026\u0026 wget https://github.com/arut/nginx-rtmp-module/archive/v1.1.11.tar.gz -O nginx-rtmp-module-1.1.11.tar.gz     \u0026\u0026 tar -zxvf nginx-rtmp-module-1.1.11.tar.gz     \u0026\u0026 cd /tmp/src/${NGINX_VERSION}     \u0026\u0026 ./configure        --prefix=/usr/local/nginx        --conf-path=/etc/nginx/nginx.conf        --user=nginx        --group=nginx        --error-log-path=/var/log/nginx/error.log        --http-log-path=/var/log/nginx/access.log        --pid-path=/var/run/nginx/nginx.pid        --lock-path=/var/lock/nginx.lock        --with-http_ssl_module        --with-http_stub_status_module        --with-http_gzip_static_module        --with-http_flv_module        --with-http_mp4_module        --http-client-body-temp-path=/var/tmp/nginx/client        --http-proxy-temp-path=/var/tmp/nginx/proxy        --http-fastcgi-temp-path=/var/tmp/nginx/fastcgi        --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi        --add-module=../nginx-rtmp-module-1.1.11     \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 mkdir -p /var/tmp/nginx/{client,fastcgi,proxy,uwsgi}     \u0026\u0026 echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf     \u0026\u0026 apk del build-base     \u0026\u0026 rm -rf /tmp/src     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/nginx/sbin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data",
            "/opt/show"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "1935",
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}