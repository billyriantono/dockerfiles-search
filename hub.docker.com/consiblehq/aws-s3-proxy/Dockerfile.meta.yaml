MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Labels:
    - Key: com.github.pottava.application
      Value: '"aws-s3-proxy"'
    - Key: com.github.pottava.usage
      Value: '"docker run -d -p 8080:80 -e AWS_S3_BUCKET pottava/s3-proxy"'
    - Key: com.github.pottava.license
      Value: '"MIT"'
    Name: label
  - Env:
    - Key: AWS_REGION
      Value: us-east-1
    - Key: APP_PORT
      Value: "80"
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add --virtual build-dependencies bash gcc musl-dev openssl go
      git     && GOLANG_VERSION=1.8     && GOLANG_SRC_URL=https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz     &&
      GOLANG_SRC_SHA256=406865f587b44be7092f206d73fc1de252600b79b3cacc587b74b5ef5c623596     &&
      export GOROOT_BOOTSTRAP="$(go env GOROOT)"     && wget -q "$GOLANG_SRC_URL"
      -O golang.tar.gz     && echo "$GOLANG_SRC_SHA256  golang.tar.gz" | sha256sum
      -c -     && tar -C /usr/local -xzf golang.tar.gz     && wget -q https://raw.githubusercontent.com/docker-library/golang/master/1.8/alpine/no-pic.patch     &&
      cd /usr/local/go/src     && patch -p2 -i /no-pic.patch     && ./make.bash     &&
      export GOPATH=/go     && mkdir -p /go/src /go/bin     && chmod -R 777 /go     &&
      go get -u github.com/consible/aws-s3-proxy     && mv /go/bin/aws-s3-proxy /usr/bin     &&
      apk del --purge -r build-dependencies     && rm -rf /usr/local/go /usr/lib/go
      /go /golang.tar.gz /*.patch
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - aws-s3-proxy
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
