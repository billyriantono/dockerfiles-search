{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:1.14.0-gpu-py3-jupyter",
      "SourceCode": "FROM tensorflow/tensorflow:1.14.0-gpu-py3-jupyter",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:1.14.0-gpu-py3-jupyter"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "mantainer",
              "Value": "\"Allan Batista \u003callan@allanbatista.com.br\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JUPYTER_HOME",
              "Value": "/jupyter/notebook"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JUPYTER_CONFIG",
              "Value": "/jupyter_notebook_config.py"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/gcloud/google-cloud-sdk/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON",
              "Value": "\"python2.7\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOOGLE_APPLICATION_CREDENTIALS_JSON",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOOGLE_APPLICATION_ACCOUNT",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOOGLE_APPLICATION_PROJECT",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_REPO",
              "Value": "cloud-sdk-bionic"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_MESSAGES",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $JUPYTER_HOME -p"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch $JUPYTER_CONFIG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${JUPYTER_HOME}"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y                         python2.7-minimal                         python3-pip                         python3-dev                         python3-setuptools                         zip                         wget                         git                         vim                         locales                         build-essential                         curl                         default-libmysqlclient-dev                         freetds-dev                         libkrb5-dev                         libsasl2-dev                         libssl-dev                         libffi-dev                         libpq-dev                         graphviz                         cmake     \u0026\u0026 sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026 locale-gen     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install google-cloud-sdk -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install jupyter                  boto3                  pandas                  numpy                  matplotlib                  sklearn                  psycopg2                  pymongo                  mysql                  redis                  google-cloud-storage                  google-cloud-bigquery                  google-cloud-storage                  google-cloud-bigtable                  sasl thrift thrift-sasl PyHive                  pyhs2                  iplotter                  unidecode                  plotly                  awscli                  pydot                  graphviz                  nltk                  opencv-python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf $(which pip3) /usr/bin/pip     \u0026\u0026 ln -sf $(which python3) /usr/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/facebookresearch/fastText.git \u0026\u0026     cd fastText \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     cd ~ \u0026\u0026 rm -Rf /tmp/fastText"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/entrypoint.sh",
            "notebook"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}