MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL='https://github.com/sgerrand/alpine-pkg-glibc/releases/download'
      &&     ALPINE_GLIBC_PACKAGE_VERSION='2.29-r0' &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-${ALPINE_GLIBC_PACKAGE_VERSION}.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-${ALPINE_GLIBC_PACKAGE_VERSION}.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-${ALPINE_GLIBC_PACKAGE_VERSION}.apk"
      &&     apk add --no-cache wget ca-certificates socat gawk bash openssl findutils
      coreutils procps libstdc++ nss &&     apk add --no-cache cpio --repository http://dl-3.alpinelinux.org/alpine/edge/community/
      &&     wget --progress=bar:force         'https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub'          -O
      '/etc/apk/keys/sgerrand.rsa.pub' &&     wget --progress=bar:force "${ALPINE_GLIBC_BASE_URL}/${ALPINE_GLIBC_PACKAGE_VERSION}/${ALPINE_GLIBC_BASE_PACKAGE_FILENAME}"
      &&     apk add --no-cache "${ALPINE_GLIBC_BASE_PACKAGE_FILENAME}" &&     rm
      -f "${ALPINE_GLIBC_BASE_PACKAGE_FILENAME}" &&     wget --progress=bar:force
      "${ALPINE_GLIBC_BASE_URL}/${ALPINE_GLIBC_PACKAGE_VERSION}/${ALPINE_GLIBC_BIN_PACKAGE_FILENAME}"
      &&     apk add --no-cache "${ALPINE_GLIBC_BIN_PACKAGE_FILENAME}" &&     rm -f
      "${ALPINE_GLIBC_BIN_PACKAGE_FILENAME}" &&     wget --progress=bar:force "${ALPINE_GLIBC_BASE_URL}/${ALPINE_GLIBC_PACKAGE_VERSION}/${ALPINE_GLIBC_I18N_PACKAGE_FILENAME}"
      &&     apk add --no-cache "${ALPINE_GLIBC_I18N_PACKAGE_FILENAME}" &&     rm
      -f "${ALPINE_GLIBC_I18N_PACKAGE_FILENAME}" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile en_US --charmap UTF-8 en_US.UTF-8 &&     echo 'export LANG=en_US.UTF-8'
      > /etc/profile.d/locale.sh &&     sync &&     rm -rf         /boot /home /lost+found
      /media /mnt /run /srv         /usr/share/applications         /var/cache/apk/*         /root/.wget-hsts
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /files/crashplan.exp
    - /files/trim_install.sh
    - /files/move_config.sh
    - /tmp/installation/
  - CmdLine:
    - CRASHPLAN_VERSION=7.4.0 &&     CRASHPLAN_TIMESTAMP=1525200006740 &&     CRASHPLAN_BUILD=566
      &&     CRASHPLAN_URL=https://web-eam-msp.crashplanpro.com/client/installers/CrashPlanSmb_${CRASHPLAN_VERSION}_${CRASHPLAN_TIMESTAMP}_${CRASHPLAN_BUILD}_Linux.tgz
      &&     CRASHPLAN_ALT_URL=https://download.code42.com/installs/agent/${CRASHPLAN_VERSION}/${CRASHPLAN_BUILD}/install/CrashPlanSmb_${CRASHPLAN_VERSION}_${CRASHPLAN_TIMESTAMP}_${CRASHPLAN_BUILD}_Linux.tgz
      &&     CRASHPLAN_PATH=/usr/local/crashplan &&     CRASHPLAN_INSTALLER_DEPENDENCIES=expect
      &&     apk add --no-cache ${CRASHPLAN_INSTALLER_DEPENDENCIES} &&     mkdir -p         /tmp/crashplan         /usr/share/applications         /app
      &&     cd /tmp/crashplan &&     echo 'Downloading CrashPlan for Small Business
      ...' &&     wget -O- --progress=bar:force ${CRASHPLAN_URL} | tar -xz --strip-components=1
      -C /tmp/crashplan || wget -O- --progress=bar:force ${CRASHPLAN_ALT_URL} | tar
      -xz --strip-components=1 -C /tmp/crashplan &&     chmod +x /tmp/installation/*
      && sync && /tmp/installation/crashplan.exp || exit $? &&     /etc/init.d/crashplan
      stop || true &&     /tmp/installation/move_config.sh &&     sync &&     cd /
      &&     apk update && sync && apk del ${CRASHPLAN_INSTALLER_DEPENDENCIES} &&     /tmp/installation/trim_install.sh
      &&     rm -rf         /boot /home /lost+found /media /mnt /run /srv         /var/cache/apk/*         /root/.wget-hsts         /usr/share/applications         /tmp/*         ${CRASHPLAN_PATH}/*.pid         /config
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /files
    - /app
  - CmdLine:
    - chmod +x /app/* && /app/patch_install.sh && rm -f /app/crashplan.exp /app/move_config.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /config
  - Name: expose
    Ports:
    - "4244"
  - Key: BUILD_DATE
    Name: arg
    Value: unknown
  - Key: VERSION
    Name: arg
    Value: unknown
  - Labels:
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    - Key: org.label-schema.version
      Value: ${VERSION}
    - Key: org.label-schema.name
      Value: '"CrashPlan-Headless"'
    - Key: org.label-schema.description
      Value: '"A Docker image for running CrashPlan in headless environments"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/David-Woodward/docker-crashplan-headless"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Name: workdir
    Path: /usr/local/crashplan
  - CmdLine:
    - /app/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /app/crashplan.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
