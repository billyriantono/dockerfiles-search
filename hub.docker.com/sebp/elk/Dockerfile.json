{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "Sebastien Pujadas http://pujadas.net",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2017-02-28"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "set -x  \u0026\u0026 apt-get update -qq  \u0026\u0026 apt-get install -qqy --no-install-recommends ca-certificates curl  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 curl -L -o /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"  \u0026\u0026 curl -L -o /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 gpg --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4  \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu  \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc  \u0026\u0026 chmod +x /usr/local/bin/gosu  \u0026\u0026 gosu nobody true  \u0026\u0026 apt-get update -qq  \u0026\u0026 apt-get install -qqy openjdk-8-jdk tzdata  \u0026\u0026 apt-get clean  \u0026\u0026 set +x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELK_VERSION",
              "Value": "6.8.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_HOME",
              "Value": "/opt/elasticsearch"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_PACKAGE",
              "Value": "elasticsearch-${ES_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_GID",
              "Value": "991"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_UID",
              "Value": "991"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_PATH_CONF",
              "Value": "/etc/elasticsearch"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_PATH_BACKUP",
              "Value": "/var/backups"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${ES_HOME}  \u0026\u0026 curl -O https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE}  \u0026\u0026 tar xzf ${ES_PACKAGE} -C ${ES_HOME} --strip-components=1  \u0026\u0026 rm -f ${ES_PACKAGE}  \u0026\u0026 groupadd -r elasticsearch -g ${ES_GID}  \u0026\u0026 useradd -r -s /usr/sbin/nologin -M -c \"Elasticsearch service user\" -u ${ES_UID} -g elasticsearch elasticsearch  \u0026\u0026 mkdir -p /var/log/elasticsearch ${ES_PATH_CONF} ${ES_PATH_CONF}/scripts /var/lib/elasticsearch ${ES_PATH_BACKUP}  \u0026\u0026 chown -R elasticsearch:elasticsearch ${ES_HOME} /var/log/elasticsearch /var/lib/elasticsearch ${ES_PATH_CONF} ${ES_PATH_BACKUP}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_HOME",
              "Value": "/opt/logstash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_PACKAGE",
              "Value": "logstash-${LOGSTASH_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_GID",
              "Value": "992"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_UID",
              "Value": "992"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_PATH_CONF",
              "Value": "/etc/logstash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_PATH_SETTINGS",
              "Value": "${LOGSTASH_HOME}/config"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${LOGSTASH_HOME}  \u0026\u0026 curl -O https://artifacts.elastic.co/downloads/logstash/${LOGSTASH_PACKAGE}  \u0026\u0026 tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1  \u0026\u0026 rm -f ${LOGSTASH_PACKAGE}  \u0026\u0026 groupadd -r logstash -g ${LOGSTASH_GID}  \u0026\u0026 useradd -r -s /usr/sbin/nologin -d ${LOGSTASH_HOME} -c \"Logstash service user\" -u ${LOGSTASH_UID} -g logstash logstash  \u0026\u0026 mkdir -p /var/log/logstash ${LOGSTASH_PATH_CONF}/conf.d  \u0026\u0026 chown -R logstash:logstash ${LOGSTASH_HOME} /var/log/logstash ${LOGSTASH_PATH_CONF}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_HOME",
              "Value": "/opt/kibana"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_PACKAGE",
              "Value": "kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_GID",
              "Value": "993"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_UID",
              "Value": "993"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${KIBANA_HOME}  \u0026\u0026 curl -O https://artifacts.elastic.co/downloads/kibana/${KIBANA_PACKAGE}  \u0026\u0026 tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1  \u0026\u0026 rm -f ${KIBANA_PACKAGE}  \u0026\u0026 groupadd -r kibana -g ${KIBANA_GID}  \u0026\u0026 useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c \"Kibana service user\" -u ${KIBANA_UID} -g kibana kibana  \u0026\u0026 mkdir -p /var/log/kibana  \u0026\u0026 chown -R kibana:kibana ${KIBANA_HOME} /var/log/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./elasticsearch-init",
            "/etc/init.d/elasticsearch"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^ES_HOME=$#ES_HOME='$ES_HOME'#' /etc/init.d/elasticsearch  \u0026\u0026 chmod +x /etc/init.d/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-init",
            "/etc/init.d/logstash"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash  \u0026\u0026 chmod +x /etc/init.d/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./kibana-init",
            "/etc/init.d/kibana"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana  \u0026\u0026 chmod +x /etc/init.d/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./elasticsearch.yml",
            "${ES_PATH_CONF}/elasticsearch.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./elasticsearch-default",
            "/etc/default/elasticsearch"
          ]
        },
        {
          "CmdLine": [
            "cp ${ES_HOME}/config/log4j2.properties ${ES_HOME}/config/jvm.options     ${ES_PATH_CONF}  \u0026\u0026 chown -R elasticsearch:elasticsearch ${ES_PATH_CONF}  \u0026\u0026 chmod -R +r ${ES_PATH_CONF}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/pki/tls/certs \u0026\u0026 mkdir /etc/pki/tls/private"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-beats.crt",
            "/etc/pki/tls/certs/logstash-beats.crt"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-beats.key",
            "/etc/pki/tls/private/logstash-beats.key"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pipelines.yml",
            "${LOGSTASH_PATH_SETTINGS}/pipelines.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./02-beats-input.conf",
            "${LOGSTASH_PATH_CONF}/conf.d/02-beats-input.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./10-syslog.conf",
            "${LOGSTASH_PATH_CONF}/conf.d/10-syslog.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./11-nginx.conf",
            "${LOGSTASH_PATH_CONF}/conf.d/11-nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./30-output.conf",
            "${LOGSTASH_PATH_CONF}/conf.d/30-output.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx.pattern",
            "${LOGSTASH_HOME}/patterns/nginx"
          ]
        },
        {
          "CmdLine": [
            "chown -R logstash:logstash ${LOGSTASH_HOME}/patterns"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R +r ${LOGSTASH_PATH_CONF} ${LOGSTASH_PATH_SETTINGS}  \u0026\u0026 chown -R logstash:logstash ${LOGSTASH_PATH_SETTINGS}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./elasticsearch-logrotate",
            "/etc/logrotate.d/elasticsearch"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-logrotate",
            "/etc/logrotate.d/logstash"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./kibana-logrotate",
            "/etc/logrotate.d/kibana"
          ]
        },
        {
          "CmdLine": [
            "chmod 644 /etc/logrotate.d/elasticsearch  \u0026\u0026 chmod 644 /etc/logrotate.d/logstash  \u0026\u0026 chmod 644 /etc/logrotate.d/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./kibana.yml",
            "${KIBANA_HOME}/config/kibana.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/usr/local/bin/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5044",
            "5601",
            "9200",
            "9300"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/elasticsearch"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}