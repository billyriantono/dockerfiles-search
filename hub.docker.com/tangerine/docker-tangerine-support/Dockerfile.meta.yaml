MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - Env:
    - Key: T_HOSTNAME
      Value: local.tangerinecentral.org
    Name: env
  - Env:
    - Key: T_ADMIN
      Value: admin
    Name: env
  - Env:
    - Key: T_PASS
      Value: password
    Name: env
  - Env:
    - Key: T_COUCH_HOST
      Value: localhost
    Name: env
  - Env:
    - Key: T_COUCH_PORT
      Value: "5984"
    Name: env
  - Env:
    - Key: T_ROBBERT_PORT
      Value: "4444"
    Name: env
  - Env:
    - Key: T_TREE_PORT
      Value: "4445"
    Name: env
  - Env:
    - Key: T_BROCKMAN_PORT
      Value: "4446"
    Name: env
  - Env:
    - Key: T_DECOMPRESSOR_PORT
      Value: "4447"
    Name: env
  - CmdLine:
    - apt-get update && apt-get -y install     software-properties-common     python-software-properties     bzip2
      unzip     openssh-client     git     lib32stdc++6     lib32z1     curl     wget     vim
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_4.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nginx
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./
    - /root/Tangerine-server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tangerine.conf
    - /etc/nginx/sites-available/tangerine.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/tangerine.conf /etc/nginx/sites-enabled/tangerine.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/sendfile on;/sendfile off;\n\tclient_max_body_size 128M;/" /etc/nginx/nginx.conf
    Name: cmd
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tangerine-env-vars.sh.defaults
    - /root/Tangerine-server/tangerine-env-vars.sh
  - CmdLine:
    - cp /root/Tangerine-server/tangerine-env-vars.sh /etc/profile.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "\nexport TERM=xterm" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository -y ppa:couchdb/stable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install couchdb
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R couchdb:couchdb /usr/lib/couchdb /usr/share/couchdb /etc/couchdb /usr/bin/couchdb
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 0770 /usr/lib/couchdb /usr/share/couchdb /etc/couchdb /usr/bin/couchdb
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/couchdb
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R couchdb /var/run/couchdb
    Name: run
    PrependShell: true
  - CmdLine:
    - couchdb -k
    Name: run
    PrependShell: true
  - CmdLine:
    - couchdb -b
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "$T_ADMIN = $T_PASS" >> /etc/couchdb/local.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - couchdb -b
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install build-essential     python-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install couchapp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     nano     wget     links     curl     rsync     bc     git     git-core     apt-transport-https     libxml2     libxml2-dev     libcurl4-openssl-dev     openssl     sqlite3     libsqlite3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     gawk     libreadline6-dev     libyaml-dev     autoconf     libgdbm-dev     libncurses5-dev     automake     libtool     bison     libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - /bin/bash -l -c "rvm requirements"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm install ruby-2.2.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm install ruby-2.2.0-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm --default use ruby-2.2.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source /usr/local/rvm/bin/rvm && gem install bundler --no-ri --no-rdoc
      "
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - curl http://dl.google.com/android/android-sdk_r24.3.4-linux.tgz > tmp/android-sdk.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/bin/android-sdk-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf tmp/android-sdk.tgz -C /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R root:root /usr/local/bin/android-sdk-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /usr/local/bin/android-sdk-linux/tools/android
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/usr/local/bin/android-sdk-linux/tools:/usr/local/bin/android-sdk-linux/build-tools
    Name: env
  - CmdLine:
    - sh -c "echo \"export PATH=$PATH:/usr/local/bin/android-sdk-linux/tools:/usr/local/bin/android-sdk-linux/build-tools
      \nexport ANDROID_HOME=/usr/local/bin/android-sdk-linux\" > /etc/profile.d/android-sdk-path.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/android-sdk-linux/tools/ && echo y | /usr/local/bin/android-sdk-linux/tools/android
      update sdk -u -a --force -t "tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/android-sdk-linux/tools/ && echo y | /usr/local/bin/android-sdk-linux/tools/android
      update sdk -u -a --force -t "platform-tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/android-sdk-linux/tools/ && echo y | /usr/local/bin/android-sdk-linux/tools/android
      update sdk -u -a --force -t "android-22,build-tools-23.0.2"
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386 &&     apt-get update -y &&     apt-get install
      -y     libc6:i386     libncurses5:i386     libstdc++6:i386     lib32z1 &&     rm
      -rf /var/lib/apt/lists/* &&     apt-get autoremove -y &&     apt-get clean
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
