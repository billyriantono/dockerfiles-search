MetaArgs: null
Stages:
- BaseName: cloudunit/base-jessie
  Commands:
  - CmdLine:
    - groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999 postgres
    Name: run
    PrependShell: true
  - Env:
    - Key: CU_MODULE_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: CU_DEFAULT_LOG_FILE
      Value: '" "'
    Name: env
  - Env:
    - Key: CU_LOGS
      Value: '" "'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts
    - /opt/cloudunit/scripts
  - CmdLine:
    - chmod +x /opt/cloudunit/scripts/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/*
      \t&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.5"
    Name: env
  - CmdLine:
    - echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y postgresql-common \t&& sed -ri 's/#(create_main_cluster)
      .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \t&& apt-get install
      -y \t\tpostgresql-$PG_MAJOR \t\tpostgresql-contrib-$PG_MAJOR \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/
      \t&& ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \t&&
      sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  - Labels:
    - Key: origin
      Value: application
    Name: label
  - Labels:
    - Key: application-type
      Value: postgres
    Name: label
  - Labels:
    - Key: application-version
      Value: $PG_MAJOR
    Name: label
  From:
    Image: cloudunit/base-jessie
  Name: ""
  Platform: ""
  SourceCode: FROM cloudunit/base-jessie
