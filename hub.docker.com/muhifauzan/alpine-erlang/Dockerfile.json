{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2017-07-31"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "HOME",
              "Value": "/opt/app"
            },
            {
              "Key": "ERLANG_VERSION",
              "Value": "20.0.1"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DIALYZER_PLT_PATH",
              "Value": "$HOME/.dialyzer_plt"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DIALYZER_PLT",
              "Value": "$DIALYZER_PLT_PATH/erlang-$ERLANG_VERSION.plt"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp/erlang-build"
        },
        {
          "CmdLine": [
            "echo \"//////////////////// Creating HOME directory /////\" \u0026\u0026     mkdir -p $HOME \u0026\u0026     echo \"//////////////////////// Adding default user /////\" \u0026\u0026     adduser -s /bin/sh -u 1001 -G root -h $HOME -S -D default \u0026\u0026     echo \"///////// Setting HOME owner to default user /////\" \u0026\u0026     chown -R 1001:0 $HOME \u0026\u0026     echo \"/////////////////////////// Setting edge tag /////\" \u0026\u0026     echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk --update upgrade --no-cache \u0026\u0026     echo \"///////////////// Installing Erlang/OTP deps /////\" \u0026\u0026     apk add --no-cache pcre@edge       ca-certificates       openssl-dev       ncurses-dev       unixodbc-dev       zlib-dev       openssh       git \u0026\u0026     echo \"/////////// Installing Erlang/OTP build deps /////\" \u0026\u0026     apk add --no-cache --virtual .erlang-build       autoconf       build-base       perl-dev \u0026\u0026     echo \"///////////////// Shallow cloning Erlang/OTP /////\" \u0026\u0026     git clone -b OTP-$ERLANG_VERSION --single-branch --depth 1 https://github.com/erlang/otp.git . \u0026\u0026     echo \"//////////// Setting Erlang/OTP env variable /////\" \u0026\u0026     export ERL_TOP=/tmp/erlang-build \u0026\u0026     export PATH=$ERL_TOP/bin:$PATH \u0026\u0026     export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \u0026\u0026     echo \"///////////////////// Configuring Erlang/OTP /////\" \u0026\u0026     ./otp_build autoconf \u0026\u0026     ./configure --prefix=/usr       --sysconfdir=/etc       --mandir=/usr/share/man       --infodir=/usr/share/info       --without-javac       --without-wx       --without-debugger       --without-observer       --without-jinterface       --without-cosEvent      --without-cosEventDomain       --without-cosFileTransfer       --without-cosNotification       --without-cosProperty       --without-cosTime       --without-cosTransactions       --without-et       --without-gs       --without-ic       --without-megaco       --without-orber       --without-percept       --without-typer       --enable-threads       --enable-shared-zlib       --enable-ssl=dynamic-ssl-lib       --enable-hipe \u0026\u0026     echo \"/////////////////////// Compiling Erlang/OTP /////\" \u0026\u0026     make -j4 \u0026\u0026 make install \u0026\u0026     echo \"////////////////////// Building dialyzer PLT /////\" \u0026\u0026     mkdir $DIALYZER_PLT_PATH \u0026\u0026     dialyzer --build_plt --apps erts kernel stdlib crypto \u0026\u0026     echo \"//////////////////////////////// Cleaning up /////\" \u0026\u0026     cd $HOME \u0026\u0026     rm -rf /tmp/erlang-build \u0026\u0026     apk del --force .erlang-build \u0026\u0026     echo \"//////////////////////////////// Updating CA /////\" \u0026\u0026     update-ca-certificates --fresh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}