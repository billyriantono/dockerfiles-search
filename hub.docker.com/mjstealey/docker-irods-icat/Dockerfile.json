{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:9.4",
      "SourceCode": "FROM postgres:9.4",
      "Platform": "",
      "From": {
        "Image": "postgres:9.4"
      },
      "Commands": [
        {
          "Maintainer": "Michael J. Stealey \u003cmichael.j.stealey@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -r irods --gid=998     \u0026\u0026 useradd -r -g irods -d /var/lib/irods --uid=998 irods     \u0026\u0026 mv /docker-entrypoint.sh /postgres-docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     apt-utils     sudo     curl     libfuse2     libjson-perl     python-psutil     python-requests     lsof     python-jsonschema     unixodbc     odbc-postgresql     super     jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl ftp://ftp.renci.org/pub/irods/releases/4.1.10/ubuntu14/irods-icat-4.1.10-ubuntu14-x86_64.deb -o irods-icat.deb     \u0026\u0026 curl ftp://ftp.renci.org/pub/irods/releases/4.1.10/ubuntu14/irods-database-plugin-postgres-1.10-ubuntu14-x86_64.deb -o irods-database.deb     \u0026\u0026 sudo dpkg -i irods-icat.deb irods-database.deb     \u0026\u0026 sudo apt-get -f install     \u0026\u0026 rm irods-icat.deb irods-database.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVICE_ACCOUNT_NAME",
              "Value": "irods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVICE_ACCOUNT_GROUP",
              "Value": "irods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_ZONE_NAME",
              "Value": "tempZone"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_PORT",
              "Value": "1247"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_PORT_RANGE_BEGIN",
              "Value": "20000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_PORT_RANGE_END",
              "Value": "20199"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_VAULT_DIRECTORY",
              "Value": "/var/lib/irods/iRODS/Vault"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVER_ZONE_KEY",
              "Value": "TEMPORARY_zone_key"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVER_NEGOTIATION_KEY",
              "Value": "TEMPORARY_32byte_negotiation_key"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_CONTROL_PLANE_PORT",
              "Value": "1248"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_CONTROL_PLANE_KEY",
              "Value": "TEMPORARY__32byte_ctrl_plane_key"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_SCHEMA_VALIDATION",
              "Value": "https://schemas.irods.org/configuration"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVER_ADMINISTRATOR_USER_NAME",
              "Value": "rods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVER_ADMINISTRATOR_PASSWORD",
              "Value": "rods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_DATABASE_SERVER_HOSTNAME",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_DATABASE_SERVER_PORT",
              "Value": "5432"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_DATABASE_NAME",
              "Value": "ICAT"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_DATABASE_USER_NAME",
              "Value": "irods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_DATABASE_PASSWORD",
              "Value": "irods"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "cp /tmp/irods-docker-entrypoint.sh /irods-docker-entrypoint.sh     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "teletype"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/irods/iRODS/Vault",
            "/etc/irods",
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$IRODS_CONTROL_PLANE_PORT",
            "$IRODS_PORT",
            "$IRODS_PORT_RANGE_BEGIN-$IRODS_PORT_RANGE_END"
          ]
        },
        {
          "CmdLine": [
            "/irods-docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "setup_irods.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}