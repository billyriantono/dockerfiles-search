{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:10",
      "SourceCode": "FROM postgres:10",
      "Platform": "",
      "From": {
        "Image": "postgres:10"
      },
      "Commands": [
        {
          "Maintainer": "Michael J. Stealey \u003cmichael.j.stealey@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "IRODS_VERSION",
              "Value": "4.1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -r irods --gid=998     \u0026\u0026 useradd -r -g irods -d /var/lib/irods --uid=998 irods     \u0026\u0026 mv /docker-entrypoint.sh /postgres-docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian jessie-backports main\"     \u003e /etc/apt/sources.list.d/jessie-backports.list   \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y   wget   sudo   unixodbc   odbc-postgresql   super   perl   libssl1.0.0   libfuse2   libjson-perl   perl   python   python-psutil   python-requests   lsof   python-jsonschema   moreutils   jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -L ftp://ftp.renci.org/pub/irods/releases/${IRODS_VERSION}/ubuntu14/irods-icat-${IRODS_VERSION}-ubuntu14-x86_64.deb   \u0026\u0026 wget -L ftp://ftp.renci.org/pub/irods/releases/${IRODS_VERSION}/ubuntu14/irods-database-plugin-postgres-1.10-ubuntu14-x86_64.deb   \u0026\u0026 dpkg -i     irods-database-plugin-postgres-1.10-ubuntu14-x86_64.deb     irods-icat-${IRODS_VERSION}-ubuntu14-x86_64.deb   \u0026\u0026 rm -f irods-icat-${IRODS_VERSION}-ubuntu14-x86_64.deb   \u0026\u0026 rm -f irods-database-plugin-postgres-1.10-ubuntu14-x86_64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IRODS_SERVICE_ACCOUNT_NAME",
              "Value": "irods"
            },
            {
              "Key": "IRODS_SERVICE_ACCOUNT_GROUP",
              "Value": "irods"
            },
            {
              "Key": "IRODS_DATABASE_SERVER_HOSTNAME",
              "Value": "localhost"
            },
            {
              "Key": "IRODS_DATABASE_SERVER_PORT",
              "Value": "5432"
            },
            {
              "Key": "IRODS_DATABASE_NAME",
              "Value": "ICAT"
            },
            {
              "Key": "IRODS_DATABASE_USER_NAME",
              "Value": "irods"
            },
            {
              "Key": "IRODS_DATABASE_PASSWORD",
              "Value": "temppassword"
            },
            {
              "Key": "IRODS_ZONE_NAME",
              "Value": "tempZone"
            },
            {
              "Key": "IRODS_PORT",
              "Value": "1247"
            },
            {
              "Key": "IRODS_PORT_RANGE_BEGIN",
              "Value": "20000"
            },
            {
              "Key": "IRODS_PORT_RANGE_END",
              "Value": "20199"
            },
            {
              "Key": "IRODS_CONTROL_PLANE_PORT",
              "Value": "1248"
            },
            {
              "Key": "IRODS_SCHEMA_VALIDATION",
              "Value": "https://schemas.irods.org/configuration"
            },
            {
              "Key": "IRODS_SERVER_ADMINISTRATOR_USER_NAME",
              "Value": "rods"
            },
            {
              "Key": "IRODS_SERVER_ZONE_KEY",
              "Value": "TEMPORARY_zone_key"
            },
            {
              "Key": "IRODS_SERVER_NEGOTIATION_KEY",
              "Value": "TEMPORARY_32byte_negotiation_key"
            },
            {
              "Key": "IRODS_CONTROL_PLANE_KEY",
              "Value": "TEMPORARY__32byte_ctrl_plane_key"
            },
            {
              "Key": "IRODS_SERVER_ADMINISTRATOR_PASSWORD",
              "Value": "rods"
            },
            {
              "Key": "IRODS_VAULT_DIRECTORY",
              "Value": "/var/lib/irods/iRODS/Vault"
            },
            {
              "Key": "UID_POSTGRES",
              "Value": "999"
            },
            {
              "Key": "GID_POSTGRES",
              "Value": "999"
            },
            {
              "Key": "UID_IRODS",
              "Value": "998"
            },
            {
              "Key": "GID_IRODS",
              "Value": "998"
            },
            {
              "Key": "POSTGRES_USER",
              "Value": "postgres"
            },
            {
              "Key": "POSTGRES_PASSWORD",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /var/lib/postgresql/data     \u0026\u0026 tar -czvf /postgresql.tar.gz .     \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/lib/irods     \u0026\u0026 tar -czvf /var_irods.tar.gz .     \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /etc/irods     \u0026\u0026 tar -czvf /etc_irods.tar.gz .     \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/irods-docker-entrypoint.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/irods",
            "/etc/irods",
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$IRODS_CONTROL_PLANE_PORT",
            "$IRODS_PORT",
            "$IRODS_PORT_RANGE_BEGIN-$IRODS_PORT_RANGE_END"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/irods/"
        },
        {
          "CmdLine": [
            "/irods-docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}