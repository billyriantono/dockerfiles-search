{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Michael J. Stealey \u003cmichael.j.stealey@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -ex;     if ! command -v gpg \u003e /dev/null; then         apt-get update;         apt-get install -y --no-install-recommends         gnupg         dirmngr         ;         rm -rf /var/lib/apt/lists/*;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r irods --gid=998     \u0026\u0026 useradd -r -g irods -d /var/lib/irods --uid=998 irods"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian jessie-backports main\"     \u003e /etc/apt/sources.list.d/jessie-backports.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y     wget     libxml2     apt-transport-https     sudo     jq     \u0026\u0026 wget -qO - https://packages.irods.org/irods-signing-key.asc | apt-key add -     \u0026\u0026 echo \"deb [arch=amd64] https://packages.irods.org/apt/ xenial main\"     \u003e /etc/apt/sources.list.d/renci-irods.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y     irods-externals-avro1.7.7-0     irods-externals-boost1.60.0-0     irods-externals-clang-runtime3.8-0     irods-externals-jansson2.7-0     irods-externals-libarchive3.1.2-0     irods-externals-zeromq4-14.1.3-0     irods-icommands=4.2.2     irods-runtime=4.2.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IRODS_PORT",
              "Value": "1247"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_PORT_RANGE_BEGIN",
              "Value": "20000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_PORT_RANGE_END",
              "Value": "20199"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_CONTROL_PLANE_PORT",
              "Value": "1248"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_HOST",
              "Value": "provider"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_USER_NAME",
              "Value": "rods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_ZONE_NAME",
              "Value": "tempZone"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_PASSWORD",
              "Value": "rods"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IRODS_DEFAULT_RESOURCE",
              "Value": "demoResc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UID_IRODS",
              "Value": "998"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GID_IRODS",
              "Value": "998"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /var/lib/irods     \u0026\u0026 tar -czvf /irods.tar.gz .     \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/irods",
            "/etc/irods",
            "/local"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$IRODS_CONTROL_PLANE_PORT",
            "$IRODS_PORT",
            "$IRODS_PORT_RANGE_BEGIN-$IRODS_PORT_RANGE_END"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "\"/local\""
        },
        {
          "CmdLine": [
            "ihelp"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}