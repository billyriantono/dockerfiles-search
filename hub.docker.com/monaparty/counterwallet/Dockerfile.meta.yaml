MetaArgs: null
Stages:
- BaseName: counterparty/base
  Commands:
  - Maintainer: Counterparty Developers <dev@counterparty.io>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get -y install ssl-cert make libpcre3-dev libxslt1-dev
      libgd2-xpm-dev libgeoip-dev unzip zip build-essential libssl-dev libxslt1.1
      libgeoip1 geoip-database libpcre3
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENRESTY_VER
      Value: '"1.9.7.4"'
    Name: env
  - CmdLine:
    - wget -O /tmp/nginx-openresty.tar.gz http://openresty.org/download/openresty-${OPENRESTY_VER}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/ngx_openresty-${OPENRESTY_VER} && tar xfzv /tmp/nginx-openresty.tar.gz
      -C /tmp/ngx_openresty-${OPENRESTY_VER} --strip-components 1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ngx_openresty-${OPENRESTY_VER} && ./configure     --with-luajit     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-client-body-temp-path=/var/lib/nginx/body     --http-fastcgi-temp-path=/var/lib/nginx/fastcgi     --http-log-path=/var/log/nginx/access.log     --http-proxy-temp-path=/var/lib/nginx/proxy     --http-scgi-temp-path=/var/lib/nginx/scgi     --http-uwsgi-temp-path=/var/lib/nginx/uwsgi     --lock-path=/var/lock/nginx.lock     --pid-path=/var/run/nginx.pid     --with-http_geoip_module     --with-http_gzip_static_module     --with-http_realip_module     --with-http_ssl_module     --with-http_sub_module     --with-http_xslt_module     --with-ipv6     --with-sha1=/usr/include/openssl     --with-md5=/usr/include/openssl     --with-http_stub_status_module     --with-http_secure_link_module     --with-http_sub_module
      && make -j2
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ngx_openresty-${OPENRESTY_VER} && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/lib/nginx/{body,fastcgi,proxy,scgi,uwsgi}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/nginx/sites-enabled
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx/counterblock_api.inc
    - /etc/nginx/sites-enabled/counterblock_api.inc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx/counterblock_api_cache.inc
    - /etc/nginx/sites-enabled/counterblock_api_cache.inc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx/counterblock_socketio.inc
    - /etc/nginx/sites-enabled/counterblock_socketio.inc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx/upgrade_root
    - /var/www_upgrade_root
  - CmdLine:
    - chmod -R 0755 /etc/nginx/nginx.conf /etc/nginx/sites-enabled /var/www_upgrade_root
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start.sh
    - /usr/local/bin/start.sh
  - CmdLine:
    - chmod a+x /usr/local/bin/start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install ssl-cert
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /ssl_config
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -a /etc/ssl/certs/ssl-cert-snakeoil.pem /ssl_config/counterwallet.pem
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -a /etc/ssl/private/ssl-cert-snakeoil.key /ssl_config/counterwallet.key
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /counterblock_data/asset_img /counterblock_data/asset_img.testnet
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y remove nodejs npm gyp
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install nodejs
    Name: run
    PrependShell: true
  - Key: TRANSIFEX_USER
    Name: arg
    Value: '""'
  - Env:
    - Key: TRANSIFEX_USER
      Value: ${TRANSIFEX_USER}
    Name: env
  - Key: TRANSIFEX_PASSWORD
    Name: arg
    Value: '""'
  - Env:
    - Key: TRANSIFEX_PASSWORD
      Value: ${TRANSIFEX_PASSWORD}
    Name: env
  - CmdLine:
    - if [ -n "$TRANSIFEX_USER" ] && [ -n "$TRANSIFEX_PASSWORD" ]; then echo "$TRANSIFEX_USER:$TRANSIFEX_PASSWORD"
      > /root/.transifex; fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /counterwallet
  - CmdLine:
    - rm -rf /counterwallet/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /counterwallet
  - CmdLine:
    - git rev-parse HEAD
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -g install npm@4.6.1
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set strict-ssl false
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOMJS_CDNURL
      Value: '"http://cnpmjs.org/downloads"'
    Name: env
  - CmdLine:
    - npm run bower -- --allow-root --config.interactive=false update
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run prepublish
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -a /counterwallet/counterwallet.conf.json.example /counterwallet/counterwallet.conf.json
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /root/.transifex
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install gettext-base
    Name: run
    PrependShell: true
  - CmdLine:
    - start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: counterparty/base
  Name: ""
  Platform: ""
  SourceCode: FROM counterparty/base
