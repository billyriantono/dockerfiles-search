MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: Maintainer
      Value: '"Shapovalov Alex <alex_sh@kodeks.ru>"'
    - Key: Description
      Value: '"Lightweight container with Nginx 1.15.12 & PHP-FPM 7.2 based on Alpine
        Linux."'
    Name: label
  - CmdLine:
    - apk update
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.15.12
    Name: env
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module
      \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio
      \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h
      /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual
      .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev
      \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev
      \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz
      \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o
      nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& rm -r \"$GNUPGHOME\"
      nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz
      \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure
      $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx
      objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&&
      ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install
      \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/
      \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644
      html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx
      /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort
      -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps
      \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add  --no-cache     php7 php7-fpm php7-common php7-mysqli php7-json php7-openssl
      php7-curl     php7-zlib php7-xml php7-simplexml php7-phar php7-intl php7-dom
      php7-xmlreader php7-ctype     php7-mbstring php7-gd php7-zip php7-exif php7-pdo
      php7-pdo_mysql php7-pdo_pgsql     php7-iconv php7-sqlite3 php7-tokenizer php7-session
      php7-fileinfo php7-bcmath     php7-xmlwriter php7-imagick php7-pcntl php7-pdo_sqlite
      php7-imap php7-pspell aspell-ru aspell-en
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache     supervisor curl less nano dcron msmtp git bash
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php-fpm/fpm-pool.conf
    - /etc/php7/php-fpm.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php-fpm/php.ini
    - /etc/php7/conf.d/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/site.conf
    - /site.conf
  - CmdLine:
    - echo "upstream php-upstream {server 0.0.0.0:9000;}" > /etc/nginx/conf.d/default.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/*.sh
    - /tmp/
  - CmdLine:
    - mkdir -p /var/log/cron && mkdir -m 0644 -p /var/spool/cron/crontabs && mkdir
      -m 0644 -p /etc/cron.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/setup-cron-tasks.sh
    - /root/setup-cron-tasks.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/*.sh
    - /root/
  - CmdLine:
    - chmod +x /root/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /root/setenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /root/setup-cron-tasks.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tmp/set-nginx-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x ;   addgroup -g 1000 -S www-data ;   adduser -u 1000 -D -S -G www-data
      www-data
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /root/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
