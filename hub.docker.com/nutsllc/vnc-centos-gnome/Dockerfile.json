{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:6.10",
      "SourceCode": "FROM centos:6.10",
      "Platform": "",
      "From": {
        "Image": "centos:6.10"
      },
      "Commands": [
        {
          "Maintainer": "Nuts Project, LLC \u003cdev@nutsproject.jp\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ROOT_PASSWD",
              "Value": "centos"
            },
            {
              "Key": "USER_PASSWD",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026 yum groupinstall -y         \"Desktop\"         \"Japanese Support\"     \u0026\u0026 yum install -y         epel-release         sudo         gedit     \u0026\u0026 yum clean all \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 echo \"%wheel ALL=(ALL) ALL\" \u003e /etc/sudoers.d/wheel     \u0026\u0026 chmod 0440 /etc/sudoers.d/wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y centos-release-scl     \u0026\u0026 yum install -y         python27         python27-python-setuptools     \u0026\u0026 yum clean all \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 . /opt/rh/python27/enable     \u0026\u0026 echo $(python --version)     \u0026\u0026 easy_install supervisor \t\u0026\u0026 mkdir -p /var/log/supervisor \t\u0026\u0026 mkdir -p /etc/supervisord.d     \u0026\u0026 {         echo '[supervisord]';         echo 'nodaemon=true';         echo 'logfile=/var/log/supervisor/supervisord.log';         echo 'logfile_maxbytes=1MB';         echo 'logfile_backups=1';         echo 'loglevel=warn';         echo 'pidfile=/var/run/supervisord.pid';         echo '[include]';         echo 'files = /etc/supervisord.d/*.conf';     } \u003e /etc/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum update -y \t\u0026\u0026 yum install -y         tigervnc-server         xrdp         xinetd \t\u0026\u0026 yum clean all \u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 chkconfig vncserver on 3456     \u0026\u0026 {         echo 'VNCSERVERS=\"0:root 1:toybox\"';         echo 'VNCSERVERARGS[0]=\"-geometry 1280x960\"';         echo 'VNCSERVERARGS[1]=\"-geometry 1280x960\"';     } \u003e\u003e /etc/sysconfig/vncservers \t\u0026\u0026 chkconfig xrdp on 3456 \t\u0026\u0026 chmod -v +x /etc/init.d/xrdp \t\u0026\u0026 chmod -v +x /etc/xrdp/startwm.sh \t\u0026\u0026 echo \"gnome-session --session=gnome\" \u003e ~/.xsession     \u0026\u0026 {         echo '[program:xrdp]';         echo 'command=/etc/init.d/xrdp restart';         echo 'stderr_logfile=/var/log/supervisor/xrdp-error.log';         echo 'stdout_logfile=/var/log/supervisor/xrdp.log';     } \u003e /etc/supervisord.d/xrdp.conf     \u0026\u0026 {         echo '[program:vncserver]';         echo 'command=/etc/init.d/vncserver restart';         echo 'stderr_logfile=/var/log/supervisor/vncserver-error.log';         echo 'stdout_logfile=/var/log/supervisor/vncserver.log';     } \u003e /etc/supervisord.d/vnc.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su root sh -c \"yes $ROOT_PASSWD | vncpasswd\"     \u0026\u0026 echo \"root:$ROOT_PASSWD\" | chpasswd \t\u0026\u0026 useradd -g wheel toybox \t\u0026\u0026 su toybox sh -c \"yes $USER_PASSWD | vncpasswd\"     \u0026\u0026 echo \"toybox:$USER_PASSWD\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type bool  --set /apps/nautilus/preferences/always_use_browser true \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type bool --set /apps/gnome-screensaver/idle_activation_enabled false \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type bool --set /apps/gnome-screensaver/lock_enabled false \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type int --set /apps/metacity/general/num_workspaces 1 \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type=string --set /apps/gnome_settings_daemon/keybindings/screensaver ' ' \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type=string --set /apps/gnome_settings_daemon/keybindings/power ' ' \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type bool --set /apps/panel/global/disable_log_out true \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type int --set /apps/gnome-power-manager/timeout/sleep_computer_ac '0' \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type int --set /apps/gnome-power-manager/timeout/sleep_display_ac '0' \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type int --set /apps/gnome-screensaver/power_management_delay '0' \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type bool --set /desktop/gnome/remote_access/enabled true \t\u0026\u0026 gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \t    --type bool --set /desktop/gnome/remote_access/prompt_enabled false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3389",
            "5900",
            "5901"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/opt/rh/python27/root/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}