{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7.12",
      "SourceCode": "FROM python:2.7.12",
      "Platform": "",
      "From": {
        "Image": "python:2.7.12"
      },
      "Commands": [
        {
          "Maintainer": "Nuts Project, LLC",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MKDOCS_VERSION",
              "Value": "\"0.15.3\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MKDOCS_ROOT",
              "Value": "\"/mkdocs\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install mkdocs==0.15.3     \u0026\u0026 pip install mkdocs-bootstrap     \u0026\u0026 pip install mkdocs-bootswatch     \u0026\u0026 mkdocs new /mkdocs     \u0026\u0026 tar czf /mkdocs.tar.gz -C /mkdocs ./"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WEBHOOK_ROOT",
              "Value": "\"/Git-Auto-Deploy\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.json",
            "/config.json"
          ]
        },
        {
          "CmdLine": [
            "git clone https://github.com/olipo186/Git-Auto-Deploy.git ${WEBHOOK_ROOT}     \u0026\u0026 pip install -r ${WEBHOOK_ROOT}/requirements.txt     \u0026\u0026 rm -rf ${WEBHOOK_ROOT}/.git         ${WEBHOOK_ROOT}/.gitignore         ${WEBHOOK_ROOT}/.travis.yml         ${WEBHOOK_ROOT}/Dockerfile         ${WEBHOOK_ROOT}/GitAutoDeploy.py         ${WEBHOOK_ROOT}/LICENSE         ${WEBHOOK_ROOT}/Makefile         ${WEBHOOK_ROOT}/README.md         ${WEBHOOK_ROOT}/config.json.sample         ${WEBHOOK_ROOT}/docs         ${WEBHOOK_ROOT}/platforms/         ${WEBHOOK_ROOT}/requirements.txt         ${WEBHOOK_ROOT}/setup.py         ${WEBHOOK_ROOT}/test     \u0026\u0026 tar czf /Git-Auto-Deploy.tar.gz -C ${WEBHOOK_ROOT} ./"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apache2 \u0026\u0026 apt-get clean     \u0026\u0026 mkdir -p /var/run/apache2 /var/lock/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y supervisor     \u0026\u0026 mkdir -p /var/run/Git-Auto-Deploy /var/log/supervisor     \u0026\u0026 {         echo \"[supervisord]\";         echo \"nodaemon=true\";         echo \"\";         echo \"[program:apache2]\";         echo \"command=/bin/bash -c 'source /etc/apache2/envvars \u0026\u0026 exec /usr/sbin/apache2 -DFOREGROUND'\";         echo \"autorestart=true\";         echo \"\";     } \u003e /etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/mkdocs"
        },
        {
          "Name": "expose",
          "Ports": [
            "80",
            "8001"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}