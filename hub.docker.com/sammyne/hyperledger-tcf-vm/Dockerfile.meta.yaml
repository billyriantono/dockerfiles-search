MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update    && apt-get install -y -q   build-essential    ca-certificates    cmake    git    make    pkg-config    cmake    protobuf-compiler    libprotobuf-dev    python    python3-dev    virtualenv    swig    software-properties-common    curl    dh-autoreconf    ocaml    wget    xxd    unzip    tar    liblmdb-dev    ocamlbuild    python3-tk    &&
      apt-get -y -q upgrade    && apt-get clean    && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/intel    && mkdir -p /etc/init
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/intel
  - CmdLine:
    - wget https://download.01.org/intel-sgx/linux-2.3.1/ubuntu18.04/libsgx-enclave-common_2.3.101.46683-1_amd64.deb    &&
      dpkg -i libsgx-enclave-common_2.3.101.46683-1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://download.01.org/intel-sgx/linux-2.3.1/ubuntu18.04/sgx_linux_x64_sdk_2.3.101.46683.bin    &&
      chmod +x sgx_linux_x64_sdk_2.3.101.46683.bin    && echo "yes" | ./sgx_linux_x64_sdk_2.3.101.46683.bin    &&
      rm sgx_linux_x64_sdk_2.3.101.46683.bin    && echo ". /opt/intel/sgxsdk/environment"
      >> /etc/environment
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://www.openssl.org/source/openssl-1.1.1b.tar.gz    && tar -zxvf openssl-1.1.1b.tar.gz    &&
      cd openssl-1.1.1b/    && ./config    && THREADS=8    && make -j$THREADS    &&
      make test    && make install -j$THREADS    && ldconfig    && cd ..    && rm
      -rf openssl-1.1.1b
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.py-solc/solc-v0.4.25/bin    && curl -LsS https://github.com/ethereum/solidity/releases/download/v0.4.25/solc-static-linux
      -o /root/.py-solc/solc-v0.4.25/bin/solc    && chmod 0755 /root/.py-solc/solc-v0.4.25/bin/solc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - git clone https://github.com/intel/intel-sgx-ssl.git     && . /opt/intel/sgxsdk/environment    &&
      (cd intel-sgx-ssl/openssl_source; mv /tmp/openssl-1.1.1b.tar.gz . )    && (cd
      intel-sgx-ssl/Linux; if ([ -c /dev/isgx ] && [ -S /var/run/aesmd/aesm.socket
      ]); then SGX_MODE=HW; else SGX_MODE=SIM; fi; make SGX_MODE=${SGX_MODE} DESTDIR=/opt/intel/sgxssl
      all test )    && (cd intel-sgx-ssl/Linux; make install )    && rm -rf /tmp/intel-sgx-ssl    &&
      echo "SGX_SSL=/opt/intel/sgxssl" >> /etc/environment
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /project/TrustedComputeFramework
  - CmdLine:
    - echo "VIRTUAL_ENV=/project/TrustedComputeFramework/tools/build/_dev" >> /etc/environment    &&
      echo "TCF_HOME=/project/TrustedComputeFramework/" >> /etc/environment    &&
      if [ ! -z "$http_proxy"  ]; then    echo 'Acquire::http::Proxy "'$http_proxy'";'
      >> /etc/apt/apt.conf.d/00proxy;    echo "http_proxy=$http_proxy" >> /etc/wgetrc;    echo
      "http_proxy=$http_proxy" >> /etc/environment;    echo "HTTP_PROXY=$(echo $http_proxy
      | sed 's,[a-zA-Z]*://,,')" >> /etc/environment;    fi    && if [ ! -z "$ftp_proxy"  ];  then    echo
      'Acquire::ftp::Proxy "'$ftp_proxy'";' >> /etc/apt/apt.conf.d/00proxy;    echo
      "ftp_proxy=$ftp_proxy" >> /etc/wgetrc;    echo "ftp_proxy=$ftp_proxy" >> /etc/environment;    fi    &&
      if [ ! -z "$https_proxy" ]; then    echo 'Acquire::https::Proxy "'$https_proxy'";'
      >> /etc/apt/apt.conf.d/00proxy;    echo "https_proxy=$https_proxy" >> /etc/wgetrc;    echo
      "https_proxy=$https_proxy" >> /etc/environment;    echo "HTTPS_PROXY=$(echo
      $https_proxy | sed 's,[a-zA-Z]*://,,')" >> /etc/environment;    fi    && sed
      -i '1s;^;source /etc/environment\nexport $(grep -v "^. " /etc/environment| cut
      -d= -f1)\n;' /etc/environment
    Name: run
    PrependShell: true
  - Env:
    - Key: http_proxy
      Value: $http_proxy
    Name: env
  - Env:
    - Key: https_proxy
      Value: $https_proxy
    Name: env
  - Env:
    - Key: TCF_HOME
      Value: /project/TrustedComputeFramework
    Name: env
  - Env:
    - Key: SGX_SSL
      Value: /opt/intel/sgxssl
    Name: env
  - Env:
    - Key: SGX_SDK
      Value: /opt/intel/sgxsdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$SGX_SDK/bin:$SGX_SDK/bin/x64
    Name: env
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: $PKG_CONFIG_PATH:$SGX_SDK/pkgconfig
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$SGX_SDK/sdk_libs
    Name: env
  - Env:
    - Key: SOLC_BINARY
      Value: /root/.py-solc/solc-v0.4.25/bin/solc
    Name: env
  - Env:
    - Key: WALLET_PRIVATE_KEY
      Value: '"B413189C95B48737AE2D9AF4CAE97EB03F4DE40599DF8E6C89DCE4C2E2CBA8DE"'
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :0
    Name: env
  - Name: workdir
    Path: /project/TrustedComputeFramework
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
