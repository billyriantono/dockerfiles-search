MetaArgs: null
Stages:
- As: builder
  BaseName: node:12-alpine
  Commands:
  - CmdLine:
    - apk add openssh      && echo "root:UghDocker!" | chpasswd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sshd_config
    - /etc/ssh/
  - Name: expose
    Ports:
    - "2222"
    - "80"
  - Name: workdir
    Path: /usr/src/client
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - client/package.json
    - client/package-lock.json
    - ./
  - CmdLine:
    - npm i
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src
  - CmdLine:
    - npm run build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Dockerfiles/server_config_docker.cfg
    - /usr/src/server/server_config.cfg
  From:
    Image: node:12-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM node:12-alpine as BUILDER
- BaseName: python:3.6-slim
  Commands:
  - Maintainer: Kruptein <info@darragh.dev>
    Name: maintainer
  - Name: expose
    Ports:
    - "8000"
  - Name: workdir
    Path: /planarally
  - Name: volume
    Volumes:
    - /planarally/data
  - Name: volume
    Volumes:
    - /planarally/static/assets
  - CmdLine:
    - /usr/bin/dumb-init
    - --
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: BUILDER
    Name: copy
    SourcesAndDest:
    - /usr/src/server/requirements.txt
    - .
  - CmdLine:
    - apt-get update && apt-get install dumb-init curl -y &&     rm -rf /var/lib/apt/lists/*
      &&     pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: BUILDER
    Name: copy
    SourcesAndDest:
    - /usr/src/server/
    - .
  - CmdLine:
    - python
    - -u
    - planarserver.py
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim
