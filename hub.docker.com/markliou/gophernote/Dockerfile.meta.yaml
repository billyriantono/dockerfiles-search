MetaArgs: null
Stages:
- BaseName: golang
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y pkg-config libzmq3-dev build-essential python3-pip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/goimports
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -tags zmq_3_x github.com/gopherds/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.ipython/kernels/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r $GOPATH/src/github.com/gopherds/gophernotes/kernel/* ~/.ipython/kernels/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini
      &&     echo "d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip3 install --upgrade pip &&     pip3 install -vU setuptools && \tpip3 install
      jupyter"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /mnt/notebooks
  - Name: workdir
    Path: /
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - notebook
    - --allow-root
    - --no-browser
    - --ip=0.0.0.0
    - --notebook-dir=/mnt/notebooks
    - --NotebookApp.token=''
    Name: cmd
    PrependShell: false
  From:
    Image: golang
  Name: ""
  Platform: ""
  SourceCode: FROM golang
