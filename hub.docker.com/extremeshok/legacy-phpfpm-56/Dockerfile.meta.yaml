MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Adrian Kriel <admin@extremeshok.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: "5.6"
    - Key: OS_LOCALE
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LANG
      Value: ${OS_LOCALE}
    - Key: LANGUAGE
      Value: ${OS_LOCALE}
    - Key: LC_ALL
      Value: ${OS_LOCALE}
    Name: env
  - Name: workdir
    Path: /tmp/provisioning/
  - CmdLine:
    - "apt-get update \t&& SOFTWARE_BUILD_DEPS=\" \tapt-transport-https \tbuild-essential
      \tlsb-release \tmake \tpython-software-properties \tsoftware-properties-common
      \tunzip \" \t&& apt-get install --no-install-recommends -y $SOFTWARE_BUILD_DEPS
      sudo curl iputils-ping locales \t&& LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen ${OS_LOCALE}
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& PHP_BUILD_DEPS=\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tphp5.6
      \t\tphp5.6-cli \t\tphp5.6-curl \t\tphp5.6-dev \t\tphp5.6-fpm \t\tphp5.6-gd \t\tphp5.6-geoip
      \t\tphp5.6-imagick \t\tphp5.6-imap \t\tphp5.6-json \t\tphp5.6-mbstring \t\tphp5.6-mcrypt
      \t\tphp5.6-memcached \t\tphp5.6-mysql \t\tphp5.6-ps \t\tphp5.6-pspell \t\tphp5.6-recode
      \t\tphp5.6-redis \t\tphp5.6-sqlite \t\tphp5.6-tidy \t\tphp5.6-xml \" \t&& set
      -x \t&& apt-get install --no-install-recommends -y $PHP_BUILD_DEPS   && rm -rf
      /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /var/www/   && chown -R www-data:www-data /var/www \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /tmp/IONCUBE && cd /tmp/IONCUBE \t&& curl -sS https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
      -o ioncube_loaders_lin_x86-64.tar.gz \t&& tar -xzf ioncube_loaders_lin_x86-64.tar.gz
      \t&& cp -f ioncube/ioncube_loader_lin_5.6.so /usr/lib/php/20131226/ioncube_loader_lin.so
      \t&& echo \"zend_extension=ioncube_loader_lin.so\" > /etc/php/5.6/cli/conf.d/0-ioncube.ini
      \t&& echo \"zend_extension=ioncube_loader_lin.so\" > /etc/php/5.6/fpm/conf.d/0-ioncube.ini
      \t&& rm -rf /tmp/IONCUBE"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends cron supervisor"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get purge -y --auto-remove $SOFTWARE_BUILD_DEPS \t&&
      rm -rf /tmp/provisioning \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/
  - Name: expose
    Ports:
    - "9000"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rootfs/
    - /
  - CmdLine:
    - chmod 777 /usr/local/bin/supervisor-watcher
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 744 /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
