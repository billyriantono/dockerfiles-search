{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "xataz/nginx-php",
      "SourceCode": "FROM xataz/nginx-php",
      "Platform": "",
      "From": {
        "Image": "xataz/nginx-php"
      },
      "Commands": [
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "3.3.0"
        },
        {
          "Key": "GPG_matthieu",
          "Name": "arg",
          "Value": "\"814E 346F A01A 20DB B04B  6807 B5DB D592 5590 A237\""
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "991"
            },
            {
              "Key": "GID",
              "Value": "991"
            },
            {
              "Key": "UPLOAD_MAX_SIZE",
              "Value": "10M"
            },
            {
              "Key": "MEMORY_LIMIT",
              "Value": "512M"
            },
            {
              "Key": "OPCACHE_MEM_SIZE",
              "Value": "256M"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "BUILD_DEPS=\"     git     tar     build-base     autoconf     geoip-dev     libressl     ca-certificates     gnupg\"  \u0026\u0026 apk -U upgrade \u0026\u0026 apk add     ${BUILD_DEPS}     geoip     tzdata     python2  \u0026\u0026 pecl install geoip-1.1.1  \u0026\u0026 echo 'extension=geoip.so' \u003e\u003e /php/conf.d/geoip.ini  \u0026\u0026 mkdir /piwik \u0026\u0026 cd /tmp  \u0026\u0026 PIWIK_TARBALL=\"piwik-${VERSION}.tar.gz\"  \u0026\u0026 wget -q https://builds.piwik.org/${PIWIK_TARBALL}  \u0026\u0026 wget -q https://builds.piwik.org/${PIWIK_TARBALL}.asc  \u0026\u0026 wget -q https://builds.piwik.org/signature.asc  \u0026\u0026 echo \"Verifying authenticity of ${PIWIK_TARBALL}...\"  \u0026\u0026 gpg --import signature.asc  \u0026\u0026 FINGERPRINT=\"$(LANG=C gpg --verify ${PIWIK_TARBALL}.asc ${PIWIK_TARBALL} 2\u003e\u00261   | sed -n \"s#Primary key fingerprint: \\(.*\\)#\\1#p\")\"  \u0026\u0026 if [ -z \"${FINGERPRINT}\" ]; then echo \"Warning! Invalid GPG signature!\" \u0026\u0026 exit 1; fi  \u0026\u0026 if [ \"${FINGERPRINT}\" != \"${GPG_matthieu}\" ]; then echo \"Warning! Wrong GPG fingerprint!\" \u0026\u0026 exit 1; fi  \u0026\u0026 echo \"All seems good, now unpacking ${PIWIK_TARBALL}...\"  \u0026\u0026 tar xzf ${PIWIK_TARBALL} --strip 1 -C /piwik  \u0026\u0026 wget -q https://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz -P /usr/share/GeoIP/  \u0026\u0026 gzip -d /usr/share/GeoIP/GeoLiteCity.dat.gz  \u0026\u0026 mv /usr/share/GeoIP/GeoLiteCity.dat /usr/share/GeoIP/GeoIPCity.dat  \u0026\u0026 git clone https://github.com/matomo-org/matomo-log-analytics.git /tmp/mamoto-log-analytics  \u0026\u0026 mv /tmp/mamoto-log-analytics/import_logs.py /piwik/  \u0026\u0026 apk del ${BUILD_DEPS} php7-dev php7-pear  \u0026\u0026 rm -rf /tmp/*  /var/cache/apk/* /tmp/* /root/.gnupg /root/.cache/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/startup /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/logs"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/startup"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/s6-svscan",
            "/etc/s6.d"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}