MetaArgs: null
Stages:
- BaseName: openjdk:alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Felipe Ramos (Cabuto) <perenecabuto@gmail.com>"'
    Name: label
  - Env:
    - Key: ANDROID_SDK_TOOLS_VERSION
      Value: '"3859397"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: '"/usr/local/android-sdk"'
    Name: env
  - Env:
    - Key: ANDROID_VERSION
      Value: "27"
    Name: env
  - Env:
    - Key: ANDROID_BUILD_TOOLS_VERSION
      Value: 27.0.2
    Name: env
  - Env:
    - Key: FASTLANE_VERSION
      Value: 2.80.0
    Name: env
  - Env:
    - Key: GLIBC_VERSION
      Value: 2.27-r0
    Name: env
  - Env:
    - Key: SDK_URL
      Value: '"https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip"'
    Name: env
  - Env:
    - Key: DOWNLOAD_FILE
      Value: /tmp/sdk.zip
    Name: env
  - CmdLine:
    - apk add --update     ca-certificates     wget     unzip     libstdc++     g++     make     ruby     ruby-irb     ruby-dev     &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install fastlane -N -v $FASTLANE_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "$ANDROID_HOME"     && wget -q -O "$DOWNLOAD_FILE" $SDK_URL     &&
      unzip "$DOWNLOAD_FILE" -d "$ANDROID_HOME"     && rm "$DOWNLOAD_FILE"     &&
      yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager --update
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"     "platforms;android-${ANDROID_VERSION}"     "platform-tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/glibc
    Name: run
    PrependShell: true
  - CmdLine:
    - for PACKAGE in glibc glibc-bin glibc-i18n glibc-dev; do         export APK_FILE="${PACKAGE}-${GLIBC_VERSION}.apk";         export
      APK_PATH="/tmp/glibc/$APK_FILE";         wget -q -O $APK_PATH https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${APK_FILE};         apk
      add $APK_PATH;     done
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/glibc
    Name: run
    PrependShell: true
  From:
    Image: openjdk:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:alpine
