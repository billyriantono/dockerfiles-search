{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ALLOW_OVERRIDE",
              "Value": "**False**"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y --force-yes     git curl nano wget vim make     apache2 libapache2-mod-php5     php5-common php5-cli php5-fpm php-pear php5-dev php5-xdebug     php5-mcrypt php5-mysql php5-apcu     php5-gd php5-imagick php5-curl php5-intl     php5-redis php5-sqlite php5-pgsql php5-memcached     ca-certificates libcurl3-openssl-dev libssh2-php pkg-config;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.sh     \u0026\u0026 sh cmake-3.5.2-Linux-x86_64.sh --skip-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/alanxz/rabbitmq-c.git     \u0026\u0026 mkdir /rabbitmq-c/build     \u0026\u0026 cd /rabbitmq-c/build \u0026\u0026 cmake -DCMAKE_INSTALL_PREFIX=/usr/local ..     \u0026\u0026 cd /rabbitmq-c/build \u0026\u0026 cmake --build . --target install     \u0026\u0026 ln -s /usr/local/lib/x86_64-linux-gnu/librabbitmq.so /usr/local/lib/librabbitmq.so     \u0026\u0026 ln -s /usr/local/lib/x86_64-linux-gnu/librabbitmq.so.4 /usr/local/lib/librabbitmq.so.4     \u0026\u0026 printf \"\\n\" | pecl install amqp     \u0026\u0026 printf \"\\n\" | pecl install mongo     \u0026\u0026 echo 'extension=mongo.so' \u003e\u003e /etc/php5/cli/conf.d/20-mongo.ini     \u0026\u0026 echo 'extension=mongo.so' \u003e\u003e /etc/php5/fpm/conf.d/20-mongo.ini     \u0026\u0026 echo 'extension=mongo.so' \u003e\u003e /etc/php5/apache2/conf.d/20-mongo.ini     \u0026\u0026 echo 'extension=amqp.so' \u003e\u003e /etc/php5/cli/conf.d/20-amqp.ini     \u0026\u0026 echo 'extension=amqp.so' \u003e\u003e /etc/php5/fpm/conf.d/20-amqp.ini     \u0026\u0026 echo 'extension=amqp.so' \u003e\u003e /etc/php5/apache2/conf.d/20-amqp.ini COPY config/memory-limit.ini /etc/php5/cli/conf.d/memory-limit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/memory-limit.ini",
            "/etc/php5/fpm/conf.d/memory-limit.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/memory-limit.ini",
            "/etc/php5/apache2/conf.d/memory-limit.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/xdebug.ini",
            "/etc/php5/cli/conf.d/xdebug.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/xdebug.ini",
            "/etc/php5/fpm/conf.d/xdebug.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/xdebug.ini",
            "/etc/php5/apache2/conf.d/xdebug.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://www.phing.info/get/phing-latest.phar     \u0026\u0026 mv phing-latest.phar /usr/local/bin/phing     \u0026\u0026 chmod +x /usr/local/bin/phing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar     \u0026\u0026 mv phpcs.phar /usr/local/bin/phpcs     \u0026\u0026 chmod +x /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_5.x | bash -     \u0026\u0026 apt-get install --no-install-recommends -y nodejs bzip2     \u0026\u0026 npm install --global phantomjs-prebuilt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ServerName localhost\" \u003e\u003e /etc/apache2/apache2.conf     \u0026\u0026 sed -i \"s/variables_order.*/variables_order = \\\"EGPCS\\\"/g\" /etc/php5/apache2/php.ini     \u0026\u0026 sed -i \"s/expose_php.*/expose_php = \\\"off\\\"/g\" /etc/php5/apache2/php.ini     \u0026\u0026 mkdir -p /etc/apache2/ssl     \u0026\u0026 openssl req         -new         -newkey rsa:4096         -days 365         -nodes         -x509         -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=local.kiwibem.com\"         -keyout /etc/apache2/ssl/apache.key         -out /etc/apache2/ssl/apache.crt     \u0026\u0026 /usr/sbin/php5enmod mcrypt     \u0026\u0026 a2enmod rewrite     \u0026\u0026 a2enmod php5     \u0026\u0026 a2enmod ssl     \u0026\u0026 rm -rf /etc/apache2/sites-enabled/000-default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "27017",
            "3306",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}