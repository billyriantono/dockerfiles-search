{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruimashita/numpy",
      "SourceCode": "FROM ruimashita/numpy",
      "Platform": "",
      "From": {
        "Image": "ruimashita/numpy"
      },
      "Commands": [
        {
          "Maintainer": "Yu You",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INITRD",
              "Value": "No"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AIRFLOW_VERSION",
              "Value": "1.7.1.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AIRFLOW_HOME",
              "Value": "/usr/local/airflow"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONLIBPATH",
              "Value": "/usr/lib/python2.7/dist-packages"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_MESSAGES",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -yqq --no-install-recommends     ca-certificates     apt-utils    netcat     curl     python-pip     python-dev     libpq-dev     libkrb5-dev     libsasl2-dev     libssl-dev     libffi-dev     build-essential     locales     \u0026\u0026 locale-gen en_US.utf8     \u0026\u0026 update-locale LANG=en_US.utf8 LC_ALL=en_US.utf8     \u0026\u0026 pip install pytz==2015.7     \u0026\u0026 pip install cryptography     \u0026\u0026 pip install pyOpenSSL     \u0026\u0026 pip install ndg-httpsclient     \u0026\u0026 pip install pyasn1     \u0026\u0026 pip install airflow==${AIRFLOW_VERSION}     \u0026\u0026 pip install airflow[celery]==${AIRFLOW_VERSION}     \u0026\u0026 pip install airflow[postgres]==${AIRFLOW_VERSION}     \u0026\u0026 pip install --install-option=\"--install-purelib=$PYTHONLIBPATH\" celery[redis]     \u0026\u0026 apt-get remove --purge -yqq build-essential python-pip python-dev libmysqlclient-dev libkrb5-dev libsasl2-dev libssl-dev libffi-dev     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf     /var/lib/apt/lists/*     /tmp/*     /var/tmp/*     /usr/share/man     /usr/share/doc     /usr/share/doc-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "script/entrypoint.sh",
            "${AIRFLOW_HOME}/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/airflow.cfg",
            "${AIRFLOW_HOME}/airflow.cfg"
          ]
        },
        {
          "CmdLine": [
            "chown -R airflow: ${AIRFLOW_HOME}     \u0026\u0026 chmod +x ${AIRFLOW_HOME}/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5555",
            "8080",
            "8793"
          ]
        },
        {
          "Name": "user",
          "User": "airflow"
        },
        {
          "Name": "workdir",
          "Path": "${AIRFLOW_HOME}"
        },
        {
          "CmdLine": [
            "./entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}