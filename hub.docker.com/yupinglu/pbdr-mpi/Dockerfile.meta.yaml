MetaArgs: null
Stages:
- BaseName: rocker/r-base
  Commands:
  - Maintainer: '"Yuping Lu" yupinglu89@gmail.com'
    Name: maintainer
  - CmdLine:
    - apt-get update        && apt-get install -y     wget                    python                  ssh                     libopenblas-dev         libopenmpi-dev      software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/openmpi || echo "Directory exists"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /all_hostlibs || echo "Directory exists"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/lib64 || echo "Directory exists"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/libibverbs.d || echo "Directory exists"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver mlx4" > /etc/libibverbs.d/mlx4.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver mlx5" > /etc/libibverbs.d/mlx5.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver cxgb3" > /etc/libibverbs.d/cxgb3.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver cxgb4" > /etc/libibverbs.d/cxgb4.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver i40iw" > /etc/libibverbs.d/i40iw.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver ipathverbs" > /etc/libibverbs.d/ipath.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver mthca" > /etc/libibverbs.d/mthca.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "driver nes" > /etc/libibverbs.d/nes.driver
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://gist.githubusercontent.com/YupingLu/cc2b37bf76eb3b7061d5a55105f8f88a/raw/e36c8a09b13893fe860780f560daf6511a714250/lib64.txt
      -O /tmp/desired_hostlibs.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /tmp/desired_hostlibs.txt | xargs -I{} ln -s /all_hostlibs/{} /usr/lib64/{}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/desired_hostlibs.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y r-cran-curl
    Name: run
    PrependShell: true
  - CmdLine:
    - r -e "install.packages(c('rlecuyer', 'remotes', 'randomForest'),   repos='https://cran.rstudio.com/',
      dependencies='Imports')"
    Name: run
    PrependShell: true
  - Env:
    - Key: COLOROUT_VERSION
      Value: 1.1-2
    Name: env
  - CmdLine:
    - cd /tmp   && wget https://github.com/jalvesaq/colorout/releases/download/v1.2-2/colorout_1.1-2.tar.gz   &&
      tar zxf colorout_1.1-2.tar.gz   && R CMD INSTALL colorout/   && rm colorout_1.1-2.tar.gz   &&
      rm -rf colorout/
    Name: run
    PrependShell: true
  - CmdLine:
    - r -e "remotes::install_github('RBigData/pbdMPI');"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias R='R --no-save --quiet'" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "options(repos=structure(c(CRAN='https://cran.rstudio.com/'))) ;   utils::rc.settings(ipck=TRUE);                                            library(colorout);                                                        "
      > /usr/lib/R/etc/Rprofile.site
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y --purge python wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoclean
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/ylk
    Name: env
  - CmdLine:
    - useradd --create-home --home-dir $HOME ylk   && chown -R ylk:users $HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - Name: user
    User: ylk
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: rocker/r-base
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/r-base
