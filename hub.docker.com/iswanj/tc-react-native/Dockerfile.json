{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install software-properties-common     python-software-properties     wget     curl     git     lftp     unzip -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026   add-apt-repository -y ppa:webupd8team/java \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y oracle-java8-installer \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   rm -rf /var/cache/oracle-jdk8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_VERSION",
              "Value": "sdk-tools-linux-3859397.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_BUILD_TOOLS_VERSION",
              "Value": "build-tools-27.0.3,build-tools-26.0.2,build-tools-25.0.3,build-tools-25.0.2,build-tools-25.0.0,build-tools-23.0.2,build-tools-23.0.3,build-tools-23.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "https://dl.google.com/android/repository/${ANDROID_SDK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_API_LEVELS",
              "Value": "android-26,android-25,android-23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_EXTRA_COMPONENTS",
              "Value": "extra-android-m2repository,extra-google-m2repository,extra-google-google_play_services"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q ${ANDROID_SDK_URL}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip ${ANDROID_SDK_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm ${ANDROID_SDK_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${ANDROID_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv tools/ ${ANDROID_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/.android \u0026\u0026 echo '### User Sources for Android SDK Manager' \u003e ~/.android/repositories.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | sdkmanager --licenses \u0026\u0026 sdkmanager --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager     \"tools\"     \"platform-tools\"     \"emulator\"     \"extras;android;m2repository\"     \"extras;google;m2repository\"     \"extras;google;google_play_services\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager \"build-tools;27.0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager     \"platforms;android-27\"     \"platforms;android-26\"     \"platforms;android-25\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "3.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/lib  \u0026\u0026 curl -fl https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -o gradle-bin.zip  \u0026\u0026 unzip \"gradle-bin.zip\"  \u0026\u0026 ln -s \"/usr/lib/gradle-${GRADLE_VERSION}/bin/gradle\" /usr/bin/gradle  \u0026\u0026 rm \"gradle-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/lib/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.11.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     wget -q http://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz \u0026\u0026     tar -xzf node-v${NODE_VERSION}-linux-x64.tar.gz \u0026\u0026     mv node-v${NODE_VERSION}-linux-x64 /opt/node \u0026\u0026     rm node-v${NODE_VERSION}-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/node/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install apt-transport-https -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install yarn -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install react-native-cli -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/Asia/Colombo /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}