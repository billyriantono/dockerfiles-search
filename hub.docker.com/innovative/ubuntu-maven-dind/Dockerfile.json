{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Innovative People \u003ccontact@inpglobal.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy --no-install-recommends     apt-transport-https ca-certificates curl tzdata     locales iptables curl python-pip git sed unzip netcat wget \u0026\u0026     apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://get.docker.com/ | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UPDATE",
              "Value": "161"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD",
              "Value": "12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIG",
              "Value": "2f38c3b165be4555a1fa6e98c45e0808"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-${VERSION}-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JRE_HOME",
              "Value": "${JAVA_HOME}/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_TOOL_OPTIONS",
              "Value": "-Dfile.encoding=UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 \tlocaledef -i en_US -c -f UTF-8 en_US.UTF-8 \u0026\u0026 \tcurl -v --location --retry 3 --capath /etc/ssl/certs \t--header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \thttp://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/\"${SIG}\"/jdk-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz \t| tar xz -C /tmp \u0026\u0026 \tmkdir -p /usr/lib/jvm \u0026\u0026 mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \u0026\u0026 \tupdate-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"${JRE_HOME}/bin/javaws\" 1 \u0026\u0026 \tupdate-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \u0026\u0026 \tupdate-alternatives --set java \"${JRE_HOME}/bin/java\" \u0026\u0026 \tupdate-alternatives --set javaws \"${JRE_HOME}/bin/javaws\" \u0026\u0026     update-alternatives --set javac \"${JAVA_HOME}/bin/javac\" \u0026\u0026     pip install --upgrade setuptools \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "3.5.2"
        },
        {
          "Key": "USER_HOME_DIR",
          "Name": "arg",
          "Value": "\"/root\""
        },
        {
          "Key": "SHA",
          "Name": "arg",
          "Value": "707b1f6e390a65bde4af4cdaf2a24d45fc19a6ded00fff02e91626e3e42ceaff"
        },
        {
          "Key": "BASE_URL",
          "Name": "arg",
          "Value": "https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/maven /usr/share/maven/ref \u0026\u0026     curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \u0026\u0026     echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \u0026\u0026     tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \u0026\u0026     rm -f /tmp/apache-maven.tar.gz \u0026\u0026     ln -s /usr/share/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoclean \u0026\u0026 apt-get --purge -y autoremove \u0026\u0026 \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/Europe/Moscow /etc/localtime \u0026\u0026     echo \"Europe/Moscow\" \u003e /etc/timezone \u0026\u0026     dpkg-reconfigure -f noninteractive tzdata \u0026\u0026     sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     echo 'LANG=\"en_US.UTF-8\"' \u003e /etc/default/locale \u0026\u0026     update-locale LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US\" \u0026\u0026     dpkg-reconfigure --frontend=noninteractive locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./wrapdocker",
            "/usr/local/bin/wrapdocker"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/wrapdocker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "CmdLine": [
            "wrapdocker"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}