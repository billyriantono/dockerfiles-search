MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - echo
    - Installing Git
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - echo
    - Installing microsoft sql(17) and tools
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get install -y     curl apt-utils apt-transport-https
      debconf-utils gcc build-essential g++-5    && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && ACCEPT_EULA=Y apt-get install -y mssql-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source ~/.bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install unixodbc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo
    - Installing Python3, Pip, and Pyodbc library
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get install -y     python3-pip python3-dev python3-setuptools     --no-install-recommends     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y locales     && echo "en_US.UTF-8 UTF-8"
      > /etc/locale.gen     && locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pyodbc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install gettext nano vim -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /sample
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /sample
  - Name: workdir
    Path: /sample
  - CmdLine:
    - /bin/bash ./entrypoint.sh
    Name: cmd
    PrependShell: true
  - CmdLine:
    - echo
    - Installing Java
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install -y  software-properties-common
      &&     add-apt-repository ppa:webupd8team/java -y &&     apt-get update &&     echo
      oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      &&     apt-get install -y oracle-java8-installer &&     apt-get clean
    Name: run
    PrependShell: true
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "10000"
  - Key: gid
    Name: arg
    Value: "10000"
  - Env:
    - Key: HOME
      Value: /home/${user}
    Name: env
  - CmdLine:
    - groupadd -g ${gid} ${group}
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -c "Jenkins user" -d $HOME -u ${uid} -g ${gid} -m ${user}
    Name: run
    PrependShell: true
  - Labels:
    - Key: Description
      Value: '"This is a base image, which provides the Jenkins agent executable (slave.jar)"'
    - Key: Vendor
      Value: '"Jenkins project"'
    - Key: Version
      Value: '"3.20"'
    Name: label
  - Key: VERSION
    Name: arg
    Value: "3.20"
  - Key: AGENT_WORKDIR
    Name: arg
    Value: /home/${user}/agent
  - CmdLine:
    - curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/slave.jar
    Name: run
    PrependShell: true
  - Name: user
    User: ${user}
  - Env:
    - Key: AGENT_WORKDIR
      Value: ${AGENT_WORKDIR}
    Name: env
  - CmdLine:
    - mkdir /home/${user}/.jenkins && mkdir -p ${AGENT_WORKDIR}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/${user}/.jenkins
  - Name: volume
    Volumes:
    - ${AGENT_WORKDIR}
  - Name: workdir
    Path: /home/${user}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave
    - /usr/local/bin/jenkins-slave
  - CmdLine:
    - jenkins-slave
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - echo
    - Image Built
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
