{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:jdk-alpine",
      "SourceCode": "FROM java:jdk-alpine",
      "Platform": "",
      "From": {
        "Image": "java:jdk-alpine"
      },
      "Commands": [
        {
          "Maintainer": "jmeth \u003cjmeth@users.noreply.github.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "mkdir /usr/share/jenkins \u0026\u0026     wget -O /usr/share/jenkins/jenkins.war http://mirrors.jenkins-ci.org/war/latest/jenkins.war"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add fontconfig ttf-dejavu git bash openssh nano nodejs     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/share \u0026\u0026     wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-2.6.zip \u0026\u0026     unzip sonar-scanner-2.6.zip \u0026\u0026     rm sonar-scanner-2.6.zip \u0026\u0026     mv sonar-scanner-2.6/bin/sonar-runner sonar-scanner-2.6/bin/sonar-runner.bak \u0026\u0026     cp sonar-scanner-2.6/bin/sonar-scanner sonar-scanner-2.6/bin/sonar-runner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "MAVEN_VERSION=3.3.9  \u0026\u0026 cd /usr/share  \u0026\u0026 wget http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz -O - | tar xzf -  \u0026\u0026 mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven  \u0026\u0026 ln -s /usr/share/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Ls \"https://github.com/dustinblackman/phantomized/releases/download/2.1.1/dockerized-phantomjs.tar.gz\" | tar xz -C /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/share/maven"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/java",
            "-jar",
            "/usr/share/jenkins/jenkins.war",
            "-Djava.awt.headless=true"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}