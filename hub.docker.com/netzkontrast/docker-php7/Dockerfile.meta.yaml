MetaArgs: null
Stages:
- BaseName: php:7.1.12-fpm-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Michael Schimmer <michael.schimmer@loadbee.com>"'
    Name: label
  - Env:
    - Key: php_conf
      Value: /usr/local/etc/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /usr/local/etc/php-fpm.d/www.conf
    Name: env
  - Env:
    - Key: php_vars
      Value: /usr/local/etc/php/conf.d/docker-vars.ini
    Name: env
  - CmdLine:
    - echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
      &&     echo /etc/apk/respositories &&     apk update &&     apk add --no-cache
      bash     openssh-client     wget     supervisor     libevent-dev     curl     curl-dev     libcurl     git     python     python-dev     py-pip     augeas-dev     openssl-dev     ca-certificates     dialog     autoconf     make     gcc     gettext-dev     gettext     musl-dev     linux-headers     libmcrypt-dev     libpng-dev     icu-dev     zeromq     cyrus-sasl-dev     libpq     libxslt-dev     libffi-dev     freetype-dev     sqlite-dev     libmemcached-dev     libjpeg-turbo-dev
      &&     docker-php-ext-configure gd       --with-gd       --with-freetype-dir=/usr/include/       --with-png-dir=/usr/include/       --with-jpeg-dir=/usr/include/
      &&     docker-php-ext-install pdo_mysql pdo_sqlite mysqli mcrypt gd exif intl
      xsl json soap dom zip opcache curl pcntl gettext sockets &&     pecl install
      xdebug &&     pecl install mongodb &&     pecl install memcached &&     docker-php-source
      delete &&     mkdir -p /var/log/supervisor &&     EXPECTED_COMPOSER_SIGNATURE=$(wget
      -q -O - https://composer.github.io/installer.sig) &&     php -r "copy('https://getcomposer.org/installer',
      'composer-setup.php');" &&     php -r "if (hash_file('SHA384', 'composer-setup.php')
      === '${EXPECTED_COMPOSER_SIGNATURE}') { echo 'Composer.phar Installer verified';
      } else { echo 'Composer.phar Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;" &&     php composer-setup.php --install-dir=/usr/bin --filename=composer
      &&     php -r "unlink('composer-setup.php');"  &&     pip install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install event
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add libzmq
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add zeromq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install zmq-beta
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del gcc musl-dev linux-headers libffi-dev augeas-dev python-dev make autoconf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/php-module.ini
    - /usr/local/etc/php/conf.d/php-modules.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/wait-for-it.sh
    - /usr/bin/wait-for-it
  - CmdLine:
    - chmod 755 /usr/bin/wait-for-it
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /var/www/* && mkdir /var/www/html/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cgi.fix_pathinfo=0" > ${php_vars} &&    echo "upload_max_filesize = 100M"  >>
      ${php_vars} &&    echo "post_max_size = 100M"  >> ${php_vars} &&    echo "variables_order
      = \"EGPCS\""  >> ${php_vars} &&     echo "memory_limit = 128M"  >> ${php_vars}
      &&     sed -i         -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output
      = yes/g"         -e "s/pm.max_children = 5/pm.max_children = 4/g"         -e
      "s/pm.start_servers = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers
      = 1/pm.min_spare_servers = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers
      = 4/g"         -e "s/;pm.max_requests = 500/pm.max_requests = 200/g"         -e
      "s/user = www-data/user = nginx/g"         -e "s/group = www-data/group = nginx/g"         -e
      "s/;listen.mode = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = www-data/listen.owner
      = nginx/g"         -e "s/;listen.group = www-data/listen.group = nginx/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${fpm_conf}
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.1.12-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1.12-fpm-alpine
