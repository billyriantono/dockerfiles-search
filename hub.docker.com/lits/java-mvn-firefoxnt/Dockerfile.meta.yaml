MetaArgs: null
Stages:
- BaseName: docker:latest
  Commands:
  - Maintainer: limaofeng <limaofeng@msn.com>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u111
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8 \t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\"
      ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/lib/gradle /app
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_VERSION
      Value: "2.13"
    Name: env
  - Env:
    - Key: GRADLE_HOME
      Value: /usr/lib/gradle/gradle-${GRADLE_VERSION}
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GRADLE_HOME}/bin
    Name: env
  - Name: workdir
    Path: /usr/lib/gradle
  - CmdLine:
    - set -x   && apk add --no-cache wget   && wget https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip   &&
      unzip gradle-${GRADLE_VERSION}-bin.zip   && rm gradle-${GRADLE_VERSION}-bin.zip   &&
      apk del wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add protobuf && ln -s /usr/bin/protoc /usr/local/bin/protoc
      && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add mysql-client && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - apk update && apk add bash libstdc++ && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add ca-certificates &&     apk add tzdata &&     ln -sf /usr/share/zoneinfo/Asia/Shanghai
      /etc/localtime &&     echo "Asia/Shanghai" > /etc/timezone
    Name: run
    PrependShell: true
  From:
    Image: docker:latest
  Name: ""
  Platform: ""
  SourceCode: FROM docker:latest
