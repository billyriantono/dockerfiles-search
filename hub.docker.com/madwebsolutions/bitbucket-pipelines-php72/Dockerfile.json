{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Mad WebSolutions \u003cinfo@mad-websolutions.nl\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MYSQL_ROOT_PASS",
          "Name": "arg",
          "Value": "root"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get upgrade -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y     software-properties-common     python-software-properties     build-essential     curl     git     unzip     mcrypt     wget     openssl     autoconf     g++     make     tar     openssh-client     rsync     pkg-config     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 apt-get --purge autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/openssl/include/openssl/ \u0026\u0026     ln -s /usr/include/openssl/evp.h /usr/local/openssl/include/openssl/evp.h \u0026\u0026     mkdir -p /usr/local/openssl/lib/ \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libssl.a /usr/local/openssl/lib/libssl.a \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/local/openssl/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'debconf-set-selections \u003c\u003c\u003c \"mysql-server-5.7 mysql-server/root_password password $MYSQL_ROOT_PASS\"' \u0026\u0026 \t\tbash -c 'debconf-set-selections \u003c\u003c\u003c \"mysql-server-5.7 mysql-server/root_password_again password $MYSQL_ROOT_PASS\"' \u0026\u0026 \t\tDEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026 \t\tDEBIAN_FRONTEND=noninteractive apt-get install -qqy mysql-server-5.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ondrej/php \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     apt-get install -y -qq php-pear php7.2-dev php7.2-zip php7.2-xml php7.2-mbstring php7.2-curl php7.2-json php7.2-mysql php7.2-tokenizer php7.2-cli php7.2-imap \u0026\u0026     apt-get remove --purge php5 php5-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y telnet redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl apt-transport-https ca-certificates \u0026\u0026    curl --fail -ssL -o setup-nodejs https://deb.nodesource.com/setup_8.x \u0026\u0026    bash setup-nodejs \u0026\u0026    apt-get install -y nodejs build-essential pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone=Europe/Berlin\" \u003e /etc/php/7.2/cli/conf.d/date_timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/composer"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs \u0026\u0026    apt-get install -y build-essential \u0026\u0026    npm install --global gulp-cli  \u0026\u0026    npm install gulp --global \u0026\u0026    npm install gulp \u0026\u0026    npm install --global yarn \u0026\u0026    apt-get install -y libpng-dev \u0026\u0026    npm install cross-env \u0026\u0026    npm install cross-env --global"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "composer selfupdate \u0026\u0026     composer global require hirak/prestissimo --prefer-dist --no-interaction \u0026\u0026     ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit \u0026\u0026     rm -rf /root/.composer/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean -y \u0026\u0026 \t\tapt-get autoremove -y \u0026\u0026 \t\trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}