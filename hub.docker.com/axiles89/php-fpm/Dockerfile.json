{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Dmitry Kushnerev \u003cdkushnerev@avito.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_DIR",
              "Value": "/etc/php/7.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install python-software-properties     \u0026\u0026 apt-get -y install software-properties-common     \u0026\u0026 add-apt-repository ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y --force-yes install \tcurl     php7.0-fpm     php7.0-amqp     php7.0-curl     php7.0-gd     php7.0-geoip     php7.0-gmp     php7.0-imagick     php7.0-intl     php7.0-json     php7.0-mbstring     php7.0-mcrypt     php7.0-memcached     php7.0-mongodb     php7.0-mysql     php7.0-opcache     php7.0-pgsql     php7.0-readline     php7.0-redis     php7.0-soap     php7.0-sqlite3     php7.0-xml     php7.0-yaml     php7.0-zip     php7.0-xdebug     vim     git     php7.0-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/tony2001/pinba_extension /tmp/pinba_extension     \u0026\u0026 cd /tmp/pinba_extension     \u0026\u0026 phpize     \u0026\u0026 ./configure --enable-pinba     \u0026\u0026 make install     \u0026\u0026 touch $PHP_DIR/cli/conf.d/20-pinba.ini     \u0026\u0026 echo 'extension=pinba.so; pinba.enabled=1' \u003e $PHP_DIR/cli/conf.d/20-pinba.ini     \u0026\u0026 cp $PHP_DIR/cli/conf.d/20-pinba.ini $PHP_DIR/fpm/conf.d/20-pinba.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc",
            "/etc"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "9004"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y --force-yes install php-pear \u0026\u0026 pear channel-discover pear.phing.info \u0026\u0026 pear install phing/phing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/php-fpm7.0",
            "--nodaemonize"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}