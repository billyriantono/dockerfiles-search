MetaArgs: null
Stages:
- BaseName: node:10-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Phase2 <outrigger@phase2technology.com>"'
    - Key: org.label-schema.vendor
      Value: '"Phase2 <outrigger@phase2technology.com>"'
    - Key: org.label-schema.name
      Value: '"Node v10"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/phase2/docker-node"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run --rm -it outrigger/node:10"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - apk --update --no-cache add bash curl git openssl tini
    Name: run
    PrependShell: true
  - Env:
    - Key: OUTRIGGER_QUIET
      Value: "0"
    - Key: NODE_ENV
      Value: production
    - Key: NPM_CONFIG_CACHE
      Value: /usr/local/share/.cache/npm
    - Key: YARN_CACHE_FOLDER
      Value: /usr/local/share/.cache/yarn
    Name: env
  - CmdLine:
    - mkdir /code &&   mkdir -p /usr/local/share/.cache &&   chown -R node:node /code
      &&   chown -R node:node /usr/local/share/.cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /root
    - /
  - Name: user
    User: node
  - Name: workdir
    Path: /code/
  - Name: expose
    Ports:
    - "3773"
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash
    - -c
    - /pre-start && exec node
    Name: cmd
    PrependShell: false
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
