MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Evan Lin "evanslin@gmail.com"
    Name: maintainer
  - CmdLine:
    - echo "nameserver 8.8.8.8" >> /etc/resolv.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     automake     build-essential     wget     p7zip-full     bash     curl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /Android && cd Android && mkdir output
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Android
  - CmdLine:
    - wget http://dl.google.com/android/android-sdk_r24.3.3-linux.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin
    Name: run
    PrependShell: true
  - CmdLine:
    - "tar -xvzf android-sdk_r24.3.3-linux.tgz && \tchmod a+x android-ndk-r10e-linux-x86_64.bin
      && \t7z x android-ndk-r10e-linux-x86_64.bin"
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /Android/android-sdk-linux
    Name: env
  - Env:
    - Key: NDK_ROOT
      Value: /Android/android-ndk-r10e
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$ANDROID_HOME/tools
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$ANDROID_HOME/platform-tools
    Name: env
  - CmdLine:
    - mkdir=toolchain-arm && bash $NDK_ROOT/build/tools/make-standalone-toolchain.sh
      --verbose --platform=android-19 --install-dir=toolchain-arm --arch=arm --toolchain=arm-linux-androideabi-clang3.6
      --llvm-version=3.6 --system=linux-x86_64 --stl=libc++
    Name: run
    PrependShell: true
  - Env:
    - Key: TOOLCHAIN
      Value: /Android/toolchain-arm
    Name: env
  - Env:
    - Key: SYSROOT
      Value: $TOOLCHAIN/sysroot
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$TOOLCHAIN/bin:$SYSROOT/usr/local/bin
    Name: env
  - Env:
    - Key: ARCH
      Value: armv7
    Name: env
  - Env:
    - Key: CC
      Value: arm-linux-androideabi-clang
    Name: env
  - Env:
    - Key: CXX
      Value: arm-linux-androideabi-clang++
    Name: env
  - Env:
    - Key: AR
      Value: arm-linux-androideabi-ar
    Name: env
  - Env:
    - Key: AS
      Value: arm-linux-androideabi-as
    Name: env
  - Env:
    - Key: LD
      Value: arm-linux-androideabi-ld
    Name: env
  - Env:
    - Key: RANLIB
      Value: arm-linux-androideabi-ranlib
    Name: env
  - Env:
    - Key: NM
      Value: arm-linux-androideabi-nm
    Name: env
  - Env:
    - Key: STRIP
      Value: arm-linux-androideabi-strip
    Name: env
  - Env:
    - Key: CHOST
      Value: arm-linux-androideabi
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: -std=c++14 -Wno-error=unused-command-line-argument
    Name: env
  - CmdLine:
    - "curl -O http://zlib.net/zlib-1.2.8.tar.gz && \ttar -xzf zlib-1.2.8.tar.gz &&
      \tmv zlib-1.2.8 zlib"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd zlib && ./configure --static && \tmake && \tls -hs . && \tcp libz.a /Android/output"
    Name: run
    PrependShell: true
  - Env:
    - Key: CPPFLAGS
      Value: -mthumb -mfloat-abi=softfp -mfpu=vfp -march=$ARCH  -DANDROID
    Name: env
  - CmdLine:
    - "curl -O https://www.openssl.org/source/openssl-1.0.2d.tar.gz && \ttar -xzf
      openssl-1.0.2d.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "ls && cd openssl-1.0.2d && ./Configure android-armv7 no-asm no-shared --static
      --with-zlib-include=/Android/zlib/include --with-zlib-lib=/Android/zlib/lib
      && \tmake build_crypto build_ssl -j 4 && ls && cp libcrypto.a /Android/output/libcrypto_armv7.a
      && cp libssl.a /Android/output/libssl_armv7.a && make clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r openssl-1.0.2d /Android/output/openssl-armv7
    Name: run
    PrependShell: true
  - CmdLine:
    - "ls && cd openssl-1.0.2d && ./Configure android-x86 no-asm no-shared --static
      --with-zlib-include=/Android/zlib/include --with-zlib-lib=/Android/zlib/lib
      && \tmake build_crypto build_ssl -j 4 && ls && cp libcrypto.a /Android/output/libcrypto_x86.a
      && cp libssl.a /Android/output/libssl_x86.a && make clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r openssl-1.0.2d /Android/output/openssl-x86
    Name: run
    PrependShell: true
  - CmdLine:
    - "ls && cd openssl-1.0.2d && ./Configure android-mips no-asm no-shared --static
      --with-zlib-include=/Android/zlib/include --with-zlib-lib=/Android/zlib/lib
      && \tmake build_crypto build_ssl -j 4 && ls && cp libcrypto.a /Android/output/libcrypto_mips.a
      && cp libssl.a /Android/output/libssl_mips.a && make clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r openssl-1.0.2d /Android/output/openssl-mips
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /Android/output/* /output
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
