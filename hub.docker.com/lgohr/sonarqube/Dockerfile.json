{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang",
      "SourceCode": "FROM golang as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CGO_ENABLED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/concourse-sonarqube-notifier"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /assets  \u0026\u0026 cd /concourse-sonarqube-notifier  \u0026\u0026 go test -v ./...  \u0026\u0026 go build -o /assets/in assets/in/main/in.go  \u0026\u0026 go build -o /assets/out assets/out/main/out.go  \u0026\u0026 go build -o /assets/check assets/check/main/check.go"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "runtime",
      "BaseName": "alpine:3.9.3",
      "SourceCode": "FROM alpine:3.9.3 AS runtime",
      "Platform": "",
      "As": "runtime",
      "From": {
        "Image": "alpine:3.9.3"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/",
            "/opt/resource/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/resource/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}