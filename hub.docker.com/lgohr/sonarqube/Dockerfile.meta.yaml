MetaArgs: null
Stages:
- As: build
  BaseName: golang
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /concourse-sonarqube-notifier
  - CmdLine:
    - mkdir -p /assets  && cd /concourse-sonarqube-notifier  && go test -v ./...  &&
      go build -o /assets/in assets/in/main/in.go  && go build -o /assets/out assets/out/main/out.go  &&
      go build -o /assets/check assets/check/main/check.go
    Name: run
    PrependShell: true
  From:
    Image: golang
  Name: build
  Platform: ""
  SourceCode: FROM golang as build
- As: runtime
  BaseName: alpine:3.9.3
  Commands:
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - assets/
    - /opt/resource/
  - CmdLine:
    - chmod +x /opt/resource/*
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.9.3
  Name: runtime
  Platform: ""
  SourceCode: FROM alpine:3.9.3 AS runtime
