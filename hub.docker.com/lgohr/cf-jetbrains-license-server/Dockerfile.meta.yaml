MetaArgs: null
Stages:
- As: alpinejq
  BaseName: alpine
  Commands:
  - CmdLine:
    - apk add --no-cache jq
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: alpinejq
  Platform: ""
  SourceCode: FROM alpine as alpinejq
- As: startuptest
  BaseName: alpinejq
  Commands:
  - Env:
    - Key: USER_HOME
      Value: /home/jetbrains
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - entrypoint_test.sh
    - ${USER_HOME}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mock.sh
    - ${USER_HOME}/license-server/bin/license-server.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mock.sh
    - ${USER_HOME}/register.sh
  - CmdLine:
    - chmod +x ${USER_HOME}/license-server/bin/license-server.sh   && chmod +x ${USER_HOME}/register.sh   &&
      ${USER_HOME}/entrypoint_test.sh
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: alpinejq
  Name: startuptest
  Platform: ""
  SourceCode: FROM alpinejq as startupTest
- As: registertest
  BaseName: alpine
  Commands:
  - Env:
    - Key: USER_HOME
      Value: /home/jetbrains
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - register.sh
    - register_test.sh
    - ${USER_HOME}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mock.sh
    - ${USER_HOME}/register
  - CmdLine:
    - chmod +x ${USER_HOME}/register   && ${USER_HOME}/register_test.sh
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: registertest
  Platform: ""
  SourceCode: FROM alpine as registerTest
- As: build
  BaseName: golang:1.11
  Commands:
  - Name: workdir
    Path: /cf-jetbrains-license-server
  - Chown: ""
    Name: add
    SourcesAndDest:
    - register.go
    - register_test.go
    - go.mod
    - go.sum
    - ./
  - Chown: ""
    Name: add
    SourcesAndDest:
    - testdata/*
    - ./testdata/
  - Env:
    - Key: GOOS
      Value: linux
    - Key: GOARCH
      Value: amd64
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - go test -v  && go build register.go  && chmod +x register
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.11 as build
- As: runtime
  BaseName: java:8-jre-alpine
  Commands:
  - Env:
    - Key: USER_HOME
      Value: /home/jetbrains
    Name: env
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /cf-jetbrains-license-server/register
    - ${USER_HOME}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - register.sh
    - ${USER_HOME}/
  - CmdLine:
    - apk add --no-cache  ca-certificates  wget  openssl  jq  && adduser -S jetbrains  &&
      wget -q https://download.jetbrains.com/lcsrv/license-server-installer.zip  &&
      mkdir -p ${USER_HOME}/license-server  && unzip -q license-server-installer.zip
      -d ${USER_HOME}/license-server  && chown -R jetbrains ${USER_HOME}/license-server  &&
      rm -f license-server-installer.zip
    Name: run
    PrependShell: true
  - Name: user
    User: jetbrains
  - Name: expose
    Ports:
    - "8111"
  - Name: workdir
    Path: $USER_HOME
  - CmdLine:
    - /bin/sh
    - /home/jetbrains/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: java:8-jre-alpine
  Name: runtime
  Platform: ""
  SourceCode: FROM java:8-jre-alpine as runtime
