{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "Institute of Computer Software, Nanjing University \u003cicsnju@163.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APT_INSTALL",
              "Value": "\"apt-get install -y --no-install-recommends\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_INSTALL",
              "Value": "\"pip --no-cache-dir install --upgrade\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_CLONE",
              "Value": "\"git clone --depth 10\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*      \t   /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL         build-essential         curl         cmake         git         wget         vim         protobuf-compiler         pkg-config         rsync         unzip         software-properties-common         openjdk-8-jdk         \u0026\u0026     add-apt-repository ppa:jonathonf/python-3.6 \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL         python3.6         python3.6-dev         \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python3 \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python \u0026\u0026     curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python get-pip.py \u0026\u0026     rm get-pip.py \u0026\u0026     $PIP_INSTALL         Pillow         ipykernel         jupyter         matplotlib         numpy         pandas         scipy         sklearn         Cython         \u0026\u0026    $APT_INSTALL        openmpi-bin        libpng-dev        libtiff-dev        libjasper-dev        \u0026\u0026    $PIP_INSTALL        https://cntk.ai/PythonWheel/GPU/cntk-2.3-cp36-cp36m-linux_x86_64.whl        \u0026\u0026     $APT_INSTALL         libatlas-base-dev         graphviz         \u0026\u0026     $PIP_INSTALL         mxnet-cu80         graphviz         \u0026\u0026     $APT_INSTALL         libfreetype6-dev         libpng12-dev         libzmq3-dev         \u0026\u0026     $PIP_INSTALL         tensorflow_gpu         \u0026\u0026     $PIP_INSTALL         http://download.pytorch.org/whl/cu80/torch-0.3.0.post4-cp36-cp36m-linux_x86_64.whl         torchvision         \u0026\u0026     $PIP_INSTALL         h5py         keras         \u0026\u0026     $APT_INSTALL         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         \u0026\u0026     $GIT_CLONE -b 1.0 https://github.com/BVLC/caffe.git /opt/caffe \u0026\u0026     cd /opt/caffe/python \u0026\u0026     $PIP_INSTALL -r requirements.txt \u0026\u0026     $GIT_CLONE https://github.com/NVIDIA/nccl.git /opt/nccl \u0026\u0026     cd /opt/nccl \u0026\u0026     make -j\"$(nproc)\" install \u0026\u0026     rm -rf /opt/nccl \u0026\u0026     mkdir /opt/caffe/build \u0026\u0026     cd /opt/caffe/build \u0026\u0026     cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 .. \u0026\u0026     make -j\"$(nproc)\" \u0026\u0026     ldconfig \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* ~/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYCAFFE_ROOT",
              "Value": "/opt/caffe/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYCAFFE_ROOT:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"$CAFFE_ROOT/build/lib\" \u003e\u003e /etc/ld.so.conf.d/caffe.conf \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        }
      ]
    }
  ]
}