MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jason Crowe <jcrowe@mozilla.com>"'
    Name: label
  - Env:
    - Key: DepVersion
      Value: 0.4.1
    - Key: DockerfilelintVersion
      Value: 1.4.0
    - Key: PuppetVersion
      Value: 4.10.9
    - Key: RubyLintVersion
      Value: 2.0.4
    - Key: TerraformVersion
      Value: 0.10.8
    Name: env
  - CmdLine:
    - apk add --no-cache     bash     build-base     findutils     file     git     go     nodejs-npm     rsync     ruby     ruby-irb     python     py-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-dependencies     curl     ruby-dev     unzip     py-pip     &&
      rm -f /var/cache/apk/APKINDEX.*
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install puppet-lint --no-document     && gem install puppet -v ${PuppetVersion}
      --no-document     && gem install jsonlint --no-document     && gem install mdl
      --no-document     && gem install travis --no-document     && gem install ruby-lint
      -v ${RubyLintVersion} --no-document     && curl -o shellcheck-latest.linux.x86_64.tar.xz     https://storage.googleapis.com/shellcheck/shellcheck-latest.linux.x86_64.tar.xz     &&
      tar -xvf shellcheck-latest.linux.x86_64.tar.xz     && mkdir -p /nubis/bin     &&
      mv shellcheck-latest/shellcheck /nubis/bin/shellcheck     && rm -rf shellcheck-latest
      shellcheck-latest.linux.x86_64.tar.xz     && curl -L -o terraform_${TerraformVersion}_linux_amd64.zip     https://releases.hashicorp.com/terraform/${TerraformVersion}/terraform_${TerraformVersion}_linux_amd64.zip     &&
      unzip terraform_${TerraformVersion}_linux_amd64.zip -d /nubis/bin     && rm
      terraform_${TerraformVersion}_linux_amd64.zip     && npm install --global yarn     &&
      curl -L -o dockerfilelint-${DockerfilelintVersion}.tar.gz     https://github.com/replicatedhq/dockerfilelint/archive/v${DockerfilelintVersion}.tar.gz     &&
      tar -xf dockerfilelint-${DockerfilelintVersion}.tar.gz             dockerfilelint-${DockerfilelintVersion}/bin/             dockerfilelint-${DockerfilelintVersion}/lib/             dockerfilelint-${DockerfilelintVersion}/yarn.lock             dockerfilelint-${DockerfilelintVersion}/package.json     &&
      mv dockerfilelint-${DockerfilelintVersion} /nubis/bin/dockerfilelint     &&
      rm dockerfilelint-${DockerfilelintVersion}.tar.gz     && cd /nubis/bin/dockerfilelint
      && yarn     && pip install pylint     && curl -L -o dep https://github.com/golang/dep/releases/download/v${DepVersion}/dep-linux-amd64     &&
      chmod +x dep     && mv dep /nubis/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del .build-dependencies
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - main.sh
    - /nubis/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run-checks
    - /nubis/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run-builds
    - /nubis/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go-build
    - /nubis/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mdl_style
    - /nubis/
  - Name: workdir
    Path: /nubis/files
  - Env:
    - Key: PATH
      Value: /nubis/bin:$PATH
    Name: env
  - CmdLine:
    - main.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - lint
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
