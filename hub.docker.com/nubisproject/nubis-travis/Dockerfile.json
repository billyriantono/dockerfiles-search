{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jason Crowe \u003cjcrowe@mozilla.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DepVersion",
              "Value": "0.4.1"
            },
            {
              "Key": "DockerfilelintVersion",
              "Value": "1.4.0"
            },
            {
              "Key": "PuppetVersion",
              "Value": "4.10.9"
            },
            {
              "Key": "RubyLintVersion",
              "Value": "2.0.4"
            },
            {
              "Key": "TerraformVersion",
              "Value": "0.10.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache     bash     build-base     findutils     file     git     go     nodejs-npm     rsync     ruby     ruby-irb     python     py-setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-dependencies     curl     ruby-dev     unzip     py-pip     \u0026\u0026 rm -f /var/cache/apk/APKINDEX.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install puppet-lint --no-document     \u0026\u0026 gem install puppet -v ${PuppetVersion} --no-document     \u0026\u0026 gem install jsonlint --no-document     \u0026\u0026 gem install mdl --no-document     \u0026\u0026 gem install travis --no-document     \u0026\u0026 gem install ruby-lint -v ${RubyLintVersion} --no-document     \u0026\u0026 curl -o shellcheck-latest.linux.x86_64.tar.xz     https://storage.googleapis.com/shellcheck/shellcheck-latest.linux.x86_64.tar.xz     \u0026\u0026 tar -xvf shellcheck-latest.linux.x86_64.tar.xz     \u0026\u0026 mkdir -p /nubis/bin     \u0026\u0026 mv shellcheck-latest/shellcheck /nubis/bin/shellcheck     \u0026\u0026 rm -rf shellcheck-latest shellcheck-latest.linux.x86_64.tar.xz     \u0026\u0026 curl -L -o terraform_${TerraformVersion}_linux_amd64.zip     https://releases.hashicorp.com/terraform/${TerraformVersion}/terraform_${TerraformVersion}_linux_amd64.zip     \u0026\u0026 unzip terraform_${TerraformVersion}_linux_amd64.zip -d /nubis/bin     \u0026\u0026 rm terraform_${TerraformVersion}_linux_amd64.zip     \u0026\u0026 npm install --global yarn     \u0026\u0026 curl -L -o dockerfilelint-${DockerfilelintVersion}.tar.gz     https://github.com/replicatedhq/dockerfilelint/archive/v${DockerfilelintVersion}.tar.gz     \u0026\u0026 tar -xf dockerfilelint-${DockerfilelintVersion}.tar.gz             dockerfilelint-${DockerfilelintVersion}/bin/             dockerfilelint-${DockerfilelintVersion}/lib/             dockerfilelint-${DockerfilelintVersion}/yarn.lock             dockerfilelint-${DockerfilelintVersion}/package.json     \u0026\u0026 mv dockerfilelint-${DockerfilelintVersion} /nubis/bin/dockerfilelint     \u0026\u0026 rm dockerfilelint-${DockerfilelintVersion}.tar.gz     \u0026\u0026 cd /nubis/bin/dockerfilelint \u0026\u0026 yarn     \u0026\u0026 pip install pylint     \u0026\u0026 curl -L -o dep https://github.com/golang/dep/releases/download/v${DepVersion}/dep-linux-amd64     \u0026\u0026 chmod +x dep     \u0026\u0026 mv dep /nubis/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "main.sh",
            "/nubis/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run-checks",
            "/nubis/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run-builds",
            "/nubis/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "go-build",
            "/nubis/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mdl_style",
            "/nubis/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/nubis/files"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/nubis/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "main.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "lint"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}