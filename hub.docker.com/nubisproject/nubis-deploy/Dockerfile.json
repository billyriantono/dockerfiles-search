{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jason Crowe \u003cjcrowe@mozilla.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "AwCliVersion",
              "Value": "1.10.38"
            },
            {
              "Key": "JqVersion",
              "Value": "1.5-r4"
            },
            {
              "Key": "KopsVersion",
              "Value": "1.9.0"
            },
            {
              "Key": "KubeCtlVersion",
              "Value": "1.10.2"
            },
            {
              "Key": "TerraformVersion",
              "Value": "0.11.7"
            },
            {
              "Key": "Json2HclVersion",
              "Value": "0.0.6"
            },
            {
              "Key": "UnicredsVersion",
              "Value": "1.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/nubis"
        },
        {
          "CmdLine": [
            "apk add --no-cache     bash     bind-tools     curl     git     jq=${JqVersion}     py-pip     rsync     unzip     \u0026\u0026 rm -f /var/cache/apk/APKINDEX.*     \u0026\u0026 pip install awscli==${AwCliVersion}     \u0026\u0026 mkdir -p /nubis/bin /nubis/work"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "set -o pipefail     \u0026\u0026 curl -L -o terraform_${TerraformVersion}_linux_amd64.zip https://releases.hashicorp.com/terraform/${TerraformVersion}/terraform_${TerraformVersion}_linux_amd64.zip     \u0026\u0026 unzip terraform_${TerraformVersion}_linux_amd64.zip -d /nubis/bin     \u0026\u0026 rm terraform_${TerraformVersion}_linux_amd64.zip     \u0026\u0026 curl -L https://github.com/Versent/unicreds/releases/download/${UnicredsVersion}/unicreds_${UnicredsVersion}_linux_amd64.tar.gz     | tar -C /nubis/bin -xzf -     \u0026\u0026 curl -LO https://github.com/kubernetes/kops/releases/download/${KopsVersion}/kops-linux-amd64     \u0026\u0026 mv kops-linux-amd64 /usr/local/bin/kops     \u0026\u0026 chmod +x /usr/local/bin/kops     \u0026\u0026 curl -LO https://github.com/kvz/json2hcl/releases/download/v${Json2HclVersion}/json2hcl_v${Json2HclVersion}_linux_amd64     \u0026\u0026 mv json2hcl_v${Json2HclVersion}_linux_amd64 /usr/local/bin/json2hcl     \u0026\u0026 chmod +x /usr/local/bin/json2hcl     \u0026\u0026 curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KubeCtlVersion}/bin/linux/amd64/kubectl     \u0026\u0026 mv kubectl /usr/local/bin/kubectl     \u0026\u0026 chmod +x /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nubis-deploy",
            "/nubis/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "account-deploy",
            "/nubis/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/nubis/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/nubis/bin/nubis-deploy"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}