{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc",
      "SourceCode": "FROM frolvlad/alpine-glibc",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc"
      },
      "Commands": [
        {
          "Maintainer": "Omar Laurino \u003colaurino@cfa.harvard.edu\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            },
            {
              "Key": "MINICONDA",
              "Value": "Miniconda3-latest-Linux-x86_64.sh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-deps --update-cache wget     \u0026\u0026 wget -q --no-check-certificate https://repo.continuum.io/miniconda/$MINICONDA \t\u0026\u0026 apk del build-deps \t\u0026\u0026 apk add --no-cache --update-cache bash     \u0026\u0026 /bin/bash $MINICONDA -b -p /opt/conda     \u0026\u0026 rm -rf /root/.continuum /opt/conda/pkgs/*     \u0026\u0026 rm $MINICONDA"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y -c sherpa   notebook=4.2.3 matplotlib astropy=1.3 scipy sherpa=4.9.1 nomkl \u0026\u0026   conda remove -y --force qt pyqt qtconsole \u0026\u0026   conda clean -tipsy \u0026\u0026   rm -rf /opt/conda/pkgs/* \u0026\u0026   pip install saba corner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/conda/envs"
          ]
        },
        {
          "Env": [
            {
              "Key": "SHERPARC",
              "Value": "/data/sherparc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ipython notebook --no-browser --port 8888 --ip=*"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}