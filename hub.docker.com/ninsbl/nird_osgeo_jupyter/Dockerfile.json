{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "quay.io/uninett/jupyter-spark:20190814-a51cd1c",
      "SourceCode": "FROM quay.io/uninett/jupyter-spark:20190814-a51cd1c",
      "Platform": "",
      "From": {
        "Image": "quay.io/uninett/jupyter-spark:20190814-a51cd1c"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "authors",
              "Value": "\"Stefan Blumentrath\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"stefan.blumentrath@nina.no\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "GRASS_VERSION",
          "Name": "arg",
          "Value": "7.9"
        },
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": "3"
        },
        {
          "Key": "PROJ_VERSION",
          "Name": "arg",
          "Value": "5.2.0"
        },
        {
          "Key": "PROJ_DATUMGRID_VERSION",
          "Name": "arg",
          "Value": "1.8"
        },
        {
          "Env": [
            {
              "Key": "MYCFLAGS",
              "Value": "\"-O2 -std=gnu99 -m64\""
            },
            {
              "Key": "MYLDFLAGS",
              "Value": "\"-s -Wl,--no-undefined -lblas\""
            },
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"/usr/local/lib\""
            },
            {
              "Key": "LDFLAGS",
              "Value": "\"$MYLDFLAGS\""
            },
            {
              "Key": "CFLAGS",
              "Value": "\"$MYCFLAGS\""
            },
            {
              "Key": "CXXFLAGS",
              "Value": "\"$MYCXXFLAGS\""
            },
            {
              "Key": "NUMTHREADS",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "echo \"resolvconf resolvconf/linkify-resolvconf boolean false\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install software-properties-common apt-utils python3-pip -y \u0026\u0026     add-apt-repository ppa:ubuntugis/ubuntugis-unstable -y \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install \"requests\u003e=2.20\"     urllib3     igraph     numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --no-install-recommends --no-install-suggests -y     attr     bc     bison     build-essential     bzip2     curl     cython     flex     g++     gcc     gdal-bin     geany     gettext     git     gnutls-bin     ipython3     libapt-pkg-perl     libboost-system-dev     libboost-thread-dev     libboost-filesystem-dev     libboost-program-options-dev     libboost-iostreams-dev     libbz2-dev     libcairo2     libcairo2-dev     libcitygml-bin     libcitygml-dev     libcurl4-gnutls-dev     libdap-dev     libfftw3-bin     libfftw3-dev     libfreetype6-dev     libgdal-dev     libgdal-grass     libgeos-dev     libgnutls28-dev     libglu1-mesa-dev     libgsl0-dev     libjpeg-dev     liblas-c-dev     liblas-dev     liblapack-dev     libnetcdf-dev     libncurses5-dev     libopenjp2-7     libopenjp2-7-dev     libpdal-dev pdal     libpdal-plugin-python     libpng-dev     libpnglite-dev     libpq-dev     libpython3-all-dev     libproj-dev     libqgis-dev     libreadline-dev     libsqlite3-dev     libspatialite-dev     libspatialindex-dev     libtiff-dev     libxmu-dev     libzstd-dev     libgeotiff-dev     libzstd-dev     make     mc     moreutils     ncurses-bin     netcdf-bin     p7zip-full     pycodestyle     pyflakes     pylint     python-autopep8     python3.6-dev     python3-dateutil     python3-dev     python3-extras     python3-fiona     python3-gdal     python3-geopandas     python3-httplib2     python3-jinja2     python3-libxml2     python3-mysqldb     python3-owslib     python3-pep8     python3-pillow     python3-pil     python3-matplotlib     python3-netcdf4     python3-osmapi     python3-overpass     python3-overpy     python3-pandas     python3-pydap     python3-rasterio     python3-rpy2     python3-scipy     python3-shapely     python3-sklearn     python3-simplejson     python3-sip     python3-six     python3-sqlalchemy     python3-tk     python3-unittest2     python3-xlsxwriter     python3-xlrd     postgresql     proj-bin     proj-data     sqlite3     subversion     unixodbc-dev     unzip     vim     virtualenv     wget     xterm     python3-setuptools cython3     zlib1g-dev qgis saga libsaga-dev python-saga rasterio libsfcgal-dev spatialite-gui     shapelib libshp-dev gmt fiona octave-mapping     otb-bin libotb-dev otb-qgis libotb-apps libgdal-dev gdal-bin     qgis python3-qgis qgis-plugin-grass \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo LANG=\"en_US.UTF-8\" \u003e /etc/default/locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install git+https://github.com/scitools/cartopy.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install     folium     pysal     scikit-learn     scikit-image     pymodis     pystan     pymc3     threddsclient     pandas     plotly     plotly-charts     plotly-geo     gbif      pygbif     mock     \"xdg\u003c=1.0.7\"     \"requests\u003e=2.20\"     idna     certifi     chardet     \"PyYAML\u003e=5.1\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install git+https://github.com/ninsbl/grass-session.git@grass_versions     git+https://github.com/sentinelsat/sentinelsat.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install https://github.com/nansencenter/py-thesaurus-interface/archive/master.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install nansat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install     coverage     django     django-forms-bootstrap     django-leaflet     thredds_crawler \u0026\u0026  echo \"alias ll='ls -lh'\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src"
        },
        {
          "CmdLine": [
            "git clone https://github.com/nansencenter/django-geo-spaas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src/django-geo-spaas"
        },
        {
          "CmdLine": [
            "/usr/bin/python3 setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src"
        },
        {
          "CmdLine": [
            "git clone https://github.com/OSGeo/grass.git grass_build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src/grass_build"
        },
        {
          "Env": [
            {
              "Key": "MYCFLAGS",
              "Value": "\"-O2 -std=gnu99 -m64\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYLDFLAGS",
              "Value": "\"-s -Wl,--no-undefined\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"/usr/local/lib\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDFLAGS",
              "Value": "\"$MYLDFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CFLAGS",
              "Value": "\"$MYCFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXXFLAGS",
              "Value": "\"$MYCXXFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRASS_PYTHON",
              "Value": "/usr/bin/python3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NUMTHREADS",
              "Value": "4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "make distclean || echo \"nothing to clean\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/src/grass_build/configure     --enable-largefile     --with-ffmpeg --with-ffmpeg-includes=\"/usr/include/ffmpeg /usr/include/ffmpeg/libav* /usr/include/ffmpeg/libpostproc /usr/include/ffmpeg/libswscale\"     --with-cxx     --with-blas     --with-lapack     --with-proj --with-proj-share=/usr/share/proj     --with-gdal=/usr/bin/gdal-config     --with-geos     --with-sqlite     --with-bzlib     --with-liblas     --with-zstd     --with-cairo --with-cairo-ldflags=-lfontconfig     --with-fftw     --with-liblas     --with-pdal     --with-netcdf     --with-postgres --with-postgres-includes=\"/usr/include/postgresql\"     --with-freetype --with-freetype-includes=/usr/include/freetype2     --with-openmp     --with-opengl     --without-nls     --without-mysql     --with-odbc     --with-readline     --with-wxwidgets=/usr/bin/wx-config     \u0026\u0026 make -j $NUMTHREADS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s `find /usr/local/bin -name \"grass*\"` /usr/local/bin/grass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src"
        },
        {
          "CmdLine": [
            "git clone https://github.com/OSGeo/grass-addons.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src/grass-addons/grass7/"
        },
        {
          "CmdLine": [
            "find -name '*.py' | xargs sed -i 's,#!/usr/bin/env python,#!/usr/bin/env python3,'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make MODULE_TOPDIR=/usr/local/grass79/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/notebook"
        },
        {
          "Env": [
            {
              "Key": "INTEL",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYCFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYLDFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYCXXFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXXFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /opt/src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade jupyter_client==5.3.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R notebook:notebook /home/notebook \u0026\u0026 chmod -R g+w /home/notebook"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "notebook"
        }
      ]
    }
  ]
}