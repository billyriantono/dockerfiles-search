MetaArgs: null
Stages:
- BaseName: quay.io/uninett/desktop-vnc:20190921-c096454
  Commands:
  - Labels:
    - Key: authors
      Value: '"Stefan Blumentrath"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"stefan.blumentrath@nina.no"'
    Name: label
  - Key: GRASS_VERSION
    Name: arg
    Value: "7.9"
  - Key: PYTHON_VERSION
    Name: arg
    Value: "3"
  - Key: PROJ_VERSION
    Name: arg
    Value: 5.2.0
  - Key: PROJ_DATUMGRID_VERSION
    Name: arg
    Value: "1.8"
  - Name: user
    User: root
  - Env:
    - Key: MYCFLAGS
      Value: '"-O2 -std=gnu99 -m64"'
    - Key: MYLDFLAGS
      Value: '"-s -Wl,--no-undefined -lblas"'
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/local/lib"'
    - Key: LDFLAGS
      Value: '"$MYLDFLAGS"'
    - Key: CFLAGS
      Value: '"$MYCFLAGS"'
    - Key: CXXFLAGS
      Value: '"$MYCXXFLAGS"'
    - Key: NUMTHREADS
      Value: "2"
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - echo "resolvconf resolvconf/linkify-resolvconf boolean false" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install software-properties-common
      apt-utils python3-pip -y &&     add-apt-repository ppa:ubuntugis/ubuntugis-unstable
      -y &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install requests     urllib3     igraph
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install --no-install-recommends --no-install-suggests
      -y     attr     bc     bison     build-essential     bzip2     curl     cython     cython3     default-jdk     flex     g++     gcc     gdal-bin     geany     gettext     git     gnutls-bin     ipython3     libapt-pkg-perl     libboost-system-dev     libboost-thread-dev     libboost-filesystem-dev     libboost-program-options-dev     libboost-iostreams-dev     libbz2-dev     libcairo2     libcairo2-dev     libcitygml-bin     libcitygml-dev     libcurl4-gnutls-dev     libdap-dev     libfftw3-bin     libfftw3-dev     libfreetype6-dev     libgdal-dev     libgeos-dev     libgnutls28-dev     libglu1-mesa-dev     libgsl0-dev     libjpeg-dev     liblas-c-dev     liblas-dev     liblapack-dev     libnetcdf-dev     libncurses5-dev     libopenjp2-7     libopenjp2-7-dev     libpdal-dev
      pdal     libpdal-plugin-python     libpng-dev     libpnglite-dev     libpq-dev     libpython3-all-dev     libproj-dev     libqgis-dev     libreadline-dev     libspatialindex-dev     libspatialite-dev     libsqlite3-dev     libtiff-dev     libxmu-dev     libzstd-dev     libgeotiff-dev     libzstd-dev     make     maven     mc     moreutils     ncurses-bin     netcdf-bin     p7zip-full     python3-dateutil     python3-dev     python3-extras     python3-fiona     python3-gdal     python3-geopandas     python3-httplib2     python3-jinja2     python3-libxml2     python3-mysqldb     python3-otb     python3-owslib     python3-pep8     python3-pillow     python3-pil     python3-matplotlib     python3-netcdf4     python3-numpy     python3-osmapi     python3-overpass     python3-overpy     python3-pandas     python3-pydap     python3-rasterio     python3-scipy     python3-setuptools     python3-shapely     python3-sklearn     python3-simplejson     python3-sip     python3-six     python3-sqlalchemy     python3-tk     python3-unittest2     python3-wxgtk4.0     python3-wxgtk-webview4.0     python3-wxgtk-media4.0     python3-gst-1.0     freeglut3-dev     libglib2.0-dev     libgstreamer-gl1.0-0     python3-xlsxwriter     python3-xlrd     postgresql     proj-bin     proj-data     sqlite3     subversion     unixodbc-dev     unzip     vim     virtualenv     wget     xterm     zlib1g-dev
      qgis saga libsaga-dev python-saga rasterio libsfcgal-dev spatialite-gui     shapelib
      libshp-dev gmt fiona octave-mapping     otb-bin libotb-dev otb-qgis libotb-apps
      libgdal-dev gdal-bin     qgis python3-qgis qgis-plugin-grass &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo LANG="en_US.UTF-8" > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install     cartopy     folium     pysal     scikit-learn     scikit-image     pymodis     pystan     pymc3     threddsclient     pandas     gbif      pygbif     mock     "xdg<=1.0.7"     requests     richdem     idna     certifi     chardet     urllib3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install git+https://github.com/ninsbl/grass-session.git@grass_versions     git+https://github.com/sentinelsat/sentinelsat.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/src
  - CmdLine:
    - git clone https://github.com/OSGeo/grass.git grass_build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/src/grass_build
  - Env:
    - Key: MYCFLAGS
      Value: '"-O2 -std=gnu99 -m64"'
    Name: env
  - Env:
    - Key: MYLDFLAGS
      Value: '"-s -Wl,--no-undefined"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/local/lib"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"$MYLDFLAGS"'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"$MYCFLAGS"'
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '"$MYCXXFLAGS"'
    Name: env
  - Env:
    - Key: GRASS_PYTHON
      Value: /usr/bin/python3
    Name: env
  - Env:
    - Key: NUMTHREADS
      Value: "4"
    Name: env
  - CmdLine:
    - make distclean || echo "nothing to clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/src/grass_build/configure     --enable-largefile     --with-ffmpeg --with-ffmpeg-includes="/usr/include/ffmpeg
      /usr/include/ffmpeg/libav* /usr/include/ffmpeg/libpostproc /usr/include/ffmpeg/libswscale"     --with-cxx     --with-blas     --with-lapack     --with-proj
      --with-proj-share=/usr/share/proj     --with-gdal=/usr/bin/gdal-config     --with-geos     --with-sqlite     --with-bzlib     --with-liblas     --with-zstd     --with-cairo
      --with-cairo-ldflags=-lfontconfig     --with-fftw     --with-liblas     --with-pdal     --with-netcdf     --with-postgres
      --with-postgres-includes="/usr/include/postgresql"     --with-freetype --with-freetype-includes=/usr/include/freetype2     --with-openmp     --with-opengl     --without-nls     --without-mysql     --with-odbc     --with-readline     --with-wxwidgets=/usr/bin/wx-config     &&
      make -j $NUMTHREADS
    Name: run
    PrependShell: true
  - CmdLine:
    - make install && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s `find /usr/local/bin -name "grass*"` /usr/local/bin/grass
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/src
  - CmdLine:
    - git clone https://github.com/OSGeo/grass-addons.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/src/grass-addons/grass7/
  - CmdLine:
    - find -name '*.py' | xargs sed -i 's,#!/usr/bin/env python,#!/usr/bin/env python3,'
    Name: run
    PrependShell: true
  - CmdLine:
    - make MODULE_TOPDIR=/usr/local/grass79/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/src
  - Env:
    - Key: INTEL
      Value: '""'
    Name: env
  - Env:
    - Key: MYCFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: MYLDFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: MYCXXFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '""'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '""'
    Name: env
  - CmdLine:
    - wget http://step.esa.int/downloads/7.0/installers/esa-snap_all_unix_7_0.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x esa-snap_all_unix_7_0.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./esa-snap_all_unix_7_0.sh -q
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/snap/bin/gpt /usr/bin/gpt
    Name: run
    PrependShell: true
  - CmdLine:
    - export JDK_HOME="/usr/lib/jvm/default-java"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: '"/usr/lib/jvm/default-java"'
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - rm -rf /opt/src/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean -y
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  From:
    Image: quay.io/uninett/desktop-vnc:20190921-c096454
  Name: ""
  Platform: ""
  SourceCode: FROM quay.io/uninett/desktop-vnc:20190921-c096454
