{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM debian:buster-slim as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         curl         gcc         gpg         make         patch         libpcre2-dev         perl         wget         zlib1g-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OPENSSL_FIPS_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "wget https://www.openssl.org/source/openssl-fips-${OPENSSL_FIPS_VERSION}.tar.gz     \u0026\u0026 tar oxvfm openssl-fips-${OPENSSL_FIPS_VERSION}.tar.gz     \u0026\u0026 cd openssl-fips-${OPENSSL_FIPS_VERSION}     \u0026\u0026 ./config     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf openssl-fips-${OPENSSL_FIPS_VERSION}*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OPENSSL_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz     \u0026\u0026 tar oxvfm openssl-${OPENSSL_VERSION}.tar.gz     \u0026\u0026 cd openssl-${OPENSSL_VERSION}     \u0026\u0026 ./config fips shared --openssldir=/usr/local/ssl --with-fipsdir=/usr/local/ssl/fips-2.0 --with-fipslibdir=/usr/local/ssl/fips-2.0/lib/     \u0026\u0026 make depend     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf openssl-${OPENSSL_VERSION}*     \u0026\u0026 rm -rf /usr/local/ssl/man"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /usr/local/ssl"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/ssl",
            "/usr/local/ssl"
          ]
        }
      ]
    }
  ]
}