{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins:2.32.3",
      "SourceCode": "FROM jenkins:2.32.3",
      "Platform": "",
      "From": {
        "Image": "jenkins:2.32.3"
      },
      "Commands": [
        {
          "Maintainer": "Harry Wang \"harry_w@foxmail.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2017-03-24"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026      apt-get install -y      apt-transport-https      ca-certificates      curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -  \u0026\u0026 \tapt-key fingerprint 0EBFCD88"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb [arch=amd64] https://download.docker.com/linux/debian jessie stable\" \u003e\u003e/etc/apt/sources.list \u0026\u0026 \tapt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends         libc6         libcurl3         libgcc1         libgssapi-krb5-2         libicu52         liblttng-ust0         libssl1.0.0         libstdc++6         libunwind8         libuuid1         zlib1g     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_VERSION",
              "Value": "1.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_DOWNLOAD_URL",
              "Value": "https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-dev-debian-x64.$DOTNET_SDK_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz     \u0026\u0026 mkdir -p /usr/share/dotnet     \u0026\u0026 tar -zxf dotnet.tar.gz -C /usr/share/dotnet     \u0026\u0026 rm dotnet.tar.gz     \u0026\u0026 ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir warmup     \u0026\u0026 cd warmup     \u0026\u0026 dotnet new     \u0026\u0026 cd ..     \u0026\u0026 rm -rf warmup     \u0026\u0026 rm -rf /tmp/NuGetScratch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_MIRROR_URL",
              "Value": "http://hub-mirror.c.163.com"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"#! /bin/bash\" \u003e\u003e /usr/local/bin/h-jenkins.sh \u0026\u0026 \techo \"mkdir -p /etc/docker\" \u003e\u003e /usr/local/bin/h-jenkins.sh \u0026\u0026 \techo \"echo \\\"{\\\" \u003e\u003e /etc/docker/daemon.json\" \u003e\u003e /usr/local/bin/h-jenkins.sh \u0026\u0026 \techo \"echo \\\"\\\\\\\"registry-mirrors\\\\\\\": [\\\\\\\"\\$DOCKER_MIRROR_URL\\\\\\\"]\\\" \u003e\u003e /etc/docker/daemon.json\" \u003e\u003e /usr/local/bin/h-jenkins.sh \u0026\u0026 \techo \"echo \\\"}\\\" \u003e\u003e /etc/docker/daemon.json\" \u003e\u003e /usr/local/bin/h-jenkins.sh \u0026\u0026 \techo \"cat /etc/docker/daemon.json\" \u003e\u003e /usr/local/bin/h-jenkins.sh \u0026\u0026 \techo \"service docker start\" \u003e\u003e /usr/local/bin/h-jenkins.sh  \u0026\u0026 \techo \"/usr/local/bin/jenkins.sh\" \u003e\u003e /usr/local/bin/h-jenkins.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/usr/local/bin/h-jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}