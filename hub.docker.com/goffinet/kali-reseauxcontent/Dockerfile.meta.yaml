MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - CmdLine:
    - mkdir -p /conf/provider  && mkdir -p /data  && mkdir -p /localhost  && mkdir
      -p /var/lib/cache/terraform
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - packages.txt
    - /etc/apk/packages.txt
  - CmdLine:
    - echo "@testing https://alpine.global.ssl.fastly.net/alpine/edge/testing" >>
      /etc/apk/repositories  && apk add --update --no-cache $(grep -v '^#' /etc/apk/packages.txt)
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: '"0.12.18"'
    Name: env
  - Env:
    - Key: KUBERNETES_VERSION
      Value: '"1.15.7"'
    Name: env
  - Env:
    - Key: KUBECTL_VERSION
      Value: '"1.15.7"'
    Name: env
  - Env:
    - Key: KOPS_VERSION
      Value: '"1.15.0"'
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: '"3.0.2"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - /tmp/terraform.zip
  - CmdLine:
    - unzip /tmp/terraform.zip -d /usr/local/bin  && chmod +x /usr/local/bin/terraform
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/cloudposse/tfenv/releases/download/0.4.0/tfenv_linux_amd64
    - /usr/local/bin/tfenv
  - CmdLine:
    - chmod +x /usr/local/bin/tfenv
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
    - /usr/local/bin/kubectl
  - CmdLine:
    - chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/kubernetes/kops/releases/download/${KOPS_VERSION}/kops-linux-amd64
    - /usr/local/bin/kops
  - CmdLine:
    - chmod +x /usr/local/bin/kops
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz
    - /tmp/helm.tar.gz
  - CmdLine:
    - cd /tmp && tar -zxvf /tmp/helm.tar.gz  && mv /tmp/linux-amd64/helm /usr/local/bin/helm  &&
      chmod +x /usr/local/bin/helm
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli --upgrade --user --no-cache --no-warn-script-location  &&
      mv ~/.local/bin/aws /usr/local/bin/aws
    Name: run
    PrependShell: true
  - Env:
    - Key: TF_INPUT
      Value: "0"
    Name: env
  - Env:
    - Key: TF_IN_AUTOMATION
      Value: "1"
    Name: env
  - Env:
    - Key: TF_PLUGIN_CACHE_DIR
      Value: /var/lib/cache/terraform
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - env.sh
    - /conf/env.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /conf/docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - local-start.sh
    - /conf/local-start.sh
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /conf
  - CmdLine:
    - rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - /conf/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
