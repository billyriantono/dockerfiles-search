{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins",
      "SourceCode": "FROM jenkins/jenkins",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"martin@ventx.de,hajo@ventx.de\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "KUBE_LATEST_VERSION",
              "Value": "v1.16.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBE_RUNNING_VERSION",
              "Value": "v1.13.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.13.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWSCLI",
              "Value": "1.16.261"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq -y update \u0026\u0026 apt-get -qq -y install     apt-transport-https     bash     ca-certificates     curl     gettext     gnupg2     jq     python-pip     software-properties-common     xmlstarlet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown 1000 ~/   \u0026\u0026 wget -q https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.7.0/allure-2.7.0.tgz   \u0026\u0026 tar -xzvf allure-2.7.0.tgz   \u0026\u0026 mv allure-2.7.0 /opt/   \u0026\u0026 wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_RUNNING_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl   \u0026\u0026 chmod +x /usr/local/bin/kubectl   \u0026\u0026 wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl_latest   \u0026\u0026 chmod +x /usr/local/bin/kubectl_latest   \u0026\u0026 wget -q http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm \u003e /usr/local/bin/helm   \u0026\u0026 chmod +x /usr/local/bin/helm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add - \u0026\u0026    add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")    $(lsb_release -cs)    stable\" \u0026\u0026    apt-get -qq update \u0026\u0026 apt-get -qq -y install docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install requests awscli==${AWSCLI}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 2.0 \u003e /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}