{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ventx/alpine:3.6",
      "SourceCode": "FROM ventx/alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "ventx/alpine:3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"martin@ventx.de, hajo@ventx.de\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "KUBE_LATEST_VERSION",
              "Value": "v1.16.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBE_RUNNING_VERSION",
              "Value": "v1.11.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.13.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_DIFF_VERSION",
              "Value": "\"v2.11.0%2B5\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWSCLI",
              "Value": "1.16.277"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOPS_VERSION",
              "Value": "3.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_HOME",
              "Value": "/usr/local/helm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update --no-cache add   bash   curl   g++   gcc   gettext   git   gnupg   libxml2-dev   libxml2-utils   libxslt-dev   make   openjdk8-jre   openssh-client   postgresql-client   python   python-dev   python3   python3-dev   py-libxml2   py-libxslt   py-pip   vim   xmlstarlet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_RUNNING_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl   \u0026\u0026 chmod +x /usr/local/bin/kubectl   \u0026\u0026 wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl_latest   \u0026\u0026 chmod +x /usr/local/bin/kubectl_latest   \u0026\u0026 wget -q http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm \u003e /usr/local/bin/helm   \u0026\u0026 chmod +x /usr/local/bin/helm   \u0026\u0026 curl -L -o /usr/local/bin/sops https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux   \u0026\u0026 chmod +x /usr/local/bin/sops \u0026\u0026   rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip   \u0026\u0026 pip install lxml selenium html requests allure-pytest pytest-allure-adaptor   \u0026\u0026 pip install awscli==${AWSCLI}   \u0026\u0026 pip3 install imbox six requests allure-pytest lxml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.7.0/allure-2.7.0.tgz",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "tar -xvzf /opt/allure-2.7.0.tgz --directory /opt/     \u0026\u0026 rm /opt/allure-2.7.0.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm init --client-only"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/helm/plugins   \u0026\u0026 wget -c https://github.com/databus23/helm-diff/releases/download/${HELM_DIFF_VERSION}/helm-diff-linux.tgz -O - | tar -C /usr/local/helm/plugins -xzv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm plugin install https://github.com/futuresimple/helm-secrets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm version --client   \u0026\u0026 helm plugin list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/opt/allure-2.7.0/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/work"
        }
      ]
    }
  ]
}