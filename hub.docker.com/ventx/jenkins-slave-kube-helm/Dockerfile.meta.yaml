MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-alpine
  Commands:
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "10000"
  - Key: gid
    Name: arg
    Value: "10000"
  - Env:
    - Key: HOME
      Value: /home/${user}
    Name: env
  - CmdLine:
    - addgroup -g ${gid} ${group}
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -h $HOME -u ${uid} -G ${group} -D ${user}
    Name: run
    PrependShell: true
  - Labels:
    - Key: Description
      Value: '"This is a base image, which provides the Jenkins agent executable (slave.jar)"'
    - Key: Vendor
      Value: '"Jenkins project"'
    - Key: Version
      Value: '"3.23"'
    Name: label
  - Key: VERSION
    Name: arg
    Value: "3.23"
  - Key: AGENT_WORKDIR
    Name: arg
    Value: /home/${user}/agent
  - Env:
    - Key: KUBE_LATEST_VERSION
      Value: v1.15.1
    Name: env
  - Env:
    - Key: KUBE_RUNNING_VERSION
      Value: 1.13.4
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: v2.13.1
    Name: env
  - Env:
    - Key: AWSCLI
      Value: 1.16.236
    Name: env
  - CmdLine:
    - apk add --update --no-cache coreutils python3-dev postgresql-client vim python-dev
      xmlstarlet python3 gcc g++ make libxml2-dev py-libxml2 py-libxslt libxml2-utils
      libxml2-dev libxslt-dev curl bash openssh-client openssl procps ca-certificates
      git python py-pip gettext   && curl --create-dirs -sSLo /usr/share/jenkins/slave.jar
      https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/slave.jar   &&
      wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -O /usr/local/bin/kubectl   && chmod +x /usr/local/bin/kubectl   && wget -q
      http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm   && chmod +x /usr/local/bin/helm
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip   && pip install lxml selenium html requests allure-pytest
      pytest-allure-adaptor   && pip install awscli==${AWSCLI}   && pip3 install selenium
      imbox six requests allure-pytest lxml pillow==2.9.0 pdf2image
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.7.0/allure-2.7.0.tgz
    - /opt/
  - CmdLine:
    - tar -xvzf /opt/allure-2.7.0.tgz --directory /opt/     && rm /opt/allure-2.7.0.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/allure-2.7.0/bin:${PATH}"'
    Name: env
  - Env:
    - Key: AGENT_WORKDIR
      Value: ${AGENT_WORKDIR}
    Name: env
  - CmdLine:
    - mkdir /home/${user}/.jenkins && mkdir -p ${AGENT_WORKDIR}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/${user}/.jenkins
  - Name: volume
    Volumes:
    - ${AGENT_WORKDIR}
  - Name: workdir
    Path: /home/${user}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave
    - /usr/local/bin/jenkins-slave
  - CmdLine:
    - jenkins-slave
    Name: entrypoint
    PrependShell: false
  From:
    Image: openjdk:8-jdk-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine
