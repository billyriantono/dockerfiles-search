MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:bionic
  Commands:
  - Env:
    - Key: DXC_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: DXC_REPO
      Value: https://github.com/Microsoft/DirectXShaderCompiler.git
    Name: env
  - Env:
    - Key: DXC_COMMIT
      Value: cd237f5c3f7e8390fafff122333423afe55bc6c7
    Name: env
  - Env:
    - Key: SHADERC_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: SHADERC_REPO
      Value: https://github.com/google/shaderc.git
    Name: env
  - Env:
    - Key: SHADERC_COMMIT
      Value: b9e151baf0cff85bb1941c5568c22026339f7720
    Name: env
  - Env:
    - Key: GOOGLE_TEST_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: GOOGLE_TEST_REPO
      Value: https://github.com/google/googletest.git
    Name: env
  - Env:
    - Key: GOOGLE_TEST_COMMIT
      Value: 3880b13e4c0b04ca88f69b9c93da6058bd836c34
    Name: env
  - Env:
    - Key: GLSLANG_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: GLSLANG_REPO
      Value: https://github.com/google/glslang.git
    Name: env
  - Env:
    - Key: GLSLANG_COMMIT
      Value: 6eab476e5adcad71cf8b46a875eedd164f201c5d
    Name: env
  - Env:
    - Key: SPV_TOOLS_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: SPV_TOOLS_REPO
      Value: https://github.com/KhronosGroup/SPIRV-Tools.git
    Name: env
  - Env:
    - Key: SPV_TOOLS_COMMIT
      Value: a87d3ce48e88a653e855c3245a6b68deeae58efc
    Name: env
  - Env:
    - Key: SPV_HEADERS_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: SPV_HEADERS_REPO
      Value: https://github.com/KhronosGroup/SPIRV-Headers.git
    Name: env
  - Env:
    - Key: SPV_HEADERS_COMMIT
      Value: 46a3ae6dffc6f217a52e25556dba3d76f5634d61
    Name: env
  - Env:
    - Key: RE2_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: RE2_REPO
      Value: https://github.com/google/re2.git
    Name: env
  - Env:
    - Key: RE2_COMMIT
      Value: 2cf86e5ab6dcfe045a1f510c2b9a8b012a4158cd
    Name: env
  - Env:
    - Key: EFFCEE_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: EFFCEE_REPO
      Value: https://github.com/google/effcee.git
    Name: env
  - Env:
    - Key: EFFCEE_COMMIT
      Value: 8f0a61dc95e0df18c18e0ac56d83b3fa9d2fe90b
    Name: env
  - Env:
    - Key: WINE_BRANCH
      Value: dxil
    Name: env
  - Env:
    - Key: WINE_REPO
      Value: https://github.com/gwihlidal/wine.git
    Name: env
  - Env:
    - Key: WINE_COMMIT
      Value: 052778ed354f39f688ecbda488a9164afd76484c
    Name: env
  - Env:
    - Key: SMOLV_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: SMOLV_REPO
      Value: https://github.com/aras-p/smol-v.git
    Name: env
  - Env:
    - Key: SMOLV_COMMIT
      Value: 9a787d1354a9e43c9ea6027cd310ce2a2fd78901
    Name: env
  - Env:
    - Key: VULKAN_SDK
      Value: 1.1.92.1
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: '"noninteractive"'
  - CmdLine:
    - "apt-get update && \tapt-get install -y \t\tsoftware-properties-common \t\tbuild-essential
      \t\tgit \t\tcmake \t\tninja-build \t\tpython \t\twget \t\tunzip \t\tflex \t\tbison
      \t\tlibpng-dev \t\tlibwayland-dev \t\tlibx11-dev \t\tlibxrandr-dev \t&& apt
      autoremove -y \t\tsoftware-properties-common \t&& apt autoclean \t&& apt clean
      \t&& apt autoremove"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone --recurse-submodules -b ${DXC_BRANCH} ${DXC_REPO} /dxc && cd /dxc
      \tgit checkout ${DXC_COMMIT} && \tgit reset --hard && \tmkdir -p /dxc/build
      && cd /dxc/build && \tcmake ../ -GNinja -DCMAKE_BUILD_TYPE=Release $(cat ../utils/cmake-predefined-config-params)
      && \tninja"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone --recurse-submodules -b ${SHADERC_BRANCH} ${SHADERC_REPO} /shaderc
      && cd /shaderc \tgit checkout ${SHADERC_COMMIT} && git reset --hard && \tmkdir
      -p /shaderc/third_party && cd /shaderc/third_party && \tgit clone --recurse-submodules
      -b ${GOOGLE_TEST_BRANCH} ${GOOGLE_TEST_REPO} googletest && \tcd googletest &&
      git checkout ${GOOGLE_TEST_COMMIT} && git reset --hard && cd .. && \tgit clone
      --recurse-submodules -b ${GLSLANG_BRANCH} ${GLSLANG_REPO} glslang && \tcd glslang
      && git checkout ${GLSLANG_COMMIT} && git reset --hard && cd .. && \tgit clone
      --recurse-submodules -b ${SPV_TOOLS_BRANCH} ${SPV_TOOLS_REPO} spirv-tools &&
      \tcd spirv-tools && git checkout ${SPV_TOOLS_COMMIT} && git reset --hard &&
      cd .. && \tgit clone --recurse-submodules -b ${SPV_HEADERS_BRANCH} ${SPV_HEADERS_REPO}
      spirv-headers && \tcd spirv-headers && git checkout ${SPV_HEADERS_COMMIT} &&
      git reset --hard && cd .. && \tgit clone --recurse-submodules -b ${RE2_BRANCH}
      ${RE2_REPO} re2 && \tcd re2 && git checkout ${RE2_COMMIT} && git reset --hard
      && cd .. && \tgit clone --recurse-submodules -b ${EFFCEE_BRANCH} ${EFFCEE_REPO}
      effcee && \tcd effcee && git checkout ${EFFCEE_COMMIT} && git reset --hard &&
      cd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /shaderc/build && cd /shaderc/build && \tcmake -GNinja     -DCMAKE_BUILD_TYPE=Release
      \    -DCMAKE_INSTALL_PREFIX=/usr/local     .. && \tninja install"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /smol-v
  - CmdLine:
    - "git clone --recurse-submodules -b ${SMOLV_BRANCH} ${SMOLV_REPO} /app/smol-v
      && cd /app/smol-v && \tgit checkout ${SMOLV_COMMIT} && git reset --hard && \tmake
      -f projects/Makefile -j 4"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /wine_src
  - CmdLine:
    - "git clone --recurse-submodules -b ${WINE_BRANCH} ${WINE_REPO} /wine_src &&
      \tgit checkout ${WINE_COMMIT} && \tgit reset --hard && \t./configure --enable-win64
      --with-png --without-freetype --without-x --prefix=/wine && \tmake -j8 && \tmake
      install"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - "wget -O vulkan.tgz https://sdk.lunarg.com/sdk/download/${VULKAN_SDK}/linux/vulkansdk-linux-x86_64-${VULKAN_SDK}.tar.gz
      && \ttar zxf vulkan.tgz && \tmv ${VULKAN_SDK} vulkan && \trm vulkan.tgz && \tcd
      /vulkan && \tchmod +x setup-env.sh && \tchmod +x build_tools.sh && \t./setup-env.sh
      && ./build_tools.sh"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - "wget -O signing.zip https://github.com/gwihlidal/dxil-signing/releases/download/0.1.2/dxil-signing-0_1_2.zip
      && \tunzip -q signing.zip; exit 0"
    Name: run
    PrependShell: true
  - CmdLine:
    - mv dxil-signing-0_1_2 signing
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /rga
  - CmdLine:
    - "wget -O rga_linux.tgz https://github.com/GPUOpen-Tools/RGA/releases/download/2.0.1/rga-linux-2.0.1.tgz
      && \ttar zxf rga_linux.tgz && \tmv rga-2.0.1.* linux && \trm rga_linux.tgz &&
      \twget -O rga_windows.zip https://github.com/GPUOpen-Tools/RGA/releases/download/2.0.1/rga-windows-x64-2.0.1.zip
      && \tunzip -q rga_windows.zip; exit 0"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mv bin windows && \trm -f /rga/rga_windows.zip && \trm -f /rga/windows/Qt*
      && \trm -f /rga/windows/RadeonGPUAnalyzerGUI.exe && \trm -fr /rga/windows/iconengines
      && \trm -fr /rga/windows/imageformats && \trm -fr /rga/windows/platforms &&
      \trm -fr /rga/linux/Qt && \trm -fr /rga/linux/Documentation && \trm -f /rga/linux/RadeonGPUAnalyzerGUI-bin
      && \trm -f /rga/linux/RadeonGPUAnalyzerGUI"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:bionic as builder
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - "apt update &&     apt install --no-install-recommends -y  \t  libpng-dev \t&&
      apt clean     && apt autoremove"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/dxc
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /dxc/build/bin/dxc
    - /app/dxc/bin/dxc
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /dxc/build/lib/libdxcompiler.so.3.7
    - /app/dxc/lib/libdxcompiler.so.3.7
  - CmdLine:
    - ln -s /dxc/lib/libdxcompiler.so.3.7 /app/dxc/lib/libdxcompiler.so
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/shaderc
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /shaderc/build/glslc/glslc
    - /app/shaderc/glslc
  - Name: workdir
    Path: /app/smol-v
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app/smol-v
    - /app/smol-v
  - Name: workdir
    Path: /app/vulkan
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /vulkan/x86_64/bin
    - /app/vulkan
  - Name: workdir
    Path: /app/wine
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /wine
    - /app/wine
  - Name: workdir
    Path: /app/signing
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /signing
    - /app/signing
  - Name: workdir
    Path: /app/rga
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /rga
    - /app/rga
  - Name: workdir
    Path: /app/fxc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fxc_bin
    - /app/fxc
  - Env:
    - Key: DXC_PATH
      Value: '"/app/dxc/bin/dxc"'
    Name: env
  - Env:
    - Key: FXC_PATH
      Value: '"/app/fxc/fxc.exe"'
    Name: env
  - Env:
    - Key: SIGN_PATH
      Value: '"/app/signing/dxil-signing.exe"'
    Name: env
  - Env:
    - Key: RGA_WIN_PATH
      Value: '"/app/rga/windows/rga.exe"'
    Name: env
  - Env:
    - Key: RGA_NIX_PATH
      Value: '"/app/rga/linux/rga"'
    Name: env
  - Env:
    - Key: GLSLC_PATH
      Value: '"/app/shaderc/glslc"'
    Name: env
  - Env:
    - Key: SMOLV_PATH
      Value: '"/app/smol-v/smolv"'
    Name: env
  - Env:
    - Key: WINE_PATH
      Value: '"/app/wine/bin/wine64"'
    Name: env
  - Env:
    - Key: VULKAN_PATH
      Value: '"/app/vulkan"'
    Name: env
  - Env:
    - Key: WINEARCH
      Value: win64
    Name: env
  - Env:
    - Key: WINEDEBUG
      Value: fixme-all
    Name: env
  - CmdLine:
    - /app/wine/bin/winecfg
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
