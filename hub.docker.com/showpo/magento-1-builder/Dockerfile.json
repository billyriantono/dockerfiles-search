{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm",
      "SourceCode": "FROM php:5.6-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Jimbo \u003cjimmy@showpo.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "TZ",
          "Name": "arg",
          "Value": "Australia/Sydney"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "${TZ}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     mysql-client     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libcurl4-nss-dev     libc-client-dev     libkrb5-dev     firebird-dev     libicu-dev     libxml2-dev     libxslt1-dev     ssmtp     libssh2-1-dev     git     python     python-pip     curl     wget     mysql-client     libyaml-dev     python-dev     gnupg     unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) mcrypt     \u0026\u0026 docker-php-ext-install -j$(nproc) curl     \u0026\u0026 docker-php-ext-install -j$(nproc) mbstring     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv     \u0026\u0026 docker-php-ext-install -j$(nproc) interbase     \u0026\u0026 docker-php-ext-install -j$(nproc) intl     \u0026\u0026 docker-php-ext-install -j$(nproc) soap     \u0026\u0026 docker-php-ext-install -j$(nproc) xmlrpc     \u0026\u0026 docker-php-ext-install -j$(nproc) xsl     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-install imap     \u0026\u0026 docker-php-ext-install mysql mysqli pdo pdo_mysql     \u0026\u0026 docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis   \u0026\u0026  echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/ext-redis.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install ssh2   \u0026\u0026 echo \"extension=ssh2.so\" \u003e /usr/local/etc/php/conf.d/ext-ssh2.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         cron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-2.5.5 \u0026\u0026     docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./xdebug.ini",
            "/usr/local/etc/php/conf.d/xdebug.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./dockerhero.fpm.conf",
            "/usr/local/etc/php-fpm.d/zzz-dockerhero.fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./dockerhero.php.ini",
            "/usr/local/etc/php/conf.d/dockerhero.php.ini"
          ]
        },
        {
          "CmdLine": [
            "curl https://files.magerun.net/n98-magerun.phar -o /n98-magerun.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /n98-magerun.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /n98-magerun.phar /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 curl -L https://phar.phpunit.de/phpunit-5.7.phar \u003e phpunit.phar \u0026\u0026     chmod +x phpunit.phar \u0026\u0026     mv /tmp/phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026   apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g jshint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y autoclean \u0026\u0026 apt-get -y autoremove \u0026\u0026 apt-get -y clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./.startup.sh",
            "/var/scripts/.startup.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /var/scripts/.startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/scripts/.startup.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}