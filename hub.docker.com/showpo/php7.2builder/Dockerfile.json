{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2",
      "SourceCode": "FROM php:7.2",
      "Platform": "",
      "From": {
        "Image": "php:7.2"
      },
      "Commands": [
        {
          "Maintainer": "James Beattie",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get -y install git unzip zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libicu-dev \u0026\u0026 docker-php-ext-install intl \u0026\u0026 docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libxml2-dev \u0026\u0026 docker-php-ext-install dom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libfreetype6-dev libgd-dev \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr \u0026\u0026 docker-php-ext-install gd exif"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mysqli pdo pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug \u0026\u0026 docker-php-ext-enable xdebug \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 echo \"xdebug.remote_connect_back=on\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 echo \"xdebug.remote_port=9001\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis-3.1.1 \u0026\u0026 rm -rf /tmp/pear \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libxslt1.1 libxslt1-dev \u0026\u0026 docker-php-ext-install xsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026 php composer-setup.php \u0026\u0026 php -r \"unlink('composer-setup.php');\" \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "COMPOSER_HOME=\"/opt/.composer\" composer global require \"phpunit/phpunit=6.1.*\" \u0026\u0026 ln -s /opt/.composer/vendor/bin/phpunit /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "COMPOSER_HOME=\"/opt/.composer\" composer global require \"byjg/migration=1.0.*\" \u0026\u0026 ln -s /opt/.composer/vendor/bin/migrate /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "COMPOSER_HOME=\"/opt/.composer\" composer global require \"byjg/php-daemonize=1.2.*\" \u0026\u0026 ln -s /opt/.composer/vendor/bin/daemonize /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "COMPOSER_HOME=\"/opt/.composer\" composer global require \"squizlabs/php_codesniffer=*\" \u0026\u0026 ln -s /opt/.composer/vendor/bin/phpcs /usr/local/bin/ \u0026\u0026 ln -s /opt/.composer/vendor/bin/phpcbf /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "COMPOSER_HOME=/opt/.composer composer global require \"phpmd/phpmd:@stable\" \u0026\u0026 ln -s /opt/.composer/vendor/bin/phpmd /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install ruby wget python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bootstrap.pypa.io/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pybitbucket"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install git+https://bitbucket.org/atlassian/snippet.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export GZIP=-9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/spark \u0026\u0026     cd /var/spark \u0026\u0026     git clone https://github.com/laravel/spark-installer.git \u0026\u0026     cd /var/spark/spark-installer \u0026\u0026     composer install -vvv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y \u0026\u0026 apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}