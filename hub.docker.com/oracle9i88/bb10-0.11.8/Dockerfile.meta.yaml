MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: bao3.cn@gmail.com
    Name: maintainer
  - CmdLine:
    - apk add --update --no-cache musl-dev iptables libev openssl gnutls-dev readline-dev
      libnl3-dev lz4-dev libseccomp-dev gnutls-utils
    Name: run
    PrependShell: true
  - Key: OC_VERSION
    Name: arg
    Value: 0.11.8
  - Env:
    - Key: PORT
      Value: "443"
    Name: env
  - Env:
    - Key: VPN_DOMAIN
      Value: example.com
    Name: env
  - Env:
    - Key: VPN_NETWORK
      Value: 10.24.0.0
    Name: env
  - Env:
    - Key: VPN_NETMASK
      Value: 255.255.255.0
    Name: env
  - Env:
    - Key: LAN_NETWORK
      Value: 192.168.0.0
    Name: env
  - Env:
    - Key: LAN_NETMASK
      Value: 255.255.0.0
    Name: env
  - Env:
    - Key: VPN_USERNAME
      Value: hyperapp
    Name: env
  - Env:
    - Key: VPN_PASSWORD
      Value: hyperapp
    Name: env
  - Env:
    - Key: OC_CERT_AND_PLAIN
      Value: "false"
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - "buildDeps=\"xz gcc autoconf make linux-headers libev-dev  \"; \tset -x \t&&
      apk add --no-cache $buildDeps \t&& mkdir /src && cd /src \t&& OC_FILE=\"ocserv-$OC_VERSION\"
      \t&& rm -fr download.html \t&& wget ftp://ftp.infradead.org/pub/ocserv/$OC_FILE.tar.xz
      \t&& tar xJf $OC_FILE.tar.xz \t&& rm -fr $OC_FILE.tar.xz \t&& cd $OC_FILE \t&&
      sed -i '/#define DEFAULT_CONFIG_ENTRIES /{s/96/200/}' src/vpn.h \t&& ./configure
      \t&& make -j\"$(nproc)\" \t&& make install \t&& mkdir -p /etc/ocserv \t&& cp
      ./doc/sample.config /etc/ocserv/ocserv.conf \t&& cd \t&& rm -fr ./$OC_FILE \t&&
      apk del --purge $buildDeps         && rm -rf /src"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& sed -i 's/\\.\\/sample\\.passwd/\\/etc\\/ocserv\\/ocpasswd/' /etc/ocserv/ocserv.conf
      \t&& sed -i 's/\\(max-same-clients = \\)2/\\110/' /etc/ocserv/ocserv.conf \t&&
      sed -i 's/\\.\\.\\/tests/\\/etc\\/ocserv/' /etc/ocserv/ocserv.conf \t&& sed
      -i 's/#\\(compression.*\\)/\\1/' /etc/ocserv/ocserv.conf \t&& sed -i '/^ipv4-network
      = /{s/192.168.1.0/192.168.99.0/}' /etc/ocserv/ocserv.conf \t&& sed -i 's/192.168.1.2/8.8.8.8/'
      /etc/ocserv/ocserv.conf \t&& sed -i 's/^route/#route/' /etc/ocserv/ocserv.conf
      \t&& sed -i 's/^no-route/#no-route/' /etc/ocserv/ocserv.conf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - new_CN_route.txt
    - /etc/ocserv/config-per-user/route.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ocserv.conf
    - /etc/ocserv
  - Name: workdir
    Path: /etc/ocserv
  - Name: volume
    Volumes:
    - /etc/ocserv/certs/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sh
    - /init.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - $PORT/tcp
    - $PORT/udp
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
