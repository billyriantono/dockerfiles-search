MetaArgs:
- DefaultValue: null
  Key: ALPINE_VERSION
  ProvidedValue: null
  Value: null
Stages:
- BaseName: alpine:${ALPINE_VERSION:-latest}
  Commands:
  - CmdLine:
    - set -x &&     apk add --no-cache --virtual .build-deps gcc build-base     linux-headers
      ca-certificates python3-dev libffi-dev libressl-dev &&     apk add --no-cache
      --virtual .required     python3 py3-pip openssh git &&     pip3 install --upgrade
      pip &&     pip3 install ansible argcomplete &&     apk del .build-deps && rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&     mkdir -p /ansible/hosts /ansible/playbooks /ansible/roles &&     printf
      "[local]\nlocalhost ansible_connection=local" > /ansible/hosts/all &&     addgroup
      -S ansible && adduser -S ansible -G ansible &&     chown -R ansible:ansible
      /ansible
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_INVENTORY
      Value: /ansible/hosts
    - Key: ANSIBLE_PLAYBOOK_DIR
      Value: /ansible/playbooks
    - Key: ANSIBLE_ROLES_PATH
      Value: /ansible/roles
    - Key: ANSIBLE_GATHERING
      Value: smart
    - Key: ANSIBLE_HOST_KEY_CHECKING
      Value: "false"
    - Key: ANSIBLE_RETRY_FILES_ENABLED
      Value: "false"
    - Key: ANSIBLE_SSH_PIPELINING
      Value: "true"
    - Key: ANSIBLE_PYTHON_INTERPRETER
      Value: /usr/bin/python3
    Name: env
  - Name: workdir
    Path: /ansible
  - Name: user
    User: ansible
  - CmdLine:
    - /usr/bin/env
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ansible-playbook
    - --version
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:${ALPINE_VERSION:-latest}
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:${ALPINE_VERSION:-latest}
