{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tleyden5iwx/forestdb",
      "SourceCode": "FROM tleyden5iwx/forestdb",
      "Platform": "",
      "From": {
        "Image": "tleyden5iwx/forestdb"
      },
      "Commands": [
        {
          "Maintainer": "Couchbase Docker Team \u003cdocker@couchbase.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/opt/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SGROOT",
              "Value": "/opt/sync_gateway"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GOPATH/bin:$GOROOT/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y update \u0026\u0026     yum install -y     bc     curl     emacs-nox     git     mercurial     wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://golang.org/dl/go1.4.2.linux-amd64.tar.gz \u0026\u0026     tar -C /usr/local -xzf go1.4.2.linux-amd64.tar.gz \u0026\u0026     rm go1.4.2.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/tools/godep \u0026\u0026     go get github.com/nsf/gocode \u0026\u0026     go get golang.org/x/tools/cmd/goimports \u0026\u0026     go get github.com/golang/lint/golint \u0026\u0026     go get github.com/rogpeppe/godef"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $GOPATH \u0026\u0026     cd /opt \u0026\u0026     git clone https://github.com/couchbase/sync_gateway.git \u0026\u0026     cd $SGROOT \u0026\u0026     git checkout 1.1.0 \u0026\u0026     git submodule update --init --recursive \u0026\u0026     ./build.sh \u0026\u0026     cp bin/sync_gateway /usr/local/bin \u0026\u0026     mkdir -p $SGROOT/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/sync_gateway"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "4984",
            "4985"
          ]
        }
      ]
    }
  ]
}