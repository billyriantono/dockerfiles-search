MetaArgs: null
Stages:
- BaseName: openjdk:8-jre-alpine
  Commands:
  - Maintainer: Haiku, Inc <haiku-inc@gmail.com>
    Name: maintainer
  - Env:
    - Key: GERRIT_HOME
      Value: /var/gerrit
    Name: env
  - Env:
    - Key: GERRIT_SITE
      Value: ${GERRIT_HOME}/review_site
    Name: env
  - Env:
    - Key: GERRIT_WAR
      Value: ${GERRIT_HOME}/gerrit.war
    Name: env
  - Env:
    - Key: GERRIT_VERSION
      Value: 2.16.2
    Name: env
  - Env:
    - Key: GERRIT_USER
      Value: gerrit2
    Name: env
  - Env:
    - Key: GERRIT_INIT_ARGS
      Value: '"--install-plugin=download-commands"'
    Name: env
  - CmdLine:
    - adduser -D -h "${GERRIT_HOME}" -g "Gerrit User" -s /sbin/nologin "${GERRIT_USER}"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apk add --update --no-cache git openssh openssl bash perl perl-cgi
      git-gitweb curl su-exec procmail python py2-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apk add --no-cache --virtual=build-dependencies gcc g++ make python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install twisted
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del --purge build-dependencies
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-init.d
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fSsL https://gerrit-releases.storage.googleapis.com/gerrit-${GERRIT_VERSION}.war
      -o $GERRIT_WAR
    Name: run
    PrependShell: true
  - Env:
    - Key: GERRITFORGE_URL
      Value: https://gerrit-ci.gerritforge.com
    Name: env
  - Env:
    - Key: GERRITFORGE_ARTIFACT_DIR
      Value: lastSuccessfulBuild/artifact/bazel-genfiles/plugins
    Name: env
  - Env:
    - Key: PLUGINS
      Value: '"delete-project events-log admin-console webhooks"'
    Name: env
  - Env:
    - Key: PLUGIN_VERSION
      Value: bazel-stable-2.16
    Name: env
  - CmdLine:
    - "for i in ${PLUGINS}; do \tcurl -fSsL ${GERRITFORGE_URL}/job/plugin-$i-${PLUGIN_VERSION}/${GERRITFORGE_ARTIFACT_DIR}/$i/$i.jar
      \t\t-o ${GERRIT_HOME}/$i.jar; \tdone;"
    Name: run
    PrependShell: true
  - Env:
    - Key: MASTER_PLUGINS
      Value: '"avatars-gravatar gitiles"'
    Name: env
  - Env:
    - Key: MASTER_PLUGIN_VERSION
      Value: bazel-master-stable-2.16
    Name: env
  - CmdLine:
    - "for i in ${MASTER_PLUGINS}; do \tcurl -fSsL ${GERRITFORGE_URL}/job/plugin-$i-${MASTER_PLUGIN_VERSION}/${GERRITFORGE_ARTIFACT_DIR}/$i/$i.jar
      \t\t-o ${GERRIT_HOME}/$i.jar; \tdone;"
    Name: run
    PrependShell: true
  - Env:
    - Key: GERRIT_OAUTH_VERSION
      Value: 2.16.1
    Name: env
  - CmdLine:
    - curl -fSsL     https://github.com/davido/gerrit-oauth-provider/releases/download/v${GERRIT_OAUTH_VERSION}/gerrit-oauth-provider.jar     -o
      ${GERRIT_HOME}/gerrit-oauth-provider.jar
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gerrit-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gerrit-start.sh
    - /
  - CmdLine:
    - chmod +x /gerrit*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - su-exec ${GERRIT_USER} mkdir -p $GERRIT_SITE
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $GERRIT_SITE
  - CmdLine:
    - /gerrit-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "29418"
    - "8080"
  - CmdLine:
    - /gerrit-start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jre-alpine
