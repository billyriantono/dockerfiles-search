{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "guillaumearnould",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Image based on Alpine with Nginx and Php7\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk upgrade -U \u0026\u0026     apk --update add php7 php7-fpm php7-json php7-curl php7-pdo php7-mbstring php7-openssl php7-zip php7-gd php7-phar php7-dom php7-pgsql php7-pdo_pgsql php7-zlib php7-ctype nginx supervisor --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ \u0026\u0026     apk --update add curl --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /etc/php7 /etc/php \u0026\u0026     ln -s /usr/bin/php7 /usr/bin/php \u0026\u0026     ln -s /usr/lib/php7 /usr/lib/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/fpm-pool.conf",
            "/etc/php7/php-fpm.d/zzz_custom.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/etc/php7/conf.d/zzz_custom.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/opcache-recommended.ini",
            "/etc/php7/conf.d/opcache-recommended.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "october_config/*.php",
            "/october_install_temp/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /october_install \u0026\u0026 cd /october_install \u0026\u0026     curl -s https://octobercms.com/api/installer | php \u0026\u0026     cp /october_install_temp/* /october_install/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/nginx/conf.d/default.conf \u0026\u0026     adduser -H -D www \u0026\u0026     chown -R www:www /var/www/html \u0026\u0026     chmod -R 777 /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del curl \u0026\u0026     rm -f /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh \u0026\u0026     ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}