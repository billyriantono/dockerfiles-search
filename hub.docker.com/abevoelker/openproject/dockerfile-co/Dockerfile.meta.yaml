MetaArgs: null
Stages:
- As: ansible-slim
  BaseName: python:3.6-alpine
  Commands:
  - Key: ANSIBLE_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: ANSIBLE_VERSION
      Value: ${ANSIBLE_VERSION}
    Name: env
  - CmdLine:
    - "echo \"http://dl-cdn.alpinelinux.org/alpine/latest-stable/community\" >> /etc/apk/repositories
      \t&& apk add --update --no-cache --virtual build-dependencies linux-headers
      build-base python3-dev libffi-dev openssl-dev py-psutil \t&& pip3 install --no-cache-dir
      --upgrade pip setuptools \t&& pip3 install --upgrade ansible==${ANSIBLE_VERSION}
      \t&& apk del build-dependencies     && rm -rf /var/cache/apk/*     && rm -r
      /root/.cache     && ansible --version"
    Name: run
    PrependShell: true
  From:
    Image: python:3.6-alpine
  Name: ansible-slim
  Platform: ""
  SourceCode: FROM python:3.6-alpine as ansible-slim
- As: ansible
  BaseName: ansible-slim
  Commands:
  - Key: MOLECULE_VERSION
    Name: arg
    Value: null
  - Key: YAMLLINT_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: MOLECULE_VERSION
      Value: ${MOLECULE_VERSION}
    - Key: YAMLLINT_VERSION
      Value: ${YAMLLINT_VERSION}
    Name: env
  - CmdLine:
    - "echo \"http://dl-cdn.alpinelinux.org/alpine/latest-stable/community\" >> /etc/apk/repositories
      \t&& apk add --update --no-cache         curl         openssl         ca-certificates
      \        bash         git         zip         docker         openssh-client
      \        sudo         shadow         sshpass \t&& apk add --no-cache --virtual
      build-dependencies linux-headers build-base python3-dev libffi-dev openssl-dev
      py-psutil \t&& pip3 install --no-cache-dir --upgrade pip setuptools \t&& pip3
      install --upgrade molecule==${MOLECULE_VERSION} yamllint==${YAMLLINT_VERSION}
      docker \t&& pip3 install ansible-lint==4.0.1 \t&& apk del build-dependencies
      \    && rm -rf /var/cache/apk/*     && rm -r /root/.cache     && molecule --version
      \    && yamllint --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'adduser -S ansible &&   echo "ansible ALL = (ALL) NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: ansible
  - Name: workdir
    Path: /home/ansible
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fry.sh
    - /fry.sh
  - CmdLine:
    - bash
    - /fry.sh
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: ansible-slim
  Name: ansible
  Platform: ""
  SourceCode: FROM ansible-slim as ansible
