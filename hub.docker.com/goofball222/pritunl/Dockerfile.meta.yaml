MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.vendor
      Value: '"The Goofball - goofball222@gmail.com"'
    - Key: org.label-schema.url
      Value: '"https://github.com/goofball222/pritunl"'
    - Key: org.label-schema.name
      Value: '"Pritunl Server"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/goofball222/pritunl.git"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.license
      Value: '"Apache-2.0"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: DEBUG
      Value: "false"
    - Key: GOPATH
      Value: '"/go"'
    - Key: GOCACHE
      Value: '"/tmp/gocache"'
    - Key: PRITUNL_OPTS
      Value: ""
    - Key: REVERSE_PROXY
      Value: "false"
    Name: env
  - Name: workdir
    Path: /opt/pritunl
  - Chown: ""
    Name: add
    SourcesAndDest:
    - root
    - /
  - CmdLine:
    - set -x     && apk add -q --no-cache --virtual .build-deps         bzr curl gcc
      git go libffi-dev linux-headers         make musl-dev openssl-dev python-dev
      py-pip     && apk add -q --no-cache         bash ca-certificates iptables ip6tables         openssl
      openvpn procps py-setuptools         py-dnspython tzdata     && pip install
      --upgrade pip     && go get github.com/pritunl/pritunl-dns     && go get github.com/pritunl/pritunl-web     &&
      cp /go/bin/* /usr/bin     && cd /tmp     && curl -sSL https://github.com/pritunl/pritunl/archive/${VERSION}.tar.gz
      -o /tmp/${VERSION}.tar.gz     && tar -zxf /tmp/${VERSION}.tar.gz     && cd /tmp/pritunl-${VERSION}     &&
      python2 setup.py build     && pip install -r requirements.txt     && mkdir -p
      /var/lib/pritunl     && python2 setup.py install     && apk del -q --purge .build-deps     &&
      rm -rf /go /root/.cache/* /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 1194/tcp
    - 1194/udp
    - 443/tcp
    - 80/tcp
    - 9700/tcp
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - pritunl
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
