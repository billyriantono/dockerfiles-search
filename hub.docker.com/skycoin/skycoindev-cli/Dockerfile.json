{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.11-stretch",
      "SourceCode": "FROM golang:1.11-stretch",
      "Platform": "",
      "From": {
        "Image": "golang:1.11-stretch"
      },
      "Commands": [
        {
          "Key": "BDATE",
          "Name": "arg",
          "Value": "\"test_build\""
        },
        {
          "Key": "SCOMMIT",
          "Name": "arg",
          "Value": "\"develop\""
        },
        {
          "Labels": [
            {
              "Key": "\"org.label-schema.name\"",
              "Value": "\"skycoindev-cli\""
            },
            {
              "Key": "\"org.label-schema.description\"",
              "Value": "\"Docker image with go, node and command line tools for Skycoin developers\""
            },
            {
              "Key": "\"org.label-schema.vendor\"",
              "Value": "\"Skycoin project\""
            },
            {
              "Key": "\"org.label-schema.url\"",
              "Value": "\"skycoin.net\""
            },
            {
              "Key": "\"org.label-schema.schema-version\"",
              "Value": "\"1.0\""
            },
            {
              "Key": "\"org.label-schema.build-date\"",
              "Value": "$BDATE"
            },
            {
              "Key": "\"org.label-schema.vcs-url\"",
              "Value": "\"https://github.com/skycoin/skycoin.git\""
            },
            {
              "Key": "\"org.label-schema.vcs-ref\"",
              "Value": "$SCOMMIT"
            },
            {
              "Key": "\"org.label-schema.usage\"",
              "Value": "\"https://github.com/skycoin/skycoin/blob/\"$SCOMMIT\"/docker/images/dev-cli/README.md\""
            },
            {
              "Key": "\"org.label-schema.version\"",
              "Value": "\"1.0.0-rc.1\""
            },
            {
              "Key": "\"org.label-schema.docker.cmd\"",
              "Value": "\"mkdir src; docker run --rm -v src:/go/src skycoin/skycoindev-cli ; go get github.com/skycoin/skycoin ; sudo chown -R `whoami` src\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -ex;   apt-get update;   apt-get install -y --no-install-recommends     autoconf     automake     bzip2     dpkg-dev     file     g++     gcc     imagemagick     libbz2-dev     libc6-dev     libcurl4-openssl-dev     libdb-dev     libevent-dev     libffi-dev     libgdbm-dev     libgeoip-dev     libglib2.0-dev     libjpeg-dev     libkrb5-dev     liblzma-dev     libmagickcore-dev     libmagickwand-dev     libncurses5-dev     libncursesw5-dev     libpng-dev     libpq-dev     libreadline-dev     libsqlite3-dev     libssl-dev     libtool     libwebp-dev     libxml2-dev     libxslt-dev     libyaml-dev     make     patch     xz-utils     zlib1g-dev     build-essential     ruby     ruby-dev        ;   apt-get clean;   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid 2000 node   \u0026\u0026 useradd --uid 2000 --gid node --shell /bin/bash --create-home node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A   ; do     gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ARCH= \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"   \u0026\u0026 case \"${dpkgArch##*-}\" in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64) ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo \"unsupported architecture\"; exit 1 ;;   esac   \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.12.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 mkdir -p /opt   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex ;     apt-get update ;     apt-get install -y --no-install-recommends     cmake     libpcre3-dev     gdbserver     gdb     vim     less     ctags     vim-scripts     screen     sudo     doxygen     valgrind     bsdmainutils     texlive-latex-base     ;     apt-get clean ;     rm -rf /var/lib/apt/lists/* ;     npm install moxygen -g ;             echo 'Installing Criterion ...' ;     git clone --recurse-submodules -j8 https://github.com/skycoin/Criterion /go/Criterion ;     cd /go/Criterion ;     cmake . ;     make install ;     rm -r /go/Criterion ;     echo 'Success nstalling Criterion ...'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -u github.com/derekparker/delve/cmd/dlv  \u0026\u0026     go get -u github.com/FiloSottile/vendorcheck \u0026\u0026     go get -u github.com/alecthomas/gometalinter \u0026\u0026     gometalinter --vendored-linters --install \u0026\u0026     go get -u github.com/zmb3/gogetdoc \u0026\u0026     go get -u golang.org/x/tools/cmd/guru \u0026\u0026     go get -u github.com/davidrjenni/reftools/cmd/fillstruct \u0026\u0026     go get -u github.com/rogpeppe/godef \u0026\u0026     go get -u github.com/fatih/motion \u0026\u0026     go get -u github.com/nsf/gocode \u0026\u0026     go get -u github.com/jstemmer/gotags \u0026\u0026     go get -u github.com/josharian/impl \u0026\u0026     go get -u github.com/fatih/gomodifytags \u0026\u0026     go get -u github.com/dominikh/go-tools/cmd/keyify \u0026\u0026     go get -u golang.org/x/tools/cmd/gorename \u0026\u0026     go get -u github.com/klauspost/asmfmt/cmd/asmfmt \u0026\u0026     go get -u github.com/vektra/mockery/.../ \u0026\u0026     go get -u github.com/wadey/gocovmerge \u0026\u0026     curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/fatih/vim-go /usr/share/vim/vim80/pack/dev/start/vim-go \u0026\u0026     git clone https://github.com/tpope/vim-fugitive /usr/share/vim/vim80/pack/dev/start/vim-fugitive \u0026\u0026     git clone https://github.com/Shougo/vimshell.vim /usr/share/vim/vim80/pack/dev/start/0vimshell \u0026\u0026     git clone https://github.com/Shougo/vimproc.vim /usr/share/vim/vim80/pack/dev/start/0vimproc \u0026\u0026     git clone https://github.com/w0rp/ale.git /usr/share/vim/vim80/pack/dev/start/ale \u0026\u0026     cd /usr/share/vim/vim80/pack/dev/start/0vimproc \u0026\u0026 make ;    git clone https://github.com/iberianpig/tig-explorer.vim.git /tmp/tig-explorer;    cp /tmp/tig-explorer/autoload/tig_explorer.vim /usr/share/vim/vim80/autoload;    cp /tmp/tig-explorer/plugin/tig_explorer.vim /usr/share/vim/vim80/plugin;    rm -rf /tmp/tig-explorer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/;     wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz \u0026\u0026     tar -zxf swig-3.0.12.tar.gz ;     cd swig-3.0.12 ;    ./configure --prefix=/usr \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     rm -rf /tmp/swig-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANGCI_LINT",
              "Value": "1.12.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v$GOLANGCI_LINT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install travis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/github.com/skycoin"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$GOPATH/src/"
          ]
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}