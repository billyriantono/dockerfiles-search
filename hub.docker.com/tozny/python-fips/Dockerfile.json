{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:/usr/local/python2/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.15"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "18.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add --no-cache \tbzip2-dev \tcoreutils \tcurl \tdpkg-dev dpkg \tgcc \tgdbm-dev \tlibc-dev \tlibffi-dev \tlibnsl-dev \tlibtirpc-dev \tlinux-headers \tmake \tsqlite-dev \ttcl-dev \ttk \ttk-dev \ttar \txz \tzlib-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 mkdir -p /usr/src/python \t\u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\u0026\u0026 wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz \t\u0026\u0026 wget https://www.openssl.org/source/openssl-1.0.2o.tar.gz \t\u0026\u0026 tar -xvf openssl-1.0.2o.tar.gz \u0026\u0026 tar -xvf openssl-fips-2.0.16.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "openssl.ld",
            "/openssl.ld"
          ]
        },
        {
          "CmdLine": [
            "cd openssl-fips-2.0.16 \u0026\u0026 ./config \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd openssl-1.0.2o \u0026\u0026 ./config -Wl,--version-script=/openssl.ld -Wl,-Bsymbolic-functions -fPIC shared fips \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s -f /usr/local/ssl/bin/openssl /usr/bin/openssl     \u0026\u0026 cp /usr/local/ssl/lib/libcrypto.so.1.0.0 /lib/ \t\u0026\u0026 cp /usr/local/ssl/lib/libssl.so.1.0.0 /lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"     \u0026\u0026 cd /usr/src/python \t\u0026\u0026 ./configure \t\t --build=\"$gnuArch\" \t\t --enable-shared \t\t --enable-unicode=ucs4 \t\t --prefix=/usr/local/python2 \t\u0026\u0026 make \u0026\u0026 make install \t\u0026\u0026 cp /usr/local/python2/lib/libpython2.7.so.1.0 /usr/lib/ \t\u0026\u0026 cp /usr/local/python2/lib/libpython2.7.so.1.0 /lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/python2/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'     \u0026\u0026 python get-pip.py         --disable-pip-version-check         --no-cache-dir         \"pip==$PYTHON_PIP_VERSION\"     \u0026\u0026 rm -f get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CFLAGS=\"-I/usr/local/ssl/include\" LDFLAGS=\"-L/usr/local/ssl/lib\" pip wheel --no-binary :all: cryptography     \u0026\u0026 pip install cryptography-*.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}