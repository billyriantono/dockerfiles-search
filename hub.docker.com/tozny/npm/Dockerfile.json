{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Eric Mann \u003ceric@tozny.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NLS_LANG",
              "Value": "American_America.AL32UTF8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "America/Denver"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v7.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_PREFIX",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk update     \u0026\u0026 apk add --no-cache --repository \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" --virtual .build-deps         curl         g++         gcc         gnupg         linux-headers         paxctl         python         tar     \u0026\u0026 apk add --no-cache --repository \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\"         ca-certificates         git         libgcc         libstdc++         make         openssh         sudo     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys         9554F04D7259F04124DE6B476D5A82AC7E37093B         94AE36675C464D64BAFA68DD7434390BDBE9B9C5         0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93         FD3A5288F042B6850C66B31F09FE44734EB7990E         71DCFD284A79C3B38668286BC97EC7A07EDE3FC1         DD8F2338BAE7501E3DD5AC78C273792F7D83545D         C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8         B9AE9905FFD7803F25714661B63B535A4C206CA9     \u0026\u0026 mkdir /node_src     \u0026\u0026 cd /node_src     \u0026\u0026 curl -o node-${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz     \u0026\u0026 curl -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc     \u0026\u0026 gpg --verify SHASUMS256.txt.asc     \u0026\u0026 grep node-${NODE_VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c -     \u0026\u0026 cd /node_src     \u0026\u0026 tar -zxf node-${NODE_VERSION}.tar.gz     \u0026\u0026 cd node-${NODE_VERSION}     \u0026\u0026 export GYP_DEFINES=\"linux_use_gold_flags=0\"     \u0026\u0026 ./configure --prefix=${NODE_PREFIX}     \u0026\u0026 NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1)     \u0026\u0026 make -j${NPROC} -C out mksnapshot BUILDTYPE=Release     \u0026\u0026 paxctl -cm out/Release/mksnapshot     \u0026\u0026 make -j${NPROC}     \u0026\u0026 make install     \u0026\u0026 paxctl -cm ${NODE_PREFIX}/bin/node     \u0026\u0026 curl -L https://npmjs.org/install.sh | sh     \u0026\u0026 npm install --silent -g         gulp-cli         grunt-cli         bower     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf ~/.cache /var/cache/apk/* /tmp/*     \u0026\u0026 find ${NODE_PREFIX}/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf     \u0026\u0026 rm -rf         /node_src         /tmp/*         /var/cache/apk/*         ${NODE_PREFIX}/lib/node_modules/npm/man         ${NODE_PREFIX}/lib/node_modules/npm/doc         ${NODE_PREFIX}/lib/node_modules/npm/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/src"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "CmdLine": [
            "/usr/local/bin/npm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}