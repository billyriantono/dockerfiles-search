{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.7.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TENSORFLOW_VERSION",
              "Value": "1.13.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y software-properties-common                        tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository -y ppa:git-core/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y git                        vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y make build-essential libssl-dev zlib1g-dev                        libbz2-dev libreadline-dev libsqlite3-dev wget                        curl llvm libncurses5-dev xz-utils tk-dev                        libxml2-dev libxmlsec1-dev libffi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/pyenv/pyenv.git ~/.pyenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' \u003e\u003e ~/.bashrc \u0026\u0026     echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'if command -v pyenv 1\u003e/dev/null 2\u003e\u00261; then\\n  eval \"$(pyenv init -)\"\\nfi' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/.pyenv/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pyenv install ${PYTHON_VERSION} \u0026\u0026     pyenv global ${PYTHON_VERSION} \u0026\u0026     pyenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/.pyenv/shims"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install     https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-${TENSORFLOW_VERSION}-cp37-cp37m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install         keras         sklearn         jupyter         ipykernel         scipy         simpy         pandas         numpy         matplotlib         \u0026\u0026     python -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONFIG",
              "Value": "/root/.jupyter/jupyter_notebook_config.py"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFIG_IPYTHON",
              "Value": "/root/.ipython/profile_default/ipython_config.py"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config --allow-root \u0026\u0026     ipython profile create"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.ip = '0.0.0.0'\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.NotebookApp.port = 8888\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.NotebookApp.open_browser = False\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.NotebookApp.iopub_data_rate_limit=10000000000\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.MultiKernelManager.default_kernel_name = 'python3'\" \u003e\u003e${CONFIG}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.InteractiveShellApp.exec_lines = ['%matplotlib inline']\" \u003e\u003e${CONFIG_IPYTHON}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--allow-root"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}