{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian",
      "SourceCode": "FROM debian",
      "Platform": "",
      "From": {
        "Image": "debian"
      },
      "Commands": [
        {
          "Maintainer": "wikitolearn sysadmin@wikitolearn.org",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install zip unzip nano apt-utils curl rsync git \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install python \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install python-pip \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install nginx \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install python-dev \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install dnsmasq \u0026\u0026 rm -f /var/cache/apt/archives/*deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install docker-py flask"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/nginx/sites-available/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./default",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./dockerserver.py",
            "/dockerserver.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./run.sh",
            "/run.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "rm * -Rfv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/kanaka/noVNC ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}