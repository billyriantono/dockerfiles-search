MetaArgs: null
Stages:
- BaseName: amazonlinux:latest
  Commands:
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.06.3
    Name: env
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.24.0
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: "1.12"
    Name: env
  - CmdLine:
    - yum install -y openssh-server sudo cronie tar git-core make &&     systemctl
      enable crond.service &&     sed -i 's/#\s*PermitRootLogin\s+.*/PermitRootLogin
      yes/' /etc/ssh/sshd_config &&     ssh-keygen -q -f /etc/ssh/ssh_host_rsa_key
      -N '' -t rsa &&     ssh-keygen -q -f /etc/ssh/ssh_host_ecdsa_key -N '' -t ecdsa
      &&     ssh-keygen -q -f /etc/ssh/ssh_host_ed25519_key -N '' -t ed25519 &&     sed
      -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      /etc/pam.d/sshd &&     systemctl enable sshd.service &&     curl -fsSLO "https://download.docker.com/linux/static/stable/$(uname
      -m)/docker-${DOCKER_VERSION}-ce.tgz" &&     tar xzvf docker-${DOCKER_VERSION}-ce.tgz
      --strip 1 -C /usr/local/bin docker/docker &&     rm docker-${DOCKER_VERSION}-ce.tgz
      &&     curl -fsSL "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname
      -s)-$(uname -m)"       -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
      &&     amazon-linux-extras install -y nginx$NGINX_VERSION &&     systemctl enable
      nginx.service
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "DOCKER_HOST=tcp://docker:2375" >> /etc/environment
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./users
    - /users
  - CmdLine:
    - chmod +x /users/create-users.sh &&     /users/create-users.sh docker &&     rm
      /users/*.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/init
    Name: cmd
    PrependShell: false
  From:
    Image: amazonlinux:latest
  Name: ""
  Platform: ""
  SourceCode: FROM amazonlinux:latest
