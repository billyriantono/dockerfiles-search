{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "storezhang/alpine",
      "SourceCode": "FROM storezhang/alpine",
      "Platform": "",
      "From": {
        "Image": "storezhang/alpine"
      },
      "Commands": [
        {
          "Maintainer": "storezhang \"storezhang@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "architecture",
              "Value": "\"AMD64/x86_64\""
            },
            {
              "Key": "version",
              "Value": "\"latest\""
            },
            {
              "Key": "build",
              "Value": "\"2018-11-22\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "Env": [
            {
              "Key": "REDIS_VERSION",
              "Value": "5.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_URL",
              "Value": "http://download.redis.io/releases/redis-${REDIS_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "redis.conf",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex         \u0026\u0026 addgroup -S redis     \u0026\u0026 adduser -S -G redis redis     \u0026\u0026 apk add --no-cache --virtual .build-deps         'su-exec\u003e=0.2'         coreutils         gcc         jemalloc-dev         linux-headers         make         musl-dev     \u0026\u0026 wget -O redis.tar.gz \"${REDIS_DOWNLOAD_URL}\"     \u0026\u0026 mkdir -p /usr/src/redis     \u0026\u0026 tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1     \u0026\u0026 rm redis.tar.gz         \u0026\u0026 grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h     \u0026\u0026 sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h     \u0026\u0026 grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h         \u0026\u0026 make -C /usr/src/redis -j \"$(nproc)\"     \u0026\u0026 make -C /usr/src/redis install         \u0026\u0026 rm -r /usr/src/redis         \u0026\u0026 run_deps=\"$(         scanelf --needed --nobanner --format '%n#p' --recursive /usr/local             | tr ',' '\\n'             | sort -u             | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     )\"     \u0026\u0026 apk add --virtual .redis-rundeps ${run_deps}     \u0026\u0026 redis-server --version     \u0026\u0026 mkdir -p /redis/data     \u0026\u0026 chown -R redis:redis /redis     \u0026\u0026 apk del .build-deps         .redis-rundeps         coreutils         libattr         libacl         binutils         gmp         isl         libgomp         libatomic         pkgconf         libgcc         mpfr3         mpc1         libstdc++         gcc         jemalloc         jemalloc-dev         linux-headers         make         musl-dev     \u0026\u0026 chmod +x /usr/local/bin/docker-entrypoint.sh     \u0026\u0026 ln -s /usr/local/bin/docker-entrypoint.sh /     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/redis"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/redis/data"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "redis-server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}