{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-apache",
      "SourceCode": "FROM php:7.3-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.3-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DRUSH_LAUNCHER_VERSION",
              "Value": "0.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install     libcurl4-gnutls-dev     imagemagick     libmagickwand-dev     libjpeg-dev     libpng-dev     libfreetype6-dev     git     unzip     default-mysql-client     vim     powerline     fonts-powerline \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install mysqli pdo_mysql mbstring gd curl opcache bcmath \u0026\u0026     printf \"\\n\" | pecl install redis \u0026\u0026     docker-php-ext-enable redis \u0026\u0026     printf \"\\n\" | pecl install imagick \u0026\u0026     docker-php-ext-enable imagick \u0026\u0026     printf \"\\n\" | pecl install jsmin \u0026\u0026     docker-php-ext-enable jsmin \u0026\u0026     printf \"\\n\" | pecl install xdebug \u0026\u0026     docker-php-ext-enable xdebug \u0026\u0026     printf \"\\n\" | pecl install apcu \u0026\u0026     docker-php-ext-enable apcu \u0026\u0026     git clone --recursive --depth=1 https://github.com/kjdev/php-ext-brotli.git \u0026\u0026     cd php-ext-brotli \u0026\u0026     phpize \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     printf '%s\\n' 'extension=brotli.so'  \u003e\u003e /usr/local/etc/php/conf.d/brotli.ini \u0026\u0026     rm -rf php-ext-brotli \u0026\u0026     rm /tmp/pear -rf \u0026\u0026     a2enmod expires headers rewrite \u0026\u0026     curl -L -o       /usr/local/bin/drush       https://github.com/drush-ops/drush-launcher/releases/download/{$DRUSH_LAUNCHER_VERSION}/drush.phar \u0026\u0026     chmod +x /usr/local/bin/drush \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \u0026\u0026     groupadd -r application \u0026\u0026 useradd -r -g application application \u0026\u0026     printf '\\n%s\\n%s\\n\\n\\n%s\\n%s\\n%s\\n%s\\n%s\\n\\n' '# Export TERM environment variable' 'export TERM=xterm' '# Use powerline' 'powerline-daemon -q' 'POWERLINE_BASH_CONTINUATION=1' 'POWERLINE_BASH_SELECT=1' '. /usr/share/powerline/bindings/bash/powerline.sh'  \u003e\u003e ~/.bashrc \u0026\u0026     printf '\\n%s\\n%s\\n%s\\n%s\\n\\n' '# Include bash aliases file.' 'if [ -f ~/.bash_aliases ]; then' '    . ~/.bash_aliases' 'fi'  \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./commands/c",
            "/usr/local/bin/c"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./commands/d",
            "/usr/local/bin/d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache2.conf",
            "/etc/apache2/sites-available/000-default.conf"
          ]
        }
      ]
    }
  ]
}