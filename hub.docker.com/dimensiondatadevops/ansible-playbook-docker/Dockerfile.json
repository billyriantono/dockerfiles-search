{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"===\u003e Installing sudo to emulate normal OS behavior...\"           \u0026\u0026     apk --update add --no-cache sudo                                       \u0026\u0026         echo \"===\u003e Adding Python runtime...\"                                   \u0026\u0026     apk --update add python py-pip openssl ca-certificates                 \u0026\u0026     apk --update add --virtual build-dependencies                 python-dev libffi-dev openssl-dev build-base               \u0026\u0026     pip install --upgrade pip cffi                                         \u0026\u0026         echo \"===\u003e Installing misc tools...\"                                   \u0026\u0026     pip install --upgrade pycrypto pywinrm python-keyczar netaddr requests scp \u0026\u0026     apk --update add sshpass openssh-client rsync curl lftp py-boto                     py-dateutil py-httplib2 py-jinja2 py-paramiko                       py-yaml git bash tar cdrkit p7zip qemu-img             \u0026\u0026     echo \"===\u003e Removing package list...\"                                   \u0026\u0026     apk del build-dependencies                                             \u0026\u0026     rm -rf /var/cache/apk/*                                                \u0026\u0026     echo \"===\u003e Adding hosts for convenience...\"                            \u0026\u0026     mkdir -p /etc/ansible/ /ansible                                        \u0026\u0026     echo \"[local]\" \u003e\u003e /etc/ansible/hosts                                   \u0026\u0026     echo \"localhost\" \u003e\u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"===\u003e Installing Ansible...\"                                                       \u0026\u0026     curl -fsSL https://releases.ansible.com/ansible/ansible-latest.tar.gz -o ansible.tar.gz \u0026\u0026     tar -xzf ansible.tar.gz -C ansible --strip-components 1                                 \u0026\u0026     rm -fr ansible.tar.gz /ansible/docs /ansible/examples /ansible/packaging"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /ansible/playbooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/ansible/playbooks"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ntt_cis",
            "/nttc_cis"
          ]
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_GATHERING",
              "Value": "smart"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_RETRY_FILES_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_ROLES_PATH",
              "Value": "/ansible/playbooks/roles"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_SSH_PIPELINING",
              "Value": "True"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/ansible/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/ansible/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_LIBRARY",
              "Value": "/nttc_cis"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_MODULE_UTILS",
              "Value": "/nttc_cis/module_utils"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ansible-playbook"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}