MetaArgs: null
Stages:
- As: build
  BaseName: golang:alpine
  Commands:
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.7
    Name: env
  - Env:
    - Key: DDCLOUD_VERSION
      Value: "1.3"
    Name: env
  - CmdLine:
    - apk add --update git bash openssh make
    Name: run
    PrependShell: true
  - Env:
    - Key: TF_DEV
      Value: "true"
    Name: env
  - Env:
    - Key: TF_RELEASE
      Value: "true"
    Name: env
  - Name: workdir
    Path: $GOPATH/src/github.com/hashicorp/terraform
  - CmdLine:
    - git clone https://github.com/hashicorp/terraform.git ./ &&     git checkout
      v${TERRAFORM_VERSION} &&     /bin/bash scripts/build.sh &&     ls -l /bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/src/github.com/DimensionDataResearch/dd-cloud-compute-terraform
  - CmdLine:
    - git clone https://github.com/DimensionDataResearch/dd-cloud-compute-terraform.git
      ./ &&     git checkout release/v${DDCLOUD_VERSION} &&     go get github.com/pkg/errors
      &&     go get golang.org/x/crypto/pkcs12 &&     go get github.com/DimensionDataResearch/go-dd-cloud-compute/compute
      &&     make dev
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:alpine as Build
- BaseName: golang:alpine
  Commands:
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - $GOPATH/bin/terraform
    - /bin
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - $GOPATH/src/github.com/DimensionDataResearch/dd-cloud-compute-terraform/_bin/terraform-provider-ddcloud
    - /bin
  - Name: workdir
    Path: $GOPATH
  - CmdLine:
    - terraform
    Name: entrypoint
    PrependShell: false
  From:
    Image: golang:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:alpine
