MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
  Commands:
  - Env:
    - Key: USER_NAME
      Value: '"dev"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y             wget             vim             gosu             unzip             cmake             apt-utils             python3-dev             python3-pip
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENCV_VER
      Value: '"3.4.6"'
    Name: env
  - CmdLine:
    - apt-get install -y libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev
      libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install numpy
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/
  - CmdLine:
    - wget -O opencv.zip https://github.com/opencv/opencv/archive/$OPENCV_VER.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/$OPENCV_VER.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip opencv.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip opencv_contrib.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: opencv-$OPENCV_VER
  - CmdLine:
    - mkdir build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ./build
  - CmdLine:
    - cmake -D CMAKE_BUILD_TYPE=Release           -D CMAKE_INSTALL_PREFIX=/usr/local           -D
      PYTHON_EXECUTABLE=$(which python)           -D BUILD_EXAMPLES=ON           -D
      INSTALL_PYTHON_EXAMPLES=ON           -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-$OPENCV_VER/modules           ..
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENPOSE_VER
      Value: '"1.5.0"'
    Name: env
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt install -y caffe-cuda
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y libprotobuf-dev protobuf-compiler libgoogle-glog-dev libboost-all-dev
      libcaffe-cuda-dev libhdf5-dev libatlas-base-dev
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/
  - CmdLine:
    - wget -O openpose.zip https://github.com/CMU-Perceptual-Computing-Lab/openpose/archive/v$OPENPOSE_VER.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip openpose.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mv openpose-* openpose
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ./openpose/build && cd ./openpose/build &&     cmake -DCaffe_INCLUDE_DIRS=/usr/include/caffe           -DCaffe_LIBS=/usr/lib/x86_64-linux-gnu/libcaffe.so           -DBUILD_CAFFE=OFF
      .. &&     make -j`nproc` && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "root:root" | chpasswd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
