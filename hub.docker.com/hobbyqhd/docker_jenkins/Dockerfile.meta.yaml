MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: hobbyqhd “liubingxin1030@outlook.com”
    Name: maintainer
  - Env:
    - Key: REFRESHED_AT
      Value: "2017_06_14"
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy curl wget vim
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://get.docker.io/gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key add gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:webupd8team/java
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy iptables ca-certificates lxc openjdk-9-jre
      git-core lxc-docker
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: /opt/jenkins/data
    Name: env
  - Env:
    - Key: JENKINS_MIRROR
      Value: http://mirrors.jenkins-ci.org
    Name: env
  - CmdLine:
    - mkdir -p $JENKINS_HOME/plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sf -o /opt/jenkins/jenkins.war -L $JENKINS_MIRROR/war-stable/latest/jenkins.war
    Name: run
    PrependShell: true
  - CmdLine:
    - for plugin in chucknorris greenballs scm-api git-client git ws-cleanup;  do
      curl -sf -o $JENKINS_HOME/plugins/${plugin}.hpi     -L  $JENKINS_MIRROR/plugins/${plugin}/latest/${plugin}.hpi
      ; done
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./dockerjenkins.sh
    - /usr/local/bin/dockerjenkins.sh
  - CmdLine:
    - chmod +x /usr/local/bin/dockerjenkins.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /usr/local/bin/dockerjenkins.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
