MetaArgs: null
Stages:
- BaseName: denismakogon/ffmpeg-alpine:4.0-golang
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Denis Makogon. mail: lildee1991@gmail.com"'
    Name: label
  - Env:
    - Key: OPENCV_VERSION
      Value: 4.0.1
    Name: env
  - Env:
    - Key: BUILD
      Value: '"ca-certificates          git          build-base          musl-dev          alpine-sdk          make          gcc          g++          libc-dev          linux-headers          libjpeg-turbo          libpng          libwebp          libwebp-dev          tiff          libavc1394          jasper-libs          openblas          libgphoto2          gstreamer          gst-plugins-base          gtk+3.0          gtkglext          libcanberra-gtk3"'
    Name: env
  - Env:
    - Key: DEV
      Value: '"clang clang-dev cmake pkgconf          openblas-dev gstreamer-dev gst-plugins-base-dev          libgphoto2-dev
        libjpeg-turbo-dev libpng-dev          tiff-dev jasper-dev libavc1394-dev          gtk+3.0-dev          gtkglext-dev          libcanberra-dev"'
    Name: env
  - CmdLine:
    - apk update &&     apk add --no-cache ${BUILD} ${DEV}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/opencv &&     cd /tmp/opencv &&     wget -O opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
      &&     unzip opencv.zip &&     wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
      &&     unzip opencv_contrib.zip &&     mkdir /tmp/opencv/opencv-${OPENCV_VERSION}/build
      && cd /tmp/opencv/opencv-${OPENCV_VERSION}/build &&     cmake     -D CMAKE_BUILD_TYPE=RELEASE     -D
      CMAKE_INSTALL_PREFIX=/usr/local     -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv/opencv_contrib-${OPENCV_VERSION}/modules     -D
      WITH_FFMPEG=YES     -D WITH_GTK=ON     -D WITH_OPENGL=ON     -D INSTALL_C_EXAMPLES=NO     -D
      INSTALL_PYTHON_EXAMPLES=NO     -D BUILD_ANDROID_EXAMPLES=NO     -D BUILD_DOCS=NO     -D
      BUILD_TESTS=NO     -D BUILD_PERF_TESTS=NO     -D BUILD_EXAMPLES=NO     -D BUILD_opencv_java=NO     -D
      BUILD_opencv_python=NO     -D BUILD_opencv_python2=NO     -D BUILD_opencv_python3=NO     -D
      OPENCV_GENERATE_PKGCONFIG=YES .. &&     make -j4 &&     make install &&     cd
      && rm -rf /tmp/opencv
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del ${DEV_DEPS} &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: /usr/local/lib64/pkgconfig
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib64
    Name: env
  - Env:
    - Key: CGO_CPPFLAGS
      Value: -I/usr/local/include
    Name: env
  - Env:
    - Key: CGO_CXXFLAGS
      Value: '"--std=c++1z"'
    Name: env
  - Env:
    - Key: CGO_LDFLAGS
      Value: '"-L/usr/local/lib -lopencv_core -lopencv_face -lopencv_videoio -lopencv_imgproc
        -lopencv_highgui -lopencv_imgcodecs -lopencv_objdetect -lopencv_features2d
        -lopencv_video -lopencv_dnn -lopencv_xfeatures2d -lopencv_plot -lopencv_tracking"'
    Name: env
  From:
    Image: denismakogon/ffmpeg-alpine:4.0-golang
  Name: ""
  Platform: ""
  SourceCode: FROM denismakogon/ffmpeg-alpine:4.0-golang
