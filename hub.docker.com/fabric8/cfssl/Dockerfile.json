{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:3.2",
      "SourceCode": "FROM gliderlabs/alpine:3.2",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:3.2"
      },
      "Commands": [
        {
          "Maintainer": "Jimmi Dyson \u003cjimmidyson@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --update -t build-deps make git go     \u0026\u0026 wget \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/8/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk\"     \u0026\u0026 wget \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/8/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-bin-2.21-r2.apk\"     \u0026\u0026 apk add --allow-untrusted glibc-2.21-r2.apk glibc-bin-2.21-r2.apk     \u0026\u0026 rm -f glibc-2.21-r2.apk glibc-bin-2.21-r2.apk     \u0026\u0026 echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf     \u0026\u0026 mkdir /go     \u0026\u0026 export GOPATH=/go     \u0026\u0026 go get github.com/GeertJohan/go.rice/rice     \u0026\u0026 git clone https://github.com/cloudflare/cfssl.git /go/src/github.com/cloudflare/cfssl     \u0026\u0026 cd /go/src/github.com/cloudflare/cfssl/     \u0026\u0026 git checkout 1.1.0     \u0026\u0026 cd cli/serve     \u0026\u0026 /go/bin/rice embed-go     \u0026\u0026 cd ../../     \u0026\u0026 go get -tags nopkcs11 github.com/cloudflare/cfssl/cmd/...     \u0026\u0026 mv /go/bin/* /bin/     \u0026\u0026 git clone https://github.com/cloudflare/cfssl_trust.git /etc/cfssl     \u0026\u0026 mkbundle -f /etc/cfssl/int-bundle.crt /etc/cfssl/intermediate_ca/     \u0026\u0026 mkbundle -f /etc/cfssl/ca-bundle.crt /etc/cfssl/trusted_roots/     \u0026\u0026 apk del --purge build-deps make git go     \u0026\u0026 rm -rf /go /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk-install bash openssl nginx     \u0026\u0026 mkdir /etc/cfssl/data     \u0026\u0026 chmod 777 $(find /etc/cfssl -type d) /var/log/nginx/ /var/lib/nginx/ /var/lib/nginx/tmp/ /var/run/nginx/     \u0026\u0026 chmod 666 $(find /etc/cfssl -type f)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CFSSL_CA_HOST",
              "Value": "example.localnet"
            },
            {
              "Key": "CFSSL_CA_ALGO",
              "Value": "ecdsa"
            },
            {
              "Key": "CFSSL_CA_KEY_SIZE",
              "Value": "521"
            },
            {
              "Key": "CFSSL_CA_ORGANIZATION",
              "Value": "\"Internet Widgets, LLC\""
            },
            {
              "Key": "CFSSL_CA_ORGANIZATIONAL_UNIT",
              "Value": "\"Certificate Authority\""
            },
            {
              "Key": "CFSSL_CA_POLICY_FILE",
              "Value": "/etc/cfssl/data/ca_policy.json"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/cfssl/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/cfssl/data"
        },
        {
          "CmdLine": [
            "/start-cfssl"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-cfssl",
            "/start-cfssl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "user",
          "User": "nobody"
        }
      ]
    }
  ]
}