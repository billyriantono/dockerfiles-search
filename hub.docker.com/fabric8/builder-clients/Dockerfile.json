{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum update -y \u0026\u0026   yum install -y docker unzip which gem \u0026\u0026   yum install -y make curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker \u0026\u0026   curl -L https://www.kernel.org/pub/software/scm/git/git-2.8.3.tar.gz | tar xzv \u0026\u0026   pushd git-2.8.3 \u0026\u0026   make prefix=/usr/ install \u0026\u0026   popd \u0026\u0026   rm -rf git-2.8.3* \u0026\u0026   yum remove -y make curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker \u0026\u0026   yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install asciidoctor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KEDGE_VERSION",
              "Value": "0.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "1.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --retry 999 --retry-max-time 0  -sSL https://bintray.com/artifact/download/fabric8io/helm-ci/helm-v0.1.0%2B825f5ef-linux-amd64.zip \u003e helm.zip \u0026\u0026   unzip helm.zip \u0026\u0026   mv helm /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --retry 999 --retry-max-time 0  -sSL https://github.com/openshift/origin/releases/download/v1.5.0/openshift-origin-client-tools-v1.5.0-031cbe4-linux-64bit.tar.gz | tar xzv \u0026\u0026   mv openshift-origin-*/* /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \u0026\u0026   chmod +x kubectl \u0026\u0026   mv kubectl /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/gofabric8 \u0026\u0026 curl --retry 999 --retry-max-time 0  -sSL https://github.com/fabric8io/gofabric8/releases/download/v0.4.16/gofabric8-0.4.16-linux-amd64.tar.gz | tar xzv -C /tmp/gofabric8 \u0026\u0026   chmod +x /tmp/gofabric8/gofabric8 \u0026\u0026   mv /tmp/gofabric8/* /usr/bin/ \u0026\u0026   rm -rf /tmp/gofabric8/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/github/hub/releases/download/v2.2.3/hub-linux-amd64-2.2.3.tgz | tar xzv \u0026\u0026   mv hub-linux-amd64-2.2.3/bin/hub /usr/bin/ \u0026\u0026   rm -rf hub-linux-amd64-2.2.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/kedgeproject/kedge/releases/download/v${KEDGE_VERSION}/kedge-linux-amd64 -o /usr/bin/kedge \u0026\u0026 chmod +x /usr/bin/kedge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/home"
        },
        {
          "CmdLine": [
            "curl -L https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-142.0.0-linux-x86_64.tar.gz | tar xzv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/home/google-cloud-sdk/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gcloud components install alpha beta"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_API_VERSION",
              "Value": "1.23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXPOSECONTROLLER_VERSION",
              "Value": "2.3.24"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://github.com/fabric8io/exposecontroller/releases/download/v$EXPOSECONTROLLER_VERSION/exposecontroller-linux-amd64 \u003e exposecontroller \u0026\u0026   chmod +x exposecontroller \u0026\u0026   mv exposecontroller /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sleep infinity"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}