{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum install -y zip wget make hg svn bzr gcc docker https://centos7.iuscommunity.org/ius-release.rpm \u0026\u0026 yum install -y git2u \u0026\u0026   yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz \u0026\u0026   tar -C /usr/local -xzf go$GOLANG_VERSION.linux-amd64.tar.gz \u0026\u0026   rm go${GOLANG_VERSION}.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GLIDE_VERSION",
              "Value": "v0.12.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GO15VENDOREXPERIMENT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/Masterminds/glide/releases/download/$GLIDE_VERSION/glide-$GLIDE_VERSION-linux-amd64.tar.gz \u0026\u0026   tar -xzf glide-$GLIDE_VERSION-linux-amd64.tar.gz \u0026\u0026   mv linux-amd64 /usr/local/glide \u0026\u0026   rm glide-$GLIDE_VERSION-linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GH_RELEASE_VERSION",
              "Value": "2.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/progrium/gh-release/releases/download/v$GH_RELEASE_VERSION/gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz \u0026\u0026   tar -xzf gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz \u0026\u0026   mv gh-release /usr/local/gh-release \u0026\u0026   rm gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JQ_RELEASE_VERSION",
              "Value": "1.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/stedolan/jq/releases/download/jq-${JQ_RELEASE_VERSION}/jq-linux64 \u0026\u0026 mv jq-linux64 jq \u0026\u0026 chmod +x jq \u0026\u0026 cp jq /usr/bin/jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/glide"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get github.com/fabric8io/gobump"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}