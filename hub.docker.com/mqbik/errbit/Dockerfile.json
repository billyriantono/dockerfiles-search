{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.3-alpine",
      "SourceCode": "FROM ruby:2.3.3-alpine",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.3-alpine"
      },
      "Commands": [
        {
          "Maintainer": "David Papp \u003cdavid@ghostmonitor.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "addgroup -S errbit   \u0026\u0026 adduser -S -D -s /bin/false -G errbit -g errbit errbit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"gem: --no-document\" \u003e\u003e /etc/gemrc   \u0026\u0026 bundle config --global frozen 1   \u0026\u0026 bundle config --global clean true   \u0026\u0026 bundle config --global disable_shared_gems false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app   \u0026\u0026 chown -R errbit:errbit /app   \u0026\u0026 chmod 700 /app/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "gem update --system   \u0026\u0026 gem install bundler   \u0026\u0026 apk add --no-cache     curl     less     libxml2-dev     libxslt-dev     nodejs     tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gemfile",
            "Gemfile.lock",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual build-dependencies       build-base   \u0026\u0026 bundle config build.nokogiri --use-system-libraries   \u0026\u0026 bundle install       -j \"$(getconf _NPROCESSORS_ONLN)\"       --retry 5       --without test development no_docker   \u0026\u0026 apk del build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "RAILS_ENV=production bundle exec rake assets:precompile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R errbit:errbit /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "errbit"
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "curl --fail http://localhost:$PORT/users/sign_in || exit 1"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "bundle",
            "exec",
            "puma",
            "-C",
            "config/puma.default.rb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}