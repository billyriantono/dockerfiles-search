{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "miessos, https://github.com/miessos",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get -y upgrade \u0026\u0026 apt-get -y dist-upgrade \u0026\u0026 apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential     cmake     qt5-default     libvtk6-dev     zlib1g-dev     libjpeg-dev     libwebp-dev     libpng-dev     libtiff5-dev     libjasper-dev     libopenexr-dev     libgdal-dev     libdc1394-22-dev     libavcodec-dev     libavformat-dev     libswscale-dev     libtheora-dev     libvorbis-dev     libxvidcore-dev     libx264-dev yasm     libopencore-amrnb-dev     libopencore-amrwb-dev     libv4l-dev     libxine2-dev     libtbb-dev     libeigen3-dev     python-dev     python-tk     python-numpy     python3-dev     python3-tk     python3-numpy     ant     default-jdk     doxygen     unzip     wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export uid=1000 gid=1000 \u0026\u0026     mkdir -p /home/developer \u0026\u0026     mkdir -p /etc/sudoers.d \u0026\u0026     echo \"developer:x:${uid}:${gid}:Developer,,,:/home/developer:/bin/bash\" \u003e\u003e /etc/passwd \u0026\u0026     echo \"developer:x:${uid}:\" \u003e\u003e /etc/group \u0026\u0026     echo \"developer ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/developer \u0026\u0026     chmod 0440 /etc/sudoers.d/developer \u0026\u0026     chown ${uid}:${gid} -R /home/developer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/developer"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "wget https://github.com/Itseez/opencv/archive/3.1.0.zip \u0026\u0026     unzip 3.1.0.zip \u0026\u0026     rm 3.1.0.zip \u0026\u0026     mv opencv-3.1.0 OpenCV \u0026\u0026     cd OpenCV \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON .. \u0026\u0026     make -j4 \u0026\u0026     make install \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "developer"
        },
        {
          "CmdLine": [
            "cd ~"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}