{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \u0026\u0026     apk add --no-cache --virtual .gd-runtime-deps freetype libpng libjpeg-turbo \u0026\u0026     apk add --no-cache --virtual .gd-build-deps freetype-dev libpng-dev libjpeg-turbo-dev \u0026\u0026     apk add --no-cache --virtual .ext-runtime-deps libbz2 libmcrypt libxslt icu libzip-dev \u0026\u0026     apk add --no-cache --virtual .ext-build-deps bzip2-dev libmcrypt-dev libxml2-dev libedit-dev libxslt-dev icu-dev sqlite-dev \u0026\u0026     docker-php-ext-configure gd       --with-freetype-dir=/usr/include/       --with-png-dir=/usr/include/       --with-jpeg-dir=/usr/include/ \u0026\u0026     NPROC=$(getconf _NPROCESSORS_ONLN) \u0026\u0026     docker-php-ext-install -j${NPROC} bz2 dom exif fileinfo hash iconv intl opcache pcntl pdo pdo_mysql pdo_sqlite readline session simplexml xml xsl zip gd \u0026\u0026     pecl install xdebug \u0026\u0026     docker-php-ext-enable xdebug \u0026\u0026     pecl install apcu \u0026\u0026     docker-php-ext-enable apcu \u0026\u0026     apk del .gd-build-deps \u0026\u0026     apk del .build-deps \u0026\u0026     apk del .ext-build-deps \u0026\u0026     rm -r /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache imagemagick-dev imagemagick libtool autoconf gcc g++ make      \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 apk del libtool autoconf gcc g++ make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o composer-installer.php https://getcomposer.org/installer \u0026\u0026     php composer-installer.php --quiet --install-dir=\"/usr/local/bin\" \u0026\u0026     ln -s /usr/local/bin/composer.phar /usr/local/bin/composer \u0026\u0026     rm composer-installer.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache git openssh-client rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache mysql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo http://dl-cdn.alpinelinux.org/alpine/edge/community/ \u003e\u003e /etc/apk/repositories \u0026\u0026     apk add --no-cache shadow su-exec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r -g 109 fcron \u0026\u0026     useradd -u 109 -r fcron -g fcron \u0026\u0026     apk add --no-cache --virtual .build-deps g++ make perl \u0026\u0026     wget http://fcron.free.fr/archives/fcron-3.3.0.src.tar.gz \u0026\u0026     tar xfz fcron-3.3.0.src.tar.gz  \u0026\u0026     cd fcron-3.3.0  \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     apk del .build-deps \u0026\u0026     rm -Rf fcron-3.3.0*z"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fcron.conf",
            "/usr/local/etc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "echomail",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "chown root:fcron /usr/local/etc/fcron.conf \u0026\u0026     chmod 644 /usr/local/etc/fcron.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./zz-fpm.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-base.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xdebug.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.bak"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/.composer"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wait-for",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint-cron",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint-chuid",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "entrypoint-chuid"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}