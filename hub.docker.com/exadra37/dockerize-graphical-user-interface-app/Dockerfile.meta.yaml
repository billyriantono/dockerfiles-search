MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Labels:
    - Key: '"com.exadra37.vendor"'
      Value: '"Exadra37"'
    Name: label
  - Labels:
    - Key: com.exadra37.package-name
      Value: '"exadra37-docker-images/dockerize-graphical-user-interface-app"'
    Name: label
  - Labels:
    - Key: version
      Value: '"0.0.1.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Dockerize any App with a graphical user interface. This allow us to
        run the Dockerized APP from inside a Docker Container. Advantages:     * No
        need to install the APP in our Operating System to try it.     * Try the APP
        with many different setups without be afraid to break our OS.     * More secure
        to run, once we can destroy the container when finished, therefore if is compromised
        it will not        infect the OS in our computer.     * Keep our OS clean
        and free of bloated APPs, making easy to upgrade it at any time. "'
    Name: label
  - Env:
    - Key: NO_AT_BRIDGE
      Value: "1"
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: CONTAINER_USER
    Name: arg
    Value: '"${CONTAINER_USER:-dockerize}"'
  - Key: CONTAINER_UID
    Name: arg
    Value: '"${CONTAINER_UID:-2000}"'
  - Key: CONTAINER_ENTRYPOINT
    Name: arg
    Value: '"${CONTAINER_ENTRYPOINT:-''./entrypoint.sh''}"'
  - Key: CONTAINER_LANG
    Name: arg
    Value: '"${CONTAINER_LANG:-''en_GB:en''}"'
  - Key: CONTAINER_LOCALE
    Name: arg
    Value: '"${CONTAINER_LOCALE:-''en_GB.UTF-8''}"'
  - Key: CONTAINER_SHELL
    Name: arg
    Value: '"${CONTAINER_SHELL:-''/usr/bin/zsh''}"'
  - Key: HOST_SETUP_USER_SHELL_FILE
    Name: arg
    Value: '"${HOST_SETUP_USER_SHELL_FILE:-~/.dockerize/setup-user-shell.sh}"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./setup-user-shell.sh
    - /.container/setup-user-shell.sh
  - CmdLine:
    - apt-get update &&     apt-get -y upgrade &&     apt-get -y install         ca-certificates         apt-utils         dbus-x11
      &&     apt-get -y -f install &&     locale-gen "${CONTAINER_LOCALE}" &&     useradd
      -m -u "${CONTAINER_UID}" -s "${CONTAINER_SHELL}" "${CONTAINER_USER}" &&     echo
      "${CONTAINER_USER}:${CONTAINER_USER}" | chpasswd &&     bash ./.container/setup-user-shell.sh
      "${CONTAINER_USER}" "${CONTAINER_SHELL}" "${HOST_SETUP_USER_SHELL_FILE}" &&     su
      "${CONTAINER_USER}" -c 'mkdir /home/"${CONTAINER_USER}"/.config' &&     su "${CONTAINER_USER}"
      -c 'mkdir /home/"${CONTAINER_USER}"/.cache' &&     su "${CONTAINER_USER}" -c
      'mkdir -p /home/${CONTAINER_USER}/.local/share' &&     rm -rvf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"${CONTAINER_LOCALE}"'
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: '"${CONTAINER_LANG}"'
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"${CONTAINER_LOCALE}"'
    Name: env
  - Env:
    - Key: SHELL
      Value: '"${CONTAINER_SHELL}"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"${CONTAINER_ENTRYPOINT}"'
    - /home/"${CONTAINER_USER}"/.container/entrypoint.sh
  - CmdLine:
    - chown -R "${CONTAINER_USER}":"${CONTAINER_USER}" /home/"${CONTAINER_USER}"/.container
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
