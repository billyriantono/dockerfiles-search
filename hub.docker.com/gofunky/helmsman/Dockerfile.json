{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "kube",
      "BaseName": "gofunky/kubernetes:v1.11.2",
      "SourceCode": "FROM gofunky/kubernetes:v1.11.2 as kube",
      "Platform": "",
      "As": "kube",
      "From": {
        "Image": "gofunky/kubernetes:v1.11.2"
      },
      "Commands": null
    },
    {
      "Name": "builder",
      "BaseName": "golang:1.10.3-alpine3.7",
      "SourceCode": "FROM golang:1.10.3-alpine3.7 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:1.10.3-alpine3.7"
      },
      "Commands": [
        {
          "Key": "HELM_VERSION",
          "Name": "arg",
          "Value": "v2.10.0-rc.3"
        },
        {
          "Chown": "",
          "From": "kube",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/kubectl",
            "/usr/local/bin/kubectl"
          ]
        },
        {
          "CmdLine": [
            "apk add --update --no-cache ca-certificates git     \u0026\u0026 apk add --update -t deps curl tar gzip make bash     \u0026\u0026 curl -L https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar zxv -C /tmp     \u0026\u0026 mv /tmp/linux-amd64/helm /usr/local/bin/helm     \u0026\u0026 chmod +x /usr/local/bin/helm     \u0026\u0026 rm -rf /tmp/linux-amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/BurntSushi/toml     \u0026\u0026 go get github.com/goreleaser/goreleaser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "src/helmsman"
        }
      ]
    }
  ]
}