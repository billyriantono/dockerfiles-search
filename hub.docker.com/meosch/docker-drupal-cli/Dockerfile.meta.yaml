MetaArgs: null
Stages:
- BaseName: debian:wheezy
  Commands:
  - Maintainer: Leonid Makarov <leonid.makarov@blinkreaction.com>
    Name: maintainer
  - CmdLine:
    - echo '#!/bin/sh\nexit 101' > /usr/sbin/policy-rc.d && chmod +x /usr/sbin/policy-rc.d
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/main/main contrib non-free/' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     curl     wget     zip     git     mysql-client     pv     openssh-client     rsync     ca-certificates     apt-transport-https     locales     mc     supervisor     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales &&     locale-gen C.UTF-8 &&     /usr/sbin/update-locale
      LANG=C.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - curl -sSL http://www.dotdeb.org/dotdeb.gpg | apt-key add - &&     echo 'deb
      http://packages.dotdeb.org wheezy-php56 all' > /etc/apt/sources.list.d/dotdeb.list
      &&     echo 'deb-src http://packages.dotdeb.org wheezy-php56 all' >> /etc/apt/sources.list.d/dotdeb.list
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     php5-common     php5-cli     php-pear     php5-mysql     php5-imagick     php5-mcrypt     php5-curl     php5-gd     php5-sqlite     php5-json     php5-intl     php5-fpm     php5-memcache     php5-xdebug     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DRUSH_VERSION
      Value: 7.*
    Name: env
  - Env:
    - Key: DRUPAL_CONSOLE_VERSION
      Value: 0.10.1
    Name: env
  - CmdLine:
    - curl -sSL https://getcomposer.org/installer | php &&     mv composer.phar /usr/local/bin/composer
      &&     curl -sSL https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar
      -o /usr/local/bin/drush &&     chmod +x /usr/local/bin/drush &&     curl -sSL
      https://github.com/hechoendrupal/DrupalConsole/releases/download/$DRUPAL_CONSOLE_VERSION/drupal.phar
      -o /usr/local/bin/drupal &&     chmod +x /usr/local/bin/drupal
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/docker/.composer/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p /var/www/docroot &&     sed -i 's/memory_limit = .*/memory_limit =
      256M/' /etc/php5/fpm/php.ini &&     sed -i 's/max_execution_time = .*/max_execution_time
      = 300/' /etc/php5/fpm/php.ini &&     sed -i 's/upload_max_filesize = .*/upload_max_filesize
      = 500M/' /etc/php5/fpm/php.ini &&     sed -i 's/post_max_size = .*/post_max_size
      = 500M/' /etc/php5/fpm/php.ini &&     sed -i '/error_log = php_errors.log/c\error_log
      = \/dev\/stdout/' /etc/php5/fpm/php.ini &&     sed -i '/listen = /c\listen =
      0.0.0.0:9000' /etc/php5/fpm/pool.d/www.conf &&     sed -i '/listen.allowed_clients/c\;listen.allowed_clients
      =' /etc/php5/fpm/pool.d/www.conf &&     sed -i '/;daemonize = yes/c\daemonize
      = no' /etc/php5/fpm/php-fpm.conf &&     sed -i '/;catch_workers_output/c\catch_workers_output
      = yes' /etc/php5/fpm/php-fpm.conf &&     sed -i 's/memory_limit = .*/memory_limit
      = 512M/' /etc/php5/cli/php.ini &&     sed -i 's/max_execution_time = .*/max_execution_time
      = 600/' /etc/php5/cli/php.ini &&     sed -i '/error_log = php_errors.log/c\error_log
      = \/dev\/stdout/' /etc/php5/cli/php.ini &&     echo 'opcache.memory_consumption=128'
      >> /etc/php5/mods-available/opcache.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php5/xdebug.ini
    - /etc/php5/mods-available/xdebug.ini
  - CmdLine:
    - curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add
      - &&     echo 'deb https://deb.nodesource.com/node_0.12 wheezy main' > /etc/apt/sources.list.d/nodesource.list
      &&     echo 'deb-src https://deb.nodesource.com/node_0.12 wheezy main' >> /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     ruby1.9.1-full     rlwrap     make     gcc     nodejs     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&    rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - Env:
    - Key: BUNDLE_PATH
      Value: .bundler
    Name: env
  - CmdLine:
    - npm install -g grunt-cli bower
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.ssh
    - /root/.ssh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.drush
    - /root/.drush
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /opt/startup.sh
  - Name: expose
    Ports:
    - "9000"
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: SSH_KEY_NAME
      Value: id_rsa
    Name: env
  - CmdLine:
    - /opt/startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/supervisord -n
    Name: cmd
    PrependShell: true
  From:
    Image: debian:wheezy
  Name: ""
  Platform: ""
  SourceCode: FROM debian:wheezy
