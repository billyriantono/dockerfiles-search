{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "Leonid Makarov \u003cleonid.makarov@blinkreaction.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo '#!/bin/sh\\nexit 101' \u003e /usr/sbin/policy-rc.d \u0026\u0026 chmod +x /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/main/main contrib non-free/' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y --force-yes --no-install-recommends install     curl     wget     zip     git     mysql-client     pv     openssh-client     rsync     ca-certificates     apt-transport-https     locales     mc     supervisor     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure locales \u0026\u0026     locale-gen C.UTF-8 \u0026\u0026     /usr/sbin/update-locale LANG=C.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL http://www.dotdeb.org/dotdeb.gpg | apt-key add - \u0026\u0026     echo 'deb http://packages.dotdeb.org wheezy-php56 all' \u003e /etc/apt/sources.list.d/dotdeb.list \u0026\u0026     echo 'deb-src http://packages.dotdeb.org wheezy-php56 all' \u003e\u003e /etc/apt/sources.list.d/dotdeb.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y --force-yes --no-install-recommends install     php5-common     php5-cli     php-pear     php5-mysql     php5-imagick     php5-mcrypt     php5-curl     php5-gd     php5-sqlite     php5-json     php5-intl     php5-fpm     php5-memcache     php5-xdebug     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DRUSH_VERSION",
              "Value": "7.*"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUPAL_CONSOLE_VERSION",
              "Value": "0.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     curl -sSL https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar -o /usr/local/bin/drush \u0026\u0026     chmod +x /usr/local/bin/drush \u0026\u0026     curl -sSL https://github.com/hechoendrupal/DrupalConsole/releases/download/$DRUPAL_CONSOLE_VERSION/drupal.phar -o /usr/local/bin/drupal \u0026\u0026     chmod +x /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/docker/.composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/docroot \u0026\u0026     sed -i 's/memory_limit = .*/memory_limit = 256M/' /etc/php5/fpm/php.ini \u0026\u0026     sed -i 's/max_execution_time = .*/max_execution_time = 300/' /etc/php5/fpm/php.ini \u0026\u0026     sed -i 's/upload_max_filesize = .*/upload_max_filesize = 500M/' /etc/php5/fpm/php.ini \u0026\u0026     sed -i 's/post_max_size = .*/post_max_size = 500M/' /etc/php5/fpm/php.ini \u0026\u0026     sed -i '/error_log = php_errors.log/c\\error_log = \\/dev\\/stdout/' /etc/php5/fpm/php.ini \u0026\u0026     sed -i '/listen = /c\\listen = 0.0.0.0:9000' /etc/php5/fpm/pool.d/www.conf \u0026\u0026     sed -i '/listen.allowed_clients/c\\;listen.allowed_clients =' /etc/php5/fpm/pool.d/www.conf \u0026\u0026     sed -i '/;daemonize = yes/c\\daemonize = no' /etc/php5/fpm/php-fpm.conf \u0026\u0026     sed -i '/;catch_workers_output/c\\catch_workers_output = yes' /etc/php5/fpm/php-fpm.conf \u0026\u0026     sed -i 's/memory_limit = .*/memory_limit = 512M/' /etc/php5/cli/php.ini \u0026\u0026     sed -i 's/max_execution_time = .*/max_execution_time = 600/' /etc/php5/cli/php.ini \u0026\u0026     sed -i '/error_log = php_errors.log/c\\error_log = \\/dev\\/stdout/' /etc/php5/cli/php.ini \u0026\u0026     echo 'opcache.memory_consumption=128' \u003e\u003e /etc/php5/mods-available/opcache.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php5/xdebug.ini",
            "/etc/php5/mods-available/xdebug.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \u0026\u0026     echo 'deb https://deb.nodesource.com/node_0.12 wheezy main' \u003e /etc/apt/sources.list.d/nodesource.list \u0026\u0026     echo 'deb-src https://deb.nodesource.com/node_0.12 wheezy main' \u003e\u003e /etc/apt/sources.list.d/nodesource.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y --force-yes --no-install-recommends install     ruby1.9.1-full     rlwrap     make     gcc     nodejs     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get clean \u0026\u0026    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_PATH",
              "Value": ".bundler"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/.ssh",
            "/root/.ssh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/.drush",
            "/root/.drush"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startup.sh",
            "/opt/startup.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_KEY_NAME",
              "Value": "id_rsa"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/opt/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord -n"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}