MetaArgs: null
Stages:
- BaseName: debian:wheezy
  Commands:
  - Maintainer: Frederick J. Henderson <frederickjh@henderson-meier.org>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tbuild-essential \tcurl \twget \tunzip
      \tnano \topenssh-server \topenjdk-7-jdk \tpython-pip \tpython-virtualenv \tsupervisor"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://http.debian.net/debian wheezy-backports main" > /etc/apt/sources.list.d/wheezy-backports.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get -t wheezy-backports install -y -qq git mercurial
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\n\ndeb http://packages.dotdeb.org wheezy all\ndeb-src http://packages.dotdeb.org
      wheezy all\n\n' >>  /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\n\ndeb http://packages.dotdeb.org wheezy-php56 all\ndeb-src http://packages.dotdeb.org
      wheezy-php56 all\n\n' >>  /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - https://www.dotdeb.org/dotdeb.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://download.opensuse.org/repositories/shells:/fish:/release:/2/Debian_7.0/
      /' >> /etc/apt/sources.list.d/fish.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - http://download.opensuse.org/repositories/shells:fish:release:2/Debian_7.0/Release.key
      | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tapache2 \tlibapache2-mod-php5 \tmysql-client \tphp5-fpm
      \tphp5-dev \tphp-pear \tphp5-cli \tphp5-mysql \tphp5-gd \tphp5-curl \tphp5-mcrypt
      \  sudo   fish"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL "https://github.com/tianon/gosu/releases/download/1.7/gosu-$(dpkg
      --print-architecture)" -o /usr/local/bin/gosu &&     chown root:users /usr/local/bin/gosu
      &&     chmod +sx /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -s /bin/bash -g users -G sudo -p docker docker &&     echo 'docker
      ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /tmp/hub-linux-amd64-2.2.5.tgz https://github.com/github/hub/releases/download/v2.2.5/hub-linux-amd64-2.2.5.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -zxvf /tmp/hub-linux-amd64-2.2.5.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ./hub-linux-amd64-2.2.5/bin/hub /usr/local/sbin
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ./hub-linux-amd64-2.2.5/etc/hub.bash_completion.sh /usr/local/sbin
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ./hub-linux-amd64-2.2.5
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/hub-linux-amd64-2.2.5.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/display_errors = Off/display_errors = On/' /etc/php5/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/display_errors = Off/display_errors = On/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/memory_limit = 128M/memory_limit = 384M/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/max_execution_time = 30/max_execution_time = 600/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/max_input_time = 60/max_input_time = 120/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 300M/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/zlib.output_compression = Off/zlib.output_compression = On/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/;date.timezone =/date.timezone = "UTC"/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/;opcache.memory_consumption=64/opcache.memory_consumption=128/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/user = /c user = docker/' /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/sites-available/default
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Listen 8080" >> /etc/apache2/ports.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/VirtualHost \*:80/VirtualHost \*/' /etc/apache2/sites-available/default
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's@DocumentRoot /var/www@DocumentRoot /var/www/docroot@' /etc/apache2/sites-available/default
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's@Directory /var/www/@Directory /var/www/docroot@' /etc/apache2/sites-available/default
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '*\n' | a2enmod
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G users www-data
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mysql-server mysql-server/root_password password " | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mysql-server mysql-server/root_password_again password " | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mysql-server
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dockerfilescripts/my.cnf
    - /etc/mysql/conf.d/my.cnf
  - CmdLine:
    - chmod 644 /etc/mysql/conf.d/my.cnf
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/share/doc/mysql-server-5.6/examples/my-default.cnf /usr/share/mysql/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dockerfilescripts/run.sh
    - /run.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dockerfilescripts/create_first_admin_user.sh
    - /create_first_admin_user.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dockerfilescripts/create_database_and_users.sh
    - /create_database_and_users.sh
  - CmdLine:
    - chmod 755 /*.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3306"
  - Name: volume
    Volumes:
    - /var/log/mysql
    - /etc/mysqld
    - /var/run/mysqld
  - CmdLine:
    - sed -i -e 's/^bind-address\s*=\s*127.0.0.1/#bind-address = 127.0.0.1/' /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:root' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd && chmod 0755 /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.ssh/ && touch /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\n' | pecl install uploadprogress
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\nextension = uploadprogress.so\n\n' >> /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '\n[inet_http_server]\nport = *:9001\nusername = supervisor\npassword
      = supervisor\n\n' >> /etc/supervisor/supervisord.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '[program:apache2]\ncommand=/bin/bash -c "source /etc/apache2/envvars
      && exec /usr/sbin/apache2 -DFOREGROUND"\nautorestart=true\n\n' >> /etc/supervisor/supervisord.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '[program:mysql]\ncommand=/usr/bin/pidproxy /var/run/mysqld/mysqld.pid
      /usr/sbin/mysqld\nautorestart=true\n\n' >> /etc/supervisor/supervisord.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '[program:sshd]\ncommand=/usr/sbin/sshd -D\n\n' >> /etc/supervisor/supervisord.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/public_html
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R docker:www-data /var/www/ &&     chmod g+w -R /var/www/ &&     chmod
      g+s /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/share/adminer
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -c http://www.adminer.org/latest.php -O /usr/share/adminer/adminer.php
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '<?php phpinfo(); ?>' >> /usr/share/adminer/phpinfo.php
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e 'Alias /phpinfo /usr/share/adminer/phpinfo.php' > /etc/apache2/mods-available/adminer.load
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e 'Alias /adminer /usr/share/adminer/adminer.php' >> /etc/apache2/mods-available/adminer.load
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '*\n' | a2enmod
    Name: run
    PrependShell: true
  - CmdLine:
    - service apache2 restart
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s -T /var/www/adminer.sql.gz /usr/share/adminer/adminer.sql.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s -T /var/www/adminer.sql /usr/share/adminer/adminer.sql
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php
    Name: run
    PrependShell: true
  - CmdLine:
    - mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/docker/.composer/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir /.home-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.home-localdev
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu root chown docker:users /.home-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu root chown docker:users /.home-localdev
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - gosu root chown -R docker:users /home/docker
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require drush/drush:8.* &&   mkdir $HOME/drush6 && cd $HOME/drush6
      && composer require drush/drush:6.* &&   mkdir $HOME/drush7 && cd $HOME/drush7
      && composer require drush/drush:7.* &&   composer global require drupal/coder
      &&   phpcs --config-set installed_paths $HOME/.composer/vendor/drupal/coder/coder_sniffer
      &&   echo "alias drupalcs=\"phpcs --standard=Drupal --extensions='php,module,inc,install,test,profile,theme,css,info,txt'\""
      >> $HOME/.bash_aliases
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require drupal/console:@stable
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global update
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/docker/.ssh/ && touch /home/docker/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu root chown -R docker:users /home/docker
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Name: expose
    Ports:
    - "22"
    - "27017"
    - "28017"
    - "3306"
    - "80"
    - "9001"
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:wheezy
  Name: ""
  Platform: ""
  SourceCode: FROM debian:wheezy
