{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.24-apache-stretch",
      "SourceCode": "FROM php:7.2.24-apache-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.2.24-apache-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"tech@float.com\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install     bzip2 git nano wget zip unzip     libmcrypt-dev libzzip-dev zziplib-bin zlib1g-dev     dialog apt-utils     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install zip \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis-4.3.0 \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mcrypt-1.0.1 \u0026\u0026 docker-php-ext-enable mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget http://ftp.se.debian.org/debian/pool/main/o/openssl/libssl1.1_1.1.0l-1~deb9u1_amd64.deb \u0026\u0026     dpkg -i libssl1.1_1.1.0l-1~deb9u1_amd64.deb \u0026\u0026     wget http://in.archive.ubuntu.com/ubuntu/ubuntu/pool/universe/libr/librabbitmq/librabbitmq4_0.8.0-1build1_amd64.deb \u0026\u0026 \twget http://in.archive.ubuntu.com/ubuntu/ubuntu/pool/universe/libr/librabbitmq/librabbitmq-dev_0.8.0-1build1_amd64.deb \u0026\u0026     dpkg -i librabbitmq4_0.8.0-1build1_amd64.deb \u0026\u0026 dpkg -i librabbitmq-dev_0.8.0-1build1_amd64.deb \u0026\u0026     pecl install amqp-1.9.4 \u0026\u0026 docker-php-ext-enable amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer-install.sh",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "/tmp/composer-install.sh \u0026\u0026 mv /usr/local/bin/composer.phar /usr/local/bin/composer \u0026\u0026     /usr/local/bin/composer global require \"fxp/composer-asset-plugin\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/php/etc-php/conf-d",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/php/etc-php/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./www/html",
            "/var/www/html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./www/composer.json",
            "/var/www/composer.json"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer install -o"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        }
      ]
    }
  ]
}