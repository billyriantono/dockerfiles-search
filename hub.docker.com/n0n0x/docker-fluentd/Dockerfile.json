{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"TAGOMORI Satoshi \u003ctagomoris@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Fluentd docker image\""
            },
            {
              "Key": "Vendor",
              "Value": "\"Fluent Organization\""
            },
            {
              "Key": "Version",
              "Value": "\"1.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_VERSION",
              "Value": "1.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SU_EXEC_VERSION",
              "Value": "0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apk update  \u0026\u0026 apk upgrade  \u0026\u0026 apk add --no-cache         ca-certificates         ruby ruby-irb         su-exec==${SU_EXEC_VERSION}-r0         dumb-init==${DUMB_INIT_VERSION}-r0  \u0026\u0026 apk add --no-cache --virtual .build-deps         build-base         ruby-dev wget gnupg  \u0026\u0026 update-ca-certificates  \u0026\u0026 echo 'gem: --no-document' \u003e\u003e /etc/gemrc  \u0026\u0026 gem install oj -v 2.18.3  \u0026\u0026 gem install json -v 2.1.0  \u0026\u0026 gem install fluentd -v 0.12.43  \u0026\u0026 gem install fluent-plugin-s3 -v 0.6.8  \u0026\u0026 gem install fluent-plugin-amqp2  \u0026\u0026 apk del .build-deps  \u0026\u0026 rm -rf /var/cache/apk/*  \u0026\u0026 rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /fluentd/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /fluentd/etc /fluentd/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fluent.conf",
            "/fluentd/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FLUENTD_OPT",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FLUENTD_CONF",
              "Value": "\"fluent.conf\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_PRELOAD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_SETSID",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "24224",
            "5140"
          ]
        },
        {
          "CmdLine": [
            "/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "exec fluentd -c /fluentd/etc/${FLUENTD_CONF} -p /fluentd/plugins $FLUENTD_OPT"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}