MetaArgs: null
Stages:
- BaseName: mhart/alpine-node:6.8
  Commands:
  - Key: HACKMD_VERSION
    Name: arg
    Value: 0.4.5
  - Env:
    - Key: HACKMD_REPO_URL
      Value: https://github.com/hackmdio/hackmd.git
    Name: env
  - Env:
    - Key: HACKMD_DIR
      Value: /opt/hackmd
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: hackmd
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: hackmdpass
    Name: env
  - Env:
    - Key: POSTGRES_DB
      Value: hackmd
    Name: env
  - Env:
    - Key: POSTGRES_HOST
      Value: database
    Name: env
  - Env:
    - Key: POSTGRES_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: CFG_URLADDPORT
      Value: "true"
    Name: env
  - Env:
    - Key: CFG_DIALECT
      Value: postgres
    Name: env
  - Env:
    - Key: CFG_DOMAIN
      Value: '"hackmd.io"'
    Name: env
  - Env:
    - Key: CFG_URL_PATH
      Value: '"hackmd"'
    Name: env
  - Env:
    - Key: CFG_DEBUG
      Value: "false"
    Name: env
  - Env:
    - Key: CFG_GOOGLE_API_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: CFG_GOOGLE_CLIENT_ID
      Value: '""'
    Name: env
  - Env:
    - Key: CFG_DROPBOX_APP_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - CmdLine:
    - apk add --update     git     python     alpine-sdk &&     git clone ${HACKMD_REPO_URL}
      ${HACKMD_DIR} &&     cd /opt/hackmd &&     git checkout tags/${HACKMD_VERSION}
      -b release-${HACKMD_VERSION} &&     npm install &&     npm install -g bower
      &&     bower install --allow-root
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/*
    - ${HACKMD_DIR}/
  - Name: workdir
    Path: ${HACKMD_DIR}
  - CmdLine:
    - /opt/hackmd/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "3000"
  From:
    Image: mhart/alpine-node:6.8
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:6.8
