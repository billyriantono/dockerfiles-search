{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2",
      "SourceCode": "FROM php:7.2",
      "Platform": "",
      "From": {
        "Image": "php:7.2"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.11.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         wget gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026   echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev         zlib1g-dev libicu-dev g++ apt-transport-https nodejs build-essential libssl-dev nodejs-legacy     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv bcmath mbstring     \u0026\u0026 docker-php-ext-configure intl     \u0026\u0026 docker-php-ext-install intl zip     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install exif"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y git libssh2-1 libssh2-1-dev \u0026\u0026     pecl install ssh2-1.1.2;     pecl install mcrypt-1.0.1     docker-php-ext-enable ssh2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install mysql-server mysql-client mysql-common vim ruby-full git     xvfb default-jdk iceweasel redis-server perl pwgen zip unzip libsqlite3-dev curl rabbitmq-server libxml2-dev     libmemcached-dev yarn -yqq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libmagickwand-6.q16-dev --no-install-recommends    \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/ImageMagick-6.8.9/bin-Q16/MagickWand-config /usr/bin    \u0026\u0026 pecl install imagick    \u0026\u0026 echo \"extension=imagick.so\" \u003e /usr/local/etc/php/conf.d/ext-imagick.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\"   \u0026\u0026 tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.gz\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower less@2.7.2 gulp grunt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm i nohup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install sass mailcatcher capistrano capistrano-symfony capistrano-composer capistrano-file-permissions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.0.jar \u003e selenium-server-standalone-2.53.0.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached   \u0026\u0026 cd /usr/src/php/ext/memcached \u0026\u0026 git checkout -b php7 origin/php7   \u0026\u0026 docker-php-ext-configure memcached   \u0026\u0026 docker-php-ext-install memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026     apt-get -yqq update \u0026\u0026     apt-get -yqq install google-chrome-stable \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` \u0026\u0026     mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION \u0026\u0026     curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip \u0026\u0026     unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION \u0026\u0026     rm /tmp/chromedriver_linux64.zip \u0026\u0026     chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver \u0026\u0026     ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb \u0026\u0026 echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/ext-mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "80"
          ]
        },
        {
          "CmdLine": [
            "curl -L -O https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.3.4/elasticsearch-2.3.4.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xvf elasticsearch-2.3.4.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit = 2048M\" \u003e /usr/local/etc/php/conf.d/memory.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"readfile('https://getcomposer.org/installer');\" \u003e composer-setup.php \u0026\u0026 php composer-setup.php \u0026\u0026 rm composer-setup.php \u0026\u0026     mv composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/var/www/app\""
        }
      ]
    }
  ]
}