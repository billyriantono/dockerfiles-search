MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: ARANGO_NO_AUTH
      Value: "1"
    Name: env
  - Env:
    - Key: ARANGO_VERSION
      Value: 3.4.0
    Name: env
  - Env:
    - Key: ARANGO_URL
      Value: https://download.arangodb.com/arangodb34/DEBIAN/amd64
    Name: env
  - Env:
    - Key: ARANGO_PACKAGE
      Value: arangodb3_${ARANGO_VERSION}-1_amd64.deb
    Name: env
  - Env:
    - Key: ARANGO_PACKAGE_URL
      Value: ${ARANGO_URL}/${ARANGO_PACKAGE}
    Name: env
  - Env:
    - Key: ARANGO_SIGNATURE_URL
      Value: ${ARANGO_PACKAGE_URL}.asc
    Name: env
  - CmdLine:
    - apk add --no-cache gnupg pwgen nodejs npm binutils &&     npm install -g foxx-cli
      &&     rm -rf /root/.npm
    Name: run
    PrependShell: true
  - CmdLine:
    - GPG_KEYS=CD8CB0F1E0AD5B52E93F41E7EA93F5E56E751E9B &&    ( gpg --keyserver ipv4.pool.sks-keyservers.net
      --recv-keys "$GPG_KEYS"   || gpg --keyserver hkps://hkps.pool.sks-keyservers.net
      --recv-keys "$GPG_KEYS" )
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp                                &&     wget ${ARANGO_SIGNATURE_URL}           &&     wget
      ${ARANGO_PACKAGE_URL}             &&     gpg --verify ${ARANGO_PACKAGE}.asc     &&     ar
      x ${ARANGO_PACKAGE} data.tar.gz     &&     tar -C / -x -z -f data.tar.gz          &&     sed
      -ri         -e 's!^(file\s*=).*!\1 -!'         -e 's!^\s*uid\s*=.*!!'         /etc/arangodb3/arangod.conf        &&     echo
      chgrp 0 /var/lib/arangodb3 /var/lib/arangodb3-apps &&     echo chmod 775 /var/lib/arangodb3
      /var/lib/arangodb3-apps &&     rm -f ${ARANGO_PACKAGE}* data.tar.gz
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/arangodb3
    - /var/lib/arangodb3-apps
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /code
  - Name: workdir
    Path: /code/
  - CmdLine:
    - mkdir -p /docker-entrypoint-initdb.d/dumps/_system/ && cp dumps/* /docker-entrypoint-initdb.d/dumps/_system/
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8529"
  - CmdLine:
    - arangod
    - --server.maximal-threads=16
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
