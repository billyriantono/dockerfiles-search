MetaArgs: null
Stages:
- BaseName: ubuntu:12.04
  Commands:
  - CmdLine:
    - "locale-gen en_US.UTF-8 &&\tupdate-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&apt-get install -q -y autoconf binutils-doc bison build-essential
      flex
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y ruby-rvm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y varnish
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cartodb/postgresql-9.5 && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y libpq5                      libpq-dev                      postgresql-client-9.5                      postgresql-client-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y postgresql-9.5                      postgresql-contrib-9.5                      postgresql-server-dev-9.5                      postgresql-plpython-9.5
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\(peer\|md5\)/trust/' /etc/postgresql/9.5/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql start && createuser publicuser --no-createrole --no-createdb
      --no-superuser -U postgres && createuser tileuser --no-createrole --no-createdb
      --no-superuser -U postgres && service postgresql stop
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/CartoDB/cartodb-postgresql.git &&cd cartodb-postgresql
      &&PGUSER=postgres make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -q -y && add-apt-repository ppa:cartodb/gis && apt-get update
      && apt-get install -q -y proj proj-bin proj-data libproj-dev && apt-get install
      -q -y libjson0 libjson0-dev python-simplejson && apt-get install -q -y libgeos-c1v5
      libgeos-dev && apt-get install -q -y gdal-bin libgdal1-dev libgdal-dev && apt-get
      install -q -y gdal2.1-static-bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q -y install libxml2-dev &&apt-get install -q -y liblwgeom-2.2.2 postgis
      postgresql-9.5-postgis-2.2 postgresql-9.5-postgis-scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql start &&   createdb -T template0 -O postgres -U postgres
      -E UTF8 template_postgis &&  psql -U postgres template_postgis -c 'CREATE EXTENSION
      postgis;CREATE EXTENSION postgis_topology;' &&  ldconfig &&  service postgresql
      stop
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cartodb/redis && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y redis-server
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cartodb/nodejs-010 && apt-get update &&apt-get install
      -q -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://github.com/CartoDB/CartoDB-SQL-API.git &&cd CartoDB-SQL-API
      &&git checkout master &&npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://github.com/CartoDB/Windshaft-cartodb.git &&cd Windshaft-cartodb
      &&git checkout 2.87.3 &&apt-get install -q -y libpango1.0-dev &&npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -q -y wget &&wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz
      &&tar -xzvf ruby-install-0.5.0.tar.gz &&cd ruby-install-0.5.0/ &&make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q -y install libreadline6-dev openssl &&ruby-install ruby 2.2.3
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/rubies/ruby-2.2.3/bin
    Name: env
  - CmdLine:
    - gem install bundler &&gem install compass
    Name: run
    PrependShell: true
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - CmdLine:
    - git clone --recursive https://github.com/CartoDB/cartodb.git &&cd cartodb &&wget  -O
      /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py &&python /tmp/get-pip.py
      &&apt-get install -q -y python-all-dev &&apt-get install -q -y imagemagick unp
      zip &&bundle install &&npm install
    Name: run
    PrependShell: true
  - Env:
    - Key: CPLUS_INCLUDE_PATH
      Value: /usr/include/gdal
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: /usr/include/gdal
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/include/gdal
    Name: env
  - CmdLine:
    - cd cartodb && pip install --no-use-wheel -r python_requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/SQLAPI-prod.js
    - /CartoDB-SQL-API/config/environments/production.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/WS-prod.js
    - /Windshaft-cartodb/config/environments/production.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/app_config.yml
    - /cartodb/config/app_config.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/database.yml
    - /cartodb/config/database.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/grunt_production.json
    - /cartodb/config/grunt_production.json
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - cd cartodb &&    npm install npm@2.14.9 -g &&    npm -v &&    export PATH=$PATH:$PWD/node_modules/grunt-cli/bin
      &&    bundle install &&    bundle exec grunt --environment production
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql start && service redis-server start &&    cd cartodb &&    bundle
      exec rake db:create &&    bundle exec rake db:migrate &&    service postgresql
      stop && service redis-server stop
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./create_user
    - /cartodb/script/create_user
  - CmdLine:
    - "service postgresql start && service redis-server start && \tbash -l -c \"cd
      /cartodb && bash script/create_user\" && \tservice postgresql stop && service
      redis-server stop"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
    - "8080"
    - "8181"
  - Env:
    - Key: GDAL_DATA
      Value: /usr/share/gdal/2.1
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./startup.sh
    - /opt/startup.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/varnish
    - /etc/default/varnish
  - Name: volume
    Volumes:
    - /etc/postgresql
    - /var/log/postgresql
    - /var/lib/postgresql
  - CmdLine:
    - /bin/bash
    - /opt/startup.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:12.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:12.04
