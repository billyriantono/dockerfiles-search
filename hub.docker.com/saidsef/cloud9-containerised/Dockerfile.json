{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:13-slim",
      "SourceCode": "FROM node:13-slim",
      "Platform": "",
      "From": {
        "Image": "node:13-slim"
      },
      "Commands": [
        {
          "Maintainer": "Said Sef \u003csaidsef@gmail.com\u003e (saidsef.co.uk/)",
          "Name": "maintainer"
        },
        {
          "Key": "PORT",
          "Name": "arg",
          "Value": "\"9099\""
        },
        {
          "Key": "AUTH",
          "Name": "arg",
          "Value": "\":\""
        },
        {
          "Env": [
            {
              "Key": "AUTH",
              "Value": "${AUTH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOALNG_VERSION",
              "Value": "1.13.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DEB",
              "Value": "0.5.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "${PORT}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get --no-install-recommends --force-yes -yq install vim     apt-transport-https ca-certificates gnupg2 software-properties-common     build-essential git curl locales \u0026\u0026     locale-gen \"en_US.UTF-8\" \u0026\u0026     curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" \u0026\u0026     curl -fsSL https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get-helm-3 | bash \u0026\u0026     apt-get update \u0026\u0026     apt-get --no-install-recommends --force-yes -yq install     python3 python3-pip python3-dev python2.7 python-pip python-daemon python-dev jq docker-ce graphviz imagemagick mercurial \u0026\u0026     echo \"LC_ALL=en_US.UTF-8\" \u003e\u003e /etc/environment \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"LANG=en_US.UTF-8\" \u003e /etc/locale.conf \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     cd /tmp \u0026\u0026     curl -LO https://dl.google.com/go/go${GOALNG_VERSION}.linux-amd64.tar.gz \u0026\u0026     curl -LO https://github.com/golang/dep/releases/download/v${GOLANG_DEB}/dep-linux-amd64 \u0026\u0026     tar xf go${GOALNG_VERSION}.linux-amd64.tar.gz \u0026\u0026     mv go /usr/local \u0026\u0026     ln -s /usr/local/go/bin/go /usr/local/bin/go \u0026\u0026     ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc \u0026\u0026     ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt \u0026\u0026     mv dep-linux-amd64 /usr/local/bin/go-deb \u0026\u0026     chmod a+x /usr/local/bin/go-deb \u0026\u0026     rm -rf /tmp/* \u0026\u0026     /usr/bin/pip3 install -U botocore boto3 pipenv \u0026\u0026     mkdir -p /app/workspace /app/bin \u0026\u0026     echo \"export PATH=$PATH:/app/bin\" \u003e\u003e /etc/environment \u0026\u0026     useradd -m -d /app -s /bin/bash -U cloud9 \u0026\u0026     usermod -aG docker cloud9 \u0026\u0026     chown -R cloud9:cloud9 /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "cloud9"
        },
        {
          "CmdLine": [
            "git clone --depth 2 https://github.com/c9/core.git c9sdk \u0026\u0026     ./c9sdk/scripts/install-sdk.sh \u0026\u0026     ./c9sdk/scripts/update-npm.sh \u0026\u0026     ln -s /app/c9sdk/bin/c9 /app/bin/c9 \u0026\u0026     git config --global credential.helper 'cache --timeout=3000'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/workspace"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "${PORT}"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/node c9sdk/server.js -a ${AUTH} -l 0.0.0.0 -p ${PORT} -w ./workspace --collab --no-cache"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}