{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fedora:30",
      "SourceCode": "FROM fedora:30",
      "Platform": "",
      "From": {
        "Image": "fedora:30"
      },
      "Commands": [
        {
          "Maintainer": "info@vlad.eu",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "default"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP",
              "Value": "default"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/default"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dnf -y update \u0026\u0026     dnf -y install nss_wrapper procps htop mc mlocate wget tar bzip2         git make ed vim         iproute hostname net-tools bind-utils telnet         libXext libXrender libXtst re2-devel freetype fontconfig         libcurl-devel openssl-devel     \u0026\u0026 dnf clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 1000 ${GROUP}     \u0026\u0026 useradd -u 1000 -r --gid 1000 -G wheel -m -d ${HOME} -s /bin/bash -c \"Developer user\" ${USER}     \u0026\u0026 chmod -R 755 ${HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed '1 a\\if [ -e /tmp/passwd ] ; then \\n      export NSS_WRAPPER_PASSWD=/tmp/passwd \\n      [ -e /tmp/group ] \u0026\u0026 export NSS_WRAPPER_GROUP=/tmp/group \\n      export LD_PRELOAD=/usr/lib64/libnss_wrapper.so \\n    fi' -i /etc/skel/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BASH_IT_ENABLE",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASH_IT_THEME",
              "Value": "standard"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCM_CHECK",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASH_IT",
              "Value": "/opt/bash-it"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/revans/bash-it.git ${BASH_IT}     \u0026\u0026 echo '[[ ${BASH_IT_ENABLE} = 'true' ]] \u0026\u0026 . ${BASH_IT}/bash_it.sh' \u003e\u003e /etc/skel/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/workspace"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}