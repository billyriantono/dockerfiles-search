MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: SPARK_HOME
      Value: /spark
    Name: env
  - Env:
    - Key: SPARK_VERSION
      Value: 2.4.1
    Name: env
  - Env:
    - Key: HADOOP_VERSION
      Value: 2.7.3
    Name: env
  - Env:
    - Key: SCALA_VERSION
      Value: 2.12.8
    Name: env
  - Env:
    - Key: MAIN_SCALA_VERSION
      Value: "2.12"
    Name: env
  - Env:
    - Key: SCALA_HOME
      Value: /usr/share/scala
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 1.2.8
    Name: env
  - Env:
    - Key: SCARK_CLI_VERSION
      Value: 1.1.0
    Name: env
  - CmdLine:
    - apk update &&     apk upgrade &&     apk add --no-cache     bash     ca-certificates     curl     wget     tar     jq     unzip     vim
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache nss
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openjdk8-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache python3 &&     python3 -m ensurepip &&     pip3 install --upgrade
      pip setuptools &&     rm -r /usr/lib/python*/ensurepip &&     if [ ! -e /usr/bin/pip
      ]; then ln -s pip3 /usr/bin/pip ; fi &&     if [[ ! -e /usr/bin/python ]]; then
      ln -sf /usr/bin/python3 /usr/bin/python; fi &&     rm -r /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual=.build-dependencies &&     cd "/tmp" &&     wget
      --no-verbose "https://downloads.typesafe.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz"
      &&     tar xzf "scala-${SCALA_VERSION}.tgz" &&     mkdir "${SCALA_HOME}" &&     rm
      "/tmp/scala-${SCALA_VERSION}/bin/"*.bat &&     mv "/tmp/scala-${SCALA_VERSION}/bin"
      "/tmp/scala-${SCALA_VERSION}/lib" "${SCALA_HOME}" &&     ln -s "${SCALA_HOME}/bin/"*
      "/usr/bin/" &&     apk del .build-dependencies &&     rm -rf "/tmp/"*
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH="/usr/local/sbt/bin:$PATH" &&     apk add ca-certificates wget tar
      &&     mkdir -p "/usr/local/sbt" &&     wget -qO - --no-check-certificate "https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz"      |
      tar xz -C /usr/local/sbt --strip-components=1 && sbt sbtVersion
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-without-hadoop-scala-${MAIN_SCALA_VERSION}.tgz
      &&     tar -xzf spark-${SPARK_VERSION}-bin-without-hadoop-scala-${MAIN_SCALA_VERSION}.tgz
      &&     mv spark-${SPARK_VERSION}-bin-without-hadoop-scala-${MAIN_SCALA_VERSION}
      /spark &&     rm -rf spark-${SPARK_VERSION}-bin-without-hadoop-scala-${MAIN_SCALA_VERSION}.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://archive.apache.org/dist/hadoop/core/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz
      &&     tar -xvf hadoop-${HADOOP_VERSION}.tar.gz &&     rm -rf hadoop-${HADOOP_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /spark/conf &&     cp spark-env.sh.template ./spark-env.sh &&     echo "export
      SPARK_DIST_CLASSPATH=$(/hadoop-${HADOOP_VERSION}/bin/hadoop classpath)" >> spark-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/qbicsoftware/scark-cli/releases/download/${SCARK_CLI_VERSION}/scark-cli-${SCARK_CLI_VERSION}.jar
      &&      mkdir /opt/spark-apps &&      mv scark-cli-${SCARK_CLI_VERSION}.jar
      /opt/spark-apps
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
