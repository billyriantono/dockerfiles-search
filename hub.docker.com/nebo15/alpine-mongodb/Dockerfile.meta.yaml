MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Maintainer: Nebo#15 support@nebo15.com
    Name: maintainer
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - set -x &&     apk add --no-cache --virtual .gosu-deps         dpkg         gnupg         openssl
      &&     dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" &&     wget
      -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"
      &&     wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"
      &&     export GNUPGHOME="$(mktemp -d)" &&     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 &&     gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu &&     rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc
      &&     chmod +x /usr/local/bin/gosu &&     gosu nobody true &&     apk --purge
      del .gosu-deps
    Name: run
    PrependShell: true
  - Env:
    - Key: REFRESHED_AT
      Value: "2017-02-21"
    - Key: HOME
      Value: /data
    - Key: DB_PATH
      Value: /data/db
    - Key: MONGODB_VERSION
      Value: 3.2.10-r1
    Name: env
  - Env:
    - Key: MAX_RAM
      Value: 1GB
    Name: env
  - CmdLine:
    - echo "net.core.somaxconn = 3072" >> /etc/sysctl.conf &&     echo "net.ipv4.tcp_max_syn_backlog
      = 4096" >> /etc/sysctl.conf &&     echo "net.ipv4.conf.default.rp_filter = 0"
      >> /etc/sysctl.conf &&     echo "net.ipv4.tcp_keepalive_time = 120" >> /etc/sysctl.conf
      &&     echo "fs.file-max = 2097152" >> /etc/sysctl.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "@edge http://nl.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
      &&     apk --no-cache --update add mongodb@edge=$MONGODB_VERSION &&     rm -rf
      /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - mkdir -p $HOME &&     mkdir -p $DB_PATH &&     chmod -R 777 $HOME $DB_PATH &&     cd
      $HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - Name: volume
    Volumes:
    - $DB_PATH
  - Name: expose
    Ports:
    - "27017"
    - "28017"
  - CmdLine:
    - mongod
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
