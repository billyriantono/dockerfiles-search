MetaArgs: null
Stages:
- BaseName: golang
  Commands:
  - Maintainer: Rudolf Pliva rpliva@seznam.cz
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install curl unzip -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OL https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip     &&
      unzip protoc-3.0.0-linux-x86_64.zip -d protoc3     && mv protoc3/bin/protoc
      /usr/bin/protoc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOPATH     && mkdir -p ./src/github.com/gogo/letmegrpc     && git clone
      https://github.com/gogo/letmegrpc ./src/github.com/gogo/letmegrpc     && git
      clone https://github.com/gogo/protobuf ./src/github.com/gogo/protobuf     &&
      go get google.golang.org/grpc     && go get golang.org/x/net/context     &&
      (cd ./src/github.com/gogo/letmegrpc && make install)
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/gogo/protobuf/protoc-gen-gofast     && go get github.com/gogo/protobuf/proto     &&
      go get github.com/gogo/protobuf/jsonpb     && go get github.com/gogo/protobuf/protoc-gen-gogo     &&
      go get github.com/gogo/protobuf/gogoproto
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - protos
    - /var/letmegrpc/protos
  - Name: volume
    Volumes:
    - /var/letmegrpc/protos
  - Env:
    - Key: PROTO_FILE
      Value: '"test.proto"'
    Name: env
  - Env:
    - Key: SERVICE_ADDRESS
      Value: '"localhost:12345"'
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - letmegrpc --addr=$SERVICE_ADDRESS --httpaddr=0.0.0.0:8080 --proto_path=/var/letmegrpc/protos
      /var/letmegrpc/protos/$PROTO_FILE
    Name: cmd
    PrependShell: true
  From:
    Image: golang
  Name: ""
  Platform: ""
  SourceCode: FROM golang
