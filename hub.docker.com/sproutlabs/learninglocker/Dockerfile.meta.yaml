MetaArgs: null
Stages:
- BaseName: php:5-fpm-alpine
  Commands:
  - CmdLine:
    - "apk add --no-cache openssh-client nginx supervisor curl  gzip  tzdata \tbash
      jq autoconf g++ make openssl openssl-dev git libmcrypt-dev libpng"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/fastcgi_params
    - conf/nginx.conf
    - /etc/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/sites-enabled/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/api.conf
    - /etc/nginx/sites-enabled/api.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/
  - CmdLine:
    - docker-php-ext-install pcntl bcmath opcache zip mcrypt mbstring > /dev/null
      2>&1
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/*
    - /usr/local/bin/
  - CmdLine:
    - yes 'no' | pecl install mongo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'extension=mongo.so' >> /usr/local/etc/php/conf.d/mongo.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \techo 'opcache.memory_consumption=128'; \techo 'opcache.interned_strings_buffer=8';
      \techo 'opcache.max_accelerated_files=4000'; \techo 'opcache.revalidate_freq=60';
      \techo 'opcache.fast_shutdown=1'; \techo 'opcache.enable_cli=1'; } > /usr/local/etc/php/conf.d/opcache-recommended.ini"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - mkdir -p /var/www/html
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "curl -L -o learninglocker.tar.gz `curl -s https://api.github.com/repos/LearningLocker/learninglocker/releases/latest
      | jq --raw-output '.tarball_url'`\t&& tar -xzf learninglocker.tar.gz -C /var/www/html
      --strip-components=1 \t&& rm learninglocker.tar.gz \t&& chown -R www-data /var/www/html"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/api && ln -s  /var/www/html/public /var/www/api/ll && chown
      www-data /var/www/api/ll
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data /var/lib/nginx
    Name: run
    PrependShell: true
  - Name: user
    User: www-data
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - composer install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/html/public/js-localization/ && cp vendor/andywer/js-localization/public/js/localization.js
      /var/www/html/public/js-localization/localization.js
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "81"
  - Name: user
    User: root
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/supervisord
    - -n
    - -c
    - /etc/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: php:5-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:5-fpm-alpine
