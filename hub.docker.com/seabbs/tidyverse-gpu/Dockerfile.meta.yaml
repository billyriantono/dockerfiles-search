MetaArgs: null
Stages:
- BaseName: rocker/tidyverse:latest
  Commands:
  - Maintainer: '"Sam Abbott" contact@samabbott.co.uk'
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --force-yes --allow-unauthenticated --no-install-recommends
      --no-upgrade curl python-pip python-setuptools python-dev build-essential libopenmpi-dev
      libcurl4-openssl-dev gnupg cmake libncurses5-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_MAJOR_VERSION
      Value: "9.2"
    Name: env
  - Env:
    - Key: CUDA_MAJOR_VERSION_HYP
      Value: "9.2"
    Name: env
  - Env:
    - Key: CUDA_MINOR_VERSION
      Value: 9.2.148-1
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=9.2"'
    Name: env
  - CmdLine:
    - wget -nv -P /root/manual http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
      && echo "47217c49dcb9e47a8728b354450f694c9898cd4a126173044a69b1e9ac0fba96  /root/manual/7fa2af80.pub"
      | sha256sum -c --strict - && apt-key add /root/manual/7fa2af80.pub && wget -nv
      -P /root/manual http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_${CUDA_MINOR_VERSION}_amd64.deb
      && dpkg -i /root/manual/cuda-repo-ubuntu1604_${CUDA_MINOR_VERSION}_amd64.deb
      && echo 'deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /' > /etc/apt/sources.list.d/nvidia-ml.list && rm -rf /root/manual && apt-get
      update  && apt-get install --no-install-recommends -y cuda-toolkit-${CUDA_MAJOR_VERSION_HYP}
      libcudnn7 libcudnn7-dev && ls /usr/local/cuda-${CUDA_MAJOR_VERSION}/targets/x86_64-linux/lib/stubs/*
      | xargs -I{} ln -s {} /usr/lib/x86_64-linux-gnu/ && ln -s libcuda.so /usr/lib/x86_64-linux-gnu/libcuda.so.1
      && ln -s libnvidia-ml.so /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1 && rm -r
      -f  /usr/local/cuda/lib64/stubs
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_HOME
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: CUDA_PATH
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: PATH
      Value: $CUDA_HOME/bin:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get -y --no-install-recommends install default-jdk
      default-jre && R CMD javareconf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "rsession-ld-library-path=$LD_LIBRARY_PATH" | tee -a /etc/rstudio/rserver.conf
      && echo "Sys.setenv(CUDA_HOME=\"$CUDA_HOME\"); Sys.setenv(CUDA_PATH=\"$CUDA_PATH\");
      Sys.setenv(PATH=\"$PATH\")" | tee -a /usr/local/lib/R/etc/Rprofile.site
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wheel setuptools scipy --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install xgboost
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/dmlc/xgboost && mkdir -p xgboost/build
      && cd xgboost/build && cmake .. -DUSE_CUDA=ON -DR_LIB=ON && make install -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/latest_stable_R")'
    Name: run
    PrependShell: true
  From:
    Image: rocker/tidyverse:latest
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/tidyverse:latest
