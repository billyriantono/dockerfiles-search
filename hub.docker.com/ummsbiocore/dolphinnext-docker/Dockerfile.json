{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Alper Kucukural \u003calper.kucukural@umassmed.edu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"start\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get dist-upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y install apache2                     curl mysql-server libreadline-dev libsqlite3-dev libbz2-dev libssl-dev python python-dev                     libmysqlclient-dev python-pip git expect default-jre default-jdk                     libxml2-dev software-properties-common gdebi-core wget                     tree vim libv8-dev subversion g++ gcc gfortran zlib1g-dev libreadline-dev                     libx11-dev xorg-dev libbz2-dev liblzma-dev libpcre3-dev libcurl4-openssl-dev                     bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 sendmail                     mercurial subversion libarchive-dev uuid-dev squashfs-tools build-essential                     libgpgme11-dev libseccomp-dev pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install simple-crypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:opencpu/opencpu-2.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 apt-add-repository ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install php7.2 ssh openssh-server     php-pear php7.2-curl php7.2-dev php7.2-gd php7.2-mbstring php7.2-zip php7.2-mysql     php7.2-xml php7.2-ldap s3cmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/short_open_tag = Off/short_open_tag = On/\" /etc/php/7.2/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/\" /etc/php/7.2/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOG_DIR",
              "Value": "/var/log/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOCK_DIR",
              "Value": "/var/lock/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_PID_FILE",
              "Value": "/var/run/apache2.pid"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "apache-config.conf",
            "/etc/apache2/sites-enabled/000-default.conf"
          ]
        },
        {
          "CmdLine": [
            "echo \"ServerName localhost\" | tee /etc/apache2/conf-available/fqdn.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enconf fqdn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"locale-gen en_US.UTF-8\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"dpkg-reconfigure locales\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /var/lib/mysql -type f -exec touch {} \\; \u0026\u0026 service mysql start \u0026\u0026     service apache2 start \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -y install phpmyadmin php-mbstring php-gettext \u0026\u0026     zcat /usr/share/doc/phpmyadmin/examples/create_tables.sql.gz|mysql -uroot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -d /var/lib/mysql/ mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s#// \\$cfg\\['Servers'\\]\\[\\$i\\]\\['AllowNoPassword'\\] = TRUE;#\\$cfg\\['Servers'\\]\\[\\$i\\]\\['AllowNoPassword'\\] = TRUE;#g\" /etc/phpmyadmin/config.inc.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-enabled/phpmyadmin.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/|\\s*\\((count(\\$analyzed_sql_results\\['select_expr'\\]\\)/| (\\1)/g\" /usr/share/phpmyadmin/libraries/sql.lib.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "curl -s https://get.nextflow.io | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /data/nextflow /usr/bin/."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /usr/bin/nextflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /.nextflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 777 /.nextflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit-7.0.2.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x phpunit-7.0.2.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv phpunit-7.0.2.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITUSER",
              "Value": "UMMS-Biocore"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/${GITUSER}/dolphinnext.git /var/www/html/dolphinnext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} /var/www/html/dolphinnext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /var/lib/mysql -type f -exec touch {} \\; \u0026\u0026 service mysql start \u0026\u0026     mysql -u root -e 'CREATE DATABASE dolphinnext;' \u0026\u0026     cat /var/www/html/dolphinnext/db/dolphinnext.sql|mysql -uroot dolphinnext \u0026\u0026     cd /var/www/html/dolphinnext/db \u0026\u0026 ./runUpdate dolphinnext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/share \u0026\u0026 wget https://ftp.ncbi.nlm.nih.gov/entrez/entrezdirect/edirect.tar.gz \u0026\u0026     tar xvfz edirect.tar.gz \u0026\u0026     rm edirect.tar.gz \u0026\u0026     cd edirect \u0026\u0026 ./setup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/share/edirect/* /usr/local/sbin/."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz \u0026\u0026     tar -C /usr/local -xzf go1.12.7.linux-amd64.tar.gz \u0026\u0026     export PATH=$PATH:/usr/local/go/bin \u0026\u0026     export VERSION=3.2.1 \u0026\u0026     wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz \u0026\u0026     tar -xzf singularity-${VERSION}.tar.gz \u0026\u0026     cd singularity \u0026\u0026 ./mconfig \u0026\u0026 make -C ./builddir \u0026\u0026 make -C ./builddir install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "echo \"DONE!\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}