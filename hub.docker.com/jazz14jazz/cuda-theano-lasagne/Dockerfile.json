{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn5-devel",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn5-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn5-devel"
      },
      "Commands": [
        {
          "Maintainer": "Yong Zhuang \u003cjazz14jazz@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "bash Miniconda2-latest-Linux-x86 64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "~/miniconda2/bin/conda install numpy scipy mkl nose sphinx pydot-ng"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Theano[test,doc]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U https://github.com/Theano/Theano/archive/master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U https://github.com/Lasagne/Lasagne/archive/master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-nose        python-numpy         nano         python-scipy \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.password = u'sha1:ec5027913427:d9cca9103f70eb7b4754f4a819e177dee0a8c367'\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--port=8888",
            "--no-browser",
            "--ip=0.0.0.0"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}