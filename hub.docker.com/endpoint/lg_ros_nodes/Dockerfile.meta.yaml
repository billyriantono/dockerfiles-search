MetaArgs:
- DefaultValue: bionic
  Key: UBUNTU_RELEASE
  ProvidedValue: null
  Value: bionic
Stages:
- BaseName: ubuntu:${UBUNTU_RELEASE}
  Commands:
  - Key: UBUNTU_RELEASE
    Name: arg
    Value: null
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PROJECT_ROOT
      Value: $HOME/src/lg_ros_nodes
    Name: env
  - Env:
    - Key: ROS_DISTRO
      Value: melodic
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: all
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/docker_entrypoint.sh
    - /ros_entrypoint.sh
  - CmdLine:
    - chmod 0755 /ros_entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /ros_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     ca-certificates     gnupg     wget  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.ros.org/ros/ubuntu ${UBUNTU_RELEASE} main" > /etc/apt/sources.list.d/ros-latest.list
      &&   echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
      &&   apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
      &&   wget --no-check-certificate -q -O /tmp/key.pub https://dl-ssl.google.com/linux/linux_signing_key.pub
      && apt-key add /tmp/key.pub && rm /tmp/key.pub &&   apt-key update &&   apt-get
      update &&   apt-get install -y --no-install-recommends     automake autoconf
      libtool     g++ pycodestyle cppcheck     python-pytest wget     python-gst-1.0     python-pip     python-setuptools     python3-pip     python3-setuptools     python3-defusedxml     python3-nose     python3-pil     python3-pytest     python3-netifaces     python3-serial     python3-tornado     git
      sudo     curl tmux git     xvfb x11-apps     x-window-system binutils     pulseaudio     mesa-utils
      mesa-utils-extra     module-init-tools gdebi-core     libxext-dev     lsb-core
      tar libfreeimage3     ros-$ROS_DISTRO-rosapi libudev-dev     ros-$ROS_DISTRO-ros-base
      ros-$ROS_DISTRO-rosbridge-server ros-$ROS_DISTRO-web-video-server     ros-$ROS_DISTRO-spacenav-node
      spacenavd     google-chrome-stable google-chrome-beta google-chrome-unstable     awesome
      xdg-utils     gstreamer1.0-alsa  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -  && apt-get install
      -y nodejs  && npm install -g eslint  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir python-coveralls  && pip3 install --no-cache-dir     wheel     rospkg     catkin_pkg     evdev     bson     pyinotify     catkin_tools     empy     pycrypto     gnupg
    Name: run
    PrependShell: true
  - Env:
    - Key: GOOGLE_EARTH_VERSION
      Value: ec_7.3.0.3832_64
    Name: env
  - Env:
    - Key: EARTH_PKG_URL
      Value: https://roscoe-assets.galaxy.endpoint.com:443/google-earth/google-earth-stable_${GOOGLE_EARTH_VERSION}.deb
    Name: env
  - CmdLine:
    - mkdir -p /tmp/GE  && cd /tmp/GE  && wget $EARTH_PKG_URL  && dpkg -i $( basename
      $EARTH_PKG_URL )  && rm $( basename $EARTH_PKG_URL )  && if [ -f "/opt/google/earth/free/libfreebl3.so"
      ]; then sed -i "s_/etc/passwd_/not/anywhr_g" "/opt/google/earth/free/libfreebl3.so";
      fi
    Name: run
    PrependShell: true
  - Env:
    - Key: RUN_USER
      Value: lg
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${RUN_USER}
    Name: env
  - CmdLine:
    - useradd -ms /bin/bash $RUN_USER &&       usermod -a -G sudo,plugdev,audio,video
      $RUN_USER &&       mkdir -p $HOME/src ;      echo "source /opt/ros/$ROS_DISTRO/setup.bash"
      >> /root/.bash_profile ;      echo "source /opt/ros/$ROS_DISTRO/setup.bash"
      >> $HOME/.bash_profile ;      mv /bin/sh /bin/sh.bak && ln -s /bin/bash /bin/sh
      &&       mkdir -p $PROJECT_ROOT/src
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ros_entrypoint.sh
    - ${PROJECT_ROOT}
  - Key: APPCTL_TAG
    Name: arg
    Value: 3.0.1
  - CmdLine:
    - git clone --branch ${APPCTL_TAG} https://github.com/EndPointCorp/appctl.git
      /appctl
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -snf /appctl/appctl ${PROJECT_ROOT}/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -snf /appctl/appctl_msg_defs ${PROJECT_ROOT}/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - interactivespaces_msgs/package.xml
    - ${PROJECT_ROOT}/interactivespaces_msgs/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_activity/package.xml
    - ${PROJECT_ROOT}/lg_activity/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_attract_loop/package.xml
    - ${PROJECT_ROOT}/lg_attract_loop/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_builder/package.xml
    - ${PROJECT_ROOT}/lg_builder/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_common/package.xml
    - ${PROJECT_ROOT}/lg_common/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_earth/package.xml
    - ${PROJECT_ROOT}/lg_earth/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_json_config/package.xml
    - ${PROJECT_ROOT}/lg_json_config/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_keyboard/package.xml
    - ${PROJECT_ROOT}/lg_keyboard/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_media/package.xml
    - ${PROJECT_ROOT}/lg_media/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_mirror/package.xml
    - ${PROJECT_ROOT}/lg_mirror/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_msg_defs/package.xml
    - ${PROJECT_ROOT}/lg_msg_defs/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_nav_to_device/package.xml
    - ${PROJECT_ROOT}/lg_nav_to_device/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_lock/package.xml
    - ${PROJECT_ROOT}/lg_lock/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_offliner/package.xml
    - ${PROJECT_ROOT}/lg_offliner/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_panovideo/package.xml
    - ${PROJECT_ROOT}/lg_panovideo/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_pointer/package.xml
    - ${PROJECT_ROOT}/lg_pointer/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_proximity/package.xml
    - ${PROJECT_ROOT}/lg_proximity/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_replay/package.xml
    - ${PROJECT_ROOT}/lg_replay/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_rfreceiver/package.xml
    - ${PROJECT_ROOT}/lg_rfreceiver/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_screenshot/package.xml
    - ${PROJECT_ROOT}/lg_screenshot/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_spacenav_globe/package.xml
    - ${PROJECT_ROOT}/lg_spacenav_globe/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_stats/package.xml
    - ${PROJECT_ROOT}/lg_stats/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_sv/package.xml
    - ${PROJECT_ROOT}/lg_sv/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_twister/package.xml
    - ${PROJECT_ROOT}/lg_twister/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_volume_control/package.xml
    - ${PROJECT_ROOT}/lg_volume_control/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lg_wireless_devices/package.xml
    - ${PROJECT_ROOT}/lg_wireless_devices/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - liquidgalaxy/package.xml
    - ${PROJECT_ROOT}/liquidgalaxy/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rfid_scanner/package.xml
    - ${PROJECT_ROOT}/rfid_scanner/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rfreceiver/package.xml
    - ${PROJECT_ROOT}/rfreceiver/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - spacenav_remote/package.xml
    - ${PROJECT_ROOT}/spacenav_remote/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - spacenav_wrapper/package.xml
    - ${PROJECT_ROOT}/spacenav_wrapper/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - state_proxy/package.xml
    - ${PROJECT_ROOT}/state_proxy/package.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wiimote/package.xml
    - ${PROJECT_ROOT}/wiimote/package.xml
  - CmdLine:
    - source /opt/ros/$ROS_DISTRO/setup.bash &&     apt-get update &&     rosdep init
      &&     rosdep update --include-eol-distros &&     rosdep install         --from-paths
      $PROJECT_ROOT         --ignore-src         --rosdistro $ROS_DISTRO         -y
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - ${PROJECT_ROOT}
  - CmdLine:
    - cd ${PROJECT_ROOT} &&     source /opt/ros/$ROS_DISTRO/setup.bash &&     /ros_entrypoint.sh
      ./scripts/init_workspace &&     cd ${PROJECT_ROOT}/catkin/ &&     catkin_make
      &&     catkin_make -DCMAKE_INSTALL_PREFIX=/opt/ros/$ROS_DISTRO install &&     source
      $PROJECT_ROOT/catkin/devel/setup.bash &&     chown -R ${RUN_USER}:${RUN_USER}
      ${PROJECT_ROOT} &&     chown -R ${RUN_USER}:${RUN_USER} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: $RUN_USER
  From:
    Image: ubuntu:${UBUNTU_RELEASE}
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:${UBUNTU_RELEASE}
