MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Andrew Weiss <andrew.weiss@outlook.com>
    Name: maintainer
  - Env:
    - Key: vsts_username
      Value: '""'
    Name: env
  - Env:
    - Key: vsts_password
      Value: '""'
    Name: env
  - Env:
    - Key: vsts_url
      Value: '""'
    Name: env
  - Env:
    - Key: vsts_agentname
      Value: $HOSTNAME
    Name: env
  - Env:
    - Key: vsts_agentpool
      Value: default
    Name: env
  - Env:
    - Key: vsts_service_username
      Value: vsoservice
    Name: env
  - Env:
    - Key: vsts_service_password
      Value: vsoservice
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb [arch=amd64] http://apt-mo.trafficmanager.net/repos/dotnet/
      trusty main" > /etc/apt/sources.list.d/dotnetdev.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libicu52 dotnet=1.0.0.001598-1 expect git curl g++ gcc libc6-dev
      make mercurial
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${vsts_service_username}\n${vsts_service_password}\n\n\n\n\n\n\n" | adduser
      ${vsts_service_username}
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.6.2
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a
    Name: env
  - CmdLine:
    - "curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \t&& echo \"$GOLANG_DOWNLOAD_SHA256
      \ golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz
      \t&& rm golang.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 777 /usr/local/go
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /opt/buildagent/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/mitchellh/gox
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/buildagent/_work
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/buildagent
  - CmdLine:
    - curl -kSLO https://github.com/Microsoft/vsts-agent/releases/download/v2.99.0/vsts-agent-linux-2.99.0-0428.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxvf vsts-agent-linux-2.99.0-0428.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ConfigureAgent.expect
    - ConfigureAgent.expect
  - CmdLine:
    - su ${vsts_service_username}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/buildagent
  - CmdLine:
    - chown -R ${vsts_service_username} /opt/buildagent
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runagent.sh
    - runagent.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go-wrapper
    - /usr/local/bin/
  - CmdLine:
    - chmod +x runagent.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    - ./runagent.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
