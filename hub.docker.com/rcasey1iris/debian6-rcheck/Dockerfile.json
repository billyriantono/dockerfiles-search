{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:6",
      "SourceCode": "FROM debian:6",
      "Platform": "",
      "From": {
        "Image": "debian:6"
      },
      "Commands": [
        {
          "Maintainer": "\"Robert Casey, IRIS\" \u003crob@iris.washington.edu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'Acquire::Check-Valid-Until \"false\";' \u003e/etc/apt/apt.conf.d/90ignore-release-date \u0026\u0026 echo \"deb http://archive.debian.org/debian squeeze main\" \u003e /etc/apt/sources.list \u0026\u0026 echo \"deb http://archive.debian.org/debian squeeze-lts main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026 echo \"deb http://archive.debian.org/debian-archive/debian squeeze main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026 echo \"deb http://archive.debian.org/debian-archive/debian squeeze-proposed-updates main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026 echo \"deb http://security.debian.org squeeze/updates main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026 echo \"deb http://archive.debian.org/debian-archive/debian squeeze-lts main contrib non-free\" \u003e\u003e /etc/apt/sources.list \u0026\u0026 echo \"deb http://cran.r-project.org/bin/linux/debian squeeze-cran3/\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends apt-utils ed less locales vim-tiny wget ca-certificates \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026 locale-gen en_US.utf8 \u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 381BA480"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "R_BASE_VERSION",
              "Value": "3.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -t unstable -y --no-install-recommends littler r-cran-littler r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* \u0026\u0026 apt-get install -y libcurl4-openssl-dev libxml2-dev texlive texinfo qpdf texlive-fonts-extra \u0026\u0026 echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"wget\")' \u003e\u003e /etc/R/Rprofile.site \u0026\u0026 echo 'source(\"/etc/R/Rprofile.site\")' \u003e\u003e /etc/littler.r \u0026\u0026 ln -s /usr/share/doc/littler/examples/install.r /usr/local/bin/install.r \u0026\u0026 ln -s /usr/share/doc/littler/examples/install2.r /usr/local/bin/install2.r \u0026\u0026 ln -s /usr/share/doc/littler/examples/installGithub.r /usr/local/bin/installGithub.r \u0026\u0026 ln -s /usr/share/doc/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \u0026\u0026 install.r docopt drat devtools\u0026\u0026 rm -rf /tmp/downloaded_packages/ /tmp/*.rds \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install.r signal Rcpp XML tidyr dplyr pracma RCurl microbenchmark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        },
        {
          "CmdLine": [
            "echo 'for f in $*;do R CMD INSTALL $f;R CMD check --as-cran --output=/tmp $f;done' \u003e /tmp/Rcheck.bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash",
            "/tmp/Rcheck.bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/srv/*.tar.gz"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}