{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Iakov Kirilenko \u003cIakov.Kirilenko@trikset.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get install --no-install-recommends -y software-properties-common     \u0026\u0026 add-apt-repository -y ppa:jonathonf/gcc     \u0026\u0026 add-apt-repository -y ppa:ubuntu-toolchain-r/test     \u0026\u0026 apt-get update \u0026\u0026 apt -y upgrade     \u0026\u0026 apt-get install -y --no-install-recommends \t\t    wget curl rsync sshpass openssh-client build-essential g++-8 gdb python3-dev \t\t    pkg-config libboost-system-dev libboost-wave-dev                 tcl vera++ xvfb mesa-common-dev libgl1-mesa-dri \t\tlibglu1-mesa-dev libpng-dev \t\tzlib1g-dev xbitmaps xterm git-core ccache                 automake libtool-bin libudev-dev                 dbus libxkbcommon-x11-0 libxcb-xkb1 libpulse-dev                 realpath     \u0026\u0026 update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8     \u0026\u0026 apt-get purge -y software-properties-common     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*             /var/cache/debconf/*             /usr/share/doc             /usr/share/man             /usr/share/locale/??             /usr/share/locale/??_?? \u0026\u0026 { [ -r /etc/machine-id ] || { dbus-uuidgen | tee /etc/machine-id ; } ; }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/libusb/libusb \u0026\u0026 cd libusb \u0026\u0026 git checkout v1.0.22 \u0026\u0026 ./autogen.sh --enable-udev --disable-examples-build --disable-tests-build --disable-static \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -rf libusb \u0026\u0026 echo pkg-config libusb-1.0 is v$(pkg-config --modversion libusb-1.0)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "QTDIR",
              "Value": "\"/Qt\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QTBIN",
              "Value": "\"${QTDIR}/5.12.6/gcc_64/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qt_scriptinstall.qs",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install_qt.sh",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "/tmp/install_qt.sh $QTDIR     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf $QTDIR/Docs $QTDIR/Examples $QTDIR/Tools/QtCreator               $QTDIR/MaintenanceTool* \t      $QTBIN/qgltf \t      $QTBIN/qdoc \t      $QTBIN/linguist \t      $QTBIN/assistant \t      $QTBIN/designer \t      $QTBIN/../lib/*.a"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${QTBIN}:/usr/lib/ccache:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "bash",
              "Value": "-ic 'python3 -m pip install --upgrade pip codecov'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo Internal image disk usage: $(du -sch /* 2\u003e/dev/null | sort -h)"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}