MetaArgs: null
Stages:
- BaseName: neurodebian:stretch
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: '"noninteractive"'
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    - Key: ND_ENTRYPOINT
      Value: '"/neurodocker/startup.sh"'
    Name: env
  - CmdLine:
    - export ND_ENTRYPOINT="/neurodocker/startup.sh"     && apt-get update -qq     &&
      apt-get install -y -q --no-install-recommends            apt-utils            bzip2            ca-certificates            curl            locales            unzip     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && sed
      -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     && dpkg-reconfigure
      --frontend=noninteractive locales     && update-locale LANG="en_US.UTF-8"     &&
      chmod 777 /opt && chmod a+s /opt     && mkdir -p /neurodocker     && if [ !
      -f "$ND_ENTRYPOINT" ]; then          echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"     &&   echo
      'set -e' >> "$ND_ENTRYPOINT"     &&   echo 'if [ -n "$1" ]; then "$@"; else
      /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";     fi     && chmod -R 777 /neurodocker
      && chmod a+s /neurodocker
    Name: run
    PrependShell: true
  - CmdLine:
    - /neurodocker/startup.sh
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: PATH
      Value: '"/opt/dcm2niix-v1.0.20180622/bin:$PATH"'
    Name: env
  - CmdLine:
    - apt-get update -qq     && apt-get install -y -q --no-install-recommends            cmake            g++            gcc            git            make            pigz            zlib1g-dev     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && git
      clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix     && cd /tmp/dcm2niix     &&
      git fetch --tags     && git checkout v1.0.20180622     && mkdir /tmp/dcm2niix/build     &&
      cd /tmp/dcm2niix/build     && cmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-v1.0.20180622
      ..     && make     && make install     && rm -rf /tmp/dcm2niix
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq     && apt-get install -y -q --no-install-recommends            git            mercurial            gcc            pigz            liblzma-dev            libc-dev            netbase            nifti2dicom     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /src/dcm2dcm
  - Env:
    - Key: CONDA_DIR
      Value: '"/opt/miniconda-latest"'
    - Key: PATH
      Value: '"/opt/miniconda-latest/bin:$PATH"'
    Name: env
  - CmdLine:
    - export PATH="/opt/miniconda-latest/bin:$PATH"     && echo "Downloading Miniconda
      installer ..."     && conda_installer="/tmp/miniconda.sh"     && curl -fsSL
      --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh     &&
      bash "$conda_installer" -b -p /opt/miniconda-latest     && rm -f "$conda_installer"     &&
      conda update -yq -nbase conda     && conda config --system --prepend channels
      conda-forge     && conda config --system --set auto_update_conda false     &&
      conda config --system --set show_channel_urls true     && sync && conda clean
      -tipsy && sync     && conda install -y -q --name base            'python=3.6'            'numpy'            'nomkl'     &&
      sync && conda clean -tipsy && sync     && bash -c "source activate base     &&   pip
      install --no-cache-dir               'nibabel'"     && rm -rf ~/.cache/pip/*     &&
      sync
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /src/dcm2dcm/dcm2dcm.py
    Name: run
    PrependShell: true
  - CmdLine:
    - /src/dcm2dcm/dcm2dcm.py
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - 'echo ''{     \n  "pkg_manager": "apt",     \n  "instructions": [     \n    [     \n      "base",     \n      "neurodebian:stretch"     \n    ],     \n    [     \n      "dcm2niix",     \n      {     \n        "version":
      "v1.0.20180622",     \n        "method": "source"     \n      }     \n    ],     \n    [     \n      "install",     \n      [     \n        "git",     \n        "mercurial",     \n        "gcc",     \n        "pigz",     \n        "liblzma-dev",     \n        "libc-dev",     \n        "netbase",     \n        "nifti2dicom"     \n      ]     \n    ],     \n    [     \n      "copy",     \n      [     \n        ".",     \n        "/src/dcm2dcm"     \n      ]     \n    ],     \n    [     \n      "miniconda",     \n      {     \n        "use_env":
      "base",     \n        "conda_install": [     \n          "python=3.6",     \n          "numpy",     \n          "nomkl"     \n        ],     \n        "pip_install":
      [     \n          "nibabel"     \n        ]     \n      }     \n    ],     \n    [     \n      "run",     \n      "chmod
      +x /src/dcm2dcm/dcm2dcm.py"     \n    ],     \n    [     \n      "entrypoint",     \n      "/src/dcm2dcm/dcm2dcm.py"     \n    ]     \n  ]     \n}''
      > /neurodocker/neurodocker_specs.json'
    Name: run
    PrependShell: true
  From:
    Image: neurodebian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM neurodebian:stretch
