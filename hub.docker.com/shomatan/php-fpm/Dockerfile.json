{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.5-fpm-alpine3.9",
      "SourceCode": "FROM php:7.3.5-fpm-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "php:7.3.5-fpm-alpine3.9"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Shoma Nishitateno \u003cshoma416@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "APCU_VERSION",
          "Name": "arg",
          "Value": "5.1.17"
        },
        {
          "Key": "APCU_BC_VERSION",
          "Name": "arg",
          "Value": "1.0.5"
        },
        {
          "Key": "MOZJPEG_VERSION",
          "Name": "arg",
          "Value": "3.3.1"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk update     \u0026\u0026 apk upgrade \t\u0026\u0026 addgroup -g 1000 -S www \t\u0026\u0026 adduser  -u 1000 -D -S -G www www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk update     \u0026\u0026 apk add --update --no-cache --virtual .build-php \t\t$PHPIZE_DEPS \t\tbuild-base \t\tautomake \t\tgettext \t\tlibtool \t\tnasm \t\tmariadb \t\tmariadb-dev \t\tpostgresql \t\tpostgresql-dev \t\tgd-dev \t\tlibpng-dev \t\tlibwebp-dev \t\tlibxpm-dev \t\tzlib-dev \t\tlibzip-dev \t\tfreetype-dev \t\tbzip2-dev \t\tlibexif-dev \t\txmlrpc-c-dev \t\tpcre-dev \t\tgettext-dev \t\tlibxslt-dev \t\tpcre-dev \t\topenldap-dev \t\timap-dev \t\ticu-dev \t\tcurl \t\timagemagick \t\timagemagick-dev \t\tlibsodium \t\tlibsodium-dev \t\tgettext     \u0026\u0026 cd /tmp \t\u0026\u0026 curl -LO https://github.com/mozilla/mozjpeg/archive/v${MOZJPEG_VERSION}.tar.gz#//mozjpeg-${MOZJPEG_VERSION}.tar.gz \t\u0026\u0026 tar xf mozjpeg-${MOZJPEG_VERSION}.tar.gz \t\u0026\u0026 cd mozjpeg-${MOZJPEG_VERSION} \t\u0026\u0026 autoreconf -fiv \t\u0026\u0026 mkdir build \u0026\u0026 cd build \t\u0026\u0026 sh ../configure --with-jpeg8 --prefix=/usr \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) install \t\u0026\u0026 pecl channel-update pecl.php.net \t\u0026\u0026 docker-php-ext-configure gd --with-jpeg-dir=/usr/include \t\t--with-xpm-dir=/usr/include --with-webp-dir=/usr/include \t\t--with-png-dir=/usr/include --with-freetype-dir=/usr/include/ \t\u0026\u0026 docker-php-ext-install \t\tmysqli \t\tpgsql \t\topcache \t\tgd \t\tcalendar \t\timap \t\tldap \t\tbz2 \t\tzip \t\tpdo \t\tpdo_mysql \t\tpdo_pgsql \t\tbcmath \t\texif \t\tgettext \t\tpcntl \t\tsoap \t\tsockets \t\tsysvsem \t\tsysvshm \t\txmlrpc \t\txsl \t\u0026\u0026 pecl install imagick \t\u0026\u0026 pecl install libsodium \t\u0026\u0026 pecl install apcu-$APCU_VERSION \t\u0026\u0026 pecl install apcu_bc-$APCU_BC_VERSION \t\u0026\u0026 docker-php-ext-enable imagick apcu apc \t\u0026\u0026 mv /usr/bin/envsubst /tmp/     \u0026\u0026 runPath=\"/usr/local/bin/php /usr/local/lib/php/extensions/no-debug-non-zts-20180731/*.so /tmp/envsubst /usr/bin/mogrify /usr/bin/wrjpgcom /usr/bin/rdjpgcom /usr/bin/cjpeg /usr/bin/jpegtran /usr/bin/djpeg /usr/bin/tjbench /usr/lib/libturbojpeg.so.0.1.0 /usr/lib/libjpeg.so.8.1.2\"     \u0026\u0026 runDeps=\"$( \t    scanelf --needed --nobanner --format '%n#p' $runPath \t    | tr ',' '\\n' \t    | sort -u \t    | grep -v jpeg \t    | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"     \u0026\u0026 strip $runPath     \u0026\u0026 apk add --no-cache --virtual .php7-rundeps $runDeps     \u0026\u0026 apk del .build-php     \u0026\u0026 mv /tmp/envsubst /usr/bin/envsubst \t\u0026\u0026 cd / \t\u0026\u0026 rm -f /usr/local/etc/php/conf.d/docker-php-ext-apc.ini \t\u0026\u0026 rm -f /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \t\u0026\u0026 rm -f /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \t\u0026\u0026 rm -rf /tmp/mozjpeg* /tmp/pear /usr/include /usr/lib/pkgconfig /usr/lib/*a /usr/share/doc /usr/share/man \t\u0026\u0026 apk add pngquant optipng jpegoptim ssmtp \t\u0026\u0026 mkdir -p /etc/php7.d/conf.d /etc/php7-fpm.d \t\u0026\u0026 cp /usr/local/etc/php/conf.d/* /etc/php7.d/conf.d/ \t\u0026\u0026 cp /usr/local/etc/php-fpm.d/* /etc/php7-fpm.d/ \t\u0026\u0026 mkdir -p /var/log/php7-fpm \t\u0026\u0026 ln -sf /dev/stdout /var/log/php7-fpm/www-error.log \t\u0026\u0026 ln -sf /dev/stderr /var/log/php7-fpm/www-slow.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 mkdir -p /var/lib/php7/session /var/lib/php7/wsdlcache  \t\u0026\u0026 chown www:www /var/lib/php7/session /var/lib/php7/wsdlcache \t\u0026\u0026 echo mysqli.default_socket=/var/run/mysqld/mysqld.sock \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-mysqli.ini \t\u0026\u0026 echo pdo_mysql.default_socket = /var/run/mysqld/mysqld.sock \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-pdo_mysql.ini \t\u0026\u0026 cd /tmp \t\u0026\u0026 curl -LO https://composer.github.io/installer.sha384sum \t\u0026\u0026 curl -LO https://getcomposer.org/installer \t\u0026\u0026 sha3sum installer.sha384sum \t\u0026\u0026 php installer --filename=composer --install-dir=/usr/local/bin \t\u0026\u0026 rm installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/*.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/opcache*.blacklist",
            "/usr/local/etc/php.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/www.conf",
            "/usr/local/etc/php-fpm.d/www.conf.template"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/php7-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/php.ini-production",
            "/usr/local/etc/php.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/docker-entrypoint.sh",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 chown -R www:www /usr/local/etc \t\u0026\u0026 chown -R www:www /var/www/html \t\u0026\u0026 chmod 755 /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "user",
          "User": "www"
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/sbin/php-fpm",
            "--nodaemonize",
            "--fpm-config",
            "/usr/local/etc/php-fpm.conf",
            "--allow-to-run-as-root"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}