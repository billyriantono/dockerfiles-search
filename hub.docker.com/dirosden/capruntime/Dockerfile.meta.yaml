MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine
  Commands:
  - Labels:
    - Key: name
      Value: '"Alpine OS Base Image"'
    Name: label
  - Labels:
    - Key: vendor
      Value: '"AlpineOS"'
    Name: label
  - Labels:
    - Key: license
      Value: GPLv2
    Name: label
  - Env:
    - Key: REFRESHED_AT
      Value: 2017-APR-10
    Name: env
  - Env:
    - Key: GLIBC_VERSION
      Value: '"2.23-r2"'
    Name: env
  - CmdLine:
    - apk update &&     apk add bash curl
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apk upgrade --update &&     apk add curl sed &&     apk --update add tar &&     for
      pkg in glibc glibc-bin glibc-i18n; do curl -sSL https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/${pkg}-$GLIBC_VERSION.apk
      -o /tmp/${pkg}-$GLIBC_VERSION.apk; done &&     apk add --allow-untrusted /tmp/glibc-*.apk
      &&     rm -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --force --inputfile
      POSIX --charmap UTF-8 C.UTF-8 || true ) &&     echo "export LANG=C.UTF-8" >
      /etc/profile.d/locale.sh &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib
      &&     echo ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk/jre
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u92
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.111.14-r0
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8-jre=\"$JAVA_ALPINE_VERSION\" &&
      [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/v3.4/community" >> /etc/apk/repositories
      &&     echo "http://dl-cdn.alpinelinux.org/alpine/v3.4/main" >> /etc/apk/repositories      &&     echo
      "http://alpine.gliderlabs.com/alpine/edge/community" >> /etc/apk/repositories  &&     echo
      "http://alpine.gliderlabs.com/alpine/edge/testing" >> /etc/apk/repositories    &&     echo
      "http://alpine.gliderlabs.com/alpine/edge/main" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update &&     apk add unzip iproute2 py-setuptools which jq supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add salt-minion py-inotify
    Name: run
    PrependShell: true
  - Env:
    - Key: MULE_HOME
      Value: /opt/mule
    Name: env
  - Env:
    - Key: MULE_VERSION
      Value: 3.8.0
    Name: env
  - CmdLine:
    - set -x         && mkdir /opt         && cd /opt         && curl -o mule.zip
      https://repository-master.mulesoft.org/nexus/content/repositories/releases/org/mule/distributions/mule-standalone/$MULE_VERSION/mule-standalone-$MULE_VERSION.zip         &&
      unzip mule.zip         && mv mule-standalone-$MULE_VERSION mule         && rm
      mule.zip*         && find . -name "*freebsd*.*" -type f -delete         && find
      . -name "*aix*.*" -type f -delete         && find . -name "*hpux*.*" -type f
      -delete         && find . -name "*solaris*.*" -type f -delete         && find
      . -name "*macosx*.*" -type f -delete         && find . -name "*windows*.*" -type
      f -delete
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x         && curl -o jmx_prom.jar http://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.9/jmx_prometheus_javaagent-0.9.jar         &&
      mkdir /opt/mule/lib/agent          && mv jmx_prom.jar /opt/mule/lib/agent/jmx_prom.jar
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc
    - /etc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config
    - /config
  - CmdLine:
    - mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/log/supervisor
  - Name: expose
    Ports:
    - "8081"
  - Name: expose
    Ports:
    - "1099"
  - Name: expose
    Ports:
    - "1199"
  - CmdLine:
    - chmod
    - +x
    - /config/bootstrap.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - chmod
    - +x
    - /config/init/configureenv.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - chmod
    - +x
    - /config/init/setupminion.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - /config/bootstrap.sh
    Name: cmd
    PrependShell: false
  From:
    Image: gliderlabs/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine
