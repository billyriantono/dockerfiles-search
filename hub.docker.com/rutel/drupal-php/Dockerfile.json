{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Wodby \u003cadmin@wodby.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' \u003e\u003e /etc/apk/repositories \u0026\u0026     apk add --update         bash         libressl         ca-certificates         openssh-client         rsync         git         curl         wget         gzip         tar         patch         perl         pcre         imap         imagemagick         mariadb-client         postgresql-client        build-base         autoconf         libtool         php5-dev         pcre-dev         imagemagick-dev         php5         php5-common         php5-cli         php5-fpm         php5-opcache         php5-dom         php5-xml         php5-xmlreader         php5-ctype         php5-ftp         php5-gd         php5-json         php5-posix         php5-curl         php5-pdo         php5-pdo_mysql         php5-sockets         php5-zlib         php5-mcrypt         php5-pcntl         php5-mysql         php5-mysqli         php5-sqlite3         php5-bz2         php5-pear         php5-exif         php5-phar         php5-openssl         php5-posix         php5-zip         php5-calendar         php5-iconv         php5-imap         php5-soap         php5-memcache         php5-redis         php5-xdebug         php5-xsl         php5-ldap         php5-bcmath         php5-memcached         php5-apcu         php5-pgsql         php5-pdo_pgsql         \u0026\u0026     sed -ie 's/-n//g' /usr/bin/pecl \u0026\u0026     yes | pecl install uploadprogress \u0026\u0026     yes | pecl install imagick \u0026\u0026     echo 'extension=imagick.so' \u003e /etc/php5/conf.d/imagick.ini \u0026\u0026     echo 'extension=uploadprogress.so' \u003e /etc/php5/conf.d/uploadprogress.ini \u0026\u0026     rm -rf /tmp/pear \u0026\u0026     rm /etc/php5/conf.d/xdebug.ini \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     curl -sSL https://phar.phpunit.de/phpunit.phar -o phpunit.phar \u0026\u0026         chmod +x phpunit.phar \u0026\u0026         mv phpunit.phar /usr/local/bin/phpunit \u0026\u0026     php -r \"readfile('https://s3.amazonaws.com/files.drush.org/drush.phar');\" \u003e /usr/local/bin/drush \u0026\u0026     chmod +x /usr/local/bin/drush \u0026\u0026     curl -sSL https://drupalconsole.com/installer -o drupal.phar \u0026\u0026         chmod +x drupal.phar \u0026\u0026         mv drupal.phar /usr/local/bin/drupal \u0026\u0026         chmod +x /usr/local/bin/drupal \u0026\u0026     apk del --purge         *-dev         build-base         autoconf         libtool         \u0026\u0026     rm -rf         /usr/include/php         /usr/lib/php/build         /var/cache/apk/*         /tmp/*         /root/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i         -e \"s/^expose_php.*/expose_php = Off/\"         -e \"s/^;date.timezone.*/date.timezone = UTC/\"         -e \"s/^memory_limit.*/memory_limit = -1/\"         -e \"s/^max_execution_time.*/max_execution_time = 300/\"         -e \"s/^; max_input_vars.*/max_input_vars = 2000/\"         -e \"s/^post_max_size.*/post_max_size = 512M/\"         -e \"s/^upload_max_filesize.*/upload_max_filesize = 512M/\"         -e \"s/^;always_populate_raw_post_data.*/always_populate_raw_post_data = -1/\"         -e \"s/^error_reporting.*/error_reporting = E_ALL/\"         -e \"s/^display_errors.*/display_errors = On/\"         -e \"s/^display_startup_errors.*/display_startup_errors = On/\"         -e \"s/^track_errors.*/track_errors = On/\"         -e \"s/^mysqlnd.collect_memory_statistics.*/mysqlnd.collect_memory_statistics = On/\"         /etc/php5/php.ini \u0026\u0026     echo \"error_log = \\\"/proc/self/fd/2\\\"\" | tee -a /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opcache.ini",
            "/etc/php5/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xdebug.ini",
            "/etc/php5/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/etc/php5/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/drush/site-aliases"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default.aliases.drushrc.php",
            "/etc/drush/site-aliases/"
          ]
        },
        {
          "CmdLine": [
            "addgroup -g 82 www-data \u0026\u0026 \tadduser -u 82 -s /bin/bash -D -G www-data www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html \u0026\u0026     chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo:^0.3 --optimize-autoloader \u0026\u0026     rm -rf ~/.composer/.cache \u0026\u0026     drupal init --override"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}