MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get -y -o Acquire::GzipIndexes=false update && apt-get -y upgrade && apt-get
      -y clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install docker-ce docker-ce-cli containerd.io
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install python python-dev python-pip python-setuptools python-setuptools-scm
      python-virtualenv python-pkg-resources
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install python3 python3-dev python3-pip python3-setuptools python3-setuptools-scm
      python3-virtualenv python3-pkg-resources
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U ansible molecule docker
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_LOAD_CALLBACK_PLUGINS
      Value: "1"
    Name: env
  - Env:
    - Key: ANSIBLE_STDOUT_CALLBACK
      Value: debug
    Name: env
  - Env:
    - Key: ANSIBLE_ROLES_PATH
      Value: /etc/ansible/roles
    Name: env
  - CmdLine:
    - mkdir -p $ANSIBLE_ROLES_PATH
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: from ubuntu:latest
