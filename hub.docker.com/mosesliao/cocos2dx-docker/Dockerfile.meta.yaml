MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Moses Liao <moses.liao.sd@gmail.com>"'
    Name: label
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install software-properties-common openssl git locales ant unzip
      g++ libgdk-pixbuf2.0-dev python-pip cmake libx11-dev libxmu-dev libglu1-mesa-dev
      libgl2ps-dev libxi-dev libzip-dev libpng-dev libcurl4-gnutls-dev libfontconfig1-dev
      libsqlite3-dev libglew-dev libssl-dev libgtk-3-dev libglfw3 libglfw3-dev xorg-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | debconf-set-selections &&   add-apt-repository -y ppa:webupd8team/java &&   apt-get
      update &&   apt-get install -y oracle-java8-installer &&   rm -rf /var/lib/apt/lists/*
      &&   rm -rf /var/cache/oracle-jdk8-installer
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - cd /opt &&     wget -q https://dl.google.com/android/repository/android-ndk-r17b-linux-x86_64.zip
      &&     unzip *ndk*linux*.zip &&     rm *ndk*linux*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: NDK_ROOT
      Value: /opt/android-ndk-r17b
    Name: env
  - CmdLine:
    - mkdir -p /opt/android-sdk && cd /opt/android-sdk &&     wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
      &&     unzip *tools*linux*.zip &&     rm *tools*linux*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_SDK_ROOT
      Value: /opt/android-sdk
    Name: env
  - Env:
    - Key: PATH
      Value: '"$ANDROID_SDK_ROOT/tools/bin:${PATH}"'
    Name: env
  - CmdLine:
    - sdkmanager --licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/cocos2d/cocos2d-x.git /cocos2dx
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /cocos2dx && git checkout cocos2d-x-3.17
    Name: run
    PrependShell: true
  - CmdLine:
    - /cocos2dx/download-deps.py --remove-download yes
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /cocos2dx && git submodule update --init
    Name: run
    PrependShell: true
  - Env:
    - Key: COCOS_X_ROOT
      Value: /cocos2dx
    Name: env
  - Env:
    - Key: COCOS_CONSOLE_ROOT
      Value: /cocos2dx/tools/cocos2d-console/bin
    Name: env
  - Env:
    - Key: COCOS_TEMPLATE_ROOT
      Value: /cocos2dx/templates
    Name: env
  - Env:
    - Key: ANT_ROOT
      Value: /usr/bin/ant
    Name: env
  - Env:
    - Key: PATH
      Value: '"/cocos2dx/tools/cocos2d-console/bin:${PATH}"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"/cocos2dx/template:${PATH}"'
    Name: env
  - CmdLine:
    - cd /cocos2dx && ./setup.py
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoclean && apt-get -y autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /cocos2dx/build && echo 'y' | ./install-deps-linux.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /cocos2dx/build && mkdir linux-build && cd linux-build && cmake ../..
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  - Name: workdir
    Path: /project
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
