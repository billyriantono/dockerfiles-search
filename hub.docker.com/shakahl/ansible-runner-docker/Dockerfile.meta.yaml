MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Maintainer: Soma Szelpal <szelpalsoma@gmail.com>
    Name: maintainer
  - Key: USER
    Name: arg
    Value: null
  - Key: GROUP
    Name: arg
    Value: null
  - Key: PUID
    Name: arg
    Value: null
  - Key: PGID
    Name: arg
    Value: null
  - Key: HOME_FOLDER
    Name: arg
    Value: null
  - Key: docker_FOLDER
    Name: arg
    Value: null
  - Key: DATA_FOLDER
    Name: arg
    Value: null
  - Env:
    - Key: APK_PACKAGES
      Value: '"sudo bash bc musl coreutils ca-certificates git less openssl openssh
        openssh-client p7zip python py-cryptography py-setuptools py-cffi py-openssl
        py-lxml py-pip util-linux bind-tools libffi socat curl mc tzdata findutils
        gawk sed grep rsync sshpass sudo vim nano zip unzip wget"'
    Name: env
  - Env:
    - Key: APK_DEV_PACKAGES
      Value: '"gcc g++ git make libc-dev python-dev libffi-dev openssl-dev build-base"'
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: USER
      Value: ansible
    Name: env
  - Env:
    - Key: GROUP
      Value: ansible
    Name: env
  - Env:
    - Key: HOME_FOLDER
      Value: /ansible
    Name: env
  - Env:
    - Key: DATA_FOLDER
      Value: ${HOME_FOLDER}/data
    Name: env
  - Env:
    - Key: ANSIBLE_CONFIG
      Value: /etc/ansible/ansible.cfg
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apk add --update --no-cache ${APK_PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache --virtual .build-dependencies ${APK_DEV_PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip cffi
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade ansible awscli cloudmonkey boto boto3 docker-py dopy pywinrm
      pyvmomi pysphere pywinrm
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del .build-dependencies
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/*   && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "===> Add user: ${USER}"   && addgroup ${GROUP}'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "===> Add user: ${USER}"   && adduser ${USER} -D -h ${HOME_FOLDER} -G
      ${GROUP} -s /bin/bash   && echo ${USER} ''ALL=(ALL) NOPASSWD:ALL'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker
    - /docker
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/home/ansible
    - ${HOME_FOLDER}
  - CmdLine:
    - chown -R ${USER} ${HOME_FOLDER}
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r ./docker/home/* /root/
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R root:root /root/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/docker-entrypoint.d
    - /docker-entrypoint.d
  - CmdLine:
    - chmod -R +x /docker-entrypoint.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/docker-entrypoint
    - /docker-entrypoint
  - CmdLine:
    - chmod +x /docker-entrypoint
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/home/ansible/.bashrc
    - /root/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/home/ansible/.profile
    - /root/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/home/ansible/.nanorc
    - /root/
  - CmdLine:
    - chown -R root:root /root/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/etc/ansible
    - /etc/ansible
  - CmdLine:
    - chown -R ${USER}:${GROUP} /etc/ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${DATA_FOLDER} && chown -R ${USER} ${DATA_FOLDER}
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}:${GROUP}
  - Name: workdir
    Path: ${HOME_FOLDER}
  - CmdLine:
    - mkdir -p ~/.ssh && touch ~/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - ansible -c local -m setup all > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
