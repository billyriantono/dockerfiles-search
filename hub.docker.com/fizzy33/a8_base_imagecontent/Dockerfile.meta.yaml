MetaArgs: null
Stages:
- BaseName: alpine:3.3
  Commands:
  - Maintainer: Jose Armesto <jose@armesto.net>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: ELASTALERT_HOME
      Value: /opt/elastalert
    Name: env
  - Env:
    - Key: RULES_DIRECTORY
      Value: ${ELASTALERT_HOME}/rules
    Name: env
  - Env:
    - Key: ELASTALERT_VERSION
      Value: v0.1.4
    Name: env
  - Key: vcs_ref
    Name: arg
    Value: '"Unknown"'
  - Key: vcs_branch
    Name: arg
    Value: '"Unknown"'
  - Key: build_date
    Name: arg
    Value: '"Unknown"'
  - Labels:
    - Key: org.label-schema.vcs-type
      Value: '"git"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/fiunchinho/docker-elastalert"'
    - Key: org.label-schema.vcs-ref
      Value: $vcs_ref
    - Key: org.label-schema.vcs-branch
      Value: $vcs_branch
    - Key: org.label-schema.docker.dockerfile
      Value: /Dockerfile
    - Key: org.label-schema.build-date
      Value: $build_date
    Name: label
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apk add --update     ca-certificates     python     python-dev     py-pip     build-base   &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/Yelp/elastalert/archive/${ELASTALERT_VERSION}.zip &&     unzip
      -- *.zip &&     mv -- elast* ${ELASTALERT_HOME} &&     rm -- *.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ELASTALERT_HOME}
  - CmdLine:
    - python setup.py install &&     pip install -e . &&     mkdir ${RULES_DIRECTORY}
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/elastalert/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - python
    - elastalert/elastalert.py
    - --verbose
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./Dockerfile
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - ${ELASTALERT_HOME}/docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config.yaml
    - ${ELASTALERT_HOME}/config.yaml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./rules
    - ${RULES_DIRECTORY}/
  From:
    Image: alpine:3.3
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.3
