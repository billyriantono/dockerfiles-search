MetaArgs: null
Stages:
- BaseName: node:0.10-slim
  Commands:
  - Maintainer: Bitergia <fiware-testing@bitergia.com>
    Name: maintainer
  - Env:
    - Key: WILMA_HOME
      Value: /opt/fi-ware-pep-proxy
    Name: env
  - Env:
    - Key: WILMA_USER
      Value: pepproxy
    Name: env
  - Env:
    - Key: GIT_REV_WILMA
      Value: "4.3"
    Name: env
  - Env:
    - Key: GIT_URL_WILMA
      Value: https://github.com/ging/fi-ware-pep-proxy.git
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - adduser --disabled-password --gecos "${WILMA_USER}" ${WILMA_USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update &&     apt-get -y install --no-install-recommends \t    netcat
      curl \t    git ca-certificates \t    python \t    make gcc build-essential \t
      \   &&     git clone ${GIT_URL_WILMA} ${WILMA_HOME} &&     cd ${WILMA_HOME}
      &&     git checkout ${GIT_REV_WILMA} &&     npm install &&     npm install forever
      --global &&     apt-get -y purge build-essential gcc make &&     apt-get -y
      autoremove --purge &&     apt-get clean &&     find /var/lib/apt/lists -type
      f -delete &&     rm -rf /root/.npm /root/.node-gyp"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${WILMA_HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.js
    - ${WILMA_HOME}/config.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - azf.patch
    - ${WILMA_HOME}/lib/azf.patch
  - CmdLine:
    - git apply -v ${WILMA_HOME}/lib/azf.patch
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - auth-token.sh
    - /usr/local/bin/auth-token.sh
  - CmdLine:
    - chmod 755 /usr/local/bin/auth-token.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/Bitergia/docker/master/utils/entrypoint-common.sh
    - /
  - CmdLine:
    - chmod 755 /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "1026"
  From:
    Image: node:0.10-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:0.10-slim
