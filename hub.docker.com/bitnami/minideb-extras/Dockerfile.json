{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitnami/minideb@sha256:b2f2f94f3d3e3a481031be20d14cb15c98fc8f178976ba530a3d6f2c1a2be31f",
      "SourceCode": "FROM bitnami/minideb@sha256:b2f2f94f3d3e3a481031be20d14cb15c98fc8f178976ba530a3d6f2c1a2be31f",
      "Platform": "",
      "From": {
        "Image": "bitnami/minideb@sha256:b2f2f94f3d3e3a481031be20d14cb15c98fc8f178976ba530a3d6f2c1a2be31f"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Bitnami \u003ccontainers@bitnami.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "install_packages curl ca-certificates sudo locales procps libaio1 \u0026\u0026   update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX \u0026\u0026   locale-gen en_US.UTF-8 \u0026\u0026   DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \u0026\u0026   useradd -ms /bin/bash bitnami \u0026\u0026   mkdir -p /opt/bitnami \u0026\u0026 chown bitnami:bitnami /opt/bitnami \u0026\u0026   sed -i -e 's/\\s*Defaults\\s*secure_path\\s*=/# Defaults secure_path=/' /etc/sudoers \u0026\u0026   echo \"bitnami ALL=NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^PASS_MAX_DAYS.*/PASS_MAX_DAYS    90/' /etc/login.defs \u0026\u0026   sed -i 's/^PASS_MIN_DAYS.*/PASS_MIN_DAYS    1/' /etc/login.defs \u0026\u0026   sed -i 's/sha512/sha512 minlen=8/' /etc/pam.d/common-password"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NAMI_VERSION",
              "Value": "1.0.0-1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   curl -sSLO https://nami-prod.s3.amazonaws.com/tools/nami/releases/nami-$NAMI_VERSION-linux-x64.tar.gz \u0026\u0026   echo \"80488279b056d5e9c183fe34097c5f496715ab16a602afcc9f78d59f15139a16  nami-$NAMI_VERSION-linux-x64.tar.gz\" | sha256sum -c - \u0026\u0026   mkdir -p /opt/bitnami/nami \u0026\u0026   tar xzf nami-$NAMI_VERSION-linux-x64.tar.gz --strip 1 -C /opt/bitnami/nami \u0026\u0026   rm nami-$NAMI_VERSION-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY_SERVERS_LIST",
              "Value": "ha.pool.sks-keyservers.net                          hkp://p80.pool.sks-keyservers.net:80                          keyserver.ubuntu.com                          hkp://keyserver.ubuntu.com:80                          pgp.mit.edu"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.13.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_GPG_KEY",
              "Value": "595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   for server in $(shuf -e $GPG_KEY_SERVERS_LIST) ; do       gpg --keyserver \"$server\" --recv-keys $TINI_GPG_KEY \u0026\u0026 break || : ;   done \u0026\u0026   gpg --fingerprint 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 | grep -q \"Key fingerprint = 6380 DC42 8747 F6C3 93FE  ACA5 9A84 159D 7001 A4E5\" \u0026\u0026   curl -sSL https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc -o tini.asc \u0026\u0026   curl -sSL https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini -o /usr/local/bin/tini \u0026\u0026   gpg --verify tini.asc /usr/local/bin/tini \u0026\u0026   chmod +x /usr/local/bin/tini \u0026\u0026   rm tini.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            },
            {
              "Key": "GOSU_GPG_KEY",
              "Value": "B42F6819007F00F88E364FD4036A9C25BF357DD4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   for server in $(shuf -e $GPG_KEY_SERVERS_LIST) ; do       gpg --keyserver \"$server\" --recv-keys $GOSU_GPG_KEY \u0026\u0026 break || : ;   done \u0026\u0026   gpg --fingerprint $GOSU_GPG_KEY | grep -q \"Key fingerprint = B42F 6819 007F 00F8 8E36  4FD4 036A 9C25 BF35 7DD4\" \u0026\u0026   curl -sSL https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64.asc -o gosu.asc \u0026\u0026   curl -sSL https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64 -o /usr/local/bin/gosu \u0026\u0026   gpg --verify gosu.asc /usr/local/bin/gosu \u0026\u0026   chmod +x /usr/local/bin/gosu \u0026\u0026   rm gosu.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/bitnami/nami/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BITNAMI_IMAGE_VERSION",
              "Value": "jessie-r525"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}