MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Bitergia <fiware-testing@bitergia.com>
    Name: maintainer
  - Env:
    - Key: WORKON_HOME
      Value: /opt/virtualenvs
    Name: env
  - Env:
    - Key: KEYROCK_HOME
      Value: /opt/fiware-idm
    Name: env
  - Env:
    - Key: GIT_URL_KEYSTONE
      Value: https://github.com/ging/keystone
    Name: env
  - Env:
    - Key: GIT_URL_HORIZON
      Value: https://github.com/ging/horizon
    Name: env
  - Env:
    - Key: GIT_REV_KEYSTONE
      Value: keyrock-5.1.0
    Name: env
  - Env:
    - Key: GIT_REV_HORIZON
      Value: keyrock-5.1.0
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: INITRD
      Value: "no"
    Name: env
  - Name: workdir
    Path: ${KEYROCK_HOME}
  - CmdLine:
    - mkdir -p ${WORKON_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y install --no-install-recommends            autoconf             bash-completion             build-essential             ca-certificates             curl             gcc             git             libffi-dev             libjpeg8-dev             libldap2-dev             libmysqlclient-dev             libsasl2-dev             libsqlite3-dev             libssl-dev             libxml2-dev             libxslt1-dev             python-dev             python-mysqldb             python-setuptools             python-virtualenv             sqlite3             virtualenvwrapper             &&     git
      clone --depth 1 --branch ${GIT_REV_KEYSTONE} ${GIT_URL_KEYSTONE} ${KEYROCK_HOME}/keystone
      &&     cd ${KEYROCK_HOME}/keystone &&     cp etc/keystone.conf.sample etc/keystone.conf
      &&     python tools/install_venv.py &&     git clone --depth 1 --branch ${GIT_REV_HORIZON}
      ${GIT_URL_HORIZON} ${KEYROCK_HOME}/horizon &&     cd ${KEYROCK_HOME}/horizon
      &&     cp openstack_dashboard/local/local_settings.py.example openstack_dashboard/local/local_settings.py
      &&     sed -e 's/$$IDM_PASS/idm/g'         -i openstack_dashboard/local/local_settings.py
      &&     python tools/install_venv.py &&     tools/with_venv.sh python manage.py
      collectstatic --noinput &&     tools/with_venv.sh python manage.py compress
      --force &&     apt-get -y install --no-install-recommends apache2 libapache2-mod-wsgi
      ssl-cert &&     apt-get clean &&     apt-get autoremove --purge -y &&     find
      /var/lib/apt/lists -type f -delete &&     rm -rf /root/.cache /root/.distlib
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - idm.conf
    - /opt/idm.conf
  - CmdLine:
    - mv /opt/idm.conf /etc/apache2/sites-available/idm.conf &&     a2enmod wsgi ssl
      &&     a2dissite 000-default &&     a2ensite idm &&     chown www-data:www-data
      ${KEYROCK_HOME}/horizon/openstack_dashboard/local &&     mkdir -p ${KEYROCK_HOME}/horizon/static
      &&     chown www-data:www-data ${KEYROCK_HOME}/horizon/static &&     chown -R
      www-data:www-data ${KEYROCK_HOME}/horizon/media
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default_provision.py
    - /config/default_provision.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - settings.py
    - /config/settings.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - params-config.py
    - ${KEYROCK_HOME}/keystone/params-config.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - access_control_xacml.py
    - ${KEYROCK_HOME}/horizon/access_control_xacml.py
  - CmdLine:
    - touch /initialize-provision &&     touch /initialize-domain-request
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/Bitergia/docker/master/utils/entrypoint-common.sh
    - /
  - CmdLine:
    - chmod 755 /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5000"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
