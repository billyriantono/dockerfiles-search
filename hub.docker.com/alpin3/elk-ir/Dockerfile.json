{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre-alpine",
      "SourceCode": "FROM java:8-jre-alpine",
      "Platform": "",
      "From": {
        "Image": "java:8-jre-alpine"
      },
      "Commands": [
        {
          "Maintainer": "kost, https://github.com/kost/docker-alpine",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ES_NAME",
              "Value": "elasticsearch"
            },
            {
              "Key": "ELASTICSEARCH_VERSION",
              "Value": "2.4.1"
            },
            {
              "Key": "GEOCITYURL",
              "Value": "http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz"
            },
            {
              "Key": "GEOIPURL",
              "Value": "http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_URL",
              "Value": "https://download.elastic.co/$ES_NAME/$ES_NAME/$ES_NAME-$ELASTICSEARCH_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_NAME",
              "Value": "logstash"
            },
            {
              "Key": "LOGSTASH_VERSION",
              "Value": "2.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_URL",
              "Value": "https://download.elastic.co/$LOGSTASH_NAME/$LOGSTASH_NAME/$LOGSTASH_NAME-all-plugins-$LOGSTASH_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "4.6.1"
            },
            {
              "Key": "KIBANA_NAME",
              "Value": "kibana"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_PKG",
              "Value": "$KIBANA_NAME-$KIBANA_VERSION-linux-x86_64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_CONFIG",
              "Value": "/opt/$KIBANA_NAME-$KIBANA_VERSION-linux-x86_64/config/kibana.yml"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_URL",
              "Value": "https://download.elastic.co/$KIBANA_NAME/$KIBANA_NAME/$KIBANA_PKG.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update openssl nodejs bash     \u0026\u0026 mkdir -p /opt     \u0026\u0026 echo \"[i] Building elasticsearch\"     \u0026\u0026 echo -O /tmp/$ES_NAME-$ELASTICSEARCH_VERSION.tar.gz $ELASTICSEARCH_URL     \u0026\u0026 wget -O /tmp/$ES_NAME-$ELASTICSEARCH_VERSION.tar.gz $ELASTICSEARCH_URL     \u0026\u0026 tar -xzf /tmp/$ES_NAME-$ELASTICSEARCH_VERSION.tar.gz -C /opt/     \u0026\u0026 ln -s /opt/$ES_NAME-$ELASTICSEARCH_VERSION /opt/$ES_NAME     \u0026\u0026 adduser -D -S elastic     \u0026\u0026 mkdir -p /var/lib/elasticsearch /opt/$ES_NAME/plugins /opt/$ES_NAME/config/scripts     \u0026\u0026 chown -R elastic /var/lib/elasticsearch /opt/$ES_NAME/plugins /opt/$ES_NAME/config/scripts     \u0026\u0026 echo \"[i] Building logstash\"     \u0026\u0026 wget -O /tmp/$LOGSTASH_NAME-all-plugins-$LOGSTASH_VERSION.tar.gz $LOGSTASH_URL     \u0026\u0026 tar xzf /tmp/$LOGSTASH_NAME-all-plugins-$LOGSTASH_VERSION.tar.gz -C /opt/     \u0026\u0026 ln -s /opt/$LOGSTASH_NAME-$LOGSTASH_VERSION /opt/$LOGSTASH_NAME     \u0026\u0026 ln -s /opt/$LOGSTASH_NAME/bin/$LOGSTASH_NAME /usr/local/bin/$LOGSTASH_NAME     \u0026\u0026 mkdir /etc/$LOGSTASH_NAME     \u0026\u0026 mkdir /etc/$LOGSTASH_NAME/patterns.d     \u0026\u0026 wget $GEOIPURL -O - | gunzip -dc \u003e /etc/$LOGSTASH_NAME/GeoIP.dat     \u0026\u0026 wget $GEOCITYURL -O - | gunzip -dc \u003e /etc/$LOGSTASH_NAME/GeoLiteCity.dat     \u0026\u0026 echo \"[i] Building kibana\"     \u0026\u0026 wget -O /tmp/$KIBANA_PKG.tar.gz $KIBANA_URL     \u0026\u0026 tar -xzf /tmp/$KIBANA_PKG.tar.gz -C /opt/     \u0026\u0026 ln -s /opt/$KIBANA_PKG /opt/$KIBANA_NAME     \u0026\u0026 rm -rf /opt/$KIBANA_PKG/node/     \u0026\u0026 mkdir -p /opt/$KIBANA_PKG/node/bin/     \u0026\u0026 ln -s $(which node) /opt/$KIBANA_NAME/node/bin/node     \u0026\u0026 echo \"[i] Finishing\"     \u0026\u0026 rm -rf /tmp/*.tar.gz /var/cache/apk/*     \u0026\u0026 echo \"[i] Done\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/elasticsearch.yml",
            "/opt/elasticsearch/config/elasticsearch.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/logstash.json",
            "/etc/$LOGSTASH_NAME/$LOGSTASH_NAME.json"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts",
            "/scripts"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/elasticsearch"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "514",
            "514/udp",
            "5601",
            "8080",
            "9200",
            "9300"
          ]
        },
        {
          "CmdLine": [
            "/scripts/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}