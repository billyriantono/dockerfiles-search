{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Marco Gordillo \u003cmarcopgordillo@gmail.com\u003e\""
            },
            {
              "Key": "description",
              "Value": "\"This example Dockerfile installs Apache.\""
            },
            {
              "Key": "version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/bootstrap/"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026       apk upgrade \u0026\u0026       apk add --update apache2 ca-certificates openssl php7 php7-apache2 php7-curl php7-dom php7-exif php7-fileinfo php7-pecl-apcu php7-json php7-mbstring php7-mysqli php7-pdo_mysql php7-common php7-openssl php7-imagick php7-xml php7-zip php7-gd php7-iconv php7-mcrypt php7-simplexml php7-xmlreader php7-zlib php7-ssh2 php7-ftp php7-sockets php7-bcmath php7-opcache php7-phar php7-ctype php7-pdo php7-tokenizer php7-xmlwriter php7-session ghostscript imagemagick \u0026\u0026       rm -rf /var/cache/apk/* \u0026\u0026       deluser apache \u0026\u0026 delgroup www-data \u0026\u0026 deluser xfs \u0026\u0026 addgroup -S xfs \u0026\u0026 adduser -S xfs \u0026\u0026       addgroup -S -g 33 www-data \u0026\u0026       adduser -s /sbin/nologin -h /var/www -H -D -S -u 33 -G www-data www-data \u0026\u0026       mkdir /etc/apache2/sites-enabled \u0026\u0026 mkdir /var/log/httpd \u0026\u0026 mkdir /var/www/cgi-bin \u0026\u0026       ln -s /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-enabled/000-default.conf \u0026\u0026       ln -sf /dev/stdout /var/log/httpd/access.log \u0026\u0026 ln -sf /dev/stder /var/log/httpd/error.log \u0026\u0026       cd /tmp \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026       php composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026 rm composer-setup.php \u0026\u0026 cd / \u0026\u0026       chmod +x /bootstrap/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "80/tcp"
          ]
        },
        {
          "CmdLine": [
            "/bootstrap/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}