MetaArgs: null
Stages:
- As: builder
  BaseName: golang:alpine
  Commands:
  - Key: WATCHTOWER_VERSION
    Name: arg
    Value: master
  - CmdLine:
    - apk add --no-cache     alpine-sdk     ca-certificates     git     tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --branch "${WATCHTOWER_VERSION}" https://github.com/containrrr/watchtower.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd watchtower &&     GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build -a -ldflags
      '-extldflags "-static"' . &&   GO111MODULE=on go test ./... -v
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:alpine as builder
- BaseName: alpine
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs/ca-certificates.crt
    - /etc/ssl/certs/ca-certificates.crt
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/share/zoneinfo
    - /usr/share/zoneinfo
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/watchtower/watchtower
    - /watchtower
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/docker-credential-ecr-login
    - /bin/docker-credential-ecr-login
  - CmdLine:
    - /watchtower
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
