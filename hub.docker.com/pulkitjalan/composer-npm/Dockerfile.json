{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "rm /bin/sh     \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install -y     curl     zip     unzip     wget     git-core     python-pip     jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" \u003e /etc/apt/sources.list.d/ppa_ondrej_php.list     \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E5267A6C     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y         php7.3         php7.3-curl         php7.3-common         php7.3-json         php7.3-mbstring         php7.3-xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/usr/local/bin/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer     \u0026\u0026 composer global require hirak/prestissimo:@stable     \u0026\u0026 composer clear-cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${COMPOSER_HOME}/vendor/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "NVM_DIR",
          "Name": "arg",
          "Value": "/usr/local/nvm"
        },
        {
          "Key": "NVM_VERSION",
          "Name": "arg",
          "Value": "0.34.0"
        },
        {
          "CmdLine": [
            "mkdir -p $NVM_DIR     \u0026\u0026 wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v$NVM_VERSION/install.sh | bash     \u0026\u0026 source $NVM_DIR/nvm.sh     \u0026\u0026 nvm install --lts     \u0026\u0026 nvm use --lts     \u0026\u0026 n=$(which node)     \u0026\u0026 n=${n%/bin/node}     \u0026\u0026 chmod -R 755 $n/bin/*     \u0026\u0026 cp -r $n/{bin,lib,share} /usr/local     \u0026\u0026 nvm unload     \u0026\u0026 rm -rf $NVM_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y autoremove     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf ~/* /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 history -c"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}