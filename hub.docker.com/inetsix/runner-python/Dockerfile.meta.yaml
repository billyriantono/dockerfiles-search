MetaArgs: null
Stages:
- BaseName: python:3-alpine3.9
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Thomas Grimonet"'
    Name: label
  - Labels:
    - Key: com.example.version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: vendor1
      Value: '"Inetsix"'
    Name: label
  - Labels:
    - Key: com.example.release-date
      Value: '"2019-05-07"'
    Name: label
  - Labels:
    - Key: com.example.version.is-production
      Value: '"True"'
    Name: label
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.13
    Name: env
  - Env:
    - Key: PACKER_VERSION
      Value: 1.4.0
    Name: env
  - CmdLine:
    - set -x   echo "http://dl-6.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories   &&
      apk update   && apk upgrade   && apk add curl wget unzip openrc git openntpd
      tzdata jq bash   && python --version; python3 --version; docker --version; git
      --version; jq --version
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && ls /usr/share/zoneinfo   && cp /usr/share/zoneinfo/Europe/Paris
      /etc/localtime   && echo "Europe/Paris" >  /etc/timezone   && date   && apk
      del tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && pip install awscli --upgrade   && exec bash
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && aws --version
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && curl -O "https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip"   &&
      unzip packer_${PACKER_VERSION}_linux_amd64.zip   && rm -rf packer_${PACKER_VERSION}_linux_amd64.zip   &&
      mv packer /usr/bin   && packer version
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && curl -O "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"   &&
      unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip   && rm -rf terraform_${TERRAFORM_VERSION}_linux_amd64.zip   &&
      mv terraform /usr/bin   && terraform version
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /project
  - Name: workdir
    Path: /project
  From:
    Image: python:3-alpine3.9
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-alpine3.9
