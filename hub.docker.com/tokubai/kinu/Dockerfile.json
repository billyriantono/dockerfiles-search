{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Takatoshi Maeda \u003cme@tmd.tw\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin:/usr/local/go/vendor/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "env DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     apt-get install -y libwebp-dev libmagickwand-dev git wget \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/usr/local/go/vendor"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_VERSION",
              "Value": "1.0.0.alpha13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_BIND",
              "Value": "0.0.0.0:80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_LOG_LEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_LOG_FORMAT",
              "Value": "ltsv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_RESIZE_ENGINE",
              "Value": "ImageMagick"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_STORAGE_TYPE",
              "Value": "File"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KINU_FILE_DIRECTORY",
              "Value": "/var/local/kinu"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/golang \u0026\u0026     wget https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz -q -P /tmp/golang \u0026\u0026     cd /tmp/golang \u0026\u0026     tar zxf go${GOLANG_VERSION}.linux-amd64.tar.gz \u0026\u0026     mv ./go /usr/local/go \u0026\u0026     mkdir /usr/local/go/vendor \u0026\u0026     go get -d github.com/tokubai/kinu \u0026\u0026     cd /usr/local/go/vendor/src/github.com/tokubai/kinu/ \u0026\u0026     git fetch \u0026\u0026 git checkout refs/tags/${KINU_VERSION} \u0026\u0026     go build -o /usr/local/bin/kinu . \u0026\u0026     mkdir -p /var/local/kinu \u0026\u0026     rm -rf /tmp/golang \u0026\u0026     rm -rf /usr/local/go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "kinu"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}