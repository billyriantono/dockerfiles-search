MetaArgs: null
Stages:
- BaseName: atlassian/default-image:2
  Commands:
  - CmdLine:
    - apt-key update &&     apt-get -y update &&     apt-get -y install software-properties-common
      &&     add-apt-repository ppa:ondrej/php &&     apt-get -y upgrade &&     apt-get
      -y update --fix-missing
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y --force-yes install         php7.2-common         php7.2-cli         php7.2-mysqlnd         php7.2-curl         php7.2-bcmath         php7.2-mbstring         php7.2-soap         php7.2-xml         php7.2-zip         php7.2-json         php7.2-imap         php7.2-intl         php7.2-pgsql
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
      &&     unzip awscli-bundle.zip &&     ./awscli-bundle/install -i /usr/local/aws
      -b /usr/local/bin/aws
    Name: run
    PrependShell: true
  - CmdLine:
    - 'php -r "copy(''https://getcomposer.org/installer'', ''composer-setup.php'');"
      &&     EXPECTED_SIGNATURE="$(curl https://composer.github.io/installer.sig)"
      &&     ACTUAL_SIGNATURE="$(php -r "echo hash_file(''sha384'', ''composer-setup.php'');")"
      &&     if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ] ; then >&2 echo ''ERROR:
      Invalid installer signature'' &&         rm composer-setup.php &&         exit
      1 ; fi &&     echo "Installer Verified!" &&     php composer-setup.php &&     php
      -r "unlink(''composer-setup.php'');" &&     mv composer.phar /usr/local/bin/composer
      &&     composer global require hirak/prestissimo --no-plugins --no-scripts'
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_VERSION
      Value: 0.34.0
    - Key: NVM_DIR
      Value: /root/.nvm
    - Key: NODE_VERSION
      Value: lts/dubnium
    Name: env
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh
      | bash     && . $NVM_DIR/nvm.sh &&     nvm ls-remote --lts &&     nvm install
      $NODE_VERSION &&     nvm alias default $NODE_VERSION &&     nvm use default
      &&     echo "nvm use default" >> /root/.bashrc &&     npm install -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/sass/dart-sass/releases/download/1.5.0/dart-sass-1.5.0-linux-x64.tar.gz
      &&     tar -xvzf dart-sass-1.5.0-linux-x64.tar.gz &&     mv -v dart-sass/* /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy python python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pydrive && pip install backoff
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade google-api-python-client
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/gdcp     && cd /usr/src/     && git clone https://github.com/ctberthiaume/gdcp.git     &&
      cp gdcp/gdcp /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HOME/.gdcp
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "client_config_file: "$HOME"/.gdcp/client_secrets.json" > $HOME/.gdcp/settings.yaml     &&  echo
      "get_refresh_token: True" >> $HOME/.gdcp/settings.yaml     &&  echo "save_credentials:
      True" >> $HOME/.gdcp/settings.yaml     &&  echo "save_credentials_backend: file"
      >> $HOME/.gdcp/settings.yaml     &&  echo "save_credentials_file: "$HOME"/.gdcp/credentials.json"
      >> $HOME/.gdcp/settings.yaml     &&  echo "client_config_backend: file" >> $HOME/.gdcp/settings.yaml'
    Name: run
    PrependShell: true
  From:
    Image: atlassian/default-image:2
  Name: ""
  Platform: ""
  SourceCode: FROM atlassian/default-image:2
