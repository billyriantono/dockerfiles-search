{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "debian",
      "SourceCode": "FROM debian as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "debian"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "0"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026   apt-get -y install     autoconf     clang     curl     build-essential     libc++-dev     libgflags-dev     libgtest-dev     libtool     make     wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "builder",
      "BaseName": "base",
      "SourceCode": "FROM base as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "user",
          "User": "0"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026   apt-get -y install     git     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026   git clone -b $(curl -L https://grpc.io/release)       https://github.com/grpc/grpc /var/local/git/grpc \u0026\u0026     cd /var/local/git/grpc \u0026\u0026     git submodule update --init \u0026\u0026     echo \"--- installing protobuf ---\" \u0026\u0026     cd third_party/protobuf \u0026\u0026     ./autogen.sh \u0026\u0026 ./configure --enable-shared \u0026\u0026     make -j$(nproc) \u0026\u0026 make install \u0026\u0026 make clean \u0026\u0026 ldconfig \u0026\u0026     echo \"--- installing grpc ---\" \u0026\u0026     cd /var/local/git/grpc \u0026\u0026     make -j$(nproc) \u0026\u0026 make install \u0026\u0026 make clean \u0026\u0026 ldconfig \u0026\u0026     make -j$(nproc) grpc_cli"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base",
      "SourceCode": "FROM base",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Basic GNU gcc Debian environment with a number of libraries configured\""
            },
            {
              "Key": "MAINTAINER",
              "Value": "\"Thomas Thorne \u003cTafThorne@GoogleMail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/protoc",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/include/google/protobuf",
            "/usr/local/include/google/protobuf"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/libproto*",
            "/usr/local/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/pkgconfig/protobuf*.pc",
            "/usr/local/lib/pkgconfig/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/grpc_*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/include/grpc",
            "/usr/local/include/grpc"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/include/grpc++",
            "/usr/local/include/grpc++"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/include/grpcpp",
            "/usr/local/include/grpcpp"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/libaddress_sorting*",
            "/usr/local/lib/libgpr*",
            "/usr/local/lib/libgrpc*",
            "/usr/local/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/pkgconfig/gpr.pc",
            "/usr/local/lib/pkgconfig/grpc*.pc",
            "/usr/local/lib/pkgconfig/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/var/local/git/grpc/bins/opt/grpc_cli",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026   apt-get -y install     cppcheck     cpputest     git     lcov     libhdf5-cpp-100     libhdf5-dev     libhdf5-serial-dev     libspdlog-dev     libwebsockets-dev     libwebsocketpp-dev     netcat-openbsd     pkg-config     uuid-dev     valgrind     zip   \u0026\u0026 rm -rf /var/lib/apt/lists/*;   adduser builder -uid 1000 --disabled-password --gecos \"Bob Builder,1,2,3\";   echo \"builder:.builder\" chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "builder"
        }
      ]
    }
  ]
}