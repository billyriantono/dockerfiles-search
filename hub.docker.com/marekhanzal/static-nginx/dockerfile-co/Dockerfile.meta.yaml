MetaArgs: null
Stages:
- BaseName: maluuba/tomcat7-java8
  Commands:
  - Maintainer: Maluuba NLP Team <nlp@maluuba.com>
    Name: maintainer
  - CmdLine:
    - apt-get -y update && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy libmysqlclient-dev python-dev libxml2-dev libxslt-dev python-pip
      build-essential   && yes | pip install pip==1.4.1   && yes | easy_install -U
      distribute
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL -o /usr/local/bin/jq http://stedolan.github.io/jq/download/linux64/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove maven2
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.3
    Name: env
  - CmdLine:
    - curl -sSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
      | tar xzf - -C /usr/share   && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven   &&
      ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - CmdLine:
    - mkdir -p /tmp/docker_dir
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/docker_dir
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Gemfile
    - /tmp/docker_dir/Gemfile
  - Chown: ""
    Name: add
    SourcesAndDest:
    - known_hosts
    - /usr/share/tomcat7/.ssh/known_hosts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Gemfile.lock
    - /tmp/docker_dir/Gemfile.lock
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install_rvm.sh
    - /tmp/docker_dir/install_rvm.sh
  - CmdLine:
    - chmod +x /tmp/docker_dir/install_rvm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/docker_dir/install_rvm.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBSVM_PATH
      Value: /tmp/LIBSVM
    Name: env
  - CmdLine:
    - mkdir -p $LIBSVM_PATH     && curl http://www.csie.ntu.edu.tw/~cjlin/libsvm/libsvm-3.20.tar.gz     |
      tar xvz --directory $LIBSVM_PATH     && cd $LIBSVM_PATH/libsvm-*     && make     &&
      cp svm-train /usr/local/bin/     && cp svm-predict /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: CRFPP_PATH
      Value: /tmp/CRFPP
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/local/lib
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - libs
    - /tmp/libs
  - CmdLine:
    - mkdir -p $CRFPP_PATH     && tar xvz --directory=$CRFPP_PATH --file=/tmp/libs/CRF++-0.58.tar.gz     &&
      cd $CRFPP_PATH/CRF*     && ./configure     && make     && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/tomcat7/nlptoolset/nlprepos
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/tomcat7/nlptoolset/db
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R tomcat7:tomcat7 /usr/share/tomcat7/nlptoolset
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start-nlp-toolset.sh
    - /opt/start-nlp-toolset.sh
  - CmdLine:
    - chmod +x /opt/start-nlp-toolset.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    - -c
    - /opt/start-nlp-toolset.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: maluuba/tomcat7-java8
  Name: ""
  Platform: ""
  SourceCode: FROM maluuba/tomcat7-java8
