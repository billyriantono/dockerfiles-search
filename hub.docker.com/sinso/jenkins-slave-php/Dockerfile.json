{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "million12/php-testing:php56",
      "SourceCode": "FROM million12/php-testing:php56",
      "Platform": "",
      "From": {
        "Image": "million12/php-testing:php56"
      },
      "Commands": [
        {
          "Maintainer": "Jonas Renggli \u003cjonas.renggli@swisscom.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum install -y openssh-server openssh-clients pwgen sudo hostname patch vim mc links \u0026\u0026   yum clean all \u0026\u0026   ssh-keygen -q -b 1024 -N '' -t rsa -f /etc/ssh/ssh_host_rsa_key \u0026\u0026   ssh-keygen -q -b 1024 -N '' -t dsa -f /etc/ssh/ssh_host_dsa_key \u0026\u0026   ssh-keygen -q -b 521 -N '' -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key \u0026\u0026   sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \u0026\u0026   sed -i -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config \u0026\u0026   sed -i -r 's/.?UsePAM.+/UsePAM no/' /etc/ssh/sshd_config \u0026\u0026   sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config \u0026\u0026   sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin no/' /etc/ssh/sshd_config \u0026\u0026   sed -i '/secure_path/d' /etc/sudoers \u0026\u0026   echo 'www  ALL=(ALL)  NOPASSWD: ALL' \u003e /etc/sudoers.d/www \u0026\u0026   rm -rf /config/init/10-nginx-data-dirs.sh /etc/supervisor.d/nginx.conf /etc/supervisor.d/php-fpm.conf \u0026\u0026   echo \u003e /etc/sysconfig/i18n"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y php-xml php-soap \t\u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y php56-php-pecl-xdebug \t\u0026\u0026 yum clean all \t\u0026\u0026 ln -s /opt/remi/php56/root/usr/lib64/php/modules/xdebug.so /usr/lib64/php/modules/ \t\u0026\u0026 cp /opt/remi/php56/root/etc/php.d/15-xdebug.ini /etc/php.d/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install compass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/local/lib/node_modules/npm \t\u0026\u0026 git clone https://github.com/DIREKTSPEED-LTD/npm /usr/local/lib/node_modules/npm \t\u0026\u0026 rm -rf /usr/local/lib/node_modules/npm/.git \t\u0026\u0026 rm -f  /usr/bin/npm \t\u0026\u0026 ln -s -f /usr/local/bin/npm /usr/bin/npm \t\u0026\u0026 cd /usr/local/lib/node_modules/npm \t\u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y fontforge java-1.8.0-openjdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex;   wget \"https://sourceforge.net/projects/freetype/files/freetype2/2.8.1/freetype-2.8.1.tar.gz/download\" -O freetype-2.8.1.tar.gz;   tar xzf freetype-2.8.1.tar.gz;   cd freetype-*;   ./configure;   make;   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget \"http://sourceforge.net/projects/freetype/files/ttfautohint/1.4.1/ttfautohint-1.4.1.tar.gz/download\" -O ttfautohint-1.4.1.tar.gz \t\u0026\u0026 tar xzf ttfautohint-1.4.1.tar.gz \t\u0026\u0026 cd ttfautohint-* \t\u0026\u0026 yum install -y harfbuzz-devel qtwebkit-devel \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/cf-linux-amd64.tgz https://s3.amazonaws.com/go-cli/releases/v6.19.0/cf-cli_6.19.0_linux_x86-64.tgz \u0026\u0026    tar xvf /tmp/cf-linux-amd64.tgz -C /tmp \u0026\u0026     mv /tmp/cf /usr/local/bin/cf \u0026\u0026     rm /tmp/cf-linux-amd64.tgz \u0026\u0026     cf install-plugin -f https://swisscom-plugin.scapp.io/linux64/swisscom-plugin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-i686.tar.bz2 \t\u0026\u0026 tar xjf phantomjs-2.1.1-linux-i686.tar.bz2 \t\u0026\u0026 cp phantomjs-2.1.1-linux-i686/bin/phantomjs /usr/bin/phantomjs \t\u0026\u0026 rm -rf phantomjs-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://yslow.org/yslow-phantomjs-3.1.8.zip \t\u0026\u0026 unzip yslow-phantomjs-3.1.8.zip \t\u0026\u0026 cp yslow.js /opt/yslow.js \t\u0026\u0026 rm yslow-phantomjs-3.1.8.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install --unsafe-perm -g gulp grunt-cli yo sitespeed.io@04.0.0-alpha.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        }
      ]
    }
  ]
}