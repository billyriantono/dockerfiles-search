{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.11-fpm",
      "SourceCode": "FROM php:7.3.11-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3.11-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Jonas Renggli \u003cjonas.renggli@swisscom.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \t\tvim \t\tnet-tools \t\tprocps \t\ttelnet     libpcre3-dev \t\tstrace \t\tnetcat                 libzip-dev                 multiarch-support \t\u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \t\timagemagick \t\tgraphicsmagick \t\tzip \t\tunzip \t\twget \t\tcurl \t\tgit \t\tmariadb-client \t\tmoreutils \t\tdnsutils \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libpng-dev libjpeg-dev libfreetype6-dev\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements} \t\u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/lib \t\u0026\u0026 docker-php-ext-install gd \t\u0026\u0026 apt-get purge -y ${buildRequirements} \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runtimeRequirements=\"re2c libmcrypt4 libmcrypt-dev mcrypt\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${runtimeRequirements} \t\u0026\u0026 pecl install mcrypt-1.0.2 \t\u0026\u0026 docker-php-ext-enable mcrypt \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libicu-dev g++\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements} \t\u0026\u0026 docker-php-ext-install intl \t\u0026\u0026 apt-get purge -y ${buildRequirements} \t\u0026\u0026 runtimeRequirements=\"libicu63\" \t\u0026\u0026 apt-get install -y --auto-remove ${runtimeRequirements} \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libyaml-dev\"   \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements}   \u0026\u0026 pecl install yaml   \u0026\u0026 echo \"extension=yaml.so\" \u003e /usr/local/etc/php/conf.d/ext-yaml.ini   \u0026\u0026 apt-get purge -y ${buildRequirements}   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runtimeRequirements=\"libmagickwand-6.q16-dev --no-install-recommends\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${runtimeRequirements} \t\u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/ImageMagick-6.8.9/bin-Q16/MagickWand-config /usr/bin/ \t\u0026\u0026 pecl install imagick \t\u0026\u0026 echo \"extension=imagick.so\" \u003e /usr/local/etc/php/conf.d/ext-imagick.ini \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libxml2-dev\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements} \t\u0026\u0026 docker-php-ext-install soap \t\u0026\u0026 apt-get purge -y ${buildRequirements} \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"zlib1g-dev\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements} \t\u0026\u0026 docker-php-ext-install zip \t\u0026\u0026 apt-get purge -y ${buildRequirements} \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/4.3.0.tar.gz \t\u0026\u0026 mkdir -p /tmp/redis \t\u0026\u0026 tar xzf /tmp/redis.tar.gz -C /tmp/redis --strip-components=1 \t\u0026\u0026 cd /tmp/redis \t\u0026\u0026 phpize \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 make install \t\u0026\u0026 echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/ext-redis.ini \t\u0026\u0026 rm -rf /tmp/redis.tar.gz /tmp/redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu \t\u0026\u0026 echo \"extension=apcu.so\\napc.enable_cli = 1\" \u003e /usr/local/etc/php/conf.d/ext-apcu.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/bin/php /usr/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/locale.gen",
            "/etc/locale.gen"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y locales \t\u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh www-data -s /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -d /data/web/releases/current www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/php.ini",
            "/usr/local/etc/php/conf.d/php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/Settings.yaml.docker",
            "/opt/docker/Settings.yaml.docker"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/bin",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y msmtp \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/msmtprc",
            "/etc/msmtprc"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y cron \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/policy.xml",
            "/etc/ImageMagick-6/policy.xml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./assets/libpcre3_8.39-3_amd64.deb",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "dpkg -i /tmp/libpcre3_8.39-3_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./assets/CA_CERT_BJB.crt",
            "/usr/local/share/ca-certificates"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data/web/releases/current"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}