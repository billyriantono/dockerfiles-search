{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0-apache",
      "SourceCode": "FROM php:7.0-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.0-apache"
      },
      "Commands": [
        {
          "Maintainer": "Jonas Renggli \u003cjonas.renggli@swisscom.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \t\tvim \t\tnet-tools \t\tprocps \t\ttelnet \t\tnetcat \t\u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \t\timagemagick \t\tgraphicsmagick \t\tzip \t\tunzip \t\twget \t\tcurl \t\tgit \t\tmysql-client \t\tmoreutils \t\tdnsutils \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libpng-dev libjpeg-dev libfreetype6-dev\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements} \t\u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/lib \t\u0026\u0026 docker-php-ext-install gd \t\u0026\u0026 apt-get purge -y ${buildRequirements} \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runtimeRequirements=\"libgeoip-dev\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${runtimeRequirements} \t\u0026\u0026 pecl install geoip-1.1.1 \t\u0026\u0026 echo \"extension=geoip.so\" \u003e /usr/local/etc/php/conf.d/ext-geoip.ini \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/php.ini",
            "/usr/local/etc/php/conf.d/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/locale.gen",
            "/etc/locale.gen"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y locales \t\u0026\u0026 rm -r /var/lib/apt/lists/* \t\u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh www-data -s /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -d /var/www/html www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y ssmtp \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/ssmtp.conf",
            "/opt/docker/ssmtp.conf"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y cron \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PIWIK_VERSION",
              "Value": "3.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /var/www/html \u0026\u0026 \tcurl -L -O http://builds.matomo.org/piwik-${PIWIK_VERSION}.tar.gz \u0026\u0026 \ttar --strip 1 -xzf piwik-${PIWIK_VERSION}.tar.gz \u0026\u0026 \trm piwik-${PIWIK_VERSION}.tar.gz \u0026\u0026 \tchown -R www-data:www-data tmp config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O misc/GeoIPCity.dat.gz http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz \u0026\u0026 \tgunzip misc/GeoIPCity.dat.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/config.ini.php.docker",
            "/var/www/html/config/config.ini.php.docker"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/piwik-archive",
            "/etc/cron.d/piwik-archive"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html/plugins/WebsiteGroups \u0026\u0026 \tcd /var/www/html/plugins/WebsiteGroups \u0026\u0026 \twget -O WebsiteGroups.tar.gz https://github.com/PiwikPRO/plugin-WebsiteGroups/archive/0.2.0.tar.gz \u0026\u0026 \ttar xzf WebsiteGroups.tar.gz --strip 1 \u0026\u0026 \trm -f WebsiteGroups.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html/plugins/ClickHeat \u0026\u0026         cd /var/www/html/plugins/ClickHeat \u0026\u0026         wget -O ClickHeat.tar.gz https://github.com/piwikjapan/plugin-clickheat/archive/0.1.5.tar.gz \u0026\u0026         tar xzf ClickHeat.tar.gz --strip 1 \u0026\u0026         rm -f ClickHeat.tar.gz \u0026\u0026 \tmkdir -p /var/www/html/tmp/cache/clickheat/{logs,cache}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/www/html \u0026\u0026 \tchown -R www-data:www-data tmp config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "set -ex; \tunlink /var/log/apache2/error.log; \tunlink /var/log/apache2/access.log; \ttouch /var/log/error.log; \ttouch /var/log/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}