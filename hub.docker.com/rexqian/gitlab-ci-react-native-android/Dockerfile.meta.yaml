MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Daniel Jost <d.jost@pillentaxi.de>
    Name: maintainer
  - CmdLine:
    - echo "Android SDK 27.0.2"
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION_SDK_TOOLS
      Value: '"3859397"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: '"/sdk"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"$PATH:${ANDROID_HOME}/tools"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get -qq update &&     apt-get install -qqy --no-install-recommends       bzip2       curl       git-core       html2text       openjdk-8-jdk       libc6-i386       lib32stdc++6       lib32gcc1       lib32ncurses5       lib32z1       unzip       locales       gnupg     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/ssl/certs/java/cacerts;     /var/lib/dpkg/info/ca-certificates-java.postinst
      configure
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://dl.google.com/android/repository/sdk-tools-linux-${VERSION_SDK_TOOLS}.zip
      > /sdk.zip &&     unzip /sdk.zip -d /sdk &&     rm -v /sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $ANDROID_HOME/licenses/   && echo "8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e"
      > $ANDROID_HOME/licenses/android-sdk-license   && echo "84831b9409646a918e30573bab4c9c91346d8abd"
      > $ANDROID_HOME/licenses/android-sdk-preview-license
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - packages.txt
    - /sdk
  - CmdLine:
    - mkdir -p /root/.android &&   touch /root/.android/repositories.cfg &&   ${ANDROID_HOME}/tools/bin/sdkmanager
      --update
    Name: run
    PrependShell: true
  - CmdLine:
    - while read -r package; do PACKAGES="${PACKAGES}${package} "; done < /sdk/packages.txt
      &&     ${ANDROID_HOME}/tools/bin/sdkmanager ${PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Yarn Deb Source\" \t&& curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add - \t&& echo \"deb http://dl.yarnpkg.com/debian/ stable main\"
      | tee /etc/apt/sources.list.d/yarn.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Node.JS\" \t&& curl -sL https://deb.nodesource.com/setup_10.x
      | bash -"
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_PACKAGES
      Value: git yarn nodejs build-essential imagemagick librsvg2-bin ruby ruby-dev
        wget libcurl4-openssl-dev
    Name: env
  - CmdLine:
    - "echo \"Installing Additional Libraries\" \t && rm -rf /var/lib/gems \t && apt-get
      update && apt-get install $BUILD_PACKAGES -qqy --no-install-recommends"
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '''en_US.UTF-8'''
    - Key: LANGUAGE
      Value: '''en_US:en'''
    - Key: LC_ALL
      Value: '''en_US.UTF-8'''
    Name: env
  - CmdLine:
    - "echo \"Installing Fastlane 2.61.0\" \t&& gem install fastlane badge -N \t&&
      gem cleanup"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge -y --auto-remove
    Name: run
    PrependShell: true
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
