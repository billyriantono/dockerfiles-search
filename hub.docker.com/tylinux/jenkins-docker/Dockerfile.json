{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins:alpine",
      "SourceCode": "FROM jenkins/jenkins:alpine",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins:alpine"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apk update -f   \u0026\u0026 apk --no-cache add -f   openssl   coreutils   bind-tools   curl   socat   tzdata   tar   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LE_CONFIG_HOME",
              "Value": "/acme.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AUTO_UPGRADE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget  -O /tmp/acme.sh.zip https://github.com/Neilpang/acme.sh/archive/2.8.2.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip /tmp/acme.sh.zip -d /tmp/     \u0026\u0026 mv /tmp/acme.sh-2.8.2 /install_acme.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /install_acme.sh \u0026\u0026 ([ -f /install_acme.sh/acme.sh ] \u0026\u0026 /install_acme.sh/acme.sh --install --home /jenkins/) \u0026\u0026 rm -rf /install_acme.sh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown jenkins:jenkins -R /jenkins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /jenkins/acme.sh /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache python3 \u0026\u0026     python3 -m ensurepip \u0026\u0026     pip3 install --upgrade pip setuptools \u0026\u0026     if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi \u0026\u0026     if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi \u0026\u0026     rm -r /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache nodejs npm \u0026\u0026     npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;         apk add --no-cache --virtual .gosu-deps     dpkg     gnupg     ;         dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\";     wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";     wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";         export GNUPGHOME=\"$(mktemp -d)\";     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;     gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;     command -v gpgconf \u0026\u0026 gpgconf --kill all || :;     rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc;         apk del --no-network .gosu-deps;         chmod +x /usr/local/bin/gosu;     gosu --version;     gosu nobody true     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/acme.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod u+x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jenkins",
            "/sbin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}