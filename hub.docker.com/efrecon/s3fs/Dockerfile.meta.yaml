MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Key: S3FS_VERSION
    Name: arg
    Value: v1.84
  - Env:
    - Key: AWS_S3_URL
      Value: https://s3.amazonaws.com
    Name: env
  - Env:
    - Key: AWS_S3_ACCESS_KEY_ID
      Value: ""
    Name: env
  - Env:
    - Key: AWS_S3_SECRET_ACCESS_KEY
      Value: ""
    Name: env
  - Env:
    - Key: AWS_S3_SECRET_ACCESS_KEY_FILE
      Value: ""
    Name: env
  - Env:
    - Key: AWS_S3_AUTHFILE
      Value: ""
    Name: env
  - Env:
    - Key: AWS_S3_BUCKET
      Value: ""
    Name: env
  - Env:
    - Key: OWNER
      Value: "0"
    Name: env
  - Env:
    - Key: AWS_S3_MOUNT
      Value: /mnt/bucket
    Name: env
  - Env:
    - Key: S3FS_DEBUG
      Value: "0"
    Name: env
  - Env:
    - Key: S3FS_ARGS
      Value: ""
    Name: env
  - CmdLine:
    - apk --no-cache add ca-certificates fuse build-base git automake autoconf alpine-sdk
      libxml2 libxml2-dev libressl-dev fuse-dev libcurl curl-dev tini &&     git clone
      https://github.com/s3fs-fuse/s3fs-fuse.git &&     cd s3fs-fuse &&     git checkout
      tags/${S3FS_VERSION} &&     ./autogen.sh &&     ./configure --prefix=/usr &&     make
      &&     make install &&     apk --no-cache del automake autoconf libxml2-dev
      libressl-dev fuse-dev curl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - s3fs --version
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.sh'
    - /usr/local/bin/
  - Name: volume
    Volumes:
    - /mnt/bucket
  - CmdLine:
    - tini
    - -g
    - --
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ls.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
