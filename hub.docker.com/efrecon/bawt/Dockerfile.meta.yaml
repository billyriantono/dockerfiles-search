MetaArgs: null
Stages:
- BaseName: yanzinetworks/alpine:3.10.1
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"efrecon@gmail.com"'
    Name: label
  - Key: BAWT_VERSION
    Name: arg
    Value: 1.0.0
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    Name: label
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: org.label-schema.name
      Value: '"efrecon/bawt"'
    Name: label
  - Labels:
    - Key: org.label-schema.description
      Value: '"BAWT-based Tcl distribution, compiled from source"'
    Name: label
  - Labels:
    - Key: org.label-schema.url
      Value: '"http://www.bawt.tcl3d.org/"'
    Name: label
  - Labels:
    - Key: org.label-schema.docker.cmd
      Value: '"docker run --rm -it efrecon/bawt"'
    Name: label
  - Env:
    - Key: USER
      Value: tcler
    Name: env
  - Env:
    - Key: UID
      Value: "8690"
    Name: env
  - Env:
    - Key: GID
      Value: "8690"
    Name: env
  - CmdLine:
    - addgroup --gid "$GID" "$USER" &&     adduser         --disabled-password         --gecos
      ""         --ingroup "$USER"         --uid "$UID"         "$USER"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Tcl_Only.bawt
    - install.sh
    - /tmp/
  - CmdLine:
    - apk --no-cache add bash build-base pkgconfig curl p7zip tzdata linux-headers
      &&                          `# install build and run dependencies`     curl
      -Ls http://www.bawt.tcl3d.org/download/Bawt-${BAWT_VERSION}.zip -o /tmp/Bawt-${BAWT_VERSION}.zip
      && `# Fetch BAWT at proper version`     7z x -o/tmp -- /tmp/Bawt-${BAWT_VERSION}.zip
      &&                                                          `# unzip using one
      of the dependencies`     chmod u+x /tmp/Bawt-${BAWT_VERSION}/Build-*.sh /tmp/Bawt-${BAWT_VERSION}/tclkit-*
      &&                     `# Force execution on necessary scripts`     cp /usr/share/zoneinfo/UTC
      /etc/localtime &&                                                             `#
      Fix timezone so BAWT can run properly`     echo "UTC" > /etc/timezone &&     cp
      /tmp/Tcl_Only.bawt /tmp/Bawt-${BAWT_VERSION}/Setup/ &&                                                `#
      Copy image-dependent list of packages into BAWT so we can include if necessary`     cd
      /tmp/Bawt-${BAWT_VERSION} &&                                                                          `#
      BAWT only runs from directory`     ./Build-Linux.sh x64 Setup/Tcl_Only.bawt
      update &&                                                       `# Build, run
      and install everything. TAKES TIME!`     /tmp/install.sh &&                                                                                       `#
      Install into /usr/local`     rm -rf /usr/local/man /usr/local/share/man /usr/local/share/info
      &&                                      `# Remove documentation to squeeze away
      space`     apk --no-cache del bash build-base pkgconfig curl p7zip &&                                               `#
      Remove build dependencies`     rm -rf /tmp/*.apk /var/cache/apk/* &&                                                                    `#
      Remove package remains`     rm -rf /tmp/Bawt-${BAWT_VERSION}* &&                                                                     `#
      Remove BAWT itself`     rm -rf /tmp/BawtBuild                                                                                    `#
      Remove what BAWT generated`
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/tcl /opt/data && chown -R ${UID}:${GID} /opt/tcl /opt/data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt/tcl
  - Name: volume
    Volumes:
    - /opt/data
  - Env:
    - Key: TCLLIBPATH
      Value: /opt/tcl /opt/tcl/lib
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*.tcl
    - /scripts/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/tclshrc
    - /home/${USER}/.tclshrc
  - Name: user
    User: ${USER}
  - CmdLine:
    - /usr/local/bin/tclsh
    Name: entrypoint
    PrependShell: false
  From:
    Image: yanzinetworks/alpine:3.10.1
  Name: ""
  Platform: ""
  SourceCode: FROM yanzinetworks/alpine:3.10.1
