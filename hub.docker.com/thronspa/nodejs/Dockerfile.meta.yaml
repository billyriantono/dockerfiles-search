MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: THRON Devops <devops@thron.com>
    Name: maintainer
  - Env:
    - Key: TERM
      Value: '"xterm"'
    - Key: NODEJS_ARCH
      Value: '"x64"'
    - Key: NODEJS_VERSION
      Value: '"0.10.41"'
    - Key: PATH
      Value: ${PATH}:/opt/node/bin
    Name: env
  - CmdLine:
    - mkdir -p /opt &&     apt-get update &&     apt-get install -y         dos2unix         nano         iputils-ping         net-tools         wget
      &&     wget         "http://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-${NODEJS_ARCH}.tar.gz"         -O
      /tmp/node-v${NODEJS_VERSION}-linux-${NODEJS_ARCH}.tar.gz &&     tar zxvf /tmp/node-v${NODEJS_VERSION}-linux-${NODEJS_ARCH}.tar.gz
      -C /opt &&     ln -s /opt/node-v${NODEJS_VERSION}-linux-${NODEJS_ARCH} /opt/node
      &&     ln /opt/node/bin/node /usr/local/bin/node &&     echo "[INFO] Cleaning
      container" &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/
    - /
  - CmdLine:
    - dos2unix /etc/docker/start.sh && chmod +x /etc/docker/start.sh &&     dos2unix
      /etc/crontab && chmod 644 /etc/crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/docker/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
