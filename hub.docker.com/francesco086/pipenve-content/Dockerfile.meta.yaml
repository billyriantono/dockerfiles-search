MetaArgs:
- DefaultValue: x86_64
  Key: ARCH
  ProvidedValue: null
  Value: x86_64
- DefaultValue: alpine-glibc
  Key: DOCKERSRC
  ProvidedValue: null
  Value: alpine-glibc
- DefaultValue: fr3akyphantom
  Key: USERNAME
  ProvidedValue: null
  Value: fr3akyphantom
Stages:
- BaseName: woahbase/alpine-glibc:x86_64
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"fr3akyphantom <rokibhasansagar2014@outlook.com>"'
    Name: label
  - Labels:
    - Key: Description
      Value: '"This Alpine image is used to start the Android API-27 Development Works
        locally"'
    Name: label
  - Key: PUID
    Name: arg
    Value: "1000"
  - Key: PGID
    Name: arg
    Value: "1000"
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Key: SDK_TOOLS_VERSION
    Name: arg
    Value: '"4333796"'
  - Key: GRADLE_VERSION
    Name: arg
    Value: '"4.7"'
  - Key: NPM_VERSION
    Name: arg
    Value: '"latest"'
  - Key: SDK_TARGET
    Name: arg
    Value: '"27"'
  - Key: SDK_API_VERSION
    Name: arg
    Value: '"27.0.3"'
  - Env:
    - Key: JAVA_OPTS
      Value: '" -Xmx3200m "'
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    - Key: ANDROID_HOME
      Value: /opt/android/sdk/
    - Key: GRADLE_HOME
      Value: /opt/gradle-$GRADLE_VERSION
    Name: env
  - CmdLine:
    - set -xe     && apk add -uU --no-cache --purge -uU         bash alpine-sdk sudo
      shadow         curl ca-certificates openjdk8         openssl git make libc-dev
      gcc libstdc++         nodejs nodejs-npm         unzip tar
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -xe     && groupadd --gid ${PGID} alpine     && useradd --uid ${PUID} --gid
      alpine --shell /bin/bash --create-home alpine     && echo ''alpine ALL=NOPASSWD:
      ALL'' >> /etc/shadow'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && mkdir -p         ${ANDROID_HOME}         ${GRADLE_HOME}     &&
      curl -o /tmp/sdk-tools-linux-${SDK_TOOLS_VERSION}.zip         -jkSL https://dl.google.com/android/repository/sdk-tools-linux-${SDK_TOOLS_VERSION}.zip     &&
      unzip -q -d ${ANDROID_HOME}         /tmp/sdk-tools-linux-${SDK_TOOLS_VERSION}.zip     &&
      chown -Rh alpine:alpine ${ANDROID_HOME}     && curl -o /tmp/gradle-${GRADLE_VERSION}-bin.zip         -jkSL
      https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip     &&
      unzip -q -d /opt         /tmp/gradle-${GRADLE_VERSION}-bin.zip     && chown
      -Rh alpine:alpine ${GRADLE_HOME}     && npm install -g         npm@${NPM_VERSION}     &&
      rm -rf /var/cache/apk/* /tmp/* /root/.npm /root/.node-gyp
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${GRADLE_HOME}/bin
    Name: env
  - Name: user
    User: alpine
  - CmdLine:
    - set -xe     && mkdir -p ~/.android ~/.gradle     && touch ~/.android/repositories.cfg     &&
      echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager --licenses 1>/dev/null     && sdkmanager --update     && sdkmanager         "platforms;android-${SDK_TARGET}"         "build-tools;${SDK_API_VERSION}"         "platform-tools"         "tools"
      1>/dev/null
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/alpine/
  - Name: workdir
    Path: /home/alpine/project/
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: woahbase/alpine-glibc:x86_64
  Name: ""
  Platform: ""
  SourceCode: FROM woahbase/alpine-glibc:x86_64
