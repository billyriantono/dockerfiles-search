{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:3.1",
      "SourceCode": "FROM gliderlabs/alpine:3.1",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:3.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk-install openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk-install --virtual build-dependencies curl build-base openssl-dev     \u0026\u0026 mkdir -p /usr/src/python     \u0026\u0026 curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz     \u0026\u0026 tar -xJC /usr/src/python -f python.tar.xz     \u0026\u0026 rm python.tar.xz     \u0026\u0026 cd \"/usr/src/python/Python-$PYTHON_VERSION\"     \u0026\u0026 ./configure --enable-shared --without-ensurepip     \u0026\u0026 make -j$(nproc)     \u0026\u0026 make install     \u0026\u0026 find /usr/local         \\( -type d -a -name test -o -name tests \\)         -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\)         -exec rm -rf '{}' +     \u0026\u0026 ln -s /usr/local/bin/python3 /usr/local/bin/python     \u0026\u0026 rm -rf /usr/src/python     \u0026\u0026 apk del build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "X_PIP_VERSION",
              "Value": "6.0.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SETUPTOOLS_VERSION",
              "Value": "12.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk-install --virtual build-dependencies curl     \u0026\u0026 curl -SL \"https://pypi.python.org/packages/py2.py3/p/pip/pip-$X_PIP_VERSION-py2.py3-none-any.whl\" -o pip.whl     \u0026\u0026 PYTHONPATH=pip.whl python -m pip install \"pip==$X_PIP_VERSION\"     \u0026\u0026 rm pip.whl*     \u0026\u0026 pip install \"setuptools==$SETUPTOOLS_VERSION\"     \u0026\u0026 find /usr/local         \\( -type d -a -name test -o -name tests \\)         -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\)         -exec rm -rf '{}' +     \u0026\u0026 find /usr/local -type f -name '*.exe' -exec rm -rf '{}' +     \u0026\u0026 rm -rf ~/.cache/     \u0026\u0026 apk del build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}