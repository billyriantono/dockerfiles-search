MetaArgs: null
Stages:
- BaseName: openjdk:10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Paul Lam <paul@quantisan.com>"'
    Name: label
  - Env:
    - Key: LEIN_VERSION
      Value: 2.8.1
    Name: env
  - Env:
    - Key: LEIN_INSTALL
      Value: /usr/local/bin/
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - locale-gen C.UTF-8 || true
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LEIN_JVM_OPTS
      Value: -Xmx400m
    Name: env
  - Env:
    - Key: JVM_OPTS
      Value: -Xmx3200m
    Name: env
  - Name: workdir
    Path: /tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lein.key
    - lein.key
  - CmdLine:
    - 'mkdir -p $LEIN_INSTALL   && wget -q https://raw.githubusercontent.com/technomancy/leiningen/$LEIN_VERSION/bin/lein-pkg   &&
      echo "Comparing lein-pkg checksum ..."   && echo "019faa5f91a463bf9742c3634ee32fb3db8c47f0
      *lein-pkg" | sha1sum -c -   && mv lein-pkg $LEIN_INSTALL/lein   && chmod 0755
      $LEIN_INSTALL/lein   && wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip   &&
      wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip.asc   &&
      gpg --import lein.key   && rm -f lein.key   && echo "Verifying Jar file signature
      ..."   && gpg --verify leiningen-$LEIN_VERSION-standalone.zip.asc   && rm leiningen-$LEIN_VERSION-standalone.zip.asc   &&
      mkdir -p /usr/share/java   && mv leiningen-$LEIN_VERSION-standalone.zip /usr/share/java/leiningen-$LEIN_VERSION-standalone.jar   &&
      curl -sL https://deb.nodesource.com/setup_8.x | bash -   && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -   && echo "deb https://dl.yarnpkg.com/debian/ stable main" |
      tee /etc/apt/sources.list.d/yarn.list   && echo ''APT::Get::Assume-Yes "true";''
      > /etc/apt/apt.conf.d/90circleci   && echo ''DPkg::Options "--force-confnew";''
      >> /etc/apt/apt.conf.d/90circleci   && curl -sL https://deb.nodesource.com/setup_8.x
      | bash -   && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add
      -   && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list   &&
      apt-get update   && mkdir -p /usr/share/man/man1   && apt-get install -y   git
      mercurial xvfb   locales sudo openssh-client ca-certificates tar gzip parallel   net-tools
      netcat unzip zip bzip2 gnupg curl wget   nodejs make yarn chromium   && ln -sf
      /usr/share/zoneinfo/Etc/UTC /etc/localtime   && JQ_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest"   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq
      $JQ_URL   && chmod +x /usr/bin/jq   && jq --version   && set -ex   && export
      DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/
      | grep -o -e ''docker-[.0-9]*-ce\.tgz'' | sort -r | head -n 1)   && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}"   &&
      echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail
      --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}"   && ls -lha /tmp/docker.tgz   &&
      tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf
      /tmp/docker /tmp/docker.tgz   && which docker   && (docker version || true)   &&
      COMPOSE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest"   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose
      $COMPOSE_URL   && chmod +x /usr/bin/docker-compose   && docker-compose version   &&
      DOCKERIZE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz"   &&
      curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz
      $DOCKERIZE_URL   && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   &&
      rm -rf /tmp/dockerize-linux-amd64.tar.gz   && dockerize --version   && groupadd
      --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash
      --create-home circleci   && echo ''circleci ALL=NOPASSWD: ALL'' >> /etc/sudoers.d/50-circleci   &&
      echo ''Defaults    env_keep += "DEBIAN_FRONTEND"'' >> /etc/sudoers.d/env_keep'
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$LEIN_INSTALL
    Name: env
  - Env:
    - Key: LEIN_ROOT
      Value: "1"
    Name: env
  - CmdLine:
    - echo '(defproject dummy "" :dependencies [[org.clojure/clojure "1.9.0"]])' >
      project.clj   && lein deps && rm project.clj
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:10
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:10
