MetaArgs: null
Stages:
- BaseName: jupyter/base-notebook:ae885c0a6226
  Commands:
  - Key: JUPYTERHUB_VERSION
    Name: arg
    Value: "0.8"
  - Key: HELM_VERSION
    Name: arg
    Value: 2.6.2
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: 0.10.8
  - Key: JUPYTER_USER
    Name: arg
    Value: jovyan
  - Key: JUPYTER_GROUP
    Name: arg
    Value: "100"
  - Key: GOVERSION
    Name: arg
    Value: "1.8"
  - Key: AZURE_VERSION
    Name: arg
    Value: 0.8.0
  - Key: PACHYDERM_VERSION
    Name: arg
    Value: 1.6.3
  - Key: KISMATIC_VERSION
    Name: arg
    Value: 1.6.0
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: INITRD
      Value: "No"
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: GOROOT
      Value: /opt/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: /home/${JUPYTER_USER}/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:$GOROOT/bin:/${PATH}
    Name: env
  - Env:
    - Key: CLOUD_SDK_REPO
      Value: '"cloud-sdk-xenial"'
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq apt-transport-https curl apt-utils keychain git jq qemu-utils
      nano unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ wheezy
      main" | tee /etc/apt/sources.list.d/azure-cli.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq azure-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && wget https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz
      &&     tar zxf go${GOVERSION}.linux-amd64.tar.gz && rm go${GOVERSION}.linux-amd64.tar.gz
      &&     ln -s /opt/go/bin/go /usr/bin/ &&     mkdir $GOPATH
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/docopt/docopt-go
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/Microsoft/azure-vhd-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - go install github.com/Microsoft/azure-vhd-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/Azure/azure-sdk-for-go/storage
    Name: run
    PrependShell: true
  - CmdLine:
    - chown ${JUPYTER_USER}:${JUPYTER_GROUP} $GOPATH &&     fix-permissions $GOPATH
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s
      https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x ./kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./kubectl /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get >
      /tmp/get_helm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /tmp/get_helm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ls /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/get_helm.sh --version v${HELM_VERSION}
    Name: run
    PrependShell: true
  - Key: ACS_URL
    Name: arg
    Value: https://github.com/Azure/acs-engine/releases/download/v${AZURE_VERSION}/acs-engine-v${AZURE_VERSION}-linux-amd64.tar.gz
  - CmdLine:
    - curl -OL $ACS_URL
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -zxvf acs-engine-*.tar.gz && rm acs-engine-*.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x ./acs-engine*/acs-engine
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./acs-engine*/acs-engine /usr/local/bin/acs-engine
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ./acs-engine*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/pachctl.deb -L https://github.com/pachyderm/pachyderm/releases/download/v${PACHYDERM_VERSION}/pachctl_${PACHYDERM_VERSION}_amd64.deb
      && dpkg -i /tmp/pachctl.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a
      /etc/apt/sources.list.d/google-cloud-sdk.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq google-cloud-sdk
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&    wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin &&    rm
      -rf /tmp/* &&    rm -rf /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/${JUPYTER_USER}/ket &&     cd /home/${JUPYTER_USER}/ket &&     wget
      https://github.com/apprenda/kismatic/releases/download/v${KISMATIC_VERSION}/kismatic-v${KISMATIC_VERSION}-linux-amd64.tar.gz
      &&     tar -xzf kismatic-v${KISMATIC_VERSION}-linux-amd64.tar.gz -C /home/jovyan/ket
      &&     rm kismatic-v${KISMATIC_VERSION}-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /home/${JUPYTER_USER}/launch
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./README.md
    - /home/${JUPYTER_USER}/README.md
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config/config.sample
    - /home/${JUPYTER_USER}/launch/config/config.yaml
  - CmdLine:
    - chown -R ${JUPYTER_USER}:$JUPYTER_GROUP /home/${JUPYTER_USER}/launch && chown
      ${JUPYTER_USER}:$JUPYTER_GROUP /home/${JUPYTER_USER}/README.md &&mkdir /home/${JUPYTER_USER}/.ssh
      &&chown ${JUPYTER_USER}:$JUPYTER_GROUP /home/${JUPYTER_USER}/.ssh
    Name: run
    PrependShell: true
  - Name: user
    User: ${JUPYTER_USER}
  - CmdLine:
    - conda install -c conda-forge --quiet --yes     'ruamel.yaml=0.15*'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache jupyterhub==$JUPYTERHUB_VERSION
    Name: run
    PrependShell: true
  From:
    Image: jupyter/base-notebook:ae885c0a6226
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/base-notebook:ae885c0a6226
