{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:9.6-slim",
      "SourceCode": "FROM debian:9.6-slim",
      "Platform": "",
      "From": {
        "Image": "debian:9.6-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "author",
              "Value": "frapp√©"
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/bin/entrypoint"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends locales   \u0026\u0026 sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen   \u0026\u0026 dpkg-reconfigure --frontend=noninteractive locales   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-suggests --no-install-recommends   build-essential cron curl git iputils-ping libffi-dev liblcms2-dev libldap2-dev libmariadbclient-dev libsasl2-dev   libssl-dev libtiff5-dev libwebp-dev mariadb-client nginx python-dev python-pip python-setuptools python-tk redis-tools rlwrap   rlwrap software-properties-common sudo supervisor tk8.6-dev vim xfonts-75dpi xfonts-base wget wkhtmltopdf   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 wget https://deb.nodesource.com/node_10.x/pool/main/n/nodejs/nodejs_10.10.0-1nodesource1_amd64.deb -O node.deb   \u0026\u0026 dpkg -i node.deb \u0026\u0026 rm node.deb   \u0026\u0026 npm install -g yarn   \u0026\u0026 pip install -e git+https://github.com/frappe/bench.git#egg=bench --no-cache   \u0026\u0026 wget https://github.com/ncopa/su-exec/archive/dddd1567b7c76365e1e0aac561287975020a8fad.tar.gz -O - | tar xzv   \u0026\u0026 cd su-exec-* \u0026\u0026 make   \u0026\u0026 mv su-exec /usr/local/bin   \u0026\u0026 cd .. \u0026\u0026 rm -rf su-exec-*   \u0026\u0026 wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz -O - | tar xzv -C /usr/local/bin   \u0026\u0026 groupadd -g 500 frappe   \u0026\u0026 useradd -ms /bin/bash -u 500 -g 500 -G sudo frappe   \u0026\u0026 printf '# Sudo rules for frappe\\nfrappe ALL=(ALL) NOPASSWD:ALL' \u003e /etc/sudoers.d/frappe   \u0026\u0026 chown -R 500:500 /home/frappe  \u0026\u0026 chmod 777 /bin/entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "500:500",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./frappe-templates",
            "/home/frappe/templates"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6787",
            "80",
            "8000",
            "9000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/frappe/frappe-bench"
          ]
        },
        {
          "Env": [
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": "\"root\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ADMIN_PASSWORD",
              "Value": "\"admin\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SITE_NAME",
              "Value": "\"localhost\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_CACHE_HOST",
              "Value": "\"redis-cache\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_QUEUE_HOST",
              "Value": "\"redis-queue\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_SOCKETIO_HOST",
              "Value": "\"redis-socketio\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MARIADB_HOST",
              "Value": "\"mariadb\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSERVER_PORT",
              "Value": "\"8000\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOCKETIO_PORT",
              "Value": "\"9000\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BENCH",
              "Value": "\"/home/frappe/frappe-bench\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEV_MODE",
              "Value": "\"false\""
            }
          ],
          "Name": "env"
        },
        {
          "Health": {
            "StartPeriod": 300000000000,
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost || echo \"Curl failure: $?\" \u0026\u0026 exit 1"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}