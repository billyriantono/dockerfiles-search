{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "5488"
          ]
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos \"\" jsreport \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends libgconf-2-4 gnupg git curl wget ca-certificates \u0026\u0026     apt-get install -y --no-install-recommends libgtk2.0-dev         libxtst-dev         libxss1         libgconf2-dev         libnss3-dev         libasound2-dev         xvfb         xfonts-75dpi         xfonts-base \u0026\u0026     apt-get install -y default-jre unzip \u0026\u0026     curl -o fop.zip apache.miloslavbrada.cz/xmlgraphics/fop/binaries/fop-2.1-bin.zip \u0026\u0026     unzip fop.zip \u0026\u0026     rm fop.zip \u0026\u0026     chmod +x fop-2.1/fop \u0026\u0026     curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends nodejs \u0026\u0026     npm i -g npm \u0026\u0026     apt-get install -y libgconf-2-4 \u0026\u0026     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list' \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst --no-install-recommends \u0026\u0026     curl -Lo phantomjs.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2 \u0026\u0026     tar jxvf phantomjs.tar.bz2 \u0026\u0026     chmod +x phantomjs-1.9.8-linux-x86_64/bin/phantomjs \u0026\u0026     mv phantomjs-1.9.8-linux-x86_64/bin/phantomjs /usr/local/bin/ \u0026\u0026     rm -rf phantomjs* \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/* \u0026\u0026     rm -rf /src/*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/jsreport"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "PUPPETEER_SKIP_CHROMIUM_DOWNLOAD",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g jsreport-cli \u0026\u0026     jsreport init \u0026\u0026     npm uninstall -g jsreport-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install --save --save-exact jsreport-ejs         jsreport-pug         jsreport-azure-storage         jsreport-pdf-password         jsreport-phantom-pdf         jsreport-phantom-image         jsreport-mssql-store         jsreport-postgres-store         jsreport-mongodb-store         jsreport-wkhtmltopdf         jsreport-html-to-text         jsreport-fop-pdf         jsreport-html-embedded-in-docx         jsreport-fs-store-aws-s3-persistence         jsreport-fs-store-azure-storage-persistence         jsreport-fs-store-azure-sb-sync         jsreport-fs-store-aws-sns-sync         electron         jsreport-electron-pdf         phantomjs-exact-2-1-1     \u0026\u0026     npm cache clean -f \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/app/run.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:/fop-2.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "electron:strategy",
              "Value": "electron-ipc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "phantom:strategy",
              "Value": "phantom-server"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "templatingEngines:strategy",
              "Value": "http-server"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "chrome:launchOptions:executablePath",
              "Value": "google-chrome-unstable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "chrome:launchOptions:args",
              "Value": "--no-sandbox"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash",
            "/app/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}