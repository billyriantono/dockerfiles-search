{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM    ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "NGINX_CONFIG",
          "Name": "arg",
          "Value": "nginx"
        },
        {
          "CmdLine": [
            "apt update -y         \u0026\u0026 apt upgrade -y         \u0026\u0026 apt install -y             software-properties-common             python-software-properties             curl             git             nano             wget             sshpass         \u0026\u0026 LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php         \u0026\u0026 apt update -y         \u0026\u0026 echo 'mysql-server mysql-server/root_password password pass' | debconf-set-selections         \u0026\u0026 echo 'mysql-server mysql-server/root_password_again password pass' | debconf-set-selections         \u0026\u0026 apt install -y             nginx             mysql-server             mysql-client             php7.2             php7.2-cli             php7.2-cgi             php7.2-curl             php7.2-common             php7.2-fpm             php7.2-gd             php7.2-json             php7.2-mbstring             php7.2-mysql             php7.2-xml             php7.2-zip         \u0026\u0026 curl -sL https://deb.nodesource.com/setup_9.x | bash -         \u0026\u0026 apt install -y             nodejs             composer         \u0026\u0026 npm install -g             grunt         \u0026\u0026 wget http://robo.li/robo.phar         \u0026\u0026 chmod +x robo.phar         \u0026\u0026 mv robo.phar /usr/bin/robo         \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log         \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log \t    \u0026\u0026 mkdir /www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx/${NGINX_CONFIG}.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./mysql/mysqld.cnf",
            "/etc/mysql/mysql.conf.d/mysqld.cnf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./mysql/setup.sql",
            "/root/setup.sql"
          ]
        },
        {
          "CmdLine": [
            "usermod -d /var/lib/mysql/ mysql         \u0026\u0026 chown -R mysql: /var/lib/mysql/         \u0026\u0026 service mysql start         \u0026\u0026 mysql --user=root --password=pass \u003c /root/setup.sql         \u0026\u0026 rm /root/setup.sql         \u0026\u0026 service mysql stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGTERM"
        },
        {
          "Name": "expose",
          "Ports": [
            "3306",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/www"
        },
        {
          "CmdLine": [
            "echo \"Starting up container\"         \u0026\u0026 echo \"Configuring www-data user\"         \u0026\u0026 usermod -d /www/ www-data         \u0026\u0026 echo \"Settings up permissions for www-data user\"         \u0026\u0026 chown -R www-data: /www/         \u0026\u0026 echo \"Configuring mysql user\"         \u0026\u0026 usermod -d /var/lib/mysql/ mysql         \u0026\u0026 echo \"Settings up permissions for mysql user\"         \u0026\u0026 chown -R mysql: /var/lib/mysql/         \u0026\u0026 echo \"Starting PHP\"         \u0026\u0026 service php7.2-fpm start \u003e\u003e /dev/null         \u0026\u0026 echo \"Starting MySQL\"         \u0026\u0026 service mysql start \u003e\u003e /dev/null         \u0026\u0026 echo \"Starting Nginx and waiting for connection\"         \u0026\u0026 nginx -g 'daemon off;'"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}