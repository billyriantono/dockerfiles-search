MetaArgs:
- DefaultValue: "3.7"
  Key: alpine_version
  ProvidedValue: null
  Value: "3.7"
Stages:
- BaseName: alpine:${alpine_version}
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"George Kutsurua <g.kutsurua@gmail.com>"'
    Name: label
  - Key: python_version
    Name: arg
    Value: "3"
  - CmdLine:
    - apk add --no-cache sudo bash curl rsync openssl openssh-client nginx                        libpq
      libffi libxml2 libbz2                        libxslt libtool libstdc++ zlib
      git unzip                        libjpeg libjpeg-turbo openjpeg                        libpng
      tiff freetype lcms2                        libwebp tcl imagemagick imagemagick-c++                        json-c
      jsoncpp python${python_version} musl                        coreutils ca-certificates                        pcre
      libpcre32 postgresql ffmpeg &&    wget -O - https://bootstrap.pypa.io/get-pip.py
      | python${python_version} &&    ln -s /usr/bin/python${python_version} /usr/bin/python
      || true
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache libffi-dev libxml2-dev libxslt-dev zlib-dev libjpeg-turbo-dev                        libpng-dev
      tiff-dev  libwebp-dev tcl-dev openjpeg-dev freetype-dev                        lcms2-dev
      imagemagick-dev json-c-dev jsoncpp-dev musl-dev                        pcre-dev
      autoconf automake make perl swig postgresql-dev                        gcc g++
      linux-headers python${python_version}-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    - Key: LC_ALL
      Value: en_US.utf8
    - Key: LANGUAGE
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - mkdir /lib64 && ln -s /lib/ld-musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2 &&     for
      n in $(find /usr/lib -name 'libpython3*m*' -type f); do (ln -s $n `printf "$n"
      | sed -E 's/python([0-9\.]+)m(.+)/python\1\2/'`); done
    Name: run
    PrependShell: true
  - Key: geos_version
    Name: arg
    Value: 3.6.2
  - CmdLine:
    - mkdir /tmp/build-geos &&     cd /tmp/build-geos &&     wget http://download.osgeo.org/geos/geos-${geos_version}.tar.bz2
      &&     cd /tmp/build-geos &&     tar xjf geos-${geos_version}.tar.bz2 &&     cd
      geos-${geos_version} &&     ./configure --prefix=/usr                 --sysconfdir=/etc                 --mandir=/usr/share/man                 --localstatedir=/var                 --enable-python
      &&     make && make check && make install &&     rm -rf /tmp/build-geos
    Name: run
    PrependShell: true
  - Key: proj_version
    Name: arg
    Value: 4.9.3
  - Key: proj_datumgrid_version
    Name: arg
    Value: "1.6"
  - CmdLine:
    - mkdir /tmp/build-proj &&     cd /tmp/build-proj &&     wget http://download.osgeo.org/proj/proj-${proj_version}.tar.gz
      &&     wget http://download.osgeo.org/proj/proj-datumgrid-${proj_datumgrid_version}.zip
      &&     tar xzf proj-${proj_version}.tar.gz &&     cd proj-${proj_version}/nad
      &&     unzip ../../proj-datumgrid-${proj_datumgrid_version}.zip &&     cd ..
      &&     ./configure --prefix=/usr &&    make && make install &&     rm -rf /tmp/build-proj
    Name: run
    PrependShell: true
  - Key: gdal_version
    Name: arg
    Value: 2.2.3
  - CmdLine:
    - mkdir /tmp/build-gdal &&     cd /tmp/build-gdal &&     wget http://download.osgeo.org/gdal/${gdal_version}/gdal-${gdal_version}.tar.gz
      &&     tar xzf gdal-${gdal_version}.tar.gz &&     cd gdal-${gdal_version} &&     ./configure
      --prefix=/usr                 --with-python=yes                 --with-geos=yes
      &&     make && make install &&     rm -rf /tmp/build-gdal
    Name: run
    PrependShell: true
  - Expression: COPY ssh-key requirements.txt /app/
    Name: onbuild
  - Expression: RUN chmod 600 /app/ssh-key &&     eval $(ssh-agent) &&     echo "StrictHostKeyChecking
      no" >> /etc/ssh/ssh_config &&     ssh-add /app/ssh-key &&     pip install -r
      /app/requirements.txt
    Name: onbuild
  - Expression: RUN rm -rf /app/*
    Name: onbuild
  - Expression: RUN apk del --force libffi-dev libxml2-dev libxslt-dev zlib-dev libjpeg-turbo-dev                     libpng-dev
      tiff-dev  libwebp-dev tcl-dev openjpeg-dev freetype-dev                     lcms2-dev
      imagemagick-dev json-c-dev jsoncpp-dev musl-dev                     pcre-dev
      autoconf automake make perl swig postgresql-dev                     gcc g++
      linux-headers python${python_version}-dev
    Name: onbuild
  From:
    Image: alpine:${alpine_version}
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:${alpine_version}
