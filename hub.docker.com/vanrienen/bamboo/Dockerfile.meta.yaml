MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Philipp Goellner, philipp.goellner@xaltbc.de
    Name: maintainer
  - Env:
    - Key: BACKUP_HOST
      Value: "false"
    Name: env
  - Env:
    - Key: BACKUP_KEY_FILE
      Value: /tmp/id_rsa
    Name: env
  - Env:
    - Key: BACKUP_PATH
      Value: "false"
    Name: env
  - Env:
    - Key: BACKUP_USER
      Value: "false"
    Name: env
  - Env:
    - Key: BAMBOO_VERSION
      Value: 6.5.0
    Name: env
  - Env:
    - Key: BAMBOO_HOME
      Value: /var/atlassian/bamboo
    Name: env
  - Env:
    - Key: BAMBOO_INSTALL
      Value: /opt/atlassian/bamboo
    Name: env
  - Env:
    - Key: BAMBOO_REMOTE_DEBUG
      Value: "false"
    Name: env
  - Env:
    - Key: BAMBOO_URL
      Value: https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBUG_PORT
      Value: "5005"
    Name: env
  - Env:
    - Key: HTTPS
      Value: "false"
    Name: env
  - Env:
    - Key: IMPORTCERT
      Value: "false"
    Name: env
  - Env:
    - Key: IMPORTPATH
      Value: /var/certificates
    Name: env
  - Env:
    - Key: PROXY_NAME
      Value: "false"
    Name: env
  - Env:
    - Key: RAM_MIN
      Value: "1024"
    Name: env
  - Env:
    - Key: RAM_MAX
      Value: "2048"
    Name: env
  - Env:
    - Key: LIQUIBASE
      Value: "false"
    Name: env
  - Env:
    - Key: LIQUIBASE_VERSION
      Value: 3.6.2
    Name: env
  - Env:
    - Key: LIQUIBASE_INSTALL
      Value: /opt/liquibase
    Name: env
  - Env:
    - Key: LIQUIBASE_URL
      Value: https://github.com/liquibase/liquibase/releases/download/liquibase-parent-${LIQUIBASE_VERSION}/liquibase-${LIQUIBASE_VERSION}-bin.tar.gz
    Name: env
  - Env:
    - Key: MYSQL_DRIVER_VERSION
      Value: 5.1.36
    Name: env
  - Env:
    - Key: MYSQL_DRIVER_URL
      Value: http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: NEWRELIC_VERSION
      Value: current
    Name: env
  - Env:
    - Key: NEWRELIC_APP_NAME
      Value: bamboo-docker
    Name: env
  - Env:
    - Key: NEWRELIC_LICENSE
      Value: "false"
    Name: env
  - Env:
    - Key: NEWRELIC_URL
      Value: https://download.newrelic.com/newrelic/java-agent/newrelic-agent/${NEWRELIC_VERSION}/newrelic-java.zip
    Name: env
  - Env:
    - Key: RUN_USER
      Value: daemon
    Name: env
  - Env:
    - Key: RUN_GROUP
      Value: daemon
    Name: env
  - Env:
    - Key: TIME_ZONE
      Value: "false"
    Name: env
  - Env:
    - Key: WAIT
      Value: "false"
    Name: env
  - Env:
    - Key: WAIT_COMMAND
      Value: none
    Name: env
  - Env:
    - Key: WAIT_SLEEP
      Value: "2"
    Name: env
  - Env:
    - Key: WAIT_LOOPS
      Value: "10"
    Name: env
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -qq -y gnupg2                                                    lsb-release  &&
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886  &&
      echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu/ $(lsb_release -s
      -c) main" > /etc/apt/sources.list.d/java.list  && echo "debconf shared/accepted-oracle-license-v1-1
      select true" | debconf-set-selections  && echo "debconf shared/accepted-oracle-license-v1-1
      seen true"   | debconf-set-selections  && apt-get update -qq  && apt-get install
      --no-install-recommends -qq -y curl                                                    git                                                    openssh-client                                                    oracle-java8-installer                                                    rsync                                                    sed                                                    tzdata                                                    unzip                                                    xmlstarlet  &&
      rm -rf                                         /var/lib/apt/lists/*  && mkdir
      -p                                       "${BAMBOO_INSTALL}"  && curl -Lsk                                      "${BAMBOO_URL}"       |
      tar -xz --directory "${BAMBOO_INSTALL}"     --strip-components=1  && curl -Lsk                                      "${MYSQL_DRIVER_URL}"
      | tar -xz --directory "${BAMBOO_INSTALL}/lib" --strip-components=1 --no-same-owner
      "mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar"  &&
      mkdir -p                                       "${LIQUIBASE_INSTALL}"  && curl
      -Lsk                                      "${LIQUIBASE_URL}"    | tar -xz --directory
      "${LIQUIBASE_INSTALL}"  && cp "${LIQUIBASE_INSTALL}/sdk/lib-sdk/slf4j-api-1.7.25.jar"
      "${LIQUIBASE_INSTALL}/lib/"  && curl -Lsk                                      "${NEWRELIC_URL}"
      -o                        /tmp/newrelic-java.zip  && unzip /tmp/newrelic-java.zip
      -d                "${BAMBOO_INSTALL}"  && rm -f /tmp/newrelic-java.zip  && mkdir                                          "${IMPORTPATH}"  &&
      chown -R ${RUN_USER}:${RUN_GROUP}              "${IMPORTPATH}"                                                    "${BAMBOO_INSTALL}"                                                    /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - changelogs
    - '"${LIQUIBASE_INSTALL}/changelogs/"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - liquibase.properties
    - '"${LIQUIBASE_INSTALL}/"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configure-and-start-root.sh
    - '"${BAMBOO_INSTALL}/bin/"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configure-and-start.sh
    - '"${BAMBOO_INSTALL}/bin/"'
  - CmdLine:
    - chmod 500                                       ${BAMBOO_INSTALL}/bin/configure-and-start*.sh  &&
      chown -R ${RUN_USER}:${RUN_GROUP}              "${BAMBOO_INSTALL}/bin/configure-and-start.sh"                                                    "${LIQUIBASE_INSTALL}"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "54663"
    - "8085"
  - Name: volume
    Volumes:
    - ${BAMBOO_HOME}
  - Name: workdir
    Path: ${BAMBOO_INSTALL}
  - CmdLine:
    - ./bin/configure-and-start-root.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
