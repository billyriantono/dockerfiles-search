{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "registry-pub.appadhoc.com:30443/linux-openjdk8-slim:v2.1.0",
      "SourceCode": "FROM registry-pub.appadhoc.com:30443/linux-openjdk8-slim:v2.1.0",
      "Platform": "",
      "From": {
        "Image": "registry-pub.appadhoc.com:30443/linux-openjdk8-slim:v2.1.0"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get install locales     \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen     \u0026\u0026 locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "\"en_US:en\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Harbin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime     \u0026\u0026 echo $TZ \u003e /etc/timezone     \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "COPY ./project /data/project",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY ./build.sbt /data/build.sbt",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN cd /data \u0026\u0026 sbt update -Dsbt.override.build.repos=true -Dsbt.repository.secure=false",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY . /data",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN service mongodb restart     \u0026\u0026 service redis-server restart     \u0026\u0026 cd /data     \u0026\u0026 sbt -Dsbt.override.build.repos=true -Dsbt.repository.secure=false -Dfile.encoding=UTF-8 -Duser.timezone=Asia/Harbin test     \u0026\u0026 sbt -Dsbt.override.build.repos=true -Dsbt.repository.secure=false -Dfile.encoding=UTF-8 -Duser.timezone=Asia/Harbin dist     \u0026\u0026 cd /data/target/universal/     \u0026\u0026 unzip *.zip     \u0026\u0026 rm *.zip     \u0026\u0026 cd /data     \u0026\u0026 export proj_name=`sbt settings name | tail -1 | cut -d' ' -f2 | tr -dc [:print:] | sed 's/\\[0m//g'`     \u0026\u0026 mkdir -p /release/${proj_name}     \u0026\u0026 mv /data/target/universal/${proj_name}* /release     \u0026\u0026 cd /release/${proj_name}*/bin     \u0026\u0026 ln -s `pwd`/$proj_name /entrypoint",
          "Name": "onbuild"
        },
        {
          "Expression": "CMD [\"/entrypoint\", \"-Dconfig.resource=prod.conf\", \"-Dfile.encoding=UTF8\", \"-Duser.timezone=Asia/Harbin\"]",
          "Name": "onbuild"
        }
      ]
    }
  ]
}