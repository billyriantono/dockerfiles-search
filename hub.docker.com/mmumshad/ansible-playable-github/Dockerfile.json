{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:6.2.2",
      "SourceCode": "FROM node:6.2.2",
      "Platform": "",
      "From": {
        "Image": "node:6.2.2"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Mumshad Mannambeth\""
            },
            {
              "Key": "maintainer_email",
              "Value": "\"mmumshad@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"This image is used to start the ansible-playable web server. The image contains a built-in mongodb database, can mount Amazon S3 instance and runs the playable web server on MEAN stack.\""
            },
            {
              "Key": "Version",
              "Value": "\"alpha\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"root:P@ssw0rd@123\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install python-setuptools python-dev build-essential -y \u0026\u0026     easy_install pip \u0026\u0026     pip install ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.4 main\" | tee /etc/apt/sources.list.d/mongodb-org-3.4.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y mongodb-org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.config/configstore \u0026\u0026 chmod g+rwx /root /root/.config /root/.config/configstore"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 1003 -d /home/app_user -m -s /bin/bash -p $(echo P@ssw0rd@123 | openssl passwd -1 -stdin) app_user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app_user /usr/local \u0026\u0026 chown -R app_user /home/app_user \u0026\u0026 chown -R app_user /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y vim openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/PermitRootLogin */cPermitRootLogin yes' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/ssh-keygen -A"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service ssh start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -q \u0026\u0026 apt-get install -y python-pip fuse \t\u0026\u0026 apt-get clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install yas3fs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i'' 's/^# *user_allow_other/user_allow_other/' /etc/fuse.conf # uncomment user_allow_other"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+r /etc/fuse.conf # make it readable by anybody, it is not the default on Ubuntu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yo gulp-cli generator-angular-fullstack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "app_user"
        },
        {
          "CmdLine": [
            "mkdir -p /data/web-app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./package.json",
            "/data/web-app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data/web-app"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "chown -R app_user /data/web-app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "app_user"
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/data/web-app"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "chown -R app_user /data/web-app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gulp build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 helpers/startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/ansible-projects"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helpers/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}