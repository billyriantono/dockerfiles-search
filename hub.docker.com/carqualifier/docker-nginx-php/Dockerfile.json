{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "carqualifier/docker-nginx:latest",
      "SourceCode": "FROM carqualifier/docker-nginx:latest",
      "Platform": "",
      "From": {
        "Image": "carqualifier/docker-nginx:latest"
      },
      "Commands": [
        {
          "Maintainer": "Marcin Ryzycki \u003cmarcin@m12.io\u003e,  Eidher Escalona \u003ceescalona@carqualifier.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files/config/install*",
            "/config/"
          ]
        },
        {
          "CmdLine": [
            "`# Install yum-utils (provides yum-config-manager) + some basic web-related tools...`   yum install -y yum-utils wget patch mysql tar bzip2 unzip openssh-clients rsync \u0026\u0026   wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \u0026\u0026   wget http://rpms.remirepo.net/enterprise/remi-release-7.rpm \u0026\u0026   rpm -Uvh remi-release-7.rpm epel-release-latest-7.noarch.rpm \u0026\u0026   yum-config-manager --enable remi-php71 \u0026\u0026   yum install -y     php71     php71-php-bcmath     php71-php-cli     php71-php-common     php71-php-devel     php71-php-fpm     php71-php-gd     php71-php-gmp     php71-php-intl     php71-php-json     php71-php-mbstring     php71-php-mcrypt     php71-php-mysqlnd     php71-php-opcache     php71-php-pdo     php71-php-pear     php71-php-process     php71-php-pspell     `# Also install the following PECL packages:`     php71-php-pecl-imagick     php71-php-pecl-memcached     php71-php-pecl-uploadprogress     php71-php-pecl-uuid     php71-php-pecl-zip     `# Temporary workaround: one dependant package (http, not essential?) fails to install`     || true \u0026\u0026    `# Set PATH so it includes newest PHP and its aliases`    ln -sfF /opt/remi/php71/enable /etc/profile.d/php71-paths.sh \u0026\u0026    ls -al /etc/profile.d/ \u0026\u0026 cat /etc/profile.d/php71-paths.sh \u0026\u0026    source /etc/profile.d/php71-paths.sh \u0026\u0026    php --version \u0026\u0026    `# Move PHP config files from /etc/opt/remi/php70/* to /etc/* `    mv -f /etc/opt/remi/php71/php.ini /etc/php.ini \u0026\u0026 ln -s /etc/php.ini /etc/opt/remi/php71/php.ini \u0026\u0026    rm -rf /etc/php.d \u0026\u0026 mv /etc/opt/remi/php71/php.d /etc/. \u0026\u0026 ln -s /etc/php.d /etc/opt/remi/php71/php.d \u0026\u0026    echo 'PHP 7.1 installed.' \u0026\u0026 `# Install libs required to build some gem/npm packages (e.g. PhantomJS requires zlib-devel, libpng-devel)`   yum install -y ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel \u0026\u0026   `# Install common tools needed/useful during Web App development`   `# Install Ruby 2`   yum install -y ruby ruby-devel \u0026\u0026   `# Install/compile other software (Git, NodeJS)`   source /config/install.sh \u0026\u0026   yum clean all \u0026\u0026 rm -rf /tmp/yum* \u0026\u0026   `# Install common npm packages: grunt, gulp, bower, browser-sync`   npm install -g gulp grunt-cli bower browser-sync \u0026\u0026   `# Update RubyGems, install Bundler`   echo 'gem: --no-document' \u003e /etc/gemrc \u0026\u0026 gem update --system \u0026\u0026 gem install bundler \u0026\u0026   `# Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode`   echo -e \"StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config \u0026\u0026   curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026   chown www /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "STATUS_PAGE_ALLOWED_IP",
              "Value": "127.0.0.1"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}