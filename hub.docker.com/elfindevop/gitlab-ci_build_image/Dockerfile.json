{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:19.04",
      "SourceCode": "FROM ubuntu:19.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:19.04"
      },
      "Commands": [
        {
          "Maintainer": "sebastian.breuers@elfin.de",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         automake         busybox         cmake         curl         g++         git         jq         lcov         libblkid-dev         libboost-all-dev         libcgicc-dev         libcurl4-gnutls-dev         libdbus-1-dev        libgpgme11-dev         libi2c-dev         libjsoncpp-dev         libpcre3-dev         libqt5svg5-dev         libssl-dev         libsystemd-dev         libtar-dev         libtool         libtool-bin         make         openssl         pkg-config         tar         unzip         wget         autorevision         qt5-default         qtdeclarative5-dev         libmediainfo-dev         qtbase5-private-dev         libarchive-dev         libfontconfig1-dev         libglib2.0-dev         libfreetype6-dev         libxrender-dev         libudev-dev         libmtdev-dev         \u0026\u0026 apt-get clean;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/google/googletest.git googletest         \u0026\u0026 cd googletest         \u0026\u0026 cmake -DBUILD_GMOCK=ON -DCMAKE_INSTALL_PREFIX=/usr/ ./CMakeLists.txt \u0026\u0026 make \u0026\u0026 make install         \u0026\u0026 cd -;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/lib/x86_64-linux-gnu         \u0026\u0026 ln -s libboost_thread.so /usr/lib/x86_64-linux-gnu/libboost_thread-mt.so;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/elfin-sbreuers/mqtt_cpp.git         \u0026\u0026 mkdir mqtt_cpp/build         \u0026\u0026 cd mqtt_cpp/build         \u0026\u0026 cmake -DMQTT_NO_TLS=OFF -DMQTT_BUILD_EXAMPLES=OFF -DMQTT_BUILD_TESTS=OFF ..         \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/kergoth/tslib/releases/download/1.1/tslib-1.1.tar.xz     \u0026\u0026 tar xf tslib-1.1.tar.xz     \u0026\u0026 cd tslib-1.1     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure --enable-shared --disable-h3600 --enable-input --disable-corgi --disable-collie --disable-mk712 --disable-arctic2 --disable-ucb1x00     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/bump_patch_version",
            "/usr/local/bin/bump_patch_version"
          ]
        },
        {
          "CmdLine": [
            "wget https://github.com/ChaiScript/ChaiScript/archive/v6.1.0.tar.gz -O chaiscript.tar.gz         \u0026\u0026 tar xzvf chaiscript.tar.gz         \u0026\u0026 cd ChaiScript-6.1.0/         \u0026\u0026 mkdir build         \u0026\u0026 cd build/         \u0026\u0026 cmake -DBUILD_TESTING=OFF ..         \u0026\u0026 make -j3         \u0026\u0026 make install         \u0026\u0026 cd ../..         \u0026\u0026 rm -r ChaiScript-6.1.0/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export version=3.9.0; export archive=protobuf-cpp-${version}.tar.gz;         curl -L https://github.com/protocolbuffers/protobuf/releases/download/v${version}/${archive} -o ${archive}         \u0026\u0026 tar -xf ${archive}         \u0026\u0026 cd protobuf-${version}         \u0026\u0026 mkdir build         \u0026\u0026 cd build         \u0026\u0026 ../configure         \u0026\u0026 make         \u0026\u0026 make install         \u0026\u0026 ldconfig         \u0026\u0026 cd ../..         \u0026\u0026 rm -r protobuf-${version}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}