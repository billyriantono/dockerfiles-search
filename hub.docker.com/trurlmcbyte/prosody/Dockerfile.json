{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Trurl McByte \u003ctrurl@mcbyte.net\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "0.9"
            },
            {
              "Key": "LUAVER",
              "Value": "5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache         lua$LUAVER         lua-dbi-mysql         lua-dbi-postgresql         lua-dbi-sqlite         lua-bitlib         lua-evdev         lua-expat         lua-filesystem         lua-sec         lua-socket         curl         xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         gcc         libc-dev         make         autoconf         git         mercurial         patch         libidn-dev         libssl1.0         openssl-dev         zlib-dev         libevent-dev         lua$LUAVER-dev     \u0026\u0026 addgroup prosody     \u0026\u0026 adduser -D         -h /var/lib/prosody         -s /sbin/nologin         -g \"Prosody XMPP Server\"         -G prosody         prosody     \u0026\u0026 mkdir -p /usr/local/src     \u0026\u0026 cd /usr/local/src     \u0026\u0026 git clone https://github.com/brimworks/lua-zlib.git     \u0026\u0026 cd lua-zlib     \u0026\u0026 git checkout v0.2     \u0026\u0026 make linux     \u0026\u0026 install -Dm755 zlib.so /usr/lib/lua/$LUAVER/zlib.so     \u0026\u0026 cd /usr/local/src     \u0026\u0026 git clone https://github.com/harningt/luaevent.git     \u0026\u0026 cd luaevent     \u0026\u0026 git checkout v0.4.3     \u0026\u0026 make     \u0026\u0026 make install INSTALL_DIR_LUA=/usr/share/lua/$LUAVER INSTALL_DIR_BIN=/usr/lib/lua/$LUAVER     \u0026\u0026 cd /usr/local/src     \u0026\u0026 curl -s http://bitop.luajit.org/download/LuaBitOp-1.0.2.tar.gz | tar -xz     \u0026\u0026 cd LuaBitOp-1.0.2     \u0026\u0026 make     \u0026\u0026 install -Dm755 bit.so /usr/lib/lua/$LUAVER/bit.so     \u0026\u0026 cd /usr/local/src     \u0026\u0026 hg clone https://hg.prosody.im/$VERSION prosody-$VERSION     \u0026\u0026 cd /usr/local/src/prosody-$VERSION     \u0026\u0026 ./configure         --prefix=/usr         --sysconfdir=/etc/prosody         --with-lua=/usr/bin         --with-lua-lib=/usr/lib         --with-lua-include=/usr/include         --runwith=lua$LUAVER         --no-example-certs     \u0026\u0026 rm -f certs/Makefile     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 install -d -o prosody -g prosody \"$pkgdir/var/log/prosody\"     \u0026\u0026 install -d -o prosody -g prosody \"$pkgdir/var/run/prosody\"     \u0026\u0026 install -d -m750 -o prosody -g prosody \"$pkgdir/var/lib/prosody\"     \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner --recursive /usr/lib/prosody /usr/bin/prosody /usr/lib/lua/$LUAVER/             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --virtual .run-deps $runDeps     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /usr/local/src/*     \u0026\u0026 sed '1s/^/daemonize = false;\\n/' /etc/prosody/prosody.cfg.lua \u003e /etc/prosody/prosody.cfg.lua.sample     \u0026\u0026 sed -i 's/\"prosody.log\"/\"\\*console\"/' /etc/prosody/prosody.cfg.lua.sample     \u0026\u0026 sed -i 's/\"prosody.err\"/\"\\*console\"/' /etc/prosody/prosody.cfg.lua.sample"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc",
            "/etc/prosody"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /entrypoint.sh \u0026\u0026 chown -R prosody /etc/prosody"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "5002",
            "5222",
            "5269",
            "5280",
            "5281",
            "5347",
            "80"
          ]
        },
        {
          "Name": "user",
          "User": "prosody"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/prosody"
          ]
        },
        {
          "CmdLine": [
            "prosody"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}