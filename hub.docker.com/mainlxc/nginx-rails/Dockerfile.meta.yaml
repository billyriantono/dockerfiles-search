MetaArgs: null
Stages:
- BaseName: mainlxc/base
  Commands:
  - Maintainer: Asokani "https://github.com/asokani"
    Name: maintainer
  - CmdLine:
    - add-apt-repository -y ppa:chris-lea/nginx-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&    apt-get -y install nginx-full libreadline-dev libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/rbenv.git /usr/local/rbenv
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/ruby-build /usr/local/rbenv/plugins/ruby-build
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH
    Name: env
  - Env:
    - Key: RBENV_ROOT
      Value: /usr/local/rbenv
    Name: env
  - CmdLine:
    - eval "$(rbenv init -)"
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv install 2.3.0
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv global 2.3.0
    Name: run
    PrependShell: true
  - Env:
    - Key: RBENV_VERSION
      Value: 2.3.0
    Name: env
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv rehash
    Name: run
    PrependShell: true
  - CmdLine:
    - chown www-manage:www-user -R /usr/local/rbenv/ && chmod -R g+rX /usr/local/rbenv/
      && find /usr/local/rbenv -type d -exec chmod g+s {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="/usr/local/rbenv/bin:$PATH"\nexport RBENV_ROOT="/usr/local/rbenv"\neval
      "$(rbenv init -)"' >> ~www-user/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="/usr/local/rbenv/bin:$PATH"\nexport RBENV_ROOT="/usr/local/rbenv"\neval
      "$(rbenv init -)"' >> ~www-manage/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''gem: --no-rdoc --no-ri'' >> ~www-manage/.gemrc'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir /etc/sv/nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /etc/sv/nginx /etc/service/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx.sh
    - /etc/sv/nginx/run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx-ssl.conf
    - /etc/nginx/ssl.conf
  - CmdLine:
    - rm -rf /etc/nginx/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/user www-data;/user www-user;/' /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/http[[:space:]]*{/http {\nserver_names_hash_bucket_size 128;\ninclude
      \/etc\/nginx\/ssl.conf;/' /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "sv restart nginx" >> /etc/cron.weekly/letsencrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/unicorn && chown www-user:www-user /var/log/unicorn
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/rails && touch /var/log/rails/production.log && chown -R www-user:www-user
      /var/log/rails
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 770 /var/log/rails && chmod 660 /var/log/rails/production.log
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/sv/unicorn
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/sv/unicorn/log
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/log/unicorn-run && chown www-user:www-user /var/log/unicorn-run
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /etc/sv/unicorn /etc/service/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - unicorn.sh
    - /etc/sv/unicorn/run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - unicorn-log.sh
    - /etc/sv/unicorn/log/run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - unicorn-reload.sh
    - /usr/bin/unicorn-reload.sh
  - CmdLine:
    - 'echo "www-manage ALL = NOPASSWD: /usr/bin/unicorn-reload.sh" > /etc/sudoers.d/unicorn'
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/service/sshd/down
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install graphicsmagick python-setuptools         python-dev build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install xlsx2csv
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "443"
    - "80"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: mainlxc/base
  Name: ""
  Platform: ""
  SourceCode: FROM mainlxc/base
