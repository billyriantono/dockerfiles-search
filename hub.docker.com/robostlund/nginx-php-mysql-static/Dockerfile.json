{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Robin Ostlund \u003cme@robinostlund.name\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INITRD",
              "Value": "No"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /root/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get -y install apt-utils supervisor nginx php7.0-fpm php7.0-mysql pwgen python-setuptools curl git unzip cron anacron rsyslog memcached mysql-server mysql-client \u0026\u0026     apt-get -y install php7.0-curl php7.0-gd php7.0-intl php-pear php-imagick php7.0-imap php7.0-mcrypt php-memcache php7.0-ps php7.0-pspell php7.0-recode php7.0-sqlite php7.0-tidy php7.0-xmlrpc php7.0-xsl \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/mysql \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -f /etc/memcached.conf \u0026\u0026     rm -rf /var/www \u0026\u0026     sed -i 's/\\$KLogPermitNonKernelFacility/#$KLogPermitNonKernelFacility/g' /etc/rsyslog.conf \u0026\u0026     sed -i \"s|\\*.emerg|\\#\\*.emerg|\" /etc/rsyslog.conf \u0026\u0026     sed -i 's/$ModLoad imklog/#$ModLoad imklog/' /etc/rsyslog.conf \u0026\u0026     rm -f /etc/nginx/sites-enabled/* \u0026\u0026     rm -rf /etc/nginx/ssl \u0026\u0026     ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default \u0026\u0026     sed -i 's/worker_processes auto;/worker_processes 2;/g' /etc/nginx/nginx.conf \u0026\u0026     sed -i -e \"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \u0026\u0026     sed -i -e \"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf \u0026\u0026     sed -e \"s/^bind-address\\(.*\\)=.*/bind-address = 0.0.0.0/\" -i /etc/mysql/mysql.conf.d/mysqld.cnf \u0026\u0026     sed 's/datadir.*/datadir=\\/data\\/var\\/lib\\/mysql/g' -i /etc/mysql/mysql.conf.d/mysqld.cnf \u0026\u0026     sed 's/password = .*/password = /g' -i /etc/mysql/debian.cnf \u0026\u0026     sed 's/^log_error/# log_error/g' -i /etc/mysql/mysql.conf.d/mysqld.cnf \u0026\u0026     echo \"[mysqld]\" \u003e /etc/mysql/conf.d/mysql-skip-name-resolv.cnf \u0026\u0026     echo \"skip_name_resolve\" \u003e\u003e /etc/mysql/conf.d/mysql-skip-name-resolv.cnf \u0026\u0026     sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026     sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026     sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026     sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026     find /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/index.html",
            "/root/nginx/index.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/site.conf",
            "/root/nginx/site.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/site-git.conf",
            "/root/nginx/site-git.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/phpinfo.php",
            "/root/nginx/phpinfo.php"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/nginx.conf",
            "/root/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/logrotate",
            "/etc/logrotate.d/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "/usr/local/bin/healthcheck.sh || exit 1"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}