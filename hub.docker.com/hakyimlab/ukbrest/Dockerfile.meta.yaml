MetaArgs: null
Stages:
- BaseName: continuumio/miniconda3
  Commands:
  - Maintainer: Milton Pividori <miltondp@gmail.com>
    Name: maintainer
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - environment.yml
    - /opt/
  - CmdLine:
    - conda env update -n root -f /opt/environment.yml   && conda clean --all
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive   apt-get update && apt-get install -y --no-install-recommends
      gnupg lsb-release   && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add -   && echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release
      -c -s)-pgdg main" >> /etc/apt/sources.list.d/pgdg.list   && apt-get update &&
      apt-get install -y --no-install-recommends       postgresql-client-11   && apt-get
      clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive   && apt-get update && apt-get install
      -y --no-install-recommends     build-essential zlib1g-dev libbz2-dev mercurial   &&
      cd /tmp   && hg clone https://gavinband@bitbucket.org/gavinband/bgen -u master   &&
      cd /tmp/bgen   && export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"   &&
      ./waf configure --prefix=/usr/local   && ./waf   && ./build/test/unit/test_bgen   &&
      ./waf install   && apt-get remove -y build-essential zlib1g-dev libbz2-dev mercurial   &&
      apt-get autoremove -y   && apt-get clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: UKBREST_GENOTYPE_PATH
      Value: '"/var/lib/genotype"'
    Name: env
  - Env:
    - Key: UKBREST_PHENOTYPE_PATH
      Value: '"/var/lib/phenotype"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ukbrest
    - /opt/ukbrest
  - Env:
    - Key: PYTHONPATH
      Value: '"/opt"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils
    - /opt/utils
  - Env:
    - Key: UKBREST_CODINGS_PATH
      Value: '"/var/lib/codings"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - misc/codings
    - /var/lib/codings
  - Env:
    - Key: UKBREST_WITHDRAWALS_PATH
      Value: '"/var/lib/withdrawals"'
    Name: env
  - Name: workdir
    Path: /opt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start.py
    - /opt/
  - Env:
    - Key: GUNICORN_NUM_WORKERS
      Value: '"4"'
    Name: env
  - Env:
    - Key: GUNICORN_BIND_ADDRESS
      Value: '"0.0.0.0:5000"'
    Name: env
  - Env:
    - Key: GUNICORN_TIMEOUT
      Value: '"10000"'
    Name: env
  - Env:
    - Key: GUNICORN_WORKER_CLASS
      Value: '"eventlet"'
    Name: env
  - Env:
    - Key: GUNICORN_LOG_FILE
      Value: '"-"'
    Name: env
  - Env:
    - Key: GUNICORN_EXTRA_ARGS
      Value: '""'
    Name: env
  - Env:
    - Key: GUNICORN_CMD_ARGS
      Value: '"--log-file=${GUNICORN_LOG_FILE} -k ${GUNICORN_WORKER_CLASS} -w ${GUNICORN_NUM_WORKERS}
        --timeout ${GUNICORN_TIMEOUT} -b ${GUNICORN_BIND_ADDRESS} ${GUNICORN_EXTRA_ARGS}"'
    Name: env
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /opt/start.py
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: continuumio/miniconda3
  Name: ""
  Platform: ""
  SourceCode: FROM continuumio/miniconda3
