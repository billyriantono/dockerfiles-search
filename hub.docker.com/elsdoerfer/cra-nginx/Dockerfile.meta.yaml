MetaArgs: null
Stages:
- BaseName: nginx:1.17
  Commands:
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - Env:
    - Key: FOO
      Value: "1"
    Name: env
  - Maintainer: Kyle Mathews "mathews.kyle@gmail.com
    Name: maintainer
  - CmdLine:
    - rm /etc/nginx/nginx.conf /etc/nginx/mime.types
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - basic.conf
    - /etc/nginx/basic.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mime.types
    - /etc/nginx/mime.types
  - CmdLine:
    - mkdir /etc/nginx/ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default
    - /etc/nginx/sites-enabled/default
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default-ssl
    - /etc/nginx/sites-available/default-ssl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - directive-only
    - /etc/nginx/directive-only
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - location
    - /etc/nginx/location
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz
    - ./
  - CmdLine:
    - tar -C /bin/ -xzf dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz && rm dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - dockerize
    - -template
    - /etc/nginx/sites-enabled/default:/etc/nginx/sites-enabled/default
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nginx
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:1.17
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:1.17
