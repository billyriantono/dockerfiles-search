MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"NGINX Docker Maintainers <docker-maint@nginx.com>"'
    Name: label
  - Env:
    - Key: NGINX_VERSION
      Value: 1.17.3
    Name: env
  - Env:
    - Key: TENGINE_VERSION
      Value: 2.3.2
    Name: env
  - Env:
    - Key: NGX_BROTLI_COMMIT
      Value: 8104036af9cff4b1d34f22d00ba857e2a93a243c
    Name: env
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module
      \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio
      \t\t--with-http_v2_module \t\t--add-module=./modules/ngx_http_concat_module
      \ \t\t--add-module=./modules/ngx_http_upstream_check_module         --add-module=./modules/ngx_http_proxy_connect_module
      \    \t--add-module=./modules/ngx_brotli \t\" \t&& addgroup -S nginx \t&& adduser
      -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache
      --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev
      \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg1 \t\tlibxslt-dev \t\tgd-dev
      \t\tgeoip-dev \t\tperl-dev \t&& apk add --no-cache --virtual .brotli-build-deps
      \t\tautoconf \t\tlibtool \t\tautomake \t\tgit \t\tg++ \t\tcmake     && curl
      \ -fSL \"https://github.com/alibaba/tengine/archive/$TENGINE_VERSION.tar.gz\"
      -o tengine.tar.gz     && mkdir -p /usr/src     && tar -zxC /usr/src -f tengine.tar.gz
      \    && rm tengine.tar.gz     && cd /usr/src/tengine-$TENGINE_VERSION/modules
      \t&& git clone --recursive https://github.com/eustas/ngx_brotli.git \t&& cd
      ngx_brotli \t&& git checkout -b $NGX_BROTLI_COMMIT $NGX_BROTLI_COMMIT    \t&&
      cd /usr/src/tengine-$TENGINE_VERSION \t&& ./configure $CONFIG --with-debug \t&&
      make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&&
      mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&&
      ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install
      \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/
      \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644
      html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t&& rm -rf /usr/src/tengine-$TENGINE_VERSION \t\t&& apk add --no-cache --virtual
      .gettext gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf
      --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e
      /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&&
      apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps
      \t&& apk del .brotli-build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst
      /usr/local/bin/ \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log
      \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
