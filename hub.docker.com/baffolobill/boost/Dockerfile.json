{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BOOST_VERSION",
              "Value": "1.61.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TARGET_PYTHON_VERSION",
              "Value": "3.4"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "project-config.jam",
            "/tmp/project-config.jam"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         build-essential         g++         python-dev         autotools-dev         libicu-dev         build-essential         libbz2-dev         cmake         wget         python$TARGET_PYTHON_VERSION \"python${TARGET_PYTHON_VERSION}-dev\"         checkinstall     \u0026\u0026 export BOOST_VERSION_D=`echo $BOOST_VERSION | sed -e \"s/\\./_/g\"`     \u0026\u0026 export BOOST_DOWNLOAD_LINK=http://sourceforge.net/projects/boost/files/boost/$BOOST_VERSION/boost_$BOOST_VERSION_D.tar.gz/download     \u0026\u0026 export BOOST_ROOT=/boost_$BOOST_VERSION_D     \u0026\u0026 mkdir -p \"$BOOST_ROOT\"     \u0026\u0026 wget -q -O boost-$BOOST_VERSION.tar.gz $BOOST_DOWNLOAD_LINK     \u0026\u0026 tar xzf boost-$BOOST_VERSION.tar.gz     \u0026\u0026 rm -f boost-$BOOST_VERSION.tar.gz     \u0026\u0026 cp /tmp/project-config.jam \"$BOOST_ROOT/\"     \u0026\u0026 cd $BOOST_ROOT     \u0026\u0026 sh bootstrap.sh --prefix=/usr/local --with-python=`which python$TARGET_PYTHON_VERSION` --with-python-version=$TARGET_PYTHON_VERSION --with-python-root=/usr/local/lib/python$TARGET_PYTHON_VERSION     \u0026\u0026 n=`cat /proc/cpuinfo | grep \"cpu cores\" | uniq | awk '{print $NF}'`     \u0026\u0026 ./b2 --with=all -j $n install     \u0026\u0026 sh -c 'echo \"/usr/local/lib\" \u003e\u003e /etc/ld.so.conf.d/local.conf'     \u0026\u0026 ldconfig     \u0026\u0026 apt-get autoclean     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /var/tmp/*     \u0026\u0026 rm -rf /usr/share/man/*     \u0026\u0026 rm -rf /usr/share/info/*     \u0026\u0026 rm -rf /var/cache/man/*     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}