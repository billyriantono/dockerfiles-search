MetaArgs: null
Stages:
- BaseName: python:3.6-slim-stretch
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"fedor@borshev.com"'
    Name: label
  - Labels:
    - Key: com.datadoghq.ad.logs
      Value: '''[{"source": "uwsgi", "service": "django"}]'''
    Name: label
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: STATIC_ROOT
      Value: /static
    Name: env
  - Env:
    - Key: MEDIA_ROOT
      Value: /media
    Name: env
  - Env:
    - Key: _UWSGI_VERSION
      Value: 2.0.18
    Name: env
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - Env:
    - Key: WKHTMLTOPDF_VERSION
      Value: 0.12.3
    Name: env
  - Name: volume
    Volumes:
    - /static
  - Name: volume
    Volumes:
    - /media
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - echo deb http://deb.debian.org/debian stretch contrib non-free > /etc/apt/sources.list.d/debian-contrib.list     &&
      apt-get update     && apt-get --no-install-recommends install -y gettext locales-all
      wget imagemagick tzdata     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get --no-install-recommends install -y build-essential
      libxml2-dev libxslt1-dev     && apt-get --no-install-recommends install -y libjpeg62-turbo-dev
      libjpeg-dev libfreetype6-dev libtiff5-dev liblcms2-dev libwebp-dev tk8.6-dev     &&
      apt-get --no-install-recommends install -y libffi-dev libcgraph6 libgraphviz-dev
      libmagic-dev     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libssl1.0-dev     && echo "ttf-mscorefonts-installer
      msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections     &&
      apt-get install -y --no-install-recommends fontconfig ttf-mscorefonts-installer     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/$WKHTMLTOPDF_VERSION/wkhtmltox-${WKHTMLTOPDF_VERSION}_linux-generic-amd64.tar.xz     &&
      tar -xJf wkhtmltox-*.tar.xz     && rm -f wkhtmltox/bin/wkhtmltoimage     &&
      cp -R wkhtmltox/* /usr     && rm -Rf wkhtmltox*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O uwsgi-${_UWSGI_VERSION}.tar.gz https://github.com/unbit/uwsgi/archive/${_UWSGI_VERSION}.tar.gz     &&
      tar zxvf uwsgi-*.tar.gz     && UWSGI_BIN_NAME=/usr/local/bin/uwsgi make -C uwsgi-${_UWSGI_VERSION}     &&
      rm -Rf uwsgi-*
    Name: run
    PrependShell: true
  - Expression: ADD requirements.txt /
    Name: onbuild
  - Expression: run pip install --no-cache-dir -r /requirements.txt
    Name: onbuild
  From:
    Image: python:3.6-slim-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim-stretch
