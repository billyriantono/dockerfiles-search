{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Elastic Docker Team \u003cdocker@elastic.co\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026 yum install -y java-1.8.0-openjdk-devel which \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid 1000 logstash \u0026\u0026     adduser --uid 1000 --gid 1000       --home-dir /usr/share/logstash --no-create-home       logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lo - https://artifacts.elastic.co/downloads/logstash/logstash-6.2.3.tar.gz |     tar zxf - -C /usr/share \u0026\u0026     mv /usr/share/logstash-6.2.3 /usr/share/logstash \u0026\u0026     chown --recursive logstash:logstash /usr/share/logstash/ \u0026\u0026     ln -s /usr/share/logstash /opt/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/logstash"
        },
        {
          "Env": [
            {
              "Key": "ELASTIC_CONTAINER",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/logstash/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/pipelines.yml",
            "config/pipelines.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/logstash-x-pack.yml",
            "config/logstash.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/log4j2.properties",
            "config/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pipeline/default.conf",
            "pipeline/logstash.conf"
          ]
        },
        {
          "CmdLine": [
            "chown --recursive logstash:logstash config/ pipeline/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'en_US.UTF-8'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'en_US.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin/docker-entrypoint",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod 0755 /usr/local/bin/docker-entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "logstash"
        },
        {
          "CmdLine": [
            "cd /usr/share/logstash \u0026\u0026 logstash-plugin install x-pack \u0026\u0026     logstash-plugin install logstash-codec-sflow \u0026\u0026     logstash-plugin install logstash-codec-netflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "env2yaml/env2yaml",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2055/udp",
            "5044",
            "9600"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}