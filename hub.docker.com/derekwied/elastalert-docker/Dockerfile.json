{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Derek Wiedenhoeft, https://github.com/cailen\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SET_CONTAINER_TIMEZONE",
              "Value": "True"
            },
            {
              "Key": "CONTAINER_TIMEZONE",
              "Value": "America/New_York"
            },
            {
              "Key": "ELASTALERT_URL",
              "Value": "https://github.com/cailen/elastalert/archive/master.zip"
            },
            {
              "Key": "CONFIG_DIR",
              "Value": "/opt/config"
            },
            {
              "Key": "RULES_DIRECTORY",
              "Value": "/opt/rules"
            },
            {
              "Key": "ELASTALERT_CONFIG",
              "Value": "${CONFIG_DIR}/elastalert_config.yaml"
            },
            {
              "Key": "LOG_DIR",
              "Value": "/opt/logs"
            },
            {
              "Key": "ELASTALERT_HOME",
              "Value": "/opt/elastalert"
            },
            {
              "Key": "ELASTALERT_SUPERVISOR_CONF",
              "Value": "${CONFIG_DIR}/elastalert_supervisord.conf"
            },
            {
              "Key": "ELASTICSEARCH_HOST",
              "Value": "elasticsearchhost"
            },
            {
              "Key": "ELASTICSEARCH_PORT",
              "Value": "9200"
            },
            {
              "Key": "ELASTICSEARCH_TLS",
              "Value": "False"
            },
            {
              "Key": "ELASTICSEARCH_TLS_VERIFY",
              "Value": "False"
            },
            {
              "Key": "ELASTALERT_INDEX",
              "Value": "elastalert_status"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add ca-certificates openssl-dev openssl libffi-dev python2 python2-dev py2-pip py2-yaml gcc musl-dev tzdata openntpd wget curl \u0026\u0026     wget -O elastalert.zip \"${ELASTALERT_URL}\" \u0026\u0026     unzip elastalert.zip \u0026\u0026     rm elastalert.zip \u0026\u0026     mv e* \"${ELASTALERT_HOME}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"${ELASTALERT_HOME}\""
        },
        {
          "CmdLine": [
            "python setup.py install \u0026\u0026     pip install -e . \u0026\u0026     easy_install supervisor \u0026\u0026     mkdir -p \"${CONFIG_DIR}\" \u0026\u0026     mkdir -p \"${RULES_DIRECTORY}\" \u0026\u0026     mkdir -p \"${LOG_DIR}\" \u0026\u0026     mkdir -p /var/empty \u0026\u0026     apk del python2-dev \u0026\u0026     apk del musl-dev \u0026\u0026     apk del gcc \u0026\u0026     apk del openssl-dev \u0026\u0026     apk del libffi-dev \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start-elastalert.sh",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/start-elastalert.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${CONFIG_DIR}",
            "${RULES_DIRECTORY}",
            "${LOG_DIR}"
          ]
        },
        {
          "CmdLine": [
            "/opt/start-elastalert.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}