MetaArgs: null
Stages:
- As: builder
  BaseName: golang:latest
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - go get ./...
    Name: run
    PrependShell: true
  - CmdLine:
    - env GOOS=linux CGO_ENABLED=0 GOARCH=amd64 go build -o runtime .
    Name: run
    PrependShell: true
  From:
    Image: golang:latest
  Name: builder
  Platform: ""
  SourceCode: FROM golang:latest as builder
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: Maintainer
      Value: '"Amit S Dalal <amit@amitdalal.me>"'
    - Key: Description
      Value: '"Lightweight container with dig, bash and curl && a runtime"'
    Name: label
  - CmdLine:
    - apk --no-cache add curl bash bind-tools coreutils &&curl -sSL -o /etc/apk/keys/sgerrand.rsa.pub
      https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub &&curl -sSL -O https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk
      &&apk add glibc-2.28-r0.apk &&rm glibc-2.28-r0.apk
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dnsbl.sh
    - /bin/dnsbl
  - CmdLine:
    - chmod +x /bin/dnsbl
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -S appgroup && adduser -S appuser -G appgroup
    Name: run
    PrependShell: true
  - Name: user
    User: appuser
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app/runtime
    - /bin
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /bin/runtime
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
