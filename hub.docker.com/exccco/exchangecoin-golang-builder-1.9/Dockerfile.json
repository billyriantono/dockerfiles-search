{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.9.4",
      "SourceCode": "FROM golang:1.9.4",
      "Platform": "",
      "From": {
        "Image": "golang:1.9.4"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"ExchangeCoin golang builder image\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"team@cryptoxchanger.io\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "build"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos ''  $USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -qy rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /release \u0026\u0026     chown $USER /release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /src \u0026\u0026     chown $USER /src \u0026\u0026     mkdir -p /go/src/github.com/EXCCoin/exccd \u0026\u0026     mkdir -p /go/src/github.com/EXCCoin/exccwallet \u0026\u0026     mkdir -p /go/src/github.com/EXCCoin/exccctl \u0026\u0026     mkdir -p /go/src/github.com/EXCCoin/exccrpcclient \u0026\u0026     chown -R $USER /go/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USER"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEP_TAG",
              "Value": "v0.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIDE_TAG",
              "Value": "v0.13.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOMETALINTER_TAG",
              "Value": "v2.0.5"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/go/src"
        },
        {
          "CmdLine": [
            "go get -v github.com/Masterminds/glide \u0026\u0026     cd /go/src/github.com/Masterminds/glide \u0026\u0026     git checkout $GLIDE_TAG \u0026\u0026     make build \u0026\u0026     mv glide `which glide` \u0026\u0026     go get -v github.com/alecthomas/gometalinter \u0026\u0026     cd /go/src/github.com/alecthomas/gometalinter \u0026\u0026     git checkout $GOMETALINTER_TAG \u0026\u0026     go install \u0026\u0026     gometalinter --install \u0026\u0026     go get -v github.com/golang/dep \u0026\u0026     cd /go/src/github.com/golang/dep \u0026\u0026     git checkout $DEP_TAG \u0026\u0026     go install ./..."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}