{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "\"Dave Spencer\" \u003cdspencer@wustl.edu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y     build-essential     cmake     curl     default-jdk     git     libncurses5-dev     libcurl4-openssl-dev     libtbb2     libtbb-dev     nodejs     python-dev     python-pip     tzdata     wget     zlib1g-dev     zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/biscuit \u0026\u0026 cd /opt/biscuit \u0026\u0026 wget https://github.com/zwdzwd/biscuit/releases/download/v0.3.8.20180515/biscuit_0_3_8_x86_64 \u0026\u0026     chmod +x biscuit_0_3_8_x86_64 \u0026\u0026 cd /usr/bin \u0026\u0026 ln -s /opt/biscuit/biscuit_0_3_8_x86_64 biscuit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "picard_version",
              "Value": "2.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install ant --no-install-recommends -y \u0026\u0026     cd /usr/ \u0026\u0026     git config --global http.sslVerify false \u0026\u0026     git clone --recursive https://github.com/broadinstitute/picard.git \u0026\u0026     cd /usr/picard \u0026\u0026     git checkout tags/${picard_version} \u0026\u0026     cd /usr/picard \u0026\u0026     git config --global http.sslVerify false \u0026\u0026     git clone https://github.com/samtools/htsjdk.git \u0026\u0026     cd htsjdk \u0026\u0026     git checkout tags/${picard_version} \u0026\u0026     cd .. \u0026\u0026     ant clean all \u0026\u0026     mv dist/picard.jar picard.jar \u0026\u0026     mv src/scripts/picard/docker_helper.sh docker_helper.sh \u0026\u0026     ant clean \u0026\u0026     rm -rf htsjdk \u0026\u0026     rm -rf src \u0026\u0026     rm -rf lib \u0026\u0026     rm build.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/sambamba/     \u0026\u0026 wget https://github.com/lomereiter/sambamba/releases/download/v0.6.4/sambamba_v0.6.4_linux.tar.bz2     \u0026\u0026 tar --extract --bzip2 --directory=/opt/sambamba --file=sambamba_v0.6.4_linux.tar.bz2     \u0026\u0026 ln -s /opt/sambamba/sambamba_v0.6.4 /usr/bin/sambamba"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sambamba_merge",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/sambamba_merge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/ucsc \u0026\u0026     cd /tmp/ucsc \u0026\u0026     wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig \u0026\u0026     chmod ugo+x * \u0026\u0026     mv * /usr/bin/ \u0026\u0026     rm -rf /tmp/ucsc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/flexbar/tmp     \u0026\u0026 cd /opt/flexbar/tmp     \u0026\u0026 wget https://github.com/seqan/flexbar/archive/v3.0.3.tar.gz     \u0026\u0026 wget https://github.com/seqan/seqan/releases/download/seqan-v2.2.0/seqan-library-2.2.0.tar.xz     \u0026\u0026 tar xzf v3.0.3.tar.gz     \u0026\u0026 tar xJf seqan-library-2.2.0.tar.xz     \u0026\u0026 mv seqan-library-2.2.0/include flexbar-3.0.3     \u0026\u0026 cd flexbar-3.0.3     \u0026\u0026 cmake .     \u0026\u0026 make     \u0026\u0026 cp flexbar /opt/flexbar/     \u0026\u0026 cd /     \u0026\u0026 rm -rf /opt/flexbar/tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HTSLIB_INSTALL_DIR",
              "Value": "/opt/htslib"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/htslib/releases/download/1.3.2/htslib-1.3.2.tar.bz2 \u0026\u0026     tar --bzip2 -xvf htslib-1.3.2.tar.bz2 \u0026\u0026     cd /tmp/htslib-1.3.2 \u0026\u0026     ./configure  --enable-plugins --prefix=$HTSLIB_INSTALL_DIR \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cp $HTSLIB_INSTALL_DIR/lib/libhts.so* /usr/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SAMTOOLS_INSTALL_DIR",
              "Value": "/opt/samtools"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 \u0026\u0026     tar --bzip2 -xf samtools-1.3.1.tar.bz2 \u0026\u0026     cd /tmp/samtools-1.3.1 \u0026\u0026     ./configure --with-htslib=$HTSLIB_INSTALL_DIR --prefix=$SAMTOOLS_INSTALL_DIR \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd / \u0026\u0026     rm -rf /tmp/samtools-1.3.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bsvcf2bed",
            "/usr/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bam_to_cram",
            "/usr/bin/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/local"
        },
        {
          "CmdLine": [
            "git clone https://github.com/arq5x/bedtools2.git \u0026\u0026     cd /usr/local/bedtools2 \u0026\u0026     git checkout v2.27.0 \u0026\u0026     make \u0026\u0026     ln -s /usr/local/bedtools2/bin/* /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y     nodejs     python-dev     python-pip     tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install toil[cwl]==3.12.0  \u0026\u0026 sed -i 's/select\\[type==X86_64 \u0026\u0026 mem/select[mem/' /usr/local/lib/python2.7/dist-packages/toil/batchSystems/lsf.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y libnss-sss"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean autoclean \u0026\u0026 apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}