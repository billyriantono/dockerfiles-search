{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "David Spencer \u003cdspencer@wustl.edu\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Image",
              "Value": "for Homer"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends locales \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     LC_ALL=en_US.UTF-8 \u0026\u0026     LANG=en_US.UTF-8 \u0026\u0026     /usr/sbin/update-locale LANG=en_US.UTF-8 \u0026\u0026     TERM=xterm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y --no-install-recommends     build-essential     bzip2     curl     g++     git     less     libcurl4-openssl-dev     libpng-dev     libssl-dev     libxml2-dev     make     ncurses-dev     nodejs     pkg-config     python     rsync     unzip     wget     zip     libbz2-dev     bash-completion     ca-certificates     file     fonts-texgyre     gfortran     gsfonts     libbz2-1.0     libcurl3     libicu55     libjpeg-turbo8     libopenblas-dev     libpangocairo-1.0-0     libpcre3     libpng12-0     libtiff5     liblzma5     locales     zlib1g     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     perl     xauth     xfonts-base     xvfb     zlib1g-dev     bc     tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     curl -s https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh -o miniconda.sh \u0026\u0026     /bin/bash miniconda.sh -f -b -p $CONDA_DIR \u0026\u0026     rm miniconda.sh \u0026\u0026     $CONDA_DIR/bin/conda config --system --add channels defaults \u0026\u0026     $CONDA_DIR/bin/conda config --system --add channels bioconda \u0026\u0026     $CONDA_DIR/bin/conda config --system --add channels conda-forge \u0026\u0026     $CONDA_DIR/bin/conda config --system --set auto_update_conda false \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install wget samtools r-essentials bioconductor-deseq2 bioconductor-edger \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/homer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/homer"
        },
        {
          "CmdLine": [
            "wget http://homer.ucsd.edu/homer/configureHomer.pl \u0026\u0026     perl configureHomer.pl -install \u0026\u0026     ln -s /opt/homer/bin/makeTagDirectory /usr/local/bin/ \u0026\u0026     ln -s /opt/homer/bin/findPeaks /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libnss-sss \u0026\u0026 apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"America/Chicago\" \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/bin:/usr/bin:/opt/homer/bin:${PATH}"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}