{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "David H. Spencer \u003cdspencer@wustl.edu\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Heavy container for Chromoseq\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends locales \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     LC_ALL=en_US.UTF-8 \u0026\u0026     LANG=en_US.UTF-8 \u0026\u0026     /usr/sbin/update-locale LANG=en_US.UTF-8 \u0026\u0026     TERM=xterm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y --no-install-recommends     build-essential     cmake     python-dev     git     wget     autoconf     zlib1g-dev     fort77     liblzma-dev      libblas-dev     gfortran     gcc-multilib     aptitude     libreadline-dev     libpcre3     libpcre3-dev     bzip2     curl     default-jdk     default-jre     g++     git     less     libcurl4-openssl-dev     libssl-dev     libxml2-dev     make     ncurses-dev     pkg-config     python     unzip     zip     libbz2-dev     ca-certificates     file     g++     libbz2-1.0     libcurl3     libicu55     libopenblas-dev     liblzma5     locales     zlib1g     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libicu-dev     libreadline-dev     liblzma-dev     libxt-dev     perl     xvfb     zlib1g-dev     libnss-sss"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HTSLIB_INSTALL_DIR",
              "Value": "/opt/htslib"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/htslib/releases/download/1.9/htslib-1.9.tar.bz2 \u0026\u0026     tar --bzip2 -xvf htslib-1.9.tar.bz2 \u0026\u0026     cd /tmp/htslib-1.9 \u0026\u0026     ./configure --enable-plugins --prefix=$HTSLIB_INSTALL_DIR \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cp $HTSLIB_INSTALL_DIR/lib/libhts.so* /usr/lib/ \u0026\u0026     ln -s $HTSLIB_INSTALL_DIR/bin/tabix /usr/bin/tabix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SAMTOOLS_INSTALL_DIR",
              "Value": "/opt/samtools"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2 \u0026\u0026     tar --bzip2 -xf samtools-1.9.tar.bz2 \u0026\u0026     cd /tmp/samtools-1.9 \u0026\u0026     ./configure --with-htslib=$HTSLIB_INSTALL_DIR --prefix=$SAMTOOLS_INSTALL_DIR \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     ln -s /opt/samtools/bin/* /usr/local/bin/ \u0026\u0026     cd / \u0026\u0026     rm -rf /tmp/samtools-1.9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local"
        },
        {
          "CmdLine": [
            "git clone https://github.com/arq5x/bedtools2.git \u0026\u0026     cd /usr/local/bedtools2 \u0026\u0026     git checkout v2.27.0 \u0026\u0026     make \u0026\u0026     ln -s /usr/local/bedtools2/bin/* /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "R_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "R_VERSION",
              "Value": "${R_VERSION:-3.6.0}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026     curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \u0026\u0026     tar -xf R-${R_VERSION}.tar.gz \u0026\u0026     cd R-${R_VERSION} \u0026\u0026     R_PAPERSIZE=letter \u0026\u0026     R_BATCHSAVE=\"--no-save --no-restore\" \u0026\u0026     R_BROWSER=xdg-open \u0026\u0026     PAGER=/usr/bin/pager \u0026\u0026     PERL=/usr/bin/perl \u0026\u0026     R_UNZIPCMD=/usr/bin/unzip \u0026\u0026     R_ZIPCMD=/usr/bin/zip \u0026\u0026     R_PRINTCMD=/usr/bin/lpr \u0026\u0026     LIBnn=lib \u0026\u0026     AWK=/usr/bin/awk \u0026\u0026     CFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\" \u0026\u0026     CXXFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\" \u0026\u0026     ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas=\"-lopenblas\"                --disable-nls                --without-recommended-packages \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')\" \u003e\u003e /usr/local/lib/R/etc/Rprofile.site \u0026\u0026     mkdir -p /usr/local/lib/R/site-library \u0026\u0026     chown root:staff /usr/local/lib/R/site-library \u0026\u0026     chmod g+wx /usr/local/lib/R/site-library \u0026\u0026     echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" \u003e\u003e /usr/local/lib/R/etc/Renviron \u0026\u0026     echo \"R_LIBS=\\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" \u003e\u003e /usr/local/lib/R/etc/Renviron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     curl -s https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh -o miniconda.sh \u0026\u0026     /bin/bash miniconda.sh -f -b -p $CONDA_DIR \u0026\u0026     rm miniconda.sh \u0026\u0026     $CONDA_DIR/bin/conda config --system --add channels conda-forge \u0026\u0026     $CONDA_DIR/bin/conda config --system --set auto_update_conda false \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --add channels bioconda \u0026\u0026     conda install -c conda-forge petl \u0026\u0026     conda install -c anaconda biopython scipy cython cyvcf2 \u0026\u0026     conda install -y -c bioconda mosdepth"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone https://github.com/pysam-developers/pysam.git \u0026\u0026     cd pysam \u0026\u0026     export HTSLIB_LIBRARY_DIR=$HTSLIB_INSTALL_DIR/lib \u0026\u0026     export HTSLIB_INCLUDE_DIR=$HTSLIB_INSTALL_DIR/include \u0026\u0026     python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda create --quiet --yes -p $CONDA_DIR/envs/python2 python=2.7 'pip' \u0026\u0026     conda clean -tipsy \u0026\u0026     /bin/bash -c \"source activate python2 \u0026\u0026     conda install -c anaconda svtools \u0026\u0026     source deactivate\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "manta_version",
              "Value": "1.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/"
        },
        {
          "CmdLine": [
            "wget https://github.com/Illumina/manta/releases/download/v${manta_version}/manta-${manta_version}.centos6_x86_64.tar.bz2 \u0026\u0026     tar -jxvf manta-${manta_version}.centos6_x86_64.tar.bz2 \u0026\u0026     mv manta-${manta_version}.centos6_x86_64 /usr/local/src/manta"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VARSCAN_INSTALL_DIR",
              "Value": "/opt/varscan"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$VARSCAN_INSTALL_DIR"
        },
        {
          "CmdLine": [
            "wget https://github.com/dkoboldt/varscan/releases/download/2.4.2/VarScan.v2.4.2.jar \u0026\u0026   ln -s VarScan.v2.4.2.jar VarScan.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget https://github.com/genome/pindel/archive/v0.2.5b8.tar.gz \u0026\u0026   tar -xzf v0.2.5b8.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/pindel-0.2.5b8"
        },
        {
          "CmdLine": [
            "./INSTALL $HTSLIB_INSTALL_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "ln -s /opt/pindel-0.2.5b8/pindel /usr/local/bin/pindel \u0026\u0026     ln -s /opt/pindel-0.2.5b8/pindel2vcf /usr/local/bin/pindel2vcf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/ucsc \u0026\u0026     cd /tmp/ucsc \u0026\u0026     wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig \u0026\u0026     chmod ugo+x * \u0026\u0026     mv * /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/bin"
        },
        {
          "CmdLine": [
            "git clone https://github.com/broadinstitute/ichorCNA.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages(c('plyr', 'optparse','BiocManager')); BiocManager::install(c('HMMcopy','GenomeInfoDb','GenomicRanges'))\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R CMD INSTALL ichorCNA"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/ \u0026\u0026 git clone https://github.com/lh3/minimap2 \u0026\u0026     cd minimap2 \u0026\u0026 make \u0026\u0026     cp minimap2 /usr/local/bin/ \u0026\u0026     rm -Rf minimap2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cpan install DBI \u0026\u0026 cpan install Module::Build.pm \u0026\u0026 cpan install JSON"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/vep/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/vep"
        },
        {
          "CmdLine": [
            "git clone https://github.com/Ensembl/ensembl-vep.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/vep/ensembl-vep"
        },
        {
          "CmdLine": [
            "git checkout postreleasefix/90"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "perl INSTALL.pl --NO_UPDATE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "ln -s /opt/vep/ensembl-vep/vep /usr/bin/variant_effect_predictor.pl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu    $(lsb_release -cs)    stable\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/"
        },
        {
          "CmdLine": [
            "wget https://github.com/broadinstitute/cromwell/releases/download/36/cromwell-36.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026    rm -rf /tmp/* \u0026\u0026    apt-get autoremove -y \u0026\u0026    apt-get autoclean -y \u0026\u0026    rm -rf /var/lib/apt/lists/* \u0026\u0026    apt-get clean \u0026\u0026    rm -f /opt/*.bz2 /opt/*.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/files/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "addReadCountsToVcfCRAM.py",
            "/usr/local/bin/addReadCountsToVcfCRAM.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "duphold_static",
            "/usr/local/bin/duphold_static"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "FilterManta.pl",
            "/usr/local/bin/FilterManta.pl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ichorToVCF.pl",
            "/usr/local/bin/ichorToVCF.pl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "make_report.py",
            "/usr/local/bin/make_report.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "configManta.hg38.py.ini",
            "/opt/files/configManta.hg38.py.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nextera_hg38_500kb_median_normAutosome_median.rds_median.n9.gr.rds",
            "/opt/files/nextera_hg38_500kb_median_normAutosome_median.rds_median.n9.gr.rds"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "basespace_cromwell.config",
            "/opt/files/basespace_cromwell.config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "all_sequences.fa.bed.gz",
            "/opt/files/all_sequences.fa.bed.gz"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "all_sequences.fa.bed.gz.tbi",
            "/opt/files/all_sequences.fa.bed.gz.tbi"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "all_sequences.fa.fai",
            "/opt/files/all_sequences.fa.fai"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "chromoseq_genes.bed",
            "/opt/files/chromoseq_genes.bed"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hg38.cytoBandIdeo.bed.gz",
            "/opt/files/hg38.cytoBandIdeo.bed.gz"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hg38.cytoBandIdeo.bed.gz.tbi",
            "/opt/files/hg38.cytoBandIdeo.bed.gz.tbi"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "chromoseq_sv_filter.bedpe.gz",
            "/opt/files/chromoseq_sv_filter.bedpe.gz"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "chromoseq_translocations.bedpe",
            "/opt/files/chromoseq_translocations.bedpe"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "driver.py",
            "/opt/files/driver.py"
          ]
        },
        {
          "CmdLine": [
            "chmod a+wrx /opt/files/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+wrx /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /usr/local/lib/R/site-library/ichorCNA/extdata/*.rds /usr/local/lib/R/site-library/ichorCNA/extdata/MBC* /usr/local/lib/R/site-library/ichorCNA/extdata/*10kb* /usr/local/lib/R/site-library/ichorCNA/extdata/*50kb* /usr/local/lib/R/site-library/ichorCNA/extdata/*1000kb*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}