MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.09.3
    Name: env
  - CmdLine:
    - "set -eux; \t\tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64)
      dockerArch='x86_64' ;; \t\tarmhf) dockerArch='armel' ;; \t\taarch64) dockerArch='aarch64'
      ;; \t\tppc64le) dockerArch='ppc64le' ;; \t\ts390x) dockerArch='s390x' ;; \t\t*)
      echo >&2 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;\tesac; \t\tif
      ! wget -O docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\";
      then \t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from
      '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\ttar --extract
      \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/
      \t; \trm docker.tgz; \t\tdockerd --version; \tdocker --version"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - modprobe.sh
    - /usr/local/bin/modprobe
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
