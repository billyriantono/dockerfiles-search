{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get install -y --no-install-recommends     sudo git wget cmake nano vim gcc g++ build-essential ca-certificates software-properties-common     pkg-config zip g++ zlib1g-dev unzip nodejs npm curl iputils-ping net-tools    \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install n -g     \u0026\u0026 n stable     \u0026\u0026 apt purge -y nodejs npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:deadsnakes/ppa     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y python3.7     \u0026\u0026 wget -O ./get-pip.py https://bootstrap.pypa.io/get-pip.py     \u0026\u0026 python3.7 ./get-pip.py     \u0026\u0026 ln -s /usr/bin/python3.7 /usr/local/bin/python3     \u0026\u0026 ln -s /usr/bin/python3.7 /usr/local/bin/python     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install pip setuptools -U \u0026\u0026 pip install --upgrade pip \u0026\u0026 pip install -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/user"
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 pip install ipywidgets     \u0026\u0026 jupyter nbextension enable --py --sys-prefix widgetsnbextension     \u0026\u0026 jupyter labextension install @jupyterlab/toc --no-build     \u0026\u0026 jupyter labextension install @krassowski/jupyterlab_go_to_definition --no-build     \u0026\u0026 jupyter labextension install ipyvolume --no-build     \u0026\u0026 jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-build     \u0026\u0026 jupyter lab build --minimize False"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": "host.docker.internal:0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ldconfig     \u0026\u0026 apt-get -y clean     \u0026\u0026 apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}