{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:6",
      "SourceCode": "FROM centos:6",
      "Platform": "",
      "From": {
        "Image": "centos:6"
      },
      "Commands": [
        {
          "Maintainer": "Lorenzo García Cortiñas \u003clgcortinas@gradiant.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_USER",
              "Value": "\"cygnus\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_HOME",
              "Value": "\"/opt/fiware-cygnus\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_VERSION",
              "Value": "\"1.7.0_SNAPSHOT\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CONF_PATH",
              "Value": "\"/opt/apache-flume/conf\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CONF_FILE",
              "Value": "\"/opt/apache-flume/conf/agent.conf\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_AGENT_NAME",
              "Value": "\"cygnus-ngsi\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_LOG_LEVEL",
              "Value": "\"INFO\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_LOG_APPENDER",
              "Value": "\"console\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_SERVICE_PORT",
              "Value": "\"5050\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_API_PORT",
              "Value": "\"8081\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MYSQL_HOST",
              "Value": "\"iot-mysql\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MYSQL_PORT",
              "Value": "\"3306\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MYSQL_USER",
              "Value": "\"mysql\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MYSQL_PASS",
              "Value": "\"mysql\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MONGO_HOSTS",
              "Value": "\"iot-mongo:27017\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MONGO_USER",
              "Value": "\"mongo\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_MONGO_PASS",
              "Value": "\"mongo\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CKAN_HOST",
              "Value": "\"iot-ckan\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CKAN_PORT",
              "Value": "\"80\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CKAN_API_KEY",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CKAN_SSL",
              "Value": "\"false\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_HDFS_HOST",
              "Value": "\"iot-hdfs\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_HDFS_PORT",
              "Value": "\"50070\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_HDFS_USER",
              "Value": "\"hdfs\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_HDFS_TOKEN",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CARTO_USER",
              "Value": "\"carto\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CYGNUS_CARTO_KEY",
              "Value": "\"carto\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_URL_CYGNUS",
              "Value": "\"https://github.com/telefonicaid/fiware-cygnus.git\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_REV_CYGNUS",
              "Value": "\"fdd684f4dbea82a42378bfbd90d3e80ae60cbb6c\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MVN_VER",
              "Value": "\"3.3.9\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MVN_HOME",
              "Value": "\"/opt/apache-maven\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FLUME_VER",
              "Value": "\"1.4.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FLUME_HOME",
              "Value": "\"/opt/apache-flume\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "\"1.7.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fix_arrays.patch",
            "/root"
          ]
        },
        {
          "CmdLine": [
            "adduser ${CYGNUS_USER} \u0026\u0026     yum -y install nc java-${JAVA_VERSION}-openjdk-devel git \u0026\u0026     export JAVA_HOME=/usr/lib/jvm/java-${JAVA_VERSION} \u0026\u0026     export MAVEN_OPTS=\"-Xmx512m -XX:MaxPermSize=128m -Dfile.encoding=UTF-8 -Dproject.build.sourceEncoding=UTF-8 -Dmaven.compiler.useIncrementalCompilation=false -DdependencyLocationsEnabled=false -XX:+TieredCompilation -XX:TieredStopAtLevel=1\" \u0026\u0026     export MAVEN_ARGS=\"-B -T4\" \u0026\u0026     echo \"INFO: Getting apache preferred site and obtain URLs for Maven and Flume...\" \u0026\u0026     APACHE_DOMAIN=\"$(curl -s 'https://www.apache.org/dyn/closer.cgi?as_json=1' | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"preferred\"]')\"       || APACHE_DOMAIN=\"http://archive.apache.org/dist/\" \u0026\u0026     MVN_URL=\"${APACHE_DOMAIN}maven/maven-3/${MVN_VER}/binaries/apache-maven-${MVN_VER}-bin.tar.gz\" \u0026\u0026     FLUME_URL=\"${APACHE_DOMAIN}flume/${FLUME_VER}/apache-flume-${FLUME_VER}-bin.tar.gz\" \u0026\u0026     echo -e $'INFO: Java version \u003c'${JAVA_VERSION}'\u003e\\n'$(java -version)'\\nINFO: Apache domain \u003c'${APACHE_DOMAIN}'\u003e\\nINFO: URL MAVEN \u003c'${MVN_URL}'\u003e\\nINFO: URL FLUME \u003c'${FLUME_URL}'\u003e' \u0026\u0026     echo \"INFO: Download and install Maven and Flume...\" \u0026\u0026     curl --remote-name --location --insecure --silent --show-error \"${MVN_URL}\" \u0026\u0026     tar xzf apache-maven-${MVN_VER}-bin.tar.gz \u0026\u0026     mv apache-maven-${MVN_VER} ${MVN_HOME} \u0026\u0026     curl --remote-name --location --insecure --silent --show-error \"${FLUME_URL}\" \u0026\u0026     tar zxf apache-flume-${FLUME_VER}-bin.tar.gz \u0026\u0026     mv apache-flume-${FLUME_VER}-bin ${FLUME_HOME} \u0026\u0026     mv ${FLUME_HOME}/lib/httpclient-4.2.1.jar ${FLUME_HOME}/lib/httpclient-4.2.1.jar.old \u0026\u0026     mv ${FLUME_HOME}/lib/httpcore-4.2.1.jar ${FLUME_HOME}/lib/httpcore-4.2.1.jar.old \u0026\u0026     mv ${FLUME_HOME}/lib/libthrift-0.7.0.jar ${FLUME_HOME}/lib/libthrift-0.7.0.jar.old \u0026\u0026     mkdir -p ${FLUME_HOME}/plugins.d/cygnus \u0026\u0026     mkdir -p ${FLUME_HOME}/plugins.d/cygnus/lib \u0026\u0026     mkdir -p ${FLUME_HOME}/plugins.d/cygnus/libext \u0026\u0026     chown -R cygnus:cygnus ${FLUME_HOME} \u0026\u0026     echo \"INFO: Cloning Cygnus using \u003c${GIT_URL_CYGNUS}\u003e and \u003c${GIT_REV_CYGNUS}\u003e\" \u0026\u0026     git clone ${GIT_URL_CYGNUS} ${CYGNUS_HOME} \u0026\u0026     cd ${CYGNUS_HOME} \u0026\u0026     git checkout ${GIT_REV_CYGNUS} \u0026\u0026     cp /root/fix_arrays.patch . \u0026\u0026     git am --signoff \u003c fix_arrays.patch \u0026\u0026     echo \"INFO: Build and install cygnus-common\" \u0026\u0026     cd ${CYGNUS_HOME}/cygnus-common \u0026\u0026     ${MVN_HOME}/bin/mvn ${MAVEN_ARGS} clean compile exec:exec assembly:single \u0026\u0026     cp target/cygnus-common-${CYGNUS_VERSION}-jar-with-dependencies.jar ${FLUME_HOME}/plugins.d/cygnus/libext/ \u0026\u0026     ${MVN_HOME}/bin/mvn install:install-file -Dfile=${FLUME_HOME}/plugins.d/cygnus/libext/cygnus-common-${CYGNUS_VERSION}-jar-with-dependencies.jar -DgroupId=com.telefonica.iot -DartifactId=cygnus-common -Dversion=${CYGNUS_VERSION} -Dpackaging=jar -DgeneratePom=false \u0026\u0026     echo \"INFO: Build and install cygnus-ngsi\" \u0026\u0026     cd ${CYGNUS_HOME}/cygnus-ngsi \u0026\u0026     ${MVN_HOME}/bin/mvn ${MAVEN_ARGS} clean compile exec:exec assembly:single \u0026\u0026     cp target/cygnus-ngsi-${CYGNUS_VERSION}-jar-with-dependencies.jar ${FLUME_HOME}/plugins.d/cygnus/lib/ \u0026\u0026     echo \"INFO: Install Cygnus Application script\" \u0026\u0026     cp ${CYGNUS_HOME}/cygnus-common/target/classes/cygnus-flume-ng ${FLUME_HOME}/bin/ \u0026\u0026     chmod +x ${FLUME_HOME}/bin/cygnus-flume-ng \u0026\u0026     echo \"INFO: Instantiate some configuration files\" \u0026\u0026     cp ${CYGNUS_HOME}/cygnus-common/conf/log4j.properties.template ${FLUME_HOME}/conf/log4j.properties \u0026\u0026     cp ${CYGNUS_HOME}/cygnus-ngsi/conf/grouping_rules.conf.template ${FLUME_HOME}/conf/grouping_rules.conf \u0026\u0026     echo \"INFO: Create Cygnus log folder\" \u0026\u0026     mkdir -p /var/log/cygnus \u0026\u0026     echo \"INFO: Cleanup to thin the final image... doing optimizations...\" \u0026\u0026     echo \"INFO: Java runtime not needs JAVA_HOME... Unsetting...\" \u0026\u0026     unset JAVA_HOME \u0026\u0026     cd ${CYGNUS_HOME}/cygnus-common \u0026\u0026     ${MVN_HOME}/bin/mvn ${MAVEN_ARGS} clean \u0026\u0026     cd ${CYGNUS_HOME}/cygnus-ngsi \u0026\u0026     ${MVN_HOME}/bin/mvn ${MAVEN_ARGS} clean \u0026\u0026     rm -rf /root/.m2 \u0026\u0026 rm -rf ${MVN_HOME} \u0026\u0026 rm -rf ${FLUME_HOME}/docs \u0026\u0026 rm -rf ${CYGNUS_HOME}/doc \u0026\u0026 rm -f /*.tar.gz \u0026\u0026     yum erase -y git java-${JAVA_VERSION}-openjdk-devel \u0026\u0026     rpm -qa redhat-logos gtk2 pulseaudio-libs libvorbis jpackage* groff alsa* atk cairo libX* | xargs -r rpm -e --nodeps \u0026\u0026 yum -y erase libss \u0026\u0026     yum clean all \u0026\u0026 rpm -vv --rebuilddb \u0026\u0026 rm -rf /var/lib/yum/yumdb \u0026\u0026 rm -rf /var/lib/yum/history \u0026\u0026     find /usr/share/locale -mindepth 1 -maxdepth 1 ! -name 'en_US' ! -name 'locale.alias' | xargs -r rm -r \u0026\u0026 rm -f /var/log/*log \u0026\u0026     bash -c 'localedef --list-archive | grep -v -e \"en_US\" | xargs localedef --delete-from-archive' \u0026\u0026     /bin/cp -f /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl \u0026\u0026     build-locale-archive \u0026\u0026 find ${CYGNUS_HOME} -name '.[^.]*' 2\u003e/dev/null | xargs -r rm -rf \u0026\u0026     echo \"INFO: Compacting Cygnus jar files...\" \u0026\u0026     pack200 -J-Xmx512m -J-XX:MaxPermSize=128m --effort=5 --segment-limit=786432 --modification-time=latest --pass-file=org/apache/hadoop/hive/shims/Hadoop23Shims.class       ${FLUME_HOME}/plugins.d/cygnus/libext/cygnus-common-${CYGNUS_VERSION}-jar-with-dependencies.jar.pack.gz       ${FLUME_HOME}/plugins.d/cygnus/libext/cygnus-common-${CYGNUS_VERSION}-jar-with-dependencies.jar \u0026\u0026     pack200 -J-Xmx512m -J-XX:MaxPermSize=128m --effort=5 --segment-limit=786432 --modification-time=latest --pass-file=org/apache/hadoop/hive/shims/Hadoop23Shims.class       ${FLUME_HOME}/plugins.d/cygnus/lib/cygnus-ngsi-${CYGNUS_VERSION}-jar-with-dependencies.jar.pack.gz       ${FLUME_HOME}/plugins.d/cygnus/lib/cygnus-ngsi-${CYGNUS_VERSION}-jar-with-dependencies.jar \u0026\u0026     rm -f ${FLUME_HOME}/plugins.d/cygnus/libext/cygnus-common-${CYGNUS_VERSION}-jar-with-dependencies.jar \u0026\u0026     rm -f ${FLUME_HOME}/plugins.d/cygnus/lib/cygnus-ngsi-${CYGNUS_VERSION}-jar-with-dependencies.jar \u0026\u0026     echo \"INFO: Copy some files needed for starting cygnus-ngsi\" \u0026\u0026     cp -p ${CYGNUS_HOME}/docker/cygnus-ngsi/agent.conf ${FLUME_HOME}/conf/ \u0026\u0026     cp -p ${CYGNUS_HOME}/docker/cygnus-ngsi/cartodb_keys.conf ${FLUME_HOME}/conf/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CARTODB_CONFIG",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CARTODB_TIMEOUT",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CARTODB_ENDPOINT",
              "Value": "carto"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cygnus-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "refresh.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cartodb_tables.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /cygnus-entrypoint.sh \u0026\u0026     chmod a+x /refresh.sh \u0026\u0026     chmod a+x /cartodb_tables.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/cygnus-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "${CYGNUS_API_PORT}",
            "${CYGNUS_SERVICE_PORT}"
          ]
        }
      ]
    }
  ]
}