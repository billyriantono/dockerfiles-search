{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"cgiraldo@gradiant.org\""
            },
            {
              "Key": "organization",
              "Value": "\"gradiant.org\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "JUPYTER_VERSION",
              "Value": "6.0.1"
            },
            {
              "Key": "JUPYTERLAB_VERSION",
              "Value": "1.1.4"
            },
            {
              "Key": "JUPYTER_PORT",
              "Value": "8888"
            },
            {
              "Key": "JUPYTER_ENABLE_LAB",
              "Value": "true"
            },
            {
              "Key": "JUPYTERHUB_VERSION",
              "Value": "1.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y python3 python3-dev python3-pip git sudo \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     pip3 install --no-cache-dir --upgrade pip setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir httplib2==0.12.0 \u0026\u0026     pip3 install --no-cache-dir notebook==$JUPYTER_VERSION jupyterlab==$JUPYTERLAB_VERSION nbgitpuller==0.7.2 \u0026\u0026     jupyter serverextension enable --py nbgitpuller --sys-prefix \u0026\u0026     pip3 install --no-cache-dir tensorflow==1.14.0 tfx==0.14.0 matplotlib==3.1.1 \u0026\u0026     pip3 install kafka-python==1.4.7 \u0026\u0026     apt update \u0026\u0026 apt install -y npm nodejs \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     pip3 install --no-cache-dir jupyterhub==${JUPYTERHUB_VERSION} \u0026\u0026     npm install -g configurable-http-proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y r-base r-base-dev libxml2-dev \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     R -e \"install.packages('IRkernel', repos = 'http://cran.us.r-project.org')\" \u0026\u0026     R -e \"IRkernel::installspec(user = FALSE)\" \u0026\u0026     apt update \u0026\u0026 apt install -y libcurl4-openssl-dev libssl-dev \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     R -e \"install.packages(c('tidyverse'),repos = 'http://cran.us.r-project.org')\" \u0026\u0026     R -e \"install.packages('devtools', repos = 'http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/default-jvm/"
            },
            {
              "Key": "SPARK_VERSION",
              "Value": "2.4.4"
            },
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:$SPARK_HOME/sbin:$SPARK_HOME/bin\""
            },
            {
              "Key": "SPARK_URL",
              "Value": "\"local[*]\""
            },
            {
              "Key": "PYTHONPATH",
              "Value": "\"${SPARK_HOME}/python/lib/pyspark.zip:${SPARK_HOME}/python/lib/py4j-src.zip:$PYTHONPATH\""
            },
            {
              "Key": "SPARK_OPTS",
              "Value": "\"\""
            },
            {
              "Key": "PYSPARK_PYTHON",
              "Value": "/usr/bin/python3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1 \u0026\u0026     echo \"deb http://deb.debian.org/debian unstable main\" \u003e /etc/apt/sources.list.d/91-unstable.list \u0026\u0026     apt update \u0026\u0026 apt install -y openjdk-8-jre-headless wget \u0026\u0026 rm /etc/apt/sources.list.d/91-unstable.list \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     cd /usr/lib/jvm \u0026\u0026 ln -s java-8-openjdk-amd64 default-jvm \u0026\u0026     wget -qO- https://archive.apache.org/dist/spark/spark-$SPARK_VERSION/spark-$SPARK_VERSION-bin-hadoop2.7.tgz | tar xvz -C /opt \u0026\u0026     ln -s /opt/spark-$SPARK_VERSION-bin-hadoop2.7 /opt/spark \u0026\u0026     cd /opt/spark/python/lib \u0026\u0026 ln -s py4j-*-src.zip py4j-src.zip \u0026\u0026     wget -qO $SPARK_HOME/jars/spark-avro_2.11-$SPARK_VERSION.jar       \"https://search.maven.org/remotecontent?filepath=org/apache/spark/spark-avro_2.11/$SPARK_VERSION/spark-avro_2.11-$SPARK_VERSION.jar\" \u0026\u0026    cp $SPARK_HOME/examples/jars/spark-examples_2.11-$SPARK_VERSION.jar $SPARK_HOME/jars"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install toree==0.3.0 \u0026\u0026     jupyter toree install --kernel_name=\"Spark - Local\" --spark_home=${SPARK_HOME} \u0026\u0026     jupyter toree install --kernel_name=\"Spark - Cluster\" --spark_home=${SPARK_HOME} --spark_opts='--master=${SPARKCONF_SPARK_MASTER}'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install mlflow==1.3.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_GID",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jovyan"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/"
          ]
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}