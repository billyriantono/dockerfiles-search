{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:1.13-alpine",
      "SourceCode": "FROM golang:1.13-alpine as BUILD",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:1.13-alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/github.com/kubernetes"
        },
        {
          "Env": [
            {
              "Key": "KUBERNETES_VERSION",
              "Value": "v1.17.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk add --no-cache     git     make     bash     rsync     g++     linux-headers     \u0026\u0026 git clone -b $KUBERNETES_VERSION     https://github.com/kubernetes/kubernetes.git   \u0026\u0026 cd kubernetes   \u0026\u0026 make -j \"$(getconf _NPROCESSORS_ONLN)\"     kube-apiserver     kube-controller-manager     kube-scheduler     kube-proxy     kubelet"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "BUILD",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/kubernetes/kubernetes/_output/bin/kube-apiserver",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "BUILD",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/kubernetes/kubernetes/_output/bin/kube-controller-manager",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "BUILD",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/kubernetes/kubernetes/_output/bin/kube-scheduler",
            "/usr/local/bin/"
          ]
        }
      ]
    }
  ]
}