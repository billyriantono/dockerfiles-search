MetaArgs: null
Stages:
- As: builder
  BaseName: maven:3-jdk-8
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - janus-serializer
    - /usr/src/janus-serializer
  - Name: workdir
    Path: /usr/src/janus-serializer
  - CmdLine:
    - mvn clean package
    Name: run
    PrependShell: true
  - Key: DYNAMODB_PLUGIN_VERSION
    Name: arg
    Value: jg0.2.0-1.2.0
  - CmdLine:
    - git clone https://github.com/awslabs/dynamodb-janusgraph-storage-backend /usr/src/dynamodb-janusgraph-storage-backend
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/dynamodb-janusgraph-storage-backend
  - CmdLine:
    - git checkout ${DYNAMODB_PLUGIN_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - MAVEN_OPTS="-XX:+TieredCompilation -XX:TieredStopAtLevel=1" mvn -T 1C clean
      package -Dmaven.test.skip=true -DskipTests=true
    Name: run
    PrependShell: true
  From:
    Image: maven:3-jdk-8
  Name: builder
  Platform: ""
  SourceCode: FROM maven:3-jdk-8 as builder
- BaseName: contentwisetv/openjdk-waitforit-goreplay:jre8
  Commands:
  - Name: user
    User: root
  - Key: DOCKERIZE_VERSION
    Name: arg
    Value: v0.6.1
  - Key: JANUS_VERSION
    Name: arg
    Value: 0.2.0
  - Key: JANUS_VERSION_SUFFIX
    Name: arg
    Value: hadoop2
  - CmdLine:
    - apk add --no-cache bash perl
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /tmp/janus.zip "https://github.com/JanusGraph/janusgraph/releases/download/v${JANUS_VERSION}/janusgraph-${JANUS_VERSION}-${JANUS_VERSION_SUFFIX}.zip"
      &&     unzip /tmp/janus.zip -d /tmp/ &&     mv "/tmp/janusgraph-${JANUS_VERSION}-${JANUS_VERSION_SUFFIX}"
      /opt/janus &&     rm /tmp/janus.zip &&     wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/janus/ext/janus-serializer /opt/janus/ext/dynamodb-janusgraph-storage-backend
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/src/janus-serializer/target/janus-serializer.jar
    - /opt/janus/ext/janus-serializer.jar
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/src/dynamodb-janusgraph-storage-backend/target/dynamodb-janusgraph-storage-backend-1.2.0.jar
    - /usr/src/dynamodb-janusgraph-storage-backend/target/dependencies
    - /opt/janus/ext/dynamodb-janusgraph-storage-backend/
  - CmdLine:
    - mkdir -p /opt/janus/badlibs &&     cd /opt/janus/lib &&     mv joda-time-2.8.2.jar
      slf4j-log4j12-1.7.12.jar logback-classic-1.1.2.jar ../badlibs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates
    - /templates
  - CmdLine:
    - chown -R user:group /opt/janus
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /opt/janus
  - CmdLine:
    - ./bin/gremlin-server.sh
    - ./conf/gremlin-server/gremlin-server.yaml
    Name: cmd
    PrependShell: false
  From:
    Image: contentwisetv/openjdk-waitforit-goreplay:jre8
  Name: ""
  Platform: ""
  SourceCode: FROM contentwisetv/openjdk-waitforit-goreplay:jre8
