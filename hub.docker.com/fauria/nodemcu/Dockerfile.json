{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Fer Uria \u003cfauria@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"NodeMCU firmware generator. Customize and build a firmware with a single command. See README.md for more information.\""
            },
            {
              "Key": "License",
              "Value": "\"MIT License\""
            },
            {
              "Key": "Usage",
              "Value": "\"docker run --rm REPLACE_THIS fauria/nodemcu\""
            },
            {
              "Key": "Version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git wget zip unzip build-essential autoconf gperf flex bison texinfo help2man gawk libtool-bin libtool libncurses5-dev python python-dev python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyserial"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --create-home -s /bin/bash nodemcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nodemcu"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/nodemcu"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/pfalcon/esp-open-sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/nodemcu/nodemcu-firmware.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${HOME}/esp-open-sdk"
        },
        {
          "CmdLine": [
            "make STANDALONE=y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${HOME}/esp-open-sdk/xtensa-lx106-elf/bin/:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${HOME}/nodemcu-firmware"
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "ln -s /home/nodemcu/nodemcu-firmware/bin /firmware"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run-nodemcu.pl",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /run-nodemcu.pl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/firmware"
          ]
        },
        {
          "CmdLine": [
            "/run-nodemcu.pl"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}