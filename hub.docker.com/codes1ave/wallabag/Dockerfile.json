{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Marvin Steadfast \u003cmarvin@xsteadfastx.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "WALLABAG_VERSION",
          "Name": "arg",
          "Value": "2.2.3"
        },
        {
          "CmdLine": [
            "echo http://dl-2.alpinelinux.org/alpine/edge/community/ \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add shadow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 99 nobody \u0026\u0026  usermod -g 100 nobody \u0026\u0026  usermod -d /home nobody \u0026\u0026  chown -R nobody:users /home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /config \u0026\u0026     chown -R nobody:users /config \u0026\u0026     chmod 755 -R /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 apk update  \u0026\u0026 apk upgrade --available  \u0026\u0026 apk add  \u0026\u0026 apk add       ansible       curl       git       libwebp       mariadb-client       nginx       pcre       php7       php7-amqp       php7-bcmath       php7-ctype       php7-curl       php7-dom       php7-fpm       php7-gd       php7-gettext       php7-iconv       php7-json       php7-mbstring       php7-openssl       php7-pdo_mysql       php7-pdo_pgsql       php7-pdo_sqlite       php7-phar       php7-session       php7-simplexml       php7-tokenizer       php7-xml       php7-zlib       py-mysqldb       py-psycopg2       py-simplejson       rabbitmq-c       s6       tar  \u0026\u0026 rm -rf /var/cache/apk/*  \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log  \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log  \u0026\u0026 curl -s http://getcomposer.org/installer | php  \u0026\u0026 mv composer.phar /usr/local/bin/composer  \u0026\u0026 git clone --branch $WALLABAG_VERSION --depth 1 https://github.com/wallabag/wallabag.git /var/www/wallabag"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 cd /var/www/wallabag  \u0026\u0026 SYMFONY_ENV=prod composer install --no-dev -o --prefer-dist  \u0026\u0026 chown -R nobody:users /var/www/wallabag"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/wallabag/app/config",
            "/config"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "wallabag"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}