MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: dc
    Name: label
  - Env:
    - Key: SERVER_ADDR
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: SERVER_PORT
      Value: "8388"
    Name: env
  - Env:
    - Key: PASSWORD
      Value: ""
    Name: env
  - Env:
    - Key: METHOD
      Value: aes-256-gcm
    Name: env
  - Env:
    - Key: TIMEOUT
      Value: "300"
    Name: env
  - Env:
    - Key: DNS_ADDRS
      Value: 8.8.8.8,8.8.4.4
    Name: env
  - Env:
    - Key: ARGS
      Value: ""
    Name: env
  - CmdLine:
    - set -ex  && apk add --no-cache --virtual .build-deps     git     autoconf     automake     build-base     c-ares-dev     libev-dev     libtool     libsodium-dev     linux-headers     mbedtls-dev     pcre-dev  &&
      git clone https://github.com/shadowsocks/shadowsocks-libev.git /tmp/repo  &&
      cd /tmp/repo  && git submodule init && git submodule update  && ./autogen.sh  &&
      ./configure --prefix=/usr --disable-documentation  && make install  && apk del
      .build-deps  && apk add --no-cache       rng-tools       $(scanelf --needed
      --nobanner /usr/bin/ss-*       | awk '{ gsub(/,/, "\nso:", $2); print "so:"
      $2 }'       | sort -u)  && rm -rf /tmp/repo
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex  && apk add --no-cache --virtual .build-deps     git     gcc     autoconf     make     libtool     automake     zlib-dev     openssl     asciidoc     xmlto     libpcre32     libev-dev     g++     linux-headers
      && git clone https://github.com/shadowsocks/simple-obfs.git /tmp/simple-obfs
      && cd /tmp/simple-obfs && git submodule update --init --recursive && ./autogen.sh
      && ./configure && make && make install && apk del .build-deps && rm -rf /tmp/simple-obfs
    Name: run
    PrependShell: true
  - Name: user
    User: nobody
  - CmdLine:
    - exec ss-server       -s $SERVER_ADDR       -p $SERVER_PORT       -k ${PASSWORD:-$(hostname)}       -m
      $METHOD       -t $TIMEOUT       -d $DNS_ADDRS       -u       --plugin obfs-server       --plugin-opts
      "obfs=tls"       $ARGS
    Name: cmd
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
