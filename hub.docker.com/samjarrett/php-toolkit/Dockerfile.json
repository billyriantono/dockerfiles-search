{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "composer",
      "BaseName": "composer:1",
      "SourceCode": "FROM composer:1 AS composer",
      "Platform": "",
      "As": "composer",
      "From": {
        "Image": "composer:1"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine",
      "SourceCode": "FROM php:7.2-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHP_TIMEZONE",
              "Value": "\"UTC\""
            },
            {
              "Key": "FPM_PHP_USER",
              "Value": "\"www-data\""
            },
            {
              "Key": "FPM_PHP_GROUP",
              "Value": "\"www-data\""
            },
            {
              "Key": "FPM_PROCESS_MANAGER",
              "Value": "\"dynamic\""
            },
            {
              "Key": "FPM_MAX_CHILDREN",
              "Value": "5"
            },
            {
              "Key": "FPM_START_SERVERS",
              "Value": "2"
            },
            {
              "Key": "FPM_MIN_SPARE_SERVERS",
              "Value": "1"
            },
            {
              "Key": "FPM_MAX_SPARE_SERVERS",
              "Value": "3"
            },
            {
              "Key": "FPM_PROCESS_IDLE_TIMEOUT",
              "Value": "\"10s\""
            },
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     apk add --no-cache --quiet --virtual .build-deps zlib-dev freetype-dev libpng-dev libjpeg-turbo-dev icu-dev $PHPIZE_DEPS \u0026\u0026     sed -i 's#set -x#set +x#' /usr/local/bin/docker-php-ext-configure \u0026\u0026     docker-php-ext-configure gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/ \u0026\u0026     NPROC=$(getconf _NPROCESSORS_ONLN) \u0026\u0026     docker-php-ext-install -j${NPROC} zip iconv pdo pdo_mysql gd opcache mbstring bcmath intl pcntl \u0026\u0026     sed -i 's#set +x#set -x#' /usr/local/bin/docker-php-ext-configure \u0026\u0026     pecl install apcu \u0026\u0026     echo extension=apcu.so \u003e /usr/local/etc/php/conf.d/apcu.ini \u0026\u0026     runDeps=\"$(             scanelf --needed --nobanner --recursive /usr/local                 | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'                 | sort -u                 | xargs -r apk info --installed                 | sort -u         )\" \u0026\u0026     apk add --no-cache --virtual .run-deps $runDeps \u0026\u0026     apk del --quiet .build-deps \u0026\u0026     true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "composer",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "\"0.5.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     curl -sSL         https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-alpine-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz |         tar -C /usr/local/bin -xzv \u0026\u0026     true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_VERSION",
              "Value": "\"1.2.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     curl -sSLo /usr/local/bin/dumb-init         https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_amd64 \u0026\u0026     chmod +x /usr/local/bin/dumb-init \u0026\u0026     true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/dumb-init",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "/usr/local/etc/php/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "www.conf",
            "/usr/local/etc/php-fpm.d/www.conf"
          ]
        }
      ]
    }
  ]
}