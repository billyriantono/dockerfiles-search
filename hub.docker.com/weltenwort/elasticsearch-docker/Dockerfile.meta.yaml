MetaArgs: null
Stages:
- BaseName: docker.elastic.co/elasticsearch/elasticsearch-alpine-base:latest
  Commands:
  - Maintainer: Elastic Docker Team <docker@elastic.co>
    Name: maintainer
  - Key: ELASTIC_VERSION
    Name: arg
    Value: 6.0.0-alpha1-SNAPSHOT
  - Key: ES_DOWNLOAD_URL_PREFIX
    Name: arg
    Value: https://snapshots.elastic.co/downloads
  - Key: ES_JAVA_OPTS
    Name: arg
    Value: null
  - Env:
    - Key: ES_DOWNLOAD_URL
      Value: ${ES_DOWNLOAD_URL_PREFIX}/elasticsearch/elasticsearch-${ELASTIC_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: XPACK_DOWNLOAD_URL
      Value: ${ES_DOWNLOAD_URL_PREFIX}/elasticsearch-plugins/x-pack/x-pack-${ELASTIC_VERSION}.zip
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Name: workdir
    Path: /usr/share/elasticsearch
  - CmdLine:
    - wget ${ES_DOWNLOAD_URL}  && EXPECTED_SHA=$(wget -O - ${ES_DOWNLOAD_URL}.sha1)  &&
      test ${EXPECTED_SHA} == $(sha1sum elasticsearch-${ELASTIC_VERSION}.tar.gz |
      awk '{print $1}')  && tar zxf elasticsearch-${ELASTIC_VERSION}.tar.gz  && chown
      -R elasticsearch:elasticsearch elasticsearch-${ELASTIC_VERSION}  && mv elasticsearch-${ELASTIC_VERSION}/*
      .  && rmdir elasticsearch-${ELASTIC_VERSION}  && rm elasticsearch-${ELASTIC_VERSION}.tar.gz  &&
      true
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex  && for esdirs in config data logs; do       mkdir -p "${esdirs}";       chown
      -R elasticsearch:elasticsearch "${esdirs}";     done
    Name: run
    PrependShell: true
  - Name: user
    User: elasticsearch
  - CmdLine:
    - eval ${ES_JAVA_OPTS:-} elasticsearch-plugin install --batch ${XPACK_DOWNLOAD_URL}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - elasticsearch.yml
    - config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - log4j2.properties
    - config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/es-docker
    - bin/es-docker
  - Name: user
    User: root
  - CmdLine:
    - chown elasticsearch:elasticsearch config/* bin/es-docker  && chmod 0750 bin/es-docker
    Name: run
    PrependShell: true
  - Name: user
    User: elasticsearch
  - CmdLine:
    - /bin/bash
    - bin/es-docker
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  From:
    Image: docker.elastic.co/elasticsearch/elasticsearch-alpine-base:latest
  Name: ""
  Platform: ""
  SourceCode: FROM docker.elastic.co/elasticsearch/elasticsearch-alpine-base:latest
