MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - Maintainer: Lisa Ridley "lisa@codementality.com"
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     apt-utils     autoconf     curl     gcc     sqlite3     libsqlite3-dev     firebird-dev     libgmp-dev     libssl-dev     libbz2-dev     libc-dev     libtidy-dev     libedit-dev     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libmemcached-dev     libpng-dev     libxml2-dev     libldb-dev     libldap2-dev     make     mariadb-client     libpq-dev     pkg-config     unzip     zip     &&
      pecl install redis-4.0.1     && pecl install memcached-3.0.4     && docker-php-ext-configure
      gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     && docker-php-ext-install
      -j$(nproc) gd     && docker-php-ext-configure bz2 --with-bz2     && docker-php-ext-configure
      ldap --with-ldap=/usr     && docker-php-ext-install bz2     && docker-php-ext-install
      bcmath calendar dom exif     && CFLAGS="-I/usr/src/php" docker-php-ext-install
      xmlreader     && docker-php-ext-install ftp gettext gmp hash interbase intl
      json mbstring mysqli opcache pcntl     && docker-php-ext-install pdo_firebird
      pdo pdo_mysql pdo_sqlite     && docker-php-ext-install phar posix readline     &&
      docker-php-ext-install session shmop simplexml soap sockets     && docker-php-ext-install
      sysvmsg sysvsem     && docker-php-ext-install sysvshm tidy tokenizer wddx xml     &&
      docker-php-ext-install xmlrpc xmlwriter zip     && docker-php-ext-install mcrypt     &&
      apt-get install -yq git golang-go     && mkdir -p /opt/go     && export GOPATH=/opt/go     &&
      go get github.com/mailhog/mhsendmail     && apt-get auto-remove     && apt-get
      clean
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.7.2
    Name: env
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer     && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig     && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"     && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin
      --filename=composer --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php     &&
      composer global require "hirak/prestissimo:^0.3"     && chown -Rf www-data:www-data
      /composer     && mkdir /var/www/docroot     && chown -Rf www-data:www-data /var/www
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/conf.d/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod a+x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
