{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:8-alpine",
      "SourceCode": "FROM node:8-alpine",
      "Platform": "",
      "From": {
        "Image": "node:8-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache 'su-exec\u003e=0.2'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache \t\tbash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GHOST_CLI_VERSION",
              "Value": "1.9.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GHOST_INSTALL",
              "Value": "/var/lib/ghost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GHOST_CONTENT",
              "Value": "/var/lib/ghost/content"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GHOST_VERSION",
              "Value": "2.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g \"ghost-cli@$GHOST_CLI_VERSION\"; \tset -ex; \tmkdir -p \"$GHOST_INSTALL\"; \tchown node:node \"$GHOST_INSTALL\"; \t\tsu-exec node ghost install \"$GHOST_VERSION\" --db sqlite3 --no-prompt --no-stack --no-setup --dir \"$GHOST_INSTALL\"; \t\tcd \"$GHOST_INSTALL\"; \tsu-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath \"$GHOST_CONTENT/data/ghost.db\"; \tsu-exec node ghost config paths.contentPath \"$GHOST_CONTENT\"; \t\tsu-exec node ln -s config.production.json \"$GHOST_INSTALL/config.development.json\"; \treadlink -f \"$GHOST_INSTALL/config.development.json\"; \t\tmv \"$GHOST_CONTENT\" \"$GHOST_INSTALL/content.orig\"; \tmkdir -p \"$GHOST_CONTENT\"; \tchown node:node \"$GHOST_CONTENT\"; \tnpm cache clean --force; \trm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GHOST_INSTALL"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$GHOST_CONTENT"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "2368"
          ]
        },
        {
          "CmdLine": [
            "node",
            "current/index.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}