{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3-alpine3.6",
      "SourceCode": "FROM python:3-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "python:3-alpine3.6"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo -e '@edgunity http://nl.alpinelinux.org/alpine/edge/community\\n@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n@community http://dl-cdn.alpinelinux.org/alpine/edge/community'  \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache       build-base       openblas-dev       unzip       wget       cmake       libtbb@testing        libtbb-dev@testing         libjpeg        libjpeg-turbo-dev       libpng-dev       jasper-dev       tiff-dev       libwebp-dev       clang-dev       linux-headers       \u0026\u0026 pip install numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "/usr/bin/clang"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "/usr/bin/clang++"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_VERSION",
              "Value": "3.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt \u0026\u0026 cd /opt \u0026\u0026   wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \u0026\u0026   unzip ${OPENCV_VERSION}.zip \u0026\u0026   rm -rf ${OPENCV_VERSION}.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/opencv-${OPENCV_VERSION}/build \u0026\u0026   cd /opt/opencv-${OPENCV_VERSION}/build \u0026\u0026   cmake   -D CMAKE_BUILD_TYPE=RELEASE   -D CMAKE_INSTALL_PREFIX=/usr/local   -D WITH_FFMPEG=NO   -D WITH_IPP=NO   -D WITH_OPENEXR=NO   -D WITH_TBB=YES   -D BUILD_EXAMPLES=NO   -D BUILD_ANDROID_EXAMPLES=NO   -D INSTALL_PYTHON_EXAMPLES=NO   -D BUILD_DOCS=NO   -D BUILD_opencv_python2=NO   -D BUILD_opencv_python3=ON   -D PYTHON3_EXECUTABLE=/usr/local/bin/python   -D PYTHON3_INCLUDE_DIR=/usr/local/include/python3.6m/   -D PYTHON3_LIBRARY=/usr/local/lib/libpython3.so   -D PYTHON_LIBRARY=/usr/local/lib/libpython3.so   -D PYTHON3_PACKAGES_PATH=/usr/local/lib/python3.6/site-packages/   -D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/local/lib/python3.6/site-packages/numpy/core/include/   .. \u0026\u0026   make VERBOSE=1 \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   rm -rf /opt/opencv-${OPENCV_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}