{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim",
      "SourceCode": "FROM python:3.6-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 buildDeps=' \t\tunzip \t\tca-certificates \t\tdirmngr \t\twget \t\txz-utils \t\tgpg \t' \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FFMPEG_URL",
              "Value": "'https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            ": \t\u0026\u0026 mkdir -p /tmp/ffmpeg \t\u0026\u0026 cd /tmp/ffmpeg \t\u0026\u0026 wget -O ffmpeg.tar.xz \"$FFMPEG_URL\" \t\u0026\u0026 tar -xf ffmpeg.tar.xz -C . --strip-components 1 \t\u0026\u0026 cp ffmpeg ffmpeg-10bit ffprobe qt-faststart /usr/bin \t\u0026\u0026 cd .. \t\u0026\u0026 rm -fr /tmp/ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YOUTUBE_DL_WEBUI_SOURCE",
              "Value": "/usr/src/youtube_dl_webui"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$YOUTUBE_DL_WEBUI_SOURCE"
        },
        {
          "CmdLine": [
            ": \t\u0026\u0026 pip install --no-cache-dir youtube-dl flask \t\u0026\u0026 wget -O youtube-dl-webui.zip https://github.com/d0u9/youtube-dl-webui/archive/dev.zip \t\u0026\u0026 unzip youtube-dl-webui.zip \t\u0026\u0026 cd youtube-dl-webui*/ \t\u0026\u0026 cp -r ./* $YOUTUBE_DL_WEBUI_SOURCE/ \t\u0026\u0026 ln -s $YOUTUBE_DL_WEBUI_SOURCE/example_config.json /etc/youtube-dl-webui.json \t\u0026\u0026 cd .. \u0026\u0026 rm -rf youtube-dl-webui* \t\u0026\u0026 apt-get purge -y --auto-remove wget unzip dirmngr \t\u0026\u0026 rm -fr /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default_config.json",
            "/config.json"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python",
            "-m",
            "youtube_dl_webui"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}