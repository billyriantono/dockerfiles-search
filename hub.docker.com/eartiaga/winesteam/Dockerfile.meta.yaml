MetaArgs: null
Stages:
- BaseName: debian:sid
  Commands:
  - Maintainer: Ernest Artiaga <ernest.artiaga@eartiam.net>
    Name: maintainer
  - Key: wine_tag
    Name: arg
    Value: null
  - Key: gecko_tag
    Name: arg
    Value: null
  - Key: mono_tag
    Name: arg
    Value: null
  - Key: steam_user
    Name: arg
    Value: null
  - Key: steam_uid
    Name: arg
    Value: null
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo "deb http://deb.debian.org/debian sid contrib non-free"       >> /etc/apt/sources.list
      &&     apt-get update -qy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy apt zenity curl gnupg net-tools attr xattr
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy dnsmasq
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dnsmasq.conf
    - /etc/dnsmasq.conf
  - CmdLine:
    - apt-get install -qy       libgl1-nvidia-glvnd-glx       nvidia-cg-dev       nvidia-driver       nvidia-opencl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get install -qy sudo &&     echo "$steam_user ALL = NOPASSWD: ALL" > /etc/sudoers.d/winesteam
      &&     chmod 440 /etc/sudoers.d/winesteam'
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: '"$steam_user"'
    Name: env
  - Env:
    - Key: UID
      Value: '"$steam_uid"'
    Name: env
  - Env:
    - Key: HOME
      Value: '"/home/$steam_user"'
    Name: env
  - CmdLine:
    - adduser --disabled-password --gecos 'Steam User'       --home "$HOME" --uid
      "$UID" "$USER" &&     adduser "$USER" video &&     adduser "$USER" audio &&     mkdir
      -p "$HOME/data" &&     chown "${USER}.${USER}" "$HOME/data"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy git build-essential autoconf-archive
    Name: run
    PrependShell: true
  - Env:
    - Key: WINEHQ
      Value: /opt/src/winehq
    Name: env
  - CmdLine:
    - mkdir -p "$WINEHQ" && cd "$WINEHQ" &&     git clone git://source.winehq.org/git/wine.git
      &&     cd "$WINEHQ/wine" &&     git checkout "$wine_tag"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy flex bison
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy       gettext       gstreamer1.0-plugins-base       libasound2-dev       libattr1-dev       libcdio-dev       libcups2-dev       libdbus-1-dev       libgegl-dev       libgettextpo-dev       libglu1-mesa-dev       libgnutls28-dev       libgphoto2-dev       libgsm1-dev       libgss-dev       libgstreamer-plugins-base1.0-dev       libgstreamer1.0-dev       libkrb5-dev       libjpeg-dev       liblcms2-dev       libldap2-dev       libmpg123-dev       libncurses-dev       libopenal-dev       libosmesa-dev       libpcap-dev       libpng-dev       libpulse-dev       libquicktime-dev       libsane-dev       libsdl2-dev       libtiff-dev       libudev-dev       libv4l-dev       libvkd3d-dev       libvulkan-dev       libx11-dev       libxcb-xinput-dev       libxcomposite-dev       libxcursor-dev       libxfixes-dev       libxft-dev       libxi-dev       libxinerama-dev       libxml2-dev       libxrandr-dev       libxrender-dev       libxslt1-dev       libxxf86dga-dev       libxxf86vm-dev       oss4-dev       zlib1g-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: WINEHQ64
      Value: '"$WINEHQ/wine/_build64"'
    Name: env
  - Env:
    - Key: WINE_CONFIGURE_OPTIONS
      Value: '"--without-capi --without-hal"'
    Name: env
  - CmdLine:
    - mkdir "$WINEHQ64" && cd "$WINEHQ64" &&     "$WINEHQ/wine/configure" $WINE_CONFIGURE_OPTIONS
      --enable-win64 &&     make
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386 &&     apt-get update -qy &&     apt-get install
      -qy multiarch-support
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy     gcc-multilib
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -o Dpkg::Options::="--force-overwrite" install -qy       gettext:i386       gir1.2-ibus-1.0:i386       gstreamer1.0-plugins-base:i386       libasound2-dev:i386       libattr1-dev:i386       libcdio-dev:i386       libcups2-dev:i386       libdbus-1-dev:i386       libgettextpo-dev:i386       libglu1-mesa-dev:i386       libgnutls28-dev:i386       libgphoto2-dev:i386       libgsm1-dev:i386       libgstreamer-plugins-base1.0-dev:i386       libgstreamer1.0-dev:i386       libkrb5-dev:i386       libjpeg-dev:i386       liblcms2-dev:i386       libldap2-dev:i386       libmpg123-dev:i386       libncurses-dev:i386       libopenal-dev:i386       libosmesa-dev:i386       libpcap-dev:i386       libpng-dev:i386       libpulse-dev:i386       libquicktime-dev:i386       libsane-dev:i386       libsdl2-dev:i386       libtiff-dev:i386       libudev-dev:i386       libv4l-dev:i386       libvkd3d-dev:i386       libvulkan-dev:i386       libx11-dev:i386       libxcb-xinput-dev:i386       libxcomposite-dev:i386       libxcursor-dev:i386       libxfixes-dev:i386       libxft-dev:i386       libxi-dev:i386       libxinerama-dev:i386       libxml2-dev:i386       libxrandr-dev:i386       libxrender-dev:i386       libxslt1-dev:i386       libxxf86dga-dev:i386       libxxf86vm-dev:i386       zlib1g-dev:i386
    Name: run
    PrependShell: true
  - Env:
    - Key: WINEHQ32
      Value: '"$WINEHQ/wine/_build32"'
    Name: env
  - CmdLine:
    - mkdir "$WINEHQ32" && cd "$WINEHQ32" &&     "$WINEHQ/wine/configure" $WINE_CONFIGURE_OPTIONS
      &&     make
    Name: run
    PrependShell: true
  - Env:
    - Key: WINEHQ_COMBO
      Value: '"$WINEHQ/wine/_build"'
    Name: env
  - CmdLine:
    - mkdir "$WINEHQ_COMBO" && cd "$WINEHQ_COMBO" &&     "$WINEHQ/wine/configure"
      $WINE_CONFIGURE_OPTIONS       --with-wine64="$WINEHQ64" --with-wine-tools="$WINEHQ32"
      &&     make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd "$WINEHQ_COMBO" && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd "$WINEHQ64" && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qy       cabextract       lxterminal       mscompress
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "/usr/local/bin" && cd "/usr/local/bin" &&     curl -O https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
      &&     chmod a+x winetricks
    Name: run
    PrependShell: true
  - Env:
    - Key: GECKO_VERSION
      Value: '"$gecko_tag"'
    Name: env
  - CmdLine:
    - mkdir -p "/usr/local/share/wine/gecko" && cd "/usr/local/share/wine/gecko" &&     curl
      -O http://dl.winehq.org/wine/wine-gecko/$GECKO_VERSION/wine_gecko-$GECKO_VERSION-x86.msi
      &&     curl -O http://dl.winehq.org/wine/wine-gecko/$GECKO_VERSION/wine_gecko-$GECKO_VERSION-x86_64.msi
    Name: run
    PrependShell: true
  - Env:
    - Key: MONO_VERSION
      Value: '"$mono_tag"'
    Name: env
  - CmdLine:
    - mkdir -p "/usr/local/share/wine/mono" && cd "/usr/local/share/wine/mono" &&     curl
      -O http://dl.winehq.org/wine/wine-mono/$MONO_VERSION/wine_mono-$MONO_VERSION.msi
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "/usr/local/share/wine/steam" && cd "/usr/local/share/wine/steam" &&     curl
      -O http://cdn.steampowered.com/download/SteamInstall.msi
    Name: run
    PrependShell: true
  - Env:
    - Key: WINEPREFIX32
      Value: '"$HOME/wn32"'
    Name: env
  - CmdLine:
    - mkdir "$WINEPREFIX32" && chown "${USER}.${USER}" "$WINEPREFIX32" &&     su "$USER"
      -c "WINEARCH=win32 WINEPREFIX=$WINEPREFIX32 winecfg" &&     su "$USER" -c "WINEPREFIX=$WINEPREFIX32
      winetricks corefonts"
    Name: run
    PrependShell: true
  - Env:
    - Key: WINEPREFIX64
      Value: '"$HOME/wn64"'
    Name: env
  - CmdLine:
    - mkdir "$WINEPREFIX64" && chown "${USER}.${USER}" "$WINEPREFIX64" &&     su "$USER"
      -c "WINEPREFIX=$WINEPREFIX64 winecfg" &&     su "$USER" -c "WINEPREFIX=$WINEPREFIX64
      winetricks corefonts"
    Name: run
    PrependShell: true
  - CmdLine:
    - su "$USER" -c "WINEPREFIX=$WINEPREFIX32 wine reg.exe ADD \"HKEY_CURRENT_USER\Software\Wine\AppDefaults\Steam.exe\"
      /v \"Version\" /t \"REG_SZ\" /d \"winxp\" /f" &&     su "$USER" -c "WINEPREFIX=$WINEPREFIX32
      wine reg.exe ADD \"HKEY_CURRENT_USER\Software\Wine\AppDefaults\steamwebhelper.exe\"
      /v \"Version\" /t \"REG_SZ\" /d \"winxp\" /f"
    Name: run
    PrependShell: true
  - CmdLine:
    - su "$USER" -c "WINEPREFIX=$WINEPREFIX64 wine reg.exe ADD \"HKEY_CURRENT_USER\Software\Wine\AppDefaults\Steam.exe\"
      /v \"Version\" /t \"REG_SZ\" /d \"winxp64\" /f" &&     su "$USER" -c "WINEPREFIX=$WINEPREFIX64
      wine reg.exe ADD \"HKEY_CURRENT_USER\Software\Wine\AppDefaults\steamwebhelper.exe\"
      /v \"Version\" /t \"REG_SZ\" /d \"winxp64\" /f"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./launch
    - /launch
  - Name: user
    User: $USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - /bin/bash
    - /launch
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:sid
  Name: ""
  Platform: ""
  SourceCode: FROM debian:sid
