MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install curl wget -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq &&   apt-get install -qqy --no-install-recommends apt-transport-https
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      7D2BAF1CF37B13E2069D6956105BD0E739499BDB
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.rvm.io | bash -s stable --ruby=2.3.3
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -l -c "ruby -v"
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -l -c "gem install bundler --no-ri --no-rdoc"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq &&   apt-get install -qqy --no-install-recommends     lsb-release     python-all     python-dev     python-pip     python-setuptools     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/microsoft.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y powershell
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod/
      xenial main" > azure.list &&     cp ./azure.list /etc/apt/sources.list.d/ &&     apt-key
      adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF &&     apt-get
      update &&     apt install -y azcopy
    Name: run
    PrependShell: true
  - CmdLine:
    - version_number=$(curl 'https://github.com/cloudfoundry/bosh-cli/releases/latest'
      2>&1 | egrep -o '([0-9]+\.[0-9]+\.[0-9]+)') &&   curl "https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-${version_number}-linux-amd64"
      -o /usr/local/bin/bosh &&   chmod 755 /usr/local/bin/bosh
    Name: run
    PrependShell: true
  - CmdLine:
    - AZ_REPO=$(lsb_release -cs) &&     echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/
      $AZ_REPO main" | tee /etc/apt/sources.list.d/azure-cli.list &&     curl -L https://packages.microsoft.com/keys/microsoft.asc
      | apt-key add - &&     apt-get update && apt-get install azure-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O
      /usr/local/bin/jq && chmod +x /usr/local/bin/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -l -c "gem install azure_mgmt_resources"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.9"
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: d70eadefce8e160638a9a6db97f7192d8463069ab33138893ad3bf31b0650a79
    Name: env
  - CmdLine:
    - curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz     && echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz"
      | sha256sum -c -     && tar -C /usr/local -xzf golang.tar.gz     && rm golang.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 755 "$GOPATH/bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /usr/local/rvm/scripts/rvm" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install git -y
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/pivotal-cf-experimental/azstemcell
    Name: run
    PrependShell: true
  - CmdLine:
    - cd azstemcell && go build && mv azstemcell /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install pigz -y
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
