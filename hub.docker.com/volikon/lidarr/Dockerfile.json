{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/mono",
      "SourceCode": "FROM lsiobase/mono",
      "Platform": "",
      "From": {
        "Image": "lsiobase/mono"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "\"noninteractive\""
        },
        {
          "Env": [
            {
              "Key": "XDG_CONFIG_HOME",
              "Value": "\"/config/xdg\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_APTLIST",
              "Value": "\"wget build-essential\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASE_APTLIST",
              "Value": "\"libssl-dev nodejs\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026   apt-get install $BUILD_APTLIST $BASE_APTLIST -qy \u0026\u0026   npm install -g npm@latest \u0026\u0026   export LIDARR_BRANCH=develop \u0026\u0026   export LIDARR_VERSION=\"$(curl https://ci.appveyor.com/api/projects/lidarr/lidarr/branch/$LIDARR_BRANCH | sed -n 's/.*\"version\":\"\\(.*\\)\",/\\1/p' | cut -d\\\" -f1)\" \u0026\u0026   export LIDARR_JOB_ID=\"$(curl https://ci.appveyor.com/api/projects/lidarr/lidarr/branch/$LIDARR_BRANCH | sed -n 's/.*\"jobId\":\"\\(.*\\)\",/\\1/p' | cut -d\\\" -f1)\" \u0026\u0026   curl -o /tmp/lidarr.tar.gz -L https://ci.appveyor.com/api/buildjobs/$LIDARR_JOB_ID/artifacts/Lidarr.$LIDARR_BRANCH.$LIDARR_VERSION.linux.tar.gz \u0026\u0026   mkdir -p /opt/lidarr \u0026\u0026   tar xzvf /tmp/lidarr.tar.gz -C /opt/lidarr --strip-components=1 \u0026\u0026   cd /opt/lidarr \u0026\u0026 npm install \u0026\u0026 npm run \u0026\u0026   apt-get purge -y --auto-remove $BUILD_APTLIST \u0026\u0026   apt-get clean \u0026\u0026   rm -rf \t/tmp/* \t/var/lib/apt/lists/* \t/var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8686"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads",
            "/music"
          ]
        }
      ]
    }
  ]
}