{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Zhongdi Wang \u003cwangmuy@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"dash dash/sh boolean false\" | debconf-set-selections \u0026\u0026     dpkg-reconfigure -p critical dash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sources.ustc.list",
            "/etc/apt/sources.list"
          ]
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget \u0026\u0026     wget http://mirrors.ustc.edu.cn/ubuntu/pool/main/m/make-dfsg/make_3.81-8.2ubuntu3_amd64.deb -O /tmp/make.deb \u0026\u0026     dpkg -i /tmp/make.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git gnupg flex bison gperf build-essential sudo     zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386     libncurses5-dev lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache     libgl1-mesa-dev libxml2-utils xsltproc unzip python     vim subversion dos2unix bc expect lzop \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     add-apt-repository -y ppa:openjdk-r/ppa \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --allow-unauthenticated openjdk-7-jdk openjdk-8-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gitconfig",
            "/root/.gitconfig"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ssh_config",
            "/root/.ssh/config"
          ]
        },
        {
          "Env": [
            {
              "Key": "USE_CCACHE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CCACHE_DIR",
              "Value": "/tmp/ccache"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/scripts"
          ]
        },
        {
          "CmdLine": [
            "/scripts/docker_entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}