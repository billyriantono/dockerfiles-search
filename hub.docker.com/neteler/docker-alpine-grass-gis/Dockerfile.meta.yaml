MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Labels:
    - Key: authors
      Value: '"Pietro Zambelli,Markus Neteler"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"peter.zamb@gmail.com,neteler@osgeo.org"'
    Name: label
  - Key: PYTHON_VERSION
    Name: arg
    Value: "3"
  - Env:
    - Key: GRASS_CONFIG
      Value: '"      --enable-largefile       --with-cxx       --with-proj --with-proj-share=/usr/share/proj       --with-gdal       --with-pdal       --with-python       --with-geos       --with-sqlite       --with-bzlib       --with-zstd       --with-cairo
        --with-cairo-ldflags=-lfontconfig       --with-fftw       --with-postgres
        --with-postgres-includes=''/usr/include/postgresql''       --without-freetype       --without-openmp       --without-opengl       --without-nls       --without-mysql       --without-odbc       --without-openmp       --without-ffmpeg       "'
    Name: env
  - Env:
    - Key: MYCFLAGS
      Value: '"-O2 -std=gnu99 -m64"'
    - Key: MYLDFLAGS
      Value: '"-s -Wl,--no-undefined -lblas"'
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/local/lib"'
    - Key: LDFLAGS
      Value: '"$MYLDFLAGS"'
    - Key: CFLAGS
      Value: '"$MYCFLAGS"'
    - Key: CXXFLAGS
      Value: '"$MYCXXFLAGS"'
    - Key: NUMTHREADS
      Value: "2"
    Name: env
  - Env:
    - Key: PACKAGES
      Value: '"      attr       bash       bison       bzip2       cairo       fftw       flex       freetype       gdal       gettext       geos       gnutls       laszip       libbz2       libjpeg-turbo       libpng       musl       musl-utils       ncurses       openjpeg       openblas       pdal       py3-numpy       py3-pillow       py3-six       postgresql       proj-datumgrid       proj-util       sqlite       sqlite-libs       subversion       tiff       zstd       zstd-libs     "'
    - Key: GRASS_BUILD_PACKAGES
      Value: '"      build-base       bzip2-dev       cairo-dev       fftw-dev       freetype-dev       g++       gcc       gdal-dev       geos-dev       gnutls-dev       laszip-dev       libc6-compat       libjpeg-turbo-dev       libpng-dev       make       openjpeg-dev       openblas-dev       pdal-dev       postgresql-dev       proj-dev       python3-dev       py3-numpy-dev       sqlite-dev       tar       tiff-dev       unzip       vim       wget       zip       zstd-dev     "'
    Name: env
  - Name: workdir
    Path: /src
  - Env:
    - Key: PYTHONBIN
      Value: python$PYTHON_VERSION
    Name: env
  - CmdLine:
    - echo "Install Python";    apk add --no-cache $PYTHONBIN &&     $PYTHONBIN -m
      ensurepip &&     rm -r /usr/lib/python*/ensurepip &&     pip$PYTHON_VERSION
      install --upgrade pip setuptools &&     if [ ! -e /usr/bin/pip ]; then ln -s
      pip$PYTHON_VERSION /usr/bin/pip ; fi &&     if [[ ! -e /usr/bin/python ]]; then
      ln -sf /usr/bin/$PYTHONBIN /usr/bin/python; fi &&     rm -r /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install main packages";    apk update;     apk add --no-cache             --repository
      http://dl-cdn.alpinelinux.org/alpine/edge/testing             --repository http://dl-cdn.alpinelinux.org/alpine/edge/main             $PACKAGES;     apk
      add --no-cache             --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing             --repository
      http://dl-cdn.alpinelinux.org/alpine/edge/main             --virtual .build-deps
      $GRASS_BUILD_PACKAGES;     echo "Install GRASS GIS";    echo "  => Downloading
      grass"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /src/grass_build/
  - CmdLine:
    - echo "  => Configure and compile grass";    cd /src/grass_build &&     /src/grass_build/configure
      $GRASS_CONFIG &&     make -j $NUMTHREADS &&     make install &&     ldconfig
      /etc/ld.so.conf.d;     ln -s `find /usr/local/bin -name "grass*"` /usr/local/bin/grass;     rm
      -rf /src/*;     apk del --no-cache --purge .build-deps;     rm -rf /var/cache/apk/*;     rm
      -rf /root/.cache;     rm -rf /usr/local/grass79/demolocation;     rm -rf /usr/local/grass79/fonts;     rm
      -rf /usr/local/grass79/gui;     rm -rf /usr/local/grass79/share;
    Name: run
    PrependShell: true
  - Env:
    - Key: INTEL
      Value: '""'
    - Key: MYCFLAGS
      Value: '""'
    - Key: MYLDFLAGS
      Value: '""'
    - Key: MYCXXFLAGS
      Value: '""'
    - Key: LD_LIBRARY_PATH
      Value: '""'
    - Key: LDFLAGS
      Value: '""'
    - Key: CFLAGS
      Value: '""'
    - Key: CXXFLAGS
      Value: '""'
    - Key: SHELL
      Value: '"/bin/bash"'
    Name: env
  - CmdLine:
    - pip install grass-session
    Name: run
    PrependShell: true
  - Env:
    - Key: GRASSBIN
      Value: '"/usr/local/bin/grass"'
    Name: env
  - Name: workdir
    Path: /tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/testdata/simple.laz
    - .
  - Name: workdir
    Path: /scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/testdata/test_grass_session.py
    - .
  - Name: workdir
    Path: /grassdb
  - Name: volume
    Volumes:
    - /grassdb
  - Env:
    - Key: GRASS_SKIP_MAPSET_OWNER_CHECK
      Value: "1"
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - grass --tmp-location EPSG:4326 --exec g.version -rge &&     pdal --version &&     python3
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - '[$GRASSBIN, "--version"]'
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
