MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04
  Commands:
  - Maintainer: Craig Citro <craigcitro@google.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         sklearn         pandas         Pillow         &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8"
      | tee /etc/apt/sources.list.d/bazel.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:openjdk-r/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install bazel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade bazel
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get clean && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && git clone --verbose https://github.com/timediv/tensorflow-with-kenlm.git
      tensorflow
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - chmod +x /root/tensorflow/configure
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /root/tensorflow && \ttensorflow/tools/ci_build/builds/configured GPU \tbazel
      build -c opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \t\ttensorflow/tools/pip_package:build_pip_package
      && \tbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install /tmp/tensorflow_pkg/tensorflow-*.whl && \trm -rf
      /tmp/pip &&     rm -rf /root/.cache"
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    Name: env
  - Name: expose
    Ports:
    - "6006"
  - CmdLine:
    - apt-get update && apt-get install -y   libhdf5-dev   python-h5py   python-yaml
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install \t\tnumpy>=1.8.0 \t\tnumexpr>=2.5.2 \t\tsix>=1.9.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install tables
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && git clone https://github.com/fchollet/keras.git && cd keras &&   python
      setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/keras
  From:
    Image: nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04
