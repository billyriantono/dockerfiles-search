{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Fletcher Nichol \u003cfnichol@nichol.ca\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual .build-deps wget   \u0026\u0026 apk add --no-cache ca-certificates     \u0026\u0026 cd /tmp   \u0026\u0026 wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip   \u0026\u0026 unzip ngrok-stable-linux-amd64.zip   \u0026\u0026 install -v -D ngrok /bin/ngrok   \u0026\u0026 rm -f ngrok-stable-linux-amd64.zip ngrok     \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ngrok.yml",
            "$HOME/ngrok.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ngrok_discover",
            "/bin/ngrok_discover"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "4040"
          ]
        },
        {
          "CmdLine": [
            "/bin/ngrok_discover"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}