{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SS_VER",
              "Value": "3.3.3"
            },
            {
              "Key": "KCP_VER",
              "Value": "20191127"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "SS_URL",
          "Name": "arg",
          "Value": "https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$SS_VER/shadowsocks-libev-$SS_VER.tar.gz"
        },
        {
          "Key": "KCP_URL",
          "Name": "arg",
          "Value": "https://github.com/xtaci/kcptun/releases/download/v$KCP_VER/kcptun-linux-amd64-$KCP_VER.tar.gz"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 mkdir -p /mktmp     \u0026\u0026 cd /mktmp     \u0026\u0026 apk add --no-cache --virtual .build-deps                                     autoconf                                     build-base                                     wget                                     libev-dev                                     libtool                                     linux-headers                                     udns-dev                                     libsodium-dev                                     mbedtls-dev                                     pcre-dev                                     tar                                     tzdata                                     udns-dev                                     c-ares-dev     \u0026\u0026 cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime     \u0026\u0026 wget -q --no-check-certificate $KCP_URL -O - | tar xz server_linux_amd64     \u0026\u0026 mv server_linux_amd64 /usr/bin/     \u0026\u0026 wget -q --no-check-certificate $SS_URL -O - | tar xz --strip 1     \u0026\u0026 ./configure --prefix=/usr --disable-documentation     \u0026\u0026 make -j4     \u0026\u0026 cp src/ss-server /usr/bin/     \u0026\u0026 cd ..     \u0026\u0026 runDeps=\"$(scanelf --needed --nobanner /usr/bin/ss-*             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | xargs -r apk info --installed             | sort -u)\"     \u0026\u0026 apk add --no-cache --virtual .run-deps $runDeps     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /mktmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SS_PORT",
              "Value": "8388"
            },
            {
              "Key": "SS_PASSWORD",
              "Value": "123456789"
            },
            {
              "Key": "SS_METHOD",
              "Value": "aes-256-cfb"
            },
            {
              "Key": "SS_TIMEOUT",
              "Value": "300"
            },
            {
              "Key": "SS_USER",
              "Value": "nobody"
            },
            {
              "Key": "SS_DNS1",
              "Value": "8.8.8.8"
            },
            {
              "Key": "SS_DNS2",
              "Value": "8.8.4.4"
            },
            {
              "Key": "SS_FASTOPEN",
              "Value": "--fast-open"
            },
            {
              "Key": "SS_UDP",
              "Value": "-u"
            },
            {
              "Key": "KCP_PORT",
              "Value": "9443"
            },
            {
              "Key": "KCP_MTU",
              "Value": "1400"
            },
            {
              "Key": "KCP_MODE",
              "Value": "fast"
            },
            {
              "Key": "KCP_ENCRYPT",
              "Value": "none"
            },
            {
              "Key": "KCP_PASSWORD",
              "Value": "none-encrypt"
            },
            {
              "Key": "KCP_SNDWND",
              "Value": "1024"
            },
            {
              "Key": "KCP_RCVWND",
              "Value": "512"
            },
            {
              "Key": "KCP_DATASHARD",
              "Value": "10"
            },
            {
              "Key": "KCP_PARITYSHARD",
              "Value": "0"
            },
            {
              "Key": "KCP_SOCKBUF",
              "Value": "16777216"
            },
            {
              "Key": "KCP_NOCOMP",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$KCP_PORT/udp",
            "$SS_PORT/tcp"
          ]
        },
        {
          "CmdLine": [
            "ss-server     -p $SS_PORT     -k $SS_PASSWORD     -m $SS_METHOD     -t $SS_TIMEOUT     -a $SS_USER     -d $SS_DNS1     -d $SS_DNS2     -f /tmp/ss.pid     $SS_FASTOPEN     $SS_UDP     \u0026\u0026 server_linux_amd64     -l \":$KCP_PORT\"     -t \"127.0.0.1:$SS_PORT\"     --mtu $KCP_MTU     --mode $KCP_MODE     --crypt $KCP_ENCRYPT     --key $KCP_PASSWORD     --sndwnd $KCP_SNDWND     --rcvwnd $KCP_RCVWND     --datashard $KCP_DATASHARD     --parityshard $KCP_PARITYSHARD     --sockbuf $KCP_SOCKBUF     $KCP_NOCOMP"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}