MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Maintainer: Roman Suvorov windj007@gmail.com
    Name: maintainer
  - CmdLine:
    - apt-get clean && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yqq curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yqq build-essential libbz2-dev libssl-dev libreadline-dev                          libsqlite3-dev
      tk-dev libpng-dev libfreetype6-dev git                          cmake wget gfortran
      libatlas-base-dev libatlas-dev                          libatlas3-base libhdf5-dev
      libxml2-dev libxslt-dev                          zlib1g-dev pkg-config graphviz
      liblapacke-dev                          locales nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
      | bash
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: /root/.pyenv
    Name: env
  - Env:
    - Key: PATH
      Value: /root/.pyenv/shims:/root/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - pyenv install 3.6.7
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global 3.6.7
    Name: run
    PrependShell: true
  - CmdLine:
    - pip  install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install -U cython
    Name: run
    PrependShell: true
  - CmdLine:
    - 'python -m pip install -U numpy # thanks to libatlas-base-dev (base! not libatlas-dev),
      it will link to atlas'
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install scipy pandas nltk gensim sklearn tensorflow-gpu         annoy
      keras ujson line_profiler tables sharedmem matplotlib torch torchvision
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/pybind/pybind11.git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install nmslib
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install -U         h5py lxml git+https://github.com/openai/gym
      sacred git+https://github.com/marcotcr/lime         plotly pprofile mlxtend
      fitter mpld3         git+https://github.com/facebookresearch/fastText.git         imbalanced-learn
      forestci category_encoders hdbscan seaborn networkx joblib eli5         pydot
      graphviz dask[complete] opencv-python keras-vis pandas-profiling         git+https://github.com/windj007/libact/#egg=libact         git+https://github.com/IINemo/active_learning_toolbox         scikit-image
      pymorphy2[fast] pymorphy2-dicts-ru tqdm tensorboardX patool         skorch fastcluster         xgboost
      imgaug grpcio git+https://github.com/IINemo/isanlp.git
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install -U pymystem3 # && python -c "import pymystem3 ; pymystem3.Mystem()"'
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install -U jupyter jupyterlab         jupyter_nbextensions_configurator
      jupyter_contrib_nbextensions==0.2.4
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv rehash
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter contrib nbextension install --system &&     jupyter nbextensions_configurator
      enable --system &&     jupyter nbextension enable --py --sys-prefix widgetsnbextension
      &&     jupyter labextension install @jupyterlab/toc &&     jupyter labextension
      install @jupyter-widgets/jupyterlab-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/Microsoft/LightGBM /tmp/lgbm &&     cd
      /tmp/lgbm &&     mkdir build &&     cd build &&     cmake .. &&     make &&     cd
      ../python-package &&     python setup.py install &&     cd /tmp &&     rm -r
      /tmp/lgbm
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://code.googlesource.com/re2 /tmp/re2 &&     cd /tmp/re2 &&     make
      CFLAGS='-fPIC -c -Wall -Wno-sign-compare -O3 -g -I.' &&     make test &&     make
      install &&     make testinstall &&     ldconfig &&     pip install -U fb-re2
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen &&         dpkg-reconfigure
      --frontend=noninteractive locales
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - Name: volume
    Volumes:
    - /notebook
    - /jupyter/certs
  - Name: workdir
    Path: /notebook
  - Chown: ""
    Name: add
    SourcesAndDest:
    - test_scripts
    - /test_scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - jupyter
    - /jupyter
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hashpwd.py
    - /hashpwd.py
  - Env:
    - Key: JUPYTER_CONFIG_DIR
      Value: '"/jupyter"'
    Name: env
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - notebook
    - --ip=0.0.0.0
    - --allow-root
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
