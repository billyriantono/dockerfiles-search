{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Maintainer": "Orion Engleton \u003corion.engleton@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get install -y curl wget git make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb  \u0026\u0026 dpkg -i erlang-solutions_1.0_all.deb  \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y erlang erlang-ssl erlang-inets \u0026\u0026 rm erlang-solutions_1.0_all.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/rebar/rebar.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd rebar \u0026\u0026 ./bootstrap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/elixir-lang/elixir.git \u0026\u0026 cd elixir \u0026\u0026 git checkout v1.1 \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/elixir/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHOENIX_VERSION",
              "Value": "1.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/phoenixframework/phoenix.git  \u0026\u0026 cd phoenix \u0026\u0026 git checkout v$PHOENIX_VERSION  \u0026\u0026 mix local.hex --force \u0026\u0026 mix local.rebar --force  \u0026\u0026 mix do deps.get, compile  \u0026\u0026 mix archive.install https://github.com/phoenixframework/phoenix/releases/download/v$PHOENIX_VERSION/phoenix_new-$PHOENIX_VERSION.ez --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D 114F43EE0176B71C7BC219DD50A3051F888C628D"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "0.12.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_VERSION",
              "Value": "2.12.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\"  \u0026\u0026 curl -SLO \"http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"  \u0026\u0026 gpg --verify SHASUMS256.txt.asc  \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c -  \u0026\u0026 tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1  \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc  \u0026\u0026 npm install -g npm@\"$NPM_VERSION\"  \u0026\u0026 npm cache clear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/application"
        }
      ]
    }
  ]
}