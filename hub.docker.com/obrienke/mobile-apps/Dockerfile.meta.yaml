MetaArgs: null
Stages:
- BaseName: buildpack-deps:disco
  Commands:
  - CmdLine:
    - yes | unminimize     && apt-get install -yq         asciidoctor         bash-completion         build-essential         htop         jq         less         locales         man-db         nano         software-properties-common         sudo         vim         multitail     &&
      locale-gen en_US.UTF-8     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -l -u 33333 -G sudo -md /home/gitpod -s /bin/bash -p gitpod gitpod     &&
      sed -i.bkp -e 's/%sudo\s\+ALL=(ALL\(:ALL\)\?)\s\+ALL/%sudo ALL=NOPASSWD:ALL/g'
      /etc/sudoers
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/gitpod
    Name: env
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - '{ echo && echo "PS1=''\[\e]0;\u \w\a\]\[\033[01;32m\]\u\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\]
      \\\$ ''" ; } >> .bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -     &&
      apt-add-repository -yu "deb http://apt.llvm.org/disco/ llvm-toolchain-disco
      main"     && apt-get install -yq         clang-format-10         clang-tidy-10         clang-tools-10         clangd-10         gdb         lld-10     &&
      ln -s /usr/bin/clangd-10 /usr/bin/clangd     && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq         apache2         nginx         nginx-extras     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*     && mkdir /var/run/apache2     &&
      mkdir /var/lock/apache2     && mkdir /var/run/nginx     && ln -s /etc/apache2/mods-available/rewrite.load
      /etc/apache2/mods-enabled/rewrite.load     && chown -R gitpod:gitpod /etc/apache2
      /var/run/apache2 /var/lock/apache2 /var/log/apache2     && chown -R gitpod:gitpod
      /etc/nginx /var/run/nginx /var/lib/nginx/ /var/log/nginx/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2/
    - /etc/apache2/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx
    - /etc/nginx/
  - Env:
    - Key: APACHE_DOCROOT_IN_REPO
      Value: '"public"'
    Name: env
  - Env:
    - Key: NGINX_DOCROOT_IN_REPO
      Value: '"public"'
    Name: env
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq         composer         php         php-all-dev         php-ctype         php-curl         php-date         php-gd         php-gettext         php-intl         php-json         php-mbstring         php-mysql         php-net-ftp         php-pgsql         php-sqlite3         php-tokenizer         php-xml         php-zip     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
    Name: run
    PrependShell: true
  - Name: user
    User: gitpod
  - CmdLine:
    - 'sudo echo "Running ''sudo'' for Gitpod: success"'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/.cache && sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin/"'
    Name: env
  - Env:
    - Key: MANPATH
      Value: '"$MANPATH:/home/linuxbrew/.linuxbrew/share/man"'
    Name: env
  - Env:
    - Key: INFOPATH
      Value: '"$INFOPATH:/home/linuxbrew/.linuxbrew/share/info"'
    Name: env
  - CmdLine:
    - sudo apt-get remove -y cmake && brew install cmake
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: "1.12"
    - Key: GOPATH
      Value: $HOME/go-packages
    - Key: GOROOT
      Value: $HOME/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOROOT/bin:$GOPATH/bin:$PATH
    Name: env
  - CmdLine:
    - curl -fsSL https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz
      | tar -xzv     && go get -u -v     github.com/mdempsky/gocode     github.com/uudashr/gopkgs/cmd/gopkgs     github.com/ramya-rao-a/go-outline     github.com/acroca/go-symbols     golang.org/x/tools/cmd/guru     golang.org/x/tools/cmd/gorename     github.com/fatih/gomodifytags     github.com/haya14busa/goplay/cmd/goplay     github.com/josharian/impl     github.com/tylerb/gotype-live     github.com/rogpeppe/godef     github.com/zmb3/gogetdoc     golang.org/x/tools/cmd/goimports     github.com/sqs/goreturns     winterdrache.de/goformat/goformat     golang.org/x/lint/golint     github.com/cweill/gotests/...     github.com/alecthomas/gometalinter     honnef.co/go/tools/...     github.com/golangci/golangci-lint/cmd/golangci-lint     github.com/mgechev/revive     github.com/sourcegraph/go-langserver     golang.org/x/tools/cmd/gopls     github.com/go-delve/delve/cmd/dlv     github.com/davidrjenni/reftools/cmd/fillstruct     github.com/godoctor/godoctor
      &&     go get -u -v -d github.com/stamblerre/gocode &&     go build -o $GOPATH/bin/gocode-gomod
      github.com/stamblerre/gocode &&     rm -rf $GOPATH/src &&     rm -rf $GOPATH/pkg
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /workspace/go
    - Key: PATH
      Value: /workspace/go/bin:$PATH
    Name: env
  - CmdLine:
    - curl -s "https://get.sdkman.io" | bash  && bash -c ". /home/gitpod/.sdkman/bin/sdkman-init.sh              &&
      sdk install java 8.0.202-zulufx              && sdk install java 11.0.2-zulufx              &&
      sdk default java 8.0.202-zulufx              && sdk install gradle              &&
      sdk install maven              && mkdir /home/gitpod/.m2              && printf
      '<settings>\n  <localRepository>/workspace/m2-repository/</localRepository>\n</settings>\n'
      > /home/gitpod/.m2/settings.xml              && echo 'export SDKMAN_DIR=\"/home/gitpod/.sdkman\"'
      >> /home/gitpod/.profile              && echo '[[ -s \"/home/gitpod/.sdkman/bin/sdkman-init.sh\"
      ]] && source \"/home/gitpod/.sdkman/bin/sdkman-init.sh\"' >> /home/gitpod/.profile"
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_USER_HOME
      Value: /workspace/.gradle/
    Name: env
  - Key: NODE_VERSION
    Name: arg
    Value: 10.15.3
  - CmdLine:
    - curl -fsSL https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh
      | PROFILE=/dev/null bash     && bash -c ". .nvm/nvm.sh         && nvm install
      $NODE_VERSION         && npm config set python /usr/bin/python --global         &&
      npm config set python /usr/bin/python         && npm install -g typescript yarn"     &&
      echo ". ~/.nvm/nvm-lazy.sh" | tee -a /home/gitpod/.profile /home/gitpod/.bashrc
    Name: run
    PrependShell: true
  - Chown: gitpod:gitpod
    From: ""
    Name: copy
    SourcesAndDest:
    - nvm-lazy.sh
    - /home/gitpod/.nvm/nvm-lazy.sh
  - Env:
    - Key: PATH
      Value: /home/gitpod/.nvm/versions/node/v${NODE_VERSION}/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: $HOME/.pyenv/bin:$HOME/.pyenv/shims:$PATH
    Name: env
  - CmdLine:
    - curl -fsSL https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
      | bash     && { echo;         echo 'eval "$(pyenv init -)"';         echo 'eval
      "$(pyenv virtualenv-init -)"'; } >> .bashrc     && pyenv install 2.7.16     &&
      pyenv install 3.7.4     && pyenv global 2.7.16 3.7.4     && pip2 install --upgrade
      pip     && pip2 install virtualenv pipenv pylint rope flake8 autopep8 pep8 pylama
      pydocstyle bandit notebook python-language-server[all]==0.25.0     && pip3 install
      --upgrade pip     && pip3 install virtualenv pipenv pylint rope flake8 autopep8
      pep8 pylama pydocstyle bandit notebook python-language-server[all]==0.25.0     &&
      rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://rvm.io/mpapis.asc | gpg --import -     && curl -sSL https://rvm.io/pkuczynski.asc
      | gpg --import -     && curl -fsSL https://get.rvm.io | bash -s stable     &&
      bash -lc "         rvm requirements         && rvm install 2.4         && rvm
      install 2.5         && rvm install 2.6         && rvm use 2.6 --default         &&
      rvm rubygems current         && gem install bundler --no-document         &&
      gem install solargraph --no-document"
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /workspace/.rvm
    Name: env
  - CmdLine:
    - sudo apt-get update     && DEBIAN_FRONTEND=noninteractive sudo apt-get install
      -yq         musl         musl-dev         musl-tools     && sudo apt-get clean     &&
      sudo rm -rf /var/lib/apt/lists/* /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://sh.rustup.rs | sh -s -- -y     && .cargo/bin/rustup update     &&
      .cargo/bin/rustup component add rls-preview rust-analysis rust-src     && .cargo/bin/rustup
      completions bash | sudo tee /etc/bash_completion.d/rustup.bash-completion >
      /dev/null     && .cargo/bin/rustup target add x86_64-unknown-linux-musl
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -lc "cargo install cargo-watch"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'notOwnedFile=$(find . -not "(" -user gitpod -and -group gitpod ")" -print -quit)     &&
      { [ -z "$notOwnedFile" ]         || { echo "Error: not all files/dirs in $HOME
      are owned by ''gitpod'' user & group"; exit 1; } }'
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:disco
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:disco
