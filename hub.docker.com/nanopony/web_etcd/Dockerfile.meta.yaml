MetaArgs: null
Stages:
- As: backend
  BaseName: golang:1.10
  Commands:
  - CmdLine:
    - mkdir -p /go/src/github.com/nanopony/web_etcd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/nanopony/web_etcd
  - Name: workdir
    Path: /go/src/github.com/nanopony/web_etcd
  - CmdLine:
    - go get -u github.com/golang/dep/cmd/dep
    Name: run
    PrependShell: true
  - CmdLine:
    - dep ensure -vendor-only
    Name: run
    PrependShell: true
  - CmdLine:
    - CGO_ENABLED=0 go build
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10
  Name: backend
  Platform: ""
  SourceCode: FROM golang:1.10 as backend
- As: frontend
  BaseName: node:8
  Commands:
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - static
    - /app
  - Name: workdir
    Path: /app
  - CmdLine:
    - npm --registry=https://registry.npm.taobao.org --cache=$HOME/.npm/.cache/cnpm
      --disturl=https://npm.taobao.org/mirrors/node --userconfig=$HOME/.cnpmrc install
      && npm run publish
    Name: run
    PrependShell: true
  From:
    Image: node:8
  Name: frontend
  Platform: ""
  SourceCode: FROM node:8 as frontend
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - mkdir -p /app/static/dist /app/conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: backend
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/nanopony/web_etcd/web_etcd
    - /app
  - Chown: ""
    From: frontend
    Name: copy
    SourcesAndDest:
    - /app/dist
    - /app/static/dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/config.docker.ini
    - /app/conf/config.default.ini
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: /app
  - CmdLine:
    - ./web_etcd
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
