MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"NGINX Docker Maintainers <docker-maint@nginx.com>"'
    Name: label
  - Env:
    - Key: NGINX_VERSION
      Value: 1.14.2
    Name: env
  - Env:
    - Key: LUA_NGX_VERSION
      Value: 0.10.14rc3
    Name: env
  - Env:
    - Key: OPENRESTY_LUAJIT_VERSION
      Value: 2.1-20181029
    Name: env
  - Env:
    - Key: LUAROCKS_VERSION
      Value: 3.0.4
    Name: env
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-http_perl_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module
      \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic
      \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat
      \t\t--with-file-aio \t\t--with-http_v2_module         --add-dynamic-module=/usr/src/lua-nginx-module-$LUA_NGX_VERSION
      \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin
      -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev
      \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl
      \t\tgnupg1 \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\tperl-dev \t&& curl -fSL
      https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t&&
      curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc
      \    && curl -fsL https://github.com/openresty/lua-nginx-module/archive/v$LUA_NGX_VERSION.tar.gz
      -o lua-nginx-module.tar.gz     && curl -fsL https://github.com/openresty/luajit2/archive/v$OPENRESTY_LUAJIT_VERSION.tar.gz
      -o openresty-luajit2.tar.gz     && curl -fsL https://luarocks.org/releases/luarocks-$LUAROCKS_VERSION.tar.gz
      -o luarocks.tar.gz \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor
      server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80
      \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\";
      \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\"
      && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed
      to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc
      nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src
      \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& tar -zxC /usr/src -f lua-nginx-module.tar.gz
      \t&& tar -zxC /usr/src -f openresty-luajit2.tar.gz \t&& tar -zxC /usr/src -f
      luarocks.tar.gz \t&& rm nginx.tar.gz lua-nginx-module.tar.gz openresty-luajit2.tar.gz
      luarocks.tar.gz \t&& cd /usr/src/luajit2-$OPENRESTY_LUAJIT_VERSION     && make
      -j$(getconf _NPROCESSORS_ONLN) && make install PREFIX=/usr \t&& rm -rf /usr/src/luajit2-$OPENRESTY_LUAJIT_VERSION
      \    && cd /usr/src/luarocks-$LUAROCKS_VERSION     && ./configure --prefix=/usr
      \    && make && make install \t&& rm -rf /usr/src/luarocks-$LUAROCKS_VERSION
      \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& LUAJIT_LIB=/usr/lib LUAJIT_INC=/usr/include/luajit-$(echo
      $OPENRESTY_LUAJIT_VERSION | sed -e 's/\\([^-]*\\).*/\\1/') ./configure $CONFIG
      --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug
      \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so
      objs/ngx_stream_geoip_module-debug.so \t&& mv objs/ngx_http_lua_module.so objs/ngx_http_lua_module-debug.so
      \t&& LUAJIT_LIB=/usr/lib LUAJIT_INC=/usr/include/luajit-$(echo $OPENRESTY_LUAJIT_VERSION
      | sed -e 's/\\([^-]*\\).*/\\1/') ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN)
      \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/
      \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html /usr/share/nginx/html/
      \t&& install -m644 html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug
      /usr/sbin/nginx-debug \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so
      /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \t&& install -m755
      objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& install -m755 objs/ngx_http_lua_module-debug.so /usr/lib/nginx/modules/ngx_http_lua_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \    && apk add --no-cache --virtual .luarocks-deps unzip curl openssl git     &&
      cd /tmp     && luarocks install lua-cjson     && luarocks install lua-cmsgpack
      \    && luarocks install luaossl \t\t&& apk add --no-cache --virtual .gettext
      gettext \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed
      --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /usr/share/lua/5.1/**/*.so
      /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'
      \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)     libgcc
      \    \" \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst
      /usr/local/bin/ \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t\t&&
      apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log
      \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
