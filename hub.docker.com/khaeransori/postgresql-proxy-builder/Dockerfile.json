{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_BUCKET",
              "Value": "\"download.docker.com\""
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "\"17.09.0-ce\""
            },
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "\"stable\""
            },
            {
              "Key": "DOCKER_SHA256",
              "Value": "\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\""
            },
            {
              "Key": "DIND_COMMIT",
              "Value": "\"3b5fac462d21ca164b3778647420016315289034\""
            },
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "\"1.21.2\""
            },
            {
              "Key": "GITVERSION_VERSION",
              "Value": "\"3.6.5\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 echo 'Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/99use-gzip-compression     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install software-properties-common -y --no-install-recommends     \u0026\u0026 apt-add-repository ppa:git-core/ppa     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install git=1:2.* -y --no-install-recommends     \u0026\u0026 git version     \u0026\u0026 apt-get install -y --no-install-recommends openssh-client=1:7.2*     \u0026\u0026 mkdir ~/.ssh     \u0026\u0026 touch ~/.ssh/known_hosts     \u0026\u0026 ssh-keyscan -t rsa,dsa -H github.com \u003e\u003e ~/.ssh/known_hosts     \u0026\u0026 ssh-keyscan -t rsa,dsa -H bitbucket.org \u003e\u003e ~/.ssh/known_hosts     \u0026\u0026 chmod 600 ~/.ssh/known_hosts     \u0026\u0026 apt-get install -y --no-install-recommends     wget=1.17.* python=2.7.* python2.7-dev=2.7.* fakeroot=1.20.* ca-certificates     tar=1.28-* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.15-*     bzip2=1.0.* file=1:5.25-* g++=4:5.3.* gcc=4:5.3.* imagemagick=8:6.8.*     libbz2-dev=1.0.* libc6-dev=2.23-* libcurl4-openssl-dev=7.47.* libdb-dev=1:5.3.*     libevent-dev=2.0.* libffi-dev=3.2* libgeoip-dev=1.6.* libglib2.0-dev=2.48.*     libjpeg-dev=8c-* libkrb5-dev=1.13.2+* liblzma-dev=5.1.*     libmagickcore-dev=8:6.8.* libmagickwand-dev=8:6.8.* libmysqlclient-dev=5.7.*     libncurses5-dev=6.0+* libpng12-dev=1.2.* libpq-dev=9.5.* libreadline-dev=6.3-*     libsqlite3-dev=3.11.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.*     libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=4.1-*     patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* unzip=6.0-* curl=7.47.*     e2fsprogs=1.42.* iptables=1.6.* xfsprogs=4.3.* xz-utils=5.1.*     mono-mcs=4.2.* less=481-* groff=1.22.* liberror-perl=0.17-*     asciidoc=8.6.* build-essential=12.* bzr=2.7.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.79.* dpkg-dev=1.18.*     libdbd-sqlite3-perl=1.50-* libdbi-perl=1.634-* libdpkg-perl=1.18.* libhttp-date-perl=6.02-*     libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.9.* libsvn1=1.9.* libtcl8.6=8.6.* libtimedate-perl=2.3000-*     libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=1.15-* python-bzrlib=2.7.* python-configobj=5.0.*     sgml-base=1.26+* sgml-data=2.0.* subversion=1.9.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* sudo     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip     \u0026\u0026 mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION}     \u0026\u0026 unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION}     \u0026\u0026 rm /tmp/GitVersion_${GITVERSION_VERSION}.zip     \u0026\u0026 echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe \\$@\" \u003e\u003e /usr/local/bin/gitversion     \u0026\u0026 chmod +x /usr/local/bin/gitversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz     \u0026\u0026 echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c -     \u0026\u0026 tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     \u0026\u0026 rm docker.tgz     \u0026\u0026 docker -v     \u0026\u0026 addgroup dockremap     \u0026\u0026 useradd -g dockremap dockremap     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subuid     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subgid     \u0026\u0026 wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind     \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 \u003e /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     \u0026\u0026 docker-compose version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget \"https://bootstrap.pypa.io/2.6/get-pip.py\" -O /tmp/get-pip.py     \u0026\u0026 python /tmp/get-pip.py     \u0026\u0026 pip install awscli==1.*     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerd-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64\""
            },
            {
              "Key": "JDK_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64\""
            },
            {
              "Key": "JRE_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64\""
            },
            {
              "Key": "ANT_VERSION",
              "Value": "1.10.3"
            },
            {
              "Key": "MAVEN_HOME",
              "Value": "\"/opt/maven\""
            },
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.5.4"
            },
            {
              "Key": "MAVEN_CONFIG",
              "Value": "\"/root/.m2\""
            },
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.2.1"
            },
            {
              "Key": "PROPERTIES_COMMON_VERSION",
              "Value": "0.96.20.8"
            },
            {
              "Key": "PYTHON_TOOL_VERSION",
              "Value": "\"20.7.0-*\""
            },
            {
              "Key": "JDK_VERSION",
              "Value": "\"8u191-b12-0ubuntu0.16.04.1\""
            },
            {
              "Key": "ANT_DOWNLOAD_SHA512",
              "Value": "\"73f2193700b1d1e32eedf25fab1009e2a98fb2f6425413f5c9fa1b0f2f9f49f59cb8ed3f04931c808ae022a64ecfa2619e5fb77643fea6dbc29721e489eb3a07\""
            },
            {
              "Key": "MAVEN_DOWNLOAD_SHA1",
              "Value": "\"22cac91b3557586bb1eba326f2f7727543ff15e3\""
            },
            {
              "Key": "GRADLE_DOWNLOAD_SHA256",
              "Value": "\"b551cc04f2ca51c78dd14edb060621f0e5439bdfafa6fd167032a09ac708fbc0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y software-properties-common=$PROPERTIES_COMMON_VERSION     \u0026\u0026 add-apt-repository ppa:openjdk-r/ppa     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y python-setuptools=$PYTHON_TOOL_VERSION     \u0026\u0026 apt-get install -y openjdk-${JAVA_VERSION}-jdk=$JDK_VERSION     \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates-java     \u0026\u0026 apt-get clean     \u0026\u0026 update-ca-certificates -f     \u0026\u0026 curl -LSso /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz      \u0026\u0026 echo \"$ANT_DOWNLOAD_SHA512 /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz\" | sha512sum -c -     \u0026\u0026 tar -xzf /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz -C /opt     \u0026\u0026 update-alternatives --install /usr/bin/ant ant /opt/apache-ant-$ANT_VERSION/bin/ant 10000     \u0026\u0026 mkdir -p $MAVEN_HOME     \u0026\u0026 curl -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     \u0026\u0026 echo \"$MAVEN_DOWNLOAD_SHA1 /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | sha1sum -c -     \u0026\u0026 tar xzvf /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz -C $MAVEN_HOME --strip-components=1     \u0026\u0026 update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 10000     \u0026\u0026 mkdir -p $MAVEN_CONFIG     \u0026\u0026 curl -LSso /var/tmp/gradle-$GRADLE_VERSION-bin.zip https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip     \u0026\u0026 echo \"$GRADLE_DOWNLOAD_SHA256 /var/tmp/gradle-$GRADLE_VERSION-bin.zip\" | sha256sum -c -     \u0026\u0026 unzip /var/tmp/gradle-$GRADLE_VERSION-bin.zip -d /opt     \u0026\u0026 update-alternatives --install /usr/local/bin/gradle gradle /opt/gradle-$GRADLE_VERSION/bin/gradle 10000     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "m2-settings.xml",
            "$MAVEN_CONFIG/settings.xml"
          ]
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_VERSION",
              "Value": "10"
            },
            {
              "Key": "POSTGRES_PATH",
              "Value": "\"/etc/postgresql\""
            },
            {
              "Key": "POSTGRES_HBA_CONFIG",
              "Value": "\"/etc/postgresql/10/main/pg_hba.conf\""
            },
            {
              "Key": "POSTGRES_CONFIG",
              "Value": "\"/etc/postgresql/10/main/postgresql.conf\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "LINUX_VERSION=\"$(lsb_release --codename | cut -f2)\"     \u0026\u0026 echo \"deb http://apt.postgresql.org/pub/repos/apt/ $LINUX_VERSION-pgdg main\" \u003e\u003e /etc/apt/sources.list.d/pgdg.list     \u0026\u0026 wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y postgresql-$POSTGRES_VERSION postgresql-$POSTGRES_VERSION-pgtap  python-psycopg2     \u0026\u0026 pip install pexpect"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SQITCH_VERSION",
              "Value": "0.9994"
            },
            {
              "Key": "FILE_TEMPLATE",
              "Value": "\"/usr/local/etc/sqitch/templates/verify/pg.tmpl\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install libdbd-pg-perl     \u0026\u0026 apt-get install -y cpanminus     \u0026\u0026 cpanm --notest DWHEELER/App-Sqitch-$SQITCH_VERSION.tar.gz     \u0026\u0026 rm -f $FILE_TEMPLATE     \u0026\u0026 echo \"\" \u003e $FILE_TEMPLATE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -d /home/$USER -s /bin/bash -c \"docker testing\" -U $USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "m2-settings.xml",
            "$MAVEN_CONFIG/settings.xml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "create_user.py",
            "/"
          ]
        }
      ]
    }
  ]
}