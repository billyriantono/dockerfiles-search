{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "bin",
      "BaseName": "php:7.2-fpm-alpine",
      "SourceCode": "FROM php:7.2-fpm-alpine as bin",
      "Platform": "",
      "As": "bin",
      "From": {
        "Image": "php:7.2-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache         ca-certificates         icu-libs         git         unzip         postgresql-dev         nodejs         freetype         libpng         libjpeg-turbo         freetype-dev         libpng-dev         libjpeg-turbo-dev         libzip         libzip-dev         zlib-dev         libxml2-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         $PHPIZE_DEPS         icu-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql  \u0026\u0026     docker-php-ext-configure zip --with-libzip \u0026\u0026       docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install mysqli zip intl mbstring pdo pdo_mysql pdo_pgsql bcmath gd json soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable apcu opcache redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache         wget \u0026\u0026     wget https://phar.phpunit.de/phploc.phar \u0026\u0026     chmod +x phploc.phar \u0026\u0026     mv phploc.phar /usr/local/bin/phploc \u0026\u0026     wget https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \u0026\u0026     chmod +x phpcs.phar \u0026\u0026     mv phpcs.phar /usr/local/bin/phpcs \u0026\u0026     wget https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \u0026\u0026     chmod +x phpcbf.phar \u0026\u0026     mv phpcbf.phar /usr/local/bin/phpcbf \u0026\u0026     wget https://phar.phpunit.de/phpcpd.phar \u0026\u0026     chmod +x phpcpd.phar \u0026\u0026     mv phpcpd.phar /usr/local/bin/phpcpd \u0026\u0026     wget https://phar.phpunit.de/phpdcd.phar \u0026\u0026     chmod +x phpdcd.phar \u0026\u0026     mv phpdcd.phar /usr/local/bin/phpdcd \u0026\u0026     wget https://github.com/Halleck45/PhpMetrics/raw/master/build/phpmetrics.phar \u0026\u0026     chmod +x phpmetrics.phar \u0026\u0026     mv phpmetrics.phar /usr/local/bin/phpmetrics \u0026\u0026     wget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar \u0026\u0026     chmod +x php-cs-fixer-v2.phar \u0026\u0026     mv php-cs-fixer-v2.phar /usr/local/bin/php-cs-fixer \u0026\u0026     echo \"memory_limit = 1024M\" \u003e\u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "src",
      "BaseName": "composer",
      "SourceCode": "FROM composer as src",
      "Platform": "",
      "As": "src",
      "From": {
        "Image": "composer"
      },
      "Commands": [
        {
          "CmdLine": [
            "composer global require         symfony/flex         symfony/thanks     \tphpmd/phpmd     \tpdepend/pdepend         phpstan/phpstan         phpstan/phpstan-symfony         phpstan/phpstan-dibi         phpstan/phpstan-doctrine         phpstan/phpstan-phpunit         phpstan/phpstan-shim         phpstan/phpstan-strict-rules         friendsoftwig/twigcs"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "bin",
      "SourceCode": "FROM bin",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "bin",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "bin",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "src",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp",
            "/usr/local/src/"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/src/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache         bash         graphviz         su-exec \u0026\u0026     addgroup bar \u0026\u0026     adduser -D -H -G bar foo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/project"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/project"
          ]
        }
      ]
    }
  ]
}