{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine",
      "SourceCode": "FROM gliderlabs/alpine",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine"
      },
      "Commands": [
        {
          "Maintainer": "Simon Dittlmann",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk-install bash curl tar gzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "4.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -O https://download.elastic.co/kibana/kibana/kibana-${KIBANA_VERSION}-linux-x64.tar.gz \u0026\u0026 \ttar xfv kibana-${KIBANA_VERSION}-linux-x64.tar.gz -C / \u0026\u0026   rm /kibana-4.0.2-linux-x64/node/bin/node \u0026\u0026   rm /kibana-4.0.2-linux-x64/node/bin/npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "v1.7.1"
            },
            {
              "Key": "CMD",
              "Value": "iojs"
            },
            {
              "Key": "DOMAIN",
              "Value": "iojs.org"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026   apk add make gcc g++ python paxctl curl \u0026\u0026   curl -sSL https://${DOMAIN}/dist/${VERSION}/${CMD}-${VERSION}.tar.gz | tar -xz \u0026\u0026   cd /${CMD}-${VERSION} \u0026\u0026   NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) \u0026\u0026   export CFLAGS=\"$CFLAGS -D__USE_MISC\" \u0026\u0026   ./configure --prefix=/usr \u0026\u0026   make -j${NPROC} -C out mksnapshot \u0026\u0026   paxctl -c -m out/Release/mksnapshot \u0026\u0026   make -j${NPROC} \u0026\u0026   make install \u0026\u0026   paxctl -cm /usr/bin/${CMD} \u0026\u0026   apk del make gcc g++ python paxctl curl \u0026\u0026   apk add libgcc libstdc++ \u0026\u0026   cd / \u0026\u0026   rm -rf /${CMD}-${VERSION} /var/cache/apk/* /tmp/* /root/.npm     /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/node /kibana-4.0.2-linux-x64/node/bin/node \u0026\u0026   ln -s /usr/bin/npm /kibana-4.0.2-linux-x64/node/bin/npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5601"
          ]
        }
      ]
    }
  ]
}