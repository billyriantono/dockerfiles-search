MetaArgs: null
Stages:
- BaseName: php:7.1-fpm-jessie
  Commands:
  - CmdLine:
    - echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90circleci   && echo
      'DPkg::Options "--force-confnew";' >> /etc/apt/apt.conf.d/90circleci
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update   && mkdir -p /usr/share/man/man1   && apt-get install -y     git
      mercurial xvfb     locales sudo openssh-client ca-certificates tar gzip parallel     net-tools
      netcat unzip zip bzip2 gnupg curl wget
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen C.UTF-8 || true
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - JQ_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest"   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq
      $JQ_URL   && chmod +x /usr/bin/jq   && jq --version
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex   && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/
      | grep -o -e ''docker-[.0-9]*-ce\.tgz'' | sort -r | head -n 1)   && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}"   &&
      echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail
      --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}"   && ls -lha /tmp/docker.tgz   &&
      tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf
      /tmp/docker /tmp/docker.tgz   && which docker   && (docker version || true)'
    Name: run
    PrependShell: true
  - CmdLine:
    - COMPOSE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest"   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose
      $COMPOSE_URL   && chmod +x /usr/bin/docker-compose   && docker-compose version
    Name: run
    PrependShell: true
  - CmdLine:
    - DOCKERIZE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz"   &&
      curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz
      $DOCKERIZE_URL   && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   &&
      rm -rf /tmp/dockerize-linux-amd64.tar.gz   && dockerize --version
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell
      /bin/bash --create-home circleci   && echo ''circleci ALL=NOPASSWD: ALL'' >>
      /etc/sudoers.d/50-circleci   && echo ''Defaults    env_keep += "DEBIAN_FRONTEND"''
      >> /etc/sudoers.d/env_keep'
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://raw.githubusercontent.com/composer/getcomposer.org/master/web/installer',
      'composer-setup.php');" &&     php composer-setup.php &&     php -r "unlink('composer-setup.php');"
      &&     mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - (pecl install xdebug || pecl install xdebug-2.5.5) && docker-php-ext-enable
      xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apache2
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_CONFDIR
      Value: /etc/apache2
    Name: env
  - Env:
    - Key: APACHE_ENVVARS
      Value: $APACHE_CONFDIR/envvars
    Name: env
  - CmdLine:
    - "set -ex \t\t&& sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'
      \"$APACHE_ENVVARS\" \t\t&& . \"$APACHE_ENVVARS\" \t&& for dir in \t\t\"$APACHE_LOCK_DIR\"
      \t\t\"$APACHE_RUN_DIR\" \t\t\"$APACHE_LOG_DIR\" \t\t/var/www/html \t; do \t\trm
      -rvf \"$dir\" \t\t&& mkdir -p \"$dir\" \t\t&& chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\"
      \"$dir\"; \tdone"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& . \"$APACHE_ENVVARS\" \t&& ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\"
      \t&& ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \t&& ln -sfT /dev/stdout
      \"$APACHE_LOG_DIR/other_vhosts_access.log\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vhost.conf
    - /etc/apache2/sites-available/000-default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm.d/docker.conf
    - /usr/local/etc/php-fpm.d/docker.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm.d/circleci.conf
    - /usr/local/etc/php-fpm.d/circleci.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm.d/zz-docker.conf
    - /usr/local/etc/php-fpm.d/zz-docker.conf
  - CmdLine:
    - rm /usr/local/etc/php-fpm.d/www.conf*
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod proxy_fcgi && a2enmod rewrite && service apache2 restart && update-rc.d
      apache2 defaults
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libpng-dev libssl-dev libreadline-dev nodejs python-pip -y
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) calendar exif gd gettext pcntl pdo_mysql shmop
      sockets
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  - CmdLine:
    - pip install awscli --upgrade --user
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_VERSION
      Value: '"2.5.1"'
    Name: env
  - CmdLine:
    - git clone https://github.com/rbenv/rbenv.git ~/.rbenv     && git clone https://github.com/rbenv/ruby-build.git
      ~/.rbenv/plugins/ruby-build     && echo 'export PATH="$HOME/.rbenv/bin:$PATH"'
      >> ~/.bashrc     && echo 'eval "$(rbenv init -)"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH="$HOME/.rbenv/bin:$PATH"     && eval "$(rbenv init -)"     && rbenv
      install $RUBY_VERSION     && rbenv global $RUBY_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH="$HOME/.rbenv/bin:$PATH"     && eval "$(rbenv init -)"     && gem
      install bundler middleman
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.1-fpm-jessie
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm-jessie
