{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dockeredcom/debian-oraclejdk:latest",
      "SourceCode": "FROM dockeredcom/debian-oraclejdk:latest",
      "Platform": "",
      "From": {
        "Image": "dockeredcom/debian-oraclejdk:latest"
      },
      "Commands": [
        {
          "Maintainer": "Yves Vindevogel (yves.vindevogel@asynchrone.com / yves.vindevogel@dockered.com)",
          "Name": "maintainer"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "GIT_USER",
              "Value": "git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_PASSWORD",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_PROTOCOL",
              "Value": "http"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_REPO",
              "Value": "git.server.net/repo.git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_BRANCH",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_SSLVERIFY",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JBAKE_SOURCE",
              "Value": "."
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JBAKE_INTERVAL",
              "Value": "\"*/15 * * * *\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx.list",
            "/etc/apt/sources.list.d/nginx.list"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "/srv/script/start.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./refresh.sh",
            "/srv/script/refresh.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx.conf",
            "/tmp/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     chmod +x /srv/script/start.sh \u0026\u0026     chmod +x /srv/script/refresh.sh \u0026\u0026     /bin/bash -l -c \"sdk install jbake\" \u0026\u0026     apt-get update --yes \u0026\u0026     apt-get upgrade --yes \u0026\u0026     apt-get install dialog --yes --no-install-recommends \u0026\u0026     apt-get install nginx --yes --no-install-recommends \u0026\u0026     rm -f /etc/nginx/conf.d/default.conf \u0026\u0026     rm -f /etc/nginx/nginx.conf \u0026\u0026     mv /tmp/nginx.conf /etc/nginx/ \u0026\u0026     apt-get install git --yes --no-install-recommends \u0026\u0026     apt-get install cron --yes --no-install-recommends \u0026\u0026     echo \"$JBAKE_INTERVAL root /srv/script/refresh.sh\" \u003e /etc/cron.d/jbake \u0026\u0026     apt-get autoremove --yes \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/srv/script/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}