MetaArgs: null
Stages:
- BaseName: ubuntu:wily
  Commands:
  - Maintainer: max@wayt.me
    Name: maintainer
  - CmdLine:
    - mkdir -p /go
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.5.3
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: WORKDIR
      Value: ${GOPATH}/src/github.com/karhuteam/karhu
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GOROOT}/bin
    Name: env
  - Env:
    - Key: LOGSTASH_TLS_CRT
      Value: /etc/logstash/certs/logstash.crt
    Name: env
  - Env:
    - Key: LOGSTASH_AUTHFILE
      Value: /etc/logstash/certs/authfile
    Name: env
  - Env:
    - Key: LOGSTASH_TAGS_FILTERS
      Value: /etc/logstash/conf.d/10-tags-filters.conf
    Name: env
  - Env:
    - Key: LOGSTASH_APPS_FILTERS
      Value: /etc/logstash/conf.d/11-apps-filters.conf
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common wget apt-transport-https nagios-plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:ansible/ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y ansible git &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz
      -O /tmp/go.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -C /usr/local -xzf /tmp/go.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${WORKDIR}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${WORKDIR}
  - Name: workdir
    Path: ${WORKDIR}
  - CmdLine:
    - go get -v &&     go build
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /logstash
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - logstash/
    - /etc/logstash/conf.d/
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /logstash
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:wily
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:wily
