{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "FIWARE Identity Manager Team. DIT-UPM",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Env": [
            {
              "Key": "IDM_HOST",
              "Value": "\"http://localhost:3000\"     IDM_PORT \"3000\"     IDM_PDP_LEVEL \"basic\"     DATABASE_HOST \"localhost\"     IDM_DB_NAME \"idm\"     IDM_DIALECT \"mysql\"     IDM_EMAIL_HOST \"localhost\"     IDM_EMAIL_PORT \"25\"     IDM_EMAIL_ADDRESS \"noreply@localhost\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends build-essential debconf-utils ca-certificates curl git netcat  \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     echo \"postfix postfix/mailname string noreply@localhost\" | debconf-set-selections \u0026\u0026     echo \"postfix postfix/main_mailer_type string 'Internet Site'\" | debconf-set-selections \u0026\u0026     apt-get install -y --no-install-recommends  mailutils \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/inet_interfaces = all/inet_interfaces = loopback-only/g' /etc/postfix/main.cf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     apt-get install -y --no-install-recommends nodejs \u0026\u0026    apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/opt/fiware-idm"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/fiware-idm"
        },
        {
          "CmdLine": [
            "rm -rf node_modules doc extras \u0026\u0026     npm cache clean -f \u0026\u0026     npm install --production --silent \u0026\u0026     rm -rf /root/.npm/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/fiware-idm"
        },
        {
          "CmdLine": [
            "mkdir certs \u0026\u0026     openssl genrsa -out idm-2018-key.pem 2048 \u0026\u0026     openssl req -new -sha256 -key idm-2018-key.pem -out idm-2018-csr.pem -batch \u0026\u0026     openssl x509 -req -in idm-2018-csr.pem -signkey idm-2018-key.pem -out idm-2018-cert.pem \u0026\u0026     mv idm-2018-key.pem idm-2018-cert.pem idm-2018-csr.pem certs/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config_database.js",
            "extras/docker/config_database.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.js.template",
            "config.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/opt/fiware-idm/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/fiware-idm/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "${IDM_PORT}"
          ]
        }
      ]
    }
  ]
}