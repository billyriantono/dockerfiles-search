MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Env:
    - Key: CONTAINER
      Value: docker
    Name: env
  - CmdLine:
    - (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service
      ] || rm -f $i; done);     rm -f /lib/systemd/system/multi-user.target.wants/*;    rm
      -f /etc/systemd/system/*.wants/*;    rm -f /lib/systemd/system/local-fs.target.wants/*;     rm
      -f /lib/systemd/system/sockets.target.wants/*udev*;     rm -f /lib/systemd/system/sockets.target.wants/*initctl*;     rm
      -f /lib/systemd/system/basic.target.wants/*;    rm -f /lib/systemd/system/anaconda.target.wants/*;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - home:oojah:mqtt.repo
    - /etc/yum.repos.d/home:oojah:mqtt.repo
  - CmdLine:
    - yum makecache fast     && yum --disableplugin=fastestmirror -y install epel-release     &&
      yum --disableplugin=fastestmirror -y install     ansible     bash     deltarpm     e2fsprogs     initscripts     sudo     cronie     python     python2-pip     which     yum-plugin-ovl     &&
      yum -y update     && rm -rf /var/cache/yum
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/Defaults    requiretty/Defaults    !requiretty/g' /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '# BLANK FSTAB' > /etc/fstab
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /sys/fs/cgroup
  - CmdLine:
    - /usr/lib/systemd/systemd
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
