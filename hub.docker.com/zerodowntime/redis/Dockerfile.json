{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "zerodowntime/centos",
      "SourceCode": "FROM zerodowntime/centos as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "zerodowntime/centos"
      },
      "Commands": [
        {
          "Key": "REDIS_VERSION",
          "Name": "arg",
          "Value": "5.0.3"
        },
        {
          "Key": "REDIS_DOWNLOAD_URL",
          "Name": "arg",
          "Value": "http://download.redis.io/releases/redis-5.0.3.tar.gz"
        },
        {
          "Key": "REDIS_DOWNLOAD_SHA",
          "Name": "arg",
          "Value": "e290b4ddf817b26254a74d5d564095b11f9cd20d8f165459efa53eb63cd93e02"
        },
        {
          "CmdLine": [
            "set -ex;         yum -y install     coreutils     gcc     linux-headers     make     musl-dev     wget     ;         wget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\";     echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c -;     mkdir -p /usr/src/redis;     tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1;     rm redis.tar.gz;         grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h;     sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h;     grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h;         make -C /usr/src/redis -j \"$(nproc)\";     make -C /usr/src/redis install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "zerodowntime/centos",
      "SourceCode": "FROM zerodowntime/centos",
      "Platform": "",
      "From": {
        "Image": "zerodowntime/centos"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r redis \u0026\u0026 useradd -r -g redis redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/redis-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /data \u0026\u0026 chown redis:redis /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "confd/templates",
            "/etc/confd/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "confd/conf.d",
            "/etc/confd/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "liveness-probe.sh",
            "/opt/liveness-probe.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "readiness-probe.sh",
            "/opt/readiness-probe.sh"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/etc/redis.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        }
      ]
    }
  ]
}