{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "ANSIBLE_VERSION",
          "Name": "arg",
          "Value": "2.7.1"
        },
        {
          "Key": "MOLECULE_VERSION",
          "Name": "arg",
          "Value": "2.19.0"
        },
        {
          "CmdLine": [
            "yum -y update; yum clean all; (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*;rm -f /etc/systemd/system/*.wants/*;rm -f /lib/systemd/system/local-fs.target.wants/*; rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*; rm -f /lib/systemd/system/basic.target.wants/*;rm -f /lib/systemd/system/anaconda.target.wants/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum makecache fast   \u0026\u0026 yum -y install deltarpm epel-release initscripts   \u0026\u0026 yum -y update   \u0026\u0026 yum -y install       sudo       which       python-pip       gcc       python-devel       openssh-clients       git       https://releases.hashicorp.com/vagrant/2.2.3/vagrant_2.2.3_x86_64.rpm       libvirt       libvirt-devel       libvirt-python       virt-install   \u0026\u0026 yum install -y libtool-ltdl   \u0026\u0026 yum remove python-requests -y   \u0026\u0026 yum clean all   \u0026\u0026 vagrant plugin install vagrant-libvirt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade       pip       setuptools   \u0026\u0026 pip install --no-cache-dir       ansible==${ANSIBLE_VERSION}       molecule==${MOLECULE_VERSION}       docker       python-vagrant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e '[local]\\nlocalhost ansible_connection=local' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ansible.cfg",
            "/etc/ansible/ansible.cfg"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /root/.ssh/   \u0026\u0026 chmod 700 ~/.ssh   \u0026\u0026 ssh-keyscan -H git.zdt.io \u003e\u003e /root/.ssh/known_hosts   \u0026\u0026 chmod 644 /root/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "CmdLine": [
            "/usr/lib/systemd/systemd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}