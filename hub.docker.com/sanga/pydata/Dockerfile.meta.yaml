MetaArgs: null
Stages:
- BaseName: python:3.5.1
  Commands:
  - Maintainer: tim@sampson.fi
    Name: maintainer
  - CmdLine:
    - echo deb http://llvm.org/apt/jessie/ llvm-toolchain-jessie-3.7 main >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key|apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget liblapack-dev fortran-compiler llvm-3.7-dev libedit-dev
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '/opt  # you can''t pip install for the filesystem root'
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - Env:
    - Key: LLVM_CONFIG
      Value: /usr/lib/llvm-3.7/bin/llvm-config
    Name: env
  - CmdLine:
    - pip install --egg git+git://github.com/numba/llvmlite@v0.11.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numba==0.26
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install notebook
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ipywidgets
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install seaborn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install bokeh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install geojson
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install folium
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numexpr
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install line-profiler
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/krallin/tini/releases/download/v0.9.0/tini > tini
      &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/notebooks
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/notebooks
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter-notebook
    - --ip='*'
    - --no-browser
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.5.1
  Name: ""
  Platform: ""
  SourceCode: from python:3.5.1
