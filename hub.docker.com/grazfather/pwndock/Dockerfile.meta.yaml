MetaArgs: null
Stages:
- As: golang
  BaseName: golang:1.13-stretch
  Commands: null
  From:
    Image: golang:1.13-stretch
  Name: golang
  Platform: ""
  SourceCode: FROM golang:1.13-stretch AS golang
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt update     && apt -y install locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - mkdir ~/tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends lsof strace ltrace
      vim patchelf netcat socat file     && apt -y install --no-install-recommends
      curl wget git gdb man sudo inetutils-ping less     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends python-dev python-pip     &&
      apt -y install --no-install-recommends python3-dev python3-pip     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade pip     && python -m pip install --upgrade
      pip     && python2 -m pip install setuptools     && python3 -m pip install setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends gcc-multilib g++-multilib     &&
      apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386     && apt update     && apt -y install --no-install-recommends
      xz-utils libc6-dbg libc6-dbg:i386 glibc-source     && apt clean     && tar -C
      /usr/src/glibc/ -xf /usr/src/glibc/glibc-*.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends git cmake gcc g++ pkg-config
      libglib2.0-dev     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && wget https://raw.githubusercontent.com/hugsy/stuff/master/update-trinity.sh     &&
      bash ./update-trinity.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone --depth 1 https://github.com/Z3Prover/z3.git &&
      cd z3     && python3 scripts/mk_make.py --python     && cd build; make && make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install angr
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install pwntools==3.12.1
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade git+https://github.com/Gallopsled/pwntools.git@dev3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends ruby-full     && apt
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install one_gadget
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install arm_now
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends e2tools qemu     &&
      apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends gcc-arm-linux-gnueabihf
      binutils-arm-linux-gnueabihf g++-arm-linux-gnueabihf     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install ropper
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb     &&
      dpkg -i ripgrep_0.9.0_amd64.deb     && rm ripgrep_0.9.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone --depth 1 https://github.com/devttys0/binwalk &&
      cd binwalk     && python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone --depth 1 https://github.com/radare/radare2 && cd
      radare2     && ./sys/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install --no-install-recommends libevent-dev libncurses-dev     &&
      apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - 'TMUX_VERSION=$(curl -s https://api.github.com/repos/tmux/tmux/releases/latest
      | grep -oP ''"tag_name": "\K(.*)(?=")'')     && wget https://github.com/tmux/tmux/releases/download/$TMUX_VERSION/tmux-$TMUX_VERSION.tar.gz     &&
      tar zxf tmux-$TMUX_VERSION.tar.gz     && cd tmux-$TMUX_VERSION     && ./configure
      && make && make install     && cd ..     && rm -rf tmux-$TMUX_VERSION*     &&
      echo "tmux hold" | dpkg --set-selections # disable tmux update from apt'
    Name: run
    PrependShell: true
  - Chown: ""
    From: golang
    Name: copy
    SourcesAndDest:
    - /usr/local/go
    - /usr/local/go
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
