MetaArgs: null
Stages:
- As: intermediate
  BaseName: ubuntu:18.04
  Commands:
  - Key: GITHUB_TOKEN
    Name: arg
    Value: null
  - CmdLine:
    - if [ "x${GITHUB_TOKEN}" = "x" ]; then     echo "Please specify your Github OATH
      token as build argument";     echo "docker build --build-arg GITHUB_TOKEN=<mytoken>
      .";    exit 1;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y gcc
      make autoconf libc-dev     pkg-config php-cli php-curl php-mysql     php-pear
      php-pgsql php-intl php-bcmath php-mbstring php-zip php-dev     libmcrypt-dev
      git re2c unzip wget curl
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=mcrypt.so" > /etc/php/7.2/mods-available/mcrypt.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pear install Mail_mimeDecode
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/include/php/20170718/ext/mbstring/libmbfl/mbfl/mbfilter.h . &&     awk
      '/#define MBFL_MBFILTER_H/{print;print "#undef HAVE_MBSTRING\n#define HAVE_MBSTRING
      1";next}1'     mbfilter.h > /usr/include/php/20170718/ext/mbstring/libmbfl/mbfl/mbfilter.h
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mailparse &&     echo extension=mailparse.so > /etc/php/7.2/mods-available/mailparse.ini
      &&     phpenmod mailparse && phpenmod mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php &&     mv composer.phar /usr/local/bin/composer
      &&     chmod 755 /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer config -g github-oauth.github.com ${GITHUB_TOKEN}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O abuseio.zip https://github.com/AbuseIO/AbuseIO/archive/master.zip &&     unzip
      abuseio.zip -d /tmp
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/AbuseIO-master
  - CmdLine:
    - composer install --no-scripts
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: intermediate
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as intermediate
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: description
      Value: '"Docker image for AbuseIO, this image will install the development version
        of AbuseIO 4.2"'
    - Key: vendor
      Value: '"AbuseIO"'
    - Key: product
      Value: '"AbuseIO"'
    - Key: version
      Value: '"develop"'
    - Key: maintainer
      Value: '"joost@abuse.io"'
    Name: label
  - Env:
    - Key: MYSQL_ROOT_PASSWORD
      Value: abuseio
    Name: env
  - Env:
    - Key: MYSQL_DATABASE
      Value: abuseio
    Name: env
  - CmdLine:
    - echo "mysql-server mysql-server/root_password password ${MYSQL_ROOT_PASSWORD}"
      | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mysql-server mysql-server/root_password_again password ${MYSQL_ROOT_PASSWORD}"
      | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y gcc
      make autoconf libc-dev     pkg-config nginx beanstalkd mysql-server mysql-client
      php-cli php-curl php-mysql     php-pear php-pgsql php-intl php-bcmath php-mbstring
      php-fpm php-zip php-dev     libmcrypt-dev git re2c unzip fetchmail supervisor
      rsyslog curl
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=mcrypt.so" > /etc/php/7.2/mods-available/mcrypt.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pear install Mail_mimeDecode
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p     /config     /data     /log     /opt     /opt/setup     /var/log/abuseio     /var/log/php-fpm     /var/run/php     /var/run/mysqld     /scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --system --group --home /opt/abuseio abuseio &&     addgroup www-data
      abuseio
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 775 /var/log/abuseio &&     chown root:abuseio /var/log/abuseio &&     chown
      mysql:mysql /var/run/mysqld &&     chown root:abuseio /log &&     chmod 775
      /data &&     chown abuseio:abuseio /opt/setup
    Name: run
    PrependShell: true
  - Name: user
    User: abuseio
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setuppage/*
    - /opt/setup/
  - Name: user
    User: root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/nginx/abuseio.conf
    - /etc/nginx/sites-available
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/nginx/setup.conf
    - /etc/nginx/sites-available
  - CmdLine:
    - ln -s /etc/nginx/sites-available/setup.conf /etc/nginx/sites-enabled/setup.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/php/docker-vars.ini
    - /etc/php/7.0/mods-available
  - CmdLine:
    - phpenmod docker-vars
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/rsyslog/48-abuseio.conf
    - /etc/rsyslog.d
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/rsyslog/46-fetchmail.conf
    - /etc/rsyslog.d
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/supervisor/docker.conf
    - /etc/supervisor/conf.d
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/boot.sh
    - /scripts
  - CmdLine:
    - chmod 755 /scripts/boot.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/cron/root.cron
    - /tmp
  - CmdLine:
    - crontab -u root /tmp/root.cron
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/fetchmail/fetchmailrc
    - /etc
  - CmdLine:
    - chmod 0600 /etc/fetchmailrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/procmail/procmailrc
    - /etc
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php &&     mv composer.phar /usr/local/bin/composer
      &&     chmod 755 /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /etc/supervisor/supervisord.conf . &&     awk '/\[supervisord\]/{print;print
      "nodaemon=true";next}1'     supervisord.conf > /etc/supervisor/supervisord.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/include/php/20170718/ext/mbstring/libmbfl/mbfl/mbfilter.h . &&    awk
      '/#define MBFL_MBFILTER_H/{print;print "#undef HAVE_MBSTRING\n#define HAVE_MBSTRING
      1";next}1'    mbfilter.h > /usr/include/php/20170718/ext/mbstring/libmbfl/mbfl/mbfilter.h
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i     -e "s/listen = \/run\/php\/php7.2-fpm.sock/listen = 127.0.0.1:9000/g"     -e
      "s/;clear_env = no/clear_env = no/g"     -e "s/www-data/abuseio/g"     /etc/php/7.2/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i     -e 's/module(load="imklog")/#module(load="imklog")/g'     -e 's/$KLogPermitNonKernelFacility
      on/#$KLogPermitNonKernelFacility off/g'     -e 's/$FileOwner syslog/$FileOwner
      root/g'     -e 's/$FileGroup adm/$FileGroup root/g'     -e 's/$FileCreateMode
      0640/$FileCreateMode 0644/g'     -e 's/$PrivDropToUser/#$PrivDropToUser/g'     -e
      's/$PrivDropToGroup/#$PrivDropToGroup/g'     /etc/rsyslog.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -i     -E 's/^(bind-address|log)/#&/' /etc/mysql/mysql.conf.d/mysqld.cnf
      && \techo \"[mysqld]\\nskip-host-cache\\nskip-name-resolve\" > /etc/mysql/conf.d/docker.cnf"
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mailparse &&     echo extension=mailparse.so > /etc/php/7.2/mods-available/mailparse.ini
      &&     phpenmod mailparse && phpenmod mcrypt
    Name: run
    PrependShell: true
  - Chown: ""
    From: intermediate
    Name: copy
    SourcesAndDest:
    - /tmp/AbuseIO-master
    - /opt/abuseio
  - CmdLine:
    - chown -R abuseio:abuseio /opt/abuseio
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/abuseio
  - Name: user
    User: abuseio
  - CmdLine:
    - chmod -R 770 storage/ &&     chmod -R 770 bootstrap/cache/
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i     -e "s/APP_KEY=SomeRandomString/APP_KEY=`date +%D%T%N | md5sum | cut
      -d' ' -f1`/g"     -e "s/APP_ID=DEFAULT/APP_ID=`date +%N%D%T | md5sum | cut -d'
      ' -f1`/g"     -e "s;APP_URL='http://localhost/';APP_URL=;g"     -e "s/DB_DATABASE=abuseio/DB_DATABASE=${MYSQL_DATABASE}/g"     -e
      "s/DB_PASSWORD=/DB_PASSWORD=${MYSQL_ROOT_PASSWORD}/g"     /opt/abuseio/.env.example
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /config
    - /data
    - /log
  - Name: expose
    Ports:
    - "3306"
    - "8000"
  - Name: user
    User: root
  - CmdLine:
    - supervisord
    - -c
    - /etc/supervisor/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
