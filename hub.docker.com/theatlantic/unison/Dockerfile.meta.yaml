MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: The Atlantic Programmers <programmers@theatlantic.com>
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: VCS_REV
    Name: arg
    Value: null
  - Key: UNISON_VERSION
    Name: arg
    Value: 2.51.2
  - Env:
    - Key: VCS_URL
      Value: git@github.com:theatlantic/ollie-docker-containers.git
    Name: env
  - Labels:
    - Key: org.label-schema.name
      Value: '"ollie-unison"'
    - Key: org.label-schema.description
      Value: '"Ollie Unison container"'
    - Key: org.label-schema.vendor
      Value: '"The Atlantic"'
    - Key: org.label-schema.build-date
      Value: '"$BUILD_DATE"'
    - Key: org.label-schema.version
      Value: '"$VERSION"'
    - Key: org.label-schema.vcs-url
      Value: '"$VCS_URL"'
    - Key: org.label-schema.vcs-rev
      Value: '"$VCS_REV"'
    - Key: org.label-schema.license
      Value: '"BSD-2"'
    - Key: org.label-schema.schema-version
      Value: '"1.2"'
    Name: label
  - CmdLine:
    - "apk add --no-cache build-base curl bash supervisor     && apk add --update-cache
      --repository http://dl-4.alpinelinux.org/alpine/edge/testing/ ocaml     && curl
      -L https://github.com/bcpierce00/unison/archive/v$UNISON_VERSION.tar.gz | tar
      zxv -C /tmp     && cd /tmp/unison-${UNISON_VERSION}     && sed -i -e 's/GLIBC_SUPPORT_INOTIFY
      0/GLIBC_SUPPORT_INOTIFY 1/' src/fsmonitor/linux/inotify_stubs.c     && make
      UISTYLE=text NATIVE=true STATIC=true     && cp src/unison src/unison-fsmonitor
      /usr/local/bin     && apk del curl build-base ocaml     && apk add --no-cache
      libgcc libstdc++     && rm -rf /tmp/unison-${UNISON_VERSION}     && apk add
      --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing/ shadow
      \ \t&& apk add --no-cache tzdata"
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '"America/New_York"'
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: UNISON_DIR
      Value: '"/data"'
    - Key: HOME
      Value: '"/root"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - mkdir -p /docker-entrypoint.d  && chmod +x /entrypoint.sh  && mkdir -p /etc/supervisor.conf.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisor.unison.conf
    - /etc/supervisor.conf.d/supervisor.unison.conf
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: 0.3.0
    Name: env
  - Env:
    - Key: DOCKERIZE_URL
      Value: '"https://github.com/jwilder/dockerize/releases/download/v$DOCKERIZE_VERSION/""dockerize-linux-amd64-v$DOCKERIZE_VERSION.tar.gz"'
    Name: env
  - CmdLine:
    - apk add --no-cache curl      && curl -SL "$DOCKERIZE_URL" | tar -xvzC /usr/bin     &&
      apk del curl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /www/logs/unison     && mkdir -p /home/deploy/.unison     && groupadd
      -g 509 deploy     && useradd -Md /home/deploy -u 508 -g 509 -G deploy deploy     &&
      chown -R deploy:deploy /www     && chown -R deploy:deploy /home/deploy
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint_custom.sh
    - /docker-entrypoint.d/entrypoint_custom.sh
  - Name: volume
    Volumes:
    - /home/deploy/.unison
  - Env:
    - Key: UNISONLOCALHOSTNAME
      Value: ollie_unison
    Name: env
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
