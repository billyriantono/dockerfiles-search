MetaArgs: null
Stages:
- BaseName: php:7.2-apache
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: APACHE_DOCROOT
      Value: /var/www/html
    Name: env
  - Env:
    - Key: APACHE_RUN_USER
      Value: www-data
    Name: env
  - Env:
    - Key: APACHE_RUN_GROUP
      Value: www-data
    Name: env
  - Env:
    - Key: APACHE_REQUEST_WORKERS
      Value: "150"
    Name: env
  - Env:
    - Key: SENDMAIL_PATH
      Value: /bin/true
    Name: env
  - Env:
    - Key: MEMORY_LIMIT
      Value: 256m
    Name: env
  - Env:
    - Key: XDEBUG_REMOTE_HOST
      Value: host.docker.internal
    Name: env
  - Env:
    - Key: XDEBUG_IDEKEY
      Value: PHPSTORM
    Name: env
  - Env:
    - Key: PATH
      Value: /var/www/mass.local/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends       bzip2 libbz2-dev       libssl-dev       libfreetype6-dev
      libjpeg62-turbo-dev libpng-dev       libicu-dev       libxml2-dev       libldap2-dev       libmcrypt-dev       libz-dev
      libmemcached-dev       mariadb-client       wget       rsync       git       openssh-client       jpegoptim       optipng       pngquant       imagemagick       libmagickwand-dev       libyaml-dev     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     &&
      docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu     && docker-php-ext-install
      -j$(nproc)       bcmath       bz2       calendar       exif       ftp       gd       gettext       intl       ldap       mysqli       opcache       pcntl       pdo_mysql       shmop       soap       sockets       sysvmsg       sysvsem       sysvshm       zip     &&
      pecl install apcu memcached raphf propro yaml imagick     && docker-php-ext-enable
      apcu memcached raphf propro yaml imagick     && pecl install pecl_http-3.1.0     &&
      docker-php-ext-enable http     && printf "upload_max_filesize = 128M\npost_max_size
      = 128M" > $PHP_INI_DIR/conf.d/00-max_filesize.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite headers expires   && sed -i "/User www-data/c\User \$\{APACHE_RUN_USER\}"
      /etc/apache2/apache2.conf   && sed -i "/Group www-data/c\Group \$\{APACHE_RUN_GROUP\}"
      /etc/apache2/apache2.conf   && sed -i "/DocumentRoot \/var\/www\/html/c\\\tDocumentRoot
      \$\{APACHE_DOCROOT\}" /etc/apache2/sites-enabled/000-default.conf   && adduser
      --uid 1000 --gecos 'My OSX User' --disabled-password osxuser
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/bin/composer   &&
      mkdir /usr/share/composer   && cd /usr/share/composer   && composer init --no-interaction
      && composer config bin-dir /usr/local/bin   && rm -r /root/.composer/cache   &&
      curl -L https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-linux-amd64-v0.6.0.tar.gz
      | tar -C /usr/local/bin -xzv   && chmod +x /usr/local/bin/dockerize   && ssh-keyscan
      github.com >> /etc/ssh/ssh_known_hosts   && git config --global core.safecrlf
      false
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/mpm_prefork.conf
    - /etc/apache2/mods-enabled/mpm_prefork.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/php-overrides.ini
    - $PHP_INI_DIR/conf.d/zz-overrides.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin/*
    - /usr/local/bin/
  - CmdLine:
    - apache2-foreground-enhanced
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update   && apt-get install -y apt-transport-https lsb-release gnupg
      > /dev/null 2>&1   && curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      | apt-key add -   && echo 'deb https://deb.nodesource.com/node_10.x jessie main'
      > /etc/apt/sources.list.d/nodesource.list   && echo 'deb-src https://deb.nodesource.com/node_10.x
      jessie main' >> /etc/apt/sources.list.d/nodesource.list   && apt-get update   &&
      apt-get install -y nodejs   && npm install -g yarn   && npm cache clean --force   &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OL https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64   &&
      mv mhsendmail_linux_amd64 /usr/bin/mhsendmail   && chmod +x /usr/bin/mhsendmail
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug-2.6.1   && docker-php-ext-enable xdebug   && echo "xdebug.remote_enable=on\nxdebug.remote_autostart=on"
      > $PHP_INI_DIR/conf.d/xdebug.ini   && version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")   &&
      curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version   &&
      tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp   && mv /tmp/blackfire-*.so $(php
      -r "echo ini_get('extension_dir');")/blackfire.so   && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n"
      > $PHP_INI_DIR/conf.d/blackfire.ini   && mkdir -p /tmp/blackfire   && curl -A
      "Docker" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 |
      tar zxp -C /tmp/blackfire   && mv /tmp/blackfire/blackfire /usr/bin/blackfire   &&
      rm -Rf /tmp/blackfire
    Name: run
    PrependShell: true
  From:
    Image: php:7.2-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-apache
