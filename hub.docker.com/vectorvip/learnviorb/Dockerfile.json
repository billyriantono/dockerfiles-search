{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-devel-ubuntu14.04",
      "SourceCode": "FROM nvidia/cuda:8.0-devel-ubuntu14.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-devel-ubuntu14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_USER",
              "Value": "your_username"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "1002"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GID",
              "Value": "1003"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ROS_DISTRO",
              "Value": "indigo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP",
              "Value": "\"glxgears\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.ros.org/ros/ubuntu trusty main\" \u003e /etc/apt/sources.list.d/ros-latest.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026     apt-get -qq upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y     mesa-utils     google-perftools     libgoogle-perftools-dev     sudo     libglew-dev     cmake     libpython2.7-dev     libav-tools     libavcodec-dev     libavutil-dev     libavformat-dev     libswscale-dev     libjpeg-dev     libpng12-dev     libtiff5-dev     libopenexr-dev     git-core     libusb-1.0-0-dev     libblas-dev     liblapack-dev     qt5-default     libsuitesparse-dev     libboost-all-dev     build-essential     cmake     wget     unzip     git     libgtk2.0-dev     pkg-config     libavcodec-dev     libavformat-dev     libswscale-dev     python-dev     python-numpy     libtbb2     libtbb-dev     libjpeg-dev     libpng-dev     libtiff-dev     libjasper-dev     libdc1394-22-dev     libcanberra-gtk-module     libdc1394-22     python-rosdep     python-rosinstall     python-vcstools     ros-indigo-desktop-full"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rosdep init     \u0026\u0026 rosdep update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid ${GID} ${DOCKER_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export uid=${UID} gid=${GID} \u0026\u0026     mkdir -p /home/${DOCKER_USER} \u0026\u0026     echo \"${DOCKER_USER}:x:${uid}:${gid}:Teera,,,:/home/${DOCKER_USER}:/bin/bash\" \u003e\u003e /etc/passwd \u0026\u0026     echo \"${DOCKER_USER}:x:${uid}:\" \u003e\u003e /etc/group"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${DOCKER_USER} ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/${DOCKER_USER} \u0026\u0026     chmod 0440 /etc/sudoers.d/${DOCKER_USER} \u0026\u0026     chown ${uid}:${gid} -R /home/${DOCKER_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.13/opencv-2.4.13.zip \u0026\u0026     unzip opencv-2.4.13.zip \u0026\u0026     cd opencv-2.4.13/ \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_PYTHON_SUPPORT=ON -D WITH_XINE=ON -D WITH_TBB=ON .. \u0026\u0026     make -j$(nproc) \u0026\u0026 make install -j$(nproc) \u0026\u0026     cd ../.. \u0026\u0026     rm opencv-2.4.13.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ktossell/libuvc \u0026\u0026     cd libuvc \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake .. \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/stevenlovegrove/Pangolin.git \u0026\u0026     cd Pangolin \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake .. \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://bitbucket.org/eigen/eigen/get/3.2.10.zip \u0026\u0026     unzip 3.2.10.zip \u0026\u0026     cd eigen-eigen-b9cd8366d4e8 \u0026\u0026     mkdir builddir \u0026\u0026     cd builddir \u0026\u0026     cmake .. \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/cuda/lib64/libcudart.so /usr/lib/libcudart.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/cuda/lib64/libcudart.a /usr/lib/libcudart.a"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/cuda/lib64/libcudart.so /usr/lib/libopencv_dep_cudart.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/home/${DOCKER_USER}/LearnVIORB"
          ]
        },
        {
          "Env": [
            {
              "Key": "ROS_PACKAGE_PATH",
              "Value": "/home/${DOCKER_USER}/LearnVIORB/Examples/ROS/ORB_VIO"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /home/${DOCKER_USER}/LearnVIORB/Examples/ROS/ORB_VIO /opt/ros/${ROS_DISTRO}/share/ORB_VIO"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source /opt/ros/$ROS_DISTRO/setup.bash ;                  cd /home/${DOCKER_USER}/LearnVIORB ;                  ./build.sh\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${DOCKER_USER}"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/${DOCKER_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/${DOCKER_USER}"
        },
        {
          "CmdLine": [
            "sudo chown ${UID}:${GID} -R /home/${DOCKER_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run_rosbag",
            "/home/${DOCKER_USER}/run_rosbag"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run",
            "/home/${DOCKER_USER}/run"
          ]
        },
        {
          "CmdLine": [
            "/home/${DOCKER_USER}/run"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}