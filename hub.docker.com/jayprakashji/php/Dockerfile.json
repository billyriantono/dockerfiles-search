{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-apache",
      "SourceCode": "FROM php:7.3-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.3-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -qq      \u0026\u0026 apt-get install -y -qq --no-install-recommends unzip     \u0026\u0026 apt-get install -y -qq --no-install-recommends libnss3 libgconf-2-4     \u0026\u0026 apt-get install -y -qq --no-install-recommends libfreetype6-dev libjpeg62-turbo-dev libpng-dev     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv     \u0026\u0026 apt-get install -y -qq --no-install-recommends libicu-dev     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install mysqli pdo_mysql     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 apt-get install -y -qq --no-install-recommends libxml2-dev     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 apt-get install -y -qq --no-install-recommends libzip-dev     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 apt-get install -y -qq --no-install-recommends git     \u0026\u0026 apt-get install -y -qq --no-install-recommends libxslt-dev     \u0026\u0026 docker-php-ext-install xsl     \u0026\u0026 docker-php-ext-install bcmath     \u0026\u0026 apt-get install -y -qq --no-install-recommends libldap2-dev     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu     \u0026\u0026 docker-php-ext-install ldap     \u0026\u0026 pecl install redis     \u0026\u0026 docker-php-ext-enable redis     \u0026\u0026 apt-get install -y -qq --no-install-recommends libmemcached-dev zlib1g-dev     \u0026\u0026 pecl install memcached     \u0026\u0026 docker-php-ext-enable memcached     \u0026\u0026 pecl install apcu     \u0026\u0026 pecl install apcu_bc     \u0026\u0026 docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini     \u0026\u0026 docker-php-ext-enable apc --ini-name 20-docker-php-ext-apc.ini     \u0026\u0026 apt-get install -y -qq --no-install-recommends cron     \u0026\u0026 apt-get install -y -qq --no-install-recommends supervisor     \u0026\u0026 mkdir -p /var/log/supervisor     \u0026\u0026 mkdir -p /etc/supervisor/conf.d         \u0026\u0026 a2enmod rewrite     \u0026\u0026 apt-get install -y -qq --no-install-recommends iproute2      \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 truncate -s 0 /var/log/*log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update -qq     \u0026\u0026 apt install -y -qq --no-install-recommends wget xz-utils libxrender1 fontconfig libjpeg62-turbo libxext6  xfonts-base xfonts-75dpi     \u0026\u0026 wget --quiet https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.3/wkhtmltox-0.12.3_linux-generic-amd64.tar.xz     \u0026\u0026 tar vxf wkhtmltox-0.12.3_linux-generic-amd64.tar.xz     \u0026\u0026 cp wkhtmltox/bin/wk* /usr/bin/     \u0026\u0026 rm wkhtmltox-0.12.3_linux-generic-amd64.tar.xz     \u0026\u0026 rm -rf wkhtmltox     \u0026\u0026 apt-get remove -y xz-utils     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 truncate -s 0 /var/log/*log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_TIMEZONE",
              "Value": "Europe/Bratislava"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOC_ROOT",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./999-php.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_ENABLE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pecl install -o -f xdebug     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./99-xdebug.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key -out /etc/ssl/certs/ssl-cert-snakeoil.pem -subj \"/C=AT/ST=Vienna/L=Vienna/O=Security/OU=Development/CN=example.com\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2ensite default-ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisor.conf",
            "/etc/supervisor.conf"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -qq     \u0026\u0026 apt-get install -y -qq --no-install-recommends     less     vim     git     mc     openssh-client     nmap     htop     curl     man     wget     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 truncate -s 0 /var/log/*log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./index.php",
            "/var/www/html/index.php"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/bin/sh",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}