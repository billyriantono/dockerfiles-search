{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jan Garaj \u003cinfo@monitoringartist.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "ZABBIX_VERSION",
              "Value": "tags/3.0.7"
            },
            {
              "Key": "ZS_enabled",
              "Value": "true"
            },
            {
              "Key": "ZA_enabled",
              "Value": "true"
            },
            {
              "Key": "ZW_enabled",
              "Value": "true"
            },
            {
              "Key": "ZJ_enabled",
              "Value": "false"
            },
            {
              "Key": "ZP_enabled",
              "Value": "false"
            },
            {
              "Key": "SNMPTRAP_enabled",
              "Value": "false"
            },
            {
              "Key": "STATUS_PAGE_ALLOWED_IP",
              "Value": "127.0.0.1"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/jre"
            },
            {
              "Key": "JAVA",
              "Value": "/usr/bin/java"
            },
            {
              "Key": "PHP_date_timezone",
              "Value": "UTC"
            },
            {
              "Key": "PHP_max_execution_time",
              "Value": "300"
            },
            {
              "Key": "PHP_max_input_time",
              "Value": "300"
            },
            {
              "Key": "PHP_memory_limit",
              "Value": "128M"
            },
            {
              "Key": "PHP_error_reporting",
              "Value": "E_ALL"
            },
            {
              "Key": "ZS_LogType",
              "Value": "console"
            },
            {
              "Key": "ZS_PidFile",
              "Value": "/var/run/zabbix_server.pid"
            },
            {
              "Key": "ZS_User",
              "Value": "zabbix"
            },
            {
              "Key": "ZS_DBHost",
              "Value": "zabbix.db"
            },
            {
              "Key": "ZS_DBName",
              "Value": "zabbix"
            },
            {
              "Key": "ZS_DBUser",
              "Value": "zabbix"
            },
            {
              "Key": "ZS_DBPassword",
              "Value": "zabbix"
            },
            {
              "Key": "ZS_DBPort",
              "Value": "3306"
            },
            {
              "Key": "ZS_PidFile",
              "Value": "/tmp/zabbix_server.pid"
            },
            {
              "Key": "ZS_AlertScriptsPath",
              "Value": "/usr/local/share/zabbix/alertscripts"
            },
            {
              "Key": "ZS_ExternalScripts",
              "Value": "/usr/local/share/zabbix/externalscripts"
            },
            {
              "Key": "ZS_SSLCertLocation",
              "Value": "/usr/local/share/zabbix/ssl/certs"
            },
            {
              "Key": "ZS_SSLKeyLocation",
              "Value": "/usr/local/share/zabbix/ssl/keys"
            },
            {
              "Key": "ZS_LoadModulePath",
              "Value": "/usr/lib/zabbix/modules"
            },
            {
              "Key": "ZW_ZBX_SERVER",
              "Value": "localhost"
            },
            {
              "Key": "ZW_ZBX_SERVER_PORT",
              "Value": "10051"
            },
            {
              "Key": "ZW_ZBX_SERVER_NAME",
              "Value": "\"Zabbix Server\""
            },
            {
              "Key": "ZA_LogType",
              "Value": "console"
            },
            {
              "Key": "ZA_Hostname",
              "Value": "\"Zabbix Server\""
            },
            {
              "Key": "ZA_User",
              "Value": "zabbix"
            },
            {
              "Key": "ZA_PidFile",
              "Value": "/tmp/zabbix_agentd.pid"
            },
            {
              "Key": "ZA_Server",
              "Value": "127.0.0.1"
            },
            {
              "Key": "ZA_ServerActive",
              "Value": "127.0.0.1"
            },
            {
              "Key": "ZJ_LISTEN_IP",
              "Value": "0.0.0.0"
            },
            {
              "Key": "ZJ_LISTEN_PORT",
              "Value": "10052"
            },
            {
              "Key": "ZJ_PID_FILE",
              "Value": "/tmp/zabbix_java.pid"
            },
            {
              "Key": "ZJ_START_POLLERS",
              "Value": "5"
            },
            {
              "Key": "ZJ_TIMEOUT",
              "Value": "3"
            },
            {
              "Key": "ZJ_LogLevel",
              "Value": "error"
            },
            {
              "Key": "ZJ_TCP_TIMEOUT",
              "Value": "3000"
            },
            {
              "Key": "ZP_LogType",
              "Value": "console"
            },
            {
              "Key": "ZP_DBHost",
              "Value": "zabbixproxy.db"
            },
            {
              "Key": "ZP_DBName",
              "Value": "zabbix"
            },
            {
              "Key": "ZP_DBUser",
              "Value": "zabbix"
            },
            {
              "Key": "ZP_DBPassword",
              "Value": "zabbix"
            },
            {
              "Key": "ZP_User",
              "Value": "zabbix"
            },
            {
              "Key": "XXL_searcher",
              "Value": "true"
            },
            {
              "Key": "XXL_updatechecker",
              "Value": "true"
            },
            {
              "Key": "XXL_zapix",
              "Value": "false"
            },
            {
              "Key": "XXL_grapher",
              "Value": "false"
            },
            {
              "Key": "XXL_api",
              "Value": "true"
            },
            {
              "Key": "XXL_apiuser",
              "Value": "Admin"
            },
            {
              "Key": "XXL_apipass",
              "Value": "zabbix"
            },
            {
              "Key": "XXL_analytics",
              "Value": "true"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum clean all \u0026\u0026   yum update -y \u0026\u0026   yum install -y epel-release \u0026\u0026   sed -i -e \"\\|^https://\\\"http://|d\" /etc/yum.repos.d/epel.repo \u0026\u0026   yum clean all \u0026\u0026   yum install -y supervisor \u0026\u0026   yum install -y http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm \u0026\u0026   yum install -y nginx inotify-tools \u0026\u0026   `# Rename nginx:nginx user/group to www:www, also set uid:gid to 80:80 (just to make it nice)`   groupmod --gid 80 --new-name www nginx \u0026\u0026   usermod --uid 80 --home /data/www --gid 80 --login www --shell /bin/bash --comment www nginx \u0026\u0026   `# Clean-up /etc/nginx/ directory from all not needed stuff...`   rm -rf /etc/nginx/*.d /etc/nginx/*_params \u0026\u0026   `# Prepare dummy SSL certificates`   mkdir -p /etc/nginx/ssl \u0026\u0026   openssl genrsa -out /etc/nginx/ssl/dummy.key 2048 \u0026\u0026   openssl req -new -key /etc/nginx/ssl/dummy.key -out /etc/nginx/ssl/dummy.csr -subj \"/C=GB/L=London/O=Company Ltd/CN=zabbix-docker\" \u0026\u0026   openssl x509 -req -days 3650 -in /etc/nginx/ssl/dummy.csr -signkey /etc/nginx/ssl/dummy.key -out /etc/nginx/ssl/dummy.crt \u0026\u0026   yum install -y http://rpms.famillecollet.com/enterprise/remi-release-7.rpm \u0026\u0026   yum install -y --enablerepo=remi-php56 php-fpm        php-gd php-bcmath php-ctype php-xml php-xmlreader php-xmlwriter        php-session php-net-socket php-mbstring php-gettext php-cli        php-mysqlnd php-opcache php-pdo php-snmp php-ldap \u0026\u0026   yum clean all \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files-base",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container-files-zabbix",
            "/"
          ]
        },
        {
          "CmdLine": [
            "yum clean all \u0026\u0026   yum update -y \u0026\u0026   yum install -y tar svn gcc automake make nmap traceroute iptstate wget               net-snmp-devel net-snmp-libs net-snmp net-snmp-perl iksemel               net-snmp-python net-snmp-utils java-1.8.0-openjdk               java-1.8.0-openjdk-devel mariadb-devel libxml2-devel gettext               libcurl-devel OpenIPMI-devel mysql iksemel-devel libssh2-devel               unixODBC unixODBC-devel mysql-connector-odbc postgresql-odbc               openldap-devel telnet net-tools snmptt sudo rubygems ruby-devel jq               openssh-clients python-httplib2 python-simplejson               libevent-devel openldap-clients \u0026\u0026  `# reinstall glibc for locales`   yum -y -q reinstall glibc-common \u0026\u0026   cp /usr/local/etc/zabbix_agentd.conf /tmp \u0026\u0026   svn co svn://svn.zabbix.com/${ZABBIX_VERSION} /usr/local/src/zabbix \u0026\u0026   cd /usr/local/src/zabbix \u0026\u0026   DATE=`date +%Y-%m-%d` \u0026\u0026   sed -i \"s/ZABBIX_VERSION.*'\\(.*\\)'/ZABBIX_VERSION', '\\1 ($DATE)'/g\" frontends/php/include/defines.inc.php \u0026\u0026   sed -i \"s/ZABBIX_VERSION_RC.*\\\"\\(.*\\)\\\"/ZABBIX_VERSION_RC \\\"\\1 (${DATE})\\\"/g\" include/version.h \u0026\u0026   sed -i \"s/String VERSION =.*\\\"\\(.*\\)\\\"/String VERSION = \\\"\\1 (${DATE})\\\"/g\" src/zabbix_java/src/com/zabbix/gateway/GeneralInformation.java \u0026\u0026   zabbix_revision=$(svn info svn://svn.zabbix.com/${ZABBIX_VERSION} |grep \"Last Changed Rev\"|awk '{print $4;}') \u0026\u0026   sed -i \"s/{ZABBIX_REVISION}/$zabbix_revision/g\" include/version.h \u0026\u0026   ./bootstrap.sh \u0026\u0026   ./configure --enable-server --enable-agent --with-mysql --enable-java               --with-net-snmp --with-libcurl --with-libxml2 --with-openipmi               --enable-ipv6 --with-jabber --with-openssl --with-ssh2               --enable-proxy --with-ldap --with-unixodbc \u0026\u0026   make -j\"$(nproc)\" dbschema \u0026\u0026   gem install sass \u0026\u0026   make css \u0026\u0026   make -j\"$(nproc)\" install \u0026\u0026   mv /health/ /usr/local/src/zabbix/frontends/php/ \u0026\u0026   cp /usr/local/etc/web/zabbix.conf.php /usr/local/src/zabbix/frontends/php/conf/ \u0026\u0026   wget https://github.com/schweikert/fping/archive/3.10.tar.gz \u0026\u0026   tar -xvf 3.10.tar.gz \u0026\u0026   cd fping-3.10/ \u0026\u0026   ./autogen.sh \u0026\u0026   ./configure --prefix=/usr --enable-ipv6 --enable-ipv4 \u0026\u0026   make -j\"$(nproc)\" \u0026\u0026   make -j\"$(nproc)\" install \u0026\u0026   setcap cap_net_raw+ep /usr/sbin/fping || echo 'Warning: setcap cap_net_raw+ep /usr/sbin/fping' \u0026\u0026   setcap cap_net_raw+ep /usr/sbin/fping6 || echo 'Warning: setcap cap_net_raw+ep /usr/sbin/fping6' \u0026\u0026   chmod 4710 /usr/sbin/fping \u0026\u0026   chmod 4710 /usr/sbin/fping6 \u0026\u0026   cd .. \u0026\u0026   cp -f /tmp/zabbix_agentd.conf /usr/local/etc/ \u0026\u0026   rm -rf fping-3.10 \u0026\u0026   rm -rf 3.10.tar.gz \u0026\u0026   cd /usr/local/src/zabbix/frontends/php \u0026\u0026   locale/make_mo.sh \u0026\u0026   yum autoremove -y gettext svn gcc automake mariadb-devel                     java-1.8.0-openjdk-devel libxml2-devel libcurl-devel                     OpenIPMI-devel iksemel-devel rubygems ruby-devel kernel-headers \u0026\u0026   yum install -y OpenIPMI-libs \u0026\u0026   chmod +x /config/bootstrap.sh \u0026\u0026   chmod +x /config/ds.sh \u0026\u0026   chmod +x /usr/local/src/zabbix/misc/snmptrap/zabbix_trap_receiver.pl \u0026\u0026   chmod +x /usr/share/snmptt/snmptthandler-embedded \u0026\u0026   sed -i -e \"s/Defaults    requiretty.*/ #Defaults    requiretty/g\" /etc/sudoers \u0026\u0026   yum clean all \u0026\u0026   mkdir -p /usr/local/share/ssl/certs \u0026\u0026   mkdir -p /usr/local/share/ssl/keys \u0026\u0026   mkdir -p /usr/lib/zabbix/modules \u0026\u0026   mkdir -p /etc/zabbix/snmp/mibs \u0026\u0026   rm -rf /usr/local/src/zabbix/[a,A,b,c,C,i,I,m,M,n,N,r,R,s,t,u,r,\\.]* /usr/local/src/zabbix/depcomp /usr/local/src/zabbix/.svn \u0026\u0026   rm -rf /usr/local/src/zabbix/database/[i,M,o,p,s]* \u0026\u0026   rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container-files-zabbix-xxl",
            "/"
          ]
        },
        {
          "CmdLine": [
            "yum -y -q reinstall glibc-common \u0026\u0026   cd /tmp \u0026\u0026   yumdownloader glibc-common \u0026\u0026   rpm2cpio glibc-common*.rpm | cpio -idmv \u0026\u0026   rm -vf /usr/lib/locale/locale-archive.tmpl \u0026\u0026   cp -vf ./usr/lib/locale/locale-archive.tmpl /usr/lib/locale/ \u0026\u0026   build-locale-archive \u0026\u0026   rm -rf /tmp/* \u0026\u0026   yum install -y ipa-pgothic-fonts python-boto python-pip \u0026\u0026   cp /usr/share/fonts/ipa-pgothic/ipagp.ttf /usr/local/src/zabbix/frontends/php/fonts \u0026\u0026   pip install pyzabbix \u0026\u0026   yum autoremove -y ipa-pgothic-fonts python-pip \u0026\u0026   yum clean all \u0026\u0026   sed -i \"s/ZABBIX_VERSION.*'\\(.*\\)'/ZABBIX_VERSION', '\\1 XXL'/g\" /usr/local/src/zabbix/frontends/php/include/defines.inc.php \u0026\u0026   grep 'XXL' /usr/local/src/zabbix/frontends/php/include/defines.inc.php \u0026\u0026   sed -i \"s#]))-\u003eaddClass(ZBX_STYLE_FOOTER);#,' / ',(new CLink('Monitoring Artist Ltd', 'http://www.monitoringartist.com'))-\u003eaddClass(ZBX_STYLE_GREY)-\u003eaddClass(ZBX_STYLE_LINK_ALT)-\u003esetAttribute('target', '_blank'),]))-\u003eaddClass(ZBX_STYLE_FOOTER);#g\" /usr/local/src/zabbix/frontends/php/include/html.inc.php \u0026\u0026   grep 'www.monitoringartist.com' /usr/local/src/zabbix/frontends/php/include/html.inc.php \u0026\u0026   sed -i \"s/(new CDiv())-\u003eaddClass(ZBX_STYLE_SIGNIN_LOGO),/(new CDiv())-\u003eaddClass(ZBX_STYLE_SIGNIN_LOGO),(new CDiv())-\u003eaddClass(ZBX_STYLE_CENTER)-\u003eaddItem((new CTag('h1', true, _('Zabbix XXL')))-\u003eaddClass(ZBX_STYLE_BLUE))-\u003eaddItem((new CLink(_('Maintained by Monitoring Artist'), 'http:\\/\\/www.monitoringartist.com'))-\u003esetTarget('_blank')-\u003eaddClass(ZBX_STYLE_GREY)),/g\" /usr/local/src/zabbix/frontends/php/include/views/general.login.php \u0026\u0026   grep 'www.monitoringartist.com' /usr/local/src/zabbix/frontends/php/include/views/general.login.php \u0026\u0026   sed -i \"s#echo '\u003c/body\u003e\u003c/html\u003e';#echo \\\"\u003cscript\u003e(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-72810204-2','auto');ga('send','pageview');\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e\\\";#g\" /usr/local/src/zabbix/frontends/php/include/page_footer.php \u0026\u0026   grep 'UA-72810204-2' /usr/local/src/zabbix/frontends/php/include/page_footer.php \u0026\u0026   sed -i \"s#echo '\u003c/body\u003e\u003c/html\u003e';#echo \\\"\u003cscript\u003e(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-72810204-2','auto');ga('send','pageview');\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e\\\";#g\" /usr/local/src/zabbix/frontends/php/app/views/layout.htmlpage.php \u0026\u0026   grep 'UA-72810204-2' /usr/local/src/zabbix/frontends/php/app/views/layout.htmlpage.php \u0026\u0026   ZVERSION=$(zabbix_agentd -V | grep ^zabbix_agentd | awk -F'\\\\(Zabbix\\\\) ' '{print $2}') \u0026\u0026   sed -i \"s#^var xxlCurrentVersion =.*#var xxlCurrentVersion = \\\"$ZVERSION\\\";#\" /usr/local/src/zabbix/frontends/php/updatechecker/updatechecker.js \u0026\u0026   grep \"$ZVERSION\" /usr/local/src/zabbix/frontends/php/updatechecker/updatechecker.js \u0026\u0026   sed -i \"s#.*\u003c/body\u003e\u003c/html\u003e.*#echo \\\"\u003cscript type='text/javascript' src='updatechecker/updatechecker.js'\u003e\u003c/script\u003e\\\";\\n\u0026#\" /usr/local/src/zabbix/frontends/php/include/page_footer.php \u0026\u0026   grep 'updatechecker.js' /usr/local/src/zabbix/frontends/php/include/page_footer.php \u0026\u0026   sed -i \"s#\u003c/body\u003e\u003c/html\u003e#\u003cscript type='text/javascript' src='updatechecker/updatechecker.js'\u003e\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e#g\" /usr/local/src/zabbix/frontends/php/app/views/layout.htmlpage.php \u0026\u0026   grep 'updatechecker.js' /usr/local/src/zabbix/frontends/php/app/views/layout.htmlpage.php \u0026\u0026   sed -i \"s#'login' =\u003e \\[#'xxl' =\u003e \\n[\\n'label' =\u003e _('XXL extensions'),\\n'user_type' =\u003e USER_TYPE_SUPER_ADMIN,\\n'default_page_id' =\u003e 0,\\n'pages' =\u003e [\\n['url' =\u003e 'searcher.php','label' =\u003e _('Searcher'),],\\n['url' =\u003e 'zapix.php','label' =\u003e _('Zapix'),],\\n['url' =\u003e 'grapher.php','label' =\u003e _('Grapher'),],\\n['url' =\u003e 'about.php','label' =\u003e _('About'),]\\n]],\\n'login' =\u003e [#g\" /usr/local/src/zabbix/frontends/php/include/menu.inc.php \u0026\u0026   grep 'XXL extensions' /usr/local/src/zabbix/frontends/php/include/menu.inc.php \u0026\u0026   sed -i \"s#'admin': 0},# 'admin': 0, 'xxl': 0},#g\" /usr/local/src/zabbix/frontends/php/js/main.js \u0026\u0026   grep \"'xxl': 0}\" /usr/local/src/zabbix/frontends/php/js/main.js \u0026\u0026   rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/config/bootstrap.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/custom-config",
            "/usr/local/share/zabbix/alertscripts",
            "/usr/local/share/zabbix/externalscripts",
            "/usr/local/share/zabbix/ssl/certs",
            "/usr/local/share/zabbix/ssl/keys",
            "/usr/lib/zabbix/modules",
            "/usr/share/snmp/mibs",
            "/etc/snmp",
            "/etc/openldap/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "10051/TCP",
            "10052/TCP",
            "162/UDP",
            "80/TCP"
          ]
        }
      ]
    }
  ]
}