MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DAEMON_ORIGIN
      Value: https://github.com/SatoshiCoin-Crypto/SatoshiCoin-rebrand/releases/download/v1.0.2.1/ubuntu16.04-daemon.zip
    Name: env
  - Env:
    - Key: DAEMON_COMMANDS
      Value: http://51.68.212.221/download/commands.zip
    Name: env
  - Env:
    - Key: BOOTSTRAP
      Value: http://51.68.212.221/download/bootstrapV3.zip
    Name: env
  - Env:
    - Key: SOURCE_LOCAL_ROOT
      Value: /root/satc
    Name: env
  - Env:
    - Key: DAEMON_NAME
      Value: satcd
    Name: env
  - Env:
    - Key: CLI_NAME
      Value: satc-cli
    Name: env
  - Env:
    - Key: CONF_DIR
      Value: /root/.satc
    Name: env
  - Env:
    - Key: CONF_FILE
      Value: satc.conf
    Name: env
  - Env:
    - Key: RPC_USER
      Value: docker_rpc_user
    Name: env
  - Env:
    - Key: RPC_PASS
      Value: docker_rpc_password
    Name: env
  - Env:
    - Key: RPC_ALLOW_IP
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: RPC_PORT
      Value: "3878"
    Name: env
  - Env:
    - Key: PORT
      Value: "3877"
    Name: env
  - Name: workdir
    Path: /root
  - CmdLine:
    - apt-get update     && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends     build-essential     libssl-dev     libtool     openssl     pkg-config     wget     python-dev     autotools-dev     software-properties-common     autoconf     automake     libzmq3-dev     libminiupnpc-dev     libevent-dev     libgmp-dev     unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends     libboost-chrono-dev     libboost-filesystem-dev     libboost-program-options-dev     libboost-system-dev     libboost-test-dev     libboost-thread-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:bitcoin/bitcoin     && apt-get update     && apt-get
      install -y --no-install-recommends libdb4.8-dev libdb4.8++-dev     && apt-get
      install -y --no-install-recommends        ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $SOURCE_LOCAL_ROOT     && cd $SOURCE_LOCAL_ROOT     && wget $DAEMON_ORIGIN     &&
      wget $DAEMON_COMMANDS     && unzip -o ubuntu16.04-daemon.zip     && unzip -o
      commands.zip     && mv $DAEMON_NAME /usr/local/bin/$DAEMON_NAME     && mv $CLI_NAME
      /usr/local/bin/$CLI_NAME     && chmod +x /usr/local/bin/satc*     && chmod +x
      blocks wallet start stop restart status commands     && mv blocks wallet start
      stop restart status commands /usr/local/bin/     && rm ubuntu16.04-daemon.zip     &&
      rm commands.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && mkdir -p $CONF_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101'
      >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert
      --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl
      \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io'
      > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm
      -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
      || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke
      { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&&
      echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean
      \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages
      \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order::
      \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant
      \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /run/systemd && echo 'docker' > /run/systemd/container
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - $PORT
  - CmdLine:
    - 'exec /bin/bash -c "$DAEMON_NAME -daemon & trap : TERM INT; tail -f /dev/null
      & wait"'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
