{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos6",
      "SourceCode": "FROM centos:centos6",
      "Platform": "",
      "From": {
        "Image": "centos:centos6"
      },
      "Commands": [
        {
          "Maintainer": "Yunkyung Lee \u003cyunkyung@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum install -y httpd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y php php-devel php-pear php-mysql php-mbstring php-gd php-imap php-odbc php-xmlrpc php-xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y gd gd-devel php-gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/zlib.output_compression = Off/zlib.output_compression = On/g' /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/upload_max_filesize = 2M/upload_max_filesize = 10M/g' /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/post_max_size = 8M/post_max_size = 15M/g' /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/memory_limit = 128M/memory_limit = -1/g' /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FFMPEG_VERSION",
              "Value": "2.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MPLAYER_VERSION",
              "Value": "1.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YASM_VERSION",
              "Value": "1.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LAME_VERSION",
              "Value": "3.99.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FAAC_VERSION",
              "Value": "1.28"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XVID_VERSION",
              "Value": "1.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FDKAAC_VERSION",
              "Value": "0.1.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXIFTOOL_VERSION",
              "Value": "9.75"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WPT_VERSION",
              "Value": "2.18"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SRC",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${SRC}/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "${SRC}/lib/pkgconfig"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash -c 'set -euo pipefail'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y autoconf automake gcc gcc-c++ git libtool make nasm pkgconfig zlib-devel tar curl wget bzip2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -Os http://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz \u0026\u0026               tar xzvf yasm-${YASM_VERSION}.tar.gz \u0026\u0026               cd yasm-${YASM_VERSION} \u0026\u0026               ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026 \t      curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \u0026\u0026\t\t      tar xvf last_x264.tar.bz2 \u0026\u0026\t              cd x264* \u0026\u0026               ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" --enable-static \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean\u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -L -Os http://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz  \u0026\u0026               tar xzvf lame-${LAME_VERSION}.tar.gz  \u0026\u0026               cd lame-${LAME_VERSION} \u0026\u0026               ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-shared --enable-nasm \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean\u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -L -Os http://downloads.sourceforge.net/faac/faac-${FAAC_VERSION}.tar.gz  \u0026\u0026               tar xzvf faac-${FAAC_VERSION}.tar.gz  \u0026\u0026               cd faac-${FAAC_VERSION} \u0026\u0026               sed -i '126d' common/mp4v2/mpeg4ip.h \u0026\u0026               ./bootstrap \u0026\u0026               ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \u0026\u0026               make \u0026\u0026               make install \u0026\u0026\t              rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -L -Os  http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz  \u0026\u0026               tar xzvf xvidcore-${XVID_VERSION}.tar.gz \u0026\u0026               cd xvidcore/build/generic \u0026\u0026               ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \u0026\u0026               make \u0026\u0026               make install\u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -s https://codeload.github.com/mstorsjo/fdk-aac/tar.gz/v${FDKAAC_VERSION} | tar zxvf - \u0026\u0026               cd fdk-aac-${FDKAAC_VERSION} \u0026\u0026               autoreconf -fiv \u0026\u0026               ./configure --prefix=\"${SRC}\" --disable-shared \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \u0026\u0026               tar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz \u0026\u0026               cd ffmpeg-${FFMPEG_VERSION} \u0026\u0026               ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\"               --extra-libs=-ldl --enable-version3 --enable-libfaac --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-gpl               --enable-postproc --enable-nonfree --enable-avresample --enable-libfdk_aac --disable-debug --enable-small \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               hash -r \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/lib\" \u003e /etc/ld.so.conf.d/libc.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y ImageMagick ImageMagick-devel ImageMagick-perl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install libjpeg-turbo-devel libjpeg-turbo-static libjpeg-turbo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y perl-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -Os http://owl.phy.queensu.ca/~phil/exiftool/Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \u0026\u0026               tar xvf Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \u0026\u0026               cd Image-ExifTool-${EXIFTOOL_VERSION} \u0026\u0026               perl Makefile.PL \u0026\u0026               make install  \u0026\u0026 \t      cp -r exiftool lib /usr/bin \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html/tmp \u0026\u0026\t\tchmod 777 /var/www/html/tmp \u0026\u0026\t\tmkdir -p /var/www/html/dat \u0026\u0026\t\tchmod 777 /var/www/html/dat \u0026\u0026\t\tmkdir -p /var/www/html/results \u0026\u0026\t\tchmod 777 /var/www/html/results \u0026\u0026\t\tmkdir -p /var/www/html/work/jobs \u0026\u0026\t\tchmod 777 /var/www/html/work/jobs \u0026\u0026\t\tmkdir -p /var/www/html/work/video \u0026\u0026\t\tchmod 777 /var/www/html/work/video \u0026\u0026\t\tmkdir -p /var/www/html/logs \u0026\u0026\t\tchmod 777 /var/www/html/logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -L -Os https://github.com/WPO-Foundation/webpagetest/archive/WebPageTest-${WPT_VERSION}.tar.gz  \u0026\u0026               tar xvf WebPageTest-${WPT_VERSION}.tar.gz \u0026\u0026               cd webpagetest-WebPageTest-${WPT_VERSION} \u0026\u0026               cp -r www/*  /var/www/html/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "locations.ini",
            "/var/www/html/settings/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "connectivity.ini",
            "/var/www/html/settings/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "settings.ini",
            "/var/www/html/settings/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/results"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/httpd",
            "-k",
            "start",
            "-D",
            "FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}