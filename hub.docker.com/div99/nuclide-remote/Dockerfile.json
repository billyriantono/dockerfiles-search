{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitnami/minideb",
      "SourceCode": "FROM bitnami/minideb",
      "Platform": "",
      "From": {
        "Image": "bitnami/minideb"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "IMAGE_NUCLIDE_VERSION",
              "Value": "0.357.0"
            },
            {
              "Key": "WATCHMAN_VERSION",
              "Value": "v4.9.0"
            },
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "install_packages libssl-dev pkg-config libtool ca-certificates git build-essential     autoconf python-dev libpython-dev autotools-dev automake \u0026\u0026         git clone https://github.com/facebook/watchman.git \u0026\u0026      cd watchman \u0026\u0026     git checkout ${WATCHMAN_VERSION} \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026 make install \u0026\u0026         apt-get remove --purge -y libssl-dev pkg-config libtool build-essential autoconf     python-dev libpython-dev autotools-dev automake \u0026\u0026     apt-get autoremove -y \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     cd / \u0026\u0026 rm -rf watchman"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_packages openssh-server \u0026\u0026 mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_packages curl ca-certificates gnupg2 \u0026\u0026     curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     install_packages nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g nuclide@${IMAGE_NUCLIDE_VERSION} \u0026\u0026     rm -rf /root/.npm/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}