{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bilgrami/python-base:latest",
      "SourceCode": "FROM bilgrami/python-base:latest",
      "Platform": "",
      "From": {
        "Image": "bilgrami/python-base:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Name",
              "Value": "pakguru"
            },
            {
              "Key": "Version",
              "Value": "0.1.1"
            },
            {
              "Key": "maintainer",
              "Value": "\"Syed Bilgrami \u003cbilgrami@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "PROJECT_ROOT",
          "Name": "arg",
          "Value": "/usr/local/project"
        },
        {
          "Key": "CONFIG_ROOT",
          "Name": "arg",
          "Value": "$PROJECT_ROOT/config"
        },
        {
          "Env": [
            {
              "Key": "VIRTUAL_ENV",
              "Value": "$PROJECT_ROOT/.virtualenvs/myproject_env"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PROJECT_ROOT;     mkdir -p $VIRTUAL_ENV;     python -m venv $VIRTUAL_ENV;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$VIRTUAL_ENV/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROJECT_ROOT",
              "Value": "$PROJECT_ROOT"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$PROJECT_ROOT"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "python -m pip install --upgrade pip \u0026\u0026      pip install -r requirements.txt;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./project",
            "$PROJECT_ROOT"
          ]
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "5000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "iPYTHON_NOTEBOOK_PORT",
              "Value": "8888"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UWSGI_INI",
              "Value": "uwsgi.ini"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STATIC_URL",
              "Value": "/static/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LISTEN_PORT",
              "Value": "5000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$iPYTHON_NOTEBOOK_PORT"
          ]
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGINT"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install -qy --no-install-recommends    openssh-server redis-tools \u0026\u0026  rm -rf /var/lib/apt/lists/* \u0026\u0026  mkdir -p /home/LogFiles /opt/startup \u0026\u0026  echo \"root:Docker!\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/startup",
            "/opt/startup"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/startup/sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/startup/ssh_setup.sh",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "chmod -R +x /opt/startup    \u0026\u0026 chmod -R +x /tmp/ssh_setup.sh    \u0026\u0026 (sleep 1;/tmp/ssh_setup.sh 2\u003e\u00261 \u003e /dev/null)    \u0026\u0026 rm -rf /tmp/*    \u0026\u0026 cd /opt/startup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SSH_PORT",
              "Value": "2222"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "80"
          ]
        },
        {
          "Env": [
            {
              "Key": "PRODUCT_VERSION",
              "Value": "0.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/opt/startup/init_container.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}