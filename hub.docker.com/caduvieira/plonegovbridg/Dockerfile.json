{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "plone:4.3",
      "SourceCode": "FROM plone:4.3",
      "Platform": "",
      "From": {
        "Image": "plone:4.3"
      },
      "Commands": [
        {
          "Maintainer": "Carlos Vieira \u003cedu.carlos.vieira@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Name",
              "Value": "\"Identidade Digital para o Governo Brasileiro Federal para Plone\""
            },
            {
              "Key": "Version",
              "Value": "\"1.1.4\""
            },
            {
              "Key": "Architecture",
              "Value": "\"x86_64\""
            },
            {
              "Key": "Dockerfile_location",
              "Value": "\"/root/buildinfo\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "plone"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "site.cfg",
            "/plone/instance/"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Dockerfile",
            "/root/buildinfo"
          ]
        },
        {
          "CmdLine": [
            "buildDeps=\"curl sudo python-setuptools python-dev build-essential libssl-dev libxml2-dev libxslt1-dev libbz2-dev libjpeg62-turbo-dev libyaml-dev\"  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps  \u0026\u0026 sudo -u plone bin/buildout -c site.cfg -t 300  \u0026\u0026 SUDO_FORCE_REMOVE=yes apt-get purge -y --auto-remove $buildDeps  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /plone/buildout-cache/downloads/*  \u0026\u0026 apt-get clean  \u0026\u0026 find /plone \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' +"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "plone"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}