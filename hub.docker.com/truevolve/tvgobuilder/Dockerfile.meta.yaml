MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - sed -i "s/^deb /deb \[arch=$(dpkg --print-architecture)] /" /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - for SUFFIX in "" "-updates" "-security"; do   echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/
      xenial${SUFFIX} main restricted universe multiverse"     >> /etc/apt/sources.list.d/armhf.list;   done
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y         build-essential         autotools-dev
      \        libssl-dev         dh-autoreconf         opensc         opensc-pkcs11
      \        g++         gcc         libc6-dev         make         cmake         curl
      \        libpcre3-dev         git         sudo         gcc-arm-linux-gnueabihf
      \        g++-arm-linux-gnueabihf         libusb++-dev         libssh2-1 \tsudo"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.cloud.google.com/apt cloud-sdk-xenial main" | tee
      -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key add - &&     apt-get update -y && apt-get install google-cloud-sdk
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/swig/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - swig.tar.gz
    - /tmp/swig/
  - CmdLine:
    - "tar -C /tmp/swig/ --strip-components=1 -xzf /tmp/swig/swig.tar.gz \t&& cd /tmp/swig/
      \t&& ./configure \t&& make \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir -p /home/developer/ &&     echo "developer:x:1000:1000:Developer,,,:/home/developer:/bin/bash"
      >> /etc/passwd &&     echo "developer:x:1000:" >> /etc/group &&     echo "developer
      ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/developer &&     chmod 0440 /etc/sudoers.d/developer
      &&     chown developer:developer -R /home/developer'
    Name: run
    PrependShell: true
  - Name: user
    User: developer
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.13.34
    Name: env
  - Name: workdir
    Path: /home/developer/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go1.10.3.linux-amd64.tar.gz
    - /home/developer/golang.tar.gz
  - CmdLine:
    - "tar -C /home/developer/ -xzf golang.tar.gz \t&& rm golang.tar.gz"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /home/developer/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: /home/developer/
    Name: env
  - Env:
    - Key: PATH
      Value: $GOROOT/bin:$PATH
    Name: env
  - Name: workdir
    Path: $GOPATH
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
