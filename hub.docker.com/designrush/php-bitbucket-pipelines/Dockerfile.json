{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.12",
      "SourceCode": "FROM php:7.2.12",
      "Platform": "",
      "From": {
        "Image": "php:7.2.12"
      },
      "Commands": [
        {
          "Maintainer": "Igor Chepurnoi \u003cchepurnoi.igor@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo America/New_York \u003e /etc/timezone \u0026\u0026     dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apt-utils     \u0026\u0026 apt-get install -y         zlib1g-dev         libicu-dev         libpq-dev         libpcre3-dev         git         nano         zip         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libmagickwand-dev         supervisor         mysql-client         pngquant         cron         wget         gnupg         libxpm-dev         libvpx-dev         libwebp-dev         iproute2     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv intl zip pdo_mysql exif bcmath     \u0026\u0026 pecl install mcrypt-1.0.1 \u0026\u0026 docker-php-ext-enable mcrypt.so     \u0026\u0026 docker-php-ext-configure gd         --with-png-dir=/usr         --with-jpeg-dir=/usr         --with-freetype-dir=/usr         --with-xpm-dir=/usr         --with-webp-dir=/usr         --with-vpx-dir=/usr;     docker-php-ext-install gd     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install nodejs --no-install-recommends -yqq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install yarn \u0026\u0026 yarn global add pm2 gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 curl -sS https://getcomposer.org/installer | php \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}