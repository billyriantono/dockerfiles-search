{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "David Numan david.numan_at_civicactions.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum -y update; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/yum/ivarch.repo",
            "/etc/yum.repos.d/ivarch.repo"
          ]
        },
        {
          "CmdLine": [
            "rpm --import http://www.ivarch.com/personal/public-key.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install scl-utils git mariadb-libs mariadb wget sudo python-setuptools nano vim pv \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://www.softwarecollections.org/repos/rhscl/php55/epel-7-x86_64/noarch/rhscl-php55-epel-7-x86_64-1-2.noarch.rpm \u0026\u0026     yum -y install rhscl-php55-epel-7-x86_64-1-2.noarch.rpm \u0026\u0026     rm -v rhscl-php55-epel-7-x86_64-1-2.noarch.rpm \u0026\u0026     yum -y install php55 php55-php-gd php55-php-mysqlnd php55-php-pdo php55-php-xml php55-php-opcache php55-php-fpm php55-php-soap php55-php-mbstring \u0026\u0026     yum clean all \u0026\u0026     scl enable php55 bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install httpd mod_ssl mod_fcgid \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source /opt/rh/php55/enable \u0026\u0026     export X_SCLS=\"`scl enable php55 'echo $X_SCLS'`\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo source /opt/rh/php55/enable \u003e /etc/profile.d/php55.sh \u0026\u0026     echo export X_SCLS=\"\\`scl enable php55 'echo $X_SCLS'\\`\" \u003e\u003e /etc/profile.d/php55.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/rh/php55/root/usr/bin:/opt/rh/php55/root/usr/sbin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's,/var/www/html,/var/www/docroot,' /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/apache2/docker-host.conf",
            "/etc/httpd/conf.d/docker-host.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/php5/docker-php.ini",
            "/opt/rh/php55/root/etc/php.d/docker-php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/php5/www.conf",
            "/opt/rh/php55/root/etc/php-fpm.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/drupal/settings.docker.php",
            "/etc/settings.docker.php"
          ]
        },
        {
          "CmdLine": [
            "source /opt/rh/php55/enable \u0026\u0026   curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin -d detect_unicode=0 \u0026\u0026   ln -s /usr/bin/composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/Defaults    requiretty.*/ #Defaults    requiretty/g\" /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install php55-php-devel gcc \u0026\u0026 yum clean all \u0026\u0026     pecl install xdebug \u0026\u0026     yum -y remove gcc php55-php-devel \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo zend_extension=xdebug.so \u003e\u003e /opt/rh/php55/root/etc/php.d/xdebug.ini \u0026\u0026   echo xdebug.remote_enable=1 \u003e\u003e /opt/rh/php55/root/etc/php.d/xdebug.ini \u0026\u0026   echo xdebug.remote_autostart=0 \u003e\u003e /opt/rh/php55/root/etc/php.d/xdebug.ini \u0026\u0026   echo xdebug.idekey=\"PHPSTORM\" \u003e\u003e /opt/rh/php55/root/etc/php.d/xdebug.ini \u0026\u0026   echo xdebug.max_nesting_level=256 \u003e\u003e /opt/rh/php55/root/etc/php.d/xdebug.ini \u0026\u0026   echo xdebug.remote_log=/var/www/logs/xdebug.log \u003e\u003e /opt/rh/php55/root/etc/php.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}