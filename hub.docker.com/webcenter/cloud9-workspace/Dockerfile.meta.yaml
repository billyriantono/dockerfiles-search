MetaArgs: null
Stages:
- BaseName: debian:buster-slim
  Commands:
  - Maintainer: Disaster <linuxworkgroup@hotmail.com>
    Name: maintainer
  - Env:
    - Key: SERVICE_HOME
      Value: /opt/cloud9
    - Key: SERVICE_URL
      Value: https://github.com/c9/core.git
    - Key: SERVICE_WORK
      Value: /workspace
    - Key: SERVICE_USER
      Value: dev
    - Key: GOPATH
      Value: /workspace/go
    - Key: GOROOT
      Value: /usr/local/go
    - Key: EMBER_VERSION
      Value: 2.14.2
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.16.1
    - Key: GOLANG_VERSION
      Value: 1.9.2
    - Key: NODE_BRANCH
      Value: 10.x
    - Key: DOCKER_VERSION
      Value: 17.06.1-ce
    - Key: PYTHON_VERSION
      Value: 3.6.8
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - CmdLine:
    - useradd -G sudo -m ${SERVICE_USER} &&    mkdir -p $SERVICE_HOME $SERVICE_WORK
      &&     chown -R dev $SERVICE_WORK &&    chown -R dev $SERVICE_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&    apt-get upgrade -y &&    apt-get install -y --no-install-recommends
      python build-essential g++ libxml2-dev &&    apt-get install -y --no-install-recommends
      wget bash curl git ca-certificates gnupg make sudo vim aptitude zip openssh-client
    Name: run
    PrependShell: true
  - Name: user
    User: ${SERVICE_USER}
  - CmdLine:
    - git clone $SERVICE_URL $SERVICE_HOME &&     cd $SERVICE_HOME &&     scripts/install-sdk.sh
      &&     sed -i -e 's_127.0.0.1_0.0.0.0_g' $SERVICE_HOME/configs/standalone.js
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - 'echo "%sudo ALL = NOPASSWD : ALL" >> /etc/sudoers &&    apt-get autoremove
      -y python build-essential g++ libssl-dev libxml2-dev &&    apt-get clean &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh /scripts/install_golang.sh &&    sh /scripts/install_docker.sh &&    sh /scripts/install_node.sh
      &&    sh /scripts/install_emberjs.sh &&    sh /scripts/install_gitflow.sh &&    sh
      /scripts/install_python.sh &&    echo "export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH"
      >> /home/${SERVICE_USER}/.bashrc &&    usermod -a -G docker ${SERVICE_USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "Go version: $(go version)" &&    echo "Node version: $(node --version)"
      &&    echo "NPM version: $(npm --version)" &&    echo "Docker version: $(docker
      -v)" &&    echo "Docker-compose version: $(docker-compose --version)" &&    echo
      "Emberjs version: $(ember --version)"'
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /scripts/*.sh &&    chmod -R 777 /scripts
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - Name: workdir
    Path: '"$SERVICE_WORK"'
  - Name: expose
    Ports:
    - "8080"
  - Name: volume
    Volumes:
    - $SERVICE_WORK
  - CmdLine:
    - /scripts/start.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --listen 0.0.0.0 --collab true --setting-path $SERVICE_WORK/.c9 -p 8080 -w $SERVICE_WORK
    Name: cmd
    PrependShell: false
  From:
    Image: debian:buster-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:buster-slim
