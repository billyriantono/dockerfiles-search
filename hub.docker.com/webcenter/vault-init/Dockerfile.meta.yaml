MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.10.3
  Commands:
  - Name: workdir
    Path: /go/src/github.com/disaster37/vault-init
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - CGO_ENABLED=0   GOOS=linux   GOARCH=amd64   go build -a -installsuffix cgo -o
      vault-init .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10.3
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.10.3 AS builder
- BaseName: alpine
  Commands:
  - Env:
    - Key: VAULT_URL
      Value: '"https://120.0.0.1:8200"'
    - Key: CHECK_INTERVAL
      Value: '"5"'
    - Key: BACKEND
      Value: '"file-store"'
    - Key: BACKEND_OPTIONS
      Value: '"--help"'
    Name: env
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/disaster37/vault-init/vault-init
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - apk add --update curl bash ca-certificates &&    rm -rf /var/cache/apk/* &&    chmod
      +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
