MetaArgs: null
Stages:
- BaseName: python:3.8
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: PIP_NO_CACHE_DIR
    Name: arg
    Value: "1"
  - Key: PIP_CACHE_DIR
    Name: arg
    Value: /tmp/
  - Env:
    - Key: APP_USER
      Value: app
    Name: env
  - Env:
    - Key: APP_GRP
      Value: app
    Name: env
  - Env:
    - Key: APP_HOME
      Value: /app
    Name: env
  - Env:
    - Key: APP_SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: NGINX_WORKER
      Value: "4"
    Name: env
  - Expression: COPY . ${APP_HOME}
    Name: onbuild
  - Expression: COPY config /etc
    Name: onbuild
  - Expression: WORKDIR ${APP_HOME}
    Name: onbuild
  - Expression: RUN chmod a+x "${APP_HOME}/entrypoint.sh"
    Name: onbuild
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/requirements.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /tmp/entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - /etc/
  - Name: shell
    Shell:
    - /bin/bash
    - -o
    - pipefail
    - -c
  - CmdLine:
    - groupadd "${APP_GRP}" &&  groupadd supervisor &&  useradd --create-home --home-dir
      "${APP_HOME}" --shell "${APP_SHELL}" --gid "${APP_GRP}" "${APP_USER}" &&  usermod
      -a -G supervisor "${APP_USER}" &&  mv /tmp/entrypoint.sh "${APP_HOME}/entrypoint.sh"
      &&  chmod a+x "${APP_HOME}/entrypoint.sh" &&  chown -R "${APP_USER}":"${APP_GRP}"
      "${APP_HOME}" &&  apt-get -qq -y update &&  apt-get install -qq -o Dpkg::Options::="--force-confold"                     -y
      --no-install-recommends                     supervisor curl jq vim-nox openssh-client                     moreutils
      gettext-base locales tzdata lsb-release &&  curl -sSL http://nginx.org/keys/nginx_signing.key
      | apt-key add - &&  echo "deb http://nginx.org/packages/$(lsb_release -is |
      tr '[:upper:]' '[:lower:]')/ $(lsb_release -cs) nginx" > /etc/apt/sources.list.d/nginx.list
      &&  apt-get -qq -y update &&  apt-get -qq -o Dpkg::Options::="--force-confold"
      -y install nginx &&  /bin/rm -f /etc/nginx/nginx.conf.dpkg-dist /etc/supervisor/supervisord.conf.dpkg-dist
      &&  ln -sf /dev/stdout /var/log/nginx/access.log &&  ln -sf /dev/stderr /var/log/nginx/error.log
      &&  rm -f /etc/nginx/conf.d/* /etc/nginx/sites-enabled/* &&  pip install --no-cache-dir
      -U -r /tmp/requirements.txt &&  poetry config virtualenvs.create false &&  apt-get
      clean &&  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /app/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.8
