MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Jakarta
    - Key: FQDN
      Value: localhost
    - Key: LARAVEL_ROOT
      Value: '"/var/www/html"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get -y upgrade &&     apt-get -y install software-properties-common     python-software-properties     sudo     git     curl     nano     wget     net-tools     locales     htop     gettext-base     iputils-ping
      &&     locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone &&     apt-get
      install -y tzdata &&     dpkg-reconfigure --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:nginx/stable &&     apt-get update &&     apt-get
      install -y nginx
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/nginx/sites-enabled/default
    - /etc/nginx/sites-available/default
  - CmdLine:
    - add-apt-repository -y ppa:certbot/certbot &&     apt-get update &&     apt-get
      install -y python-certbot-nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupadd -r -g 1001 appuser &&     useradd -rm -d /home/appuser -s /bin/bash
      -G sudo -u 1001 -g 1001 appuser &&     echo "appuser:appuser" | chpasswd &&     echo
      "appuser ALL=(ALL) NOPASSWD: /usr/bin/certbot" >> /etc/sudoers &&     echo "appuser
      ALL=(ALL) NOPASSWD: /usr/sbin/service" >> /etc/sudoers &&     chown -R appuser:appuser
      /etc/nginx /var/log/nginx /var/lib/nginx /var/run/ /var/www/html'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: user
    User: appuser
  - Name: workdir
    Path: /home/appuser
  - Name: expose
    Ports:
    - 443/tcp
    - 80/tcp
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
