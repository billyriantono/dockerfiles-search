MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: TAIGA_HOST
      Value: taiga.lan
    - Key: TAIGA_SECRET
      Value: secret
    - Key: SCHEME
      Value: http
    - Key: DB_HOST
      Value: db
    - Key: DB_NAME
      Value: taiga
    - Key: DB_USER
      Value: postgres
    - Key: DB_PASSWORD
      Value: password
    - Key: RABBIT_HOST
      Value: rabbit
    - Key: RABBIT_PORT
      Value: "5672"
    - Key: RABBIT_USER
      Value: taiga
    - Key: RABBIT_PASSWORD
      Value: password
    - Key: RABBIT_VHOST
      Value: taiga
    - Key: STARTUP_TIMEOUT
      Value: 15s
    Name: env
  - Name: workdir
    Path: /srv/taiga
  - CmdLine:
    - "apk --no-cache add python3 gettext postgresql-dev libxslt-dev libxml2-dev libjpeg-turbo-dev
      zeromq-dev libffi-dev nginx \t&& apk add --no-cache --virtual .build-dependencies
      musl-dev python3-dev linux-headers git zlib-dev libjpeg-turbo-dev gcc \t&& mkdir
      logs \t&& git clone --depth=1 -b stable https://github.com/taigaio/taiga-back.git
      back && cd back \t&& sed -e 's/cryptography==.*/cryptography==2.3.1/' -i requirements.txt
      \t&& pip3 install --upgrade pip \t&& pip3 install -r requirements.txt \t&& rm
      -rf /root/.cache \t&& apk del .build-dependencies \t&& rm /srv/taiga/back/settings/local.py.example
      \t&& rm /etc/nginx/conf.d/default.conf"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: workdir
    Path: /srv/taiga/back
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.py
    - /tmp/taiga-conf/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /
  - Name: volume
    Volumes:
    - /taiga-conf
    - /taiga-media
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
