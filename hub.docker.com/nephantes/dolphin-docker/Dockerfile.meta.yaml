MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Alper Kucukural <alper.kucukural@umassmed.edu>
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get dist-upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install apache2 libapache2-mod-php5
      php5-mcrypt                    php5-mysqlnd php5-gd php-pear php-apc php5-curl
      curl lynx-cur mysql-server                     libreadline-dev libsqlite3-dev
      libbz2-dev libssl-dev python python-dev                     libmysqlclient-dev
      python-pip git expect default-jre                     libxml2-dev software-properties-common
      gdebi-core wget                     tree vim libv8-dev subversion g++ gcc gfortran
      zlib1g-dev libreadline-dev                     libx11-dev xorg-dev libbz2-dev
      liblzma-dev libpcre3-dev libcurl4-openssl-dev                     default-jdk
      texinfo texlive-latex-base texlive-latex-recommended texlive-fonts-extra                     texlive-fonts-recommended
      r-cran-plyr r-cran-reshape2 ccache libpam0g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:marutter/rrutter
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp \t&& wget https://stat.ethz.ch/R/daily/R-devel.tar.gz         && tar
      xvfz R-devel.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp/R-devel \t&& R_PAPERSIZE=letter\t\t\t\t\tR_BATCHSAVE=\"--no-save --no-restore\"
      \t\t\tR_BROWSER=xdg-open\t\t\t\t\tPAGER=/usr/bin/pager\t\t\t\t\tPERL=/usr/bin/perl\t\t\t\t\tR_UNZIPCMD=/usr/bin/unzip\t\t\t\tR_ZIPCMD=/usr/bin/zip\t\t\t\t\tR_PRINTCMD=/usr/bin/lpr\t\t\t\t\tLIBnn=lib\t\t\t\t\t\tAWK=/usr/bin/awk
      \                               \tCC=\"ccache gcc\"\t\t\t\t\t\tCFLAGS=\"-ggdb
      -pipe -std=gnu99 -Wall -pedantic\" \tCXX=\"ccache g++\"\t\t\t\t\tCXXFLAGS=\"-ggdb
      -pipe -Wall -pedantic\" \t\t\tFC=\"ccache gfortran\"\t \t  \t\t\tF77=\"ccache
      gfortran\"\t\t\t\t\tMAKE=\"make -j4\"\t\t\t\t\t\t./configure \t\t\t\t\t   \t\t--prefix=/usr/local/lib/R-devel
      \t   \t\t --enable-R-shlib \t\t\t    \t\t--with-blas \t\t\t\t    \t\t--with-lapack
      \t\t\t\t    \t\t--with-readline \t\t\t    \t\t--without-recommended-packages
      \                         --disable-openmp                        \t&& make
      \t&& make install \t&& make clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - export R_LIBS_SITE=${R_LIBS_SITE-'/usr/lib/R-devel/lib/R/library:/usr/local/lib/R/site-library:/usr/lib/R/site-library::/usr/lib/R/library'}
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH="/usr/local/lib/R-devel/bin:$PATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/lib/R-devel/bin/R /usr/bin/.
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/lib/R-devel/bin/Rscript /usr/bin/.
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install MySQL-python
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod php5
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/short_open_tag = Off/short_open_tag = On/" /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/"
      /etc/php5/apache2/php.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/bin/dolphin-bin
    Name: env
  - Env:
    - Key: APACHE_RUN_USER
      Value: www-data
    Name: env
  - Env:
    - Key: APACHE_RUN_GROUP
      Value: www-data
    Name: env
  - Env:
    - Key: APACHE_LOG_DIR
      Value: /var/log/apache2
    Name: env
  - Env:
    - Key: APACHE_LOCK_DIR
      Value: /var/lock/apache2
    Name: env
  - Env:
    - Key: APACHE_PID_FILE
      Value: /var/run/apache2.pid
    Name: env
  - Env:
    - Key: DOLPHIN_PARAMS_SECTION
      Value: Docker
    Name: env
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "3306"
  - Name: expose
    Ports:
    - "3838"
  - CmdLine:
    - echo "r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org';
      options(repos = r);" > ~/.Rprofile
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e 'install.packages(c("ggvis", "ggplot2", "RColorBrewer", "DT", "gplots",
      "data.table", "devtools", "V8"), dependencies = TRUE )'
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e 'source("http://bioconductor.org/biocLite.R"); biocLite("debrowser");'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - apache-config.conf
    - /etc/apache2/sites-enabled/000-default.conf
  - CmdLine:
    - echo "ServerName localhost" | sudo tee /etc/apache2/conf-available/fqdn.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enconf fqdn
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export DOLPHIN_PARAMS_SECTION="${DOLPHIN_PARAMS_SECTION} >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/.java/.systemPrefs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/www/.java/.userPrefs
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 755 /var/www/.java
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export JAVA_OPTS=\"-Djava.util.prefs.systemRoot=/var/www/.java Djava.util.prefs.userRoot=/var/www/.java/.userPrefs\""
      >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - Env:
    - Key: RSTUDIO_VER
      Value: rstudio-server-1.0.136-amd64.deb
    Name: env
  - CmdLine:
    - wget https://download2.rstudio.org/${RSTUDIO_VER}
    Name: run
    PrependShell: true
  - CmdLine:
    - gdebi -n ${RSTUDIO_VER}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ${RSTUDIO_VER}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'server-app-armor-enabled=0' > /etc/rstudio/rserver.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s  /usr/lib/rstudio-server/extras/init.d/debian/rstudio-server /etc/init.d/.
    Name: run
    PrependShell: true
  - Env:
    - Key: SHINY_VER
      Value: shiny-server-1.5.2.837-amd64.deb
    Name: env
  - CmdLine:
    - wget https://download3.rstudio.org/ubuntu-12.04/x86_64/${SHINY_VER}
    Name: run
    PrependShell: true
  - CmdLine:
    - gdebi -n ${SHINY_VER}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ${SHINY_VER}
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/shiny-server/config/init.d/debian/shiny-server /etc/init.d/.
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U boto
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - find /var/lib/mysql -type f -exec touch {} \; && service mysql start &&     service
      apache2 start &&     DEBIAN_FRONTEND=noninteractive apt-get -y install phpmyadmin
      &&     zcat /usr/share/doc/phpmyadmin/examples/create_tables.sql.gz|mysql -uroot
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s#// \$cfg\['Servers'\]\[\$i\]\['AllowNoPassword'\] = TRUE;#\$cfg\['Servers'\]\[\$i\]\['AllowNoPassword'\]
      = TRUE;#g" /etc/phpmyadmin/config.inc.php
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-enabled/phpmyadmin.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - php5enmod mcrypt
    Name: run
    PrependShell: true
  - Env:
    - Key: GITUSER
      Value: UMMS-Biocore
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin
    - /usr/local/bin
  - CmdLine:
    - git clone https://github.com/${GITUSER}/dolphin-bin /usr/local/bin/dolphin-bin
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/dolphin-bin/MACS2 && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin/dolphin-bin/RSeQC-2.6.2 && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - make -C /usr/local/bin/dolphin-bin/RSEM-1.2.29
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/${GITUSER}/dolphin-tools /usr/local/share/dolphin_tools
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/rmccue/Requests.git /usr/local/share/Requests
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://hgwdev.cse.ucsc.edu/~galt/encode3/validatePackage/validateEncode3-latest.tgz
      -P /usr/local/share/validateEncode
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvzf /usr/local/share/validateEncode/validateEncode3-latest.tgz -C /usr/local/share/validateEncode
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/${GITUSER}/dolphin-ui.git /var/www/html/dolphin
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/${GITUSER}/debrowser.git /srv/shiny-server/debrowser
    Name: run
    PrependShell: true
  - CmdLine:
    - R CMD INSTALL /srv/shiny-server/debrowser
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/#library/library/" /srv/shiny-server/debrowser/R/server.R
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/html/dolphin/tmp/files /var/www/html/dolphin/tmp/logs /export/tmp/logs
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} /var/www/html/dolphin
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} /usr/local/share/dolphin_tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "locale-gen en_US.UTF-8"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dpkg-reconfigure locales"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | debconf-set-selections &&   add-apt-repository -y ppa:webupd8team/java &&   apt-get
      update &&   apt-get install -y oracle-java8-installer &&   rm -rf /var/lib/apt/lists/*
      &&   rm -rf /var/cache/oracle-jdk8-installer
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /data
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - curl -s https://get.nextflow.io | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /data/nextflow /usr/bin/.
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
