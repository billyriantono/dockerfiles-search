MetaArgs:
- DefaultValue: huanghe314/tensorflow-book-gpu:0.0.1
  Key: BASE_CONTAINER
  ProvidedValue: null
  Value: huanghe314/tensorflow-book-gpu:0.0.1
Stages:
- BaseName: $BASE_CONTAINER
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"zhenyu liu"'
    Name: label
  - Name: user
    User: root
  - CmdLine:
    - apt-get update     && apt-get install -y         build-essential         cmake         git         wget         unzip         yasm         pkg-config         libswscale-dev         libtbb2         libtbb-dev         libjpeg-dev         libpng-dev         libtiff-dev         libavformat-dev         libpq-dev         libavcodec-dev         libavformat-dev         libswscale-dev         libv4l-dev         libxvidcore-dev         libx264-dev         libgtk-3-dev         libatlas-base-dev         gfortran         python3-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install numpy
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Env:
    - Key: OPENCV_VERSION
      Value: '"4.0.0"'
    Name: env
  - CmdLine:
    - cd / && wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
      && unzip ${OPENCV_VERSION}.zip && rm /${OPENCV_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
      && unzip ${OPENCV_VERSION}.zip && rm /${OPENCV_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get autoremove -y libtiff5-dev     && apt-get install
      -y        libtiff5-dev        libavresample-dev     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /opt/conda/include/python3.6m/* /opt/conda/include
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Name: user
    User: root
  - Env:
    - Key: CMAKE_VERSION
      Value: "3.13"
    Name: env
  - Env:
    - Key: CMAKE_BUILD
      Value: "3"
    Name: env
  - CmdLine:
    - mkdir -p /temp && cd /temp
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://cmake.org/files/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.${CMAKE_BUILD}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzvf cmake-${CMAKE_VERSION}.${CMAKE_BUILD}.tar.gz && cd cmake-${CMAKE_VERSION}.${CMAKE_BUILD}/
      && ./bootstrap && make -j4 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cmake --version
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencv-${OPENCV_VERSION}/ && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE   -D
      CMAKE_INSTALL_PREFIX=/usr/local   -D INSTALL_PYTHON_EXAMPLES=ON   -D INSTALL_C_EXAMPLES=OFF   -D
      OPENCV_ENABLE_NONFREE=ON   -D OPENCV_EXTRA_MODULES_PATH= /opencv_contrib-${OPENCV_VERSION}/modules   -D
      PYTHON3_EXECUTABLE=/opt/conda/bin/python   -D PYTHON3_INCLUDE_DIR=/opt/conda/include   -D
      PYTHON3_LIBRARY=/opt/conda/lib/libpython3.6m.so   -D PYTHON3_NUMPY_INCLUDE_DIRS=/opt/conda/lib/python3.6/site-packages/numpy/core/include   -D
      PYTHON3_PACKAGES_PATH=/opt/conda/lib/python3.6/site-packages   -D BUILD_PROTOBUF=OFF   -D
      BUILD_opencv_python3=ON   -D BUILD_opencv_python2=OFF   -D BUILD_opencv_dnn=OFF   -D
      WITH_CUDA=ON   -D ENABLE_FAST_MATH=1   -D CUDA_FAST_MATH=1   -D WITH_CUBLAS=1   -D
      ENABLE_PRECOMPILED_HEADERS=OFF   -D BUILD_EXAMPLES=ON ..
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencv-${OPENCV_VERSION}/build && make -j4 && make install && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s   /usr/local/python/cv2/python-3.6/cv2.cpython-36m-x86_64-linux-gnu.so   /opt/conda/lib/python3.6/site-packages/cv2.so
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  From:
    Image: $BASE_CONTAINER
  Name: ""
  Platform: ""
  SourceCode: FROM $BASE_CONTAINER
