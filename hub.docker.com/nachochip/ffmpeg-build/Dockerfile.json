{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stable",
      "SourceCode": "FROM\t\tdebian:stable",
      "Platform": "",
      "From": {
        "Image": "debian:stable"
      },
      "Commands": [
        {
          "Maintainer": "Nachochip \u003cblockchaincolony@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "FFMPEG_VERSION",
              "Value": "3.2.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YASM_VERSION",
              "Value": "1.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FDKAAC_VERSION",
              "Value": "0.1.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BLACKMAGIC_SDK_VERSION",
              "Value": "10.8.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SRC",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${SRC}/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "${SRC}/lib/pkgconfig"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash -c 'set -euo pipefail'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y autoconf automake gcc build-essential git libtool make nasm zlib1g-dev tar curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -Os http://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz \u0026\u0026               tar xzvf yasm-${YASM_VERSION}.tar.gz \u0026\u0026               cd yasm-${YASM_VERSION} \u0026\u0026               ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               git clone --depth 1 git://git.videolan.org/x264 \u0026\u0026               cd x264 \u0026\u0026               ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" --enable-static \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -s https://codeload.github.com/mstorsjo/fdk-aac/tar.gz/v${FDKAAC_VERSION} | tar zxvf - \u0026\u0026               cd fdk-aac-${FDKAAC_VERSION} \u0026\u0026               autoreconf -fiv \u0026\u0026               ./configure --prefix=\"${SRC}\" --disable-shared \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/ \u0026\u0026 \t      curl -s https://codeload.github.com/nachochip/Blackmagic-SDK/tar.gz/${BLACKMAGIC_SDK_VERSION} | tar xzvf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026               curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \u0026\u0026               tar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz \u0026\u0026               cd ffmpeg-${FFMPEG_VERSION} \u0026\u0026               ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\"               --extra-libs=-ldl --enable-version3 --enable-libx264 --enable-gpl               --enable-postproc --enable-nonfree --enable-avresample --enable-libfdk_aac --disable-debug --enable-small               --enable-decklink --extra-cflags=-I/usr/src/Blackmagic-SDK-${BLACKMAGIC_SDK_VERSION}/Linux/include/               --extra-ldflags=-L/usr/src/Blackmagic-SDK-${BLACKMAGIC_SDK_VERSION}/Linux/include/ \u0026\u0026               make \u0026\u0026               make install \u0026\u0026               make distclean \u0026\u0026               hash -r \u0026\u0026               rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y autoconf automake gcc build-essential git libtool make nasm zlib1g-dev curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/lib\" \u003e /etc/ld.so.conf.d/libc.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "ffmpeg"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}