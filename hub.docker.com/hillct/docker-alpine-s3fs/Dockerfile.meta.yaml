MetaArgs: null
Stages:
- BaseName: ruby:2-alpine
  Commands:
  - Env:
    - Key: IAM_ROLE
      Value: none
    Name: env
  - Env:
    - Key: MOUNT_POINT
      Value: /var/s3
    Name: env
  - Name: volume
    Volumes:
    - /var/s3
  - Key: S3FS_VERSION
    Name: arg
    Value: v1.80
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VCS_URL
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"Alpine/s3fs - Alpine Linux image w/Amazon S3 Support through Fuse-s3fs"'
    - Key: org.label-schema.url
      Value: '"https://github.com/rjocoleman/docker-alpine-s3fs/wiki"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: $VCS_URL
    - Key: org.label-schema.vendor
      Value: '"Robert Coleman <github@robert.net.nz>"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - "apk add  --no-cache ca-certificates fuse libcurl libxml2 bash   && apk add
      --no-cache --virtual .build-dependencies \talpine-sdk automake autoconf libxml2-dev
      fuse-dev curl-dev git   && git clone https://github.com/s3fs-fuse/s3fs-fuse.git
      \  && cd s3fs-fuse && git checkout tags/${S3FS_VERSION}   && ./autogen.sh &&
      ./configure --prefix=/usr && make && make install && cd ..   && apk del .build-dependencies
      && rm -rf /var/cache/* s3fs-fuse"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ruby:2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2-alpine
