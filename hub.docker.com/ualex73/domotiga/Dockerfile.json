{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jlesage/baseimage-gui:ubuntu-18.04",
      "SourceCode": "FROM jlesage/baseimage-gui:ubuntu-18.04",
      "Platform": "",
      "From": {
        "Image": "jlesage/baseimage-gui:ubuntu-18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Alex \u003cualex73@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "\"1.0.026\""
        },
        {
          "Key": "BUILDDATE",
          "Name": "arg",
          "Value": "\"20190427\""
        },
        {
          "CmdLine": [
            "echo 'APT::Install-Recommends \"0\";' \u003e\u003e /etc/apt/apt.conf.d/no-recommends \u0026\u0026     echo \"APT::Get::Assume-Yes \"true\";\" \u003e /etc/apt/apt.conf.d/always-yes \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get install gnupg             locales \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     echo \"deb http://ppa.launchpad.net/gambas-team/gambas3/ubuntu bionic main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026     apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 50B027516CAEE58D \u0026\u0026     apt-get -qq update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install gambas3     iproute2     iputils-ping     arp-scan     rrdtool     git-core     mysql-client     build-essential     libudev-dev     libcurl4-gnutls-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "GIT_SSL_NO_VERIFY=true git clone --single-branch https://github.com/DomotiGa/DomotiGa.git /domotiga \u0026\u0026     rm -rf /domotiga/.git \u0026\u0026     chown -R 1000:1000 /domotiga"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "GIT_SSL_NO_VERIFY=true git clone https://github.com/OpenZWave/open-zwave /domotiga/wrappers/domozwave/open-zwave \u0026\u0026     rm -rf /domotiga/wrappers/domozwave/open-zwave/.git \u0026\u0026     cd /domotiga/wrappers/domozwave/open-zwave \u0026\u0026     make \u0026\u0026     cd /domotiga/wrappers/domozwave \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     rm -f /domotiga/wrappers/domozwave/libdomozwave.so \u0026\u0026     mv /domotiga/wrappers/domozwave/open-zwave /domotiga/wrappers/domozwave/open-zwave.bak \u0026\u0026     mkdir /domotiga/wrappers/domozwave/open-zwave \u0026\u0026     mv /domotiga/wrappers/domozwave/open-zwave.bak/config /domotiga/wrappers/domozwave/open-zwave \u0026\u0026     rm -rf /domotiga/wrappers/domozwave/open-zwave.bak"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/domotiga"
        },
        {
          "Env": [
            {
              "Key": "APP_NAME",
              "Value": "\"DomotiGa\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SUP_GROUP_IDS",
              "Value": "20"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KEEP_APP_RUNNING",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get purge git     git-man     git-core \u0026\u0026     apt-get autoremove \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "19009/udp",
            "9090/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/domotiga/config",
            "/domotiga/logs",
            "/domotiga/rrd"
          ]
        }
      ]
    }
  ]
}