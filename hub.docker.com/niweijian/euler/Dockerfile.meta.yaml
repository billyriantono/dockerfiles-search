MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools/docker/sources.list
    - /etc/apt
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     ant     autoconf     build-essential     cmake     default-jre     golang-go     python-dev     python-pip     python-setuptools     wget
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-11-openjdk-amd64
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$JAVA_HOME/lib/server
    Name: env
  - CmdLine:
    - wget https://mirrors.aliyun.com/apache/hadoop/common/hadoop-3.1.3/hadoop-3.1.3.tar.gz
      &&     tar -zxf hadoop-3.1.3.tar.gz -C /usr/local  &&     cd /usr/local/  &&     mv
      ./hadoop-3.1.3/ ./hadoop
    Name: run
    PrependShell: true
  - Env:
    - Key: HADOOP_HOME
      Value: /usr/local/hadoop
    Name: env
  - Env:
    - Key: LIBRARY_PATH
      Value: $LIBRARY_PATH:$HADOOP_HOME/lib/native
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$HADOOP_HOME/lib/native
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$HADOOP_HOME/bin
    Name: env
  - CmdLine:
    - sh -c 'echo export CLASSPATH=$CLASSPATH:$(hadoop classpath --glob) >> /etc/bash.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools/docker/pip.conf
    - /root/.pip
  - CmdLine:
    - pip --no-cache-dir install numpy==1.16.4 tensorflow==1.12.3 setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install unzip git curl vim -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /root/quick-begin && cd /root/quick-begin &&     curl -k -O https://raw.githubusercontent.com/alibaba/euler/master/examples/ppi_data.py
      && \tpip install networkx==1.11 scikit-learn==0.19.0 scipy==1.2.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/ && wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/apache-zookeeper-3.5.5-bin.tar.gz
      &&     tar -zxf apache-zookeeper-3.5.5-bin.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /root/ && cp -rf apache-zookeeper-3.5.5-bin /root/server1 && \tcp -rf apache-zookeeper-3.5.5-bin
      /root/server2 && \tcp -rf apache-zookeeper-3.5.5-bin /root/server3 && \tmkdir
      /root/server1/data && echo \"1\" > /root/server1/data/myid && \tmkdir /root/server2/data
      && echo \"2\" > /root/server2/data/myid && \tmkdir /root/server3/data && echo
      \"3\" > /root/server3/data/myid"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/server1/zoo.cfg
    - /root/server1/conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/server2/zoo.cfg
    - /root/server2/conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/server3/zoo.cfg
    - /root/server3/conf
  - CmdLine:
    - echo "export PATH=$PATH:/root/server1/bin/" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "service ssh restart" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openssh-server && ssh-keygen -f /root/.ssh/id_rsa -t rsa
      -N '' && cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /tmp/Euler
  - CmdLine:
    - "mv -f /tmp/Euler/gflags /tmp && cd /tmp/gflags && mv -f build2 build && cd
      build &&     mkdir -p CMakeFiles/gflags_shared.dir/src/ && mkdir -p CMakeFiles/gflags_nothreads_shared.dir/src/
      &&\tmkdir lib && mkdir bin && \tmake && make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/Euler/third_party/zookeeper &&     ((cd zookeeper-client/zookeeper-client-c;       [
      -e generated/zookeeper.jute.h ] && [ -e generated/zookeeper.jute.c ]) ||      ant
      compile_jute)
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/Euler &&     mkdir -p /tmp/build && cd /tmp/build &&     cmake /tmp/Euler
      &&     make -j $(expr $(nproc) \* 2) &&     cd /tmp/Euler &&     python tools/pip/setup.py
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/quick-begin && python ppi_data.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/data
    - /tmp/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/dist_tf_euler.sh
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/dist_start.sh
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdf-init.sh
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdfs-conf/capacity-scheduler.xml
    - $HADOOP_HOME/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdfs-conf/core-site.xml
    - $HADOOP_HOME/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdfs-conf/hadoop-env.sh
    - $HADOOP_HOME/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdfs-conf/hdfs-site.xml
    - $HADOOP_HOME/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdfs-conf/mapred-site.xml
    - $HADOOP_HOME/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/hdfs-conf/yarn-site.xml
    - $HADOOP_HOME/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/deepwalk-demo.py
    - /root/quick-begin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/docker/graphsage-demo.py
    - /root/quick-begin
  - CmdLine:
    - apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'root:123456' |chpasswd  && \tsed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin
      yes/' /etc/ssh/sshd_config && \tsed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
      && \techo 'export $(cat /proc/1/environ |tr \"\\\\0\" \"\\\\n\" | xargs)'ã€€>>
      /etc/profile"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
