{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:lts",
      "SourceCode": "FROM node:lts",
      "Platform": "",
      "From": {
        "Image": "node:lts"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            },
            {
              "Key": "GRADLE_VERSION",
              "Value": "5.6.2"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8.0-openjdk-amd64"
            },
            {
              "Key": "SDK_URL",
              "Value": "\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\""
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/usr/local/android-sdk\""
            },
            {
              "Key": "ANDROID_VERSION",
              "Value": "29"
            },
            {
              "Key": "ANDROID_BUILD_TOOLS_VERSION",
              "Value": "29.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get full-upgrade -y \u0026\u0026     apt-get -y install locales locales-all vim \u0026\u0026     apt-get install -y openjdk-8-jdk openjdk-8-jre \u0026\u0026     apt-get install -y python3 python3-pip \u0026\u0026     echo \"set locale settings\" \u0026\u0026     locale-gen de_DE.UTF-8 \u0026\u0026     update-locale LANG=de_DE.UTF-8 LANGUAGE LC_ALL \u0026\u0026     pip3 install inquirer colorama \u0026\u0026     rm -rf /lib/apt/listspt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/docker_tools:${GRADLE_HOME}/bin:${JAVA_HOME}/bin:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools:${ANDROID_HOME}/emulator:${PATH}"
            },
            {
              "Key": "HOME",
              "Value": "/home/node"
            },
            {
              "Key": "LANG",
              "Value": "de_DE.UTF8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "de"
            },
            {
              "Key": "LC_ALL",
              "Value": "de_DE.UTF8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g ionic cordova \u0026\u0026     chown -R node:node /home/node/.config \u0026\u0026     chown -R node:node /home/node/.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${GRADLE_HOME} \u0026\u0026     curl -L https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \u003e /tmp/gradle.zip \u0026\u0026     unzip /tmp/gradle.zip -d ${GRADLE_HOME} \u0026\u0026     mv ${GRADLE_HOME}/gradle-${GRADLE_VERSION}/* ${GRADLE_HOME} \u0026\u0026     rm -r ${GRADLE_HOME}/gradle-${GRADLE_VERSION}/ \u0026\u0026     rm /tmp/gradle.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ${ANDROID_HOME} /root/.android     \u0026\u0026 touch /root/.android/repositories.cfg     \u0026\u0026 cd ${ANDROID_HOME}     \u0026\u0026 curl -o sdk.zip $SDK_URL     \u0026\u0026 unzip sdk.zip     \u0026\u0026 rm sdk.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${ANDROID_HOME}/tools/bin/sdkmanager --update \u0026\u0026     yes | ${ANDROID_HOME}/tools/bin/sdkmanager --licenses \u0026\u0026     ${ANDROID_HOME}/tools/bin/sdkmanager \"build-tools;${ANDROID_BUILD_TOOLS_VERSION}\"     \"platforms;android-${ANDROID_VERSION}\"     \"platform-tools\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./docker_tools/runner.py",
            "/docker_tools/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "8100"
          ]
        },
        {
          "CmdLine": [
            "/docker_tools/runner.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}