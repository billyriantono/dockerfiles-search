{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "skiychan/nginx-php7",
      "SourceCode": "FROM skiychan/nginx-php7",
      "Platform": "",
      "From": {
        "Image": "skiychan/nginx-php7"
      },
      "Commands": [
        {
          "Maintainer": "Antonio Hern√°ndez \"antonio.hernandez@panamedia.net\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm \u0026\u0026     rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm \u0026\u0026     yum -y update \u0026\u0026     yum -y install libffi libffi-devel python-pip python-devel php70w-xml php70w-bcmath php70w-mbstring php70w-cli rabbitmq-server git sudo bzip2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install setuptools --no-use-wheel --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install boto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_config/ansible.cfg",
            "/etc/ansible/ansible.cfg"
          ]
        },
        {
          "CmdLine": [
            "mkdir /roles"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf www.www /roles"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ansible-galaxy install carlosbuenosvinos.ansistrano-deploy carlosbuenosvinos.ansistrano-rollback"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/playbook"
          ]
        },
        {
          "CmdLine": [
            "mkdir /code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf www.www /code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /assets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf www.www /assets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf www.www /logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | /usr/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./app",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer install --no-dev --no-progress --no-interaction --verbose --working-dir=/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf www.www /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_config/nginx.conf",
            "/usr/local/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_config/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}