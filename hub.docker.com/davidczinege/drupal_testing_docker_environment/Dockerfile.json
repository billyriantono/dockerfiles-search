{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Maintainer": "David Czinege",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 buildDeps=' \t\tlibjpeg62-turbo-dev \t\tlibpng12-dev \t\tlibpq-dev \t' \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 docker-php-ext-configure gd \t\t--with-jpeg-dir=/usr \t\t--with-png-dir=/usr \t\u0026\u0026 docker-php-ext-install -j \"$(nproc)\" gd mbstring opcache pdo pdo_mysql pdo_pgsql zip \t\u0026\u0026 apt-mark manual \t\tlibjpeg62-turbo \t\tlibpq5 \t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e $PHP_INI_DIR/conf.d/memory-limit.ini \u0026\u0026   echo \"date.timezone=America/Chicago\" \u003e $PHP_INI_DIR/conf.d/date_timezone.ini \u0026\u0026   echo \"sendmail_path=/bin/true\" \u003e $PHP_INI_DIR/conf.d/sendmail.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keys.gnupg.net --recv-keys 5072E1F5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mysql.com/apt/debian/ jessie mysql-5.6\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"mysql-server mysql-server/root_password password root\" | debconf-set-selections \u0026\u0026 echo \"mysql-server mysql-server/root_password_again password root\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y   libfreetype6-dev   libjpeg62-turbo-dev   libmcrypt-dev   libpng12-dev   libbz2-dev   php-pear   curl   git   unzip   \u0026\u0026 docker-php-ext-install mcrypt zip bz2 bcmath pdo_mysql mysqli mbstring opcache   \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y mysql-server mysql-client libmysqlclient-dev --no-install-recommends   \u0026\u0026 docker-php-ext-install pdo pdo_mysql   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://getcomposer.org/installer | php -- --filename=composer --install-dir=/usr/bin \u0026\u0026 curl -sSL https://phar.phpunit.de/phpunit-5.7.phar -o /usr/bin/phpunit  \u0026\u0026 chmod +x /usr/bin/phpunit  \u0026\u0026 rm -rf /root/.npm /root/.composer /tmp/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drush/drush:8.* drupal/coder \u0026\u0026 composer global update \u0026\u0026 ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush \u0026\u0026 ln -s /root/.composer/vendor/bin/phpcs /usr/local/bin/phpcs \u0026\u0026 phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}