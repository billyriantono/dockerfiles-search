{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "athlinks/ubuntu:14.04",
      "SourceCode": "FROM athlinks/ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "athlinks/ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     add-apt-repository -y ppa:nginx/stable \u0026\u0026     curl -s https://packagecloud.io/install/repositories/StackStorm/staging-stable/script.deb.sh | bash \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y ca-certificates nginx \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ST2_VERSION",
              "Value": "\"1.4.0-8\""
            },
            {
              "Key": "ST2_MISTRAL_VERSION",
              "Value": "\"1.4.0-8\""
            },
            {
              "Key": "ST2_WEB_VERSION",
              "Value": "\"1.4.0-1\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "com.stackstorm.version",
              "Value": "\"${ST2_VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y     st2=$ST2_VERSION     st2mistral=$ST2_MISTRAL_VERSION     st2web=$ST2_WEB_VERSION \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/st2/st2api.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2api.audit.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2auth.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2auth.audit.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2garbagecollector.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2garbagecollector.audit.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2notifier.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2notifier.audit.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2resultstracker.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2resultstracker.audit.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2rulesengine.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2rulesengine.audit.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2sensorcontainer.log \u0026\u0026     ln -sf /dev/stdout /var/log/st2/st2sensorcontainer.audit.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/nginx/sites-enabled/default \u0026\u0026       mv /etc/nginx/nginx.conf /tmp/nginx.conf \u0026\u0026       echo \"daemon off;\" \u003e /etc/nginx/nginx.conf \u0026\u0026       cat /tmp/nginx.conf \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026       rm /tmp/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/htpasswd",
            "/etc/st2/htpasswd"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/sites-enabled/st2web.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/config.js.template",
            "/tmp/config.js.template"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/st2.conf.template",
            "/tmp/st2.conf.template"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin/docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/st2",
            "/opt/stackstorm/packs"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}