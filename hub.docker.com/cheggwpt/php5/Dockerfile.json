{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6.34-fpm-alpine3.4",
      "SourceCode": "FROM php:5.6.34-fpm-alpine3.4",
      "Platform": "",
      "From": {
        "Image": "php:5.6.34-fpm-alpine3.4"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Joel Gilley jgilley@chegg.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "UTC"
            },
            {
              "Key": "ENV",
              "Value": "/etc/profile"
            },
            {
              "Key": "APP_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add  ca-certificates nginx supervisor bash \u0026\u0026 \tapk add --virtual .build_package git curl build-base autoconf dpkg-dev \t\tfile libmagic re2c cmake dpkg \u0026\u0026 \tapk add --virtual .deps_run libxpm freetype xextproto inputproto xtrans \t\tlibwebp libxext libxt libx11 libxcb libxau libsm libice libxdmcp \t\tlibbsd xproto libuuid kbproto libpthread-stubs libpng \t\tlibmemcached-libs zlib freetds unixodbc readline libpq \t\tgettext-asprintf gettext-libs libintl gettext libunistring libldap zlib \t\ticu-libs libmemcached cyrus-sasl libmcrypt hiredis gmp \u0026\u0026 \tapk add --virtual .build_deps libxau-dev libbsd-dev libxdmcp-dev libxcb-dev \t\tlibx11-dev libxext-dev libice-dev libsm-dev libxt-dev libxpm-dev libpng-dev \t\tfreetype-dev libjpeg-turbo-dev libwebp-dev bzip2-dev gettext-dev gmp-dev \t\ticu-dev freetds-dev postgresql-dev libxml2-dev zlib-dev \t\tlibmemcached-dev cyrus-sasl-dev libmcrypt-dev hiredis-dev tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \u0026\u0026 \techo \"${TIMEZONE}\" \u003e /etc/timezone \u0026\u0026 \tupdate-ca-certificates \u0026\u0026 \trm -rf /etc/nginx/conf.d/default.conf \u0026\u0026 \tmv /etc/profile.d/color_prompt /etc/profile.d/color_prompt.sh \u0026\u0026 \techo alias dir=\\'ls -alh --color\\' \u003e\u003e /etc/profile \u0026\u0026 \techo 'source ~/.profile' \u003e\u003e /etc/profile \u0026\u0026 \techo 'cat /etc/os-release' \u003e\u003e ~/.profile \u0026\u0026 \tmkdir -p /webroot /run/nginx \u0026\u0026 \tchown -R nginx:www-data /run/nginx \u0026\u0026 \tchown -R :www-data /webroot \u0026\u0026 \tchmod -R g+rw /webroot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "tidy_version",
              "Value": "5.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo INSTALL TIDY-HTML5 LIBRARY \u0026\u0026  \tgit clone --branch ${tidy_version} --depth 1 https://github.com/htacg/tidy-html5.git /tmp/tidy-html5 \u0026\u0026 \tcd /tmp/tidy-html5/build/cmake/ \u0026\u0026 \tcmake ../.. -DCMAKE_BUILD_TYPE=Release \u0026\u0026 \tmake \u0026\u0026 make install \u0026\u0026 \tln -s /usr/local/include/tidybuffio.h /usr/local/include/buffio.h \u0026\u0026 \tcd \u0026\u0026 rm -rf /tmp/tidy-html5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo INSTALL DOCKER-PHP-EXT AVAILABLE MODULES \u0026\u0026 \tdocker-php-ext-install -j4 bcmath bz2 gd gettext gmp intl mysqli mcrypt \tpdo_dblib pdo_pgsql pdo_mysql session soap tidy opcache xmlrpc zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo INSTALL PECL APCU MODULES \u0026\u0026 \tyes \"\" | pecl install apcu-4.0.11 \u0026\u0026 \techo \"extension=apcu.so\" \u003e /usr/local/etc/php/conf.d/pecl-php-ext-apcu.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo INSTALL PECL MEMCACHED MODULES \u0026\u0026 \tyes \"\" | pecl install memcached-2.2.0 \u0026\u0026 \techo \"extension=memcached.so\" \u003e /usr/local/etc/php/conf.d/pecl-php-ext-memcached.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "phpredis_version",
              "Value": "4.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo INSTALL PHPREDIS PHP MODULE \u0026\u0026 \tgit clone --branch ${phpredis_version} --depth 1 https://github.com/phpredis/phpredis.git /tmp/phpredis \u0026\u0026 \tcd /tmp/phpredis \u0026\u0026 \tphpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 \techo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/source-php-ext-phpredis.ini \u0026\u0026 \tcd \u0026\u0026 rm -rf /tmp/phpredis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "tideways_version",
              "Value": "1.5.3"
            },
            {
              "Key": "tideways_ext_version",
              "Value": "4.1.5"
            },
            {
              "Key": "tideways_php_version",
              "Value": "2.0.16"
            },
            {
              "Key": "tideways_dl",
              "Value": "https://github.com/tideways/"
            },
            {
              "Key": "TIDEWAYS_PORT_UDP",
              "Value": "8135"
            },
            {
              "Key": "TIDEWAYS_PORT_TCP",
              "Value": "9135"
            },
            {
              "Key": "TIDEWAYS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo INSTALL TIDEWAYS PHP MODULE \u0026\u0026 \tcurl -L \"${tideways_dl}/php-profiler-extension/archive/v${tideways_ext_version}.zip\" \t--output \"/tmp/v${tideways_ext_version}.zip\" \u0026\u0026 \tcd /tmp \u0026\u0026 unzip \"v${tideways_ext_version}.zip\" \u0026\u0026 \tcd \"php-xhprof-extension-${tideways_ext_version}\" \u0026\u0026 \tphpize \u0026\u0026 \t./configure \u0026\u0026 \tmake \u0026\u0026 make install \u0026\u0026 \tcd /tmp \u0026\u0026 rm -rf php-xhprof-extension-${tideways_ext_version}/ v${tideways_ext_version}.zip \u0026\u0026 \techo \"extension=tideways.so\" \u003e /usr/local/etc/php/conf.d/source-php-ext-tideways.ini \u0026\u0026 echo INSTALL TIDEWAYS PROFILER \u0026\u0026 \tcurl -L \"${tideways_dl}/profiler/releases/download/v${tideways_php_version}/Tideways.php\" \t--output \"$(php-config --extension-dir)/Tideways.php\" \u0026\u0026 \tls -l \"$(php-config --extension-dir)/Tideways.php\" \u0026\u0026 echo INSTALL TIDEWAYS DAEMON \u0026\u0026 \tcurl -L \"https://s3-eu-west-1.amazonaws.com/tideways/daemon/${tideways_version}/tideways-daemon-v${tideways_version}-alpine.tar.gz\" \t--output \"/tmp/tideways-daemon-v${tideways_version}-alpine.tar.gz\" \u0026\u0026 \tcd /tmp \u0026\u0026 tar -zxf tideways-daemon-v${tideways_version}-alpine.tar.gz \u0026\u0026 \tmv build/dist/tideways-daemon /usr/bin \u0026\u0026 \tls -l /usr/bin/tideways-daemon \u0026\u0026 \tmkdir -p /var/run/tideways \u0026\u0026 \tcd /tmp \u0026\u0026 rm -rf build/ tideways-daemon-v${tideways_version}-alpine.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "dumbinit_version",
              "Value": "1.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo INSTALL DUMB-INIT PID HANDLER \u0026\u0026 \twget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v${dumbinit_version}/dumb-init_${dumbinit_version}_amd64 \u0026\u0026 \tchmod +x /usr/local/bin/dumb-init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/php \u0026\u0026 \tchown -R www-data:www-data /run/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -m \u0026\u0026 \tphp -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build_deps \u0026\u0026 \tapk del .build_package \u0026\u0026 \trm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container_confs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /entrypoint.sh /wait-for-it.sh /start_tideways.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/webroot"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "supervisor"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}