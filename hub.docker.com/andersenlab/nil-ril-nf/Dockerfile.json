{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "linuxbrew/linuxbrew:1.3.1",
      "SourceCode": "FROM linuxbrew/linuxbrew:1.3.1",
      "Platform": "",
      "From": {
        "Image": "linuxbrew/linuxbrew:1.3.1"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         ed         less         locales         vim-tiny         wget         ca-certificates         fonts-texgyre         libxml2-dev         libcairo2-dev         libsqlite-dev         libmariadbd-dev         libmariadb-client-lgpl-dev         libpq-dev         libssh2-1-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen     \u0026\u0026 locale-gen en_US.utf8     \u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://http.debian.net/debian sid main\" \u003e /etc/apt/sources.list.d/debian-unstable.list     \u0026\u0026 echo 'APT::Default-Release \"testing\";' \u003e /etc/apt/apt.conf.d/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "R_BASE_VERSION",
              "Value": "3.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -t unstable -y --no-install-recommends --allow-unauthenticated         littler                 r-cran-littler         r-base=${R_BASE_VERSION}*         r-base-dev=${R_BASE_VERSION}*         r-recommended=${R_BASE_VERSION}*         \u0026\u0026 echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' \u003e\u003e /etc/R/Rprofile.site         \u0026\u0026 echo 'source(\"/etc/R/Rprofile.site\")' \u003e\u003e /etc/littler.r     \u0026\u0026 ln -s /usr/share/doc/littler/examples/install.r /usr/local/bin/install.r     \u0026\u0026 ln -s /usr/share/doc/littler/examples/install2.r /usr/local/bin/install2.r     \u0026\u0026 ln -s /usr/share/doc/littler/examples/installGithub.r /usr/local/bin/installGithub.r     \u0026\u0026 ln -s /usr/share/doc/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r     \u0026\u0026 install.r docopt     \u0026\u0026 rm -rf /tmp/downloaded_packages/ /tmp/*.rds     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "linuxbrew"
        },
        {
          "CmdLine": [
            "brew install gcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "brew install https://raw.githubusercontent.com/Linuxbrew/homebrew-core/043fb1f50af078db481b971d36c605f0dcf72ccd/Formula/jdk.rb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "brew tap homebrew/science     \u0026\u0026 brew install             bwa             samtools             bcftools             bedtools             nextflow             sambamba             vcflib             vcftools             python2             picard-tools             pigz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "brew install fastqc --ignore-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install numpy cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install https://github.com/AndersenLab/bam-toolbox/archive/0.0.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install vcf-kit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo chown -R linuxbrew:linuxbrew /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "R_LIBS_USER",
              "Value": "/usr/local/lib/R/site-library"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"r \u003c- getOption('repos'); r['CRAN'] \u003c- 'http://cran.us.r-project.org'; options(repos = r);\" \u003e ~/.Rprofile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'install.packages(c(\"tidyverse\", \"cowplot\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln /home/linuxbrew/.linuxbrew/bin/python2 /home/linuxbrew/.linuxbrew/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}