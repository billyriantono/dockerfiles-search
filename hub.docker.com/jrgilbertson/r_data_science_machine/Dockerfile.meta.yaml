MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-runtime-ubuntu16.04
  Commands:
  - Maintainer: '"Jason Gilbertson" jason.gilbertson@gmail.com'
    Name: maintainer
  - Labels:
    - Key: org.label-schema.license
      Value: '"GPL-2.0"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/rocker-org/rocker-versioned"'
    - Key: org.label-schema.vendor
      Value: '"Rocker Project"'
    - Key: maintainer
      Value: '"Carl Boettiger <cboettig@ropensci.org>"'
    Name: label
  - Key: R_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: R_VERSION
      Value: ${R_VERSION:-3.4.4}
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends     bash-completion     ca-certificates     file     fonts-texgyre     g++     gfortran     gsfonts     libblas-dev     libbz2-1.0     libcurl3     libicu57     libjpeg62-turbo     libopenblas-dev     libpangocairo-1.0-0     libpcre3     libpng16-16     libreadline7     libtiff5     liblzma5     locales     make     unzip     zip     zlib1g   &&
      echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen   && locale-gen en_US.utf8   &&
      /usr/sbin/update-locale LANG=en_US.UTF-8   && BUILDDEPS="curl     default-jdk     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     perl     tcl8.6-dev     tk8.6-dev     texinfo     texlive-extra-utils     texlive-fonts-recommended     texlive-fonts-extra     texlive-latex-recommended     x11proto-core-dev     xauth     xfonts-base     xvfb     zlib1g-dev"   &&
      apt-get install -y --no-install-recommends $BUILDDEPS   && cd tmp/   && curl
      -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz   && tar -xf
      R-${R_VERSION}.tar.gz   && cd R-${R_VERSION}   && R_PAPERSIZE=letter     R_BATCHSAVE="--no-save
      --no-restore"     R_BROWSER=xdg-open     PAGER=/usr/bin/pager     PERL=/usr/bin/perl     R_UNZIPCMD=/usr/bin/unzip     R_ZIPCMD=/usr/bin/zip     R_PRINTCMD=/usr/bin/lpr     LIBnn=lib     AWK=/usr/bin/awk     CFLAGS="-g
      -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2
      -g"     CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security
      -Wdate-time -D_FORTIFY_SOURCE=2 -g"   ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas                --with-tcltk                --disable-nls                --without-recommended-packages   &&
      make   && make install   && echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'),
      download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site   &&
      mkdir -p /usr/local/lib/R/site-library   && chown root:staff /usr/local/lib/R/site-library   &&
      chmod g+wx /usr/local/lib/R/site-library   && echo "R_LIBS_USER='/usr/local/lib/R/site-library'"
      >> /usr/local/lib/R/etc/Renviron   && echo "R_LIBS=\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}"
      >> /usr/local/lib/R/etc/Renviron   && [ -z "$BUILD_DATE" ] && BUILD_DATE=$(TZ="America/Los_Angeles"
      date -I) || true   && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE}   &&
      echo MRAN=$MRAN >> /etc/environment   && export MRAN=$MRAN   && Rscript -e "install.packages(c('littler',
      'docopt'), repo = '$MRAN')"   && ln -s /usr/local/lib/R/site-library/littler/examples/install2.r
      /usr/local/bin/install2.r   && ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r   && ln -s /usr/local/lib/R/site-library/littler/bin/r
      /usr/local/bin/r   && curl -O /usr/local/bin/install2.r https://github.com/eddelbuettel/littler/raw/master/inst/examples/install2.r   &&
      chmod +x /usr/local/bin/install2.r   && cd /   && rm -rf /tmp/*   && apt-get
      remove --purge -y $BUILDDEPS   && apt-get autoremove -y   && apt-get autoclean
      -y   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - R
    Name: cmd
    PrependShell: false
  - Key: RSTUDIO_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: PATH
      Value: /usr/lib/rstudio-server/bin:$PATH
    Name: env
  - CmdLine:
    - "apt-get update   && apt-get install -y --no-install-recommends     file     git
      \    libapparmor1     libcurl4-openssl-dev     libedit2     libssl-dev     lsb-release
      \    psmisc     python-setuptools     sudo     wget   && wget -O libssl1.0.0.deb
      http://ftp.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u7_amd64.deb
      \  && dpkg -i libssl1.0.0.deb   && rm libssl1.0.0.deb   && RSTUDIO_LATEST=$(wget
      --no-check-certificate -qO- https://s3.amazonaws.com/rstudio-server/current.ver)
      \  && [ -z \"$RSTUDIO_VERSION\" ] && RSTUDIO_VERSION=$RSTUDIO_LATEST || true
      \  && wget -q http://download2.rstudio.org/rstudio-server-${RSTUDIO_VERSION}-amd64.deb
      \  && dpkg -i rstudio-server-${RSTUDIO_VERSION}-amd64.deb   && rm rstudio-server-*-amd64.deb
      \  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin   && ln
      -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin   && git
      clone https://github.com/jgm/pandoc-templates   && mkdir -p /opt/pandoc/templates
      \  && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates*
      \  && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates
      \  && apt-get clean   && rm -rf /var/lib/apt/lists/   && mkdir -p /etc/R   &&
      echo '\\n    \\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST
      \    \\n# is not set since a redirect to localhost may not work depending upon
      \    \\n# where this Docker container is running.     \\nif(is.na(Sys.getenv(\"HTTR_LOCALHOST\",
      unset=NA))) {     \\n  options(httr_oob_default = TRUE)     \\n}' >> /usr/local/lib/R/etc/Rprofile.site
      \  && echo \"PATH=${PATH}\" >> /usr/local/lib/R/etc/Renviron   && useradd rstudio
      \  && echo \"rstudio:rstudio\" | chpasswd \t&& mkdir /home/rstudio \t&& chown
      rstudio:rstudio /home/rstudio \t&& addgroup rstudio staff   &&  echo 'rsession-which-r=/usr/local/bin/R'
      >> /etc/rstudio/rserver.conf   && echo 'lock-type=advisory' >> /etc/rstudio/file-locks
      \  && git config --system credential.helper 'cache --timeout=3600'   && git
      config --system push.default simple   && wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz
      \  && tar xzf /tmp/s6-overlay-amd64.tar.gz -C /   && mkdir -p /etc/services.d/rstudio
      \  && echo '#!/usr/bin/with-contenv bash           \\n exec /usr/lib/rstudio-server/bin/rserver
      --server-daemonize 0'           > /etc/services.d/rstudio/run   && echo '#!/bin/bash
      \          \\n rstudio-server stop'           > /etc/services.d/rstudio/finish
      \  && mkdir -p /home/rstudio/.rstudio/monitored/user-settings   && echo 'alwaysSaveHistory=\"0\"
      \          \\nloadRData=\"0\"           \\nsaveAction=\"0\"'           > /home/rstudio/.rstudio/monitored/user-settings/user-settings
      \  && chown -R rstudio:rstudio /home/rstudio/.rstudio"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - userconf.sh
    - /etc/cont-init.d/userconf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - add_shiny.sh
    - /etc/cont-init.d/add
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pam-helper.sh
    - /usr/lib/rstudio-server/bin/pam-helper
  - Name: expose
    Ports:
    - "8787"
  - Name: volume
    Volumes:
    - /home/rstudio/kitematic
  - CmdLine:
    - /init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tapt-utils
      \t\tdefault-jdk \t\tlibbz2-dev \t\tlibcairo2-dev \t\tlibcurl4-openssl-dev \t\tlibglu1-mesa-dev
      \t\tlibgsl0-dev \t\tlibhunspell-dev \t\tlibicu-dev \t\tliblzma-dev \t\tlibmagick++-dev
      \t\tlibmariadb-client-lgpl-dev \t\tlibmariadbd-dev \t\tlibnlopt-dev \t\tlibomp-dev
      \t\tlibpq-dev \t\tlibsqlite3-dev \t\tlibssh2-1-dev \t\tlibssl-dev \t\tlibxml2-dev
      \t\tmesa-common-dev \t\tssh \t\ttk \t\tunixodbc-dev \t\t&& R -e \"source('https://bioconductor.org/biocLite.R')\""
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.R/     && echo "CXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable
      -Wno-unused-function -flto -ffat-lto-objects  -Wno-unused-local-typedefs \n"
      >> $HOME/.R/Makevars
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y --no-install-recommends install     ed     clang      ccache     &&
      install2.r --error         ggstance ggrepel         miniUI PKI RCurl RJSONIO
      packrat minqa nloptr matrixStats inline         colourpicker DT dygraphs gtools
      rsconnect shinyjs shinythemes threejs         xts bayesplot lme4 loo rstantools
      StanHeaders RcppEigen         rstan shinystan rstanarm broom
    Name: run
    PrependShell: true
  - CmdLine:
    - install2.r --error --deps TRUE devtools formatR selectr caTools remotes
    Name: run
    PrependShell: true
  - CmdLine:
    - install2.r --error --deps TRUE tidyverse caret GGally outliers hrbrthemes reprex
    Name: run
    PrependShell: true
  - CmdLine:
    - install2.r --error --deps TRUE lime quantmod zoo h2o lintr skimr profvis aws.s3
    Name: run
    PrependShell: true
  - CmdLine:
    - install2.r --error --deps TRUE lubridate xgboost syuzhet tidytext sparklyr
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/downloaded_packages/ /tmp/*.rds
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:9.0-runtime-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-runtime-ubuntu16.04
