MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - "apt-get update -y \t&& apt-get -y upgrade \t&& apt-get install -y --no-install-recommends
      ca-certificates git build-essential \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PATH
      Value: /usr/local/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.5.0
    Name: env
  - CmdLine:
    - "mkdir $JULIA_PATH \t&& apt-get update && apt-get install -y curl \t&& curl
      -sSL \"https://julialang.s3.amazonaws.com/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\"
      -o julia.tar.gz \t&& curl -sSL \"https://julialang.s3.amazonaws.com/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz.asc\"
      -o julia.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys 3673DF529D9049477F76B37566E3C7DC03D6E495
      \t&& gpg --batch --verify julia.tar.gz.asc julia.tar.gz \t&& rm -r \"$GNUPGHOME\"
      julia.tar.gz.asc \t&& tar -xzf julia.tar.gz -C $JULIA_PATH --strip-components
      1 \t&& rm -rf /var/lib/apt/lists/* julia.tar.gz*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $JULIA_PATH/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - julia_init.jl
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - julia_start.jl
    - /tmp/
  - CmdLine:
    - julia /tmp/julia_init.jl
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: volume
    Volumes:
    - /tmp
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - /bin/sh
    - -c
    - /root/.julia/v0.5/Conda/deps/usr/bin/jupyter-notebook --no-browser --ip=0.0.0.0
      --notebook-dir=/tmp
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
