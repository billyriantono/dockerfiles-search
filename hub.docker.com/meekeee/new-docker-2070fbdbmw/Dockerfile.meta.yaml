MetaArgs: null
Stages:
- BaseName: debian:jessie-slim
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update --fix-missing     && apt-get install -y --no-install-recommends
      ca-certificates build-essential    && apt-get install -y wget curl bzip2 libncurses5-dev
      libx11-dev libxtst-dev grep sed dpkg\t&& apt-get install -y libglib2.0-0 libxext6
      libsm6 libxrender1 git mercurial subversion     && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \t&& wget
      --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh -O
      ~/anaconda.sh \t&& /bin/bash ~/anaconda.sh -b -p /opt/conda \t&& rm ~/anaconda.sh
      \t&& /opt/conda/bin/conda install jupyter -y --quiet \t&& mkdir /opt/notebooks"
    Name: run
    PrependShell: true
  - CmdLine:
    - "TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o
      \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \t&& curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\"
      > tini.deb \t&& dpkg -i tini.deb \t&& rm tini.deb \t&& apt-get clean"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Env:
    - Key: JULIA_PATH
      Value: /opt/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.6.0
    Name: env
  - CmdLine:
    - "mkdir $JULIA_PATH \t\t&& curl -sSL \"https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\"
      -o julia.tar.gz \t\t&& tar -xzf julia.tar.gz -C $JULIA_PATH --strip-components
      1 \t\t&& rm -rf /var/lib/apt/lists/* julia.tar.gz*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $JULIA_PATH/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update    && apt-get install -y unzip libxt6
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - julia_init.jl
    - /tmp/
  - CmdLine:
    - julia /tmp/julia_init.jl
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sSL \"http://www.neuron.yale.edu/ftp/neuron/versions/v7.5/nrn-7.5.tar.gz\"
      -o /opt/nrn-7.5.tar.gz      && cd /opt \t && tar -xf nrn-7.5.tar.gz \t && mkdir
      nrn \t && rm nrn-7.5.tar.gz \t && cd /opt/nrn-7.5      && ./configure --prefix=/opt/nrn
      --without-iv --with-nrnpython=dynamic --with-pyexe=python3.6      && make \t
      && make install      && cd src/nrnpython      && /opt/conda/bin/python setup.py
      install"
    Name: run
    PrependShell: true
  - Env:
    - Key: NRNHOME
      Value: /opt/nrn
    Name: env
  - Env:
    - Key: CPU
      Value: x86_64
    Name: env
  - Env:
    - Key: PATH
      Value: $NRNHOME/$CPU/bin:$PATH
    Name: env
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8888"
  - Name: volume
    Volumes:
    - /opt/notebooks
  - Name: workdir
    Path: /opt/notebooks
  - CmdLine:
    - jupyter
    - notebook
    - --port=8888
    - --no-browser
    - --ip=0.0.0.0
    - --allow-root
    - --NotebookApp.token='mg'
    - --notebook-dir=/opt/notebooks
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie-slim
