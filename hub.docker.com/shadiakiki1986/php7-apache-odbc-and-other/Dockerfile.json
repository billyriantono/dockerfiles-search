{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-apache",
      "SourceCode": "FROM php:7-apache",
      "Platform": "",
      "From": {
        "Image": "php:7-apache"
      },
      "Commands": [
        {
          "Maintainer": "Shadi Akiki",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u003e /dev/null \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get -qq -y install       curl git libmcrypt-dev libyaml-dev       vim unixodbc unixodbc-dev tdsodbc       libssl-dev       zlib1g-dev       wget unzip       \u003c /dev/null \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mcrypt mbstring bcmath \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl channel-update pecl.php.net \u0026\u0026     pecl install       zip yaml-2.0.0 mongodb       \u003c /dev/null \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable zip mcrypt mongodb yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026     chmod +x composer.phar \u0026\u0026     mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 cd /usr/src/ \u0026\u0026 tar -xf php.tar.xz \u0026\u0026 mv php-7* php     \u0026\u0026 cd /usr/src/php/ext/odbc     \u0026\u0026 phpize     \u0026\u0026 sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *\u0026\u0026 *PHP_.*=yes *$@#\u0026@g' configure     \u0026\u0026 ./configure --with-unixODBC=shared,/usr \u003e /dev/null     \u0026\u0026 docker-php-ext-install odbc \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget --quiet https://github.com/phpredis/phpredis/archive/php7.zip -O phpredis.zip \u0026\u0026     unzip -q -o /tmp/phpredis.zip \u0026\u0026 mv /tmp/phpredis-* /usr/src/php/ext/redis \u0026\u0026     cd /usr/src/php/ext/redis \u0026\u0026     phpize \u0026\u0026 ./configure \u003e /dev/null \u0026\u0026     docker-php-ext-install redis \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"if (new Redis() == true){ echo \\\"OK \\r\\n\\\"; }\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install sockets \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -i|grep mongo   \u0026\u0026 php -i | grep zip   \u0026\u0026 php -i | grep odbc   \u0026\u0026 php -i | grep redis   \u0026\u0026 php -i | grep sockets   \u0026\u0026 php -i | grep yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Beirut"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.composer/cache"
          ]
        }
      ]
    }
  ]
}