{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:sid-slim",
      "SourceCode": "FROM debian:sid-slim",
      "Platform": "",
      "From": {
        "Image": "debian:sid-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "MAINTAINER",
              "Value": "Wes Widner \u003ckai5263499@gmail.com\u003e"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "gopher"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 useradd -rm -d /home/${NB_USER} -s /bin/bash -g root -G sudo -u ${NB_UID} ${NB_USER}     \u0026\u0026 mkdir /home/$NB_USER/work     \u0026\u0026 mkdir /home/$NB_USER/.jupyter     \u0026\u0026 mkdir /home/$NB_USER/.local     \u0026\u0026 mkdir -p /home/$NB_USER/.local/share/jupyter/kernels/gophernotes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     alsa-utils     ca-certificates     libasound2 libasound2-plugins     pulseaudio pulseaudio-utils portaudio19-dev     libportmidi0 libportmidi-dev     gcc automake autoconf libtool git make direnv     libespeak-ng1 libespeak-ng-dev espeak-ng-data espeak-ng     sox swig ffmpeg curl pkg-config libatlas-base-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CGO_ENABLED",
              "Value": "1"
            },
            {
              "Key": "CGO_CPPFLAGS",
              "Value": "\"-I/usr/include\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y python3 python3-pip     jupyter-notebook ca-certificates     pkg-config libzmq5 libzmq3-dev     golang go-dep     libsptk-dev libosptk4 sptk     ca-certificates libzmq5 libzmq3-dev pkg-config     python3-numpy python-h5py     python3-pyaudio libsdl-ttf2.0-0 python3-pygame \u0026\u0026 git clone --depth 1 https://github.com/gopherdata/gophernotes.git /go/src/github.com/gopherdata/gophernotes \u0026\u0026 go install github.com/gopherdata/gophernotes \u0026\u0026 mkdir -p /go/src/github.com/xigh \u0026\u0026 git clone --depth 1 https://github.com/xigh/spectrogram /go/src/github.com/xigh/spectrogram"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 go get -insecure github.com/pebbe/zmq4     \u0026\u0026 go get github.com/gopherdata/gophernotes     \u0026\u0026 mkdir -p ~/.local/share/jupyter/kernels/gophernotes     \u0026\u0026 cp -r /go/src/github.com/gopherdata/gophernotes/kernel/* /home/$NB_USER/.local/share/jupyter/kernels/gophernotes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 go get -insecure gonum.org/v1/plot/...     \u0026\u0026 go get -insecure gonum.org/v1/gonum/...     \u0026\u0026 go get github.com/kniren/gota/...     \u0026\u0026 go get github.com/sajari/regression     \u0026\u0026 go get github.com/sjwhitworth/golearn/...     \u0026\u0026 go get -insecure go-hep.org/x/hep/csvutil/...     \u0026\u0026 go get -insecure go-hep.org/x/hep/fit     \u0026\u0026 go get -insecure go-hep.org/x/hep/hbook     \u0026\u0026 go get github.com/montanaflynn/stats     \u0026\u0026 go get github.com/boltdb/bolt     \u0026\u0026 go get github.com/patrickmn/go-cache     \u0026\u0026 go get github.com/chewxy/math32     \u0026\u0026 go get gonum.org/v1/gonum/mat     \u0026\u0026 go get github.com/chewxy/hm     \u0026\u0026 go get -u gorgonia.org/gorgonia     \u0026\u0026 go get -u gorgonia.org/vecf64     \u0026\u0026 go get -u gorgonia.org/vecf32     \u0026\u0026 go get github.com/awalterschulze/gographviz     \u0026\u0026 go get github.com/leesper/go_rng     \u0026\u0026 go get github.com/pkg/errors     \u0026\u0026 go get github.com/stretchr/testify/assert     \u0026\u0026 go get github.com/kniren/gota/dataframe     \u0026\u0026 go get github.com/skelterjohn/go.matrix     \u0026\u0026 go get github.com/gonum/matrix/mat64     \u0026\u0026 go get github.com/gonum/stat     \u0026\u0026 go get github.com/mash/gokmeans     \u0026\u0026 go get github.com/garyburd/go-oauth/oauth     \u0026\u0026 go get github.com/machinebox/sdk-go/textbox     \u0026\u0026 go get github.com/go-audio/aiff     \u0026\u0026 go get github.com/go-audio/audio     \u0026\u0026 go get github.com/go-audio/wav     \u0026\u0026 go get github.com/mjibson/go-dsp/fft     \u0026\u0026 go get github.com/mjibson/go-dsp/spectral     \u0026\u0026 go get github.com/mjibson/go-dsp/window     \u0026\u0026 go get github.com/mjibson/go-dsp/wav     \u0026\u0026 go get github.com/mattetti/audio/decoder     \u0026\u0026 go get github.com/r9y9/gossp/io     \u0026\u0026 go get github.com/r9y9/gossp/window     \u0026\u0026 go get github.com/r9y9/gossp/stft     \u0026\u0026 go get github.com/davecgh/go-spew/spew     \u0026\u0026 go get github.com/brentnd/go-snowboy     \u0026\u0026 go get github.com/gordonklaus/portaudio     \u0026\u0026 go get github.com/r9y9/gossp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 git clone https://github.com/r9y9/SPTK.git \u0026\u0026 cd SPTK \u0026\u0026 ./waf configure \u0026\u0026 ./waf \u0026\u0026 ./waf install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 pip3 install tensorflow keras     flask flask_socketio python_speech_features     spidev librosa matplotlib pandas python-pptx     tqdm tensorboard sklearn scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set +x \u0026\u0026 chown -R ${NB_USER} /go \u0026\u0026 chown -R ${NB_USER} /home/${NB_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "gopher"
        },
        {
          "Name": "workdir",
          "Path": "/go"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--no-browser",
            "--ip=0.0.0.0",
            "--NotebookApp.token=''",
            "--NotebookApp.disable_check_xsrf=True",
            "--notebook-dir=/go/src/github.com/kai5263499/gophernotes-audio-ml/notebooks"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}