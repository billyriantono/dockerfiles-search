{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:6.3",
      "SourceCode": "FROM node:6.3",
      "Platform": "",
      "From": {
        "Image": "node:6.3"
      },
      "Commands": [
        {
          "Maintainer": "Daniel Oliveira",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 groupadd -r baphomet --gid=1000 \t\u0026\u0026 useradd -r -g baphomet --uid=1000 baphomet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x       \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/*       \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"       \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"       \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"       \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"       \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4       \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu       \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc       \u0026\u0026 chmod +x /usr/local/bin/gosu       \u0026\u0026 gosu nobody true       \u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOST",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "7001"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$PORT"
          ]
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Retries": 5,
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost:$PORT/ || exit 1"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "CmdLine": [
            "npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/src/app/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}