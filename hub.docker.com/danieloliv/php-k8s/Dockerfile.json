{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.1.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y apt-transport-https autoconf ca-certificates curl g++ gcc git         libfontconfig1 libjpeg62-turbo-dev libpng-dev libxml2-dev libxrender1 make         zip zlib1g-dev nodejs yarn \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \u0026\u0026     chmod +x /usr/local/bin/composer \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu \u0026\u0026     echo \"extension=apcu.so\" \u003e /usr/local/etc/php/conf.d/apcu.ini \u0026\u0026     docker-php-ext-install bcmath \u0026\u0026     docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install -j$(nproc) gd zip pdo pdo_mysql soap sockets pcntl opcache shmop \u0026\u0026     echo \"opcache.enable_cli=1\" \u003e /usr/local/etc/php/conf.d/opcache-cli.ini \u0026\u0026     chown www-data.www-data -R $(php-config --prefix)/etc/php/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./composer.json",
            "./composer.lock",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo \u0026\u0026 \t\t/usr/local/bin/composer install --no-autoloader --no-scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p         bootstrap/cache         storage/app         storage/framework/cache         storage/framework/sessions         storage/framework/views         storage/logs \u0026\u0026     mv envs/.env.production .env \u0026\u0026     chown www-data:www-data /app \u0026\u0026     chown -R www-data:www-data storage bootstrap/cache/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "web"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}