MetaArgs: null
Stages:
- BaseName: ubuntu:17.10
  Commands:
  - Env:
    - Key: abc
      Value: hello
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libevent-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y golang
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y librdkafka-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker.io
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-pip vim nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y liblzma-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libunwind-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libcurl4-openssl-dev libidn11-dev libkrb5-dev libldap2-dev
      librtmp-dev libidn2-dev libpsl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq     git     cmake     clang-5.0     g++     libcurlpp-dev     flex     bison     libkrb5-dev     libsasl2-dev     libnuma-dev     pkg-config     libssl-dev     libcap-dev     gperf     autoconf-archive     libevent-dev     libtool     libboost-all-dev     libjemalloc-dev     libsnappy-dev     wget     unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgflags-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libdouble-conversion-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgoogle-glog-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install plumbum pyyaml weka-easypy
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/proxygen
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/include/catch2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/catchorg/Catch2/releases/download/v2.1.0/catch.hpp
      -o /usr/local/include/catch2/catch.hpp
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://curl.haxx.se/download/curl-7.58.0.tar.gz -o /root/curl.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && tar -zxf  /root/curl.tar.gz && cd curl-7.58.0/ &&     ./configure  --enable-optimize
      --disable-dict --disable-gopher --disable-ftp --disable-imap --disable-ldap     --disable-ldaps
      --disable-pop3 --disable-proxy --disable-rtsp --disable-smtp --disable-telnet
      --disable-tftp     --disable-zlib --without-ca-bundle --without-gnutls --without-libidn
      --without-librtmp --without-libssh2     --without-nss  --without-zlib --disable-psl
      --without-libidn2 --disable-ba --disable-shared --without-libpsl     --enable-static
      && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/jpbarrette/curlpp/archive/v0.8.1.tar.gz -o /root/curlpp.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && tar -zxf curlpp.tar.gz && cd curlpp-0.8.1 && mkdir build && cd build
      && CXXFLAGS=-fPIC CFLAGS=-fPIC cmake make .. -DBUILD_STATIC_LIBS=true && make
      && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/facebook/proxygen/archive/v2018.04.09.00.zip -o /root/proxygen.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && unzip proxygen.zip && cd proxygen-2018.04.09.00/proxygen
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - deps.sh
    - /root/proxygen-2018.04.09.00/proxygen
  - Chown: ""
    Name: add
    SourcesAndDest:
    - 0001-Control-installation-of-signal-handlers-through-the-.patch
    - /root/0001-Control-installation-of-signal-handlers-through-the-.patch
  - CmdLine:
    - chmod 755 /root/proxygen-2018.04.09.00/proxygen/deps.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email "you@example.com"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.name "Your Name"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/proxygen-2018.04.09.00/proxygen && ./deps.sh && ./reinstall.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential fakeroot devscripts apt-src
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build_packages.py
    - /root/build_packages.py
  - CmdLine:
    - chmod 755 /root/build_packages.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i.bak 's/# deb-src /deb-src /' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py google-glog
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && CXX="x86_64-linux-gnu-g++ -fPIC" /root/build_packages.py double-conversion
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py lzma
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py libunwind
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && dpkg -i *.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/gflags/gflags/archive/v2.2.1.tar.gz -o /root/gflags.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && tar -zxf gflags.tar.gz && cd gflags-2.2.1 && mkdir build && cd build
      && CXXFLAGS=-fPIC CFLAGS=-fPIC cmake .. && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:webupd8team/java
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true"
      | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y oracle-java8-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:cwchien/gradle
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gradle
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y daemonize
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install rpyc requests
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get build-dep -y grpc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get build-dep -y c-ares
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get build-dep -y protobuf
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py grpc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py c-ares
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py protobuf
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i /root/*grpc*deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i /root/*protobuf-compiler-grpc*deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i /root/*protobuf-dev*deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i /root/*libc-ares2*deb
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && /root/build_packages.py zlib
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /root/*dbg*
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i /root/zlib1g*deb
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L http://apache.mivzakim.net/kafka/1.0.0/kafka_2.11-1.0.0.tgz -o /root/kafka.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && tar -zxf /root/kafka.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /root/*deb /root/*buildinfo /root/*changes /root/*.dsc /root/*.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /root/*tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/lib/octarine
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/include/fake_it
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/eranpeer/FakeIt/2.0.4/single_header/standalone/fakeit.hpp
      -o /usr/local/include/fake_it/fakeit.hpp
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/lib/docker
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Env:
    - Key: PATH
      Value: /opt/ldc2/bin:$PATH
    Name: env
  From:
    Image: ubuntu:17.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.10
