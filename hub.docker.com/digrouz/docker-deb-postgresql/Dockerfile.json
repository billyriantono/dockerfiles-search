{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"DI GREGORIO Nicolas \u003cnicolas.digregorio@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/postgresql/$PG_MAJOR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "perl -npe 's/main/main\\ contrib\\ non-free/' -i /etc/apt/sources.list \u0026\u0026     apt-get update \u0026\u0026     groupadd -g 2005 postgres \u0026\u0026     useradd postgres -u 2005 -g postgres -r -m -d /var/lib/postgresql -s /bin/false \u0026\u0026     apt-get install -y --no-install-recommends ca-certificates postgresql-common wget \u0026\u0026     wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"  \u0026\u0026     wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \u0026\u0026     export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026     gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \u0026\u0026     rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \u0026\u0026     chmod +x /usr/local/bin/gosu \u0026\u0026     sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \u0026\u0026     apt-get install -y --no-install-recommends postgresql postgresql-contrib \u0026\u0026     wget --no-check-certificate https://raw.githubusercontent.com/digrouz/docker-deb-postgresql/master/docker-entrypoint.sh -O /usr/local/bin/docker-entrypoint.sh \u0026\u0026     chmod +x /usr/local/bin/docker-entrypoint.sh \u0026\u0026     mkdir -p /var/run/postgresql \u0026\u0026     chown -R postgres /var/run/postgresql \u0026\u0026     mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \u0026\u0026     ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \u0026\u0026     sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample \u0026\u0026     apt-get -y autoclean \u0026\u0026     apt-get -y clean \u0026\u0026     apt-get -y autoremove \u0026\u0026     ln -s /usr/local/bin/docker-entrypoint.sh / \u0026\u0026     gosu nobody true \u0026\u0026     apt-get purge -y --auto-remove ca-certificates wget \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}