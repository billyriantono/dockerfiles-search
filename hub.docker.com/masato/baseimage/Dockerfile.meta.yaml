MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.9.15
  Commands:
  - Maintainer: Masato Shimizu <ma6ato@gmail.com>
    Name: maintainer
  - Env:
    - Key: RUBY_VERSION
      Value: 2.2.0
    Name: env
  - Env:
    - Key: TYPESAFE_VERSION
      Value: 1.2.10
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: v0.10
    Name: env
  - Env:
    - Key: LEIN_VERSION
      Value: 2.5.0
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/enable_insecure_key
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:webupd8team/java &&     echo oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive     apt-get install -y
      build-essential software-properties-common                        autoconf bison
      build-essential libssl-dev libyaml-dev                        libreadline6-dev
      zlib1g-dev libncurses5-dev libffi-dev                        zlib1g-dev  libyaml-dev                        libxml2-dev
      libxslt-dev sqlite3 libsqlite3-dev                         emacs24-nox emacs24-el
      git byobu wget curl unzip tree elinks                        python-dev python-pip
      golang                        oracle-java8-installer oracle-java8-set-default
      ant maven
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: LANG
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - locale-gen $LANG && update-locale $LANG &&     ln -sf /usr/share/zoneinfo/Asia/Tokyo
      /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set editor /usr/bin/vim.basic
    Name: run
    PrependShell: true
  - Env:
    - Key: USERNAME
      Value: docker
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USERNAME}
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:${HOME}/bin
    Name: env
  - CmdLine:
    - useradd -m -d ${HOME} -s /bin/bash ${USERNAME} &&     echo "${USERNAME}:${USERNAME}"
      | chpasswd &&     mkdir ${HOME}/.ssh ${HOME}/tmp &&     chmod 700 ${HOME}/.ssh
      &&     cp /root/.ssh/authorized_keys ${HOME}/.ssh &&     chmod 600 ${HOME}/.ssh/authorized_keys
      &&     chown -R ${USERNAME}:${USERNAME} ${HOME}/.ssh &&     echo "export LANG=ja_JP.UTF-8"
      >> ${HOME}/.bashrc &&     echo "docker ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/ruby-build.git .ruby-build &&     .ruby-build/install.sh
      &&     rm -fr .ruby-build &&     ruby-build ${RUBY_VERSION} /usr/local &&     gem
      update --system &&     gem install bundler --no-rdoc --no-ri
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://download.mono-project.com/repo/debian wheezy main" > /etc/apt/sources.list.d/mono-xamarin.list
      &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install
      -y mono-devel fsharp mono-vbnc nuget
    Name: run
    PrependShell: true
  - CmdLine:
    - mozroots --machine --import --sync --quiet
    Name: run
    PrependShell: true
  - Env:
    - Key: USERNAME
      Value: docker
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USERNAME}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dotfiles
    - ${HOME}
  - CmdLine:
    - chown -R ${USERNAME}:${USERNAME} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${USERNAME}
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.22.0/install.sh | bash
      &&     /bin/bash -c 'source ${HOME}/.nvm/nvm.sh &&                   nvm install
      ${NODE_VERSION} &&                   nvm use ${NODE_VERSION} &&                   nvm
      alias default ${NODE_VERSION} &&                   npm install -g npm &&                   npm
      install -g strongloop &&                   npm install -g jsxhint &&                   npm
      cache clear'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${HOME}/gocode/src ${HOME}/gocode/bin ${HOME}/gocode/pkg &&     echo
      "export GOPATH=${HOME}/gocode" >> ${HOME}/.bashrc &&     echo "export PATH=${PATH}:${HOME}/gocode/bin"
      >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-x64-release.zip
      -P ${HOME} &&     unzip ${HOME}/dartsdk-linux-x64-release.zip -d ${HOME} &&     echo
      "export PATH=${PATH}:${HOME}/dart-sdk/bin" >> ${HOME}/.bashrc &&     rm ${HOME}/dartsdk-linux-x64-release.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${HOME}/bin &&    wget http://downloads.typesafe.com/typesafe-activator/${TYPESAFE_VERSION}/typesafe-activator-${TYPESAFE_VERSION}.zip
      -P ${HOME} &&    unzip ${HOME}/typesafe-activator-${TYPESAFE_VERSION}.zip -d
      ${HOME} &&    ln -s ${HOME}/activator-${TYPESAFE_VERSION}/activator ${HOME}/bin/activator
      &&    rm ${HOME}/typesafe-activator-${TYPESAFE_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSkL https://raw.github.com/cask/cask/master/go | python &&     echo
      "export PATH=${HOME}/.cask/bin:$PATH" >> ${HOME}/.profile &&     /bin/bash -c
      "source ${HOME}/.profile && cd ${HOME}/.emacs.d && cask install"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://raw.githubusercontent.com/technomancy/leiningen/${LEIN_VERSION}/bin/lein
      >     ${HOME}/bin/lein &&     chmod 0755 ${HOME}/bin/lein
    Name: run
    PrependShell: true
  - Env:
    - Key: LEIN_ROOT
      Value: "1"
    Name: env
  - CmdLine:
    - lein
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dotfiles/.lein/profiles.clj
    - ${HOME}/.lein/
  - CmdLine:
    - curl -s get.gvmtool.net | bash &&     /bin/bash -c 'source ${HOME}/.gvm/bin/gvm-init.sh
      && gvm install springboot && gvm install gradle'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${HOME}/.emacs.d &&     git clone https://github.com/emacs-java/auto-java-complete
      &&     cd auto-java-complete &&     javac Tags.java -encoding UTF-8 &&     java
      -cp "/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:." Tags
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Name: workdir
    Path: /root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sv
    - /etc/service
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: phusion/baseimage:0.9.15
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.9.15
