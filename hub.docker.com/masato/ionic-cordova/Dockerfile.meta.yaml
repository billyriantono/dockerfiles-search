MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.9.15
  Commands:
  - Maintainer: Masato Shimizu <ma6ato@gmail.com>
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/enable_insecure_key
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:webupd8team/java &&     echo oracle-java7-installer shared/accepted-oracle-license-v1-1
      select true | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive     apt-get install -y
      build-essential software-properties-common                        python emacs24-nox
      emacs24-el                        git byobu wget curl unzip tree elinks                        oracle-java7-installer
      oracle-java7-set-default ant                        lib32z1 lib32ncurses5 lib32bz2-1.0
      lib32stdc++6
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-7-oracle
    Name: env
  - Env:
    - Key: LANG
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - locale-gen $LANG && update-locale $LANG &&     ln -sf /usr/share/zoneinfo/Asia/Tokyo
      /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set editor /usr/bin/vim.basic
    Name: run
    PrependShell: true
  - Env:
    - Key: USERNAME
      Value: docker
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USERNAME}
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:${HOME}/bin
    Name: env
  - CmdLine:
    - useradd -m -d ${HOME} -s /bin/bash ${USERNAME} &&     echo "${USERNAME}:${USERNAME}"
      | chpasswd &&     mkdir ${HOME}/.ssh ${HOME}/tmp &&     chmod 700 ${HOME}/.ssh
      &&     cp /root/.ssh/authorized_keys ${HOME}/.ssh &&     chmod 600 ${HOME}/.ssh/authorized_keys
      &&     chown -R ${USERNAME}:${USERNAME} ${HOME}/.ssh &&     echo "export LANG=ja_JP.UTF-8"
      >> ${HOME}/.bashrc &&     echo "docker ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - Env:
    - Key: USERNAME
      Value: docker
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USERNAME}
    Name: env
  - Name: workdir
    Path: /data
  - Env:
    - Key: DATA_DIR
      Value: /data
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dotfiles
    - ${HOME}
  - CmdLine:
    - mkdir -p /data &&     chown -R ${USERNAME}:${USERNAME} ${HOME} ${DATA_DIR}
    Name: run
    PrependShell: true
  - Name: user
    User: ${USERNAME}
  - CmdLine:
    - curl -fsSkL https://raw.github.com/cask/cask/master/go | python &&     echo
      "export PATH=${HOME}/.cask/bin:$PATH" >> ${HOME}/.profile &&     /bin/bash -c
      'source ${HOME}/.profile && cd ${HOME}/.emacs.d && cask install'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${HOME}/.emacs.d &&     git clone https://github.com/emacs-java/auto-java-complete
      &&     cd auto-java-complete &&     javac Tags.java -encoding UTF-8 &&     java
      -cp "/usr/lib/jvm/java-7-oracle/jre/lib/rt.jar:." Tags
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_SDK_VERSION
      Value: r24.0.2
    Name: env
  - Env:
    - Key: ANDROID_API_LEVEL
      Value: "19"
    Name: env
  - Env:
    - Key: ANDROID_BUILD_TOOLS_VERSION
      Value: 21.1.1
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: ${HOME}/android-sdk-linux
    Name: env
  - CmdLine:
    - echo "export ANDROID_HOME=${ANDROID_HOME}" >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools
    Name: env
  - CmdLine:
    - echo "export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools"
      >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- "http://dl.google.com/android/android-sdk_${ANDROID_SDK_VERSION}-linux.tgz"     |
      tar -zxv -C ${HOME} &&     echo y | android update sdk --no-ui --all --filter
      platform-tool,android-${ANDROID_API_LEVEL},sysimg-${ANDROID_API_LEVEL},build-tools-${ANDROID_BUILD_TOOLS_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: v0.10
    Name: env
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.22.0/install.sh | bash
      &&     /bin/bash -c 'source ${HOME}/.nvm/nvm.sh &&                   nvm install
      ${NODE_VERSION} &&                   nvm use ${NODE_VERSION} &&                   nvm
      alias default ${NODE_VERSION} &&                   npm install -g npm &&                   npm
      install -g cordova ionic &&                   npm install -g ripple-emulator
      &&                   npm cache clear'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c 'source ${HOME}/.nvm/nvm.sh && nvm use ${NODE_VERSION}     cd ${DATA_DIR}
      &&     cordova create cordova_test com.example.test "CordovaTestApp" &&     cd
      ${DATA_DIR}/cordova_test &&     cordova platform add android &&     cordova
      build &&     cd ${DATA_DIR} &&     ionic start ionicTestApp tabs &&     cd ${DATA_DIR}/ionicTestApp
      &&     ionic platform add android &&     ionic build android'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "35729"
    - "8100"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: phusion/baseimage:0.9.15
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.9.15
