MetaArgs:
- DefaultValue: "7.3"
  Key: PHP_VERSION
  ProvidedValue: null
  Value: "7.3"
Stages:
- BaseName: php:${PHP_VERSION}-fpm-alpine
  Commands:
  - Key: XDEBUG_VERSION
    Name: arg
    Value: 2.8.0
  - Key: APCU_VERSION
    Name: arg
    Value: 5.1.18
  - Key: WITH_XDEBUG
    Name: arg
    Value: "false"
  - CmdLine:
    - "set -eux;     apk --no-cache add --virtual .build-deps         $PHPIZE_DEPS
      \        libwebp-dev         libjpeg-turbo-dev         libpng-dev libxpm-dev
      \        freetype-dev         icu-dev         libxml2-dev         libxslt-dev
      \        libzip-dev     ;     docker-php-ext-configure gd         --with-freetype-dir
      \        --with-jpeg-dir         --with-webp-dir         --with-png-dir         --with-zlib-dir
      \        --with-xpm-dir     ;     docker-php-ext-configure zip --with-libzip;
      \    docker-php-ext-install -j$(nproc)         mysqli         bcmath         gd
      \        intl         opcache         pdo_mysql         soap         xmlrpc
      \        xsl         zip     ;     yes '' | pecl install apcu-${APCU_VERSION};
      \    docker-php-ext-enable apcu;     if [ $WITH_XDEBUG = \"true\" ] ; then         yes
      '' | pecl install xdebug;         docker-php-ext-enable xdebug;     fi ;     pecl
      clear-cache;     apk del .build-deps;     runDeps=\"$(     \t\tscanelf --needed
      --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions     \t\t\t|
      tr ',' '\\n'     \t\t\t| sort -u     \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     \t)\";     apk add --no-cache
      --virtual .phpexts-rundeps $runDeps;     curl -sSL https://getcomposer.org/installer
      | php -- --install-dir=/usr/bin --filename=composer"
    Name: run
    PrependShell: true
  From:
    Image: php:${PHP_VERSION}-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION}-fpm-alpine
