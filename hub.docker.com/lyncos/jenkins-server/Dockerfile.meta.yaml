MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Key: JENKINS_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: JENKINS_VERSION
      Value: ${JENKINS_VERSION:-2.19.1}
    Name: env
  - Key: DOCKER_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: DOCKER_VERSION
      Value: ${DOCKER_VERSION:-1.12.1}
    Name: env
  - Key: user
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: group
    Name: arg
    Value: jenkins
  - Key: gid
    Name: arg
    Value: "1000"
  - Env:
    - Key: JENKINS_HOME
      Value: /jenkins_home
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: "50000"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -qqy --force-yes \tsudo     apt-transport-https
      \    openjdk-8-jdk-headless     git     rsync     zip     ca-certificates     curl
      \    python-dev     python-setuptools     libyaml-dev     python-pip     xvfb
      \    python-rpm     yum     libssl-dev     libffi-dev     lxc     iptables     supervisor
      &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean autoclean &&     apt-get
      autoremove -y &&     rm -rf /var/lib/{apt,dpkg,cache,log}/"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sSL https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz
      | tar xvz \t&& mv ./docker/* /usr/bin"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./wrapdocker
    - /usr/local/bin/wrapdocker
  - CmdLine:
    - chmod +x /usr/local/bin/wrapdocker
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g ${gid} ${group}     && useradd -d "$JENKINS_HOME" -u ${uid} -g ${gid}
      -m -s /bin/bash ${user}     && groupadd docker     && echo "jenkins:jenkins"
      | chpasswd  && echo "jenkins ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && usermod
      -a -G docker jenkins
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /jenkins_home
  - CmdLine:
    - mkdir -p /usr/share/jenkins/ref/init.groovy.d
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_SHA
      Value: 066ad710107dc7ee05d3aa6e4974f01dc98f3888
    Name: env
  - CmdLine:
    - curl -fsSL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static
      -o /bin/tini && chmod +x /bin/tini   && echo "$TINI_SHA  /bin/tini" | sha1sum
      -c -
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - CmdLine:
    - curl -fsSL http://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war
      -o /usr/share/jenkins/jenkins.war
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_UC
      Value: https://updates.jenkins.io
    Name: env
  - CmdLine:
    - chown -R ${user} "$JENKINS_HOME" /usr/share/jenkins/ref
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "50000"
    - "8080"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./dind
    - /usr/local/bin/dind
  - CmdLine:
    - chmod +x /usr/local/bin/dind
    Name: run
    PrependShell: true
  - Env:
    - Key: COPY_REFERENCE_FILE_LOG
      Value: $JENKINS_HOME/copy_reference_file.log
    Name: env
  - Name: user
    User: ${USER}
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins.sh
    - /usr/local/bin/jenkins.sh
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.sh
    - /usr/local/bin/plugins.sh
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
