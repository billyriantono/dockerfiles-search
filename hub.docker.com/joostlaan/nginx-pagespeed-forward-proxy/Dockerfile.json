{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:precise",
      "SourceCode": "FROM ubuntu:precise",
      "Platform": "",
      "From": {
        "Image": "ubuntu:precise"
      },
      "Commands": [
        {
          "Maintainer": "Joost van der Laan \u003cjoostvanderlaan@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://archive.ubuntu.com/ubuntu precise main restricted universe\\ndeb-src http://archive.ubuntu.com/ubuntu precise main restricted universe\\ndeb http://archive.ubuntu.com/ubuntu precise-updates main restricted universe\\ndeb-src http://archive.ubuntu.com/ubuntu precise-updates main restricted universe\\n\" \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get build-dep nginx-full -y \u0026\u0026 apt-get install wget -y \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --fetch-keys http://nginx.org/keys/nginx_signing.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb-src http://nginx.org/packages/ubuntu/ precise nginx\" \u003e\u003e /etc/apt/sources.list.d/nginx-precise.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install nano -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.4.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MODULESDIR",
              "Value": "/usr/src/nginx-modules"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/src/ \u0026\u0026 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 tar xf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 rm -f nginx-${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 wget http://www.openssl.org/source/openssl-1.0.1e.tar.gz \u0026\u0026 tar xvzf openssl-1.0.1e.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential zlib1g-dev libpcre3 libpcre3-dev unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ${MODULESDIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${MODULESDIR} \u0026\u0026 \twget --no-check-certificate https://github.com/pagespeed/ngx_pagespeed/archive/v1.7.30.3-beta.zip \u0026\u0026 \tunzip v1.7.30.3-beta.zip \u0026\u0026 \tcd ngx_pagespeed-1.7.30.3-beta/ \u0026\u0026 \twget --no-check-certificate https://dl.google.com/dl/page-speed/psol/1.7.30.3.tar.gz \u0026\u0026 \ttar -xzvf 1.7.30.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026 ./configure \t--prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/var/log/nginx/error.log \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid \t--lock-path=/var/run/nginx.lock \t--with-http_ssl_module \t--with-http_realip_module \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_secure_link_module \t--with-http_stub_status_module \t--with-mail \t--with-mail_ssl_module \t--with-file-aio \t--with-http_spdy_module \t--with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Wformat-security -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' \t--with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed' \t--with-ipv6 \t--with-sha1=/usr/include/openssl  \t--with-md5=/usr/include/openssl \t--with-openssl='../openssl-1.0.1e' \t--add-module=${MODULESDIR}/ngx_pagespeed-1.7.30.3-beta"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx",
            "/etc/nginx/"
          ]
        },
        {
          "CmdLine": [
            "echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}