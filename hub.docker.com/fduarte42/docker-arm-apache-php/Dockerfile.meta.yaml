MetaArgs: null
Stages:
- BaseName: resin/armv7hf-debian-qemu
  Commands:
  - CmdLine:
    - cross-build-start
    Name: run
    PrependShell: false
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkg-config
        \t\tre2c"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y \t\t$PHPIZE_DEPS \t\tca-certificates \t\tcurl
      \t\tlibedit2 \t\tlibsqlite3-0 \t\tlibxml2 \t\txz-utils \t--no-install-recommends
      && rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y apache2-bin apache2.2-common --no-install-recommends
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_CONFDIR
      Value: /etc/apache2
    Name: env
  - Env:
    - Key: APACHE_ENVVARS
      Value: $APACHE_CONFDIR/envvars
    Name: env
  - CmdLine:
    - "set -ex \t\t&& sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'
      \"$APACHE_ENVVARS\" \t\t&& . \"$APACHE_ENVVARS\" \t&& for dir in \t\t\"$APACHE_LOCK_DIR\"
      \t\t\"$APACHE_RUN_DIR\" \t\t\"$APACHE_LOG_DIR\" \t\t/var/www/html \t; do \t\trm
      -rvf \"$dir\" \t\t&& mkdir -p \"$dir\" \t\t&& chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\"
      \"$dir\"; \tdone"
    Name: run
    PrependShell: true
  - CmdLine:
    - a2dismod mpm_event && a2enmod mpm_prefork
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& . \"$APACHE_ENVVARS\" \t&& ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\"
      \t&& ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \t&& ln -sfT /dev/stdout
      \"$APACHE_LOG_DIR/other_vhosts_access.log\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '<FilesMatch \\.php$>'; \t\techo '\\tSetHandler application/x-httpd-php';
      \t\techo '</FilesMatch>'; \t\techo; \t\techo 'DirectoryIndex disabled'; \t\techo
      'DirectoryIndex index.php index.html'; \t\techo; \t\techo '<Directory /var/www/>';
      \t\techo '\\tOptions -Indexes'; \t\techo '\\tAllowOverride All'; \t\techo '</Directory>';
      \t} | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \t&& a2enconf docker-php"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_BUILD_DEPS
      Value: apache2-dev
    Name: env
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --with-apxs2
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.11
    Name: env
  - Env:
    - Key: PHP_FILENAME
      Value: php-7.0.11.tar.xz
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: d4cccea8da1d27c11b89386f8b8e95692ad3356610d571253d00ca67d524c735
    Name: env
  - CmdLine:
    - "set -xe \t&& cd /usr/src \t&& curl -fSL \"https://secure.php.net/get/$PHP_FILENAME/from/this/mirror\"
      -o php.tar.xz \t&& echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \t&& curl
      -fSL \"https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& for key in $GPG_KEYS; do \t\tgpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone \t&& gpg
      --batch --verify php.tar.xz.asc php.tar.xz \t&& rm -r \"$GNUPGHOME\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& buildDeps=\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tlibcurl4-openssl-dev
      \t\tlibedit-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\" \t&&
      apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm
      -rf /var/lib/apt/lists/* \t\t&& docker-php-source extract \t&& cd /usr/src/php
      \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t\t\t\t--disable-cgi \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS
      \t&& make -j\"$(nproc)\" \t&& make install \t&& { find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; } \t&& make clean
      \t&& docker-php-source delete \t\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $buildDeps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2-foreground
    - /usr/local/bin/
  - CmdLine:
    - apt-get update && apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         libxml2-dev         libbz2-dev     &&
      docker-php-ext-install mysqli pdo pdo_mysql soap exif bz2     && docker-php-ext-install
      -j$(nproc) iconv mcrypt     && docker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/     && docker-php-ext-install -j$(nproc) gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "display_errors=off" > /usr/local/etc/php/conf.d/errors.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "log_errors=on" >> /usr/local/etc/php/conf.d/errors.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=apcu.so" > /usr/local/etc/php/conf.d/apcu.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "apc.enable_cli = On" >> /usr/local/etc/php/conf.d/apcu.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ssmtp
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'sendmail_path = "/usr/sbin/ssmtp -t"' > /usr/local/etc/php/conf.d/mail.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Europe/Berlin" > /etc/timezone && dpkg-reconfigure --frontend noninteractive
      tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "date.timezone = Europe/Berlin" > /usr/local/etc/php/conf.d/timezone.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "always_populate_raw_post_data = -1" > /usr/local/etc/php/conf.d/typo3.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "max_execution_time = 240" >> /usr/local/etc/php/conf.d/typo3.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "max_input_vars = 1500" >> /usr/local/etc/php/conf.d/typo3.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y graphicsmagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer   && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"
    Name: run
    PrependShell: true
  - CmdLine:
    - php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer
      && rm -rf /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 644 /root/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y keychain
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '\nif [ -e "/ssh/id_rsa.pub" ]; then' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    cp /ssh/id_rsa.pub ~/.ssh/id_rsa.pub' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    chmod 644 /root/.ssh/id_rsa.pub' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'fi' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '\nif [ -e "/ssh/id_rsa" ]; then' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    cp /ssh/id_rsa ~/.ssh/id_rsa' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    chmod 600 ~/.ssh/id_rsa' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    eval $(keychain --eval id_rsa)' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'fi' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '\nexport TERM=xterm' >> /root/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - index.php
    - /var/www/html/index.php
  - CmdLine:
    - cross-build-end
    Name: run
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: resin/armv7hf-debian-qemu
  Name: ""
  Platform: ""
  SourceCode: FROM resin/armv7hf-debian-qemu
