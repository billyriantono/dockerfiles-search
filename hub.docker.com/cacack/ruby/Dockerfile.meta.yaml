MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Key: ruby_major
    Name: arg
    Value: '"2.5"'
  - Key: ruby_version
    Name: arg
    Value: '"2.5.1"'
  - Env:
    - Key: RUBY_MAJOR
      Value: '"${ruby_major}"'
    - Key: RUBY_VERSION
      Value: '"${ruby_version}"'
    - Key: RUBY_DOWNLOAD_SHA256
      Value: '"dac81822325b79c3ba9532b048c2123357d3310b2b40024202f360251d9829b1"'
    - Key: RUBYGEMS_VERSION
      Value: '"2.7.4"'
    - Key: BUNDLER_VERSION
      Value: '"1.16.1"'
    Name: env
  - CmdLine:
    - 'mkdir -p /usr/local/etc   && {     echo ''install: --no-document'';     echo
      ''update: --no-document'';   } >> /usr/local/etc/gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apk add --no-cache --virtual .ruby-builddeps        autoconf        bison        bzip2        bzip2-dev        ca-certificates        coreutils        dpkg-dev        dpkg        gcc        gdbm-dev        glib-dev        libc-dev        libffi-dev        openssl        openssl-dev        libxml2-dev        libxslt-dev        linux-headers        make        ncurses-dev        procps        readline-dev        ruby        tar        xz        yaml-dev        zlib-dev     &&
      wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"     &&
      echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz" | sha256sum -c -     && mkdir -p /usr/src/ruby     &&
      tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1     && rm ruby.tar.xz     &&
      cd /usr/src/ruby         && {          echo '#define ENABLE_PATH_CHECK 0';          echo;          cat
      file.c;        } > file.c.new     && mv file.c.new file.c         && autoconf     &&
      gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"     && export ac_cv_func_isnan=yes
      ac_cv_func_isinf=yes     && ./configure          --build="$gnuArch"          --disable-install-doc          --enable-shared     &&
      make -j "$(nproc)"     && make install         && runDeps="$(          scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local          | tr ','
      '\n'          | sort -u          | awk 'system("[ -e /usr/local/lib/" $1 " ]")
      == 0 { next } { print "so:" $1 }'        )"     && apk add --virtual .ruby-rundeps
      $runDeps        bzip2        ca-certificates        libffi-dev        openssl-dev        procps        yaml-dev        zlib-dev     &&
      apk del .ruby-builddeps     && cd /     && rm -r /usr/src/ruby         && gem
      update --system "$RUBYGEMS_VERSION"     && gem install bundler --version "$BUNDLER_VERSION"
      --force     && rm -r /root/.gem/
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    - Key: BUNDLE_BIN
      Value: '"$GEM_HOME/bin"'
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $BUNDLE_BIN:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GEM_HOME" "$BUNDLE_BIN"     && chmod 777 "$GEM_HOME" "$BUNDLE_BIN"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .image-env     bash     coreutils     curl     findutils     git     grep
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Dockerfile
    - /opt/Dockerfile-ruby
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - README.md
    - /opt/README-ruby.md
  - CmdLine:
    - irb
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
