{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "cloudera/quickstart",
      "SourceCode": "FROM cloudera/quickstart",
      "Platform": "",
      "From": {
        "Image": "cloudera/quickstart"
      },
      "Commands": [
        {
          "Maintainer": "James Winegar",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/cloudera-kafka.repo",
            "/etc/yum.repos.d/cloudera-kafka.repo"
          ]
        },
        {
          "CmdLine": [
            "yum clean all \u0026\u0026     rpm --rebuilddb; yum install -y yum-plugin-ovl \u0026\u0026     yum update -y \u0026\u0026     yum groupinstall -y 'Development Tools' \u0026\u0026     yum install -y --quiet       wget       htop       hadoop-yarn-nodemanager       hadoop-hdfs-datanode       hadoop-mapreduce       hadoop-hdfs-namenode       hadoop-yarn-resourcemanager       hadoop-client       kafka       kafka-server \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_VERSION",
              "Value": "2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANACONDA_VERSION",
              "Value": "5.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/spark"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026     mkdir -p /downloads \u0026\u0026     cd /downloads \u0026\u0026     wget --quiet -c --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz \u0026\u0026     mkdir /usr/java/jdk.1.8.0_131 \u0026\u0026     tar -xf jdk-8u131-linux-x64.tar.gz -C /usr/java/ \u0026\u0026     wget --quiet http://mirrors.advancedhosters.com/apache/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz \u0026\u0026     tar -xzf spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz \u0026\u0026     mv spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} ${SPARK_HOME}-${SPARK_VERSION} \u0026\u0026     ln -s ${SPARK_HOME}-${SPARK_VERSION} ${SPARK_HOME} \u0026\u0026     wget --quiet https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh -O anaconda.sh \u0026\u0026     /bin/bash /downloads/anaconda.sh -b -p /opt/anaconda \u0026\u0026     rm -rf /downloads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/anaconda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda update -y conda \u0026\u0026     conda update -y --all \u0026\u0026     conda install -y pip setuptools wheel     cython numpy pandas scipy nltk scikit-learn scikit-image sympy \u0026\u0026     conda install -c conda-forge -y jupyterlab kafka-python \u0026\u0026     conda clean -tp -y \u0026\u0026     pip install --no-cache-dir bash_kernel \u0026\u0026     python -m bash_kernel.install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $SPARK_HOME/python \u0026\u0026      python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/jupyter_notebook_config.py",
            "/root/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/themes.jupyterlab-settings",
            "/root/.jupyter/lab/user-settings/\\@jupyterlab/apputils-extension/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/ipython_config.py",
            "/root/.ipython/profile_default/ipython_config.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/start-notebook.sh",
            "/root/start-notebook.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/docker-quickstart",
            "/usr/bin/docker-quickstart"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/spark-defaults.conf",
            "/etc/spark/conf.dist/spark-defaults.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /root/start-notebook.sh \u0026\u0026     chmod 755 /usr/bin/docker-quickstart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYSPARK_PYTHON",
              "Value": "/opt/anaconda/bin/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/java/jdk1.8.0_131"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$SPARK_HOME/bin:$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.4-src.zip:$PATH"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}