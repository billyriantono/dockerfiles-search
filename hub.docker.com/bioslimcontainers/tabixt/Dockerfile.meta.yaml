MetaArgs: null
Stages:
- BaseName: gromacs/gromacs
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install --yes --no-install-recommends locales
      wget bzip2 &&     apt-get purge &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Key: NB_USER
    Name: arg
    Value: jovyan
  - Key: NB_UID
    Name: arg
    Value: "1000"
  - Env:
    - Key: USER
      Value: ${NB_USER}
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${NB_USER}
    Name: env
  - CmdLine:
    - adduser --disabled-password     --gecos "Default user"     --uid ${NB_UID}     ${NB_USER}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key |  apt-key
      add - &&     DISTRO="bionic" &&     echo "deb https://deb.nodesource.com/node_10.x
      $DISTRO main" >> /etc/apt/sources.list.d/nodesource.list &&     echo "deb-src
      https://deb.nodesource.com/node_10.x $DISTRO main" >> /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install --yes --no-install-recommends        less        nodejs        unzip        &&
      apt-get purge &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Env:
    - Key: APP_BASE
      Value: /srv
    Name: env
  - Env:
    - Key: CONDA_DIR
      Value: ${APP_BASE}/conda
    Name: env
  - Env:
    - Key: NB_PYTHON_PREFIX
      Value: ${CONDA_DIR}
    Name: env
  - Env:
    - Key: KERNEL_PYTHON_PREFIX
      Value: ${NB_PYTHON_PREFIX}
    Name: env
  - Env:
    - Key: PATH
      Value: ${CONDA_DIR}/bin:$HOME/.local/bin:${PATH}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker
    - /tmp
  - CmdLine:
    - ln -s /tmp/environment.py-3.6.frozen.yml /tmp/environment.yml && bash /tmp/install-miniconda.bash
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - binder
    - ${HOME}/binder
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - biobb_workflows
    - ${HOME}/biobb_workflows
  - CmdLine:
    - chown -R ${NB_USER}:${NB_USER} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${NB_USER}
  - CmdLine:
    - conda env update -n root -f "binder/environment.yml" && conda clean -tipsy &&
      conda list -n root
    Name: run
    PrependShell: true
  - Name: user
    User: ${NB_USER}
  - CmdLine:
    - chmod +x binder/postBuild
    Name: run
    PrependShell: true
  - CmdLine:
    - ./binder/postBuild
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter
    - notebook
    - --ip
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: gromacs/gromacs
  Name: ""
  Platform: ""
  SourceCode: FROM gromacs/gromacs
