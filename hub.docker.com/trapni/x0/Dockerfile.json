{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:15.10",
      "SourceCode": "FROM ubuntu:15.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:15.10"
      },
      "Commands": [
        {
          "Maintainer": "Christian Parpart \u003ctrapni@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/usr/src/x0"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "\"noninteractive\""
            },
            {
              "Key": "DOCROOT",
              "Value": "\"/var/www\""
            },
            {
              "Key": "PORT",
              "Value": "\"80\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"force-unsafe-io\" \u003e /etc/dpkg/dpkg.cfg.d/02apt-speedup \u0026\u0026     echo \"Acquire::http {No-Cache=True;};\" \u003e /etc/apt/apt.conf.d/no-cache \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y         make cmake clang++-3.5 libssl-dev zlib1g-dev libbz2-dev pkg-config         libpcre3-dev libfcgi-dev libgoogle-perftools-dev         libpam-dev libgtest-dev ninja-build \u0026\u0026     apt-get install -y libssl1.0.0 zlib1g libbz2-1.0 libpcre3         libpam0g \u0026\u0026     cd /usr/src/gtest \u0026\u0026     cmake -DCMAKE_C_COMPILER=/usr/bin/clang-3.5           -DCMAKE_CXX_COMPILER=/usr/bin/clang++-3.5           . \u0026\u0026     make \u0026\u0026     cp -vpi libgtest*.a /usr/local/lib/ \u0026\u0026     cd /usr/src/x0 \u0026\u0026 cmake -GNinja         -DCMAKE_BUILD_TYPE=release         -DCMAKE_C_COMPILER=/usr/bin/clang-3.5         -DCMAKE_CXX_COMPILER=/usr/bin/clang++-3.5         -DX0D_CLUSTERDIR=/var/lib/x0d         -DX0D_LOGDIR=/var/log/x0d \u0026\u0026     ninja \u0026\u0026     mkdir -p /etc/x0d /var/log/x0d /var/lib/x0d /var/www \u0026\u0026     cp src/xzero/test-base /usr/bin/test-xzero-base \u0026\u0026     cp src/xzero-flow/test-flow /usr/bin/test-xzero-flow \u0026\u0026     cp src/x0d/x0d /usr/bin/x0d \u0026\u0026     apt-get purge -y         make cmake clang++-3.5 libssl-dev zlib1g-dev libbz2-dev pkg-config         libpcre3-dev libfcgi-dev libgoogle-perftools-dev         libpam-dev libgtest-dev ninja-build \u0026\u0026     apt-get purge -y perl \u0026\u0026     echo 'Yes, do as I say!' | apt-get remove -y --force-yes         initscripts util-linux e2fsprogs systemd-sysv \u0026\u0026     apt-get autoremove -y \u0026\u0026     rm -rvf /var/lib/apt/lists/* \u0026\u0026     rm -rf /usr/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-x0d.conf",
            "/etc/x0d/x0d.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/x0d",
            "/var/www",
            "/var/lib/x0d",
            "/var/log/x0d"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/x0d"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--log-target=console",
            "--log-level=info"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}