MetaArgs: null
Stages:
- BaseName: library/alpine:3.7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Gerardo Junior <me@gerardo-junior.com>"'
    Name: label
  - Key: NODE_VERSION
    Name: arg
    Value: 8.11.1
  - Key: NODE_SOURCE_URL
    Name: arg
    Value: https://nodejs.org/dist
  - Key: NPM_VERSION
    Name: arg
    Value: 6.4.1
  - Env:
    - Key: COMPILE_DEPS
      Value: .build-deps                  binutils-gold                  g++                  gcc                  gnupg                  libgcc                  linux-headers                  make                  python                  tar                  xz
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual ${COMPILE_DEPS}
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --virtual .persistent-deps                                sudo                                libstdc++
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe &&     cd /tmp &&     for key in         94AE36675C464D64BAFA68DD7434390BDBE9B9C5         FD3A5288F042B6850C66B31F09FE44734EB7990E         71DCFD284A79C3B38668286BC97EC7A07EDE3FC1         DD8F2338BAE7501E3DD5AC78C273792F7D83545D         C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8         B9AE9905FFD7803F25714661B63B535A4C206CA9         56730D5401028683275BD23C23EFEFE93C4CFFFE         77984A986EBC2AA786BC0F66B01FBB92821C587A     ;
      do         gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||         gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||         gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;     done
      &&     wget ${NODE_SOURCE_URL}/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.xz
      &&     wget ${NODE_SOURCE_URL}/v${NODE_VERSION}/SHASUMS256.txt.asc &&     gpg
      --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc &&     grep " node-v${NODE_VERSION}.tar.xz\$"
      SHASUMS256.txt | sha256sum -c - &&     tar -Jxf "node-v${NODE_VERSION}.tar.xz"
      &&     cd "node-v${NODE_VERSION}" &&     sh ./configure &&     make -j$(getconf
      _NPROCESSORS_ONLN) &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g npm@${NPM_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del ${COMPILE_DEPS} &&     rm -Rf /var/cache/apk/* /tmp/* $HOME/* &&     unset
      NODE_VERSION           NODE_SOURCE_URL           NPM_VERSION
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tools/entrypoint.sh
    - /usr/local/bin/entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - mkdir -p /usr/share/src
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/src
  - Name: workdir
    Path: /usr/share/src
  - CmdLine:
    - 'addgroup -g 1000 node &&     adduser -u 1000 -G node -s /bin/sh -D node &&     echo
      "node ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/default &&     chown -Rf node
      /usr/share/src'
    Name: run
    PrependShell: true
  - Name: user
    User: node
  - Env:
    - Key: HOST
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: NUXT_PORT
      Value: "3000"
    Name: env
  - Name: expose
    Ports:
    - ${NUXT_PORT}
    - "9229"
  From:
    Image: library/alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM library/alpine:3.7
