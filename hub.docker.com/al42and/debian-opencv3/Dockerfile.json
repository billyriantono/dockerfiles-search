{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stable",
      "SourceCode": "FROM debian:stable",
      "Platform": "",
      "From": {
        "Image": "debian:stable"
      },
      "Commands": [
        {
          "Maintainer": "Andrey Alekseenko \u003cal42and@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -qy \tcmake \tpython-numpy python-scipy python-pip python-setuptools \tpython3-numpy python3-scipy python3-pip python3-setuptools \twget \txauth \tlibjpeg-dev libtiff5-dev libjasper1 libjasper-dev libpng12-dev libavcodec-dev libavformat-dev \tlibswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk2.0-dev libatlas-base-dev \tgfortran python2.7-dev python3.4-dev build-essential pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U scikit-learn \u0026\u0026 pip3 install -U scikit-learn \u0026\u0026 rm -rf '/root/.cache/pip/'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 \twget https://github.com/opencv/opencv/archive/3.2.0.tar.gz -O opencv.tar.gz \u0026\u0026 \ttar zxf opencv.tar.gz \u0026\u0026 rm -f opencv.tar.gz \u0026\u0026 \twget https://github.com/opencv/opencv_contrib/archive/3.2.0.tar.gz -O contrib.tar.gz \u0026\u0026 \ttar zxf contrib.tar.gz \u0026\u0026 rm -f contrib.tar.gz \u0026\u0026 \tcd opencv-3.2.0 \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 \tcmake -D CMAKE_BUILD_TYPE=RELEASE \t\t-D CMAKE_INSTALL_PREFIX=/usr/local \t\t-D INSTALL_PYTHON_EXAMPLES=OFF \t\t-D OPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib-3.2.0/modules \t\t-D BUILD_DOCS=OFF \t\t-D BUILD_TESTS=OFF \t\t-D BUILD_EXAMPLES=OFF \t\t-D BUILD_opencv_python2=ON \t\t-D BUILD_opencv_python3=ON \t\t-D WITH_1394=OFF \t\t-D WITH_MATLAB=OFF \t\t-D WITH_OPENCL=OFF \t\t-D WITH_OPENCLAMDBLAS=OFF \t\t-D WITH_OPENCLAMDFFT=OFF \t\t-D CMAKE_CXX_FLAGS=\"-O3 -funsafe-math-optimizations\" \t\t-D CMAKE_C_FLAGS=\"-O3 -funsafe-math-optimizations\" \t\t.. \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 \tcd /root \u0026\u0026 rm -rf opencv-3.2.0 opencv_contrib-3.2.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -qy libv4l-0 libavcodec-dev libavformat-dev libavutil-dev \tlibswscale-dev libavresample-dev \u0026\u0026 \tapt-get purge -qy \tbuild-essential \tlibjpeg-dev libtiff5-dev libjasper-dev libpng12-dev \tlibv4l-dev libxvidcore-dev libx264-dev libgtk2.0-dev libatlas-base-dev \tgfortran pkg-config cmake \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}