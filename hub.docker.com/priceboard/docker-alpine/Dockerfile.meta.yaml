MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: kost, https://github.com/kost/docker-alpine
    Name: maintainer
  - Env:
    - Key: KIBANA_VERSION
      Value: 5.1.1
    Name: env
  - Env:
    - Key: PKG_NAME
      Value: kibana
    Name: env
  - Env:
    - Key: PKG_PLATFORM
      Value: linux-x86_64
    Name: env
  - Env:
    - Key: KIBANA_PKG
      Value: $PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM
    Name: env
  - Env:
    - Key: KIBANA_CONFIG
      Value: /opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM/config/kibana.yml
    Name: env
  - Env:
    - Key: KIBANA_URL
      Value: https://artifacts.elastic.co/downloads/$PKG_NAME/$KIBANA_PKG.tar.gz
    Name: env
  - Env:
    - Key: ELASTICSEARCH_HOST
      Value: elasticsearch
    Name: env
  - CmdLine:
    - addgroup -S kibana && adduser -S -h /home/kibana -G kibana kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update ca-certificates wget nodejs     && mkdir -p /opt     && wget
      -O /tmp/$KIBANA_PKG.tar.gz $KIBANA_URL     && tar -xvzf /tmp/$KIBANA_PKG.tar.gz
      -C /opt/     && ln -s /opt/$KIBANA_PKG /opt/$PKG_NAME     && sed -ri "s!^(\#\s*)?(elasticsearch\.url:).*!\2
      'http://$ELASTICSEARCH_HOST:9200'!" $KIBANA_CONFIG     && sed -ri "s!^(\#\s*)?(server\.host:).*!\2
      '0.0.0.0'!" $KIBANA_CONFIG     && rm -rf /tmp/*.tar.gz /var/cache/apk/* /opt/$KIBANA_PKG/node/     &&
      mkdir -p /opt/$KIBANA_PKG/node/bin/     && ln -s $(which node) /opt/$PKG_NAME/node/bin/node     &&
      chown -R kibana:kibana /opt/$PKG_NAME
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5601"
  - Name: workdir
    Path: /opt/kibana
  - CmdLine:
    - /opt/kibana/bin/kibana
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
