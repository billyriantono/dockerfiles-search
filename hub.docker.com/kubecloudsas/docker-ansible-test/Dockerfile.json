{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:6",
      "SourceCode": "FROM centos:6",
      "Platform": "",
      "From": {
        "Image": "centos:6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jean-Jacques ETUNÃˆ NGI\u003cjetune@kube-cloud.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.name",
              "Value": "= \"ansible-test\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.description",
              "Value": "= \"Centos based Docker container image for Ansible Playbook and Role Testing.\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/kube-cloud/docker-ansible-test\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/rossf7/label-schema-automated-build.git\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0.0-rc.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PY_VERSION",
              "Value": "3.6.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PY_DIR_FILENAME",
              "Value": "Python-${PY_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PY_URL",
              "Value": "https://www.python.org/ftp/python/${PY_VERSION}/${PY_DIR_FILENAME}.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PY_DOWNLOADED_DIR",
              "Value": "/tmp/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_FILE_NAME",
              "Value": "get-pip.py"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_URL",
              "Value": "https://bootstrap.pypa.io/get-pip.py"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "pip_packages",
              "Value": "\"ansible molecule flake8 testinfra==3.0.5 ansible-lint\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum makecache fast \u0026\u0026 \tyum -y install deltarpm \u0026\u0026 \tyum -y install gcc \u0026\u0026 \tyum -y install openssl-devel \u0026\u0026 \tyum -y install bzip2-devel \u0026\u0026 \tyum -y install sudo \u0026\u0026 \tyum -y install epel-release \u0026\u0026 \tyum -y install initscripts \u0026\u0026 \tyum -y install wget \u0026\u0026 \tyum -y install zip \u0026\u0026 \tyum -y install unzip \u0026\u0026 \tyum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${PY_DOWNLOADED_DIR} \u0026\u0026 \twget -q ${PY_URL} -O ${PY_DOWNLOADED_DIR}/${PY_DIR_FILENAME}.tgz \u0026\u0026 \twget -q ${PIP_URL} -O ${PY_DOWNLOADED_DIR}/${PIP_FILE_NAME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzf ${PY_DOWNLOADED_DIR}/${PY_DIR_FILENAME}.tgz -C ${PY_DOWNLOADED_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${PY_DOWNLOADED_DIR}/${PY_DIR_FILENAME} \u0026\u0026 ./configure --enable-optimizations \u003e\u003e /dev/null \u0026\u0026 make --quiet altinstall \u003e\u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/python3.6 ${PY_DOWNLOADED_DIR}/${PIP_FILE_NAME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install $pip_packages"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/^Defaults\\s*requiretty/Defaults !requiretty/'  /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e '[local]\\nlocalhost ansible_connection=local' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "tail",
            "-f",
            "/dev/null"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}