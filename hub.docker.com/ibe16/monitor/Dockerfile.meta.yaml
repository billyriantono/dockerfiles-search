MetaArgs: null
Stages:
- BaseName: python:3.6-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Irene BÃ©jar <irenebejar@correo.ugr.es>"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./monitor/*.py
    - /monitor/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./notifier/*.py
    - /notifier/
  - Name: workdir
    Path: /
  - Key: POSTGRES_USER
    Name: arg
    Value: ${POSTGRES_USER}
  - Key: POSTGRES_PASSWORD
    Name: arg
    Value: ${POSTGRES_PASSWORD}
  - Key: POSTGRES_HOST
    Name: arg
    Value: ${POSTGRES_HOST}
  - Key: POSTGRES_DB
    Name: arg
    Value: ${POSTGRES_DB}
  - Key: PORT_MONITOR
    Name: arg
    Value: ${PORT_MONITOR}
  - Env:
    - Key: CELERY_BROKER_URL
      Value: ${CELERY_BROKER_URL}
    Name: env
  - Env:
    - Key: CELERY_BACKEND
      Value: ${CELERY_BACKEND}
    Name: env
  - Env:
    - Key: SECRET_KEY
      Value: ${SECRET_KEY}
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: ${POSTGRES_USER}
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: ${POSTGRES_PASSWORD}
    Name: env
  - Env:
    - Key: POSTGRES_HOST
      Value: ${POSTGRES_HOST}
    Name: env
  - Env:
    - Key: POSTGRES_DB
      Value: ${POSTGRES_DB}
    Name: env
  - Env:
    - Key: PORT_MONITOR
      Value: ${PORT_MONITOR}
    Name: env
  - Env:
    - Key: MONGO_URI
      Value: '''mongodb://localhost/db'''
    Name: env
  - Env:
    - Key: CORREO
      Value: ${CORREO}
    Name: env
  - Env:
    - Key: PASSWORD
      Value: ${PASSWORD}
    Name: env
  - Env:
    - Key: SMTP_PORT
      Value: ${SMTP_PORT}
    Name: env
  - Env:
    - Key: SMTP_SERVER
      Value: ${SMTP_SERVER}
    Name: env
  - Env:
    - Key: PORT_NOTIFIER
      Value: ${PORT_NOTIFIER}
    Name: env
  - Env:
    - Key: SECRET_KEY
      Value: ${SECRET_KEY}
    Name: env
  - CmdLine:
    - apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libpq-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask gunicorn requests sqlalchemy psycopg2-binary Celery pymodm
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${PORT_MONITOR}
  - CmdLine:
    - sh
    - -c
    - gunicorn -b 0.0.0.0:${PORT_MONITOR} --workers=4  "monitor:create_app()"
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim
