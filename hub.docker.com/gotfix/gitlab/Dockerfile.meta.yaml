MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: ian@phpb.com
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VCS_BRANCH
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.name
      Value: '"Docker Gitlab CE"'
    - Key: org.label-schema.description
      Value: '"Dockerized Gitlab CE built from source"'
    - Key: org.label-schema.usage
      Value: '"https://gotfix.com/docker/gitlab/blob/master/README.md"'
    - Key: org.label-schema.url
      Value: '"https://gotfix.com/docker/gitlab"'
    - Key: org.label-schema.vcs-url
      Value: https://gotfix.com/docker/gitlab.git
    - Key: org.label-schema.vendor
      Value: '"Ian Matyssik <ian@phpb.com>"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.version
      Value: '"${VERSION}"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: com.gotfix.maintainer
      Value: '"ian@phpb.com"'
    - Key: com.gotfix.license
      Value: MIT
    - Key: com.gotfix.docker.dockerfile
      Value: '"/Dockerfile"'
    Name: label
  - Env:
    - Key: GITLAB_VERSION
      Value: 9.3.9
    - Key: RUBY_VERSION
      Value: "2.3"
    - Key: GOLANG_VERSION
      Value: 1.8.3
    - Key: GITLAB_MONITOR_VERSION
      Value: 1.9.0
    - Key: GITLAB_USER
      Value: '"git"'
    - Key: GITLAB_HOME
      Value: '"/home/git"'
    - Key: GITLAB_LOG_DIR
      Value: '"/var/log/gitlab"'
    - Key: GITLAB_CACHE_DIR
      Value: '"/etc/docker-gitlab"'
    - Key: RAILS_ENV
      Value: production
    - Key: NODE_ENV
      Value: production
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GITLAB_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab"'
    - Key: GITLAB_SHELL_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-shell"'
    - Key: GITLAB_WORKHORSE_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-workhorse"'
    - Key: GITLAB_PAGES_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-pages"'
    - Key: GITLAB_MONITOR_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-monitor"'
    - Key: GITLAB_GITALY_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitaly"'
    - Key: GITLAB_DATA_DIR
      Value: '"${GITLAB_HOME}/data"'
    - Key: GITLAB_BUILD_DIR
      Value: '"${GITLAB_CACHE_DIR}/build"'
    - Key: GITLAB_RUNTIME_DIR
      Value: '"${GITLAB_CACHE_DIR}/runtime"'
    Name: env
  - CmdLine:
    - echo 'APT::Install-Recommends 0;' >> /etc/apt/apt.conf.d/01norecommends  &&
      echo 'APT::Install-Suggests 0;' >> /etc/apt/apt.conf.d/01norecommends  && apt-get
      update && apt-get install -y     apt-transport-https     ca-certificates     net-tools     sudo     tzdata     unzip     curl     vim.tiny
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24  &&
      echo "deb http://ppa.launchpad.net/git-core/ppa/ubuntu xenial main" >> /etc/apt/sources.list  &&
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 80F70E11F0F0D5F10CB20E62F5DA5F09C3173AA6  &&
      echo "deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu xenial main" >>
      /etc/apt/sources.list  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv 136221EE520DDFAF0A905689B9316A7BC7917B12  && echo "deb http://ppa.launchpad.net/chris-lea/redis-server/ubuntu
      xenial main" >> /etc/apt/sources.list  && curl -sL https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add -  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg
      main' > /etc/apt/sources.list.d/pgdg.list  && curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      | apt-key add -  && echo 'deb https://deb.nodesource.com/node_7.x xenial main'
      > /etc/apt/sources.list.d/nodesource.list  && curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -  && echo 'deb https://dl.yarnpkg.com/debian/ stable main' >
      /etc/apt/sources.list.d/yarn.list  && apt-get update  && apt-get -yy upgrade  &&
      apt-get -yy dist-upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     gettext-base     git-core     libpq5     libyaml-0-2     libssl1.0.0     libgdbm3     libreadline6     libncurses5     libffi6     libkrb5-3     libxml2     libxslt1.1     libcurl3     libicu55     libre2-dev     libmysqlclient20     logrotate     locales     mysql-client     nodejs     openssh-server     postgresql-client     python2.7     python-docutils     redis-tools     ruby${RUBY_VERSION}     supervisor     yarn     zlib1g  &&
      find /usr/share/locale -mindepth 1 -maxdepth 1 ! -name 'en' | xargs rm -r
    Name: run
    PrependShell: true
  - CmdLine:
    - update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX  && locale-gen en_US.UTF-8  &&
      dpkg-reconfigure locales  && sed 's/session\s*required\s*pam_loginuid.so/session
      optional pam_loginuid.so/g' -i /etc/pam.d/sshd  && rm -rf /etc/update-motd.d
      /etc/motd /etc/motd.dynamic  && ln -fs /dev/null /run/motd.dynamic
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler --no-ri --no-rdoc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/build/
    - ${GITLAB_BUILD_DIR}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/runtime/
    - ${GITLAB_RUNTIME_DIR}/
  - CmdLine:
    - bash ${GITLAB_BUILD_DIR}/install.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 22/tcp
    - 8090/tcp
    - 8181/tcp
    - 9168/tcp
    - 9235/tcp
    - 9236/tcp
  - Name: volume
    Volumes:
    - ${GITLAB_DATA_DIR}
    - ${GITLAB_LOG_DIR}
  - Name: workdir
    Path: ${GITLAB_INSTALL_DIR}
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - app:start
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
