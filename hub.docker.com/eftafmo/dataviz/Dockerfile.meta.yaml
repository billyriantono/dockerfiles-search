MetaArgs: null
Stages:
- BaseName: python:3.6-slim
  Commands:
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"andrei.melis@eaudeweb.ro"'
    - Key: roles
      Value: '"front,cron"'
    - Key: name
      Value: '"web"'
    Name: label
  - Env:
    - Key: APP_HOME
      Value: /var/local/dataviz
    - Key: PATH
      Value: /var/local/scripts:$PATH
    - Key: NODE_ENV
      Value: production
    Name: env
  - CmdLine:
    - runDeps="vim git curl cron netcat-traditional gnupg"  && apt-get update -y  &&
      apt-get install -y --no-install-recommends $runDeps  && apt-get clean  && rm
      -vrf /var/lib/apt/lists/*  && curl -sL https://deb.nodesource.com/setup_8.x
      | bash -  && apt-get install -y nodejs  && curl -sL https://sentry.io/get-cli/
      | bash  && mkdir -p $APP_HOME  && mkdir -p /var/local/logs  && touch ~/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/crontab
    - /etc/crontab.dataviz
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/entrypoint.sh
    - ./docker/import.sh
    - /bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - ./docker/requirements-docker.txt
    - package.json
    - postcss.config.js
    - $APP_HOME/
  - Name: workdir
    Path: $APP_HOME
  - CmdLine:
    - npm install  && pip install -r requirements-docker.txt
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - $APP_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/localsettings.py
    - $APP_HOME/dv/
  - CmdLine:
    - NODE_ENV=production npm run build
    Name: run
    PrependShell: true
  - CmdLine:
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:3.6-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim
