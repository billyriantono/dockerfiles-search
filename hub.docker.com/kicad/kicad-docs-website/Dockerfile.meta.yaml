MetaArgs: null
Stages:
- As: site-build-env
  BaseName: ruby:2.5
  Commands:
  - Name: workdir
    Path: /site
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - Gemfile.lock
    - ./
  - CmdLine:
    - bundle install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Chown: ""
    From: index.docker.io/kicadeda/kicad-doc:4.0.7
    Name: copy
    SourcesAndDest:
    - /src
    - /site/kicad-doc-built/4.0.7
  - Chown: ""
    From: index.docker.io/kicadeda/kicad-doc:5.0.2
    Name: copy
    SourcesAndDest:
    - /src
    - /site/kicad-doc-built/5.0.2
  - Chown: ""
    From: index.docker.io/kicadeda/kicad-doc:5.1.5
    Name: copy
    SourcesAndDest:
    - /src
    - /site/kicad-doc-built/5.1.5
  - Chown: ""
    From: index.docker.io/kicadeda/kicad-doc:master
    Name: copy
    SourcesAndDest:
    - /src
    - /site/kicad-doc-built/master
  - CmdLine:
    - rake process
    Name: run
    PrependShell: true
  - CmdLine:
    - jekyll build
    Name: run
    PrependShell: true
  From:
    Image: ruby:2.5
  Name: site-build-env
  Platform: ""
  SourceCode: FROM ruby:2.5 as site-build-env
- BaseName: nginx:alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.docker/default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.docker/kicad-downloads-proxy-pass.conf
    - /etc/nginx/conf.d/kicad-downloads-proxy-pass.conf
  - Chown: ""
    From: site-build-env
    Name: copy
    SourcesAndDest:
    - /site/_site
    - /usr/share/nginx/html
  - Chown: ""
    From: index.docker.io/kicadeda/kicad-doc-doxygen:master
    Name: copy
    SourcesAndDest:
    - /doxygen-docs_html
    - /usr/share/nginx/html/doxygen
  - Chown: ""
    From: index.docker.io/kicadeda/kicad-doc-doxygen:master
    Name: copy
    SourcesAndDest:
    - /doxygen-python_html
    - /usr/share/nginx/html/doxygen-python
  - CmdLine:
    - chmod -R 777 /var/log/nginx /var/cache/nginx /var/run      && chgrp -R 0 /etc/nginx      &&
      chmod -R g+rwX /etc/nginx
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  - Name: expose
    Ports:
    - "8081"
  From:
    Image: nginx:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:alpine
