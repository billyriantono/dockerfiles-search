MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.11-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/drone-terraform
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/drone-terraform
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - CmdLine:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo -o /go/bin/drone-terraform
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.11-alpine AS builder
- BaseName: alpine:3.9
  Commands:
  - Env:
    - Key: AWSCLI_VERSION
      Value: '"1.16.52"'
    Name: env
  - CmdLine:
    - apk add --update --no-cache     bash     python     python-dev     py-pip     build-base     &&
      pip install awscli==$AWSCLI_VERSION --upgrade --user     && apk --purge -v del
      py-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apk -U --no-cache add   ca-certificates   curl   git   openssh-client
    Name: run
    PrependShell: true
  - Env:
    - Key: INSTALL_DIR
      Value: /usr/local/bin
    Name: env
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.13
    Name: env
  - CmdLine:
    - curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&   unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d ${INSTALL_DIR}
      &&   rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: AWS_IAM_AUTHENTICATOR_VERSION
      Value: 1.12.7/2019-03-27
    Name: env
  - CmdLine:
    - curl -L -o ${INSTALL_DIR}/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/${AWS_IAM_AUTHENTICATOR_VERSION}/bin/linux/amd64/aws-iam-authenticator
      &&   chmod +x ${INSTALL_DIR}/aws-iam-authenticator
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBECTL_VERSION
      Value: v1.14.0
    Name: env
  - CmdLine:
    - curl -L -o ${INSTALL_DIR}/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      &&   chmod +x ${INSTALL_DIR}/kubectl
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/drone-terraform
    - ${INSTALL_DIR}/
  - CmdLine:
    - drone-terraform
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
