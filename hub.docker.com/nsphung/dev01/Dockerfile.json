{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:wily",
      "SourceCode": "FROM ubuntu:wily",
      "Platform": "",
      "From": {
        "Image": "ubuntu:wily"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   git   curl   iputils-ping   telnet   unzip   vim   zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh       \u0026\u0026 cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc       \u0026\u0026 chsh -s /bin/zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"cd $HOME\" \u003e\u003e $HOME/.zshrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:webupd8team/java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y oracle-java8-installer oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "java -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "javac -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget http://dl.bintray.com/sbt/debian/sbt-${SBT_VERSION}.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg -i sbt-${SBT_VERSION}.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install sbt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sbt about"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -fr sbt-${SBT_VERSION}.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ACTIVATOR_VERSION",
              "Value": "1.3.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026   wget https://downloads.typesafe.com/typesafe-activator/${ACTIVATOR_VERSION}/typesafe-activator-${ACTIVATOR_VERSION}.zip \u0026\u0026   unzip typesafe-activator-${ACTIVATOR_VERSION}.zip \u0026\u0026   rm -f /opt/typesafe-activator-${ACTIVATOR_VERSION}.zip \u0026\u0026   mv /opt/activator-dist-${ACTIVATOR_VERSION} /opt/activator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/activator"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "1.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s http://d3kbcqa49mib13.cloudfront.net/spark-${SPARK_VERSION}-bin-hadoop2.6.tgz | tar -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local \u0026\u0026 ln -s spark-${SPARK_VERSION}-bin-hadoop2.6 spark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$SPARK_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "spark-submit --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/dockerize.tar.gz -sSL \"https://github.com/jwilder/dockerize/releases/download/v0.2.0/dockerize-linux-amd64-v0.2.0.tar.gz\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/dockerize.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO - http://packages.confluent.io/deb/2.0/archive.key | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository \"deb http://packages.confluent.io/deb/2.0 stable main\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y confluent-platform-2.11.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"# Update to Kafka 0.9.0.0 (if not all clients are not switch to 0.9.0.0 yet)\" \u003e\u003e /etc/kafka/server.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"inter.broker.protocol.version=0.8.2.2\" \u003e\u003e /etc/kafka/server.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_MAJOR",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_VERSION",
              "Value": "1.7.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_REPO_BASE",
              "Value": "http://packages.elasticsearch.org/elasticsearch/1.7/debian"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb $ELASTICSEARCH_REPO_BASE stable main\" \u003e /etc/apt/sources.list.d/elasticsearch.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends elasticsearch=$ELASTICSEARCH_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/elasticsearch/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/elasticsearch"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 for path in \t\t./data \t\t./logs \t\t./config \t\t./config/scripts \t; do \t\tmkdir -p \"$path\"; \t\tchown -R elasticsearch:elasticsearch \"$path\"; \tdone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "plugin -install mobz/elasticsearch-head/1.x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "plugin -install lukas-vlcek/bigdesk/2.5.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/elasticsearch \u0026\u0026     chown -R elasticsearch:elasticsearch /data/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'path.data: /data/elasticsearch' \u003e\u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9092"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8123"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9200",
            "9300"
          ]
        },
        {
          "CmdLine": [
            "git config --global core.autocrlf true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "zookeeper-server-start -daemon /etc/kafka/zookeeper.properties \u0026\u0026     dockerize -wait tcp://localhost:2181 \u0026\u0026     kafka-server-start -daemon /etc/kafka/server.properties \u0026\u0026     dockerize -wait tcp://localhost:2181 -wait tcp://localhost:9092 \u0026\u0026     schema-registry-start -daemon /etc/schema-registry/schema-registry.properties \u003e /dev/null 2\u003e\u00261 \u0026\u0026     dockerize -wait tcp://localhost:2181 -wait tcp://localhost:9092 -wait http://localhost:8081 \u0026\u0026     /etc/init.d/elasticsearch start \u0026\u0026     dockerize -wait tcp://localhost:9300 \u0026\u0026     /bin/zsh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}