{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:17.10",
      "SourceCode": "FROM ubuntu:17.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:17.10"
      },
      "Commands": [
        {
          "Maintainer": "Simon Erhardt \u003chello@rootlogin.ch\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.16.1"
            },
            {
              "Key": "SWARM_CLIENT_VERSION",
              "Value": "3.10"
            },
            {
              "Key": "JENKINS_MASTER",
              "Value": "https://example.org"
            },
            {
              "Key": "JENKINS_USERNAME",
              "Value": "jenkins"
            },
            {
              "Key": "JENKINS_PASSWORD",
              "Value": "jenkins"
            },
            {
              "Key": "JENKINS_EXECUTORS",
              "Value": "1"
            },
            {
              "Key": "JENKINS_LABELS",
              "Value": "\"\""
            },
            {
              "Key": "JENKINS_NAME",
              "Value": "example-slave"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/usr/local/bin/tini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64",
            "/usr/local/bin/jq"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 chmod +x /usr/local/bin/run-container.sh   \u0026\u0026 chmod +x /usr/local/bin/tini   \u0026\u0026 chmod +x /usr/local/bin/jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apt-get update   \u0026\u0026 apt-get upgrade -y   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y     ansible     apt-transport-https     automake     autotools-dev     bc     bsdmainutils     build-essential     ca-certificates     cmake     curl     faketime     fonts-tuffy     git     g++-mingw-w64-i686     g++-mingw-w64-x86-64     gnupg     imagemagick     libboost-all-dev     libbz2-dev     libcap-dev     libdbus-1-dev     libevent-dev     libharfbuzz-dev     libminiupnpc-dev     libprotobuf-dev     libqrencode-dev     libqt4-dev     libqt5core5a     libqt5dbus5     libqt5gui5     librsvg2-bin     libssl-dev     libtiff-tools     libtool     libz-dev     libzmq3-dev     locales     lsof     mingw-w64-i686-dev     mingw-w64-x86-64-dev     nsis     openjdk-8-jre-headless     openssh-client     openssl     pkg-config     protobuf-compiler     python3     python3-dev     python3-pip     python3-zmq     python-dev     python-setuptools     qtbase5-dev     qttools5-dev     qttools5-dev-tools     rsync     s3cmd     software-properties-common     sshpass     sudo     util-linux     wget     wine1.6     zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y -u ppa:bitcoin/bitcoin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y libdb4.8-dev libdb4.8++-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install litecoin_scrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 wget -O /usr/local/bin/swarm-client.jar https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}.jar   \u0026\u0026 useradd -m -s /bin/sh jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen   \u0026\u0026 sed -i -e 's/# de_CH.UTF-8 UTF-8/de_CH.UTF-8 UTF-8/' /etc/locale.gen   \u0026\u0026 dpkg-reconfigure --frontend=noninteractive locales   \u0026\u0026 locale-gen en_US.UTF-8   \u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/bin/run-container.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}