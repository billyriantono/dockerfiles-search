MetaArgs: null
Stages:
- As: pack
  BaseName: node:8-stretch
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /generator-chisel
  - Name: workdir
    Path: /generator-chisel
  - CmdLine:
    - apt-get update &&   apt-get install -y php-cli &&   rm -rf /var/lib/apt/lists/*
      &&   npm pack --unsafe-perm &&   mv generator-chisel-*.tgz generator-chisel.tgz
    Name: run
    PrependShell: true
  From:
    Image: node:8-stretch
  Name: pack
  Platform: ""
  SourceCode: FROM node:8-stretch as pack
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - groupadd --gid 1000 chisel   && useradd --uid 1000 --gid chisel --shell /bin/bash
      --create-home chisel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y php-cli php-mysql curl mysql-client &&   rm
      -rf /var/lib/apt/lists/* &&   php -v &&   mysql --version
    Name: run
    PrependShell: true
  - Chown: ""
    From: pack
    Name: copy
    SourcesAndDest:
    - /generator-chisel/generator-chisel.tgz
    - /generator-chisel/
  - Env:
    - Key: TINI_VERSION
      Value: v0.16.1
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: chisel
  - Name: workdir
    Path: /home/chisel
  - Env:
    - Key: N_PREFIX
      Value: '"/home/chisel/n"'
    - Key: PREFIX
      Value: '"/home/chisel/n"'
    - Key: PATH
      Value: '"/home/chisel/n/bin:/home/chisel/bin:$PATH"'
    - Key: N_VERSION
      Value: 2.1.8
    - Key: NODE_VERSION
      Value: "8"
    - Key: CHISEL_DOCKER
      Value: "1"
    Name: env
  - CmdLine:
    - mkdir bin &&   (curl -L "https://unpkg.com/n@$N_VERSION/bin/n" > ./bin/n) &&   (echo
      '#!/bin/bash\n\nyo chisel "$@"' > ./bin/create) &&   (echo '#!/bin/bash\n\nnpm
      run build "$@"' > ./bin/build) &&   (echo '#!/bin/bash\n\nnpm run watch "$@"'
      > ./bin/watch) &&   (echo '#!/bin/bash\n\nnpm run dev "$@"' > ./bin/dev) &&   (echo
      '#!/bin/bash\n\nnpm run lint "$@"' > ./bin/lint) &&   (echo '#!/bin/bash\n\ntail
      -f /dev/null' > ./bin/proxy) &&   chmod +x ./bin/* &&   n $NODE_VERSION &&   npm
      install -g yarn yo &&   yarn -v &&   npm install -g /generator-chisel/generator-chisel.tgz
      &&   npm cache clean --force &&   mkdir -p /home/chisel/.cache/yarn &&   mkdir
      -p /home/chisel/.npm/_cacache &&   mkdir project
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/chisel/.cache/yarn
    - /home/chisel/.npm/_cacache
  - Name: workdir
    Path: /home/chisel/project
  - Name: expose
    Ports:
    - "2999"
    - "3000"
  - CmdLine:
    - proxy
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
