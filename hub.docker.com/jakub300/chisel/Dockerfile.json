{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "pack",
      "BaseName": "node:8-stretch",
      "SourceCode": "FROM node:8-stretch as pack",
      "Platform": "",
      "As": "pack",
      "From": {
        "Image": "node:8-stretch"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/generator-chisel"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/generator-chisel"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y php-cli \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   npm pack --unsafe-perm \u0026\u0026   mv generator-chisel-*.tgz generator-chisel.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd --gid 1000 chisel   \u0026\u0026 useradd --uid 1000 --gid chisel --shell /bin/bash --create-home chisel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y php-cli php-mysql curl mysql-client \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   php -v \u0026\u0026   mysql --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "pack",
          "Name": "copy",
          "SourcesAndDest": [
            "/generator-chisel/generator-chisel.tgz",
            "/generator-chisel/"
          ]
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.16.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "chisel"
        },
        {
          "Name": "workdir",
          "Path": "/home/chisel"
        },
        {
          "Env": [
            {
              "Key": "N_PREFIX",
              "Value": "\"/home/chisel/n\""
            },
            {
              "Key": "PREFIX",
              "Value": "\"/home/chisel/n\""
            },
            {
              "Key": "PATH",
              "Value": "\"/home/chisel/n/bin:/home/chisel/bin:$PATH\""
            },
            {
              "Key": "N_VERSION",
              "Value": "2.1.8"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "8"
            },
            {
              "Key": "CHISEL_DOCKER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir bin \u0026\u0026   (curl -L \"https://unpkg.com/n@$N_VERSION/bin/n\" \u003e ./bin/n) \u0026\u0026   (echo '#!/bin/bash\\n\\nyo chisel \"$@\"' \u003e ./bin/create) \u0026\u0026   (echo '#!/bin/bash\\n\\nnpm run build \"$@\"' \u003e ./bin/build) \u0026\u0026   (echo '#!/bin/bash\\n\\nnpm run watch \"$@\"' \u003e ./bin/watch) \u0026\u0026   (echo '#!/bin/bash\\n\\nnpm run dev \"$@\"' \u003e ./bin/dev) \u0026\u0026   (echo '#!/bin/bash\\n\\nnpm run lint \"$@\"' \u003e ./bin/lint) \u0026\u0026   (echo '#!/bin/bash\\n\\ntail -f /dev/null' \u003e ./bin/proxy) \u0026\u0026   chmod +x ./bin/* \u0026\u0026   n $NODE_VERSION \u0026\u0026   npm install -g yarn yo \u0026\u0026   yarn -v \u0026\u0026   npm install -g /generator-chisel/generator-chisel.tgz \u0026\u0026   npm cache clean --force \u0026\u0026   mkdir -p /home/chisel/.cache/yarn \u0026\u0026   mkdir -p /home/chisel/.npm/_cacache \u0026\u0026   mkdir project"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/chisel/.cache/yarn",
            "/home/chisel/.npm/_cacache"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/chisel/project"
        },
        {
          "Name": "expose",
          "Ports": [
            "2999",
            "3000"
          ]
        },
        {
          "CmdLine": [
            "proxy"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}