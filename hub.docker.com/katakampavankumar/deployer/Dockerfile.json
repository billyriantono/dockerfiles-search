{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:sid",
      "SourceCode": "FROM debian:sid",
      "Platform": "",
      "From": {
        "Image": "debian:sid"
      },
      "Commands": [
        {
          "Maintainer": "Pavan Kumar \u003ck.pavan@invizotechnologies.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     echo \"APT::Install-Recommends \\\"0\\\";\" \u003e\u003e /etc/apt/apt.conf.d/02recommends \u0026\u0026     echo \"APT::Install-Suggests \\\"0\\\";\" \u003e\u003e /etc/apt/apt.conf.d/02recommends \u0026\u0026     apt-get clean \u0026\u0026     apt-get -q -y update \u0026\u0026     apt-get -q -y install     ca-certificates php5-cli php5-fpm php5-gd libapache2-mod-php5 php5-mysql php5-curl php5-pgsql php5-sqlite php5-mcrypt     wget sqlite git libsqlite3-dev curl supervisor cron unzip software-properties-common \u0026\u0026     apt-get clean \u0026\u0026 apt-get autoremove -q \u0026\u0026     rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/man /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q -y install nodejs npm nodejs-legacy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository  -y ppa:chris-lea/redis-server \u0026\u0026     apt-get update \u0026\u0026     apt-get -q -y install redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:nginx/stable \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "configs/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf \u0026\u0026     mkdir /run/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/deployer/"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/REBELinBLUE/deployer/archive/0.0.33.tar.gz \u0026\u0026     tar xzvf 0.0.33.tar.gz --strip-components=1 \u0026\u0026     chown -R www-data /var/www/deployer \u0026\u0026     rm -r 0.0.33.tar.gz \u0026\u0026     php composer.phar install --no-dev -o \u0026\u0026     npm install --production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp examples/supervisor.conf /etc/supervisor/conf.d/deployer.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp examples/crontab /etc/cron.d/artisan-schedule"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "configs/entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "configs/.env.docker",
            "/var/www/deployer/.env"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "configs/nginx-site.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "CmdLine": [
            "chmod 0644 /etc/cron.d/artisan-schedule \u0026\u0026    touch /var/log/cron.log \u0026\u0026    chown www-data /var/www/deployer/.env"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}