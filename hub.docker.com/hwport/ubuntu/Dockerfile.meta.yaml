MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: JaeHyuk Cho <minzkn@minzkn.com>
    Name: maintainer
  - Labels:
    - Key: description
      Value: '"HWPORT Ubuntu 16.04 dev environment"'
    Name: label
  - Labels:
    - Key: name
      Value: '"hwport/ubuntu:16.04"'
    Name: label
  - Labels:
    - Key: url
      Value: '"http://www.minzkn.com/"'
    Name: label
  - Labels:
    - Key: vendor
      Value: '"HWPORT"'
    Name: label
  - Labels:
    - Key: version
      Value: '"1.0"'
    Name: label
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: TERM
    Name: arg
    Value: xterm
  - Env:
    - Key: container
      Value: docker
    Name: env
  - CmdLine:
    - apt-get autoclean -y;     apt-get clean;     apt-get autoremove -y;     rm -rf
      /var/lib/apt/lists/*;     sed -i -e "s/archive\.ubuntu\.com/kr\.archive\.ubuntu\.com/g"
      "/etc/apt/sources.list";     apt-get update --list-cleanup;     apt-get install
      -y apt-utils debconf-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ssh;     sed -ri 's/^session\s+required\s+pam_loginuid.so$/session
      optional pam_loginuid.so/' /etc/pam.d/sshd;     cp -f /etc/ssh/sshd_config /etc/ssh/sshd_config.org;     sed
      -ri "s/^PermitRootLogin\s+.*/PermitRootLogin yes/" /etc/ssh/sshd_config;     sed
      -i -e "s/^Port\s22$/Port 22\nPort 2222/g" /etc/ssh/sshd_config;     echo "AllowTcpForwarding
      yes" >> /etc/ssh/sshd_config;     echo "GatewayPorts yes" >> /etc/ssh/sshd_config;     echo
      "ClientAliveInterval 60" >> /etc/ssh/sshd_config;     echo "ClientAliveCountMax
      3" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "2222"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - init-fake.conf
    - /etc/init/fake-container-events.conf
  - CmdLine:
    - rm /usr/sbin/policy-rc.d;     rm /sbin/initctl;     dpkg-divert --rename --remove
      /sbin/initctl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales;     locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - '/usr/sbin/update-rc.d -f ondemand remove;     for f in         /etc/init/u*.conf         /etc/init/mounted-dev.conf         /etc/init/mounted-proc.conf         /etc/init/mounted-run.conf         /etc/init/mounted-tmp.conf         /etc/init/mounted-var.conf         /etc/init/hostname.conf         /etc/init/networking.conf         /etc/init/tty*.conf         /etc/init/plymouth*.conf         /etc/init/hwclock*.conf         /etc/init/module*.conf    ;
      do         dpkg-divert --local --rename --add "$f";     done;     echo ''# /lib/init/fstab:
      cleared out for bare-bones Docker'' > /lib/init/fstab'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:docker.io' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/useradd     -c "Default dev account"     -d "/home/dev"     -g users     -G
      users,adm,sudo     -m     -s /bin/bash     dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dev:duftlagl" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     dpkg-dev     sudo     build-essential     binutils     gcc     g++     libc-dev     gdb     perl     make     m4     autoconf     automake     libtool     cmake     scons     bison     gawk     gettext     grep     sed     patch     linux-headers-generic     vim     net-tools     ccache     subversion     git     wget     curl     genromfs     rsync     texinfo     libncurses5-dev     ncurses-term     openssl     tar     gzip     bzip2     xz-utils     unzip     zlib1g-dev     lib32z1     cscope     exuberant-ctags     ftp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y xmlto
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libboost-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "proftpd-basic shared/proftpd/inetd_or_standalone select standalone" |
      debconf-set-selections;     apt-get install -y     proftpd
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -f /etc/proftpd/proftpd.conf /etc/proftpd/proftpd.conf.org
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./proftpd.conf
    - /etc/proftpd/proftpd.conf
  - Name: expose
    Ports:
    - "21"
    - "65000"
    - "65001"
    - "65002"
    - "65003"
    - "65004"
    - "65005"
    - "65006"
    - "65007"
    - "65008"
    - "65009"
  - CmdLine:
    - apt-get install -y xinetd tftpd tftp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tftp
    - /etc/xinet.d/tftp
  - Name: expose
    Ports:
    - "69"
  - CmdLine:
    - apt-get install -y     libjpeg-dev     libpng-dev     libgif-dev     libssl-dev
      libcurl4-openssl-dev     libssh2-1-dev     libsqlite3-dev     freetds-dev     libpq-dev     libmysqlclient-dev     default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoclean -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - /sbin/init
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
