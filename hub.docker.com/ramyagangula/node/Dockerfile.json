{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:10.10.0-alpine",
      "SourceCode": "FROM node:10.10.0-alpine",
      "Platform": "",
      "From": {
        "Image": "node:10.10.0-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Azure App Services Container Images \u003cappsvc-images@microsoft.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startup",
            "/opt/startup"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hostingstart.html",
            "/home/site/wwwroot/hostingstart.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "CmdLine": [
            "echo \"ipv6\" \u003e\u003e /etc/modules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/v3.6/community\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-cdn.alpinelinux.org/alpine/v3.6/main\" \u003e\u003e /etc/apk/repositories;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g pm2      \u0026\u0026 mkdir -p /home/LogFiles      \u0026\u0026 echo \"root:Docker!\" | chpasswd      \u0026\u0026 echo \"cd /home\" \u003e\u003e /etc/bash.bashrc      \u0026\u0026 apk update --no-cache      \u0026\u0026 apk add openssh      \u0026\u0026 apk add openrc      \u0026\u0026 apk add vim      \u0026\u0026 apk add curl      \u0026\u0026 apk add wget      \u0026\u0026 apk add tcptraceroute      \u0026\u0026 apk add bash      \u0026\u0026 cd /opt/startup      \u0026\u0026 npm install      \u0026\u0026 chmod 755 /opt/startup/init_container.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^\\(tty\\d\\:\\:\\)/#\\1/g' /etc/inittab     \u0026\u0026 sed -i         -e 's/#rc_sys=\".*\"/rc_sys=\"docker\"/g'         -e 's/#rc_env_allow=\".*\"/rc_env_allow=\"\\*\"/g'         -e 's/#rc_crashed_stop=.*/rc_crashed_stop=NO/g'         -e 's/#rc_crashed_start=.*/rc_crashed_start=YES/g'         -e 's/#rc_provide=\".*\"/rc_provide=\"loopback net\"/g'         /etc/rc.conf     \u0026\u0026 rm -f /etc/init.d/hwdrivers             /etc/init.d/hwclock             /etc/init.d/hwdrivers             /etc/init.d/modules             /etc/init.d/modules-load             /etc/init.d/modloop     \u0026\u0026 sed -i 's/cgroup_add_service /# cgroup_add_service /g' /lib/rc/sh/openrc-run.sh     \u0026\u0026 sed -i 's/VSERVER/DOCKER/Ig' /lib/rc/sh/init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Amsterdam"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "8080"
          ]
        },
        {
          "Env": [
            {
              "Key": "PM2HOME",
              "Value": "/pm2home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_ROLE_INSTANCE_ID",
              "Value": "localRoleInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_INSTANCE_ID",
              "Value": "localInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/home/site/wwwroot"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/site/wwwroot"
        },
        {
          "CmdLine": [
            "/opt/startup/init_container.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}