{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "45"
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "14"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/default-jvm"
            },
            {
              "Key": "ES_PKG_NAME",
              "Value": "elasticsearch-1.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add wget ca-certificates \u0026\u0026   cd /tmp \u0026\u0026   wget \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk\"             \"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-bin-2.21-r2.apk\" \u0026\u0026   apk add --allow-untrusted glibc-2.21-r2.apk glibc-bin-2.21-r2.apk \u0026\u0026   /usr/glibc/usr/bin/ldconfig /lib /usr/glibc/usr/lib \u0026\u0026   echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf \u0026\u0026   wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"     \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026   tar xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026   mkdir -p /usr/lib/jvm \u0026\u0026   mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \u0026\u0026   ln -s \"java-${JAVA_VERSION}-oracle\" $JAVA_HOME \u0026\u0026   ln -s $JAVA_HOME/bin/java /usr/bin/java \u0026\u0026   ln -s $JAVA_HOME/bin/javac /usr/bin/javac \u0026\u0026   rm -rf $JAVA_HOME/*src.zip \u0026\u0026   rm -rf $JAVA_HOME/lib/missioncontrol          $JAVA_HOME/lib/visualvm          $JAVA_HOME/lib/*javafx*          $JAVA_HOME/jre/lib/plugin.jar          $JAVA_HOME/jre/lib/ext/jfxrt.jar          $JAVA_HOME/jre/bin/javaws          $JAVA_HOME/jre/lib/javaws.jar          $JAVA_HOME/jre/lib/desktop          $JAVA_HOME/jre/plugin          $JAVA_HOME/jre/lib/deploy*          $JAVA_HOME/jre/lib/*javafx*          $JAVA_HOME/jre/lib/*jfx*          $JAVA_HOME/jre/lib/amd64/libdecora_sse.so          $JAVA_HOME/jre/lib/amd64/libprism_*.so          $JAVA_HOME/jre/lib/amd64/libfxplugins.so          $JAVA_HOME/jre/lib/amd64/libglass.so          $JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so          $JAVA_HOME/jre/lib/amd64/libjavafx*.so          $JAVA_HOME/jre/lib/amd64/libjfx*.so \u0026\u0026   rm -rf $JAVA_HOME/jre/bin/jjs          $JAVA_HOME/jre/bin/keytool          $JAVA_HOME/jre/bin/orbd          $JAVA_HOME/jre/bin/pack200          $JAVA_HOME/jre/bin/policytool          $JAVA_HOME/jre/bin/rmid          $JAVA_HOME/jre/bin/rmiregistry          $JAVA_HOME/jre/bin/servertool          $JAVA_HOME/jre/bin/tnameserv          $JAVA_HOME/jre/bin/unpack200          $JAVA_HOME/jre/lib/ext/nashorn.jar          $JAVA_HOME/jre/lib/jfr.jar          $JAVA_HOME/jre/lib/jfr          $JAVA_HOME/jre/lib/oblique-fonts \u0026\u0026   wget https://download.elasticsearch.org/elasticsearch/elasticsearch/$ES_PKG_NAME.tar.gz \u0026\u0026   tar xvzf $ES_PKG_NAME.tar.gz \u0026\u0026   mv $ES_PKG_NAME /elasticsearch \u0026\u0026   apk del wget ca-certificates \u0026\u0026   rm -Rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/plugin --install elasticsearch/elasticsearch-analysis-kuromoji/2.5.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/plugin --install mobz/elasticsearch-head"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/elasticsearch.yml",
            "/elasticsearch/config/elasticsearch.yml"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/elasticsearch"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "9200"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9300"
          ]
        }
      ]
    }
  ]
}