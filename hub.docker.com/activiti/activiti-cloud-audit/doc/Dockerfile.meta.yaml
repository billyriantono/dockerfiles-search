MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.9.19
  Commands:
  - Maintainer: AcrossFW <dev@acrossfw.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get update -qq && apt-get -qqy install       apt-utils     \tcurl     \tdnsmasq
      \    \tdnsutils     \tinetutils-ping     \tinetutils-traceroute     \tiperf
      \    \tiptables     \tjq     \tlsof     \tlua5.1     \tman     \tnet-tools     \tnetcat
      \    \tnload     \tscreen     \tshellcheck     \tspeedtest-cli     \ttcpdump
      \    \ttinc     \tvim     \twget           && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: BATS_VERSION
      Value: 0.4.0
    Name: env
  - CmdLine:
    - curl -s -o "/tmp/v${BATS_VERSION}.tar.gz" -L       "https://github.com/sstephenson/bats/archive/v${BATS_VERSION}.tar.gz"     &&
      tar -xzf "/tmp/v${BATS_VERSION}.tar.gz" -C /tmp/     && bash "/tmp/bats-${BATS_VERSION}/install.sh"
      /usr/local         && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: ADMIN_NAME
      Value: vpnet
    Name: env
  - Env:
    - Key: ADMIN_PASS
      Value: vpnet.io
    Name: env
  - Env:
    - Key: USERS
      Value: '"user:pass"'
    Name: env
  - Env:
    - Key: HOSTNAME
      Value: vpnet.io
    Name: env
  - Env:
    - Key: EMAIL
      Value: dev@acrossfw.com
    Name: env
  - Env:
    - Key: DNS
      Value: 8.8.8.8
    Name: env
  - Env:
    - Key: DNS2
      Value: 8.8.4.4
    Name: env
  - Env:
    - Key: ACROSSFW_HOME
      Value: /acrossfw
    Name: env
  - CmdLine:
    - /acrossfw/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  - Name: workdir
    Path: $ACROSSFW_HOME
  - CmdLine:
    - 'ln -s /etc/service /service   && ln -s ${ACROSSFW_HOME}/service/vpnet /service/vpnet   &&
      echo ''export WANIP=`curl -Ss v4.ifconfig.co`'' >> /etc/profile   && echo ''cd
      # fix $PWD=/acrossfw right after login bug? do not know why yet.'' >> /root/.bashrc   &&
      echo ''[[ "$PS1" =~ WANIP ]] || PS1=${PS1//@\\\\h/@\\\\h(\$WANIP)}'' >> /root/.bashrc   &&
      echo ''[[ "$PS1" =~ WANIP ]] || PS1=${PS1//@\\\\h/@\\\\h(\$WANIP)}'' >> /etc/skel/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -   && apt-get install
      -qqy nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT_WEB
      Value: "10080"
    Name: env
  - Name: expose
    Ports:
    - ${PORT_WEB}/tcp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - service/vpnet/package.json
    - service/vpnet/
  - CmdLine:
    - cd service/vpnet   && npm install
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT_SSH
      Value: "10022"
    Name: env
  - Name: expose
    Ports:
    - ${PORT_SSH}/tcp
  - CmdLine:
    - rm -f /etc/service/sshd/down     && ln -s ${ACROSSFW_HOME}/service/ssh /service/ssh
    Name: run
    PrependShell: true
  - Env:
    - Key: SSH_AUTHORIZED_KEYS
      Value: '"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6GRsnNc1judMmIFeYzu02KbkkWW0mkrOusAe1kdEW9MeXIgq4cOjMMYHGHLxQR+WU4/yexpKdBlDUNSJiw7uSTyGl0ORwwKZfAeMlaFWRCtIrPh1DBugjZQKcAxoKaMeH2lzHIj5H/tCrgyjmQ6foUG70cKFQFtp6+aSURr1Oj12mQGD/JsfTRw2nnLdDA7TEV9SmhThliu7voq/u50doZjutFmASQVJJ+QD2jISyc7DGudVoQWNqsy6fJyHqnFKWpvlLMw22MgXOJEKpGS616jHGLqwvCCFghSl2+Dh3XVkhtL5WV9mU0dyqcesr347TH7FtVwufhI7yArU7+qin
        dev@acrossfw.com"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get -y install       iptables       ndppd       openssl       strongswan       uuid-runtime     &&
      rm /etc/ipsec.secrets     && ln -s ${ACROSSFW_HOME}/service/ipsec /service/ipsec         &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 4500/udp
    - 500/udp
  - Name: expose
    Ports:
    - 1723/tcp
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy       pptpd       || true     &&
      rm -f rm /var/lib/dpkg/info/pptpd.postinst     && ln -s ${ACROSSFW_HOME}/service/pptp
      /service/pptp         && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT_SQUID
      Value: "13128"
    Name: env
  - Name: expose
    Ports:
    - ${PORT_SQUID}/tcp
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy       apache2-utils       squid     &&
      ln -s ${ACROSSFW_HOME}/service/squid /service/squid         && apt-get clean
      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT_SHADOWSOCKS
      Value: "18388"
    Name: env
  - Name: expose
    Ports:
    - ${PORT_SHADOWSOCKS}/tcp
    - ${PORT_SHADOWSOCKS}/udp
  - Env:
    - Key: SHADOWSOCKS_ENCRYPT_METHOD
      Value: salsa20
    Name: env
  - CmdLine:
    - echo 'deb http://archive.ubuntu.com/ubuntu yakkety main universe' > /etc/apt/sources.list       &&
      apt-get update -qq       && apt-get install -qqy shadowsocks-libev       &&
      ln -s ${ACROSSFW_HOME}/service/shadowsocks /service/shadowsocks             &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT_KCPTUN
      Value: "10554"
    Name: env
  - Name: expose
    Ports:
    - ${PORT_KCPTUN}/udp
  - Env:
    - Key: KCPTUN_CRYPT
      Value: salsa20
    Name: env
  - Env:
    - Key: KCPTUN_DATASHARD
      Value: "0"
    Name: env
  - Env:
    - Key: KCPTUN_PARITYSHARD
      Value: "0"
    Name: env
  - Env:
    - Key: KCPTUN_MODE
      Value: fast
    Name: env
  - Env:
    - Key: KCPTUN_MTU
      Value: "1350"
    Name: env
  - Env:
    - Key: KCPTUN_NOCOMP
      Value: "1"
    Name: env
  - Env:
    - Key: KCPTUN_RCVWND
      Value: "1024"
    Name: env
  - Env:
    - Key: KCPTUN_SNDWND
      Value: "1024"
    Name: env
  - CmdLine:
    - URL=$(curl -s https://api.github.com/repos/xtaci/kcptun/releases/latest | jq
      -r '.assets[] | select(.name | contains("linux-amd64")) .browser_download_url')       &&
      wget --quiet -O /tmp/kcptun.tgz "$URL"       && [ -e "${ACROSSFW_HOME}/service/kcptun/bin/"
      ] || mkdir -p ${ACROSSFW_HOME}/service/kcptun/bin/       && tar zxvf /tmp/kcptun.tgz
      -C ${ACROSSFW_HOME}/service/kcptun/bin/       && ln -s ${ACROSSFW_HOME}/service/kcptun
      /service/kcptun       && rm -f /tmp/kcptun.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT_OPENVPN
      Value: "11194"
    Name: env
  - Name: expose
    Ports:
    - ${PORT_OPENVPN}/tcp
    - ${PORT_OPENVPN}/udp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - cat /dev/null                                      > ${ACROSSFW_HOME}/ENV.build   &&
      echo "BUILD_HOST=\"$(hostname -f)\""             >> ${ACROSSFW_HOME}/ENV.build   &&
      echo "BUILD_IP=\"$(curl -Ss ifconfig.io)\""      >> ${ACROSSFW_HOME}/ENV.build   &&
      echo "BUILD_DATE=\"$(date)\""                    >> ${ACROSSFW_HOME}/ENV.build   &&
      echo "VERSION_HASH=\"$(./bin/version.sh hash)\"" >> ${ACROSSFW_HOME}/ENV.build
    Name: run
    PrependShell: true
  - CmdLine:
    - ./bin/entrypoint.sh test
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: phusion/baseimage:0.9.19
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.9.19
