{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "perl:5.20",
      "SourceCode": "FROM perl:5.20",
      "Platform": "",
      "From": {
        "Image": "perl:5.20"
      },
      "Commands": [
        {
          "Maintainer": "= Daniel Gempesaw \u003cgempesaw@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/selenium \u0026\u0026     wget --no-verbose https://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.0.jar          -O /opt/selenium/selenium-server-standalone.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026     echo 'deb http://httpredir.debian.org/debian testing main' \u003e\u003e /etc/apt/sources.list \u0026\u0026     apt-get install -y     ca-certificates     curl     hicolor-icon-theme     libgl1-mesa-dri     libgl1-mesa-glx     libv4l-0     --no-install-recommends     \u0026\u0026 curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y     google-chrome-stable     --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y unzip \u0026\u0026     wget -N http://chromedriver.storage.googleapis.com/2.21/chromedriver_linux64.zip -P ~/Downloads \u0026\u0026     unzip ~/Downloads/chromedriver_linux64.zip -d ~/Downloads \u0026\u0026     chmod +x ~/Downloads/chromedriver \u0026\u0026     mv -f ~/Downloads/chromedriver /usr/local/bin/chromedriver \u0026\u0026     rm ~/Downloads/chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpcsclite1 \u0026\u0026     apt-get install -y iceweasel \u0026\u0026     apt-get install -y openjdk-7-jre \u0026\u0026     apt-get install -y xvfb \u0026\u0026     apt-get install -y phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026     git config --global user.name \"docker\" \u0026\u0026     git config --global user.email \"docker@example.com\" \u0026\u0026     cpanm --notest --quiet Dist::Zilla \u0026\u0026     cpanm --notest --quiet --installdeps Selenium::Remote::Driver \u0026\u0026     mkdir -p /opt/Selenium-Remote-Driver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/Selenium-Remote-Driver"
        },
        {
          "CmdLine": [
            "SHA=05acd53 git clone https://github.com/gempesaw/Selenium-Remote-Driver /opt/Selenium-Remote-Driver \u0026\u0026     dzil authordeps --missing | xargs -n 5 -P 10 cpanm --notest --quiet \u0026\u0026     dzil listdeps   --missing | xargs -n 5 -P 10 cpanm --notest --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/root/start.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/root/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}