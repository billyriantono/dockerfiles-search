{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "janitortechnology/ubuntu-dev",
      "SourceCode": "FROM janitortechnology/ubuntu-dev",
      "Platform": "",
      "From": {
        "Image": "janitortechnology/ubuntu-dev"
      },
      "Commands": [
        {
          "Maintainer": "Michael Howell \"michael@notriddle.com\"",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisord-append.conf",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "sudo add-apt-repository ppa:chris-lea/redis-server \u0026\u0026     sudo add-apt-repository ppa:brightbox/ruby-ng \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get -y install --no-install-recommends ruby2.5 vim expect debconf-utils zlib1g-dev libssl-dev openssl libcurl4-openssl-dev libreadline6-dev libpcre3 libpcre3-dev imagemagick postgresql postgresql-contrib-9.5 libpq-dev postgresql-server-dev-9.5 redis-server advancecomp gifsicle jhead jpegoptim libjpeg-turbo-progs optipng pngcrush pngquant gnupg2 ruby2.5-dev libsqlite3-dev \u0026\u0026     sudo rm -rf /var/lib/apt/lists/* \u0026\u0026     echo 'gem: --no-document' \u003e\u003e /home/user/.gemrc \u0026\u0026     sudo gem install bundler mailcatcher \u0026\u0026     mkdir -p ~/.local/bin/ \u0026\u0026 cd ~/.local/ \u0026\u0026 npm install svgo phantomjs-prebuilt \u0026\u0026 cd ~ \u0026\u0026     ln -s ~/.local/node_modules/svgo/bin/svgo ~/.local/bin/ \u0026\u0026     ln -s ~/.local/node_modules/phantomjs-prebuilt/bin/phantomjs ~/.local/bin/ \u0026\u0026     (cat /tmp/supervisord-append.conf | sudo tee -a /etc/supervisord.conf) \u0026\u0026     sudo rm -f /tmp/supervisord-append.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo mkdir /var/run/postgresql/9.5-main.pg_stat_tmp \u0026\u0026 sudo chown postgres:postgres /var/run/postgresql/9.5-main.pg_stat_tmp \u0026\u0026     (sudo runuser -u postgres -- /usr/lib/postgresql/9.5/bin/postgres -D /etc/postgresql/9.5/main/ 2\u003e\u00261 \u003e /dev/null \u0026) \u0026\u0026     (sudo runuser -u redis -- redis-server /etc/redis/redis.conf 2\u003e\u00261 \u003e /dev/null \u0026) \u0026\u0026     sleep 1 \u0026\u0026     sudo -u postgres createuser --superuser -Upostgres user \u0026\u0026     sudo -u postgres psql -c \"ALTER USER \\\"user\\\" WITH PASSWORD 'password';\" \u0026\u0026     sudo -u postgres psql -c \"UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1'\" \u0026\u0026     sudo -u postgres psql -c \"DROP DATABASE template1\" \u0026\u0026     sudo -u postgres psql -c \"CREATE DATABASE template1 WITH ENCODING = 'UTF8' TEMPLATE template0\" \u0026\u0026     sudo -u postgres psql -c \"UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1'\" \u0026\u0026     sudo sed -i 's:daemonize yes:daemonize no:' /etc/redis/redis.conf \u0026\u0026     git clone https://github.com/discourse/discourse /home/user/discourse \u0026\u0026     cd /home/user/discourse \u0026\u0026     bundle install \u0026\u0026     bundle exec rake db:create db:migrate \u0026\u0026     RAILS_ENV=test bundle exec rake db:create db:migrate \u0026\u0026     sudo gem install discourse_theme"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/user/discourse"
        },
        {
          "Env": [
            {
              "Key": "WORKSPACE",
              "Value": "/home/user/discourse/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "janitor.json",
            "/home/user/"
          ]
        },
        {
          "CmdLine": [
            "sudo chown user:user /home/user/janitor.json"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}