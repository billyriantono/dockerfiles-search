{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Yurii Furko furkoyuriy@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.4.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xenial.sources.list",
            "/etc/apt/sources.list"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends -y             software-properties-common             apt-utils             build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y             libffi-dev             libssl-dev             libffi-dev             libssl-dev             python-dev             python-yaml             python-pip             python3-dev             python3-yaml             python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade cryptography                           setuptools                           paramiko                           pyOpenSSL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install ansible==${ANSIBLE_VERSION} ansible-lint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -Rf /var/lib/apt/lists/* \u0026\u0026     rm -Rf /usr/share/doc \u0026\u0026     rm -Rf /usr/share/man \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m ansible -s /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/ansible/.ssh \u0026\u0026     touch /home/ansible/.ssh/authorized_keys \u0026\u0026     chmod 700 /home/ansible/.ssh \u0026\u0026     chmod 600 /home/ansible/.ssh/authorized_keys \u0026\u0026    chown -R ansible:ansible /home/ansible/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/ansible \u0026\u0026     echo \"[local]\\nlocalhost ansible_connection=local\" \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup",
            "/etc/ansible"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/ansible"
        },
        {
          "CmdLine": [
            "ansible-playbook",
            "--version"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}