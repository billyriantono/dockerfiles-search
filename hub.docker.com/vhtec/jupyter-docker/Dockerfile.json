{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/tensorflow-notebook",
      "SourceCode": "FROM jupyter/tensorflow-notebook",
      "Platform": "",
      "From": {
        "Image": "jupyter/tensorflow-notebook"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends     php-cli php-dev php-pear     pkg-config     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/zeromq/zeromq4-1/releases/download/v4.1.5/zeromq-4.1.5.tar.gz \u0026\u0026     tar -xvf zeromq-4.1.5.tar.gz \u0026\u0026     cd zeromq-* \u0026\u0026     ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     printf \"\\n\" | pecl install zmq-beta \u0026\u0026     echo \"extension=zmq.so\" \u003e /etc/php/7.0/cli/conf.d/zmq.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://getcomposer.org/installer -O composer-setup.php \u0026\u0026     wget https://litipk.github.io/Jupyter-PHP-Installer/dist/jupyter-php-installer.phar \u0026\u0026     php composer-setup.php \u0026\u0026     php ./jupyter-php-installer.phar -vvv install \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     rm -rf zeromq-* jupyter-php* \u0026\u0026     rm composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yq --no-install-recommends nodejs-legacy npm libzmq3-dev \u0026\u0026     npm install -g ijavascript \u0026\u0026     ijs --ijs-install=global"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd .. \u0026\u0026     wget https://root.cern.ch/download/cling/cling_2017-09-15_ubuntu16.tar.bz2 \u0026\u0026     tar -xvjf cling_2017-09-15_ubuntu16.tar.bz2 \u0026\u0026     rm cling_*.tar.bz2 \u0026\u0026     mv cling_* cling"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd .. \u0026\u0026     ln -s $(pwd)/cling/bin/* /usr/bin/ \u0026\u0026     cd cling/share/cling/Jupyter/kernel \u0026\u0026     pip install -e . \u0026\u0026     jupyter-kernelspec install cling-cpp17 \u0026\u0026     jupyter-kernelspec install cling-cpp14 \u0026\u0026     jupyter-kernelspec install cling-cpp11"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R $NB_USER /home/$NB_USER \u0026\u0026     rm -rf /home/$NB_USER/.local/share/jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yq openjdk-8-jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "/opt/conda/bin/pip install --no-cache-dir bash_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/conda/bin/python -m bash_kernel.install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/conda/bin/pip install --no-cache-dir --upgrade h2o \u0026\u0026     /opt/conda/bin/pip install --no-cache-dir --upgrade pandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p .jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.token = ''\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}