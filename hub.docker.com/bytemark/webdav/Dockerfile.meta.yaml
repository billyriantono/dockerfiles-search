MetaArgs: null
Stages:
- BaseName: httpd:alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/
    - conf/
  - CmdLine:
    - set -ex;     mkdir -p "/var/www/html";     mkdir -p "/var/lib/dav/data";     touch
      "/var/lib/dav/DavLock";     chown -R www-data:www-data "/var/lib/dav";         for
      i in dav dav_fs; do         sed -i -e "/^#LoadModule ${i}_module.*/s/^#//" "conf/httpd.conf";     done;         for
      i in authn_core authn_file authz_core authz_user auth_basic auth_digest; do         sed
      -i -e "/^#LoadModule ${i}_module.*/s/^#//" "conf/httpd.conf";     done;         for
      i in alias headers mime setenvif; do         sed -i -e "/^#LoadModule ${i}_module.*/s/^#//"
      "conf/httpd.conf";     done;         for i in User Group; do         sed -i
      -e "s|^$i .*|$i www-data|" "conf/httpd.conf";     done;         printf '%s\n'
      "Include conf/conf-enabled/*.conf"         >> "conf/httpd.conf";     printf
      '%s\n' "Include conf/sites-enabled/*.conf"         >> "conf/httpd.conf";         mkdir
      -p "conf/conf-enabled";     mkdir -p "conf/sites-enabled";     ln -s ../conf-available/dav.conf
      "conf/conf-enabled";     ln -s ../sites-available/default.conf "conf/sites-enabled";     apk
      add --no-cache openssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Name: expose
    Ports:
    - 443/tcp
    - 80/tcp
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - httpd-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: httpd:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM httpd:alpine
