MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk update     && apk add gcc tar libtool zlib jemalloc jemalloc-dev perl     make
      musl-dev openssl-dev pcre-dev g++ zlib-dev curl python     perl-test-longstring
      perl-list-moreutils perl-http-message geoip-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENRESTY_VERSION
      Value: 1.9.7.3
    - Key: NAXSI_VERSION
      Value: 0.53-2
    - Key: PCRE_VERSION
      Value: "8.37"
    - Key: TEST_NGINX_VERSION
      Value: "0.24"
    - Key: _prefix
      Value: /usr/local
    - Key: _exec_prefix
      Value: /usr/local
    - Key: _localstatedir
      Value: /var
    - Key: _sysconfdir
      Value: /etc
    - Key: _sbindir
      Value: /usr/local/sbin
    Name: env
  - CmdLine:
    - echo " ... adding Openresty, NGINX, NAXSI and PCRE"      && mkdir -p /tmp/api-gateway      &&
      readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1)      &&
      echo "using up to $NPROC threads"      && cd /tmp/api-gateway/      && curl
      -k -L https://github.com/nbs-system/naxsi/archive/${NAXSI_VERSION}.tar.gz -o
      /tmp/api-gateway/naxsi-${NAXSI_VERSION}.tar.gz      && curl -k -L http://downloads.sourceforge.net/project/pcre/pcre/${PCRE_VERSION}/pcre-${PCRE_VERSION}.tar.gz
      -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz      && curl -k -L https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz
      -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz      && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz      &&
      tar -zxf ./pcre-${PCRE_VERSION}.tar.gz      && tar -zxf ./naxsi-${NAXSI_VERSION}.tar.gz      &&
      cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION}      && echo "        - building
      debugging version of the api-gateway ... "      && ./configure             --prefix=${_exec_prefix}/api-gateway             --sbin-path=${_sbindir}/api-gateway-debug             --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf             --error-log-path=${_localstatedir}/log/api-gateway/error.log             --http-log-path=${_localstatedir}/log/api-gateway/access.log             --pid-path=${_localstatedir}/run/api-gateway.pid             --lock-path=${_localstatedir}/run/api-gateway.lock             --add-module=../naxsi-${NAXSI_VERSION}/naxsi_src/             --with-pcre=../pcre-${PCRE_VERSION}/
      --with-pcre-jit             --with-stream             --with-stream_ssl_module             --with-http_ssl_module             --with-http_stub_status_module             --with-http_realip_module             --with-http_addition_module             --with-http_sub_module             --with-http_dav_module             --with-http_geoip_module             --with-http_gunzip_module              --with-http_gzip_static_module             --with-http_auth_request_module             --with-http_random_index_module             --with-http_secure_link_module             --with-http_degradation_module             --with-http_auth_request_module              --with-http_v2_module             --with-luajit             --without-http_ssi_module             --without-http_userid_module             --without-http_uwsgi_module             --without-http_scgi_module             --with-debug             -j${NPROC}     &&
      make -j${NPROC}     && make install     && echo "        - building regular
      version of the api-gateway ... "     && ./configure             --prefix=${_exec_prefix}/api-gateway             --sbin-path=${_sbindir}/api-gateway             --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf             --error-log-path=${_localstatedir}/log/api-gateway/error.log             --http-log-path=${_localstatedir}/log/api-gateway/access.log             --pid-path=${_localstatedir}/run/api-gateway.pid             --lock-path=${_localstatedir}/run/api-gateway.lock             --add-module=../naxsi-${NAXSI_VERSION}/naxsi_src/             --with-pcre=../pcre-${PCRE_VERSION}/
      --with-pcre-jit             --with-stream             --with-stream_ssl_module             --with-http_ssl_module             --with-http_stub_status_module             --with-http_realip_module             --with-http_addition_module             --with-http_sub_module             --with-http_dav_module             --with-http_geoip_module             --with-http_gunzip_module              --with-http_gzip_static_module             --with-http_auth_request_module             --with-http_random_index_module             --with-http_secure_link_module             --with-http_degradation_module             --with-http_auth_request_module              --with-http_v2_module             --with-luajit             --without-http_ssi_module             --without-http_userid_module             --without-http_uwsgi_module             --without-http_scgi_module             -j${NPROC}     &&
      make -j${NPROC}     && make install     && echo "        - adding Nginx Test
      support"     && curl -k -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz
      -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz     && cd ${_prefix}     &&
      tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz     && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz     &&
      cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/     &&
      ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx     && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install
      ${_prefix}/api-gateway/bin/resty-install     && apk del g++ gcc make     &&
      rm -rf /var/cache/apk/*     && rm -rf /tmp/api-gateway
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_RESTY_HTTP_VERSION
      Value: "0.07"
    Name: env
  - CmdLine:
    - echo " ... installing lua-resty-http..."     && apk update     && apk add make     &&
      mkdir -p /tmp/api-gateway     && curl -k -L https://github.com/pintsized/lua-resty-http/archive/v${LUA_RESTY_HTTP_VERSION}.tar.gz
      -o /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz     && tar
      -xf /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz -C /tmp/api-gateway/     &&
      cd /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}     && make install             LUA_LIB_DIR=${_prefix}/api-gateway/lualib             INSTALL=${_prefix}/api-gateway/bin/resty-install     &&
      rm -rf /tmp/api-gateway
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_RESTY_IPUTILS_VERSION
      Value: 0.2.0
    Name: env
  - CmdLine:
    - echo " ... installing lua-resty-iputils..."     && apk update     && apk add
      make     && mkdir -p /tmp/api-gateway     && curl -k -L https://github.com/hamishforbes/lua-resty-iputils/archive/v${LUA_RESTY_IPUTILS_VERSION}.tar.gz
      -o /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz     &&
      tar -xf /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz
      -C /tmp/api-gateway/     && cd /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}     &&
      export LUA_LIB_DIR=${_prefix}/api-gateway/lualib     && export INSTALL=${_prefix}/api-gateway/bin/resty-install     &&
      $INSTALL -d ${LUA_LIB_DIR}/resty     && $INSTALL lib/resty/*.lua ${LUA_LIB_DIR}/resty/     &&
      rm -rf /tmp/api-gateway
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_RESTY_STRING_VERSION
      Value: "0.09"
    Name: env
  - CmdLine:
    - echo " ... installing lua-resty-string..."     && apk update     && apk add
      make     && mkdir -p /tmp/api-gateway     && curl -k -L https://github.com/openresty/lua-resty-string/archive/v${LUA_RESTY_STRING_VERSION}.tar.gz
      -o /tmp/api-gateway/lua-resty-string-${LUA_RESTY_STRING_VERSION}.tar.gz     &&
      tar -xf /tmp/api-gateway/lua-resty-string-${LUA_RESTY_STRING_VERSION}.tar.gz
      -C /tmp/api-gateway/     && cd /tmp/api-gateway/lua-resty-string-${LUA_RESTY_STRING_VERSION}     &&
      make install             LUA_LIB_DIR=${_prefix}/api-gateway/lualib             INSTALL=${_prefix}/api-gateway/bin/resty-install     &&
      rm -rf /tmp/api-gateway
    Name: run
    PrependShell: true
  - Env:
    - Key: NETURL_LUA_VERSION
      Value: 0.9-1
    Name: env
  - CmdLine:
    - echo " ... installing neturl.lua ... "     && mkdir -p /tmp/api-gateway     &&
      curl -k -L https://github.com/golgote/neturl/archive/${NETURL_LUA_VERSION}.tar.gz
      -o /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz     && tar -xf /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz
      -C /tmp/api-gateway/     && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib     &&
      cd /tmp/api-gateway/neturl-${NETURL_LUA_VERSION}     && cp lib/net/url.lua ${LUA_LIB_DIR}     &&
      rm -rf /tmp/api-gateway
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -k -s -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64     &&
      apk update     && apk add gawk     && chmod 755 /usr/local/bin/jq     && rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sh
    - /etc/init-container.sh
  - Expression: COPY init.sh /etc/init-container.sh
    Name: onbuild
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /etc/api-gateway
  - CmdLine:
    - adduser -S nginx-api-gateway     && addgroup -S nginx-api-gateway
    Name: run
    PrependShell: true
  - Expression: COPY . /etc/api-gateway
    Name: onbuild
  - Name: expose
    Ports:
    - "80"
    - "8080"
    - "8423"
    - "9000"
  - CmdLine:
    - /etc/init-container.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
