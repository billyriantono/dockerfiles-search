{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "qemu",
      "BaseName": "multiarch/qemu-user-static",
      "SourceCode": "FROM multiarch/qemu-user-static as qemu",
      "Platform": "",
      "As": "qemu",
      "From": {
        "Image": "multiarch/qemu-user-static"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "arm64v8/nginx:mainline-alpine",
      "SourceCode": "FROM arm64v8/nginx:mainline-alpine",
      "Platform": "",
      "From": {
        "Image": "arm64v8/nginx:mainline-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Christian Haschek \u003coffice@haschek-solutions.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "S6_VERSION",
              "Value": "v1.22.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "qemu",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/qemu-aarch64-static",
            "/usr/bin"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk upgrade -U     \u0026\u0026 apk --update         add         openssl         nano         ffmpeg         file         unzip         bash         curl         php7         php7-pdo         php7-exif         php7-mcrypt         php7-curl         php7-gd         php7-json         php7-fpm         php7-openssl         php7-ctype         php7-opcache         php7-mbstring         php7-session         php7-fileinfo         php7-pcntl     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c 'set -ex \u0026\u0026     ARCH=\"$(uname -m)\" \u0026\u0026     case \"${ARCH##*-}\" in         x86_64) S6_PLATFORM=\"amd64\" ;;         armv7l) S6_PLATFORM=\"armhf\" ;;         armv6) S6_PLATFORM=\"armhf\" ;;         arm) S6_PLATFORM=\"arm\" ;;         aarch64) S6_PLATFORM=\"aarch64\" ;;        i386) S6_PLATFORM=\"x86\" ;;        *) echo \u003e\u00262 \"unsupported architecture: ${ARCH}\"; exit 1 ;;     esac;     curl -L -s https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-${S6_PLATFORM}.tar.gz   | tar xvzf - -C / '"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 rm /usr/bin/php     \u0026\u0026 ln -s /etc/php7 /etc/php     \u0026\u0026 ln -s /usr/bin/php7 /usr/bin/php     \u0026\u0026 ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm     \u0026\u0026 ln -s /usr/lib/php7 /usr/lib/php     \u0026\u0026 mkdir -p /var/log/php-fpm     \u0026\u0026 ln -s /dev/stderr /var/log/php-fpm/fpm-error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir -p /var/lib/php7/sessions     \u0026\u0026 chown nginx:nginx /var/lib/php7/sessions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir -p /usr/share/nginx/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/nginx/html"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 curl --silent --remote-name https://codeload.github.com/HaschekSolutions/pictshare/zip/master     \u0026\u0026 unzip -q master     \u0026\u0026 mv pictshare-master/* .     \u0026\u0026 rm -r master pictshare-master     \u0026\u0026 mv inc/example.config.inc.php inc/config.inc.php     \u0026\u0026 chown -R nginx:nginx /usr/share/nginx/html     \u0026\u0026 chmod +x bin/ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/nginx/html/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "bash",
            "/pictshare.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}