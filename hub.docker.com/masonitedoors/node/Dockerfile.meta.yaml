MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Masonite <webteam@masonite.com>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"Cutting-edge Node stack for Masonite, based on Ubuntu 16.04 LTS. Includes
        Node and MariaDB."'
    - Key: License
      Value: '"Apache License 2.0"'
    - Key: Usage
      Value: '"docker run -d -p [HOST WWW PORT NUMBER]:80 -p [HOST DB PORT NUMBER]:3306
        -v [HOST WWW DOCUMENT ROOT]:/opt -v [HOST DB DOCUMENT ROOT]:/var/lib/mysql
        masonitedoors/lamp"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - debconf.selections
    - /tmp/
  - CmdLine:
    - debconf-set-selections /tmp/debconf.selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -qq systemd apt-utils software-properties-common build-essential
      language-pack-en gcc g++ make
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zip unzip tzdata sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nginx -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install mariadb-common mariadb-server mariadb-client -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install postfix -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install git htop nano tree curl -y
    Name: run
    PrependShell: true
  - Env:
    - Key: LOG_STDOUT
      Value: '**Boolean**'
    Name: env
  - Env:
    - Key: LOG_STDERR
      Value: '**Boolean**'
    Name: env
  - Env:
    - Key: LOG_LEVEL
      Value: warn
    Name: env
  - Env:
    - Key: DATE_TIMEZONE
      Value: UTC
    Name: env
  - Env:
    - Key: TERM
      Value: dumb
    Name: env
  - CmdLine:
    - pass=$(perl -e 'print crypt($ARGV[0], "password")' 'node'); useradd -m -p $pass
      node
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install pm2@latest -g
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/app
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/logs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - helloworld/app.js
    - /opt/app/app.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - helloworld/package.json
    - /opt/app/package.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run-node.sh
    - /usr/sbin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mysql_defaults.sql
    - /root/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - chmod +x /usr/sbin/run-node.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R node:node /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 775 /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - pm2 startup
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt
  - Name: volume
    Volumes:
    - /var/log/nginx
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Name: volume
    Volumes:
    - /var/log/mysql
  - Name: volume
    Volumes:
    - /etc/nginx
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "3306"
  - CmdLine:
    - /usr/sbin/run-node.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
