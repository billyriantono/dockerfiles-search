MetaArgs: null
Stages:
- BaseName: openjdk:8-jre-alpine
  Commands:
  - CmdLine:
    - apk update     && apk upgrade     && apk add --update --no-cache --quiet lsof
      net-tools wget bash curl     && mkdir /data
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -ex; \t\tapk add --no-cache --virtual .gosu-deps \t\tdpkg \t\tgnupg \t\topenssl
      \t; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\";
      \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --keyserver ipv4.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc;
      \t\tchmod +x /usr/local/bin/gosu; \tgosu nobody true; \t\tapk del .gosu-deps"
    Name: run
    PrependShell: true
  - Env:
    - Key: NEO4J_VERSION
      Value: 3.1.5
    Name: env
  - Env:
    - Key: NEO4J_EDITION
      Value: community
    Name: env
  - Env:
    - Key: NEO4J_SHA256
      Value: d38fe7449570dba1f1f69c8582a008b4c7d1368bee13eecbe2315a807b204908
    Name: env
  - Env:
    - Key: NEO4J_DOWNLOAD_ROOT
      Value: http://dist.neo4j.org
    Name: env
  - Env:
    - Key: NEO4J_TARBALL
      Value: neo4j-$NEO4J_EDITION-$NEO4J_VERSION-unix.tar.gz
    Name: env
  - Env:
    - Key: NEO4J_URI
      Value: $NEO4J_DOWNLOAD_ROOT/$NEO4J_TARBALL
    Name: env
  - Env:
    - Key: NEO4J_AUTH
      Value: none
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: API_KEY
      Value: none
    - Key: DEBUG
      Value: "false"
    - Key: PROXY_PREFIX
      Value: none
    - Key: GALAXY_URL
      Value: none
    - Key: GALAXY_WEB_PORT
      Value: "10000"
    - Key: HISTORY_ID
      Value: none
    - Key: REMOTE_HOST
      Value: none
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - curl --fail --show-error --location --output ${NEO4J_TARBALL} ${NEO4J_URI}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${NEO4J_SHA256}  ${NEO4J_TARBALL}" | sha256sum -csw -
    Name: run
    PrependShell: true
  - CmdLine:
    - tar --extract --file ${NEO4J_TARBALL} --directory .     && mv neo4j-$NEO4J_EDITION-$NEO4J_VERSION
      neo4j     && rm ${NEO4J_TARBALL}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /import
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /opt/neo4j
  - Env:
    - Key: NEO4J_dbms_allowFormatMigration
      Value: "true"
    - Key: NEO4J_dbms_unmanaged__extension__classes
      Value: '''extension.web=/guides'''
    - Key: NEO4J_org_neo4j_server_guide_directory
      Value: '''data/guides'''
    - Key: NEO4J_dbms_security_procedures_unrestricted
      Value: '''apoc.\\\*'''
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins/apoc-3.1.3.7-all.jar
    - plugins/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_neo4j.sh
    - /run_neo4j.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - set_neo4j_settings.sh
    - /set_neo4j_settings.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - monitor_traffic.sh
    - /monitor_traffic.sh
  - Name: expose
    Ports:
    - "7474"
    - "7687"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - neo4j
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jre-alpine
