{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "node",
      "BaseName": "node:9.3",
      "SourceCode": "FROM node:9.3 as node",
      "Platform": "",
      "As": "node",
      "From": {
        "Image": "node:9.3"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Maintainer": "Damien PIQUET \u003cdpiquet@teicee.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "node",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/node",
            "/usr/local/bin/node"
          ]
        },
        {
          "Chown": "",
          "From": "node",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/yarn",
            "/opt/yarn"
          ]
        },
        {
          "Chown": "",
          "From": "node",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/node_modules",
            "/usr/local/lib/node_modules"
          ]
        },
        {
          "Chown": "",
          "From": "node",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "000-default.conf",
            "/etc/apache2/sites-available/000-default.conf"
          ]
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y git subversion openssh-client coreutils unzip libpq-dev nano     \u0026\u0026 apt-get install -y autoconf build-essential libpq-dev binutils-gold libgcc1 linux-headers-amd64 make python libpng-dev libjpeg-dev libc-dev libfreetype6-dev libmcrypt-dev libicu-dev sqlite3-pcre libxml2-dev     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 pecl install xdebug-2.6.0     \u0026\u0026 pecl list-files xdebug |grep src |cut -d ' ' -f 3 \u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv mbstring intl pdo_pgsql pdo_mysql gd zip bcmath soap sockets opcache     \u0026\u0026 sed -r 's/^(.{1,})/#\\1/' \u003c /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini.new     \u0026\u0026 mv /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini.new /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini     \u0026\u0026 docker-php-source delete     \u0026\u0026 echo \"Installing composer\"     \u0026\u0026 php -r \"readfile('https://getcomposer.org/installer');\" | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 chmod +x /usr/local/bin/composer     \u0026\u0026 npm install -g @symfony/webpack-encore     \u0026\u0026 a2enmod rewrite headers expires    \u0026\u0026 apt-get remove -y autoconf gcc g++ libpq-dev linux-headers-amd64 make libmcrypt-dev libicu-dev libpq-dev libxml2-dev build-essential     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}