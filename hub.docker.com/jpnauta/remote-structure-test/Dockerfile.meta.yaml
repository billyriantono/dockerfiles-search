MetaArgs: null
Stages:
- As: build
  BaseName: golang:latest
  Commands:
  - CmdLine:
    - apt-get update && apt-get install make
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/golang/dep/cmd/dep
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/jpnauta/remote-structure-test
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Gopkg.*
    - ./
  - CmdLine:
    - dep ensure --vendor-only
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cmd/
    - cmd/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pkg/
    - pkg/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Makefile
    - .
  - CmdLine:
    - make cross &&     ln -s /go/src/github.com/jpnauta/remote-structure-test/out/remote-structure-test-linux-amd64
      /usr/bin/remote-structure-test
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/scripts/run-unit-tests.sh
    - /
  - CmdLine:
    - chmod +x /run-unit-tests.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - tests/
    - tests/
  From:
    Image: golang:latest
  Name: build
  Platform: ""
  SourceCode: FROM golang:latest as build
- As: runtime
  BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/bin/remote-structure-test
    - /usr/bin/remote-structure-test
  - CmdLine:
    - remote-structure-test
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: runtime
  Platform: ""
  SourceCode: FROM alpine:latest as runtime
