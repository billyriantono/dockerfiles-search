{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:3.2",
      "SourceCode": "FROM gliderlabs/alpine:3.2",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:3.2"
      },
      "Commands": [
        {
          "Maintainer": "Jan Boonen \u003cjan.boonen@geodan.nl\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_VERSION",
              "Value": "2.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEOS_VERSION",
              "Value": "3.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROJ4_VERSION",
              "Value": "4.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GDAL_VERSION",
              "Value": "2.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_SHARD_VERSION",
              "Value": "1.2.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026   apk add curl libxml2 json-c libxml2-dev json-c-dev alpine-sdk autoconf automake libtool     \"postgresql@edge\u003c9.5\" \"postgresql-contrib@edge\u003c9.5\" \"postgresql-dev@edge\u003c9.5\" \u0026\u0026   curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \u0026\u0026   chmod +x /usr/local/bin/gosu \u0026\u0026   mkdir -p /tmp/build \u0026\u0026 cd /tmp/build \u0026\u0026   curl -o postgis-${POSTGIS_VERSION}.tar.gz -sSL http://download.osgeo.org/postgis/source/postgis-${POSTGIS_VERSION}.tar.gz \u0026\u0026   curl -o geos-${GEOS_VERSION}.tar.gz -sSL https://github.com/libgeos/libgeos/archive/${GEOS_VERSION}.tar.gz \u0026\u0026   curl -o proj4-${PROJ4_VERSION}.tar.gz -sSL https://github.com/OSGeo/proj.4/archive/${PROJ4_VERSION}.tar.gz \u0026\u0026   curl -o gdal-${GDAL_VERSION}.tar.gz -sSL http://download.osgeo.org/gdal/2.0.1/gdal-${GDAL_VERSION}.tar.gz \u0026\u0026   curl -o pg_shard-${PG_SHARD_VERSION}.tar.gz -sSL https://github.com/citusdata/pg_shard/archive/v${PG_SHARD_VERSION}.tar.gz \u0026\u0026   export PATH=/usr/local/pgsql/bin/:$PATH \u0026\u0026   tar xzf proj4-${PROJ4_VERSION}.tar.gz \u0026\u0026   tar xzf geos-${GEOS_VERSION}.tar.gz \u0026\u0026   tar xzf gdal-${GDAL_VERSION}.tar.gz \u0026\u0026   tar xzf postgis-${POSTGIS_VERSION}.tar.gz \u0026\u0026   tar xzf pg_shard-${PG_SHARD_VERSION}.tar.gz \u0026\u0026   cd proj.4* \u0026\u0026 ./configure --enable-silent-rules \u0026\u0026 make -s \u0026\u0026 make -s install \u0026\u0026   cd ../libgeos* \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure --enable-silent-rules CFLAGS=\"-D__sun -D__GNUC__\"  CXXFLAGS=\"-D__GNUC___ -D__sun\" \u0026\u0026 make -s \u0026\u0026 make -s install \u0026\u0026   cd ../gdal* \u0026\u0026 ./configure --enable-silent-rules --with-static-proj4=/usr/local/lib \u0026\u0026 make -s \u0026\u0026 make -s install \u0026\u0026   cd ../postgis* \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure --enable-silent-rules --with-projdir=/usr/local \u0026\u0026     echo \"PERL = /usr/bin/perl\" \u003e\u003e extensions/postgis/Makefile \u0026\u0026     echo \"PERL = /usr/bin/perl\" \u003e\u003e extensions/postgis_topology/Makefile \u0026\u0026 make -s \u0026\u0026 make -s install \u0026\u0026   cd ../pg_shard* \u0026\u0026     make -s PG_CPPFLAGS=\"--std=c99 -Wall -Wextra -Wno-error -Wno-unused-parameter -Iinclude -I/usr/include -Itest/include -I. -I./ -I/usr/include/postgresql/server -I/usr/include/postgresql/internal\" \u0026\u0026     make -s install \u0026\u0026   apk del curl libxml2-dev json-c-dev alpine-sdk autoconf automake libtool git postgresql-dev --force \u0026\u0026   rm -rf /var/cache/apk/* \u0026\u0026   rm -rf /tmp/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$PGDATA"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}