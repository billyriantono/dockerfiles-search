MetaArgs: null
Stages:
- BaseName: php:7.1-apache
  Commands:
  - Env:
    - Key: KOHANA_ENV
      Value: '""'
    Name: env
  - Env:
    - Key: APPLICATION_ENV
      Value: production
    Name: env
  - Env:
    - Key: KOSEVEN_TIME_ZONE
      Value: '"America/New_York"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install -y locales   && dpkg-reconfigure locales   &&
      locale-gen C.UTF-8   && /usr/sbin/update-locale LANG=C.UTF-8   && echo 'en_US.UTF-8
      UTF-8' >> /etc/locale.gen   && locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - sed -i 's/docker-php-\(ext-$ext.ini\)/\1/' /usr/local/bin/docker-php-ext-install
    Name: run
    PrependShell: true
  - CmdLine:
    - pear config-set php_ini /usr/local/etc/php/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl config-set php_ini /usr/local/etc/php/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y     libfreetype6     libjpeg62-turbo     libmcrypt4     libpng12-0     sendmail     curl     git     subversion     unzip     wget     mysql-client     --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y   libfreetype6-dev   libjpeg62-turbo-dev   libjpeg-dev   libldap2-dev   libpng12-dev   libmcrypt-dev   libpng12-dev   zlib1g-dev   libbz2-dev   libxslt-dev   libmemcached-dev   libcurl4-openssl-dev   --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install libldap2-dev -y &&     rm -rf /var/lib/apt/lists/*
      &&     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ &&     docker-php-ext-install
      ldap
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd       --enable-gd-native-ttf       --with-jpeg-dir=/usr/lib/x86_64-linux-gnu       --with-png-dir=/usr/lib/x86_64-linux-gnu       --with-freetype-dir=/usr/lib/x86_64-linux-gnu   &&
      docker-php-ext-install gd   && docker-php-ext-install curl   && docker-php-ext-install
      mysqli   && docker-php-ext-install mcrypt   && docker-php-ext-install pdo   &&
      docker-php-ext-install pdo_mysql   && docker-php-ext-install soap   && docker-php-ext-install
      opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         libmemcached11         libmemcachedutil2         libmemcached-dev         libz-dev         git     &&
      cd /root     && git clone -b php7 https://github.com/php-memcached-dev/php-memcached     &&
      cd php-memcached     && phpize     && ./configure     && make     && make install     &&
      cd ..     && rm -rf  php-memcached     && echo extension=memcached.so >> /usr/local/etc/php/conf.d/memcached.ini     &&
      apt-get remove -y build-essential libmemcached-dev libz-dev     && apt-get remove
      -y         libmemcached-dev         libz-dev     && apt-get autoremove -y     &&
      rm -rf /var/lib/apt/lists/*     && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "memory_limit=-1" > $PHP_INI_DIR/conf.d/memory-limit.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_TIMEZONE
      Value: $KOSEVEN_TIME_ZONE
    Name: env
  - CmdLine:
    - echo "date.timezone=${PHP_TIMEZONE}" > $PHP_INI_DIR/conf.d/date_timezone.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer   && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.1.2
    Name: env
  - CmdLine:
    - php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer
      --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - composer selfupdate &&     composer require "phpunit/phpunit:5.7.27" --prefer-source
      --no-interaction &&     ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y && apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $KOSEVEN_TIME_ZONE > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cacert.pem
    - /etc/ssl/certs/
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Env:
    - Key: TERM
      Value: '"xterm"'
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y libssl-dev   && rm -rf /var/lib/apt/lists/*   &&
      docker-php-ext-install ftp
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /composer
  - Name: volume
    Volumes:
    - /var/www/uploads
  - Name: volume
    Volumes:
    - /var/log/apache2
  - Name: volume
    Volumes:
    - /var/www/html/application/cache
  - Name: volume
    Volumes:
    - /var/www/html/application/logs
  - Name: volume
    Volumes:
    - /var/www/html/application/tests/logs
  From:
    Image: php:7.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-apache
