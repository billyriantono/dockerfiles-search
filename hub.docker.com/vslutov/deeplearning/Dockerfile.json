{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Vladimir Lutov \u003cvs@lutov.net\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "NB_USER",
              "Value": "\"user\""
            },
            {
              "Key": "PRE_UID",
              "Value": "\"1000\""
            },
            {
              "Key": "PRE_GID",
              "Value": "\"1000\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "home",
            "/home/$NB_USER"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/home/$NB_USER/"
          ]
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -yq dist-upgrade \u0026\u0026     apt-get install -yq git python3-dev python3-pip                         build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev                         libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev                         libxmlsec1-dev libffi-dev                         supervisor htop vim tmux zsh mc trash-cli                         locales sudo wget bzip2 ca-certificates fonts-liberation                         mercurial \u0026\u0026     curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \u0026\u0026     apt-get install -yq git-lfs \u0026\u0026     apt-get clean \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     locale-gen \u0026\u0026     ln -s /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs/libcuda.so /usr/lib/libcuda.so.1  \u0026\u0026     groupadd -g $PRE_GID $NB_USER \u0026\u0026     useradd -s /usr/bin/zsh -N -u $PRE_UID -g $PRE_GID $NB_USER \u0026\u0026     mkdir -p /home/$NB_USER/work /home/$NB_USER/data \u0026\u0026     chown -R $PRE_UID:$PRE_GID /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$PRE_UID"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "$NB_USER"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "SHELL",
              "Value": "/usr/bin/zsh"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/usr/bin/zsh",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh \u0026\u0026     git clone git://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting \u0026\u0026     git clone --recursive git://github.com/joel-porquet/zsh-dircolors-solarized ~/.oh-my-zsh/custom/plugins/zsh-dircolors-solarized \u0026\u0026     git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim \u0026\u0026     git clone git://github.com/altercation/vim-colors-solarized.git ~/.vim/bundle/vim-colors-solarized \u0026\u0026     vim -c 'PluginInstall' -c 'qa!' \u0026\u0026     curl -sL https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | zsh \u0026\u0026     source /home/$NB_USER/.zshrc \u0026\u0026     pyenv install 3.6.8 \u0026\u0026 pyenv virtualenv 3.6.8 deep \u0026\u0026 pyenv global deep \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install -r /home/$NB_USER/requirements.txt \u0026\u0026     git clone https://github.com/NVIDIA/apex.git /home/$NB_USER/apex \u0026\u0026     cd /home/$NB_USER/apex \u0026\u0026 python setup.py install --cuda_ext --cpp_ext \u0026\u0026 cd /home/$NB_USER/ \u0026\u0026     /bin/rm -rf /home/$NB_USER/requirements.txt /home/$NB_USER/apex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6006/tcp",
            "8888/tcp"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER/work"
        },
        {
          "CmdLine": [
            "supervisord -c /etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}