{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "muicoder/glibc:golang",
      "SourceCode": "FROM muicoder/glibc:golang AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "muicoder/glibc:golang"
      },
      "Commands": [
        {
          "Key": "WORK",
          "Name": "arg",
          "Value": "/build"
        },
        {
          "Name": "workdir",
          "Path": "$WORK"
        },
        {
          "Name": "shell",
          "Shell": [
            "bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "go get github.com/b3log/wide            github.com/bradfitz/goimports            github.com/visualfc/gotools            github.com/nsf/gocode \u0026\u0026 \tmv -fv $GOPATH/src/github.com/b3log/wide/{conf,i18n,static,views} $WORK \u0026\u0026 \tmv -fv $GOPATH/bin/{wide,gocode,goimports,gotools} $WORK \u0026\u0026 \trm -rf $GOPATH/{src,bin,pkg}/* $WORK/{conf,i18n}/*.go"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "muicoder/glibc",
      "SourceCode": "FROM muicoder/glibc",
      "Platform": "",
      "From": {
        "Image": "muicoder/glibc"
      },
      "Commands": [
        {
          "Key": "WORK",
          "Name": "arg",
          "Value": "/usr/local/bin"
        },
        {
          "Name": "workdir",
          "Path": "$WORK"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/*",
            "$WORK/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wide",
            "."
          ]
        },
        {
          "CmdLine": [
            "wide",
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}