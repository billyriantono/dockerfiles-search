{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${GOPATH}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_API_VERSION",
              "Value": "1.24"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DOCKER_VERSION",
          "Name": "arg",
          "Value": "${DOCKER_VERSION:-latest}"
        },
        {
          "Key": "CLAIRCTL_VERSION",
          "Name": "arg",
          "Value": "${CLAIRCTL_VERSION:-master}"
        },
        {
          "Key": "CLAIRCTL_COMMIT",
          "Name": "arg",
          "Value": ""
        },
        {
          "CmdLine": [
            "apk add --update curl  \u0026\u0026 apk add --virtual build-dependencies go gcc build-base glide git  \u0026\u0026 adduser clairctl -D  \u0026\u0026 mkdir -p /reports  \u0026\u0026 chown -R clairctl:clairctl /reports /tmp  \u0026\u0026 curl https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz -o docker.tgz  \u0026\u0026 tar xfvz docker.tgz --strip 1 -C /usr/bin/ docker/docker  \u0026\u0026 rm -f docker.tgz  \u0026\u0026 go get -u github.com/jteeuwen/go-bindata/...  \u0026\u0026 curl -sL https://github.com/jgsqware/clairctl/archive/${CLAIRCTL_VERSION}.zip -o clairctl.zip  \u0026\u0026 mkdir -p ${GOPATH}/src/github.com/jgsqware/  \u0026\u0026 unzip clairctl.zip -d ${GOPATH}/src/github.com/jgsqware/  \u0026\u0026 rm -f clairctl.zip  \u0026\u0026 mv ${GOPATH}/src/github.com/jgsqware/clairctl-* ${GOPATH}/src/github.com/jgsqware/clairctl  \u0026\u0026 cd ${GOPATH}/src/github.com/jgsqware/clairctl  \u0026\u0026 glide install -v  \u0026\u0026 go generate ./clair  \u0026\u0026 go build -o /usr/local/bin/clairctl -ldflags \"-X github.com/jgsqware/clairctl/cmd.version=${CLAIRCTL_VERSION}-${CLAIRCTL_COMMIT}\"  \u0026\u0026 apk del build-dependencies  \u0026\u0026 rm -rf /var/cache/apk/*  \u0026\u0026 rm -rf /root/.glide/  \u0026\u0026 rm -rf /go  \u0026\u0026 echo $'clair:\\n  port: 6060\\n  healthPort: 6061\\n  uri: http://clair\\n  priority: Low\\n  report:\\n    path: /reports\\n    format: html\\nclairctl:\\n  port: 44480\\n  tempfolder: /tmp'    \u003e /home/clairctl/clairctl.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "clairctl"
        },
        {
          "Name": "workdir",
          "Path": "/home/clairctl/"
        },
        {
          "Name": "expose",
          "Ports": [
            "44480"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/tmp/",
            "/reports/"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/crond",
            "-f"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}