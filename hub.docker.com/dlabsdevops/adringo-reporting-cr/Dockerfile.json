{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "DOCKERIZE_VERSION",
          "Name": "arg",
          "Value": "\"v0.6.1\""
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "$DOCKERIZE_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y curl apt-transport-https python python-pip \u0026\u0026 apt-get clean \u0026\u0026 apt-get autoclean \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://dist.crystal-lang.org/apt/setup.sh | bash \u0026\u0026 curl -sL \"https://keybase.io/crystal/pgp_keys.asc\" | apt-key add - \u0026\u0026 echo \"deb https://dist.crystal-lang.org/apt crystal main\" | tee /etc/apt/sources.list.d/crystal.list \u0026\u0026 apt-get update \u0026\u0026 apt-get --yes install crystal libssl-dev libxml2-dev libyaml-dev libgmp-dev libreadline-dev \u0026\u0026 apt-get clean \u0026\u0026 apt-get autoclean \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz -o dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026 rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}