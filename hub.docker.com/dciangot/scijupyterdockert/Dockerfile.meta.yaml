MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    - Key: ND_ENTRYPOINT
      Value: '"/neurodocker/startup.sh"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends         apt-utils         build-essential         bzip2         ca-certificates         curl         dirmngr        git         gnupg2         libglib2.0-0         libssl1.0.0        libssl-dev        locales         m4         make         rsync         unzip         wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O- http://neuro.debian.net/lists/bionic.us-ca.full | tee /etc/apt/sources.list.d/neurodebian.sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --recv-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9
      || apt-key adv --recv-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && localedef
      --force --inputfile=en_US --charmap=UTF-8 C.UTF-8     && chmod 777 /opt && chmod
      a+s /opt     && mkdir -p /neurodocker     && if [ ! -f "$ND_ENTRYPOINT" ]; then         echo
      '#!/usr/bin/env bash' >> $ND_ENTRYPOINT         && echo 'set +x' >> $ND_ENTRYPOINT         &&
      echo 'if [ -z "$*" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT;     fi     &&
      chmod -R 777 /neurodocker && chmod a+s /neurodocker
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - curl --retry 5 https://www.humanconnectome.org/storage/app/media/workbench/workbench-linux64-v1.4.1.zip
      --output workbench-linux64-v1.4.1.zip &&   unzip workbench-linux64-v1.4.1.zip
      &&   rm workbench-linux64-v1.4.1.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading ANTs ..."     && curl -sSL --retry 5 https://dl.dropbox.com/s/2f4sui1z6lcgyek/ANTs-Linux-centos5_x86_64-v2.2.0-0740f91.tar.gz     |
      tar zx -C /opt
    Name: run
    PrependShell: true
  - Env:
    - Key: ANTSPATH
      Value: /opt/ants
    - Key: PATH
      Value: /opt/ants:$PATH
    Name: env
  - CmdLine:
    - echo "Downloading C3D ..."     && mkdir /opt/c3d     && curl -sSL --retry 5
      https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download     |
      tar -xzC /opt/c3d --strip-components=1
    Name: run
    PrependShell: true
  - Env:
    - Key: C3DPATH
      Value: /opt/c3d/bin
    - Key: PATH
      Value: /opt/c3d/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -yq --no-install-recommends bc libgomp1
      libxmu6 libxt6 tcsh     && apt-get clean     && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading FreeSurfer ..."     && curl -sSL --retry 5 https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz     |
      tar xz -C /opt     --exclude='freesurfer/average/mult-comp-cor'     --exclude='freesurfer/lib/cuda'     --exclude='freesurfer/lib/qt'     --exclude='freesurfer/subjects/V1_average'     --exclude='freesurfer/subjects/bert'     --exclude='freesurfer/subjects/cvs_avg35'     --exclude='freesurfer/subjects/cvs_avg35_inMNI152'     --exclude='freesurfer/subjects/fsaverage3'     --exclude='freesurfer/subjects/fsaverage4'     --exclude='freesurfer/subjects/fsaverage5'     --exclude='freesurfer/subjects/fsaverage6'     --exclude='freesurfer/subjects/fsaverage_sym'     --exclude='freesurfer/trctrain'     &&
      sed -i '$isource $FREESURFER_HOME/SetUpFreeSurfer.sh' $ND_ENTRYPOINT
    Name: run
    PrependShell: true
  - Env:
    - Key: FREESURFER_HOME
      Value: /opt/freesurfer
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -yq --no-install-recommends bc dc libfontconfig1
      libfreetype6 libgl1-mesa-dev libglu1-mesa-dev libgomp1 libice6 libxcursor1 libxft2
      libxinerama1 libxrandr2 libxrender1 libxt6     && apt-get clean     && rm -rf
      /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading FSL ..."     && curl -sSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz     |
      tar zx -C /opt     && sed -i '$iecho Some packages in this Docker container
      are non-free' $ND_ENTRYPOINT     && sed -i '$iecho If you are considering commercial
      use of this container, please consult the relevant license:' $ND_ENTRYPOINT     &&
      sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT     &&
      sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT
    Name: run
    PrependShell: true
  - Env:
    - Key: FSLDIR
      Value: /opt/fsl
    - Key: FSL_DIR
      Value: /opt/fsl
    - Key: PATH
      Value: /opt/fsl/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir /opt/mcr /opt/mcr_download
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/mcr_download
  - CmdLine:
    - wget http://ssd.mathworks.com/supportfiles/downloads/R2016b/deployment_files/R2016b/installers/glnxa64/MCR_R2016b_glnxa64_installer.zip     &&
      unzip MCR_R2016b_glnxa64_installer.zip     && ./install -agreeToLicense yes
      -mode silent -destinationFolder /opt/mcr     && rm -rf /opt/mcr_download
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/msm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -ksSL --retry 5 https://www.doc.ic.ac.uk/~ecr05/MSM_HOCR_v2/MSM_HOCR_v2-download.tgz
      | tar zx -C /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /opt/homes/ecr05/MSM_HOCR_v2/* /opt/msm/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /opt/homes /opt/msm/MacOSX /opt/msm/Centos
    Name: run
    PrependShell: true
  - Env:
    - Key: MSMBINDIR
      Value: /opt/msm/Ubuntu
    Name: env
  - CmdLine:
    - curl -sSL --retry 5 http://www.cpan.org/src/5.0/perl-5.20.3.tar.gz | tar zx
      -C /opt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/perl-5.20.3
  - CmdLine:
    - ./Configure -des -Dprefix=/usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /usr/bin/perl && ln -s /usr/local/bin/perl /usr/bin/perl
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - rm -rf /opt/perl-5.20.3/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL --retry 5 ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.6.1.tar.gz
      | tar zx -C /opt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/netcdf-4.6.1/
  - CmdLine:
    - LDFLAGS=-L/usr/local/lib && CPPFLAGS=-I/usr/local/include && ./configure --disable-netcdf-4
      --disable-dap --enable-shared --prefix=/usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/lib
  - CmdLine:
    - ln -s libnetcdf.so.13.1.1 libnetcdf.so.6
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /opt/netcdf-4.6.1/
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib:$LD_LIBRARY_PATH
    Name: env
  - CmdLine:
    - ln -s /opt/workbench/bin_linux64/wb_command /opt/workbench/wb_command
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.config /.config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - brainvis.wustl.edu
    - /opt/workbench/brainvis.wustl.edu
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - brainvis.wustl.edu
    - /root/.config/brainvis.wustl.edu
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - brainvis.wustl.edu
    - /.config/brainvis.wustl.edu
  - CmdLine:
    - chmod -R 775 /root/.config /.config
    Name: run
    PrependShell: true
  - Env:
    - Key: WORKBENCHDIR
      Value: /opt/workbench
    - Key: CARET7DIR
      Value: /opt/workbench/bin_linux64
    - Key: CARET7CONFDIR
      Value: /opt/workbench/brainvis.wustl.edu
    Name: env
  - CmdLine:
    - ln -s -f /lib/x86_64-linux-gnu/libz.so.1.2.11 /opt/workbench/libs_linux64/libz.so.1
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.24 /opt/mcr/v91/sys/os/glnxa64/libstdc++.so.6
    Name: run
    PrependShell: true
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
