{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "SÃ©bastien Santoro aka Dereckson \u003cdereckson+nasqueron-docker@espace-win.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.2.25"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "--enable-fpm --with-fpm-user=app --with-fpm-group=app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_BUILD_DEPS",
              "Value": "bzip2 \t\tfile \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibjpeg-dev \t\tlibpng12-dev \t\tlibxpm-dev \t\tlibwebp-dev \t\tlibfreetype6-dev \t\tlibreadline6-dev \t\tlibssl-dev \t\tlibxslt1-dev \t\tlibxml2-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y ca-certificates curl libxml2 autoconf     libedit-dev libsqlite3-dev xz-utils     gcc libc-dev make pkg-config nginx-full     runit nano less tmux wget git locales unzip     $PHP_BUILD_DEPS $PHP_EXTRA_BUILD_DEPS     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver pool.sks-keyservers.net --recv-keys \tB1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F \t1729F83938DA44E27BA0F4D3DBDB397470D12172 \t\u0026\u0026 mkdir -p $PHP_INI_DIR/conf.d \t\u0026\u0026 set -x \t\u0026\u0026 curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror\" -o php.tar.bz2 \t\u0026\u0026 curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.bz2.asc/from/this/mirror\" -o php.tar.bz2.asc \t\u0026\u0026 gpg --verify php.tar.bz2.asc \t\u0026\u0026 mkdir -p /usr/src/php \t\u0026\u0026 tar -xof php.tar.bz2 -C /usr/src/php --strip-components=1 \t\u0026\u0026 rm php.tar.bz2* \t\u0026\u0026 cd /usr/src/php \t\u0026\u0026 export CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\" \t\u0026\u0026 export CPPFLAGS=\"$CFLAGS\" \t\u0026\u0026 export LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\" \t\u0026\u0026 ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t$PHP_EXTRA_CONFIGURE_ARGS \t\t--disable-cgi \t\t--enable-mysqlnd \t\t--enable-bcmath \t\t--with-bz2 \t\t--enable-calendar \t\t--with-curl \t\t--with-gd \t\t--with-jpeg-dir \t\t--with-freetype-dir \t\t--with-xpm-dir \t\t--with-webp-dir \t\t--enable-exif \t\t--enable-ftp \t\t--with-libedit \t\t--enable-mbstring \t\t--with-mysqli \t\t--with-pdo-mysql \t\t--enable-pcntl \t\t--with-openssl \t\t--with-xsl \t\t--with-readline \t\t--with-zlib \t\t--enable-zip \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \t\u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \t\u0026\u0026 make clean \t\u0026\u0026 pecl install APCu \t\u0026\u0026 cd /opt \t\u0026\u0026 curl -sS https://getcomposer.org/installer | php \t\u0026\u0026 ln -s /opt/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r app -g 433 \u0026\u0026 \tmkdir /home/app \u0026\u0026 \tmkdir -p /var/wwwroot/default \u0026\u0026 \tuseradd -u 431 -r -g app -d /home/app -s /usr/sbin/nologin -c \"Docker image user for web application\" app \u0026\u0026 \tchown -R app:app /home/app /var/wwwroot/default \u0026\u0026 \tchmod 700 /home/app \u0026\u0026 \tchmod 711 /var/wwwroot/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/wwwroot/default",
            "/etc/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/sbin/runsvdir-init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}