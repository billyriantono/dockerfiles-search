{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nasqueron/jenkins-slave-barebone",
      "SourceCode": "FROM nasqueron/jenkins-slave-barebone",
      "Platform": "",
      "From": {
        "Image": "nasqueron/jenkins-slave-barebone"
      },
      "Commands": [
        {
          "Maintainer": "SÃ©bastien Santoro aka Dereckson \u003cdereckson+nasqueron-docker@espace-win.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y build-essential cmake git curl nano vim file                    libpq-dev libsqlite-dev pkgconf sudo xutils-dev openssl                    strace gdb libssl-dev wget libpcre3-dev \u0026\u0026     apt-get autoremove \u0026\u0026 apt-get clean \u0026\u0026     groupadd -r app -g 433 \u0026\u0026     mkdir /home/app \u0026\u0026     useradd -u 431 -r -g app -d /home/app -s /bin/sh -c \"Default application account\" app \u0026\u0026     chown -R app:app /home/app \u0026\u0026     chmod 711 /home/app \u0026\u0026     mkdir /usr/local/cargo /usr/local/multirust \u0026\u0026     chown -R app:app /usr/local/cargo /usr/local/multirust"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TOOLCHAIN",
              "Value": "nightly"
            },
            {
              "Key": "CARGO_HOME",
              "Value": "/usr/local/cargo"
            },
            {
              "Key": "RUSTUP_HOME",
              "Value": "/usr/local/multirust"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "app"
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $TOOLCHAIN \u0026\u0026     /usr/local/cargo/bin/rustup install $TOOLCHAIN \u0026\u0026     /usr/local/cargo/bin/rustup default $TOOLCHAIN \u0026\u0026     /usr/local/cargo/bin/rustup component add clippy-preview --toolchain=$TOOLCHAIN \u0026\u0026     /usr/local/cargo/bin/rustup component add rustfmt-preview --toolchain=$TOOLCHAIN"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        }
      ]
    }
  ]
}