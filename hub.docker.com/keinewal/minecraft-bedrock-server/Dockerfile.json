{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"github.com/assert-not-singularity\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         ca-certificates         libcurl4         libssl1.1         nano         tzdata         unzip         wget \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://minecraft.azureedge.net/bin-linux/bedrock-server-1.13.2.0.zip -qO bedrock-server.zip \u0026\u0026     unzip bedrock-server.zip -d /bedrock-server \u0026\u0026     rm bedrock-server.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*",
            "/bedrock-server/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/bedrock-server"
        },
        {
          "CmdLine": [
            "find . -name '*.sh' -type f -maxdepth 1 | xargs chmod +x \u0026\u0026     ln -s /data/behavior_packs behavior_packs \u0026\u0026     ln -s /data/resource_packs resource_packs \u0026\u0026     ln -s /data/worlds worlds \u0026\u0026     mkdir tmp \u0026\u0026     mv -t tmp/ permissions.json server.properties whitelist.json \u0026\u0026     ln -sfb /data/config/permissions.json permissions.json \u0026\u0026     ln -sfb /data/config/server.properties server.properties \u0026\u0026     ln -sfb /data/config/whitelist.json whitelist.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "19132/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "19133/udp"
          ]
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/."
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}