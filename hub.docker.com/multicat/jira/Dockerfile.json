{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "adoptopenjdk/openjdk8-openj9:alpine-jre",
      "SourceCode": "FROM adoptopenjdk/openjdk8-openj9:alpine-jre",
      "Platform": "",
      "From": {
        "Image": "adoptopenjdk/openjdk8-openj9:alpine-jre"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JIRA_USER",
              "Value": "jira"
            },
            {
              "Key": "JIRA_GROUP",
              "Value": "jira"
            },
            {
              "Key": "CONTAINER_UID",
              "Value": "1000"
            },
            {
              "Key": "CONTAINER_GID",
              "Value": "1000"
            },
            {
              "Key": "JIRA_CONTEXT_PATH",
              "Value": "ROOT"
            },
            {
              "Key": "JIRA_HOME",
              "Value": "/var/atlassian/jira"
            },
            {
              "Key": "JIRA_INSTALL",
              "Value": "/opt/jira"
            },
            {
              "Key": "JIRA_SCRIPTS",
              "Value": "/usr/local/share/atlassian"
            },
            {
              "Key": "JRE_HOME",
              "Value": "$JAVA_HOME"
            },
            {
              "Key": "_RUNJAVA",
              "Value": "java"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin",
            "$JIRA_SCRIPTS"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "export GLIBC_VERSION=2.29-r0                                   \u0026\u0026 export GLIBC_DOWNLOAD_URL=https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION     \u0026\u0026 export GLIBC_BIN=glibc-bin-$GLIBC_VERSION.apk               \u0026\u0026 export GLIBC_I18N=glibc-i18n-$GLIBC_VERSION.apk             \u0026\u0026 wget -O $GLIBC_BIN $GLIBC_DOWNLOAD_URL/$GLIBC_BIN           \u0026\u0026 wget -O $GLIBC_I18N $GLIBC_DOWNLOAD_URL/$GLIBC_I18N         \u0026\u0026 apk add                                                           --update                                                       --no-cache                                                      bash                                                           su-exec                                                        gzip                                                           nano                                                           tini                                                           wget                                                           xmlstarlet                                                     $GLIBC_BIN                                                     $GLIBC_I18N                                                    fontconfig                                                     msttcorefonts-installer                                        ttf-dejavu                                                     ghostscript                                                    graphviz                                                       motif                                                   \u0026\u0026 update-ms-fonts                                             \u0026\u0026 fc-cache -f                                                 \u0026\u0026 export JIRA_LIB=$JIRA_INSTALL/lib                           \u0026\u0026 mkdir -p $JIRA_HOME $JIRA_INSTALL $JIRA_LIB                 \u0026\u0026 addgroup -g $CONTAINER_GID $JIRA_GROUP                      \u0026\u0026 export MYSQL_DRIVER_VERSION=5.1.47                          \u0026\u0026 export MYSQL_FILE_BASE=mysql-connector-java-$MYSQL_DRIVER_VERSION     \u0026\u0026 export MYSQL_FILE_TAR=$MYSQL_FILE_BASE.tar.gz               \u0026\u0026 export MYSQL_FILE_BIN=$MYSQL_FILE_BASE-bin.jar              \u0026\u0026 export MYSQL_DOWNLOAD_URL=https://dev.mysql.com/get/Downloads/Connector-J/$MYSQL_FILE_TAR     \u0026\u0026 export POSTGRESQL_DRIVER_VERSION=42.2.5                     \u0026\u0026 export POSTGRESQL_FILE=postgresql-$POSTGRESQL_DRIVER_VERSION.jar     \u0026\u0026 export POSTGRESQL_DOWNLOAD_URL=https://jdbc.postgresql.org/download/$POSTGRESQL_FILE     \u0026\u0026 rm -f $JIRA_LIB/mysql-connector-java*.jar                   \u0026\u0026 wget -O $MYSQL_FILE_TAR $MYSQL_DOWNLOAD_URL                 \u0026\u0026 tar xzf $MYSQL_FILE_TAR --strip=1                           \u0026\u0026 cp $MYSQL_FILE_BIN $JIRA_LIB/$MYSQL_FILE_BIN                \u0026\u0026 rm -f $JIRA_LIB/postgresql-*.jar                            \u0026\u0026 wget -O $JIRA_LIB/$POSTGRESQL_FILE $POSTGRESQL_DOWNLOAD_URL     \u0026\u0026 export DOCKERIZE_VERSION=v0.6.1                             \u0026\u0026 export DOCKERIZE_DOWNLOAD_URL=https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 wget -O dockerize.tar.gz $DOCKERIZE_DOWNLOAD_URL            \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize.tar.gz                \u0026\u0026 rm dockerize.tar.gz                                         \u0026\u0026 export LE_DOWNLOAD_URL=https://letsencrypt.org/certs/       \u0026\u0026 export LE_AUTH_1=letsencryptauthorityx1.der                 \u0026\u0026 export LE_AUTH_2=letsencryptauthorityx2.der                 \u0026\u0026 export LE_CROSS_1=lets-encrypt-x1-cross-signed.der          \u0026\u0026 export LE_CROSS_2=lets-encrypt-x2-cross-signed.der          \u0026\u0026 export LE_CROSS_3=lets-encrypt-x3-cross-signed.der          \u0026\u0026 export LE_CROSS_4=lets-encrypt-x4-cross-signed.der          \u0026\u0026 export KEYSTORE=$JRE_HOME/lib/security/cacerts              \u0026\u0026 wget $LE_DOWNLOAD_URL/$LE_AUTH_1                            \u0026\u0026 wget $LE_DOWNLOAD_URL/$LE_AUTH_2                            \u0026\u0026 wget $LE_DOWNLOAD_URL/$LE_CROSS_1                           \u0026\u0026 wget $LE_DOWNLOAD_URL/$LE_CROSS_2                           \u0026\u0026 wget $LE_DOWNLOAD_URL/$LE_CROSS_3                           \u0026\u0026 wget $LE_DOWNLOAD_URL/$LE_CROSS_4                           \u0026\u0026 keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file $LE_AUTH_1                  \u0026\u0026 keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file $LE_AUTH_2                  \u0026\u0026 keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file $LE_CROSS_1     \u0026\u0026 keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file $LE_CROSS_2     \u0026\u0026 keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file $LE_CROSS_3     \u0026\u0026 keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file $LE_CROSS_4     \u0026\u0026 apk del                                                       --no-cache                                                     msttcorefonts-installer                                      \u0026\u0026 rm -rf /var/cache/apk/* /tmp/* /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JIRA_VERSION",
          "Name": "arg",
          "Value": "8.5.1"
        },
        {
          "Key": "LANG_LANGUAGE",
          "Name": "arg",
          "Value": "en"
        },
        {
          "Key": "LANG_COUNTRY",
          "Name": "arg",
          "Value": "US"
        },
        {
          "CmdLine": [
            "/usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JIRA_PRODUCT",
          "Name": "arg",
          "Value": "jira-software"
        },
        {
          "CmdLine": [
            "wget -O jira.bin https://www.atlassian.com/software/jira/downloads/binary/atlassian-$JIRA_PRODUCT-$JIRA_VERSION-x64.bin     \u0026\u0026 chmod +x jira.bin     \u0026\u0026 export JAVA_TOOL_OPTIONS=\"\"     \u0026\u0026 ./jira.bin -q -varfile $JIRA_SCRIPTS/response.varfile       \u0026\u0026 rm -rf $JIRA_INSTALL/jre                                    \u0026\u0026 ln -s $JAVA_HOME $JIRA_INSTALL/jre                          \u0026\u0026 adduser -u $CONTAINER_UID                                       -G $JIRA_GROUP                                                 -h /home/$JIRA_USER                                            -s /bin/bash                                                   -S $JIRA_USER                                              \u0026\u0026 wget -O /home/$JIRA_USER/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class      \u0026\u0026 chown -R $JIRA_USER:$JIRA_GROUP $JIRA_HOME $JIRA_INSTALL $JIRA_SCRIPTS /home/$JIRA_USER     \u0026\u0026 rm -rf /var/cache/apk/* /tmp/* /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$JIRA_USER"
        },
        {
          "Name": "workdir",
          "Path": "$JIRA_HOME"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$JIRA_HOME"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/usr/local/share/atlassian/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jira"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jonathan Hult \u003cteamatldocker@JonathanHult.com\u003e\""
            },
            {
              "Key": "org.opencontainers.image.authors",
              "Value": "\"Jonathan Hult \u003cteamatldocker@JonathanHult.com\u003e\""
            },
            {
              "Key": "org.opencontainers.image.url",
              "Value": "\"https://hub.docker.com/r/teamatldocker/jira/\""
            },
            {
              "Key": "org.opencontainers.image.title",
              "Value": "$JIRA_PRODUCT"
            },
            {
              "Key": "org.opencontainers.image.description",
              "Value": "\"$JIRA_PRODUCT $JIRA_VERSION running on Alpine Linux\""
            },
            {
              "Key": "org.opencontainers.image.source",
              "Value": "\"https://github.com/teamatldocker/jira/\""
            },
            {
              "Key": "org.opencontainers.image.version",
              "Value": "$JIRA_VERSION"
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}