{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim",
      "SourceCode": "FROM python:3.6-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"joona.hook@visma.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./dist/salescaseprediction",
            "/home/site/wwwroot"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME_SITE",
              "Value": "\"/home/site/wwwroot\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${HOME_SITE}"
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         libpq-dev         openssh-server         curl         wget         tcptraceroute \t\t\u0026\u0026 echo \"root:Docker!!!*\" | chpasswd      \u0026\u0026 echo \"cd /home\" \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl wget gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y --no-install-recommends build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y --no-install-recommends unixodbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends unixodbc-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "TEMP_DEB=\"$(mktemp)\"  \u0026\u0026 wget -O \"$TEMP_DEB\" 'https://packages.microsoft.com/debian/9/prod/pool/main/m/msodbcsql17/msodbcsql17_17.2.0.1-1_amd64.deb'  \u0026\u0026 yes | dpkg --skip-same-version -i \"$TEMP_DEB\"  \u0026\u0026 rm -f \"$TEMP_DEB\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --ignore-installed -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y --auto-remove build-essential unixodbc-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/LogFiles"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt/startup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init_container.sh",
            "/opt/startup/init_container.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod -R 777 /opt/startup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/opt/startup/init_container.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}