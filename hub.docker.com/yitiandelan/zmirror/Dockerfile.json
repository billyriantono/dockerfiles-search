{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "TIANLAN \u003cyitiandelan@outlook.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk --update --no-cache add gcc g++ curl python3 python3-dev     \u0026\u0026 apk add libc-dev \u0026\u0026 pip3 install --upgrade --no-cache-dir pip     \u0026\u0026 pip3 install --no-cache-dir gunicorn gevent requests flask cchardet fastcache lru-dict     \u0026\u0026 apk del gcc g++ libc-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www \u0026\u0026 cd /var/www     \u0026\u0026 curl -o tmp.tar.gz -L https://codeload.github.com/aploium/zmirror/tar.gz/v0.29.4     \u0026\u0026 tar -xvf tmp.tar.gz \u0026\u0026 rm tmp.tar.gz     \u0026\u0026 mv zmirror-0.29.4 zmirror \u0026\u0026 cp zmirror/more_configs/config_google_and_zhwikipedia.py zmirror/config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "cd /var/www/zmirror \u0026\u0026 gunicorn --bind 0.0.0.0:80 --workers 2 --worker-connections 100 wsgi:application"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}