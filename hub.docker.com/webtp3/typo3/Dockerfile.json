{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Thomas Ruta \u003cemail@thomasruta.de\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -yq install ssh openssh-server vim-nox software-properties-common python-software-properties mysql-client git curl bash   \u0026\u0026     LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -yq --force-yes install  apache2 apache2-doc apache2-utils libapache2-mod-fcgid apache2-suexec-pristine php-pear mcrypt     libapache2-mod-php  php7.0 php7.0-common php7.0-gd php7.0-mysql php7.0-imap php7.0-cli php7.0-cgi libapache2-mod-fcgid apache2-suexec-pristine     php-pear php-auth php7.0-mcrypt mcrypt  imagemagick libruby libapache2-mod-python php7.0-curl php7.0-intl php7.0-pspell php7.0-recode php7.0-sqlite3 php7.0-tidy     php7.0-xmlrpc php7.0-xsl php7.0-zip php7.0-mbstring  php7.0-soap  php7.0-json php7.0-opcache libapache2-mod-fastcgi php7.0-fpm php7.0-apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -yq --force-yes install       libapache2-mod-php  php7.1 php7.1-common php7.1-gd php7.1-mysql php7.1-imap php7.1-cli php7.1-cgi      php-pear php-auth php7.1-mcrypt mcrypt  imagemagick libruby libapache2-mod-python php7.1-apcu php7.1-curl php7.1-intl php7.1-pspell php7.1-recode php7.1-sqlite3 php7.1-tidy     php7.1-xmlrpc php7.1-xsl php7.1-zip php7.1-mbstring  php7.1-soap  php7.1-json php7.1-opcache php7.1-fpm     memcached php-memcache php-imagick php-gettext  php-apcu  php-xdebug  phpunit phpunit-dbunit  phpunit-mock-object graphicsmagick imagemagick poppler-utils default-jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOG_DIR",
              "Value": "/var/log/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOCK_DIR",
              "Value": "/var/lock/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_PID_FILE",
              "Value": "/var/run/apache2.pid"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "a2enmod rewrite ssl actions include cgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod dav_fs dav auth_digest headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod fastcgi alias"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/apache2/sites-enabled/000-default.conf -rf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www/php-fcgi-scripts \u0026\u0026 mkdir /var/www/tmp \u0026\u0026 mkdir /var/www/cgi-bin  /var/www/html/web"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -g www-data -s /bin/bash typo3user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".php-fcgi-starter",
            "/var/www/php-fcgi-scripts/"
          ]
        },
        {
          "CmdLine": [
            "echo AllowUsers typo3user \u003e\u003e /etc/ssh/sshd_config \u0026\u0026 sed -i \"s/.*PasswordAuthentication .*/PasswordAuthentication  yes/g\" /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 775 /var/www/php-fcgi-scripts/.php-fcgi-starter \u0026\u0026 chown www-data:www-data /var/www/php-fcgi-scripts/.php-fcgi-starter \u0026\u0026     chmod 775 /var/www/tmp \u0026\u0026 chown www-data:www-data /var/www/tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "typo3.php.ini",
            "/etc/php/7.0/cgi/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "typo3.php.ini",
            "/etc/php/7.1/cgi/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "typo3.php.ini",
            "/etc/php/7.2/cgi/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/alternatives/php \u0026\u0026 ln -s /usr/bin/php7.1 /etc/alternatives/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/alternatives/php-cgi \u0026\u0026 ln -s /usr/bin/php-cgi7.1 /etc/alternatives/php-cgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run-typo3.sh",
            "/var/www/cgi-bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /var/www/cgi-bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php composer-setup.php --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_HOST",
              "Value": "db"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_PORT",
              "Value": "3306"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ADMIN_USER",
              "Value": "tp3min"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ADMIN_PASS",
              "Value": "Init1111"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_NAME",
              "Value": "typo3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_USER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_PASS",
              "Value": "my-secret-pw"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_TOOL_PASSWORD",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "service ssh restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/apache2ctl",
            "-D",
            "FOREGROUND"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}