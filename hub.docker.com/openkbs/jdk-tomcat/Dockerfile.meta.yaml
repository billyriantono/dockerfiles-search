MetaArgs: null
Stages:
- BaseName: openkbs/jdk-mvn-py3
  Commands:
  - Maintainer: drsnowbird@openkbs.org
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - apt-get update   && apt-get install -yq --no-install-recommends pwgen sudo ca-certificates   &&
      apt-get clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: INSTALL_BASE
    Name: arg
    Value: ${INSTALL_BASE:-/opt}
  - Env:
    - Key: TOMCAT_MAJOR_VERSION
      Value: ${TOMCAT_MAJOR_VERSION:-9}
    Name: env
  - Env:
    - Key: TOMCAT_MINOR_VERSION
      Value: ${TOMCAT_MINOR_VERSION:-9.0.16}
    Name: env
  - Env:
    - Key: CATALINA_HOME
      Value: ${INSTALL_BASE}/tomcat
    Name: env
  - Env:
    - Key: TOMCAT_HOME
      Value: ${CATALINA_HOME}/
    Name: env
  - Key: TOMCAT_HTTPS_ENABLED
    Name: arg
    Value: ${TOMCAT_HTTPS_ENABLED:-0}
  - Env:
    - Key: TOMCAT_HTTPS_ENABLED
      Value: ${TOMCAT_HTTPS_ENABLED}
    Name: env
  - Key: CATALINA_WEBAPPS
    Name: arg
    Value: ${CATALINA_WEBAPPS:-${CATALINA_HOME}/webapps}
  - Env:
    - Key: CATALINA_WEBAPPS
      Value: ${CATALINA_WEBAPPS}
    Name: env
  - Env:
    - Key: TOMCAT_PASSWORD
      Value: ${TOMCAT_PASSWORD:-ChageMeNow!}
    Name: env
  - Key: KEYSTORE_PASSWORD
    Name: arg
    Value: ${KEYSTORE_PASSWORD:-}
  - Env:
    - Key: KEYSTORE_PASSWORD
      Value: ${KEYSTORE_PASSWORD:-}
    Name: env
  - Key: PRODUCT_MIRROR_SITE_URL
    Name: arg
    Value: ${PRODUCT_MIRROR_SITE_URL:-https://downloads.sourceforge.net/project}
  - Name: workdir
    Path: ${INSTALL_BASE}
  - Env:
    - Key: DOWNLOAD_BASE_URL
      Value: http://www-us.apache.org/dist
    Name: env
  - CmdLine:
    - wget -q --no-check-certificate ${DOWNLOAD_BASE_URL}/tomcat/tomcat-${TOMCAT_MAJOR_VERSION}/v${TOMCAT_MINOR_VERSION}/bin/apache-tomcat-${TOMCAT_MINOR_VERSION}.tar.gz
      &&     tar zxf apache-tomcat-*.tar.gz &&     rm apache-tomcat-*.tar.gz &&     mv
      apache-tomcat* tomcat
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/create_tomcat_admin_user.sh
    - ${CATALINA_HOME}/create_tomcat_admin_user.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/setup-https-tomcat.sh
    - ${CATALINA_HOME}/setup-https-tomcat.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/webapps_manager_META-INF_context.xml
    - ${CATALINA_HOME}/webapps/manager/META-INF/context.xml
  - Env:
    - Key: USER
      Value: tomcat
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - Key: USER_ID
    Name: arg
    Value: "1001"
  - Env:
    - Key: USER_ID
      Value: "1001"
    Name: env
  - Key: GROUP_ID
    Name: arg
    Value: "1001"
  - Env:
    - Key: GROUP_ID
      Value: "1001"
    Name: env
  - CmdLine:
    - 'groupadd -g ${GROUP_ID} ${USER} &&     useradd -d ${HOME} -s /bin/bash -u ${USER_ID}
      -g ${USER} ${USER} &&     usermod -aG root ${USER} &&     export uid=${USER_ID}
      gid=${GROUP_ID} &&     mkdir -p ${HOME} &&     mkdir -p ${HOME}/workspace &&     mkdir
      -p /etc/sudoers.d &&     echo "${USER}:x:${USER_ID}:${GROUP_ID}:${USER},,,:${HOME}:/bin/bash"
      >> /etc/passwd &&     echo "${USER}:x:${USER_ID}:" >> /etc/group &&     echo
      "${USER} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USER} &&     chmod 0440
      /etc/sudoers.d/${USER} &&     chown ${USER}:${USER} -R ${HOME} &&     apt-get
      clean all'
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${USER}:${USER} ${CATALINA_HOME} ${CATALINA_HOME} /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_PORT_HTTP
      Value: ${TOMCAT_PORT_HTTP:-8080}
    Name: env
  - Env:
    - Key: TOMCAT_PORT_HTTPS
      Value: ${TOMCAT_PORT_HTTPS:-8443}
    Name: env
  - Name: expose
    Ports:
    - ${TOMCAT_PORT_HTTP}
  - Name: expose
    Ports:
    - ${TOMCAT_PORT_HTTPS}
  - Name: user
    User: ${USER}
  - Name: workdir
    Path: ${CATALINA_HOME}
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: openkbs/jdk-mvn-py3
  Name: ""
  Platform: ""
  SourceCode: FROM openkbs/jdk-mvn-py3
