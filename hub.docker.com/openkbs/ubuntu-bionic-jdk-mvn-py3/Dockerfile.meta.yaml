MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Maintainer: openkbs.org@gmail.com
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y apt-utils automake pkg-config libpcre3-dev
      zlib1g-dev liblzma-dev &&     apt-get install -y curl net-tools build-essential
      software-properties-common libsqlite3-dev sqlite3 bzip2 libbz2-dev git wget
      unzip vim python3-pip python3-setuptools python3-dev python3-numpy python3-scipy
      python3-pandas python3-matplotlib &&     apt-get install -y git xz-utils &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: INSTALL_DIR
      Value: ${INSTALL_DIR:-/usr}
    Name: env
  - Key: JAVA_MAJOR_VERSION
    Name: arg
    Value: ${JAVA_MAJOR_VERSION:-8}
  - Key: JAVA_UPDATE_VERSION
    Name: arg
    Value: ${JAVA_UPDATE_VERSION:-201}
  - Key: JAVA_BUILD_NUMBER
    Name: arg
    Value: ${JAVA_BUILD_NUMBER:-09}
  - Key: JAVA_DOWNLOAD_TOKEN
    Name: arg
    Value: ${JAVA_DOWNLOAD_TOKEN:-42970487e3af4f5aa5bca3f542482c60}
  - Key: UPDATE_VERSION
    Name: arg
    Value: ${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}
  - Key: BUILD_VERSION
    Name: arg
    Value: b${JAVA_BUILD_NUMBER}
  - Env:
    - Key: JAVA_HOME_ACTUAL
      Value: ${INSTALL_DIR}/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: ${INSTALL_DIR}/java
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:${JAVA_HOME}/bin
    Name: env
  - Name: workdir
    Path: ${INSTALL_DIR}
  - CmdLine:
    - 'curl -sL --retry 3 --insecure   --header "Cookie: oraclelicense=accept-securebackup-cookie;"   "http://download.oracle.com/otn-pub/java/jdk/${UPDATE_VERSION}-${BUILD_VERSION}/${JAVA_DOWNLOAD_TOKEN}/jdk-${UPDATE_VERSION}-linux-x64.tar.gz"   |
      gunzip   | tar x -C ${INSTALL_DIR}/   && rm -rf jdk-${UPDATE_VERSION}-linux-x64.tar.gz
      # ${JAVA_HOME_ACTUAL}/man'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: $INSTALL_DIR/java
    Name: env
  - Key: MAVEN_VERSION
    Name: arg
    Value: ${MAVEN_VERSION:-3.6.0}
  - Env:
    - Key: MAVEN_VERSION
      Value: ${MAVEN_VERSION}
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/apache-maven-${MAVEN_VERSION}
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${MAVEN_HOME}/bin
    Name: env
  - CmdLine:
    - curl -sL http://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz   |
      gunzip   | tar x -C /usr/   && ln -s ${MAVEN_HOME} /usr/maven
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - ./
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -r ./requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin
    Name: env
  - CmdLine:
    - ln -s ${JAVA_HOME_ACTUAL} ${JAVA_HOME} &&     ls -al ${INSTALL_DIR} &&     echo
      "JAVA_HOME=$JAVA_HOME" &&     echo "PATH=${PATH}" && export JAVA_HOME=${JAVA_HOME}
      && export PATH=$PATH &&     java -version &&     mvn --version &&     python
      -V &&     python3 -V &&     pip3 --version
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "JAVA_HOME=$JAVA_HOME" &&     java -version &&     mvn --version &&     python
      -V &&     python3 -V &&     pip3 --version
    Name: run
    PrependShell: true
  - Key: GRADLE_INSTALL_BASE
    Name: arg
    Value: ${GRADLE_INSTALL_BASE:-/opt/gradle}
  - Key: GRADLE_VERSION
    Name: arg
    Value: ${GRADLE_VERSION:-5.1.1}
  - Key: GRADLE_HOME
    Name: arg
    Value: ${GRADLE_INSTALL_BASE}/gradle-${GRADLE_VERSION}
  - Env:
    - Key: GRADLE_HOME
      Value: ${GRADLE_HOME}
    Name: env
  - Key: GRADLE_PACKAGE
    Name: arg
    Value: gradle-${GRADLE_VERSION}-bin.zip
  - Key: GRADLE_PACKAGE_URL
    Name: arg
    Value: https://services.gradle.org/distributions/${GRADLE_PACKAGE}
  - CmdLine:
    - mkdir -p ${GRADLE_INSTALL_BASE} &&     cd ${GRADLE_INSTALL_BASE} &&     wget
      -c ${GRADLE_PACKAGE_URL} &&     unzip -d ${GRADLE_INSTALL_BASE} ${GRADLE_PACKAGE}
      &&     ls -al ${GRADLE_HOME} &&     ln -s ${GRADLE_HOME}/bin/gradle /usr/bin/gradle
      &&     ${GRADLE_HOME}/bin/gradle -v &&     rm -f ${GRADLE_PACKAGE}
    Name: run
    PrependShell: true
  - Key: NODE_VERSION
    Name: arg
    Value: ${NODE_VERSION:-11}
  - Env:
    - Key: NODE_VERSION
      Value: ${NODE_VERSION}
    Name: env
  - CmdLine:
    - apt-get update -y &&     apt-get install -y sudo curl git xz-utils &&     curl
      -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - &&     apt-get
      install -y gcc g++ make &&     apt-get install -y nodejs &&     node -v && npm
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./printVersions.sh
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./examples
    - /data/examples
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - Name: volume
    Volumes:
    - '"/data"'
  - Name: workdir
    Path: /data
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
