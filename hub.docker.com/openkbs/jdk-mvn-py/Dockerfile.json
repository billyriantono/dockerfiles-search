{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "openkbs",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev     \u0026\u0026 apt-get install -y curl net-tools build-essential git wget unzip vim python python-setuptools python-pip python-dev python-numpy     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JAVA_MAJOR_VERSION",
          "Name": "arg",
          "Value": "${JAVA_MAJOR_VERSION:-8}"
        },
        {
          "Key": "JAVA_UPDATE_VERSION",
          "Name": "arg",
          "Value": "${JAVA_UPDATE_VERSION:-201}"
        },
        {
          "Key": "JAVA_BUILD_NUMBER",
          "Name": "arg",
          "Value": "${JAVA_BUILD_NUMBER:-09}"
        },
        {
          "Key": "JAVA_DOWNLOAD_TOKEN",
          "Name": "arg",
          "Value": "${JAVA_DOWNLOAD_TOKEN:-42970487e3af4f5aa5bca3f542482c60}"
        },
        {
          "Key": "UPDATE_VERSION",
          "Name": "arg",
          "Value": "${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}"
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": "b${JAVA_BUILD_NUMBER}"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_DIR",
              "Value": "/usr"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3 --insecure   --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"   \"http://download.oracle.com/otn-pub/java/jdk/${UPDATE_VERSION}-${BUILD_VERSION}/${JAVA_DOWNLOAD_TOKEN}/jdk-${UPDATE_VERSION}-linux-x64.tar.gz\"   | gunzip   | tar x -C $INSTALL_DIR/   \u0026\u0026 ln -s $JAVA_HOME $INSTALL_DIR/java   \u0026\u0026 rm -rf $JAVA_HOME/man"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "$INSTALL_DIR/java"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "${MAVEN_VERSION:-3.6.0}"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "${MAVEN_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/apache-maven-${MAVEN_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${MAVEN_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL http://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz   | gunzip   | tar x -C /usr/   \u0026\u0026 ln -s ${MAVEN_HOME} /usr/maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GRADLE_INSTALL_BASE",
          "Name": "arg",
          "Value": "${GRADLE_INSTALL_BASE:-/opt/gradle}"
        },
        {
          "Key": "GRADLE_VERSION",
          "Name": "arg",
          "Value": "${GRADLE_VERSION:-5.1.1}"
        },
        {
          "Key": "GRADLE_HOME",
          "Name": "arg",
          "Value": "${GRADLE_INSTALL_BASE}/gradle-${GRADLE_VERSION}"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "${GRADLE_HOME}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "GRADLE_PACKAGE",
          "Name": "arg",
          "Value": "gradle-${GRADLE_VERSION}-bin.zip"
        },
        {
          "Key": "GRADLE_PACKAGE_URL",
          "Name": "arg",
          "Value": "https://services.gradle.org/distributions/${GRADLE_PACKAGE}"
        },
        {
          "CmdLine": [
            "mkdir -p ${GRADLE_INSTALL_BASE} \u0026\u0026     cd ${GRADLE_INSTALL_BASE} \u0026\u0026     wget -c ${GRADLE_PACKAGE_URL} \u0026\u0026     unzip -d ${GRADLE_INSTALL_BASE} ${GRADLE_PACKAGE} \u0026\u0026     ls -al ${GRADLE_HOME} \u0026\u0026     ln -s ${GRADLE_HOME}/bin/gradle /usr/bin/gradle \u0026\u0026     ${GRADLE_HOME}/bin/gradle -v \u0026\u0026     rm -f ${GRADLE_PACKAGE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "NODE_VERSION",
          "Name": "arg",
          "Value": "${NODE_VERSION:-11}"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "${NODE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y sudo curl git xz-utils \u0026\u0026     curl -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - \u0026\u0026     apt-get install -y gcc g++ make \u0026\u0026     apt-get install -y nodejs \u0026\u0026     node -v \u0026\u0026 npm --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./printVersions.sh",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./examples",
            "/data/examples"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "\"/data\""
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}