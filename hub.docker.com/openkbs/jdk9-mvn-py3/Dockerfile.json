{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "openkbs",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev   \u0026\u0026 apt-get install -y curl net-tools build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev git wget unzip vim python3-pip python3-setuptools python3-dev python3-numpy python3-scipy python3-pandas python3-matplotlib   \u0026\u0026 ln -s /usr/bin/python3 /usr/bin/python   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JAVA_MAJOR_VERSION",
          "Name": "arg",
          "Value": "${JAVA_MAJOR_VERSION:-9}"
        },
        {
          "Key": "JAVA_UPDATE_VERSION",
          "Name": "arg",
          "Value": "${JAVA_UPDATE_VERSION:-0.4}"
        },
        {
          "Key": "JAVA_BUILD_NUMBER",
          "Name": "arg",
          "Value": "${JAVA_BUILD_NUMBER:-11}"
        },
        {
          "Key": "JAVA_TOKEN",
          "Name": "arg",
          "Value": "${JAVA_TOKEN:-c2514751926b4512b076cc82f959763f}"
        },
        {
          "Key": "UPDATE_VERSION",
          "Name": "arg",
          "Value": "\"${JAVA_MAJOR_VERSION}.${JAVA_UPDATE_VERSION}\""
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": "${JAVA_BUILD_NUMBER}"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/jdk-${JAVA_MAJOR_VERSION}.${JAVA_UPDATE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_DIR",
              "Value": "/usr"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$INSTALL_DIR"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3 --insecure   --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"   \"http://download.oracle.com/otn-pub/java/jdk/${UPDATE_VERSION}+${BUILD_VERSION}/${JAVA_TOKEN}/jdk-${UPDATE_VERSION}_linux-x64_bin.tar.gz\" --output $INSTALL_DIR/jdk-${UPDATE_VERSION}_linux-x64_bin.tar.gz   \u0026\u0026 tar xvf jdk-${UPDATE_VERSION}_linux-x64_bin.tar.gz   \u0026\u0026 ln -s $JAVA_HOME $INSTALL_DIR/java   \u0026\u0026 rm -rf $JAVA_HOME/man jdk-${UPDATE_VERSION}_linux-x64_bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/apache-maven-$MAVEN_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$MAVEN_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz   | gunzip   | tar x -C /usr/   \u0026\u0026 ln -s $MAVEN_HOME /usr/maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "\"/data\""
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        }
      ]
    }
  ]
}