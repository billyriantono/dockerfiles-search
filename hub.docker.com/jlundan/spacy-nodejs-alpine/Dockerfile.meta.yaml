MetaArgs: null
Stages:
- BaseName: node:8.5.0-alpine
  Commands:
  - Key: SPACY_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: LANG
      Value: en
    Name: env
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Env:
    - Key: SPACY_LOG_LEVEL
      Value: error
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./src
    - /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entry/services.yml
    - /services.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entry/.bashrc
    - /root/.bashrc
  - CmdLine:
    - apk update && apk add --no-cache python3 tini bash libgomp &&     apk add --no-cache
      --virtual .build-deps         build-base         subversion         python3-dev         g++
      &&     ln -s /usr/bin/python3 /usr/bin/python &&     python3 -m ensurepip &&     pip3
      install --upgrade pip setuptools &&     if [ ! -e /usr/bin/pip ]; then ln -s
      pip3 /usr/bin/pip ; fi &&     python3 -m pip install -U socketIO-client spacy==${SPACY_VERSION}
      &&     python3 -m spacy.${LANG}.download &&     pip show spacy > /etc/spacy_info
      &&     npm install --loglevel=warn npm@4.6.1 -global &&     npm install --loglevel=warn
      pm2 -g &&     cd /app &&     npm install --loglevel=warn &&     npm prune --production
      &&     apk del .build-deps         build-base         subversion         python3-dev         g++
      &&     rm -r /usr/lib/python*/ensurepip &&     rm -r /root/.cache &&     rm
      -r /root/.npm
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${PORT}
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - pm2-docker
    - /services.yml
    Name: cmd
    PrependShell: false
  From:
    Image: node:8.5.0-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:8.5.0-alpine
