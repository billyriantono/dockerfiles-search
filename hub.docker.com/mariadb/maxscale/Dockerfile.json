{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GIT_COMMIT",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GIT_TREE_STATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_TIME",
          "Name": "arg",
          "Value": null
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "maxscale.list",
            "/etc/apt/sources.list.d/maxscale.list.tmp"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y install gnupg2 ca-certificates \u0026\u0026     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"0x135659e928c12247\" \u0026\u0026     mv /etc/apt/sources.list.d/maxscale.list.tmp /etc/apt/sources.list.d/maxscale.list \u0026\u0026     apt-get -y update \u0026\u0026     apt-get -y install maxscale \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     if [ ! -z $VERSION ] \u0026\u0026 [ ! -z $GIT_COMMIT ] \u0026\u0026 [ ! -z $BUILD_TIME ]; then        printf \"Version:    $VERSION\\nGit commit: $GIT_COMMIT$GIT_TREE_STATE\\nBuilt:      $BUILD_TIME\\n\" \u003e /opt/image_details; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "maxscale.cnf",
            "/etc/"
          ]
        },
        {
          "CmdLine": [
            "maxscale",
            "-d",
            "-U",
            "maxscale",
            "-l",
            "stdout"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/docker-entrypoint.sh \u0026\u0026     ln -s /usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "maxscale",
            "-d",
            "-U",
            "maxscale",
            "-l",
            "stdout"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}