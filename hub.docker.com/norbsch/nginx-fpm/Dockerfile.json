{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx",
      "SourceCode": "FROM nginx",
      "Platform": "",
      "From": {
        "Image": "nginx"
      },
      "Commands": [
        {
          "Maintainer": "Azure App Service Container Images \u003cappsvc-images@microsoft.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SSH_PASSWD",
              "Value": "\"root:Docker!\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_DOWNLOAD_URL",
              "Value": "\"https://getcomposer.org/installer\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/home/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "\"1.6.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_SETUP_SHA",
              "Value": "544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_LOG_DIR",
              "Value": "\"/home/LogFiles/nginx\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_HOME",
              "Value": "\"/etc/php/7.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CONF_DIR",
              "Value": "$PHP_HOME\"/cli\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CONF_FILE",
              "Value": "$PHP_CONF_DIR\"/php.ini\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MARIADB_DATA_DIR",
              "Value": "\"/home/data/mysql\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MARIADB_LOG_DIR",
              "Value": "\"/home/LogFiles/mysql\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPMYADMIN_SOURCE",
              "Value": "\"/usr/src/phpmyadmin\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPMYADMIN_HOME",
              "Value": "\"/home/phpmyadmin\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME_SITE",
              "Value": "\"/home/site/wwwroot\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_BUILD_HOME",
              "Value": "\"/dockerbuild\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 essentials=\" \t\tca-certificates         wget \t\" \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y -V --no-install-recommends $essentials \t\u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 phps=\" \t\tphp7.0-mbstring \t\tphp7.0-curl \t\tphp7.0-common         php7.0-fpm         php-pear         php7.0-apcu         php7.0-gd         php7.0-dba         php7.0-mysql \t\tphp7.0-xml \t\"     \u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y -V --no-install-recommends $phps \t\u0026\u0026 rm -r /var/lib/apt/lists/* \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends openssh-server \t\u0026\u0026 echo \"$SSH_PASSWD\" | chpasswd     \u0026\u0026 php -r \"readfile('http://files.drush.org/drush.phar');\" \u003e /usr/local/bin/drush     \u0026\u0026 chmod +x /usr/local/bin/drush \t\u0026\u0026 php -r \"readfile('https://getcomposer.org/installer');\" \u003e /tmp/composer-setup.php        \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) === getenv('COMPOSER_SETUP_SHA')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); echo PHP_EOL; exit(1); } echo PHP_EOL;\"    \t\u0026\u0026 mkdir -p /composer/bin        \u0026\u0026 php /tmp/composer-setup.php --install-dir=/usr/local/bin/ --filename=composer --version=${COMPOSER_VERSION}        \u0026\u0026 rm /tmp/composer-setup.php     \u0026\u0026 apt-get install -y -V --no-install-recommends mariadb-server \t\u0026\u0026 mkdir -p $PHPMYADMIN_SOURCE     \u0026\u0026 mv /tmp/phpMyAdmin.tar.gz $PHPMYADMIN_SOURCE/phpMyAdmin.tar.gz \t\u0026\u0026 mv /tmp/phpmyadmin-nginx.conf $PHPMYADMIN_SOURCE/phpmyadmin-nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex    \u0026\u0026 test ! -d /var/www \u0026\u0026 mkdir -p /var/www \t\u0026\u0026 chown -R www-data:www-data /var/www \t\u0026\u0026 rm -rf /var/log/mysql \t\u0026\u0026 ln -s $MARIADB_LOG_DIR /var/log/mysql \t\u0026\u0026 rm -rf /var/log/nginx \t\u0026\u0026 ln -s $NGINX_LOG_DIR /var/log/nginx     \u0026\u0026 ln -s ${HOME_SITE} /var/www/wwwroot     \u0026\u0026 ln -s ${PHPMYADMIN_HOME} /var/www/phpmyadmin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/etc/php/7.0/cli/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "www.conf",
            "/etc/php/7.0/fpm/pool.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hostingstart.html",
            "/home/site/wwwroot/index.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "phpmyadmin-config.inc.php",
            "$PHPMYADMIN_SOURCE/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mariadb.cnf",
            "/etc/mysql/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opcache.ini",
            "/etc/php/7.0/mods-available/opcache.ini"
          ]
        },
        {
          "CmdLine": [
            "echo \"\u003c?php phpinfo();\" \u003e /home/site/wwwroot/index.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init_container.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/init_container.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "80"
          ]
        },
        {
          "CmdLine": [
            "init_container.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}