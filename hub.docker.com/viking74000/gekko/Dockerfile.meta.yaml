MetaArgs: null
Stages:
- BaseName: node:10
  Commands:
  - Env:
    - Key: HOST
      Value: localhost
    Name: env
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Env:
    - Key: MEMORYNODE
      Value: "2048"
    Name: env
  - Env:
    - Key: USE_SSL
      Value: "0"
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install nano
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     apt-get autoclean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - npm install -g --production node-gyp &&     npm cache clean --force
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - .
  - CmdLine:
    - npm install --production &&     npm install --production redis talib tulind
      pg convnetjs mathjs &&     npm cache clean --force
    Name: run
    PrependShell: true
  - Name: workdir
    Path: exchange
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - exchange/package.json
    - .
  - CmdLine:
    - npm install --production &&     npm cache clean --force
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../
  - CmdLine:
    - curl -L http://cpanmin.us | perl - App::cpanminus
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm -n install Parallel::ForkManager Time::Elapsed Getopt::Long List::MoreUtils
      File::chdir Statistics::Basic DBI DBD::SQLite JSON::XS TOML File::Basename File::Find::Wanted
      Template LWP::UserAgent LWP::Protocol::https Set::CrossProduct DBD::CSV Text::Table
      File::Copy
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/app
  - CmdLine:
    - git clone https://github.com/xFFFFF/Gekko-Strategies
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ./Gekko-Strategies
  - CmdLine:
    - bash ./install.sh /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../
  - CmdLine:
    - rm -R Gekko-Strategies
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/zschro/gekko-neuralnet.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ./gekko-neuralnet
  - CmdLine:
    - cp ../install.sh . &&     bash ./install.sh /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../
  - CmdLine:
    - rm -R ./gekko-neuralnet
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/xFFFFF/Gekko-BacktestTool.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ./Gekko-BacktestTool
  - CmdLine:
    - cp *.* ..
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../
  - CmdLine:
    - rm -R ./Gekko-BacktestTool
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/gekkowarez/gekkoga.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ./gekkoga
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../
  - CmdLine:
    - git clone https://github.com/tommiehansen/gab.git
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - chmod +x /usr/src/app/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/src/app/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --config
    - config.js
    - --ui
    Name: cmd
    PrependShell: false
  From:
    Image: node:10
  Name: ""
  Platform: ""
  SourceCode: FROM node:10
