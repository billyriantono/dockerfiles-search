MetaArgs: null
Stages:
- As: node
  BaseName: node:8.14.0-alpine
  Commands: null
  From:
    Image: node:8.14.0-alpine
  Name: node
  Platform: ""
  SourceCode: FROM node:8.14.0-alpine as node
- BaseName: ruby:2.4.5-alpine3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/tootsuite/mastodon"'
    - Key: description
      Value: '"Your self-hosted, globally interconnected microblogging community"'
    Name: label
  - Key: UID
    Name: arg
    Value: "991"
  - Key: GID
    Name: arg
    Value: "991"
  - Env:
    - Key: PATH
      Value: /mastodon/bin:$PATH
    - Key: RAILS_SERVE_STATIC_FILES
      Value: "true"
    - Key: RAILS_ENV
      Value: production
    - Key: NODE_ENV
      Value: production
    Name: env
  - Key: LIBICONV_VERSION
    Name: arg
    Value: "1.15"
  - Key: LIBICONV_DOWNLOAD_SHA256
    Name: arg
    Value: ccf536620a45458d26ba83887a983b96827001e92a13847b45e4925cc8913178
  - Name: expose
    Ports:
    - "3000"
    - "4000"
  - Name: workdir
    Path: /mastodon
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/node
    - /usr/local/bin/node
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/node_modules
    - /usr/local/lib/node_modules
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/npm
    - /usr/local/bin/npm
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /opt/yarn-*
    - /opt/yarn
  - CmdLine:
    - apk -U upgrade  && apk add -t build-dependencies     build-base     icu-dev     libidn-dev     libressl     libtool     postgresql-dev     protobuf-dev     python  &&
      apk add     ca-certificates     ffmpeg     file     git     icu-libs     imagemagick     libidn     libpq     protobuf     tini     tzdata  &&
      update-ca-certificates  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn  &&
      ln -s /opt/yarn/bin/yarnpkg /usr/local/bin/yarnpkg  && mkdir -p /tmp/src /opt  &&
      wget -O libiconv.tar.gz "https://ftp.gnu.org/pub/gnu/libiconv/libiconv-$LIBICONV_VERSION.tar.gz"  &&
      echo "$LIBICONV_DOWNLOAD_SHA256 *libiconv.tar.gz" | sha256sum -c -  && tar -xzf
      libiconv.tar.gz -C /tmp/src  && rm libiconv.tar.gz  && cd /tmp/src/libiconv-$LIBICONV_VERSION  &&
      ./configure --prefix=/usr/local  && make -j$(getconf _NPROCESSORS_ONLN) && make
      install  && libtool --finish /usr/local/lib  && cd /mastodon  && rm -rf /tmp/*
      /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - Gemfile.lock
    - package.json
    - yarn.lock
    - .yarnclean
    - /mastodon/
  - CmdLine:
    - bundle config build.nokogiri --with-iconv-lib=/usr/local/lib --with-iconv-include=/usr/local/include  &&
      bundle install -j$(getconf _NPROCESSORS_ONLN) --deployment --without test development  &&
      yarn install --pure-lockfile --ignore-engines  && yarn cache clean
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -g ${GID} mastodon && adduser -h /mastodon -s /bin/sh -D -G mastodon
      -u ${UID} mastodon  && mkdir -p /mastodon/public/system /mastodon/public/assets
      /mastodon/public/packs  && chown -R mastodon:mastodon /mastodon/public
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /mastodon
  - CmdLine:
    - chown -R mastodon:mastodon /mastodon
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /mastodon/public/system
  - Name: user
    User: mastodon
  - CmdLine:
    - OTP_SECRET=precompile_placeholder SECRET_KEY_BASE=precompile_placeholder bundle
      exec rails assets:precompile
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: ruby:2.4.5-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.4.5-alpine3.8
