{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-apache",
      "SourceCode": "FROM php:7.3-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.3-apache"
      },
      "Commands": [
        {
          "Key": "HOSTNAME",
          "Name": "arg",
          "Value": "comicslate.org"
        },
        {
          "CmdLine": [
            "echo \t'APT::Get::Assume-Yes \"true\";' \t'APT::Install-Suggests \"0\";' \t'APT::Install-Recommends \"0\";' \u003e /etc/apt/apt.conf.d/90forceyes.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install dumb-init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install syslog-ng"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/syslog-ng.conf",
            "/etc/syslog-ng/syslog-ng.conf"
          ]
        },
        {
          "CmdLine": [
            "apt-get install vsftpd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/vsftpd.conf",
            "/etc/vsftpd.conf"
          ]
        },
        {
          "CmdLine": [
            "echo pasv_min_port=10100\\\\npasv_max_port=20100 \u003e\u003e /etc/vsftpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "21"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "10100-20100"
          ]
        },
        {
          "CmdLine": [
            "apt-get install gnupg2 software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.cloud.google.com/apt \tcloud-sdk-$(lsb_release -c -s) main\" \t\u003e /etc/apt/sources.list.d/google-cloud-sdk.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install google-cloud-sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install python-certbot-apache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /etc/letsencrypt \u0026\u0026 \tln -sf /var/www/.htsecure/certificates /etc/letsencrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install cron logrotate p7zip git build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". \"${APACHE_ENVVARS}\" \u0026\u0026 chmod 0750 \"${APACHE_LOG_DIR?}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/hoytech/vmtouch.git \u0026\u0026 \tcd vmtouch \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 \tcd .. \u0026\u0026 rm -rf vmtouch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/vmtouch.service",
            "/etc/init.d/vmtouch"
          ]
        },
        {
          "CmdLine": [
            "echo '0 3 * * * root /usr/local/bin/serverctl cron' \u003e\u003e /etc/crontab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/logrotate",
            "\"/etc/logrotate.d/${HOSTNAME}\""
          ]
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install nullmailer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${HOSTNAME}\" \u003e /etc/mailname"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install nodejs npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g npm@latest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yq libgconf-2-4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget --no-install-recommends     \u0026\u0026 wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf       --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/comicsbot.service",
            "/etc/init.d/comicsbot"
          ]
        },
        {
          "CmdLine": [
            "a2enmod ssl rewrite headers macro ext_filter proxy_http"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv \"${PHP_INI_DIR}/php.ini-production\" \"${PHP_INI_DIR}/php.ini\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/apache2.conf",
            "\"/etc/apache2/sites-enabled/${HOSTNAME}.conf\""
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/php.ini",
            "\"${PHP_INI_DIR}/conf.d/30-${HOSTNAME}.ini\""
          ]
        },
        {
          "CmdLine": [
            "a2dissite 000-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "apt-get install libpng-dev libfreetype6-dev libjpeg62-turbo-dev \u0026\u0026 \tdocker-php-ext-configure gd \t\t--with-freetype-dir=/usr/include/ \t\t--with-jpeg-dir=/usr/include/ \u0026\u0026 \tdocker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "curl -sSL --connect-to localhost \t\"https://${HOSTNAME}/\" | grep -c app.comicslate.org || false"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/serverctl",
            "/usr/local/bin/serverctl"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/.htsecure/log \u0026\u0026 \t/usr/local/bin/serverctl update_whitelisted_ips \u0026\u0026 \tapachectl -D NoSSL -t \u0026\u0026 \trm -rf /var/www/.htsecure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".git",
            "/tmp/repo/.git"
          ]
        },
        {
          "CmdLine": [
            "git -C /tmp/repo log -1 \u003e /docker_repo_version \u0026\u0026 rm -rf /tmp/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": null,
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "dumb-init",
            "--",
            "serverctl",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}