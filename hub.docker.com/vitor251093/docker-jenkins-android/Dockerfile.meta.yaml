MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: VitorMM <vitor251093@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo "debconf shared/accepted-oracle-license-v1-1 select true" | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "debconf shared/accepted-oracle-license-v1-1 seen true" | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install wget tmux build-essential software-properties-common python-software-properties
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:webupd8team/java
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install oracle-java8-installer -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install oracle-java8-set-default -y
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: PATH
      Value: $JAVA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get install unzip -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --progress=dot:giga https://services.gradle.org/distributions/gradle-2.14.1-bin.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip gradle-2.14.1-bin.zip -d /opt/gradle
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle/gradle-2.14.1
    Name: env
  - Env:
    - Key: PATH
      Value: $GRADLE_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get install -y git-core
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://pkg.jenkins-ci.org/debian-stable binary/" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/data
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - service jenkins stop
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "48429"
    - "8080"
  - Name: volume
    Volumes:
    - /var/lib/jenkins
  - Name: user
    User: jenkins
  - CmdLine:
    - java
    - -jar
    - /usr/share/jenkins/jenkins.war
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: root
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install wget tmux build-essential software-properties-common python-software-properties
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/android
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/android/android-sdk-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --progress=dot:giga $(wget --quiet -O - http://developer.android.com/sdk/index.html
      | grep -o -E https://dl\.google\.com/android/repository/sdk-tools-linux-[0-9]+\.zip
      | head -1)
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip -o $(ls | grep -o -E sdk-tools-linux-[0-9]+\.zip | head -1) -d /opt/android/android-sdk-linux
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android/android-sdk-linux
    Name: env
  - Env:
    - Key: PATH
      Value: $ANDROID_HOME/tools:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $ANDROID_HOME/emulator/lib64/gles_mesa:$ANDROID_HOME/emulator/lib64/qt/lib
    Name: env
  - CmdLine:
    - chmod -R 755 $ANDROID_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $ANDROID_HOME/licenses/
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh -c "echo -e \"\n8933bad161af4178b1185d1a37fbf41ea5269c55\" > $ANDROID_HOME/licenses/android-sdk-license"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh -c "echo -e \"\n84831b9409646a918e30573bab4c9c91346d8abd\" > $ANDROID_HOME/licenses/android-sdk-preview-license"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "emulator"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-23"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "platform-tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "build-tools;23.0.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "build-tools;25.0.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-23;default;x86_64"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-23;google_apis;armeabi-v7a"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-23;google_apis;x86"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-23;google_apis;x86_64"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;google;m2repository"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;android;m2repository"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libx11-dev libxdamage-dev cpu-checker qemu-kvm -y
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/avdmanager create avd -n Nexus5_API23 -k "system-images;android-23;default;x86_64"
      --device 34
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 -y
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
