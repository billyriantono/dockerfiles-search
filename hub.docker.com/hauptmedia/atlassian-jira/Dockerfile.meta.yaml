MetaArgs: null
Stages:
- BaseName: hauptmedia/java:oracle-java8
  Commands:
  - Maintainer: Julian Haupt <julian.haupt@hauptmedia.de>
    Name: maintainer
  - Env:
    - Key: JIRA_VERSION
      Value: 7.11.0
    Name: env
  - Env:
    - Key: MYSQL_CONNECTOR_J_VERSION
      Value: 5.1.45
    Name: env
  - Env:
    - Key: JIRA_HOME
      Value: /var/atlassian/application-data/jira
    Name: env
  - Env:
    - Key: JIRA_INSTALL_DIR
      Value: /opt/atlassian/jira
    Name: env
  - Env:
    - Key: RUN_USER
      Value: daemon
    Name: env
  - Env:
    - Key: RUN_GROUP
      Value: daemon
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get update && \t\tapt-get install -y --no-install-recommends curl tar xmlstarlet
      ca-certificates ca-certificates-java && \t\tapt-get clean autoclean &&         \tapt-get
      autoremove --yes &&         \trm -rf /var/lib/{apt,dpkg,cache,log}/"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p ${JIRA_INSTALL_DIR} && \t\tcurl -L --silent https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-${JIRA_VERSION}.tar.gz
      | tar -xz --strip=1 -C ${JIRA_INSTALL_DIR} && \t\techo -e \"\\njira.home=$JIRA_HOME\"
      >> \"${JIRA_INSTALL_DIR}/atlassian-jira/WEB-INF/classes/jira-application.properties\"
      && \t\tchown -R ${RUN_USER}:${RUN_GROUP} ${JIRA_INSTALL_DIR}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L --silent http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_CONNECTOR_J_VERSION}.tar.gz
      | tar -xz --strip=1 -C /tmp && \t\tcp /tmp/mysql-connector-java-${MYSQL_CONNECTOR_J_VERSION}-bin.jar
      ${JIRA_INSTALL_DIR}/lib && \t\trm -rf /tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - export KEYSTORE=$JAVA_HOME/jre/lib/security/cacerts &&         wget -P /tmp/
      https://letsencrypt.org/certs/letsencryptauthorityx1.der &&         wget -P
      /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der &&         wget
      -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der &&         wget
      -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der &&         wget
      -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der &&         wget
      -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der &&         keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der &&         keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2
      -file /tmp/letsencryptauthorityx2.der &&         keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1
      -file /tmp/lets-encrypt-x1-cross-signed.der &&         keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2
      -file /tmp/lets-encrypt-x2-cross-signed.der &&         keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3
      -file /tmp/lets-encrypt-x3-cross-signed.der &&         keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4
      -file /tmp/lets-encrypt-x4-cross-signed.der
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - ${JIRA_INSTALL_DIR}/bin/
  - Name: user
    User: ${RUN_USER}:${RUN_GROUP}
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: ${JIRA_INSTALL_DIR}
  - CmdLine:
    - bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bin/start-jira.sh
    - -fg
    Name: cmd
    PrependShell: false
  From:
    Image: hauptmedia/java:oracle-java8
  Name: ""
  Platform: ""
  SourceCode: "FROM\t\thauptmedia/java:oracle-java8"
