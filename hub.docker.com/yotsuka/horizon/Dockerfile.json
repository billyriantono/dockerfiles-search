{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Key": "depends",
          "Name": "arg",
          "Value": "\"apache2 apache2-mod-wsgi py-pip\""
        },
        {
          "Key": "make_depends",
          "Name": "arg",
          "Value": "\"build-base git linux-headers openssl-dev python-dev\""
        },
        {
          "Key": "repository",
          "Name": "arg",
          "Value": "\"https://git.openstack.org/openstack/horizon.git\""
        },
        {
          "Key": "tag",
          "Name": "arg",
          "Value": "\"10.0.1\""
        },
        {
          "Name": "workdir",
          "Path": "/opt/horizon"
        },
        {
          "CmdLine": [
            "apk add --no-cache $depends \u0026\u0026 apk add --no-cache $make_depends \u0026\u0026 git clone $repository . \u0026\u0026 git checkout -b $tag refs/tags/$tag \u0026\u0026 pip install --no-cache-dir --upgrade pip \u0026\u0026 pip install --no-cache-dir -r requirements.txt \u0026\u0026 pip install --no-cache-dir python-memcached \u0026\u0026 mkdir -p /run/apache2 \u0026\u0026 ./manage.py collectstatic --noinput \u0026\u0026 ./manage.py make_web_conf --wsgi \u0026\u0026 ./manage.py make_web_conf --apache \u003e /etc/apache2/conf.d/horizon.conf \u0026\u0026 sed -i \"/openstack_dashboard_website/d\" /etc/apache2/conf.d/horizon.conf \u0026\u0026 chown -R apache:apache . \u0026\u0026 apk del --no-cache $make_depends \u0026\u0026 rm -rf .git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "httpd -D FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}