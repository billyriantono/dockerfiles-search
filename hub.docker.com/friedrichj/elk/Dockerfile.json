{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "friedrichj/java8",
      "SourceCode": "FROM friedrichj/java8",
      "Platform": "",
      "From": {
        "Image": "friedrichj/java8"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update curl ca-certificates sudo supervisor \u0026\u0026 \taddgroup sudo \u0026\u0026 \techo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers \u0026\u0026 \tmkdir /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_VERSION",
              "Value": "2.3.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -Lskj https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/$ELASTICSEARCH_VERSION/elasticsearch-$ELASTICSEARCH_VERSION.tar.gz | tar xfz - \u0026\u0026 \tmv /elasticsearch-$ELASTICSEARCH_VERSION /opt/elasticsearch \u0026\u0026 \trm -rf $(find /opt/elasticsearch | egrep \"(\\.(exe|bat)$|sigar/.*(dll|winnt|x86-linux|solaris|ia64|freebsd|macosx))\") \u0026\u0026 \tadduser -D -g '' -G sudo -s /sbin/nologin elasticsearch \u0026\u0026 \tmkdir -p /data/elasticsearch \u0026\u0026 \tchown -R elasticsearch /opt/elasticsearch /data/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_VERSION",
              "Value": "2.3.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache bash libzmq \u0026\u0026 \tcd /usr/lib \u0026\u0026 ln -sf libzmq.so.5 libzmq.so \u0026\u0026 cd / \u0026\u0026 \tcurl -Lskj http://download.elastic.co/logstash/logstash/logstash-$LOGSTASH_VERSION.tar.gz | tar xfz - \u0026\u0026   \tmv logstash-$LOGSTASH_VERSION /opt/logstash \u0026\u0026   \trm -rf $(find /opt/logstash | egrep \"(\\.(exe|bat)$|sigar/.*(dll|winnt|x86-linux|solaris|ia64|freebsd|macosx))\")"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "4.5.2-linux-x64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache nodejs \u0026\u0026 \tcurl -s https://download.elasticsearch.org/kibana/kibana/kibana-${KIBANA_VERSION}.tar.gz | tar xfz - \u0026\u0026 \tmv /kibana-${KIBANA_VERSION} /opt/kibana \u0026\u0026     rm -rf /opt/kibana/node \u0026\u0026     mkdir -p /opt/kibana/node/bin \u0026\u0026     ln -sf /usr/bin/node /opt/kibana/node/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/*",
            "/opt/elasticsearch/config/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash.conf",
            "/opt/logstash/config/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2120",
            "5601"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisord.conf"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}