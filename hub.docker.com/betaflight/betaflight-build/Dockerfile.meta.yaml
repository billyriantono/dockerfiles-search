MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: betaflight
    Name: maintainer
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y full-upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common
      git make ccache python curl bzip2 gcc clang libblocksruntime-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:team-gcc-arm-embedded/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install gcc-arm-embedded
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/betaflight
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/betaflight
  - Env:
    - Key: ARM_SDK_DIR
      Value: '"/usr/"'
    Name: env
  - CmdLine:
    - if [ -z ${TARGET} ]; then         TARGET="BETAFLIGHTF3";     fi &&     EXTRA_OPTIONS=""
      &&     if [ -n ${OPTIONS} ]; then         EXTRA_OPTIONS="OPTIONS=${OPTIONS}";     fi
      &&     if [ ${TARGET} = test ]; then         make ARM_SDK_DIR=${ARM_SDK_DIR}
      clean_test &&         make ARM_SDK_DIR=${ARM_SDK_DIR} test ${EXTRA_OPTIONS};     elif
      [ ${TARGET} = all ]; then         make ARM_SDK_DIR=${ARM_SDK_DIR} clean_all
      &&         make ARM_SDK_DIR=${ARM_SDK_DIR} all ${EXTRA_OPTIONS};     else         make
      ARM_SDK_DIR=${ARM_SDK_DIR} clean TARGET=${TARGET} &&         make ARM_SDK_DIR=${ARM_SDK_DIR}
      TARGET=${TARGET} ${EXTRA_OPTIONS};     fi
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
