{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker",
      "SourceCode": "FROM docker",
      "Platform": "",
      "From": {
        "Image": "docker"
      },
      "Commands": [
        {
          "Maintainer": "William Hearn \u003csylus1984@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk --update add     bash     ca-certificates     curl     git     make     openssh-client     patch     tar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lo /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \u0026\u0026     curl -Lo glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk \u0026\u0026     curl -Lo glibc-bin.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk \u0026\u0026     apk add glibc.apk glibc-bin.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache --update --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main add     libressl \u0026\u0026     apk --no-cache --update --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community add     php7     php7-xml     php7-xsl     php7-pdo_mysql     php7-mcrypt     php7-curl     php7-json     php7-fpm     php7-phar     php7-openssl     php7-mysqli     php7-ctype     php7-opcache     php7-mbstring     php7-zip     php7-zlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /etc/php7 /etc/php \u0026\u0026     ln -s /usr/bin/php7 /usr/bin/php \u0026\u0026     ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm \u0026\u0026     ln -s /usr/lib/php7 /usr/lib/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lo docker-compose https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64 \u0026\u0026     chmod +x docker-compose \u0026\u0026     mv docker-compose /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lo jira https://github.com/Netflix-Skunkworks/go-jira/releases/download/v0.1.9/jira-linux-amd64 \u0026\u0026     chmod +x jira \u0026\u0026     mv jira /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e 'Host *\\nUseRoaming no' \u003e\u003e /etc/ssh/ssh_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}