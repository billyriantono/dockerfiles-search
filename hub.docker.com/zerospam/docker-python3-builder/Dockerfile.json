{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6.2-alpine3.6",
      "SourceCode": "FROM python:3.6.2-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6.2-alpine3.6"
      },
      "Commands": [
        {
          "Key": "BLAS_VERSION",
          "Name": "arg",
          "Value": "3.7.1"
        },
        {
          "Key": "LAPACK_VERSION",
          "Name": "arg",
          "Value": "3.7.1"
        },
        {
          "Key": "NUMPY_VERSION",
          "Name": "arg",
          "Value": "1.13.1"
        },
        {
          "Key": "H5PY_VERSION",
          "Name": "arg",
          "Value": "2.7.0"
        },
        {
          "Key": "SCIPY_VERSION",
          "Name": "arg",
          "Value": "0.19.1"
        },
        {
          "Labels": [
            {
              "Key": "ca.zerospam.python3.builder",
              "Value": "\"1.4.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"ZEROSPAM\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "ca.zerospam.python3.builder.release-date",
              "Value": "\"2017-08-28\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk --no-cache add hdf5 hdf5-dev libffi-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/       \u0026\u0026 apk --update --no-cache --virtual .build-dep add       build-base       \u0026\u0026 pip install --upgrade pip       \u0026\u0026 pip install cython       \u0026\u0026 pip install pytest       \u0026\u0026 pip install numpy==${NUMPY_VERSION}       \u0026\u0026 pip install h5py==${H5PY_VERSION}       \u0026\u0026 apk del --purge hdf5-dev zlib-dev       \u0026\u0026 rm -rf ~/.cache/pip/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache              ca-certificates             libstdc++             libgfortran       \u0026\u0026 apk add --virtual=build_dependencies             gfortran       \u0026\u0026 ln -s /usr/include/locale.h /usr/include/xlocale.h       \u0026\u0026 mkdir -p /tmp/build       \u0026\u0026 cd /tmp/build/       \u0026\u0026 wget http://www.netlib.org/blas/blas-${BLAS_VERSION}.tgz       \u0026\u0026 wget http://www.netlib.org/lapack/lapack-${LAPACK_VERSION}.tgz       \u0026\u0026 tar xzf blas-${BLAS_VERSION}.tgz       \u0026\u0026 tar xzf lapack-${LAPACK_VERSION}.tgz       \u0026\u0026 cd /tmp/build/BLAS-${BLAS_VERSION}/       \u0026\u0026 gfortran -O3 -std=legacy -m64 -fno-second-underscore -fPIC -c *.f       \u0026\u0026 ar r libfblas.a *.o       \u0026\u0026 ranlib libfblas.a       \u0026\u0026 mv libfblas.a /tmp/build/.       \u0026\u0026 cd /tmp/build/lapack-${LAPACK_VERSION}/       \u0026\u0026 sed -e \"s/frecursive/fPIC/g\" -e \"s/ \\.\\.\\// /g\" -e \"s/^CBLASLIB/\\#CBLASLIB/g\" make.inc.example \u003e make.inc       \u0026\u0026 make lapacklib       \u0026\u0026 mv liblapack.a /tmp/build/.       \u0026\u0026 cd /       \u0026\u0026 export BLAS=/tmp/build/libfblas.a       \u0026\u0026 export LAPACK=/tmp/build/liblapack.a       \u0026\u0026 pip install scipy==${SCIPY_VERSION}       \u0026\u0026 apk del --purge -r build_dependencies       \u0026\u0026 rm -rf /tmp/build  ~/.cache/pip/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}