MetaArgs: null
Stages:
- BaseName: fedora:22
  Commands:
  - Key: version
    Name: arg
    Value: "7.2"
  - Env:
    - Key: CONFIG_EXCLUDE
      Value: ^apm\.|^extension_dir|^sendmail_path|auto_prepend_file|^ic24.sec.initial_cache_all
    Name: env
  - Env:
    - Key: PECL_PACKAGES
      Value: apcu|apm|imagick|oauth|pdo_sqlsrv|redis|sqlsrv
    Name: env
  - Env:
    - Key: BUILDDEPS
      Value: aspell-devel         bzip2-devel         curl-devel         db4-devel         freetds-devel         freetype-devel         gmp-devel         ImageMagick-devel         krb5-devel         libXpm-devel         libc-client-devel         libcurl-devel         libjpeg-devel         libmcrypt-devel         libpng-devel         libtidy-devel         libxml2-devel         libxslt-devel         mhash-devel         mysql-devel         ncurses-devel         net-snmp-devel         openldap-devel         openssl-devel         pcre-devel         postgresql-devel         readline-devel         recode-devel         sqlite-devel         t1lib-devel         unixODBC-devel         zlib-devel
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -o
    - pipefail
    - -c
  - Env:
    - Key: PATH
      Value: $PATH:/opt/php/bin
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"${version}"-config'
    - /usr/src/config
  - CmdLine:
    - '. /usr/src/config;         touch /var/lib/rpm/*         && dnf -y upgrade --setopt=deltarpm=false         &&
      dnf -y group install "C Development Tools and Libraries"         && dnf -y install         ${BUILDDEPS}         file         wget         xz;         curl
      --silent --location --output /etc/yum.repos.d/mssql-release.repo https://packages.microsoft.com/config/rhel/7/prod.repo;         ACCEPT_EULA=Y
      dnf install -y msodbcsql;                 cd /usr/src || exit;         curl
      --silent --location --output php.tar.xz "http://us1.php.net/get/php-${EXACT_VERSION}.tar.xz/from/this/mirror";         tar
      xf php.tar.xz;         cd /usr/src/php-* || exit;         ./configure ${CLI_CONFIGURE_OPTIONS};         make
      -j "$(nproc)";         make install;                 echo "${CLI_INI}" > "/opt/php/etc/php.ini";         ln
      -s /usr/lib64/mysql/libmysqlclient* /usr/lib/;         pear config-set php_ini
      /opt/php/etc/php.ini;         yes '''' | pecl install --force $(echo "${EXTENSIONS_VERSIONS}"
      | grep -Eio "(${PECL_PACKAGES})-[0-9]\\.[0-9]\\.[0-9]");         mv /opt/php/lib/[0-9]*/*
      /opt/php/lib;         if [[ ${EXTENSIONS} == *"ionCube Loader"* ]]; then         mkdir
      -p /opt/pantheon/ioncube/10.0.3/;         curl --silent --location http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
      | tar xvz --directory /opt/pantheon/ioncube/10.0.3/ --strip-components=1;         fi;         EXT=$(grep
      ''^extension='' /opt/php/etc/php.ini | tr -d ''"'' | sort -u);         sed -i''''
      /opt/php/etc/php.ini -e ''s/^extension=.*//g'';         echo "${EXT}" >> /opt/php/etc/php.ini;                 rm
      -rf /usr/src/*;         dnf -y group remove "C Development Tools and Libraries";         dnf
      clean all;                 if ! diff -uw /etc/redhat-release <(echo "${DISTRO}");
      then echo "Distro does not match expected"; exit 1; fi;         if ! diff -uw
      <(php -r ''$e = get_loaded_extensions(); sort($e); print(implode(PHP_EOL, $e));'')
      <(echo "${EXTENSIONS}"); then echo "PHP extensions do not match expected"; exit
      2; fi;         if ! diff -uw         <(php -r ''foreach (ini_get_all() as $k
      => $v) { print "$k: $v[''global_value'']\n"; }'' | grep -Ev "($CONFIG_EXCLUDE)")         <(echo
      "${CONFIG}" | grep -Ev "($CONFIG_EXCLUDE)");         then echo "PHP config does
      not match expected"; exit 3; fi'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/php/etc
  - CmdLine:
    - if [ -d php-fpm.d ]; then         sed 's!=NONE/!=!g' php-fpm.conf.default |
      tee php-fpm.conf > /dev/null;         cp php-fpm.d/www.conf.default php-fpm.d/www.conf;         else         mkdir
      php-fpm.d;         cp php-fpm.conf.default php-fpm.d/www.conf;         {         echo
      '[global]';         echo 'include=etc/php-fpm.d/*.conf';         } | tee php-fpm.conf;         fi         &&
      {         echo '[global]';         echo 'error_log = /proc/self/fd/2';         echo;         echo
      '[www]';         echo '; if we send this to /proc/self/fd/1, it never appears';         echo
      'access.log = /proc/self/fd/2';         echo;         echo 'clear_env = no';         echo;         echo
      '; Ensure worker stdout and stderr are sent to the main error log.';         echo
      'catch_workers_output = yes';         } | tee php-fpm.d/docker.conf         &&
      {         echo '[global]';         echo 'daemonize = no';         echo;         echo
      '[www]';         echo 'listen = 9000';         } | tee php-fpm.d/zz-docker.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/php/sbin/php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: fedora:22
  Name: ""
  Platform: ""
  SourceCode: FROM fedora:22
