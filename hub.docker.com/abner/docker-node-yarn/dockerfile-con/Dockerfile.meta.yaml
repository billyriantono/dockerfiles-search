MetaArgs: null
Stages:
- BaseName: centos/s2i-base-centos7
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Env:
    - Key: PYTHON_VERSION
      Value: "3.6"
    - Key: PATH
      Value: $HOME/.local/bin/:$PATH
    - Key: PYTHONUNBUFFERED
      Value: "1"
    - Key: PYTHONIOENCODING
      Value: UTF-8
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: PIP_NO_CACHE_DIR
      Value: "off"
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: NB_USER
      Value: nbuser
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1011"
    Name: env
  - Env:
    - Key: NB_PYTHON_VER
      Value: "3.6"
    Name: env
  - Env:
    - Key: MINICONDA_VERSION
      Value: Miniconda3-latest-Linux-x86_64.sh
    Name: env
  - Env:
    - Key: SUMMARY
      Value: '"Platform for building and running Python $PYTHON_VERSION applications"'
    - Key: DESCRIPTION
      Value: '"Python $PYTHON_VERSION available as container is a base platform for
        building and running various Python $PYTHON_VERSION applications and frameworks.
        Python is an easy to learn, powerful programming language. It has efficient
        high-level data structures and a simple but effective approach to object-oriented
        programming. Python''s elegant syntax and dynamic typing, together with its
        interpreted nature, make it an ideal language for scripting and rapid application
        development in many areas on most platforms."'
    Name: env
  - Labels:
    - Key: summary
      Value: '"$SUMMARY"'
    - Key: description
      Value: '"$DESCRIPTION"'
    - Key: io.k8s.description
      Value: '"$DESCRIPTION"'
    - Key: io.k8s.display-name
      Value: '"Python 3.6"'
    - Key: io.openshift.expose-services
      Value: '"8080:http"'
    - Key: io.openshift.tags
      Value: '"builder,python,python36,rh-python36"'
    - Key: com.redhat.component
      Value: '"python36-container"'
    - Key: name
      Value: '"centos/python-36-centos7"'
    - Key: version
      Value: '"1"'
    - Key: usage
      Value: '"s2i build https://github.com/sclorg/s2i-python-container.git --context-dir=3.6/test/setup-test-app/
        centos/python-36-centos7 python-sample-app"'
    - Key: maintainer
      Value: '"SoftwareCollections.org <sclorg@redhat.com>"'
    Name: label
  - CmdLine:
    - INSTALL_PKGS="rh-python36 rh-python36-python-devel rh-python36-python-setuptools
      rh-python36-python-pip nss_wrapper         httpd24 httpd24-httpd-devel httpd24-mod_ssl
      httpd24-mod_auth_kerb httpd24-mod_ldap         httpd24-mod_session atlas-devel
      gcc-gfortran libffi-devel libtool-ltdl enchant" &&     yum install -y centos-release-scl
      &&     yum -y --setopt=tsflags=nodocs install --enablerepo=centosplus $INSTALL_PKGS
      &&     rpm -V $INSTALL_PKGS &&     rpm -e --nodeps centos-logos &&     yum -y
      clean all --enablerepo='*'
    Name: run
    PrependShell: true
  - CmdLine:
    - "yum install -y curl wget java-headless bzip2 gnupg2 sqlite3     && yum clean
      all -y     && cd /tmp     && wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      \    && bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_DIR     && rm Miniconda3-latest-Linux-x86_64.sh
      \    && export PATH=/opt/conda/bin:$PATH     && yum install -y gcc gcc-c++ glibc-devel
      \    && /opt/conda/bin/conda install --quiet --yes python=$NB_PYTHON_VER 'nomkl'
      \t\t\t    'ipywidgets=5.2*' \t\t\t    'matplotlib' \t\t\t    'scipy' \t\t\t
      \   'seaborn' \t\t\t    'cloudpickle' \t\t\t    statsmodels \t\t\t    pandas
      \t\t\t    'dill' \t\t\t    notebook \t\t\t    jupyter           py4j           pyspark
      \    && pip install pystan     && pip install widgetsnbextension fbprophet     &&
      yum erase -y gcc gcc-c++ glibc-devel     && yum clean all -y     && rm -rf /root/.npm
      \    && rm -rf /root/.cache     && rm -rf /root/.config     && rm -rf /root/.local
      \    && rm -rf /root/tmp     && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER
      \    && usermod -g root $NB_USER     && chown -R $NB_USER $CONDA_DIR     &&
      conda remove --quiet --yes --force --feature mkl ; conda clean -tipsy"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - yum install -y  java-1.8.0-openjdk     && yum clean all &&     rpm -q  java-1.8.0-openjdk
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - spark-2.3.0-bin-hadoop2.7.tgz
    - /tmp/artifacts/
  - CmdLine:
    - mkdir /notebooks && chown $NB_UID:root /notebooks && chmod 1777 /notebooks
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - mkdir -p -m 700 /home/$NB_USER/.jupyter/ &&     echo "c.NotebookApp.ip = '*'"
      >> /home/$NB_USER/.jupyter/jupyter_notebook_config.py &&     echo "c.NotebookApp.open_browser
      = False" >> /home/$NB_USER/.jupyter/jupyter_notebook_config.py &&     echo "c.NotebookApp.notebook_dir
      = '/notebooks'" >> /home/$NB_USER/.jupyter/jupyter_notebook_config.py &&     chown
      -R $NB_UID:root /home/$NB_USER &&     chmod g+rwX,o+rX -R /home/$NB_USER
    Name: run
    PrependShell: true
  - Labels:
    - Key: io.k8s.description
      Value: '"PySpark Jupyter Notebook."'
    - Key: io.k8s.display-name
      Value: '"PySpark Jupyter Notebook."'
    - Key: io.openshift.expose-services
      Value: '"8888:http"'
    Name: label
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc
    - /tini.asc
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 0527A9B7 && gpg --verify
      /tini.asc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - export PYTHONPATH=$SPARK_HOME/python:$(echo $SPARK_HOME/python/lib/py4j-*-src.zip)
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tini /start.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Name: user
    User: $NB_UID
  - Name: workdir
    Path: /notebooks
  - Chown: ""
    Name: add
    SourcesAndDest:
    - app.py
    - /notebooks/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - test-app2.ipynb
    - /notebooks/
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: centos/s2i-base-centos7
  Name: ""
  Platform: ""
  SourceCode: FROM centos/s2i-base-centos7
