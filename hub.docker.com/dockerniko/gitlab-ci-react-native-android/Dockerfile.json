{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install software-properties-common     python-software-properties     wget     curl     git     lftp     unzip -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026   add-apt-repository -y ppa:webupd8team/java \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y oracle-java8-installer \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   rm -rf /var/cache/oracle-jdk8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_VERSION",
              "Value": "r24.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_BUILD_TOOLS_VERSION",
              "Value": "build-tools-25.0.2,build-tools-23.0.2,build-tools-23.0.3,build-tools-23.0.1,build-tools-26.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_FILENAME",
              "Value": "android-sdk_${ANDROID_SDK_VERSION}-linux.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "http://dl.google.com/android/${ANDROID_SDK_FILENAME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_API_LEVELS",
              "Value": "android-26,android-25,android-23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_EXTRA_COMPONENTS",
              "Value": "extra-android-m2repository,extra-google-m2repository"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget -q ${ANDROID_SDK_URL} \u0026\u0026     tar -xzf ${ANDROID_SDK_FILENAME} \u0026\u0026     rm ${ANDROID_SDK_FILENAME} \u0026\u0026     echo y | android update sdk --no-ui -a --filter tools,platform-tools,${ANDROID_API_LEVELS},${ANDROID_BUILD_TOOLS_VERSION} \u0026\u0026     echo y | android update sdk --no-ui --all --filter \"${ANDROID_EXTRA_COMPONENTS}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "3.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/lib  \u0026\u0026 curl -fl https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -o gradle-bin.zip  \u0026\u0026 unzip \"gradle-bin.zip\"  \u0026\u0026 ln -s \"/usr/lib/gradle-${GRADLE_VERSION}/bin/gradle\" /usr/bin/gradle  \u0026\u0026 rm \"gradle-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/lib/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     wget -q http://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz \u0026\u0026     tar -xzf node-v${NODE_VERSION}-linux-x64.tar.gz \u0026\u0026     mv node-v${NODE_VERSION}-linux-x64 /opt/node \u0026\u0026     rm node-v${NODE_VERSION}-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/node/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install react-native-cli -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install yarn -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}