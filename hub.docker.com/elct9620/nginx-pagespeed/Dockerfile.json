{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "蒼時弦也 \"docker@frost.tw\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.13.35.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.0.2h"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MODULE_DIR",
              "Value": "/usr/src/nginx-modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_TEMPLATE_DIR",
              "Value": "/usr/src/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_RUNTIME_DIR",
              "Value": "/usr/src/runtime"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSL_CERTS_DIR",
              "Value": "/usr/certs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"#!/bin/sh\\nexit 0\" \u003e /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -- \"s/# deb-src/deb-src/g\" /etc/apt/sources.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install wget uuid-dev -y \u0026\u0026     apt-get build-dep nginx -y \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     mkdir ${MODULE_DIR} \u0026\u0026     cd /usr/src \u0026\u0026     wget -q http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     tar xzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     rm -rf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     cd /usr/src \u0026\u0026     wget -q http://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     tar xzf openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     rm -rf openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     cd ${MODULE_DIR} \u0026\u0026     wget -q https://github.com/apache/incubator-pagespeed-ngx/archive/v${NPS_VERSION}-stable.tar.gz \u0026\u0026     tar zxf v${NPS_VERSION}-stable.tar.gz \u0026\u0026     rm -rf v${NPS_VERSION}-stable.tar.gz \u0026\u0026     cd incubator-pagespeed-ngx-${NPS_VERSION}-stable/ \u0026\u0026     wget -q https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}-x64.tar.gz \u0026\u0026     tar zxf ${NPS_VERSION}-x64.tar.gz \u0026\u0026     rm -rf ${NPS_VERSION}-x64.tar.gz \u0026\u0026     cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026     ./configure     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --with-http_ssl_module     --with-http_realip_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_secure_link_module     --with-http_v2_module     --with-threads     --with-file-aio     --with-ipv6     --with-openssl=\"../openssl-${OPENSSL_VERSION}\"     --add-module=${MODULE_DIR}/incubator-pagespeed-ngx-${NPS_VERSION}-stable     \u0026\u0026 cd /usr/src/nginx-${NGINX_VERSION}     \u0026\u0026 make \u0026\u0026 make install      \u0026\u0026 mkdir -p /var/www/html      \u0026\u0026 mkdir -p /etc/nginx/conf.d      \u0026\u0026 mkdir -p /usr/share/nginx/html     \u0026\u0026 mkdir -p /var/cache/nginx     \u0026\u0026 mkdir -p /var/cache/ngx_pagespeed     \u0026\u0026 install -m644 html/index.html /var/www/html      \u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html     \u0026\u0026 rm -rf /usr/src/*     \u0026\u0026 mkdir -p ${NGINX_TEMPLATE_DIR}     \u0026\u0026 mkdir -p ${NGINX_RUNTIME_DIR}     \u0026\u0026 mkdir -p ${SSL_CERTS_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx",
            "/var/cache/ngx_pagespeed",
            "/var/www/html",
            "/usr/certs"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "template/",
            "${NGINX_TEMPLATE_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "runtime/",
            "${NGINX_RUNTIME_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}