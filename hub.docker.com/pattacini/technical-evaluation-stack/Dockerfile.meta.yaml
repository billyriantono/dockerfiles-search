MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"ugo.pattacini@iit.it"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y apt-utils software-properties-common apt-transport-https sudo     psmisc
      lsb-release tmux nano wget curl telnet build-essential gdb git gitk     libedit-dev
      libxml2-dev autoconf gdebi
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O hyper.deb https://releases.hyper.is/download/deb &&     gdebi -n hyper.deb
      &&     rm hyper.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | apt-key add
      - &&     apt-add-repository "deb https://packages.microsoft.com/repos/vscode
      stable main" &&     apt update &&     apt install -y code
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y ca-certificates gnupg &&     wget -q https://apt.kitware.com/keys/kitware-archive-latest.asc
      -O- | apt-key add - &&     apt-add-repository "deb https://apt.kitware.com/ubuntu/
      `lsb_release -cs` main" &&     apt update &&     apt install -y kitware-archive-keyring
      &&     apt-key --keyring /etc/apt/trusted.gpg del C1F34CDD40CD72DA &&     apt
      install -y cmake cmake-curses-gui
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y xfce4 xfce4-goodies xserver-xorg-video-dummy xserver-xorg-legacy
      firefox
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/allowed_users=console/allowed_users=anybody/' /etc/X11/Xwrapper.config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - xorg.conf
    - /etc/X11/xorg.conf
  - CmdLine:
    - sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list &&     apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/LibVNC/x11vnc.git /opt/x11vnc &&     cd /opt/x11vnc
      &&     apt build-dep -y x11vnc &&     autoreconf -fiv &&     ./configure &&     make
      && make install &&     rm /opt/x11vnc -Rf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y octave epstool transfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global markserv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y python3 python3-dev python3-pip python3-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install ipython jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/novnc/websockify.git /opt/websockify &&     cd
      /opt/websockify &&     python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/novnc/noVNC.git /opt/novnc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://www.icub.org/ubuntu `lsb_release -cs` contrib/science" > /etc/apt/sources.list.d/icub.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 57A5ACB6110576A6
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y icub-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings
    Name: run
    PrependShell: true
  - Key: BRANCH
    Name: arg
    Value: devel
  - Key: BUILD_TYPE
    Name: arg
    Value: Release
  - CmdLine:
    - git clone https://github.com/robotology/ycm.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ycm && mkdir build && cd build &&     cmake ..     -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf ycm
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robotology/robot-testing-framework.git -b $BRANCH
    Name: run
    PrependShell: true
  - CmdLine:
    - cd robot-testing-framework && mkdir build && cd build &&     cmake ..     -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf robot-testing-framework
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robotology/yarp.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd yarp && mkdir build && cd build &&     cmake ..     -DCMAKE_BUILD_TYPE=$BUILD_TYPE     -DYARP_COMPILE_libYARP_math=ON     -DYARP_COMPILE_CARRIER_PLUGINS=ON     -DYARP_COMPILE_DEVICE_PLUGINS=ON     -DYARP_COMPILE_GUIS=ON
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cp yarp/scripts/yarp_completion /etc/bash_completion.d/.
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf yarp
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robotology/icub-main.git -b $BRANCH
    Name: run
    PrependShell: true
  - CmdLine:
    - cd icub-main && mkdir build && cd build &&     cmake ..     -DCMAKE_BUILD_TYPE=$BUILD_TYPE     -DENABLE_icubmod_cartesiancontrollerserver=ON     -DENABLE_icubmod_cartesiancontrollerclient=ON     -DENABLE_icubmod_gazecontrollerclient=ON
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf icub-main
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robotology/icub-contrib-common.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd icub-contrib-common && mkdir build && cd build &&     cmake .. &&     make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf icub-contrib-common
    Name: run
    PrependShell: true
  - Key: GITHUB_TOKEN
    Name: arg
    Value: null
  - CmdLine:
    - git config --global url."https://$GITHUB_TOKEN:@github.com/".insteadOf "https://github.com/"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/dic-iit/audition-projects-helpers.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global --remove-section url."https://$GITHUB_TOKEN:@github.com/"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd audition-projects-helpers && mkdir build && cd build &&     cmake ..     -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf audition-projects-helpers
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PS1='\[\e]0;\u \w\a\]\[\033[01;32m\]\u\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\]
      \$ '" >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: DISPLAY
      Value: :1
    Name: env
  - Env:
    - Key: YARP_DATA_DIRS
      Value: /usr/local/share/yarp:/usr/local/share/iCub:/usr/local/share/ICUBcontrib
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib:/usr/local/lib/yarp:/usr/local/lib/robottestingframework
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Hyper.desktop
    - /root/Desktop/Hyper.desktop
  - CmdLine:
    - chmod +x /root/Desktop/Hyper.desktop
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Visual Studio Code.desktop
    - /home/root/Desktop/Visual Studio Code.desktop
  - CmdLine:
    - chmod +x "/home/root/Desktop/Visual Studio Code.desktop"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "5901"
  - Name: expose
    Ports:
    - "6080"
  - Name: expose
    Ports:
    - 10000/tcp
    - 10000/udp
  - Name: workdir
    Path: /projects
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
