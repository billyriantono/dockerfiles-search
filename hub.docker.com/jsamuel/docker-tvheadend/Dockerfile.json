{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Joshua Samuel \u003cjsamuel@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTS_COMMIT",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "s6_overlay_version",
              "Value": "\"1.10.0.3\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/just-containers/s6-overlay/releases/download/v${s6_overlay_version}/s6-overlay-amd64.tar.gz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar zxf /tmp/s6-overlay-amd64.tar.gz -C / \u0026\u0026 $_clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "S6_LOGGING",
              "Value": "\"1\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/jpetazzo/pipework/archive/master.tar.gz",
            "/tmp/pipework-master.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "tar -zxf /tmp/pipework-master.tar.gz -C /tmp \u0026\u0026 cp /tmp/pipework-master/pipework /sbin/ \u0026\u0026 $_clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -m -y wget git curl make dkms dpkg-dev     debconf-utils software-properties-common     build-essential hdhomerun-config libhdhomerun-dev debhelper libswscale-dev     libavahi-client-dev libavformat-dev libavcodec-dev liburiparser-dev     libssl-dev libiconv-hook1 libiconv-hook-dev python bzip2 zlib1g-dev     libavutil-dev libavresample-dev libavahi-client3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/tvheadend/tvheadend.git /srv/tvheadend   \u0026\u0026 cd /srv/tvheadend \u0026\u0026 git checkout ${HTS_COMMIT} \u0026\u0026 ./configure --enable-libffmpeg_static \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -r /srv/tvheadend \u0026\u0026 apt-get purge -qq build-essential pkg-config git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /config/.etc \u0026\u0026 mv /etc/timezone /config/.etc/ \u0026\u0026 ln -s /config/.etc/timezone /etc/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /config/.var/lib/locales/ /config/.usr/lib/  \u0026\u0026 mv /var/lib/locales/supported.d /config/.var/lib/locales/  \u0026\u0026 mv /usr/lib/locale /config/.usr/lib/  \u0026\u0026 ln -s /config/.var/lib/locales/supported.d /var/lib/locales/  \u0026\u0026 ln -s /config/.usr/lib/locale /usr/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos '' hts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupmod -o -g 9981 hts  \u0026\u0026 usermod -o -u 9981 -a -G video -d /config hts  \u0026\u0026 install -o hts -g hts -d /config /recordings"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/recordings"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9981",
            "9982"
          ]
        },
        {
          "CmdLine": [
            "/init",
            "/entrypoint.sh",
            "-C",
            "-u",
            "hts",
            "-g",
            "hts",
            "-c",
            "/config"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}