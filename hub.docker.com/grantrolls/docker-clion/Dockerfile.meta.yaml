MetaArgs: null
Stages:
- BaseName: azul/zulu-openjdk:8
  Commands:
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.03.0-ce
    Name: env
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.21.0
    Name: env
  - Maintainer: Grant Rolls <grantr90@gmail.com>
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - groupadd --system powerless --gid 1000 &&     useradd --uid 1000 --system --gid
      powerless --home-dir /home/powerless --create-home --shell /sbin/nologin --comment
      "Docker image user" powerless &&     chown -R powerless:powerless /home/powerless
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/powerless
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/zulu-8-amd64
    Name: env
  - Env:
    - Key: JDK_HOME
      Value: /usr/lib/jvm/zulu-8-amd64
    Name: env
  - CmdLine:
    - /usr/bin/ansible
    - all
    - --inventory=localhost,
    - --verbose
    - --connection=local
    - -m setup
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get -qq update &&     apt-get -qqy install curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update &&     apt-get -qqy install git subversion
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update &&     apt-get -qqy install libgnomevfs2-0 libsecret-1-0
      gnome-keyring
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --fail --silent --show-error --location --remote-name https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz
      &&     tar --strip-components=1 -xvzf docker-${DOCKER_VERSION}.tgz -C /usr/local/bin
      &&     rm -f docker-${DOCKER_VERSION}.tgz &&     chmod 0555 /usr/local/bin/docker
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --fail --silent --show-error --location "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname
      -s)-$(uname -m)" --output /usr/local/bin/docker-compose &&     chmod 0555 /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes software-properties-common &&     apt-add-repository --yes
      ppa:ansible/ansible &&     apt-get update --yes &&     apt-get install --yes
      ansible
    Name: run
    PrependShell: true
  - Env:
    - Key: CL_JDK
      Value: /usr/lib/jvm/zulu-8-amd64
    Name: env
  - CmdLine:
    - "apt-get update &&     apt-get install -y \t\tbuild-essential \t\tautoconf \t\tautomake
      \t\twget &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     rm -rf
      /tmp/*"
    Name: run
    PrependShell: true
  - Key: CLION_VER
    Name: arg
    Value: 2018.1.3
  - Key: CLION_TAR
    Name: arg
    Value: CLion-$CLION_VER.tar.gz
  - Key: DOWNLOAD_PATH
    Name: arg
    Value: https://download.jetbrains.com/cpp/$CLION_TAR
  - Env:
    - Key: CLION_HOME
      Value: /opt/clion-$CLION_VER
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - "wget $DOWNLOAD_PATH && \tmkdir $CLION_HOME && \ttar -xvf $CLION_TAR && \trm
      -rf $CLION_HOME/jre64"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 775 $CLION_HOME/bin/clion.sh
    Name: run
    PrependShell: true
  - Name: user
    User: powerless
  - CmdLine:
    - $CLION_HOME/bin/clion.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: azul/zulu-openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM azul/zulu-openjdk:8
