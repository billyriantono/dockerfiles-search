{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-add-repository -y ppa:beineri/opt-qt561-trusty \u0026\u0026     apt-add-repository -y ppa:ubuntu-toolchain-r/test \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y gcc-6 g++-6 build-essential mesa-common-dev libglu1-mesa-dev xvfb python dbus \u0026\u0026     apt-get install -y ca-certificates wget \u0026\u0026     apt-get install -y qt56tools qt56script qt56webengine qt56webchannel qt56websockets qt56declarative qt56x11extras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dbus-uuidgen \u003e /var/lib/dbus/machine-id"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.9/gosu-$(dpkg --print-architecture)\" \u0026\u0026     chmod +x /usr/local/bin/gosu \u0026\u0026     gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "QTDIR",
              "Value": "/opt/qt56"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$QTDIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$QTDIR/lib/x86_64-linux-gnu:$QTDIR/lib:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "$QTDIR/lib/pkgconfig:$PKG_CONFIG_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/usr/src/electric-webview"
          ]
        },
        {
          "CmdLine": [
            "mkdir /tmp/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/build"
        },
        {
          "CmdLine": [
            "qmake PREFIX=/usr/local QMAKE_CXX=\"g++-6\" /usr/src/electric-webview"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j$(nproc)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/src/electric-webview/scripts/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}