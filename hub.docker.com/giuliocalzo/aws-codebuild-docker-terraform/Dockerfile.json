{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.5",
      "SourceCode": "FROM ubuntu:14.04.5",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends        wget python python2.7-dev fakeroot ca-certificates tar gzip zip        autoconf automake bzip2 file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev        libdb-dev libevent-dev libffi-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev        liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev        libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev        libyaml-dev make patch xz-utils zlib1g-dev unzip curl     \u0026\u0026 apt-get -qy build-dep git     \u0026\u0026 apt-get -qy install libcurl4-openssl-dev git-man liberror-perl     \u0026\u0026 mkdir -p /usr/src/git-openssl     \u0026\u0026 cd /usr/src/git-openssl     \u0026\u0026 apt-get source git     \u0026\u0026 cd $(find -mindepth 1 -maxdepth 1 -type d -name \"git-*\")     \u0026\u0026 sed -i -- 's/libcurl4-gnutls-dev/libcurl4-openssl-dev/' ./debian/control     \u0026\u0026 sed -i -- '/TEST\\s*=\\s*test/d' ./debian/rules     \u0026\u0026 dpkg-buildpackage -rfakeroot -b     \u0026\u0026 find .. -type f -name \"git_*ubuntu*.deb\" -exec dpkg -i \\{\\} \\;     \u0026\u0026 rm -rf /usr/src/git-openssl     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget \"https://bootstrap.pypa.io/get-pip.py\" -O /tmp/get-pip.py     \u0026\u0026 python /tmp/get-pip.py     \u0026\u0026 pip install awscli      \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq \u0026\u0026 chmod +x /usr/bin/jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/0.10.7/terraform_0.10.7_linux_amd64.zip \u0026\u0026 unzip terraform.zip \u0026\u0026 mv terraform /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_BUCKET",
              "Value": "\"get.docker.com\""
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "\"1.12.1\""
            },
            {
              "Key": "DOCKER_SHA256",
              "Value": "\"05ceec7fd937e1416e5dce12b0b6e1c655907d349d52574319a1e875077ccb79\""
            },
            {
              "Key": "DIND_COMMIT",
              "Value": "\"3b5fac462d21ca164b3778647420016315289034\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerd-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz     \u0026\u0026 echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c -     \u0026\u0026 tar -xzvf docker.tgz     \u0026\u0026 mv docker/* /usr/local/bin/     \u0026\u0026 rmdir docker     \u0026\u0026 rm docker.tgz     \u0026\u0026 docker -v     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends        e2fsprogs iptables xfsprogs xz-utils     \u0026\u0026 addgroup dockremap     \u0026\u0026 useradd -g dockremap dockremap     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subuid     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subgid     \u0026\u0026 wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind     \u0026\u0026 chmod +x /usr/local/bin/dind     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "CmdLine": [
            "dockerd-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}