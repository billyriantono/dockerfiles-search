MetaArgs: null
Stages:
- As: builder
  BaseName: node:8-alpine
  Commands:
  - CmdLine:
    - apk update && apk add openjdk8
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - ./gradlew bootRepackage
    Name: run
    PrependShell: true
  From:
    Image: node:8-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM node:8-alpine as builder
- BaseName: ubuntu:xenial
  Commands:
  - Env:
    - Key: SERVER_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: DEBUG_PORT
      Value: "8000"
    Name: env
  - Env:
    - Key: SERVER_PROTOCOL
      Value: http
    Name: env
  - Env:
    - Key: HEALTHCHECK_CONTEXT
      Value: management/health
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     apt-transport-https     ca-certificates     curl     software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key fingerprint 0EBFCD88
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu    $(lsb_release
      -cs)    stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y docker-ce openjdk-8-jre-headless
    Name: run
    PrependShell: true
  - Health:
      Test:
      - CMD-SHELL
      - curl -v --fail ${SERVER_PROTOCOL}://localhost:${SERVER_PORT}/${HEALTHCHECK_CONTEXT}
        || exit 1
    Name: healthcheck
  - Name: volume
    Volumes:
    - /tmp
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - build/libs/*.war
    - /app.war
  - CmdLine:
    - java
    - -Xms256m
    - -Xmx1024m
    - -Djava.security.egd=file:/dev/./urandom
    - -jar
    - /app.war
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
