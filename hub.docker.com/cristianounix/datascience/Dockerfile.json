{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Cristiano S. Oliveira \u003ccristianounix@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y python3-pip python3-dev   \u0026\u0026 cd /usr/local/bin   \u0026\u0026 ln -s /usr/bin/python3 python   \u0026\u0026 pip3 install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libhdf5-serial-dev         libpng12-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python get-pip.py \u0026\u0026     rm get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install         Pillow         h5py         ipykernel         jupyter         jupyterlab         keras_applications         keras_preprocessing         matplotlib         numpy         pandas         scipy         sklearn         nltk         opencv-python         keras         ipywidgets         scikit-learn         ipywidgets         seaborn==0.9.0         spacy         folium         \u0026\u0026     python -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyter_contrib_nbextensions \u0026\u0026 jupyter contrib nbextension install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py --sys-prefix widgetsnbextension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade jupyterthemes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /run_jupyter.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/notebooks\""
        },
        {
          "CmdLine": [
            "jupyter",
            "lab",
            "--no-browser",
            "--allow-root",
            "--NotebookApp.token=''",
            "--NotebookApp.password=''"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}