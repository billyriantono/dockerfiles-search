MetaArgs: null
Stages:
- BaseName: jenkins/jnlp-slave:alpine
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.03.1-ce
    Name: env
  - CmdLine:
    - "set -ex; \tapk add --no-cache --virtual .fetch-deps \t\tcurl \t\ttar \t; \t\tapkArch=\"$(apk
      --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64) dockerArch='x86_64' ;; \t\taarch64)
      dockerArch='aarch64' ;; \t\tppc64le) dockerArch='ppc64le' ;; \t\ts390x) dockerArch='s390x'
      ;; \t\t*) echo >&2 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;\tesac;
      \t\tif ! curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\";
      then \t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from
      '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\ttar --extract
      \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/
      \t; \trm docker.tgz; \t\tapk del .fetch-deps; \t\tdockerd -v; \tdocker -v"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - modprobe.sh
    - /usr/local/bin/modprobe
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - apk add --no-cache python3 &&     python3 -m ensurepip &&     rm -r /usr/lib/python*/ensurepip
      &&     pip3 install --upgrade pip setuptools &&     if [ ! -e /usr/bin/pip ];
      then ln -s pip3 /usr/bin/pip ; fi &&     if [[ ! -e /usr/bin/python ]]; then
      ln -sf /usr/bin/python3 /usr/bin/python; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install 'docker-compose==1.21.2'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    - jenkins-slave
    Name: entrypoint
    PrependShell: false
  From:
    Image: jenkins/jnlp-slave:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jnlp-slave:alpine
