MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Maintainer: SitoCH <sito@grignola.ch>
    Name: maintainer
  - Env:
    - Key: php_conf
      Value: /etc/php7/php.ini
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php7/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_www_conf
      Value: /etc/php7/php-fpm.d/www.conf
    Name: env
  - CmdLine:
    - apk add --no-cache bash     openssh-client     wget     nginx     supervisor     curl     git     php7-apcu     php7-fpm     php7-pdo     php7-pdo_mysql     php7-mysqli     php7-mcrypt     php7-ctype     php7-zlib     php7-gd     php7-intl     php7-tokenizer     php7-memcached     php7-sqlite3     php7-pgsql     php7-xml     php7-exif     php7-xsl     php7-curl     php7-openssl     php7-iconv     php7-json     php7-phar     php7-fileinfo     php7-soap     php7-dom     php7-simplexml     php7-mbstring     python     python-dev     py-pip     augeas-dev     openssl-dev     ca-certificates     dialog     gcc     musl-dev     linux-headers     libffi-dev
      &&    mkdir -p /etc/nginx &&     mkdir -p /var/www/app &&     mkdir -p /run/nginx
      &&     mkdir -p /var/log/supervisor &&     EXPECTED_COMPOSER_SIGNATURE=$(wget
      -q -O - https://composer.github.io/installer.sig) &&     php -r "copy('https://getcomposer.org/installer',
      'composer-setup.php');" &&     php -r "if (hash_file('SHA384', 'composer-setup.php')
      === '${EXPECTED_COMPOSER_SIGNATURE}') { echo 'Composer.phar Installer verified';
      } else { echo 'Composer.phar Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;" &&     php composer-setup.php --install-dir=/usr/bin --filename=composer
      &&     php -r "unlink('composer-setup.php');" &&     pip install -U certbot
      &&     mkdir -p /etc/letsencrypt/webrootauth &&     apk del gcc musl-dev linux-headers
      libffi-dev augeas-dev python-dev
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - rm -Rf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - mkdir -p /etc/nginx/sites-available/ && mkdir -p /etc/nginx/sites-enabled/ &&
      mkdir -p /etc/nginx/ssl/ && rm -Rf /var/www/* && mkdir /var/www/html/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/sites-available/default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site-ssl.conf
    - /etc/nginx/sites-available/default-ssl.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - deluser xfs && delgroup www-data && addgroup www-data -g 33 && adduser -u 33
      -g 33  -H -S www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i         -e "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g"         -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize
      = 100M/g"         -e "s/post_max_size\s*=\s*8M/post_max_size = 100M/g"         -e
      "s/variables_order = \"GPCS\"/variables_order = \"EGPCS\"/g"         -e "s/short_open_tag
      = Off/short_open_tag = On/g"         ${php_conf} &&     sed -i         -e "s/short_open_tag
      = Off/short_open_tag = On/g"         -e "s/;daemonize\s*=\s*yes/daemonize =
      no/g"         -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g"         -e
      "s/pm.max_children = 4/pm.max_children = 4/g"         -e "s/pm.start_servers
      = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g"         -e
      "s/pm.max_requests = 500/pm.max_requests = 200/g"          -e "s/user = nobody/user
      = www-data/g"          -e "s/group = nobody/group = www-data/g"         -e "s/;listen.mode
      = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = nobody/listen.owner
      = www-data/g"         -e "s/;listen.group = nobody/listen.group = www-data/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${fpm_conf} &&     sed -i         -e "s/short_open_tag
      = Off/short_open_tag = On/g"         -e "s/;daemonize\s*=\s*yes/daemonize =
      no/g"         -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g"         -e
      "s/pm.max_children = 4/pm.max_children = 4/g"         -e "s/pm.start_servers
      = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g"         -e
      "s/pm.max_requests = 500/pm.max_requests = 200/g"          -e "s/user = nobody/user
      = www-data/g"          -e "s/group = nobody/group = www-data/g"         -e "s/;listen.mode
      = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = nobody/listen.owner
      = www-data/g"         -e "s/;listen.group = nobody/listen.group = www-data/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${fpm_www_conf}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/start.sh
    - /start.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/pull
    - /usr/bin/pull
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/push
    - /usr/bin/push
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/letsencrypt-setup
    - /usr/bin/letsencrypt-setup
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/letsencrypt-renew
    - /usr/bin/letsencrypt-renew
  - CmdLine:
    - chmod 755 /usr/bin/pull && chmod 755 /usr/bin/push && chmod 755 /usr/bin/letsencrypt-setup
      && chmod 755 /usr/bin/letsencrypt-renew && chmod 755 /start.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src/
    - /var/www/html/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - errors/
    - /var/www/errors/
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
