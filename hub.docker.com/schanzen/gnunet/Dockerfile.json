{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update wget alpine-sdk automake autoconf libtool libltdl gmp-dev libgcrypt-dev glib-dev libunistring-dev libidn-dev linux-headers jansson-dev libmicrohttpd-dev gnutls-dev sqlite-dev libidn-dev \u0026\u0026 rm -rf /var/cache/apk/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget -q https://ftp.gnu.org/gnu/gnunet/gnurl-7_57_0.tar.bz2 -O gnurl.tar.bz2 \u0026\u0026 mkdir gnurl \u0026\u0026 tar xvf gnurl.tar.bz2 -C gnurl --strip-components 1 \u0026\u0026 cd gnurl \u0026\u0026 autoreconf -i \u0026\u0026 ./configure --prefix=/opt --disable-ntlm-wb --with-gnutls \u0026\u0026 make install \u0026\u0026 rm -rf /opt/gnurl*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q ftp://ftp.gnu.org/gnu/libextractor/libextractor-1.7.tar.gz \u0026\u0026 tar xvzpf libextractor-1.7.tar.gz \u0026\u0026 cd libextractor-1.7 \u0026\u0026 ./configure --prefix=/opt \u0026\u0026 make install \u0026\u0026 rm -rf /opt/libextractor*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q ftp://ftp.gnu.org/gnu/glpk/glpk-4.55.tar.gz \u0026\u0026 tar xvzpf glpk-4.55.tar.gz \u0026\u0026 cd glpk-4.55 \u0026\u0026 ./configure --prefix=/opt \u0026\u0026 make install \u0026\u0026 rm -rf /opt/glpk-4.55*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r /opt/* /usr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://gnunet.org/gnunet.git \u0026\u0026 cd gnunet \u0026\u0026 ./bootstrap \u0026\u0026 ./configure --help \u0026\u0026 ./configure --prefix=/opt --disable-documentation --with-microhttpd --with-extractor=/opt --with-libgnurl=/opt \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 rm -rf /opt/gnunet/"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "apk add --update openssl libbz2 libtool libltdl libunistring libidn jansson libmicrohttpd gnutls sqlite-dev glib libgcrypt gmp \u0026\u0026 rm -rf /var/cache/apk/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "7777"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/opt"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt",
            "/usr/"
          ]
        },
        {
          "CmdLine": [
            "/opt/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}