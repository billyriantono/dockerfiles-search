MetaArgs: null
Stages:
- BaseName: php:7.3-apache
  Commands:
  - Key: BUILD_ARGUMENT_DEBUG_ENABLED
    Name: arg
    Value: "false"
  - Env:
    - Key: DEBUG_ENABLED
      Value: $BUILD_ARGUMENT_DEBUG_ENABLED
    Name: env
  - Key: BUILD_ARGUMENT_ENV
    Name: arg
    Value: dev
  - Env:
    - Key: ENV
      Value: $BUILD_ARGUMENT_ENV
    Name: env
  - Env:
    - Key: APP_HOME
      Value: /var/www/html
    Name: env
  - CmdLine:
    - if [ "$BUILD_ARGUMENT_ENV" = "default" ]; then echo "Set BUILD_ARGUMENT_ENV
      in docker build-args like --build-arg BUILD_ARGUMENT_ENV=dev" && exit 2;     elif
      [ "$BUILD_ARGUMENT_ENV" = "dev" ]; then echo "Building development environment.";     elif
      [ "$BUILD_ARGUMENT_ENV" = "test" ]; then echo "Building test environment.";     elif
      [ "$BUILD_ARGUMENT_ENV" = "prod" ]; then echo "Building production environment.";     else
      echo "Set correct BUILD_ARGUMENT_ENV in docker build-args like --build-arg BUILD_ARGUMENT_ENV=dev.
      Available choices are dev,test,prod." && exit 2;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get upgrade -y && apt-get install -y       procps       nano       git       unzip       libicu-dev       zlib1g-dev       libxml2       libxml2-dev       libreadline-dev       supervisor       cron       libzip-dev     &&
      docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd     && docker-php-ext-install       pdo_mysql       intl       zip
      &&       rm -fr /tmp/* &&       rm -rf /var/list/apt/* &&       rm -r /var/lib/apt/lists/*
      &&       apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - a2dissite 000-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r $APP_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $APP_HOME/public
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -u 1000 www-data && groupmod -g 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data $APP_HOME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/hosts/laravel.conf
    - /etc/apache2/sites-available/laravel.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/hosts/laravel-ssl.conf
    - /etc/apache2/sites-available/laravel-ssl.conf
  - CmdLine:
    - a2ensite laravel.conf && a2ensite laravel-ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/$BUILD_ARGUMENT_ENV/php.ini
    - /usr/local/etc/php/php.ini
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/other/do_we_need_xdebug.sh
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/dev/xdebug.ini
    - /tmp/
  - CmdLine:
    - chmod u+x /tmp/do_we_need_xdebug.sh && /tmp/do_we_need_xdebug.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/other/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/other/cron
    - /var/spool/cron/crontabs/root
  - CmdLine:
    - chmod 0600 /var/spool/cron/crontabs/root
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key
      -out /etc/ssl/certs/ssl-cert-snakeoil.pem -subj "/C=AT/ST=Vienna/L=Vienna/O=Security/OU=Development/CN=example.com"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_HOME
  - CmdLine:
    - mkdir -p /var/www/.composer && chown -R www-data:www-data /var/www/.composer
    Name: run
    PrependShell: true
  - Name: user
    User: www-data
  - Chown: www-data:www-data
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APP_HOME/
  - Chown: www-data:www-data
    From: ""
    Name: copy
    SourcesAndDest:
    - .env.$ENV
    - $APP_HOME/.env
  - CmdLine:
    - if [ "$BUILD_ARGUMENT_ENV" = "dev" ] || [ "$BUILD_ARGUMENT_ENV" = "test" ];
      then composer install --no-interaction --no-progress;     else composer install
      --no-interaction --no-progress --no-dev;     fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  From:
    Image: php:7.3-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-apache
