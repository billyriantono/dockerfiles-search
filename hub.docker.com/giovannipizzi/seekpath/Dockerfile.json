{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/passenger-customizable:0.9.19",
      "SourceCode": "FROM phusion/passenger-customizable:0.9.19",
      "Platform": "",
      "From": {
        "Image": "phusion/passenger-customizable:0.9.19"
      },
      "Commands": [
        {
          "Maintainer": "Giovanni Pizzi \u003cgiovanni.pizzi@epfl.ch\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/pd_build/utilities.sh \u0026\u0026     /pd_build/python.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install     python3-pip     apache2     libapache2-mod-xsendfile     libapache2-mod-wsgi-py3     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/app"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/code/seekpath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME/code/seekpath"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./seekpath/",
            "seekpath"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./webservice/",
            "webservice"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./setup.py",
            "setup.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./README.rst",
            "README.rst"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./MANIFEST.in",
            "MANIFEST.in"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./LICENSE.txt",
            "LICENSE.txt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./run_tests.py",
            "run_tests.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./optional-requirements.txt",
            "optional-requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "chown -R app:app $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U 'pip\u003e=10' setuptools wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "app"
        },
        {
          "Name": "workdir",
          "Path": "/home/app/code/seekpath"
        },
        {
          "CmdLine": [
            "pip3 install --user -r optional-requirements.txt --only-binary numpy,scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --user ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SP_WSGI_FILE",
              "Value": "webservice/seekpath_app.wsgi"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"import sys\" \u003e $SP_WSGI_FILE \u0026\u0026     echo \"sys.path.insert(0, '/home/app/code/seekpath/webservice')\" \u003e\u003e $SP_WSGI_FILE \u0026\u0026     echo \"from seekpath_app import app as application\" \u003e\u003e $SP_WSGI_FILE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./.docker_files/seekpath-apache.conf",
            "/etc/apache2/sites-available/seekpath.conf"
          ]
        },
        {
          "CmdLine": [
            "a2enmod wsgi \u0026\u0026 a2enmod xsendfile \u0026\u0026     a2dissite 000-default \u0026\u0026 a2ensite seekpath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/apache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./.docker_files/apache_run.sh",
            "/etc/service/apache/run"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/my_init.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./.docker_files/create_secret_key.sh",
            "/etc/my_init.d/create_secret_key.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}