{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hub.c.163.com/public/centos:7.2-tools",
      "SourceCode": "FROM hub.c.163.com/public/centos:7.2-tools",
      "Platform": "",
      "From": {
        "Image": "hub.c.163.com/public/centos:7.2-tools"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum -y install glibc-static telnet bridge-utils net-tools kde-l10n-Chinese  glibc-common     gcc gcc-c++ autoconf pcre pcre-devel make automake wget httpd-tools vim  git initscripts tree     zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel     gdbm-devel db4-devel libpcap-devel xz-devel nss curl \u0026\u0026     /bin/echo 'root:123456'|chpasswd \u0026\u0026     localedef -c -f UTF-8 -i zh_CN zh_CN.utf8  \u0026\u0026 \twget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo \u0026\u0026 \trpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key \u0026\u0026 \tyum install -y java  jenkins \u0026\u0026 useradd deploy \u0026\u0026 \tsed -i 's:JENKINS_USER=\"jenkins\":JENKINS_USER=\"deploy\":' /etc/sysconfig/jenkins  \u0026\u0026 \tsed -i 's:LANG=\"en_US.UTF-8\":LANG=\"zh_CN.UTF-8\":' /etc/locale.conf \u0026\u0026 \tchown -R deploy:deploy /var/lib/jenkins \u0026\u0026  \tchown -R deploy:deploy /var/log/jenkins \u0026\u0026 \tchown -R deploy:deploy /var/cache/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 wget http://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz \u0026\u0026 \ttar xf  Python-3.6.5.tar.xz \u0026\u0026 cd Python-3.6.5 \u0026\u0026 \t./configure --prefix=/usr/local --with-ensurepip=install --enable-shared LDFLAGS=\"-Wl,-rpath /usr/local/lib\" \u0026\u0026 \tmake \u0026\u0026 make install \u0026\u0026 ln -s /usr/local/bin/pip3.6   /usr/local/bin/pip \u0026\u0026 pip install virtualenv \u0026\u0026 \tsu - deploy -c \"virtualenv -p /usr/local/bin/python3.6 .py3-a2.5-env \u0026\u0026 \tcd /home/deploy/.py3-a2.5-env  \u0026\u0026 git clone https://github.com/ansible/ansible.git \u0026\u0026 \tcd ansible \u0026\u0026 git checkout stable-2.5 \u0026\u0026 source /home/deploy/.py3-a2.5-env/bin/activate \u0026\u0026 \tpip install paramiko PyYAML jinja2 \u0026\u0026 source /home/deploy/.py3-a2.5-env/ansible/hacking/env-setup -q \u0026\u0026 \tansible --version\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/init.sh",
            "/var"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/var/init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}