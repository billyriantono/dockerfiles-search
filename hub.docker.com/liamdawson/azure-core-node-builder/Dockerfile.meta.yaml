MetaArgs: null
Stages:
- BaseName: buildpack-deps:xenial-scm
  Commands:
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/microsoft.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends   python   libc6   libcurl3   libgcc1   libgssapi-krb5-2   liblttng-ust0   libssl1.0.0   libssl-dev   libstdc++6   libunwind8   libuuid1   zlib1g   xz-utils   build-essential   libffi-dev   python-dev   sudo   libicu55   liblttng-ust0   liblldb-3.6   curl   default-jre-headless   powershell
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://security.ubuntu.com/ubuntu/pool/main/i/icu/libicu52_52.1-8ubuntu0.2_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i libicu52_52.1-8ubuntu0.2_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_SDK_VERSION
      Value: 1.0.4
    Name: env
  - Env:
    - Key: DOTNET_SDK_DOWNLOAD_URL
      Value: https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-dev-debian-x64.$DOTNET_SDK_VERSION.tar.gz
    Name: env
  - CmdLine:
    - curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz     && mkdir -p /usr/share/dotnet     &&
      tar -zxf dotnet.tar.gz -C /usr/share/dotnet     && rm dotnet.tar.gz     && ln
      -s /usr/share/dotnet/dotnet /usr/bin/dotnet
    Name: run
    PrependShell: true
  - Env:
    - Key: NUGET_XMLDOC_MODE
      Value: skip
    Name: env
  - CmdLine:
    - mkdir warmup     && cd warmup     && dotnet new     && cd ..     && rm -rf warmup     &&
      rm -rf /tmp/NuGetScratch
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.1.2
    Name: env
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ||     gpg
      --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com
      --recv-keys "$key" ;   done
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"     &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c -     &&
      tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1     &&
      rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt     &&
      ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 0.24.6
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done   && curl
      -fSL -o yarn.js "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-legacy-$YARN_VERSION.js"   &&
      curl -fSL -o yarn.js.asc "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-legacy-$YARN_VERSION.js.asc"   &&
      gpg --batch --verify yarn.js.asc yarn.js   && rm yarn.js.asc   && mv yarn.js
      /usr/local/bin/yarn   && chmod +x /usr/local/bin/yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py | python
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install azure 'azure-cli==2.0.9'
    Name: run
    PrependShell: true
  - CmdLine:
    - az component update --add storage
    Name: run
    PrependShell: true
  - CmdLine:
    - az component update --add batch
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g raml2html@6.3.0
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:xenial-scm
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:xenial-scm
