{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:cli",
      "SourceCode": "FROM php:cli",
      "Platform": "",
      "From": {
        "Image": "php:cli"
      },
      "Commands": [
        {
          "CmdLine": [
            "php --version     \u0026\u0026 php --modules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y         wget         vim         git         unzip         openssh-client         rsync         gnupg2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libpq-dev         zlib1g-dev         libicu-dev         libzip-dev         g++         unixodbc-dev         libxml2-dev         libaio-dev         libmemcached-dev         freetds-dev         libssl-dev         openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php --         --install-dir=/usr/local/bin         --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://sentry.io/get-cli/ | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu     \u0026\u0026 pecl install sqlsrv-5.6.1     \u0026\u0026 pecl install pdo_sqlsrv-5.6.1     \u0026\u0026 pecl install redis     \u0026\u0026 pecl install memcached     \u0026\u0026 pecl install xdebug     \u0026\u0026 pecl install channel://pecl.php.net/mcrypt-1.0.2     \u0026\u0026 docker-php-ext-install             iconv             mbstring             intl             gd             pgsql             mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install             pdo_pgsql             pdo_mysql             soap             sockets             zip             pcntl             ftp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable             sqlsrv             pdo_sqlsrv             redis             memcached             opcache             xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu     \u0026\u0026 pecl install apcu_bc-1.0.3     \u0026\u0026 docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini     \u0026\u0026 docker-php-ext-enable apc --ini-name 20-docker-php-ext-apc.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit.phar -O /usr/local/bin/phpunit     \u0026\u0026 chmod +x /usr/local/bin/phpunit     \u0026\u0026 phpunit --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir --parents /root/.ssh \u0026\u0026 chmod 700 /root/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}