{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "combro2k/alpine-base:latest",
      "SourceCode": "FROM combro2k/alpine-base:latest",
      "Platform": "",
      "From": {
        "Image": "combro2k/alpine-base:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-scheme.dockerfile",
              "Value": "$DOCKERFILE"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "S6_KILL_GRACETIME",
              "Value": "3000"
            },
            {
              "Key": "DOCKER_ENDPOINT",
              "Value": "unix:///tmp/docker.sock"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026 \tapk add --quiet --no-cache --virtual=run-deps curl ca-certificates openssl haproxy \u0026\u0026 mkdir /app \u0026\u0026   mkdir -p /data/acme-challenge \u0026\u0026 chown -R haproxy:haproxy /data/acme-challenge \u0026\u0026 chmod +rwx /data/acme-challenge \u0026\u0026 \tcurl --location --silent https://github.com/jwilder/docker-gen/releases/download/0.7.4/docker-gen-alpine-linux-amd64-0.7.4.tar.gz | tar zx -C /app \u0026\u0026 \tapk del --quiet --no-cache --purge \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "resources/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /app/reload-haproxy.sh /usr/bin/certbot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443/tcp",
            "80/tcp",
            "9000/tcp"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}