{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Jason Wilder jwilder@litl.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo deb http://nginx.org/packages/mainline/ubuntu trusty nginx \u003e /etc/apt/sources.list.d/nginx-stable-trusty.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo deb-src http://nginx.org/packages/mainline/ubuntu trusty nginx \u003e /etc/apt/sources.list.d/nginx-stable-trusty.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install nano -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRESSL_VERSION",
              "Value": "libressl-2.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/src/ \u0026\u0026 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 tar xf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 rm -f nginx-${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/ \u0026\u0026 wget http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/${LIBRESSL_VERSION}.tar.gz \u0026\u0026 tar xvzf ${LIBRESSL_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential zlib1g-dev libpcre3 libpcre3-dev unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026 ./configure \t--prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/data/logs/error.log \t--http-log-path=/data/logs/access.log \t--pid-path=/var/run/nginx.pid \t--lock-path=/var/run/nginx.lock \t--with-http_ssl_module \t--with-http_realip_module \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_secure_link_module \t--with-http_stub_status_module \t--with-mail \t--with-mail_ssl_module \t--with-file-aio \t--with-http_spdy_module \t--with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Wformat-security -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' \t--with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed' \t--with-ipv6 \t--with-sha1='../${LIBRESSL_VERSION}'  \t--with-md5='../${LIBRESSL_VERSION}' \t--with-openssl='../${LIBRESSL_VERSION}'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/${LIBRESSL_VERSION}/ \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "proxy_params",
            "/etc/nginx/proxy_params"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /data/{config,ssl,logs}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /data/ssl /etc/nginx/ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./app",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "wget -P /usr/local/bin https://godist.herokuapp.com/projects/ddollar/forego/releases/current/linux-amd64/forego"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod u+x /usr/local/bin/forego /app/init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "app/docker-gen",
            "docker-gen"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "unix:///tmp/docker.sock"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/app/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}