{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu-debootstrap:14.04",
      "SourceCode": "FROM ubuntu-debootstrap:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu-debootstrap:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Martijn van Maurik \u003cdocker@vmaurik.nl\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRARIES_VERSION",
              "Value": "8.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCANNER_VERSION",
              "Value": "5.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MANAGER_VERSION",
              "Value": "6.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ASSISTANT_VERSION",
              "Value": "6.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get dist-upgrade -yq \u0026\u0026     apt-get install -yq rsync libhiredis-dev build-essential devscripts dpatch libassuan-dev \tlibglib2.0-dev libgpgme11-dev libpcre3-dev libpth-dev libwrap0-dev libgmp-dev libgmp3-dev \tlibgpgme11-dev libopenvas2 libpcre3-dev libpth-dev quilt cmake pkg-config \tlibssh-dev libglib2.0-dev libpcap-dev libgpgme11-dev uuid-dev bison libksba-dev \tdoxygen sqlfairy xmltoman sqlite3 libsqlite3-dev wamerican rsyslog redis-server  \tlibmicrohttpd-dev libxml2-dev libxslt1-dev xsltproc libssh2-1-dev libldap2-dev autoconf nmap libgnutls-dev supervisor \u0026\u0026     apt-get clean \u0026\u0026     export CMAKE_OPT=\"-DCMAKE_INSTALL_PREFIX=/usr -DLOCALSTATEDIR=/var\" \u0026\u0026     mkdir -p /usr/src/build/libraries \u0026\u0026 cd /usr/src/build/libraries \u0026\u0026     curl http://wald.intevation.org/frs/download.php/2015/openvas-libraries-${LIBRARIES_VERSION}.tar.gz | tar zxv --strip-components=1 \u0026\u0026     mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake ${CMAKE_OPT} .. \u0026\u0026 make install \u0026\u0026     mkdir -p /usr/src/build/scanner \u0026\u0026 cd /usr/src/build/scanner \u0026\u0026     curl http://wald.intevation.org/frs/download.php/2016/openvas-scanner-${SCANNER_VERSION}.tar.gz | tar zxv --strip-components=1 \u0026\u0026     mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake ${CMAKE_OPT} .. \u0026\u0026 make install \u0026\u0026     mkdir -p /usr/src/build/manager \u0026\u0026 cd /usr/src/build/manager \u0026\u0026     curl http://wald.intevation.org/frs/download.php/2017/openvas-manager-${MANAGER_VERSION}.tar.gz | tar zxv --strip-components=1 \u0026\u0026     mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake ${CMAKE_OPT} .. \u0026\u0026 make install \u0026\u0026     mkdir -p /usr/src/build/assistant \u0026\u0026 cd /usr/src/build/assistant \u0026\u0026     curl http://wald.intevation.org/frs/download.php/1018/greenbone-security-assistant-${ASSISTANT_VERSION}.tar.gz | tar zxv --strip-components=1 \u0026\u0026     mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake ${CMAKE_OPT} .. \u0026\u0026 make install \u0026\u0026     echo \"unixsocket /tmp/redis.sock\" \u003e\u003e /etc/redis/redis.conf \u0026\u0026     sed -i 's#daemonize yes#daemonize no#g' /etc/redis/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "resources/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/setup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "9390",
            "9391"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}