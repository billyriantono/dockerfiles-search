{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Maintainer": "Alexander Gorokhov \u003csashgorokhov@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y unzip git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SERVER_URL",
              "Value": "\"\""
            },
            {
              "Key": "AGENT_OWN_ADDRESS",
              "Value": "\"\""
            },
            {
              "Key": "AGENT_OWN_PORT",
              "Value": "\"9090\""
            },
            {
              "Key": "AGENT_NAME",
              "Value": "\"\""
            },
            {
              "Key": "AGENT_DIR",
              "Value": "\"/opt/teamcity_agent\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AGENT_WORKDIR",
              "Value": "$AGENT_DIR\"/work_dir\""
            },
            {
              "Key": "AGENT_TEMPDIR",
              "Value": "$AGENT_DIR\"/temp_dir\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$AGENT_OWN_PORT"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$AGENT_WORKDIR",
            "$AGENT_TEMPDIR"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$AGENT_DIR"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "setup_agent.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "wget -P /tmp https://get.docker.com/builds/Linux/x86_64/docker-1.11.2.tgz \u0026\u0026     tar -xzf /tmp/docker-1.11.2.tgz -C / \u0026\u0026 rm /tmp/docker-1.11.2.tgz \u0026\u0026     ln -s /docker/docker /usr/local/bin/docker \u0026\u0026     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \u0026\u0026     echo \"deb http://download.mono-project.com/repo/debian wheezy main\" | tee /etc/apt/sources.list.d/mono-xamarin.list \u0026\u0026     echo \"deb http://download.mono-project.com/repo/debian wheezy-apache24-compat main\" | tee -a /etc/apt/sources.list.d/mono-xamarin.list \u0026\u0026     echo \"deb http://download.mono-project.com/repo/debian wheezy-libjpeg62-compat main\" | tee -a /etc/apt/sources.list.d/mono-xamarin.list \u0026\u0026     apt-get clean \u0026\u0026     apt-get update \u0026\u0026     apt-get install -f -y mono-devel mono-complete referenceassemblies-pcl ca-certificates-mono \u0026\u0026     apt-get clean \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y fsharp \u0026\u0026     apt-get clean \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y curl libunwind8 gettext \u0026\u0026     curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=835021 \u0026\u0026     mkdir -p /opt/dotnet \u0026\u0026 tar zxf dotnet.tar.gz -C /opt/dotnet \u0026\u0026     ln -s /opt/dotnet/dotnet /usr/local/bin \u0026\u0026     curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026     apt-get clean \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y nodejs \u0026\u0026     npm install bower octopus-deploy -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/setup_agent.sh \u0026\u0026 $AGENT_DIR/bin/agent.sh run"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}