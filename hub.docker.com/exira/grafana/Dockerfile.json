{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "exira/base:latest",
      "SourceCode": "FROM exira/base:latest",
      "Platform": "",
      "From": {
        "Image": "exira/base:latest"
      },
      "Commands": [
        {
          "Maintainer": "exira.com \u003cinfo@exira.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GRAFANA_VERSION",
              "Value": "v2.6.0"
            },
            {
              "Key": "GRAFANA_HOME",
              "Value": "/grafana"
            },
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "package.json",
            "/tmp/package.json"
          ]
        },
        {
          "CmdLine": [
            "build_pkgs=\"build-base go nodejs git mercurial\" \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk --update --no-cache add ${build_pkgs} \u0026\u0026     mkdir -p /go/src/github.com/grafana \u0026\u0026     cd /go/src/github.com/grafana \u0026\u0026     git clone https://github.com/grafana/grafana.git -v -b ${GRAFANA_VERSION} \u0026\u0026     cd grafana \u0026\u0026     cp /tmp/package.json /go/src/github.com/grafana/grafana/package.json \u0026\u0026     go run build.go setup \u0026\u0026     /go/bin/godep restore \u0026\u0026     go run build.go build \u0026\u0026     npm install \u0026\u0026     npm install -g grunt-cli \u0026\u0026     grunt \u0026\u0026     npm uninstall -g grunt-cli \u0026\u0026     npm cache clear \u0026\u0026     mkdir /etc/grafana \u0026\u0026     mkdir -p ${GRAFANA_HOME}/bin/ \u0026\u0026     cp -a /go/src/github.com/grafana/grafana/bin/grafana-server ${GRAFANA_HOME}/bin/grafana-server \u0026\u0026     cp -ra /go/src/github.com/grafana/grafana/public_gen ${GRAFANA_HOME} \u0026\u0026     mv ${GRAFANA_HOME}/public_gen ${GRAFANA_HOME}/public \u0026\u0026     cp -ra /go/src/github.com/grafana/grafana/conf ${GRAFANA_HOME} \u0026\u0026     apk del ${build_pkgs} \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /root/.n* \u0026\u0026     rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "grafana.ini",
            "/etc/grafana/grafana.ini"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/grafana",
            "/var/log/grafana",
            "/etc/grafana"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${GRAFANA_HOME}"
        },
        {
          "CmdLine": [
            "/grafana/bin/grafana-server",
            "-config",
            "/etc/grafana/grafana.ini",
            "-homepath",
            "/grafana/"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}