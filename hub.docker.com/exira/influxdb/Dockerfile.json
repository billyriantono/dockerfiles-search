{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "exira/base:3.3.3",
      "SourceCode": "FROM exira/base:3.3.3",
      "Platform": "",
      "From": {
        "Image": "exira/base:3.3.3"
      },
      "Commands": [
        {
          "Maintainer": "exira.com \u003cinfo@exira.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "1001"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "1001"
        },
        {
          "Env": [
            {
              "Key": "INFLUXDB_VERSION",
              "Value": "0.13.0-1"
            },
            {
              "Key": "INFLUXDB_FILE",
              "Value": "influxdb-0.13.0_linux_amd64"
            },
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.23-r1"
            },
            {
              "Key": "INFLUXDB_HOME",
              "Value": "/data"
            },
            {
              "Key": "CONTAINER_USER",
              "Value": "influxdb"
            },
            {
              "Key": "CONTAINER_GROUP",
              "Value": "influxdb"
            },
            {
              "Key": "PRE_CREATE_DB",
              "Value": "**None**"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_FILE",
              "Value": "glibc-${GLIBC_VERSION}.apk"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "build_pkgs=\"wget openssl ca-certificates\" \u0026\u0026     runtime_pkgs=\"bash curl\" \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk --update --no-cache add ${build_pkgs} ${runtime_pkgs} \u0026\u0026     mkdir -p /home/${CONTAINER_USER} \u0026\u0026     addgroup -g $CONTAINER_GID -S ${CONTAINER_GROUP} \u0026\u0026     adduser -u $CONTAINER_UID  -S -D -G ${CONTAINER_GROUP} -h /home/${CONTAINER_USER} -s /bin/sh ${CONTAINER_USER} \u0026\u0026     chown -R ${CONTAINER_USER}:${CONTAINER_GROUP} /home/${CONTAINER_USER} \u0026\u0026     wget -O /etc/apk/keys/andyshinn.rsa.pub https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/andyshinn.rsa.pub \u0026\u0026     wget -O /tmp/${GLIBC_FILE} https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${GLIBC_FILE} \u0026\u0026     apk add /tmp/${GLIBC_FILE} \u0026\u0026     wget -O /tmp/${INFLUXDB_FILE}.tar.gz https://dl.influxdata.com/influxdb/releases/${INFLUXDB_FILE}.tar.gz \u0026\u0026     tar xvfz /tmp/${INFLUXDB_FILE}.tar.gz -C /tmp \u0026\u0026     cp /tmp/influxdb-${INFLUXDB_VERSION}/usr/bin/* /usr/bin \u0026\u0026     cp -r /tmp/influxdb-${INFLUXDB_VERSION}/etc/influxdb /etc \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf \u0026\u0026     mkdir -p ${INFLUXDB_HOME} \u0026\u0026     chown -R ${CONTAINER_USER}:${CONTAINER_GROUP} ${INFLUXDB_HOME} \u0026\u0026     apk del ${build_pkgs} \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config.toml",
            "/etc/influxdb.toml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "types.db",
            "/usr/share/collectd/types.db"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dos2unix /etc/influxdb.toml \u0026\u0026     dos2unix /usr/share/collectd/types.db \u0026\u0026     dos2unix /run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8083"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8086"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${INFLUXDB_HOME}"
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}