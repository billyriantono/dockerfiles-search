{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "exira/base:3.4.2",
      "SourceCode": "FROM exira/base:3.4.2",
      "Platform": "",
      "From": {
        "Image": "exira/base:3.4.2"
      },
      "Commands": [
        {
          "Maintainer": "exira.com \u003cinfo@exira.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "1002"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "1002"
        },
        {
          "Env": [
            {
              "Key": "POWERDNS_VERSION",
              "Value": "3.4.8"
            },
            {
              "Key": "CONTAINER_USER",
              "Value": "pdns"
            },
            {
              "Key": "CONTAINER_GROUP",
              "Value": "pdns"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "disable-execinfo.patch",
            "/tmp/disable-execinfo.patch"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "packageversion.patch",
            "/tmp/packageversion.patch"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/${CONTAINER_USER} \u0026\u0026     addgroup -g $CONTAINER_GID -S ${CONTAINER_GROUP} \u0026\u0026     adduser -u $CONTAINER_UID  -S -D -G ${CONTAINER_GROUP} -h /home/${CONTAINER_USER} -s /bin/sh ${CONTAINER_USER} \u0026\u0026     chown -R ${CONTAINER_USER}:${CONTAINER_GROUP} /home/${CONTAINER_USER} \u0026\u0026     build_pkgs=\"build-base wget boost-dev mariadb-dev git autoconf automake bison flex g++ libtool make ragel\" \u0026\u0026     runtime_pkgs=\"mysql-client musl bash boost-program_options boost-serialization mariadb-libs libstdc++\" \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk --update --no-cache add ${build_pkgs} ${runtime_pkgs} \u0026\u0026     mkdir /tmp/pdns \u0026\u0026     cd /tmp/pdns \u0026\u0026     git clone https://github.com/PowerDNS/pdns.git -v -b auth-${POWERDNS_VERSION} . \u0026\u0026     git apply -v /tmp/disable-execinfo.patch \u0026\u0026     git apply -v /tmp/packageversion.patch \u0026\u0026     ./bootstrap \u0026\u0026 \t./configure PACKAGEVERSION=${POWERDNS_VERSION}         --prefix=/usr \t\t--sysconfdir=/etc \t\t--mandir=/usr/share/man \t\t--infodir=/usr/share/info \t\t--localstatedir=/var \t\t--libdir=/usr/lib/pdns \t\t--with-modules=\"bind gmysql\" \t\t--with-dynmodules=\"\"         --without-lua \t\t--disable-static \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     make clean \u0026\u0026     mkdir -p /var/lib/powerdns/zones \u0026\u0026     strip -s /usr/sbin/pdns_server \u0026\u0026     apk del ${build_pkgs} \u0026\u0026     rm /etc/pdns.conf-dist \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pdns.initd",
            "/etc/init.d/pdns"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pdns.sql",
            "/pdns.sql"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "named.conf-slave",
            "/named.conf-slave"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /run.sh \u0026\u0026     chmod 755 /etc/init.d/pdns"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/powerdns/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5300/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5300/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}