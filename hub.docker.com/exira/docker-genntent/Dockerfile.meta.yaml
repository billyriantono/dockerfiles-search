MetaArgs: null
Stages:
- BaseName: nimmis/alpine-micro:3.8
  Commands:
  - Env:
    - Key: LMS_BASE
      Value: '"/usr/local"'
    Name: env
  - Env:
    - Key: LMSBUILD_VERSION
      Value: '"3.8.1"'
    Name: env
  - Env:
    - Key: LMSBUILD_NAME
      Value: '"alpine-base"'
    Name: env
  - Env:
    - Key: LMSBUILD_REPO
      Value: ewsdocker
    Name: env
  - Env:
    - Key: LMSBUILD_REGISTRY
      Value: '""'
    Name: env
  - Env:
    - Key: LMSBUILD_DOCKER
      Value: '"${LMSBUILD_REPO}/${LMSBUILD_NAME}:${LMSBUILD_VERSION}"'
    Name: env
  - Env:
    - Key: LMSBUILD_PACKAGE
      Value: '"nimmis/alpine-micro:3.8"'
    Name: env
  - Env:
    - Key: LMSBUILD_BASE
      Value: '"alpine:3.8.0"'
    Name: env
  - CmdLine:
    - apk update  && apk upgrade  && apk add bash             bash-doc             bash-completion             binutils             coreutils             curl             dbus             findutils             grep             nano             pciutils             shadow             unzip             usbutils             util-linux             wget             zip  &&
      rm -rf /var/cache/apk/*  && echo "${LMSBUILD_BASE}" >  /etc/ewsdocker-builds.txt  &&
      printf "${LMSBUILD_DOCKER} (${LMSBUILD_PACKAGE}), %s @ %s\n" `date '+%Y-%m-%d'`
      `date '+%H:%M:%S'` >> /etc/ewsdocker-builds.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/.
    - /
  - CmdLine:
    - ln -s /usr/bin/lms/setup-alpine /usr/bin/lms-setup-alpine  && ln -s /usr/bin/lms/alpine-version
      /usr/bin/lms-alpine-version  && chmod -R 775 /usr/local/bin/*  && chmod -R +x
      /usr/bin/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: nimmis/alpine-micro:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM  nimmis/alpine-micro:3.8
