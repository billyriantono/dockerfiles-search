{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "exira/base:3.4.2",
      "SourceCode": "FROM exira/base:3.4.2",
      "Platform": "",
      "From": {
        "Image": "exira/base:3.4.2"
      },
      "Commands": [
        {
          "Maintainer": "exira.com \u003cinfo@exira.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.3"
            },
            {
              "Key": "NGX_CACHE_PURGE_VERSION",
              "Value": "2.3"
            },
            {
              "Key": "HEADERS_MORE_VERSION",
              "Value": "0.30"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "build_pkgs=\"build-base linux-headers openssl-dev pcre-dev wget zlib-dev\" \u0026\u0026     runtime_pkgs=\"ca-certificates openssl pcre zlib\" \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk --update --no-cache add ${build_pkgs} ${runtime_pkgs} \u0026\u0026     update-ca-certificates \u0026\u0026     mkdir /tmp/nginx \u0026\u0026     cd /tmp/nginx \u0026\u0026     wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     tar xzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     cd nginx-${NGINX_VERSION} \u0026\u0026     wget https://github.com/FRiCKLE/ngx_cache_purge/archive/${NGX_CACHE_PURGE_VERSION}.tar.gz \u0026\u0026     tar xzf ${NGX_CACHE_PURGE_VERSION}.tar.gz \u0026\u0026     wget https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz \u0026\u0026     tar xzf v${HEADERS_MORE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/nginx/nginx-${NGINX_VERSION} \u0026\u0026     ./configure         --prefix=/usr/share/nginx         --sbin-path=/usr/sbin/nginx         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --pid-path=/var/run/nginx.pid         --lock-path=/var/run/nginx.lock         --http-client-body-temp-path=/var/cache/nginx/client_temp         --http-proxy-temp-path=/var/cache/nginx/proxy_temp         --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp         --user=www-data         --group=www-data         --with-file-aio         --with-ipv6         --with-threads         --with-http_gzip_static_module         --with-http_gunzip_module         --with-http_ssl_module         --with-http_stub_status_module         --with-http_v2_module         --without-http_autoindex_module         --without-http_browser_module         --without-http_empty_gif_module         --without-http_geo_module         --without-http_memcached_module         --without-http_scgi_module         --without-http_split_clients_module         --without-http_ssi_module         --without-http_uwsgi_module         --add-module=./ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}         --add-module=./headers-more-nginx-module-${HEADERS_MORE_VERSION} \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "strip -s /usr/sbin/nginx \u0026\u0026     sed -i 's/nginx\\r/exira\\r/' /usr/sbin/nginx \u0026\u0026     mkdir -p /home/www-data \u0026\u0026     addgroup -g 433 -S www-data \u0026\u0026     adduser -u 431 -S -D -G www-data -h /home/www-data -s /sbin/nologin www-data \u0026\u0026     chown -R www-data:www-data /home/www-data \u0026\u0026     mkdir /var/cache/nginx \u0026\u0026     apk del ${build_pkgs} \u0026\u0026     cd / \u0026\u0026     rm /etc/nginx/*.default \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /var/www/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}