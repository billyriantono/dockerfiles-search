MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Kirsten Hunter (khunter@akamai.com)
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl patch gawk g++ gcc make libc6-dev patch libreadline6-dev
      zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 autoconf libgdbm-dev
      libncurses5-dev automake libtool bison pkg-config libffi-dev software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:longsleep/golang-backports
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y -q libssl-dev python-all wget
      vim python-pip php php-curl ruby-dev nodejs-dev npm php-pear php-dev ruby perl
      golang-go git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install httpie-edgegrid
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./examples
    - /opt/examples
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./contrib/python
    - /opt/examples/python/contrib
  - Name: workdir
    Path: /opt/examples/php
  - CmdLine:
    - ./composer.phar install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/examples/ruby
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - bundler install
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install akamai-edgegrid
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/examples/node
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g n; n 7.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /goopt
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /goopt
    Name: env
  - CmdLine:
    - go get github.com/akamai/cli
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /goopt/src/github.com/akamai/cli
  - Env:
    - Key: PATH
      Value: ${PATH}:/goopt/bin
    Name: env
  - CmdLine:
    - curl https://glide.sh/get | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - glide install
    Name: run
    PrependShell: true
  - CmdLine:
    - go build -o akamai . && mv akamai /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /usr/local/bin/akamai
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/akamai install property
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/akamai install purge
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/examples/python
  - CmdLine:
    - python /opt/examples/python/tools/setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - cpan -i Akamai::Edgegrid LWP::Protocol::https
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./MOTD
    - /opt/MOTD
  - CmdLine:
    - echo "alias gen_edgerc=/opt/examples/python/gen_edgerc.py" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias verify_creds=/opt/examples/python/verify_creds.py" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export PATH=${PATH}:/opt/bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cat /opt/MOTD" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.httpie
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config.json
    - /root/.httpie/config.json
  - CmdLine:
    - echo "PS1='DevZone Hands-On Labs  >> '" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
