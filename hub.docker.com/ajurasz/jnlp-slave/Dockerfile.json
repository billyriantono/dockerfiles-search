{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jnlp-slave:3.35-5-jdk11",
      "SourceCode": "FROM jenkins/jnlp-slave:3.35-5-jdk11",
      "Platform": "",
      "From": {
        "Image": "jenkins/jnlp-slave:3.35-5-jdk11"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 export DOCKER_VERSION=docker-18.06.2-ce.tgz   \u0026\u0026 DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz $DOCKER_URL   \u0026\u0026 ls -lha /tmp/docker.tgz   \u0026\u0026 tar -xz -C /tmp -f /tmp/docker.tgz   \u0026\u0026 mv /tmp/docker/* /usr/bin   \u0026\u0026 rm -rf /tmp/docker /tmp/docker.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 export GRADLE_VERSION=5.6.2   \u0026\u0026 GRADLE_URL=\"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/gradle.zip $GRADLE_URL   \u0026\u0026 unzip /tmp/gradle.zip -d /tmp/gradle   \u0026\u0026 mkdir -p /usr/local/gradle   \u0026\u0026 mv \"/tmp/gradle/gradle-${GRADLE_VERSION}\"/* /usr/local/gradle   \u0026\u0026 rm -rf /tmp/gradle /tmp/gradle.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/local/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins/.gradle/caches/"
          ]
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.16.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $NVM_DIR   \u0026\u0026 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash   \u0026\u0026 . \"$NVM_DIR/nvm.sh\" \u0026\u0026 nvm install ${NODE_VERSION}   \u0026\u0026 . \"$NVM_DIR/nvm.sh\" \u0026\u0026  nvm use v${NODE_VERSION}   \u0026\u0026 . \"$NVM_DIR/nvm.sh\" \u0026\u0026 nvm alias default v${NODE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y libasound2 libnspr4 libnss3 libxss1 xdg-utils libappindicator3-1 fonts-liberation lsb-release libgtk-3-0 libatspi2.0-0 libatk-bridge2.0-0   \u0026\u0026 GOOGLE_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/google.deb $GOOGLE_URL   \u0026\u0026 dpkg -i /tmp/google.deb   \u0026\u0026 rm -rf /tmp/google.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}