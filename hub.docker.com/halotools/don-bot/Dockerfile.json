{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "downloader",
      "BaseName": "docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4",
      "SourceCode": "FROM docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4 as downloader",
      "Platform": "",
      "As": "downloader",
      "From": {
        "Image": "docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4"
      },
      "Commands": [
        {
          "Maintainer": "toolbox@cloudpassage.com",
          "Name": "maintainer"
        },
        {
          "Key": "HALOCELERY_BRANCH",
          "Name": "arg",
          "Value": "v0.8.1"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y         git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app/"
        },
        {
          "CmdLine": [
            "echo \"Target branch for this build: $HALOCELERY_BRANCH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b $HALOCELERY_BRANCH https://github.com/cloudpassage/halocelery"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd halocelery \u0026\u0026     git archive         --verbose         --format=tar.gz         -o /app/halocelery.tar.gz         $HALOCELERY_BRANCH"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4",
      "SourceCode": "FROM docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4",
      "Platform": "",
      "From": {
        "Image": "docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4"
      },
      "Commands": [
        {
          "Maintainer": "toolbox@cloudpassage.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SLACK_ICON_URL",
              "Value": "http://www.cloudpassage.com/wp-content/uploads/2016/12/don-operator.png"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HALO_API_HOSTNAME",
              "Value": "api.cloudpassage.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HALO_API_PORT",
              "Value": "443"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "HALO_API_KEY",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "HALO_API_SECRET_KEY",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "RUN_INTEGRATION_TESTS",
          "Name": "arg",
          "Value": null
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -y expect"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     pytest==3.1.1     python-dotenv==0.8.2     codeclimate-test-reporter==0.2.0     pytest-cover==3.0.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app/",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /src/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src/"
        },
        {
          "Chown": "",
          "From": "downloader",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/halocelery.tar.gz",
            "/src/halocelery/halocelery.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "cd halocelery \u0026\u0026     tar -zxvf ./halocelery.tar.gz \u0026\u0026     cd /src/ \u0026\u0026     mv ./halocelery /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${APP_USER}:$APP_GROUP /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${APP_USER}"
        },
        {
          "CmdLine": [
            "echo $RUN_INTEGRATION_TESTS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"$RUN_INTEGRATION_TESTS\" = \"True\" ] ;     then echo \"Run all tests\" \u0026\u0026         py.test --cov-report term-missing --cov=donlib --cov=cortexlib /app/test/ ;      else echo Not running integration tests!. \u0026\u0026         py.test /app/test/unit ;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4",
      "SourceCode": "FROM docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4",
      "Platform": "",
      "From": {
        "Image": "docker.io/halotools/python-sdk:ubuntu-16.04_sdk-1.1.4"
      },
      "Commands": [
        {
          "Maintainer": "toolbox@cloudpassage.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SLACK_ICON_URL",
              "Value": "http://www.cloudpassage.com/wp-content/uploads/2016/12/don-operator.png"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HALO_API_HOSTNAME",
              "Value": "api.cloudpassage.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HALO_API_PORT",
              "Value": "443"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -y expect"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app/",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /src/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src/"
        },
        {
          "Chown": "",
          "From": "downloader",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/halocelery.tar.gz",
            "/src/halocelery/halocelery.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "cd halocelery \u0026\u0026     tar -zxvf ./halocelery.tar.gz \u0026\u0026     cd /src/ \u0026\u0026     mv ./halocelery /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${APP_USER}:$APP_GROUP /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${APP_USER}"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "unbuffer",
            "python",
            "/app/runner.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}