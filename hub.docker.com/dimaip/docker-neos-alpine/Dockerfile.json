{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine3.7",
      "SourceCode": "FROM php:7.2-fpm-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine3.7"
      },
      "Commands": [
        {
          "Maintainer": "Dmitri Pisarev \u003cdimaip@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "PHP_REDIS_VERSION",
          "Name": "arg",
          "Value": "\"3.1.6\""
        },
        {
          "Key": "PHP_YAML_VERSION",
          "Name": "arg",
          "Value": "\"2.0.2\""
        },
        {
          "Key": "PHP_XDEBUG_VERSION",
          "Name": "arg",
          "Value": "\"2.6.0beta1\""
        },
        {
          "Key": "S6_VERSION",
          "Name": "arg",
          "Value": "\"1.21.2.2\""
        },
        {
          "Env": [
            {
              "Key": "FLOW_REWRITEURLS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.6.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_DATABASE",
              "Value": "db"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_HOST",
              "Value": "db"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_USER",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_PASS",
              "Value": "pass"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "org.label-schema.license",
              "Value": "\"MIT\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Neos Alpine Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/psmb/docker-neos-alpine\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/psmb/docker-neos-alpine\""
            },
            {
              "Key": "org.label-schema.vcs-type",
              "Value": "\"Git\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apk update \t\u0026\u0026 apk add tar rsync curl sed bash yaml python py-pip py-setuptools groff less mysql-client git nginx optipng freetype libjpeg-turbo-utils icu-dev openssh pwgen sudo s6 \t\u0026\u0026 pip install awscli \t\u0026\u0026 apk del py-pip py-setuptools \t\u0026\u0026 apk add --virtual .phpize-deps $PHPIZE_DEPS libtool freetype-dev libpng-dev libjpeg-turbo-dev yaml-dev \t\u0026\u0026 docker-php-ext-configure gd \t\t--with-gd \t\t--with-freetype-dir=/usr/include/ \t\t--with-png-dir=/usr/include/ \t\t--with-jpeg-dir=/usr/include/ \t\u0026\u0026 docker-php-ext-install \t\tgd \t\tpdo \t\tpdo_mysql \t\tmbstring \t\topcache \t\tintl \t\texif \t\tjson \t\ttokenizer \t\u0026\u0026 pecl install redis-${PHP_REDIS_VERSION} yaml-${PHP_YAML_VERSION} xdebug-${PHP_XDEBUG_VERSION} \t\u0026\u0026 docker-php-ext-enable xdebug \t\u0026\u0026 docker-php-ext-enable redis \t\u0026\u0026 docker-php-ext-enable yaml \t\u0026\u0026 apk del .phpize-deps \t\u0026\u0026 curl -o /tmp/composer-setup.php https://getcomposer.org/installer \t\u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \u0026\u0026 rm -rf /tmp/composer-setup.php \t\u0026\u0026 curl -s http://beard.famelo.com/ \u003e /usr/local/bin/beard \t\u0026\u0026 chmod +x /usr/local/bin/beard \t\u0026\u0026 git config --global user.email \"server@server.com\" \t\u0026\u0026 git config --global user.name \"Server\" \t\u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \u0026\u0026 rm /tmp/s6-overlay-amd64.tar.gz \t\u0026\u0026 echo \"xdebug.remote_enable=0\" \u003e\u003e $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \t\u0026\u0026 echo \"xdebug.remote_connect_back=1\" \u003e\u003e $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \t\u0026\u0026 echo \"xdebug.max_nesting_level=512\" \u003e\u003e $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \t\u0026\u0026 echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" \u003e\u003e $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \t\u0026\u0026 echo \"xdebug.remote_host=172.17.0.1\" \u003e\u003e $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \t\u0026\u0026 deluser www-data \t\u0026\u0026 delgroup cdrw \t\u0026\u0026 addgroup -g 80 www-data \t\u0026\u0026 adduser -u 80 -G www-data -s /bin/bash -D www-data -h /data \t\u0026\u0026 rm -Rf /home/www-data \t\u0026\u0026 sed -i -e \"s#listen = 9000#listen = /var/run/php-fpm.sock#\" /usr/local/etc/php-fpm.d/zz-docker.conf \t\u0026\u0026 echo \"clear_env = no\" \u003e\u003e /usr/local/etc/php-fpm.d/zz-docker.conf \t\u0026\u0026 echo \"listen.owner = www-data\" \u003e\u003e /usr/local/etc/php-fpm.d/zz-docker.conf \t\u0026\u0026 echo \"listen.group = www-data\" \u003e\u003e /usr/local/etc/php-fpm.d/zz-docker.conf \t\u0026\u0026 echo \"listen.mode = 0660\" \u003e\u003e /usr/local/etc/php-fpm.d/zz-docker.conf \t\u0026\u0026 chown 80:80 -R /var/lib/nginx \t\u0026\u0026 chmod +x /github-keys.sh \t\u0026\u0026 sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \t\u0026\u0026 sed -i -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config \t\u0026\u0026 sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config \t\u0026\u0026 sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin no/' /etc/ssh/sshd_config \t\u0026\u0026 sed -i '/secure_path/d' /etc/sudoers \t\u0026\u0026 echo 'www-data ALL=(ALL) NOPASSWD: ALL' \u003e /etc/sudoers.d/www \t\u0026\u0026 /bin/bash -c \"source /init-php-conf.sh\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}