MetaArgs: null
Stages:
- BaseName: jlesage/baseimage-gui:alpine-3.9-v3.5.2
  Commands:
  - Key: MKVTOOLNIX_VERSION
    Name: arg
    Value: 37.0.0
  - Key: MEDIAINFO_VERSION
    Name: arg
    Value: "19.07"
  - Key: MKVTOOLNIX_URL
    Name: arg
    Value: https://mkvtoolnix.download/sources/mkvtoolnix-${MKVTOOLNIX_VERSION}.tar.xz
  - Key: MEDIAINFO_URL
    Name: arg
    Value: https://github.com/MediaArea/MediaInfo/archive/v${MEDIAINFO_VERSION}.tar.gz
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - add-pkg         boost-system         boost-regex         boost-filesystem         libmagic         libmatroska         libebml         flac         qt5-qtmultimedia         mesa-dri-swrast         libmediainfo         qt5-qtsvg         &&     add-pkg
      cmark-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/community
    Name: run
    PrependShell: true
  - CmdLine:
    - add-pkg --virtual build-dependencies         curl         patch         imagemagick         build-base         ruby-rake         ruby-json         qt5-qtbase-dev         qt5-qtmultimedia-dev         boost-dev         file-dev         zlib-dev         libmatroska-dev         flac-dev         libogg-dev         libvorbis-dev         docbook-xsl         gettext-dev         &&     echo
      "Downloading MKVToolNix package..." &&     curl -# -L ${MKVTOOLNIX_URL} | tar
      xJ &&     find mkvtoolnix-${MKVTOOLNIX_VERSION} -name "*.png" -exec convert
      -strip {} {} \; &&     cd mkvtoolnix-${MKVTOOLNIX_VERSION} &&     curl -# -L
      https://raw.githubusercontent.com/jlesage/docker-mkvtoolnix/master/disable-high-dpi-scaling-override.patch
      | patch -p1 &&     env LIBINTL_LIBS=-lintl ./configure         --prefix=/usr         --mandir=/tmp/mkvtoolnix-man         --disable-update-check         &&     rake
      -j8 &&     rake install &&     strip /usr/bin/mkv* &&     cd .. &&     del-pkg
      build-dependencies &&     rm -rf /tmp/* /tmp/.[!.]*
    Name: run
    PrependShell: true
  - CmdLine:
    - add-pkg --virtual build-dependencies         build-base         curl         qt5-qtbase-dev         libmediainfo-dev         &&     echo
      "Downloading MediaInfo package..." &&     mkdir mediainfo &&     curl -# -L
      ${MEDIAINFO_URL} | tar xz --strip 1 -C mediainfo &&     cd mediainfo/Project/QMake/GUI
      &&     /usr/lib/qt5/bin/qmake &&     make -j$(nproc) install &&     cd ../../../../
      &&     strip -v /usr/bin/mediainfo-gui &&     cd ../ &&     del-pkg build-dependencies
      &&     rm -rf /tmp/* /tmp/.[!.]*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed-patch 's/<application type="normal">/<application type="normal" name="mkvtoolnix-gui">/'         /etc/xdg/openbox/rc.xml
      &&     sed-patch '/<application type="normal" name="mkvtoolnix-gui">/a \    <layer>below</layer>'         /etc/xdg/openbox/rc.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - echo > /etc/fstab
    Name: run
    PrependShell: true
  - CmdLine:
    - APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/mkvtoolnix-icon.png
      &&     install_app_icon.sh "$APP_ICON_URL"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - Env:
    - Key: APP_NAME
      Value: '"MKVToolNix"'
    Name: env
  - Name: volume
    Volumes:
    - /config
  - Name: volume
    Volumes:
    - /storage
  - Labels:
    - Key: org.label-schema.name
      Value: '"mkvtoolnix"'
    - Key: org.label-schema.description
      Value: '"Docker container for MKVToolNix"'
    - Key: org.label-schema.version
      Value: '"unknown"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/jlesage/docker-mkvtoolnix"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  From:
    Image: jlesage/baseimage-gui:alpine-3.9-v3.5.2
  Name: ""
  Platform: ""
  SourceCode: FROM jlesage/baseimage-gui:alpine-3.9-v3.5.2
