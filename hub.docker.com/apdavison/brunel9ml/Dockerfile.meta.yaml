MetaArgs: null
Stages:
- BaseName: neuralensemble/simulation:py2
  Commands:
  - Maintainer: andrew.davison@unic.cnrs-gif.fr
    Name: maintainer
  - CmdLine:
    - sed 's/#force_color_prompt/force_color_prompt/' .bashrc > tmp; mv tmp .bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /home/docker/env/neurosci/bin/activate" >> .bashrc
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update; apt-get install -y python-lxml python-pandas libgmp-dev
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Env:
    - Key: VENV2
      Value: $HOME/env/analysis
    Name: env
  - CmdLine:
    - virtualenv --system-site-packages $VENV2
    Name: run
    PrependShell: true
  - CmdLine:
    - '$VENV2/bin/pip install -U numpy parameters quantities  # need numpy >= 1.9'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/NeuralEnsemble/python-neo/archive/apibreak.tar.gz -O
      $HOME/packages/neo_apibreak.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - $VENV2/bin/pip install $HOME/packages/neo_apibreak.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - $VENV2/bin/pip install elephant
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/packages
  - CmdLine:
    - echo "change this line to ensure we skip the cache"; git clone https://github.com/apdavison/lib9ML.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://bitbucket.org/apdavison/ninemlcodegen.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/apdavison/PyNN.git
    Name: run
    PrependShell: true
  - CmdLine:
    - $VENV/bin/pip install ./lib9ML
    Name: run
    PrependShell: true
  - CmdLine:
    - $VENV/bin/pip install ./ninemlcodegen/nmodl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ./PyNN; git checkout nineml; $VENV/bin/pip install .
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $VENV/local/lib/python2.7/site-packages/pyNN/neuron/nmodl; $VENV/bin/nrnivmodl
    Name: run
    PrependShell: true
  - CmdLine:
    - $VENV/bin/pip install sarge
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://code.call-cc.org/releases/4.11.0/chicken-4.11.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxf chicken-4.11.0.tar.gz; cd chicken-4.11.0; make PLATFORM=linux PREFIX=$HOME/chicken
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - $HOME/chicken/bin/chicken-install 9ML-toolkit
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $HOME/chicken/bin/9ML-network $VENV/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://downloads.sourceforge.net/project/mlton/mlton/20130715/mlton-20130715-1.amd64-linux.tgz?use_mirror=heanet
      -O mlton-20130715-1.amd64-linux.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xzf mlton-20130715-1.amd64-linux.tgz; mv usr/lib/mlton $VENV/lib; mv usr/bin/*
      $VENV/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - sed "s%lib='/usr/lib/mlton'%lib=\$VENV/lib/mlton%" $VENV/bin/mlton > mlton.tmp;
      mv mlton.tmp $VENV/bin/mlton
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod u+x $VENV/bin/mlton
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HOME/projects
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/projects
  - CmdLine:
    - echo 'echo "Docker container for running NineML demonstrations. See README.rst
      for instructions."' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  From:
    Image: neuralensemble/simulation:py2
  Name: ""
  Platform: ""
  SourceCode: FROM neuralensemble/simulation:py2
