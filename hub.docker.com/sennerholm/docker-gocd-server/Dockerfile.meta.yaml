MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Maintainer: karel.bemelmans@unibet.com
    Name: maintainer
  - CmdLine:
    - apk --no-cache --update add   apache2-utils   bash   curl   git   openjdk7-jre   subversion   xmlstarlet   &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -g 500 go && adduser -u 500 -h /var/lib/go-server -H -S -G go go
    Name: run
    PrependShell: true
  - Key: GO_MAJOR_VERSION
    Name: arg
    Value: 16.12.0
  - Key: GO_BUILD_VERSION
    Name: arg
    Value: "4352"
  - Key: GO_VERSION
    Name: arg
    Value: '"${GO_MAJOR_VERSION}-${GO_BUILD_VERSION}"'
  - Key: GOCD_SHA256
    Name: arg
    Value: 6ca2b62426167821f9e182f4c4173adb8cf86057b4d8deed8fb4fc29c2881ce5
  - CmdLine:
    - curl -L --silent https://download.gocd.io/binaries/${GO_VERSION}/generic/go-server-${GO_VERSION}.zip        -o
      /tmp/go-server.zip   && echo "${GOCD_SHA256}  /tmp/go-server.zip" | sha256sum
      -c -   && unzip /tmp/go-server.zip -d /usr/local   && ln -s /usr/local/go-server-${GO_MAJOR_VERSION}
      /usr/local/go-server   && chown -R go:go /usr/local/go-server-${GO_MAJOR_VERSION}   &&
      rm /tmp/go-server.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/default   && cp /usr/local/go-server-${GO_MAJOR_VERSION}/go-server.default
      /etc/default/go-server   && sed -i -e "s/DAEMON=Y/DAEMON=N/" /etc/default/go-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/go && chown go:go /etc/go   && mkdir /var/lib/go-server && chown
      go:go /var/lib/go-server   && mkdir /var/log/go-server && chown go:go /var/log/go-server
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8153"
    - "8154"
  - Name: volume
    Volumes:
    - /etc/go
  - Name: volume
    Volumes:
    - /var/lib/go-server
  - Name: volume
    Volumes:
    - /var/log/go-server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - chown go:go /docker-entrypoint.sh && chmod 500 /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: user
    User: go
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
