{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "CmdLine": [
            "useradd --user-group --create-home --no-log-init --shell /bin/bash superset"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-transport-https apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential libssl-dev     libffi-dev python3-dev libsasl2-dev libldap2-dev libxi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y vim less postgresql-client redis-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/superset"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements-dev.txt",
            "."
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade setuptools pip     \u0026\u0026 pip install -r requirements.txt -r requirements-dev.txt     \u0026\u0026 rm -rf /root/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "superset:superset",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "superset",
            "superset"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/superset/superset/bin:$PATH"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "/home/superset/superset/:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "superset"
        },
        {
          "CmdLine": [
            "cd superset/assets     \u0026\u0026 npm ci     \u0026\u0026 npm run sync-backend     \u0026\u0026 npm run build     \u0026\u0026 rm -rf node_modules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contrib/docker/docker-init.sh",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contrib/docker/docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Health": {
            "Test": [
              "CMD",
              "curl",
              "-f",
              "http://localhost:8088/health"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "8088"
          ]
        }
      ]
    }
  ]
}