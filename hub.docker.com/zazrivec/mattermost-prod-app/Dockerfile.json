{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/mattermost/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MM_VERSION",
              "Value": "5.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "edition",
          "Name": "arg",
          "Value": "team"
        },
        {
          "Key": "PUID",
          "Name": "arg",
          "Value": "2000"
        },
        {
          "Key": "PGID",
          "Name": "arg",
          "Value": "2000"
        },
        {
          "Key": "MM_BINARY",
          "Name": "arg",
          "Value": ""
        },
        {
          "CmdLine": [
            "apk add --no-cache \tca-certificates \tcurl \tjq \tlibc6-compat \tlibffi-dev \tlinux-headers \tmailcap \tnetcat-openbsd \txmlsec-dev \t\u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /mattermost/data /mattermost/plugins /mattermost/client/plugins     \u0026\u0026 if [ ! -z \"$MM_BINARY\" ]; then curl $MM_BINARY | tar -xvz ;       elif [ \"$edition\" = \"team\" ] ; then curl https://releases.mattermost.com/$MM_VERSION/mattermost-team-$MM_VERSION-linux-amd64.tar.gz | tar -xvz ;       else curl https://releases.mattermost.com/$MM_VERSION/mattermost-$MM_VERSION-linux-amd64.tar.gz | tar -xvz ; fi     \u0026\u0026 cp /mattermost/config/config.json /config.json.save     \u0026\u0026 rm -rf /mattermost/config/config.json     \u0026\u0026 addgroup -g ${PGID} mattermost     \u0026\u0026 adduser -D -u ${PUID} -G mattermost -h /mattermost -D mattermost     \u0026\u0026 chown -R mattermost:mattermost /mattermost /config.json.save /mattermost/plugins /mattermost/client/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "mattermost"
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "curl --fail http://localhost:8000 || exit 1"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/mattermost"
        },
        {
          "CmdLine": [
            "mattermost"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/mattermost/data",
            "/mattermost/logs",
            "/mattermost/config",
            "/mattermost/plugins",
            "/mattermost/client/plugins"
          ]
        }
      ]
    }
  ]
}