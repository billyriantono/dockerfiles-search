{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "amazonlinux:latest",
      "SourceCode": "FROM amazonlinux:latest",
      "Platform": "",
      "From": {
        "Image": "amazonlinux:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum install -y java-1.8.0-openjdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y gcc-c++ make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y openssl-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update \u0026\u0026   yum -y install wget \u0026\u0026   yum install -y tar.x86_64 \u0026\u0026   yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LDFLAGS",
              "Value": "-Wl,-rpath=/var/task/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install cairo cairo-devel libjpeg8-devel libjpeg-turbo-devel automake gcc kernel-devel  cairomm-devel  pango pango-devel pangomm pangomm-devel giflib-devel  -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "'/usr/local/lib/pkgconfig'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/mylib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls /usr/lib64/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/lib64/{libpng15.so,libpng15.so.15,libjpeg.so.62,libgraphite2.so.3,libpixman-1.so.0,libfreetype.so.6,libcairo.so.2,libthai.so.0,libpango-1.0.so.0,libharfbuzz.so.0,libpangocairo-1.0.so.0,libpangoft2-1.0.so.0} /usr/mylib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod u+x /usr/mylib/**"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$NVM_DIR"
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash   \u0026\u0026 . $NVM_DIR/nvm.sh   \u0026\u0026 nvm install $NODE_VERSION   \u0026\u0026 nvm alias default $NODE_VERSION   \u0026\u0026 nvm use default   \u0026\u0026 node -e \"console.log('Running Node.js ' + process.version)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls /usr/lib64/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/lib/:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/lib64/:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g serverless"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g node-gyp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g jsdom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g canvas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g fabric"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm list -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/nvm/versions/node/v6.10.2/lib/node_modules/canvas \u0026\u0026 node-gyp rebuild"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo $LD_LIBRARY_PATH"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}