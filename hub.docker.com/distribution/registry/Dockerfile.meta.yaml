MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.11-alpine
  Commands:
  - Env:
    - Key: DISTRIBUTION_DIR
      Value: /go/src/github.com/docker/distribution
    Name: env
  - Env:
    - Key: DOCKER_BUILDTAGS
      Value: include_oss include_gcs
    Name: env
  - Key: GOOS
    Name: arg
    Value: linux
  - Key: GOARCH
    Name: arg
    Value: amd64
  - Key: GOARM
    Name: arg
    Value: "6"
  - CmdLine:
    - set -ex     && apk add --no-cache make git file
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DISTRIBUTION_DIR
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $DISTRIBUTION_DIR
  - CmdLine:
    - CGO_ENABLED=0 make PREFIX=/go clean binaries && file ./bin/registry | grep "statically
      linked"
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11-alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.11-alpine AS build
- BaseName: alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cmd/registry/config-dev.yml
    - /etc/docker/registry/config.yml
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/docker/distribution/bin/registry
    - /bin/registry
  - Name: volume
    Volumes:
    - /var/lib/registry
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - registry
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - serve
    - /etc/docker/registry/config.yml
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
