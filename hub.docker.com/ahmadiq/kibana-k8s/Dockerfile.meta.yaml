MetaArgs: null
Stages:
- BaseName: stakater/base
  Commands:
  - Labels:
    - Key: authors
      Value: '"Hazim <hazim_malik@hotmail.com>"'
    Name: label
  - CmdLine:
    - groupadd -r kibana && useradd -r -m -g kibana kibana
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\"
      \t&& wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5 \t&& gpg --batch --verify
      /usr/local/bin/tini.asc /usr/local/bin/tini \t&& rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc
      \t&& chmod +x /usr/local/bin/tini \t&& tini -h"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4
    Name: run
    PrependShell: true
  - Env:
    - Key: KIBANA_MAJOR
      Value: "4.5"
    Name: env
  - Key: KIBANA_VERSION
    Name: arg
    Value: 4.5.4
  - CmdLine:
    - echo "deb http://packages.elastic.co/kibana/${KIBANA_MAJOR}/debian stable main"
      > /etc/apt/sources.list.d/kibana.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends
      kibana=$KIBANA_VERSION \t&& chown -R kibana:kibana /opt/kibana \t&& rm -rf /var/lib/apt/lists/*
      \t\t&& sed -ri \"s!^(\\#\\s*)?(elasticsearch\\.url:).*!\\2 'http://elasticsearch:9200'!\"
      /opt/kibana/config/kibana.yml \t&& grep -q 'elasticsearch:9200' /opt/kibana/config/kibana.yml"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/kibana/bin:$PATH
    Name: env
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - mkdir -p /etc/service/kibana
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /etc/service/kibana/run
  From:
    Image: stakater/base
  Name: ""
  Platform: ""
  SourceCode: "FROM \t    stakater/base"
