MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Mike Hockerman <mike@hockerman.com>
    Name: maintainer
  - CmdLine:
    - rm /bin/sh   && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y   && apt-get upgrade -y   && apt-get install -y bsdtar curl
      g++ make python-minimal git
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/tar   && ln -s /usr/bin/bsdtar /bin/tar
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /meteor
  - CmdLine:
    - curl -sL https://install.meteor.com?release=1.5 -o install_meteor.sh   && sh
      install_meteor.sh   && rm -rf /meteor
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /node
  - Env:
    - Key: NODE_VERSION
      Value: 4.8.3
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - CmdLine:
    - curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh
      -o install_nvm.sh   && sh install_nvm.sh   && source $NVM_DIR/nvm.sh   && nvm
      install $NODE_VERSION   && nvm alias default $NODE_VERSION   && nvm use default   &&
      rm -rf /node
    Name: run
    PrependShell: true
  - Env:
    - Key: TOOL_NODE_FLAGS
      Value: --max-old-space-size=8192
    Name: env
  - Expression: WORKDIR /app
    Name: onbuild
  - Expression: COPY ./. .
    Name: onbuild
  - Expression: RUN meteor npm i --production   && meteor build ../build --allow-superuser
      --directory   && rm -rf /app
    Name: onbuild
  - Expression: WORKDIR /build/bundle/programs/server
    Name: onbuild
  - Expression: RUN meteor npm i --production
    Name: onbuild
  - Expression: WORKDIR /build/bundle
    Name: onbuild
  - Expression: EXPOSE 80
    Name: onbuild
  - Expression: ENV PORT 80
    Name: onbuild
  - Expression: CMD [ "meteor", "node", "main.js" ]
    Name: onbuild
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
