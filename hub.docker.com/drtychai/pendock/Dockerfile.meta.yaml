MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt update     && apt -y install locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - mkdir ~/tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install vim patchelf netcat socat strace ltrace curl
      wget git gdb     && apt -y install man sudo inetutils-ping gnupg locate ftp
      p7zip traceroute     && apt -y install libgmp-dev libmpfr-dev libmpc-dev dnsutils     &&
      apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install python-dev python-pip     && apt -y install
      python3-dev python3-pip python3-venv     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt install -y ruby-full     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt install -y liblttng-ust0     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /dev/shm     && wget https://github.com/PowerShell/PowerShell/releases/download/v6.1.1/powershell_6.1.1-1.ubuntu.16.04_amd64.deb     &&
      dpkg -i powershell_6.1.1-1.ubuntu.16.04_amd64.deb     && apt install -f     &&
      apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt install -y npm     && npm cache clean -f     && npm install
      -g n     && n stable     && apt clean
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - 'set -eux;         dpkgArch="$(dpkg --print-architecture)";     case "${dpkgArch##*-}"
      in         amd64) goRelArch=''linux-amd64''; goRelSha256=''b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499''
      ;;         armhf) goRelArch=''linux-armv6l''; goRelSha256=''8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd''
      ;;         arm64) goRelArch=''linux-arm64''; goRelSha256=''e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9''
      ;;         i386) goRelArch=''linux-386''; goRelSha256=''1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e''
      ;;         ppc64el) goRelArch=''linux-ppc64le''; goRelSha256=''e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272''
      ;;         s390x) goRelArch=''linux-s390x''; goRelSha256=''c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15''
      ;;         *) goRelArch=''src''; goRelSha256=''afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'';             echo
      >&2; echo >&2 "warning: current architecture ($dpkgArch) does not have a corresponding
      Go binary release; will be building from source"; echo >&2 ;;     esac;         url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz";     wget
      -O go.tgz "$url";     echo "${goRelSha256} *go.tgz" | sha256sum -c -;     tar
      -C /usr/local -xzf go.tgz;     rm go.tgz;         if [ "$goRelArch" = ''src''
      ]; then         echo >&2;         echo >&2 ''error: UNIMPLEMENTED'';         echo
      >&2 ''TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and
      uninstall after build)'';         echo >&2;         exit 1;     fi;         export
      PATH="/usr/local/go/bin:$PATH";     go version'
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install gcc-multilib g++-multilib     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386     && apt update     && apt -y install libc6-dbg
      libc6-dbg:i386 glibc-source     && apt clean     && tar -C /usr/src/glibc/ -xvf
      /usr/src/glibc/glibc-*.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt -y install git cmake gcc g++ pkg-config libglib2.0-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && wget https://raw.githubusercontent.com/hugsy/stuff/master/update-trinity.sh     &&
      bash ./update-trinity.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone --depth 1 https://github.com/Z3Prover/z3.git &&
      cd z3     && python scripts/mk_make.py --python     && cd build; make && make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install pwntools==3.12.1
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install one_gadget
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install arm_now
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt install -y e2tools qemu     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install libevent-dev libncurses-dev     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - 'TMUX_VERSION=$(curl -s https://api.github.com/repos/tmux/tmux/releases/latest
      | grep -oP ''"tag_name": "\K(.*)(?=")'')     && wget https://github.com/tmux/tmux/releases/download/$TMUX_VERSION/tmux-$TMUX_VERSION.tar.gz     &&
      tar zxvf tmux-$TMUX_VERSION.tar.gz     && cd tmux-$TMUX_VERSION     && ./configure
      && make && make install     && cd ..     && rm -rf tmux-$TMUX_VERSION*     &&
      echo "tmux hold" | dpkg --set-selections # disable tmux update from apt'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb
      > msfinstall     && chmod 755 msfinstall     && ./msfinstall
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/offensive-security/exploitdb.git /opt/exploitdb     &&
      ln -sf /opt/exploitdb/searchsploit /usr/bin/searchsploit
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/share/     && git clone https://github.com/drtychai/wordlists.git /usr/share/wordlists     &&
      tar zxvf /usr/share/wordlists/rockyou.tar.gz -C /usr/share/wordlists/     &&
      rm /usr/share/wordlists/rockyou.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install aircrack-ng arp-scan masscan nikto nmap snmp
      openvpn     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/rebootuser/LinEnum     &&
      git clone https://github.com/sleventyeleven/linuxprivchecker     && git clone
      https://github.com/pentestmonkey/windows-privesc-check
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/darkoperator/dnsrecon     &&
      pip install -r ./dnsrecon/requirements.txt     && chmod +x ./dnsrecon/dnsrecon.py     &&
      echo 'alias dnsrecon="~/tools/dnsrecon/dnsrecon.py"' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/iagox86/dnscat2     && cd
      dnscat2; make     && gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/portcullislabs/enum4linux     &&
      chmod +x ./enum4linux/enum4linux.pl     && echo 'alias enum4linux="~/tools/enum4linux/enum4linux.pl"'
      >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/aboul3la/Sublist3r     &&
      chmod +x ./Sublist3r/sublist3r.py     && echo 'alias sublist3r="~/tools/sublist3r/sublist3r.py"'
      >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install aquatone
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/maurosoria/dirsearch     &&
      chmod +x ./dirsearch/dirsearch.py     && echo 'alias dirsearch="~/tools/dirsearch/dirsearch.py"'
      >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOPATH/src     && git clone https://github.com/OJ/gobuster && cd ./gobuster     &&
      go get && go build && go install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/xmendez/wfuzz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/SecureAuthCorp/impacket &&
      cd ./impacket     && pip install .
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/quickbreach/SMBetray && cd
      ./SMBetray     && chmod +x ./install.sh && echo 'y' - | ./install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/ShawnDEvans/smbmap     &&
      cd smbmap; python2 -m pip install -r requirements.txt     && chmod +x smbmap.py     &&
      echo 'alias smbmap="~/tools/smbmap/smbmap.py"' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/wpscanteam/wpscan && cd ./wpscan/     &&
      gem install bundle     && bundle install && rake install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y gtk-doc-tools libpcre3-dev libidn11-dev libssl-dev zlib1g-dev     &&
      apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/spinkham/skipfish     &&
      cd ./skipfish; make     && echo 'alias skipfish="~/tools/skipfish/skipfish"'
      >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/ConsenSys/mythril-classic     &&
      python3 -m pip install ./mythril-classic
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/fullstorydev/grpcurl     && go install github.com/fullstorydev/grpcurl/cmd/grpcurl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tools     && git clone https://github.com/codingo/Reconnoitre && cd
      ./Reconnoitre     && python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd $HOME/tools     && git clone https://github.com/nccgroup/ScoutSuite && cd
      ./ScoutSuite     && python3 -m pip install -r requirements.txt \t&& echo 'alias
      scout=\"~/tools/ScoutSuite/Scout.py\"' >> $HOME/.bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update     && apt -y install afl john sqlmap     && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install ropper
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb     &&
      dpkg -i ripgrep_0.9.0_amd64.deb     && rm ripgrep_0.9.0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone --depth 1 https://github.com/devttys0/binwalk &&
      cd ./binwalk     && python3 setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone --depth 1 https://github.com/radare/radare2 && cd
      ./radare2     && ./sys/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone https://github.com/EmpireProject/Empire && cd ./Empire     &&
      ./setup/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/tools     && git clone https://github.com/PowerShellMafia/PowerSploit
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install gmpy2 Crypto pycryptodome     && python3 -m pip install
      gmpy2 Crypto pycryptodome     && cd ~/tools     && git clone https://github.com/Ganapati/RsaCtfTool     &&
      echo 'alias rsactf="~/tools/RsaCtfTool/RsaCtfTool.py"' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd     && git clone --recursive https://github.com/drtychai/payloads && cd ./payloads     &&
      chmod +x ./init.sh     && ./init.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
