MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Stock Software
    Name: maintainer
  - Env:
    - Key: PATH
      Value: /home/buildbot/.nodenv/shims:/home/buildbot/.nodenv/bin:/home/buildbot/.rbenv/shims:/home/buildbot/.rbenv/bin:${PATH}
    - Key: RBENV_ROOT
      Value: /home/buildbot/.rbenv
    - Key: NODENV_ROOT
      Value: /home/buildbot/.nodenv
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --force-yes apt-transport-https &&     echo
      "deb https://apt.dockerproject.org/repo ubuntu-xenial main" > /etc/apt/sources.list.d/docker.list
      &&     apt-get update &&     apt-get install -y --force-yes docker-engine build-essential
      curl git zlib1g-dev libssl-dev libreadline-dev libyaml-dev libxml2-dev libxslt-dev
      libxtst6 libxi6 freetds-dev zip nsis imagemagick libpq-dev xvfb inetutils-ping
      vim &&     apt-get clean &&     useradd -ms /bin/bash buildbot
    Name: run
    PrependShell: true
  - Name: user
    User: buildbot
  - CmdLine:
    - 'echo "gem: --no-ri --no-rdoc" > /home/buildbot/.gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 git://github.com/sstephenson/rbenv.git ${RBENV_ROOT} &&     git
      clone --depth 1 https://github.com/sstephenson/ruby-build.git ${RBENV_ROOT}/plugins/ruby-build
      &&     export CONFIGURE_OPTS=--disable-install-doc &&     echo 'eval "$(rbenv
      init -)"' >> /home/buildbot/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/nodenv/nodenv.git ${NODENV_ROOT} &&     git
      clone --depth 1 https://github.com/nodenv/node-build.git ${NODENV_ROOT}/plugins/node-build
      &&     cd ${NODENV_ROOT} && src/configure && make -C src && rm -f src/Makefile
      src/*.o     echo 'eval "$(nodenv init -)"' >> /home/buildbot/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/buildbot
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk
    - Key: PATH
      Value: /opt/jdk/bin:${PATH}
    - Key: CONFIGURE_OPTS
      Value: --disable-install-doc
    Name: env
  - Name: user
    User: root
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"CI Build Image"'
    - Key: org.label-schema.description
      Value: '"An image that contains our the tools required for our automated build
        pipeline"'
    - Key: org.label-schema.url
      Value: '"https://github.com/stocksoftware/build"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/stocksoftware/build"'
    - Key: org.label-schema.vendor
      Value: '"Stocksoftware"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - 'set -ex &&     mkdir -p /opt && curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"
      -o /tmp/java.tar.gz     http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz
      &&     gunzip /tmp/java.tar.gz &&     tar -C /opt -xf /tmp/java.tar &&     rm
      -rf /tmp/java.tar /tmp/java.tar.gz &&     ln -s /opt/jdk1.8.0_131 /opt/jdk'
    Name: run
    PrependShell: true
  - Name: user
    User: buildbot
  - CmdLine:
    - rbenv install 1.9.3-p327 &&     rbenv global 1.9.3-p327 &&     rm -rf /tmp/ruby-build*
      &&     gem install bundler &&     gem install nokogiri -v 1.5.6 &&     gem install
      ffi-yajl -v 1.4.0 &&     gem install eventmachine -v 1.0.3 &&     gem install
      ffi -v 1.9.8 &&     gem install libyajl2 -v 1.2.0 &&     rbenv rehash
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv install 2.3.1 &&     rbenv global 2.3.1 &&     rm -rf /tmp/ruby-build*
      &&     gem install bundler &&     gem install bundler -v 1.16.2 &&     gem install
      octokit -v 4.6.2 &&     gem install netrc -v 0.11.0 &&     gem install rjb -v
      1.5.4 &&     gem install sass -v 3.4.22 &&     gem install nokogiri -v 1.7.2
      &&     gem install tiny_tds -v 1.0.5 &&     gem install pg -v 0.19.0 &&     rbenv
      rehash
    Name: run
    PrependShell: true
  - CmdLine:
    - nodenv install 6.10.3 &&     nodenv global 6.10.3 &&     nodenv rehash &&     npm
      install -g yarn &&     nodenv rehash
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
