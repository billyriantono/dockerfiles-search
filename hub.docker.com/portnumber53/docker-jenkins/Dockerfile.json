{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "base/archlinux",
      "SourceCode": "FROM base/archlinux",
      "Platform": "",
      "From": {
        "Image": "base/archlinux"
      },
      "Commands": [
        {
          "CmdLine": [
            "pacman -Syu --noconfirm jdk8-openjdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "archlinux-java set java-8-openjdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pacman -Syu --noconfirm unzip ttf-dejavu git openssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pacman -Syu --noconfirm base-devel php php-gd php-pgsql xdebug php-imap php-sqlite php-xsl apache-ant rsync binutils fakeroot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://phar.phpunit.de/phpunit-6.phar     \u0026\u0026 chmod +x phpunit-6.phar     \u0026\u0026 mv phpunit-6.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar     \u0026\u0026 chmod +x phpcs.phar     \u0026\u0026 mv phpcs.phar /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar     \u0026\u0026 chmod +x phpcbf.phar     \u0026\u0026 mv phpcbf.phar /usr/local/bin/phpcbf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://phar.phpunit.de/phploc.phar     \u0026\u0026 chmod +x phploc.phar     \u0026\u0026 mv phploc.phar /usr/local/bin/phploc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL http://static.pdepend.org/php/latest/pdepend.phar     \u0026\u0026 chmod +x pdepend.phar     \u0026\u0026 mv pdepend.phar /usr/local/bin/pdepend"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL http://static.phpmd.org/php/latest/phpmd.phar     \u0026\u0026 chmod +x phpmd.phar     \u0026\u0026 mv phpmd.phar /usr/local/bin/phpmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://phar.phpunit.de/phpcpd.phar     \u0026\u0026 chmod +x phpcpd.phar     \u0026\u0026 mv phpcpd.phar /usr/local/bin/phpcpd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL http://phpdox.de/releases/phpdox.phar     \u0026\u0026 chmod +x phpdox.phar     \u0026\u0026 mv phpdox.phar /usr/local/bin/phpdox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://getcomposer.org/composer.phar     \u0026\u0026 chmod +x composer.phar     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o codecept.phar http://codeception.com/codecept.phar     \u0026\u0026 chmod +x codecept.phar     \u0026\u0026 mv codecept.phar /usr/local/bin/codecept"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pacman -Syu --noconfirm nodejs npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yo grunt-cli bower express"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g node-gyp     \u0026\u0026 npm install --unsafe-perm -g @angular/cli@latest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install bower -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp-cli -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins.io"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chown -R ${user} \"$JENKINS_HOME\" /usr/share/jenkins/ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SLAVE_AGENT_PORT",
              "Value": "50000"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "groupadd -g ${gid} ${group}     \u0026\u0026 useradd -d \"$JENKINS_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "0.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_SHA",
              "Value": "6c41ec7d33e857d4779f14d9c74924cab0c7973485d2972419a3b7c7620ff5fd"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 -o     /bin/tini \u0026\u0026 chmod +x /bin/tini     \u0026\u0026 echo \"$TINI_SHA  /bin/tini\" | sha256sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy"
          ]
        },
        {
          "Key": "JENKINS_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "${JENKINS_VERSION:-2.129}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "JENKINS_SHA",
          "Name": "arg",
          "Value": "4198d547ea1df033066c9cb87256b63ce24124094a8592066b3756e2a89b55bf"
        },
        {
          "Key": "JENKINS_URL",
          "Name": "arg",
          "Value": "https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war"
        },
        {
          "CmdLine": [
            "curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war   \u0026\u0026 echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha256sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-support",
            "/usr/local/bin/jenkins-support"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.sh",
            "/usr/local/bin/plugins.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install-plugins.sh",
            "/usr/local/bin/install-plugins.sh"
          ]
        },
        {
          "CmdLine": [
            "install-plugins.sh         ansicolor         checkstyle         cloverphp         crap4j         dry         htmlpublisher         jdepend         plot         pmd         violations         warnings         xunit         shared-workspace         envinject         bitbucket         build-timestamp         workflow-aggregator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "enable-php-extension.sh",
            "/usr/local/bin/enable-php-extension.sh"
          ]
        },
        {
          "CmdLine": [
            "enable-php-extension.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${user}"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 curl -o /tmp/php-pear.tar.gz https://aur.archlinux.org/cgit/aur.git/snapshot/php-pear.tar.gz \u0026\u0026 tar -xvzf /tmp/php-pear.tar.gz \u0026\u0026 rm /tmp/php-pear.tar.gz \u0026\u0026 cd php-pear/ \u0026\u0026 sed -i 's#rm -rf ${pkgdir}/usr/share/pear/.{channels,depdb,depdblock,filemap,lock,registry}#rm -rf ${pkgdir}/.{channels,depdb,depdblock,filemap,lock,registry}#g' PKGBUILD \u0026\u0026  makepkg \u0026\u0026 mv /tmp/php-pear/php-pear-1:1.10.5-1-any.pkg.tar.xz /tmp/php-pear-1:1.10.5-1-any.pkg.tar.xz \u0026\u0026 rm -rf /tmp/php-pear/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "pacman -U --noconfirm /tmp/php-pear-1:1.10.5-1-any.pkg.tar.xz \u0026\u0026 rm /tmp/php-pear-1:1.10.5-1-any.pkg.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pacman -Syu --noconfirm lftp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=mongodb.so\" \u003e\u003e `php --ini | grep \"Loaded Configuration\" | sed -e \"s|.*:\\s*||\"`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${user}"
        }
      ]
    }
  ]
}