MetaArgs: null
Stages:
- BaseName: golang:1.7.5
  Commands:
  - CmdLine:
    - apt-get update &&     apt-get install -y uuid-runtime iptables
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/rancher/trash
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/golang/lint/golint
    Name: run
    PrependShell: true
  - Key: DOCKER_VERSION
    Name: arg
    Value: 1.10.3
  - CmdLine:
    - if [ "${DOCKER_VERSION}" = "1.10.3" ]; then         curl -sL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}
      > /usr/bin/docker &&         chmod +x /usr/bin/docker;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${DOCKER_VERSION}" != "1.10.3" ]; then         curl -sfL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz
      | tar xzf - -C /usr/bin --strip-components=1;     fi
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /go/bin:$PATH
    Name: env
  - Env:
    - Key: DAPPER_SOURCE
      Value: /go/src/github.com/rancher/agent
    Name: env
  - Env:
    - Key: DAPPER_OUTPUT
      Value: bin dist
    Name: env
  - Env:
    - Key: DAPPER_ENV
      Value: TAG REPO
    Name: env
  - Env:
    - Key: DAPPER_RUN_ARGS
      Value: --privileged
    Name: env
  - Env:
    - Key: GO15VENDOREXPERIMENT
      Value: "1"
    Name: env
  - Env:
    - Key: TRASH_CACHE
      Value: ${DAPPER_SOURCE}/.trash-cache
    Name: env
  - Name: workdir
    Path: ${DAPPER_SOURCE}
  - CmdLine:
    - apt-get update &&     apt-get install -y         python-tox
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"/var/lib/docker"'
  - CmdLine:
    - ./scripts/entry
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ci
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1.7.5
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.7.5
