MetaArgs: null
Stages:
- BaseName: lsiobase/alpine:3.10
  Commands:
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - CmdLine:
    - apk add     python3     python3-dev     py3-lxml     boost-python3      bash
      &&     echo "**** install alpine sdk so that we can build libtorrent python
      bindings (for various plugin) ****" &&     apk add alpine-sdk &&     abuild-keygen
      -ian &&     usermod -aG abuild root
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "**** install build packages ****" &&  apk add --no-cache     autoconf     automake     freetype-dev     g++     gcc     jpeg-dev     lcms2-dev     libffi-dev     libpng-dev     libwebp-dev     linux-headers     make     openjpeg-dev     openssl-dev     tiff-dev     zlib-dev
      &&  echo "**** install runtime packages ****" &&  apk add --no-cache     curl     freetype     git     lcms2     libjpeg-turbo     libwebp     openjpeg     openssl     p7zip     tar     tiff     unrar     unzip     vnstat     wget     xz     zlib
      &&  echo "**** use ensure to check for pip and link /usr/bin/pip3 to /usr/bin/pip
      ****" &&  python3 -m ensurepip &&  rm -r /usr/lib/python*/ensurepip &&  if     [
      ! -e /usr/bin/pip ]; then     ln -s /usr/bin/pip3 /usr/bin/pip ; fi &&  echo
      "**** install pip packages ****" &&  pip install --no-cache-dir -U     pip     setuptools
      &&  pip install -U     configparser     ndg-httpsclient     notify     paramiko     pillow     psutil     pyopenssl     requests     setuptools     urllib3     virtualenv
      &&  echo "**** build libtorrent-rasterbar, this takes a bit ****" &&  mkdir
      -p /build/py3-libtorrent-rasterbar &&  cd /build/py3-libtorrent-rasterbar &&  wget
      https://git.alpinelinux.org/aports/plain/testing/libtorrent-rasterbar/APKBUILD
      &&  abuild -F checksum && abuild -Fr &&  apk add --repository /root/packages/build
      py3-libtorrent-rasterbar &&  echo "**** clean up ****" &&  rm -rf     /root/.cache     /tmp/*     /build     /root/packages
    Name: run
    PrependShell: true
  - Env:
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: '"2"'
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc/
    - /etc
  - CmdLine:
    - chmod -v +x     /etc/cont-init.d/*      /etc/services.d/*/run
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 6566/tcp
  - Name: volume
    Volumes:
    - /config
  - CmdLine:
    - CONFIG_SYMLINK_DIR=/root     && ln -s /config "$CONFIG_SYMLINK_DIR/.flexget"     &&
      chmod 777 "$CONFIG_SYMLINK_DIR/"     && chmod 777 "$CONFIG_SYMLINK_DIR/.flexget/"
    Name: run
    PrependShell: true
  From:
    Image: lsiobase/alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine:3.10
