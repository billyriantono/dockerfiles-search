MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: ZSDK_VERSION
    Name: arg
    Value: 0.10.3
  - Key: GCC_ARM_NAME
    Name: arg
    Value: gcc-arm-none-eabi-7-2018-q2-update
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "dpkg --add-architecture i386 && \tapt-get -y update && \tapt-get -y upgrade
      && \tapt-get install --no-install-recommends -y \tgnupg \tca-certificates &&
      \tapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
      && \techo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic
      main\" | tee /etc/apt/sources.list.d/mono-official-stable.list && \tapt-get
      -y update && \tapt-get install --no-install-recommends -y \tautoconf \tautomake
      \tbuild-essential \tccache \tdevice-tree-compiler \tdfu-util \tdoxygen \tfile
      \tg++ \tgcc \tgcc-multilib \tgcovr \tgit \tgit-core \tgperf \tgtk-sharp2 \tiproute2
      \tlcov \tlibglib2.0-dev \tlibgtk2.0-0 \tlibpcap-dev \tlibsdl2-dev:i386 \tlibtool
      \tlocales \tmake \tmono-complete \tnet-tools \tninja-build \topenbox \tpkg-config
      \tpython3-pip \tpython3-ply \tpython3-setuptools \tpython-xdg \tqemu \tsocat
      \tsudo \ttexinfo \tvalgrind \twget \tx11vnc \txvfb \txz-utils && \twget -O dtc.deb
      http://security.ubuntu.com/ubuntu/pool/main/d/device-tree-compiler/device-tree-compiler_1.4.7-1_amd64.deb
      && \tdpkg -i dtc.deb && \twget -O renode.deb https://github.com/renode/renode/releases/download/v1.6.2/renode_1.6.2_amd64.deb
      && \tapt install -y ./renode.deb && \trm dtc.deb renode.deb && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - "wget -q https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/master/scripts/requirements.txt
      && \tpip3 install wheel &&\tpip3 install -r requirements.txt && \tpip3 install
      west &&\tpip3 install sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -q \"https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZSDK_VERSION}/zephyr-sdk-${ZSDK_VERSION}-setup.run\"
      && \tsh \"zephyr-sdk-${ZSDK_VERSION}-setup.run\" --quiet -- -d /opt/toolchains/zephyr-sdk-${ZSDK_VERSION}
      && \trm \"zephyr-sdk-${ZSDK_VERSION}-setup.run\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/${GCC_ARM_NAME}-linux.tar.bz2
      \ && \ttar xf ${GCC_ARM_NAME}-linux.tar.bz2 && \trm -f ${GCC_ARM_NAME}-linux.tar.bz2
      && \tmv ${GCC_ARM_NAME} /opt/toolchains/${GCC_ARM_NAME}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -q https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2-Linux-x86_64.sh
      && \tchmod +x cmake-3.13.2-Linux-x86_64.sh && \t./cmake-3.13.2-Linux-x86_64.sh
      --skip-license --prefix=/usr/local && \trm -f ./cmake-3.13.2-Linux-x86_64.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "useradd -m -G plugdev user \t&& echo 'user ALL = NOPASSWD: ALL' > /etc/sudoers.d/user
      \t&& chmod 0440 /etc/sudoers.d/user"
    Name: run
    PrependShell: true
  - Env:
    - Key: ZEPHYR_TOOLCHAIN_VARIANT
      Value: zephyr
    Name: env
  - Env:
    - Key: ZEPHYR_SDK_INSTALL_DIR
      Value: /opt/toolchains/zephyr-sdk-${ZSDK_VERSION}
    Name: env
  - Env:
    - Key: ZEPHYR_BASE
      Value: /workdir
    Name: env
  - Env:
    - Key: GNUARMEMB_TOOLCHAIN_PATH
      Value: /opt/toolchains/${GCC_ARM_NAME}
    Name: env
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: /usr/lib/i386-linux-gnu/pkgconfig
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :0
    Name: env
  - CmdLine:
    - chown -R user:user /home/user
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./entrypoint.sh
    - /home/user/entrypoint.sh
  - Name: expose
    Ports:
    - "5900"
  - CmdLine:
    - /home/user/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Name: user
    User: user
  - Name: workdir
    Path: /workdir
  - Name: volume
    Volumes:
    - /workdir
  - Key: VNCPASSWD
    Name: arg
    Value: zephyr
  - CmdLine:
    - mkdir ~/.vnc && x11vnc -storepasswd ${VNCPASSWD} ~/.vnc/passwd
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
