MetaArgs: null
Stages:
- BaseName: php:7.1-apache
  Commands:
  - Maintainer: Dustin Woodard <dustin.woodard@gmail.com>
    Name: maintainer
  - CmdLine:
    - mkdir -p /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G users www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data /var/www/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update && apt-get install -y  git-core  vim  unzip  curl  wget  &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/www/html/public/
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s#.*DocumentRoot /var/www/html#\tDocumentRoot /var/www/html/public#"
      /etc/apache2/sites-enabled/000-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s#\#ServerName www.example.com#ServerName localhost#" /etc/apache2/sites-enabled/000-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - service apache2 restart
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "America/Denver" | tee /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/ssl/server/certs
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -new -newkey rsa:4096 -days 3652 -nodes -x509 -subj "/C=US/ST=UT/L=Ogden/O=IT/CN=docker.dev"
      -keyout /etc/ssl/server/certs/server.pem  -out /etc/ssl/server/certs/server.cert
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - app.conf
    - /etc/apache2/sites-available/
  - CmdLine:
    - a2ensite app.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract && apt-get update && apt-get install vim -y && docker-php-ext-install
      mysqli pdo pdo_mysql && a2enmod rewrite && a2enmod ssl && docker-php-source
      delete
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget &&     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub
      |  apt-key add - &&     sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/
      stable main" >> /etc/apt/sources.list.d/google-chrome.list' &&     apt-get update
      && apt-get install -y google-chrome-stable &&     apt-get install -y xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install build-essential libssl-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nodejs -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -v
    Name: run
    PrependShell: true
  - CmdLine:
    - node -v
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install sqlite3 libsqlite3-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://chromedriver.storage.googleapis.com/2.33/chromedriver_linux64.zip
      && unzip chromedriver_linux64.zip && mv chromedriver /usr/bin/chromedriver &&
      rm chromedriver_linux64.zip && chromedriver -v
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends         libmagickwand-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick-3.4.3     && docker-php-ext-enable imagick
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - /usr/sbin/apache2ctl -D FOREGROUND
    Name: cmd
    PrependShell: true
  From:
    Image: php:7.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-apache
