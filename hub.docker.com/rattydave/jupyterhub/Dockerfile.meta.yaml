MetaArgs: null
Stages:
- BaseName: ubuntu:19.10
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: M2_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin:opt/conda/bin:~/.local/bin
    Name: env
  - CmdLine:
    - mkdir -p /workdir && chmod 777 /workdir &&     apt-get update -yqq &&     apt-get
      install -yqq --no-install-recommends sudo curl git wget tzdata libjpeg-dev bzip2
      &&     apt-get install -yqq python3 python3-pip &&     pip3 --no-cache-dir install
      --upgrade pip setuptools &&     echo "--------------------------------------"
      &&     echo "----------- 1st CLEANUP --------------" &&     echo "--------------------------------------"
      &&     apt-get -y autoclean && apt-get -y autoremove &&     apt-get -y purge
      $(dpkg --get-selections | grep deinstall | sed s/deinstall//g) &&     rm -rf
      /var/lib/apt/lists/* /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yqq &&     echo "--------------------------------------" &&     echo
      "----------- TENSORFLOW ---------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir tensorflow keras  &&     echo "--------------------------------------"
      &&     echo "----------- TORCH --------------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir torch torchvision  &&     echo "--------------------------------------"
      &&     echo "----------- NODEJS Core---------------" &&     echo "--------------------------------------"
      &&     apt-get install -yqq --no-install-recommends nodejs npm &&     curl https://www.npmjs.com/install.sh
      | sudo sh && npm install -g n && n 12.13.0 &&     npm install -g configurable-http-proxy  &&     echo
      "--------------------------------------" &&     echo "----------- PYTHON Core
      --------------" &&     echo "--------------------------------------" &&     pip3
      install 'prompt-toolkit==2.0.10' &&     pip3 install 'six==1.12' &&     pip3
      install --no-cache-dir mypy pylint yapf pytest ipython tornado jupyter nbdime                                 jupyterlab
      jupyter-lsp python-language-server[all] jupyterhub &&     jupyter labextension
      install @jupyterlab/toc &&     jupyter labextension install jupyterlab-favorites
      &&     jupyter labextension install jupyterlab-recents &&     jupyter labextension
      install @jupyter-widgets/jupyterlab-manager &&     jupyter labextension install
      @krassowski/jupyterlab-lsp &&     echo "--------------------------------------"
      &&     echo "----------- BASH ---------------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir bash_kernel  &&     python3 -m bash_kernel.install
      &&     echo "--------------------------------------" &&     echo "-----------
      MARKDOWN -----------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir markdown-kernel  &&     python3 -m markdown_kernel.install
      &&     echo "--------------------------------------" &&     echo "-----------
      PYTHON -------------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir loguru pysnooper numpy scipy pandas pyarrow>=0.14.0
      dask[complete] scikit-learn xgboost matplotlib bokeh holoviews[recommended]
      hvplot tabulate JPype1==0.6.3 JayDeBeApi sqlparse requests[socks] lxml notifiers
      &&     jupyter labextension install @pyviz/jupyterlab_pyviz &&     echo "--------------------------------------"
      &&     echo "----------- ADDONS -------------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir nbgitpuller &&     jupyter labextension install
      jupyterlab-drawio &&     jupyter labextension install @wallneradam/run_all_buttons
      &&     jupyter labextension install jupyterlab-spreadsheet &&     pip install
      --upgrade jupyterlab-git &&     jupyter lab build &&     echo "--------------------------------------"
      &&     echo "----------- JULIA --------------------" &&     echo "--------------------------------------"
      &&     apt-get install -yq julia &&     julia -e 'empty!(DEPOT_PATH); push!(DEPOT_PATH,
      "/usr/share/julia"); using Pkg; Pkg.add("IJulia")'  &&     cp -r /root/.local/share/jupyter/kernels/julia-*
      /usr/local/share/jupyter/kernels/  &&     chmod -R +rx /usr/share/julia/  &&     chmod
      -R +rx /usr/local/share/jupyter/kernels/julia-*/ &&     echo "--------------------------------------"
      &&     echo "----------- C++ ----------------------" &&     echo "--------------------------------------"
      &&     apt-get install -yqq libtinfo5 &&     mkdir -p ~/pre && cd ~/pre &&     wget
      https://root.cern.ch/download/cling/cling_2019-12-08_ubuntu18.tar.bz2 && tar
      jxf cling_2019-12-08_ubuntu18.tar.bz2 &&     cd cling_2019-12-08_ubuntu18 &&
      cp -r . /usr/. && cd ~ && rm -r pre &&     cd /usr/share/cling/Jupyter/kernel
      && pip3 install -e . &&     jupyter kernelspec install cling-cpp11 && jupyter
      kernelspec install cling-cpp14 && jupyter kernelspec install cling-cpp17 &&
      jupyter kernelspec install cling-cpp1z &&     echo "--------------------------------------"
      &&     echo "----------- NodeJS -------------------" &&     echo "--------------------------------------"
      &&     npm install -g --unsafe-perm ijavascript &&     npm install -g --unsafe-perm
      itypescript &&     its --ts-hide-undefined --install=global &&     ijsinstall
      --hide-undefined --install=global &&     npm cache clean --force &&     echo
      "--------------------------------------" &&     echo "----- JAVA (Need for beakerx)
      --------" &&     echo "--------------------------------------" &&     echo "openjdk-14-jdk
      is not compatible with beakerx and gradle" &&     echo "openjdk-11-jdk seems
      to be minimal version (kotlin does not work)" &&     echo "openjdk-8-jdk latest
      version supported by kotin from beakerx and needs to be installed BEFORE maven
      and gradle" &&     apt-get install -y openjdk-8-jdk &&     apt-get install -y
      maven gradle &&     echo "--------------------------------------" &&     echo
      "----------- BEAKERX ------------------" &&     echo "--------------------------------------"
      &&     pip3 install --no-cache-dir py4j beakerx &&     beakerx install &&     jupyter
      labextension install beakerx-jupyterlab &&     echo "--------------------------------------"
      &&     echo "----------- CLEANUP ------------------" &&     echo "--------------------------------------"
      &&     apt-get -y autoclean && apt-get -y autoremove &&     apt-get -y purge
      $(dpkg --get-selections | grep deinstall | sed s/deinstall//g) &&     rm -rf
      /var/lib/apt/lists/* /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - settings/jupyter_notebook_config.py
    - /etc/jupyter/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - settings/jupyterhub_config.py
    - /etc/jupyterhub/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - StartHere.ipynb
    - /etc/skel
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - /scripts
  - CmdLine:
    - chmod -R 755 /scripts &&     jupyter trust /etc/skel/StartHere.ipynb
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - '"/scripts/sys/init.sh"'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:19.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:19.10
