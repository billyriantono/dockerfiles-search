MetaArgs: null
Stages:
- As: base
  BaseName: nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"nclxwen@gmail.com"'
    Name: label
  - CmdLine:
    - APT_INSTALL="apt-get install -y --no-install-recommends" &&     PIP_INSTALL="python
      -m pip --no-cache-dir install --upgrade" &&     GIT_CLONE="git clone --depth
      10" &&     rm -rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list
      &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         build-essential         apt-utils         ca-certificates         cmake         curl         wget         git         vim         &&     DEBIAN_FRONTEND=noninteractive
      $APT_INSTALL         software-properties-common         &&     add-apt-repository
      ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive
      $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget
      -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6
      ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln
      -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         pip         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-learn         matplotlib         Cython         &&     wget
      -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
      &&     tar -zxf ~/boost.tar.gz -C ~ &&     cd ~/boost_* &&     ./bootstrap.sh
      --with-python=python3.6 &&     ./b2 install --prefix=/usr/local &&     $PIP_INSTALL         cupy         chainer         &&     $PIP_INSTALL         jupyter         &&     $PIP_INSTALL         pymc3        nilearn        mne        &&    $PIP_INSTALL         future         numpy         protobuf         enum34         pyyaml         typing         &&     $PIP_INSTALL         torch
      -f https://download.pytorch.org/whl/nightly/cu100/torch.html         &&     $PIP_INSTALL         tensorflow-gpu         &&     $PIP_INSTALL         torchvision        tensorboardx        &&     $PIP_INSTALL         h5py         keras         &&     ldconfig
      &&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/*
      /tmp/* ~/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl grep sed dpkg &&     TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest
      | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` &&     curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb"
      > tini.deb &&     dpkg -i tini.deb &&     rm tini.deb &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade tornado==5.1.1
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /root/.jupyter/
  - Name: expose
    Ports:
    - "6006"
    - "8888"
  - CmdLine:
    - mkdir /notebook
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - notebook
    - --no-browser
    - --allow-root
    Name: cmd
    PrependShell: false
  - Name: workdir
    Path: /notebook
  From:
    Image: nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
  Name: base
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04 as base
