MetaArgs: null
Stages:
- BaseName: openjdk:8
  Commands:
  - Env:
    - Key: SCALA_VERSION
      Value: 2.12.1
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 0.13.13
    Name: env
  - CmdLine:
    - useradd -d "/home/sample" -u 1000 -m -s /bin/bash sample
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /usr/lib/jvm/java-8-openjdk-amd64/release
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsL http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz
      | tar xfz - -C /home/sample/ &&   echo >> /home/sample/.bashrc &&   echo 'export
      PATH=~/scala-$SCALA_VERSION/bin:$PATH' >> /home/sample/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o sbt-$SBT_VERSION.deb http://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
      &&   dpkg -i sbt-$SBT_VERSION.deb &&   rm sbt-$SBT_VERSION.deb &&   apt-get
      update &&   apt-get install sbt &&   sbt sbtVersion
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libgomp1 libgmp-dev libmpfr-dev libppl-dev openjdk-8-jdk build-essential
      python git -y
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/Z3Prover/z3.git &&     cd /tmp/z3
      &&     git checkout 0a0b17540f307e041a791145c2c94ab57a7b6907 &&     ./configure
      &&     cd build &&     make &&     make install &&     apt-get clean &&     rm
      -rf /tmp/z3
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && hg clone https://flurischt@bitbucket.org/flurischt/sample && cd sample/Apron/apron
      && make && make install && cd /tmp && rm -rf sample
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mono-devel tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-verbose 'https://github.com/boogie-org/boogie/archive/f085c05a5c49c730ca28be74b79d080f05f0b72e.zip'
      -O /tmp/boogie.zip &&     cd /tmp &&     unzip -q boogie.zip &&     cd boogie-*
      &&     wget --no-verbose https://nuget.org/nuget.exe &&     xbuild Source/Boogie.sln
      &&     mkdir -p /usr/lib/boogie/ &&     cp -r Binaries/* /usr/lib/boogie/ &&     echo
      '#!/bin/bash' > /usr/bin/boogie &&     echo 'mono --runtime=v4.0.30319 /usr/lib/boogie/Boogie.exe
      "$@"' >> /usr/bin/boogie &&     chmod 755 /usr/bin/boogie &&     cd /usr/lib/boogie
      &&     ln -s /usr/bin/z3 z3.exe &&     apt-get clean &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/sample
  - Name: user
    User: sample
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib
    Name: env
  - Env:
    - Key: Z3_EXE
      Value: /usr/bin/z3
    Name: env
  - Env:
    - Key: BOOGIE_EXE
      Value: /usr/bin/boogie
    Name: env
  From:
    Image: openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM  openjdk:8
