{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gr1n/docker-pyenv:latest",
      "SourceCode": "FROM gr1n/docker-pyenv:latest",
      "Platform": "",
      "From": {
        "Image": "gr1n/docker-pyenv:latest"
      },
      "Commands": [
        {
          "Maintainer": "Nikita Grishko \u003cgr1n@protonmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd -r tox --gid=999 \u0026\u0026     useradd -m -r -g tox --uid=999 tox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \u0026\u0026     wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \u0026\u0026     wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \u0026\u0026     export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026     gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \u0026\u0026     rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \u0026\u0026     chmod +x /usr/local/bin/gosu \u0026\u0026     gosu nobody true \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv local 3.6.2 \u0026\u0026     python -m pip install -U pip tox \u0026\u0026     pyenv local --unset \u0026\u0026     pyenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/src"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "tox"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}