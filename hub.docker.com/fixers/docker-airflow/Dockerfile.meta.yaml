MetaArgs: null
Stages:
- BaseName: python:2.7.14
  Commands:
  - Maintainer: kyle <kyle@fixers.co.uk>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Key: AIRFLOW_VERSION
    Name: arg
    Value: 1.8.0
  - Env:
    - Key: AIRFLOW_HOME
      Value: /airflow_home
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_MESSAGES
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - set -ex     && buildDeps='         libkrb5-dev         libsasl2-dev         libssl-dev         libffi-dev         build-essential         libblas-dev         liblapack-dev         git     '     &&
      apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF     && echo "deb
      http://repos.mesosphere.com/ubuntu vivid main" > /etc/apt/sources.list.d/mesosphere.list     &&
      echo "deb http://http.debian.net/debian jessie-backports main" > /etc/apt/sources.list.d/backports.list     &&
      apt-get update -yqq     && apt-get install -yqq --no-install-recommends         $buildDeps         apt-utils         curl         netcat         locales         dnsutils     &&
      apt-get install -yqq -t jessie-backports cython libpq-dev     && sed -i 's/^#
      en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen     && locale-gen     &&
      update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8     && pip install -r requirements.txt     &&
      curl -sL https://deb.nodesource.com/setup_6.x | bash -     && apt-get install
      -y nodejs     && npm install -g cryptobject minimist     && npm install -g eslint
      eslint-config-google
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: /usr/lib/node_modules/
    Name: env
  - Env:
    - Key: BLACKMAGIC_HOME
      Value: ${AIRFLOW_HOME}/blackmagic
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - blackmagic
    - ${BLACKMAGIC_HOME}/
  - CmdLine:
    - pip install -r ${BLACKMAGIC_HOME}/py/requirements_dev.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-get remove --purge -yqq $buildDeps libpq-dev     && apt-get
      clean     && rm -rf         /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /usr/share/man         /usr/share/doc         /usr/share/doc-base
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: ${PYTHONPATH}:${AIRFLOW_HOME}
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - airflow_home
    - ${AIRFLOW_HOME}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - script
    - script
  - Name: expose
    Ports:
    - "5555"
    - "8080"
    - "8793"
  - Name: workdir
    Path: ${AIRFLOW_HOME}
  - CmdLine:
    - /script/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:2.7.14
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7.14
