{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "elixir:1.6",
      "SourceCode": "FROM elixir:1.6",
      "Platform": "",
      "From": {
        "Image": "elixir:1.6"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -qq -y inotify-tools curl libnotify-bin --fix-missing --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -qq -y nodejs  tar --fix-missing --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUSTUP_HOME",
              "Value": "/usr/local/rustup"
            },
            {
              "Key": "CARGO_HOME",
              "Value": "/usr/local/cargo"
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/cargo/bin:$PATH"
            },
            {
              "Key": "RUST_VERSION",
              "Value": "1.26.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;         dpkgArch=\"$(dpkg --print-architecture)\";     case \"${dpkgArch##*-}\" in         amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='c9837990bce0faab4f6f52604311a19bb8d2cde989bea6a7b605c8e526db6f02' ;;         armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='297661e121048db3906f8c964999f765b4f6848632c0c2cfb6a1e93d99440732' ;;         arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='a68ac2d400409f485cb22756f0b3217b95449884e1ea6fd9b70522b3c0a929b2' ;;         i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='27e6109c7b537b92a6c2d45ac941d959606ca26ec501d86085d651892a55d849' ;;         *) echo \u003e\u00262 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;;     esac;         url=\"https://static.rust-lang.org/rustup/archive/1.11.0/${rustArch}/rustup-init\";     wget \"$url\";     echo \"${rustupSha256} *rustup-init\" | sha256sum -c -;     chmod +x rustup-init;     ./rustup-init -y --no-modify-path --default-toolchain $RUST_VERSION;     rm rustup-init;     chmod -R a+w $RUSTUP_HOME $CARGO_HOME;     rustup --version;     cargo --version;     rustc --version;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./mix*",
            "./"
          ]
        },
        {
          "CmdLine": [
            "mix local.hex --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mix local.rebar --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export MIX_ENV=prod \u0026\u0026 mix deps.get --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd deps/html5ever/native/html5ever_nif \u0026\u0026 cargo update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export MIX_ENV=prod \u0026\u0026 mix deps.compile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./assets/package*",
            "./assets/"
          ]
        },
        {
          "CmdLine": [
            "cd assets \u0026\u0026 npm i"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./assets",
            "./assets/"
          ]
        },
        {
          "CmdLine": [
            "cd assets \u0026\u0026 npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app/priv/static/js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /app/assets/node_modules/openpgp/dist/openpgp.worker.min.js /app/priv/static/js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /app/assets/node_modules/openpgp/dist/openpgp.min.js /app/priv/static/js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./manifest.json",
            "./priv/static/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./react-logo.png",
            "./priv/static/images/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "./"
          ]
        },
        {
          "CmdLine": [
            "export MIX_ENV=prod \u0026\u0026 mix compile --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export MIX_ENV=prod \u0026\u0026 mix phx.digest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf deps/*/.fetch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4000"
          ]
        },
        {
          "CmdLine": [
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}