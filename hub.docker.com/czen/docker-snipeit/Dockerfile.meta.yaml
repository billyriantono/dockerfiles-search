MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: Anton Bagliy <taccessviolation@gmail.com>
    Name: label
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive;     export DEBCONF_NONINTERACTIVE_SEEN=true;     echo
      'tzdata tzdata/Areas select Etc' | debconf-set-selections;     echo 'tzdata
      tzdata/Zones/Etc select UTC' | debconf-set-selections;     apt-get update -qqy  &&
      apt-get install -qqy --no-install-recommends apt-utils apache2 apache2-bin libapache2-mod-php7.2
      php7.2-curl php7.2-ldap php7.2-mysql php7.2-gd php7.2-xml php7.2-mbstring php7.2-zip
      php7.2-bcmath patch curl wget  vim git cron mysql-client cron gcc make autoconf
      libc-dev pkg-config libmcrypt-dev php7.2-dev ca-certificates unzip && apt-get
      clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -O https://github.com/pear/pearweb_phars/raw/master/go-pear.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - php go-pear.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.2
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "echo extension=/usr/lib/php/20170718/mcrypt.so > /etc/php/7.2/mods-available/mcrypt.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod gd
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod bcmath
    Name: run
    PrependShell: true
  - Env:
    - Key: SNIPEIT_PORT
      Value: "80"
    Name: env
  - Env:
    - Key: SNIPEIT_SSL_PORT
      Value: "443"
    Name: env
  - CmdLine:
    - sed -i 's/variables_order = .*/variables_order = "EGPCS"/' /etc/php/7.2/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/variables_order = .*/variables_order = "EGPCS"/' /etc/php/7.2/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m --uid 1000 --gid 50 docker
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export APACHE_RUN_USER=docker >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export APACHE_RUN_GROUP=staff >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/000-default.conf
    - /etc/apache2/sites-enabled/000-default.conf
  - CmdLine:
    - mkdir -p /var/lib/snipeit/ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/001-default-ssl.conf
    - /etc/apache2/sites-available/001-default-ssl.conf
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite 001-default-ssl.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/html
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/docker.env
    - /var/www/html/.env
  - CmdLine:
    - chown -R docker /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r "/var/www/html/storage/private_uploads" && ln -fs "/var/lib/snipeit/data/private_uploads"
      "/var/www/html/storage/private_uploads"       && rm -rf "/var/www/html/public/uploads"
      && ln -fs "/var/lib/snipeit/data/uploads" "/var/www/html/public/uploads"       &&
      rm -r "/var/www/html/storage/app/backups" && ln -fs "/var/lib/snipeit/dumps"
      "/var/www/html/storage/app/backups"       && mkdir -p "/var/lib/snipeit/keys"
      && ln -fs "/var/lib/snipeit/keys/oauth-private.key" "/var/www/html/storage/oauth-private.key"       &&
      ln -fs "/var/lib/snipeit/keys/oauth-public.key" "/var/www/html/storage/oauth-public.key"       &&
      chown docker "/var/lib/snipeit/keys/"
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer:latest
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/bin/composer
  - Name: user
    User: docker
  - CmdLine:
    - composer install --no-dev --working-dir=/var/www/html
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: volume
    Volumes:
    - /var/lib/snipeit
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.14.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine: null
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - sh
    - -c
    - sed -i "s/80/$SNIPEIT_PORT/g" /etc/apache2/sites-available/000-default.conf
      /etc/apache2/ports.conf && /tini -- /entrypoint.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - $SNIPEIT_PORT
  - Name: expose
    Ports:
    - $SNIPEIT_SSL_PORT
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
