MetaArgs: null
Stages:
- BaseName: azul/zulu-openjdk
  Commands:
  - Env:
    - Key: DAPPER_ENV
      Value: API_VERSION ENVIRONMENTS
    Name: env
  - Env:
    - Key: DAPPER_RUN_ARGS
      Value: --privileged
    Name: env
  - Env:
    - Key: DAPPER_SOURCE
      Value: /usr/src/cattle
    Name: env
  - Env:
    - Key: DAPPER_OUTPUT
      Value: dist
    Name: env
  - Name: workdir
    Path: ${DAPPER_SOURCE}
  - Env:
    - Key: MYSQL_VERSION
      Value: "5.5"
    Name: env
  - Env:
    - Key: MYSQL_HOST
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: MYSQL_TCP_PORT
      Value: "13306"
    Name: env
  - Env:
    - Key: PGSQL_VERSION
      Value: "9.6"
    Name: env
  - Env:
    - Key: PGHOST
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: PGPASSWORD
      Value: cattle
    Name: env
  - Env:
    - Key: PGUSER
      Value: cattle
    Name: env
  - Env:
    - Key: PGDATABASE
      Value: cattle
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends python-pip
      iptables xz-utils git curl python-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip uninstall -y py >/dev/null >/dev/null 2>&1 || true &&     pip install --upgrade
      pip tox==1.8.1 virtualenv==12.0.4 &&     pip install setuptools --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wheel
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_TOOLS_VERSION
      Value: 0.3.1
    Name: env
  - CmdLine:
    - mkdir /tmp/build-tools &&     cd /tmp/build-tools &&     curl -sSL -o build-tools.tar.gz
      https://github.com/rancherio/build-tools/archive/v${BUILD_TOOLS_VERSION}.tar.gz
      &&     tar -xzvf build-tools.tar.gz && cp ./build-tools-${BUILD_TOOLS_VERSION}/bin/*
      /usr/local/bin &&     rm -rf /tmp/build-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/lib/jvm/zulu-8-amd64/jre/lib/security/policy/unlimited/US_export_policy.jar
      /usr/lib/jvm/zulu-8-amd64/jre/lib/security/local_policy.jar &&     cp /usr/lib/jvm/zulu-8-amd64/jre/lib/security/policy/unlimited/US_export_policy.jar
      /usr/lib/jvm/zulu-8-amd64/jre/lib/security/US_export_policy.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/ibuildthecloud/cattle.git &&     cd
      cattle &&     git checkout mvnw &&     ./scripts/checkstyle &&     ./mvnw package
      &&     cd .. &&     rm -rf cattle
    Name: run
    PrependShell: true
  - Key: DOCKER_VERSION
    Name: arg
    Value: 17.03.1-ce
  - CmdLine:
    - curl -sfL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz
      | tar xzf - -C /usr/bin --strip-components=1
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./resources/content/cattle-global.properties
    - ${DAPPER_SOURCE}/resources/content/
  - CmdLine:
    - bash -x cattle-binary-pull
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - CmdLine:
    - ./scripts/entry
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ci
    Name: cmd
    PrependShell: false
  From:
    Image: azul/zulu-openjdk
  Name: ""
  Platform: ""
  SourceCode: FROM azul/zulu-openjdk
