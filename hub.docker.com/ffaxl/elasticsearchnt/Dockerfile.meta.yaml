MetaArgs: null
Stages:
- BaseName: python:3.6
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Davide Ferraro <ferraro.dav@gmail.com>"'
    - Key: name
      Value: '"Experiment with Data Science"'
    - Key: description
      Value: '"Docker container with basic python packages for computation, visualization
        and experiment logging."'
    - Key: version
      Value: '"0.2"'
    Name: label
  - CmdLine:
    - pip install --no-cache-dir --upgrade pip
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENCV_VERSION
      Value: '"3.4"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y     build-essential     cmake     git     wget     unzip     yasm     pkg-config     libswscale-dev     libtbb2     libtbb-dev     libjpeg-dev     libpng-dev     libtiff-dev     libavformat-dev     libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b ${OPENCV_VERSION} --depth 1 https://github.com/opencv/opencv.git
      /usr/local/src/opencv;     cd /usr/local/src/opencv && mkdir build && cd build
      &&     cmake -D CMAKE_INSTALL_PREFIX=/usr/local           -D BUILD_TESTS=OFF           -D
      BUILD_PERF_TESTS=OFF           -D PYTHON_DEFAULT_EXECUTABLE=$(which python3)           ..
      &&     make -j"$(nproc)" &&     make install
    Name: run
    PrependShell: true
  - Env:
    - Key: PIP_PACKAGES_BASE
      Value: '"    opencv-python     numpy     Cython     matplotlib     pandas     seaborn     scipy     scikit-learn     scikit-image     jupyter     xgboost     h5py     requests     pillow     networkx"'
    Name: env
  - CmdLine:
    - pip install --no-cache-dir -U ${PIP_PACKAGES_BASE}
    Name: run
    PrependShell: true
  - Env:
    - Key: PIP_PACKAGES_SACRED
      Value: '"    pyyaml     pymongo     gitpython     python-telegram-bot     sacred"'
    Name: env
  - CmdLine:
    - pip install --no-cache-dir -U ${PIP_PACKAGES_SACRED}
    Name: run
    PrependShell: true
  - Env:
    - Key: PIP_PACKAGES_JUPYTER
      Value: '"    jupyter_contrib_nbextensions     jupyter_nbextensions_configurator"'
    Name: env
  - CmdLine:
    - pip install --no-cache-dir -U ${PIP_PACKAGES_JUPYTER} &&     jupyter nbextension
      enable --py widgetsnbextension &&     jupyter contrib nbextension install --user
      &&     jupyter nbextensions_configurator enable --user
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/workspace
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - jupyter
    - notebook
    - --port=8080
    - --allow-root
    - --no-browser
    - --ip=0.0.0.0
    - --NotebookApp.token=
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
