{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "CODER_PASSWORD",
              "Value": "\"coder\""
            },
            {
              "Key": "oc_version",
              "Value": "\"v3.11.0\""
            },
            {
              "Key": "oc_version_commit",
              "Value": "\"0cbc58b\""
            },
            {
              "Key": "PATH",
              "Value": "\"${PATH}:/home/coder/.local/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exec",
            "/opt"
          ]
        },
        {
          "CmdLine": [
            ". /etc/lsb-release \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y curl locales gnupg2 software-properties-common \u0026\u0026 locale-gen en_US.UTF-8 \u0026\u0026     apt-add-repository --yes --update ppa:ansible/ansible \u0026\u0026     curl -sL https://deb.nodesource.com/setup_11.x | bash - \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y        sudo       openssl       net-tools       openvpn       jq       git       tree       locales       curl       dumb-init       wget       httpie       nodejs       python       python3-pip       joe       ansible       bash-completion       openssh-client       default-jdk \u0026\u0026     npm install -g npm \u0026\u0026     apt clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026     cd /tmp \u0026\u0026     wget -O - $(curl -s https://api.github.com/repos/cdr/code-server/releases/latest |  jq -r '.assets[] | select(.browser_download_url | contains(\"linux\")) | .browser_download_url') | tar -xzv \u0026\u0026     mv code-server*linux-x86_64/code-server /usr/bin/ \u0026\u0026     rm -fr code-server*linux-x86_64 \u0026\u0026     wget -O - https://github.com/openshift/origin/releases/download/${oc_version}/openshift-origin-client-tools-${oc_version}-${oc_version_commit}-linux-64bit.tar.gz | tar -xzv \u0026\u0026     mv openshift-origin-client-tools-${oc_version}-${oc_version_commit}-linux-64bit/oc /usr/bin/ \u0026\u0026     mv openshift-origin-client-tools-${oc_version}-${oc_version_commit}-linux-64bit/kubectl /usr/bin/ \u0026\u0026     rm -fr openshift-origin-client-tools-${oc_version}-${oc_version_commit}-linux-64bit* \u0026\u0026     /usr/bin/oc completion bash \u003e\u003e /etc/bash_completion.d/oc_completion \u0026\u0026     /usr/bin/kubectl completion bash \u003e\u003e /etc/bash_completion.d/kubectl_completion \u0026\u0026     mkdir -p /dev/net \u0026\u0026     mknod /dev/net/tun c 10 200 \u0026\u0026     chmod 600 /dev/net/tun \u0026\u0026     echo \"user ALL=(ALL) NOPASSWD: /usr/sbin/openvpn --config /home/coder/projects/.openvpn/openvpn-client-conf.ovpn\" \u003e\u003e /etc/sudoers.d/openvpn-client \u0026\u0026     adduser --disabled-password --gecos '' coder \u0026\u0026     echo '%sudo ALL=(ALL:ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers \u0026\u0026     echo \"coder ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers.d/nopasswd \u0026\u0026     chmod g+rw /home/coder \u0026\u0026     chmod a+x /opt/exec \u0026\u0026     chgrp -R 0 /home/coder /etc/ansible \u0026\u0026     chmod -R g=u /home/coder /etc/ansible /etc/resolv.conf \u0026\u0026     chmod g=u /etc/passwd /etc/resolv.conf /etc/ssl/certs/ca-certificates.crt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/coder"
        },
        {
          "Name": "user",
          "User": "coder"
        },
        {
          "CmdLine": [
            "mkdir -p projects \u0026\u0026 mkdir -p certs \u0026\u0026     curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \u0026\u0026     sudo chmod -R g+rw projects/ \u0026\u0026     sudo chmod -R g+rw certs/ \u0026\u0026     sudo chmod -R g+rw .nvm \u0026\u0026     sudo rm -frv .config/ \u0026\u0026     sudo chgrp -R 0 /home/coder"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint",
            "/home/coder"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/coder/projects",
            "/home/coder/certs"
          ]
        },
        {
          "Name": "user",
          "User": "10001"
        },
        {
          "CmdLine": [
            "/home/coder/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/opt/exec"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}