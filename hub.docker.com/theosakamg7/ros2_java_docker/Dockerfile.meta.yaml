MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: '"1.0.3"'
  - Key: APT_FLAGS
    Name: arg
    Value: '"-q -y --no-install-recommends --no-install-suggests"'
  - Labels:
    - Key: maintainer
      Value: '"Mickael Gaillard <mick.gaillard@gmail.com>"'
    - Key: version
      Value: '"$VERSION-ubuntu-LTS"'
    - Key: description
      Value: '"ROS2 for java"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"ROS2java"'
    - Key: org.label-schema.description
      Value: '"ROS2 for java"'
    - Key: org.label-schema.url
      Value: '"https://github.com/ros2java-alfred/ros2_java_docker"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/ros2java-alfred/ros2_java_docker"'
    - Key: org.label-schema.vendor
      Value: '"ROS2java-Alfred"'
    - Key: org.label-schema.version
      Value: '"$VERSION-ubuntu-LTS"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: INITRD
      Value: '"no"'
    - Key: DEBIAN_FRONTEND
      Value: '"noninteractive"'
    - Key: JAVA_HOME
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64"'
    - Key: JAVA_AWT_INCLUDE_PATH
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"'
    - Key: JAVA_INCLUDE_PATH
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/include"'
    - Key: JAVA_INCLUDE_PATH2
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/include/linux"'
    - Key: JAVA_AWT_LIBRARY
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libjawt.so"'
    - Key: JAVA_JVM_LIBRARY
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/server/libjvm.so"'
    - Key: OSPL_URL
      Value: '"file:///usr/etc/opensplice/config/ospl.xml"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install ${APT_FLAGS}         gnupg         git         curl         wget         apt-utils         locales
      &&     locale-gen en_US.UTF-8 &&     touch /usr/share/locale/locale.alias &&     mkdir
      -p /usr/share/man/man1 &&     sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/'
      /etc/locale.gen &&     echo 'LANG="en_US.UTF-8"' > /etc/default/locale &&     dpkg-reconfigure
      --frontend=noninteractive locales &&     update-locale LANG=en_US.UTF-8 &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - /usr/bin/wget -qO - http://packages.ros.org/ros.key | apt-key add - &&     /usr/bin/wget
      -qO - http://packages.osrfoundation.org/gazebo.key | apt-key add - &&     echo
      "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list
      &&     echo "deb http://packages.osrfoundation.org/gazebo/ubuntu bionic main"
      > /etc/apt/sources.list.d/gazebo-latest.list &&     apt-get update &&     apt-get
      install ${APT_FLAGS}         gradle         openjdk-8-jdk         openjdk-8-jdk-headless         openjdk-8-jre         openjdk-8-jre-headless         libhawtjni-runtime-java         build-essential         cppcheck         cmake         libopencv-dev         python-empy         python3-catkin-pkg-modules         python3-dev         python3-empy         python3-nose         python3-pip         python3-pyparsing         python3-pytest         python3-pytest-cov         python3-setuptools         python3-vcstool         libtinyxml-dev         libeigen3-dev         libassimp-dev         libpoco-dev         python3-colcon-common-extensions         clang-format         pydocstyle         pyflakes         python3-coverage         python3-mock         python3-pep8         uncrustify         libasio-dev         libtinyxml2-dev         python3-argcomplete         clang         libssl-dev         openssl
      &&     pip3 install flake8 flake8-import-order &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/travis/build/ament_ws/src &&     mkdir -p /home/travis/build/ros2_java_ws/src
      &&     mkdir -p /home/travis/.gradle &&     touch /home/travis/.gradle/gradle.properties
      &&     echo "org.gradle.jvmargs=-Xmx3072M -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError
      -Dfile.encoding=UTF-8" | tee -a /home/travis/.gradle/gradle.properties
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Welcome to Ubuntu latest LTS GNU/linux for ROS2 Java"
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
