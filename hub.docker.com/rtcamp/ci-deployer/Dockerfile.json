{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli",
      "SourceCode": "FROM php:7.1-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Mriyam Tamuli \u003cmbtamuli@gmail.com\u003e, Utkarsh Patel \u003cutkarsh.patel@rtcamp.com\u003e, Vaishali Agola \u003cvaishaliagola27@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e \"$PHP_INI_DIR/conf.d/memory-limit.ini\" \u0026\u0026 echo \"date.timezone=Asia/Kolkata\" \u003e \"$PHP_INI_DIR/conf.d/date_timezone.ini\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/composer"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/composer/vendor/bin:~/.local/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "\"$HOME/.nvm\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "lts"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get install -y \tapt-transport-https     curl     git     gnupg     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng-dev     libbz2-dev     libxslt-dev     libmemcached-dev     libmemcached11     libyaml-dev     mysql-client     python-dev     python-pip     subversion     unzip     wget     zip   \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --quiet awscli --upgrade --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath mcrypt zip bz2 mbstring pcntl xsl   \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr   \u0026\u0026 docker-php-ext-install gd   \u0026\u0026 docker-php-ext-install mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp   \u0026\u0026 git clone https://github.com/bnap00/pecl-memcache.git memcache   \u0026\u0026 cd memcache   \u0026\u0026 /usr/local/bin/phpize   \u0026\u0026 ./configure --with-php-config=/usr/local/bin/php-config   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20160303/memcache.so\" \u003e /usr/local/etc/php/conf.d/ext-memcache.ini    \u0026\u0026 rm -rf /tmp/memcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \u0026\u0026 rm -rf /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.*",
            "/composer/"
          ]
        },
        {
          "CmdLine": [
            "cd /composer \u0026\u0026 composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"[ -s $NVM_DIR/nvm.sh ] \u0026\u0026 \\. $NVM_DIR/nvm.sh     \u0026\u0026 nvm install --lts     \u0026\u0026 nvm use default\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"[ -s $NVM_DIR/nvm.sh ] \u0026\u0026 \\. $NVM_DIR/nvm.sh     \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \\\"deb https://dl.yarnpkg.com/debian/ stable main\\\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update \u003e /dev/null \u0026\u0026 apt-get install yarn -qqy     \u0026\u0026 yarn config set cache-folder ~/.yarn_cache\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}