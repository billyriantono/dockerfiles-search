{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends\t\timagemagick \t\tless \t\tmysql-client \t\tssmtp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get install -y --no-install-recommends \t\tlibfreetype6-dev \t\tlibjpeg-dev \t\tlibjpeg62-turbo-dev \t\tlibmagickwand-dev \t\tlibmcrypt-dev \t\tlibpng-dev \t\tlibzip-dev \t\tzip \t\tunzip \t; \t\tmkdir -p /usr/src/php/ext; \tcd /usr/src/php/ext/; \tcurl -sSL -o php7.zip https://github.com/websupport-sk/pecl-memcache/archive/NON_BLOCKING_IO_php7.zip; \tunzip php7.zip; \tmv pecl-memcache-NON_BLOCKING_IO_php7 memcache; \tpecl install imagick redis; \tprintf \"\\n\" | pecl install mcrypt-1.0.1; \tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-configure zip --with-libzip; \tdocker-php-ext-configure memcache --with-php-config=/usr/local/bin/php-config; \tdocker-php-ext-install gd memcache mysqli opcache zip; \tdocker-php-ext-enable imagick mcrypt redis; \t\tapt-mark auto '.*' \u003e /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \t\t| awk '/=\u003e/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/* /tmp/pecl-memcache-php7 /usr/src/php/ext/php7.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_VERSION",
              "Value": "4.9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_SHA1",
              "Value": "0e630bf940fd586b10e099cd9195b3e825fb194c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\"; \techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \ttar -xzf wordpress.tar.gz -C /usr/src/; \trm wordpress.tar.gz; \tchown -R www-data:www-data /usr/src/wordpress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL \"https://getcomposer.org/installer\" | php \t\t\u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" \t\t\u0026\u0026 chmod +x wp-cli.phar \t\t\u0026\u0026 mv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/wp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'path: /var/www/html'; \t\t} \u003e /etc/wp-cli/config.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"mailhub=mail:1025\\nUseTLS=NO\\nFromLineOverride=YES\" \u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}