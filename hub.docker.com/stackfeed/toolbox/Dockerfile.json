{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "stackfeed/alpine-python3",
      "SourceCode": "FROM stackfeed/alpine-python3",
      "Platform": "",
      "From": {
        "Image": "stackfeed/alpine-python3"
      },
      "Commands": [
        {
          "Expression": "ARG _USER=user",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG _UID=1000",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG _GID=1000",
          "Name": "onbuild"
        },
        {
          "Key": "TF_VERSION",
          "Name": "arg",
          "Value": "0.11.7"
        },
        {
          "Key": "TG_VERSION",
          "Name": "arg",
          "Value": "0.16.3"
        },
        {
          "Key": "KOPS_RELEASE",
          "Name": "arg",
          "Value": "1.9.1"
        },
        {
          "Key": "KUBECTL_SOURCE",
          "Name": "arg",
          "Value": "kubernetes-release/release"
        },
        {
          "Key": "KUBECTL_TRACK",
          "Name": "arg",
          "Value": "stable.txt"
        },
        {
          "CmdLine": [
            "apk add --no-cache vim sudo jq fping make git openssh-client iptables"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli sshuttle \u0026\u0026 apk add --no-cache groff less mailcap \u0026\u0026     curl -sSL https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -o /tmp/terraform.zip \u0026\u0026               unzip /tmp/terraform.zip -d /usr/bin \u0026\u0026     curl -sSL https://github.com/gruntwork-io/terragrunt/releases/download/v${TG_VERSION}/terragrunt_linux_amd64 -o /usr/bin/terragrunt \u0026\u0026               chmod 755 /usr/bin/terragrunt \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SsL --retry 5 -o /usr/bin/kops https://github.com/kubernetes/kops/releases/download/${KOPS_RELEASE}/kops-linux-amd64 \u0026\u0026     KUBECTL_VERSION=$(curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBECTL_SOURCE}/${KUBECTL_TRACK}\") \u0026\u0026     curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBECTL_SOURCE}/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" \u003e /usr/bin/kubectl \u0026\u0026     chmod +x /usr/bin/kubectl /usr/bin/kops"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Expression": "RUN groupadd -g ${_GID} ${_USER} \u0026\u0026             useradd -s /bin/bash -md /home/${_USER} -u ${_UID} -g ${_GID} ${_USER} \u0026\u0026             echo \"${_USER} ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/${_USER} \u0026\u0026             chmod 440 /etc/sudoers.d/${_USER}",
          "Name": "onbuild"
        },
        {
          "Expression": "USER $_UID:$_GID",
          "Name": "onbuild"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/code"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/code\""
        }
      ]
    }
  ]
}