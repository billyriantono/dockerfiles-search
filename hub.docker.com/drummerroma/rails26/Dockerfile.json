{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.6.2-alpine3.9",
      "SourceCode": "FROM ruby:2.6.2-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "ruby:2.6.2-alpine3.9"
      },
      "Commands": [
        {
          "Maintainer": "Alex Drummer \u003cdrummerroma@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES",
              "Value": "\"curl-dev build-base openssh curl\""
            },
            {
              "Key": "DEV_PACKAGES",
              "Value": "\"tzdata libxml2 libxml2-dev libxslt libxslt-dev mysql-client                   imagemagick imagemagick-dev mysql-dev sqlite-dev git nodejs bash syslog-ng \t\t\t\t\t\t\t\t\tlibstdc++ libjpeg-turbo libpng\""
            },
            {
              "Key": "ADVANCECOMP_VERSION",
              "Value": "2.1"
            },
            {
              "Key": "GIFSICLE_VERSION",
              "Value": "1.91"
            },
            {
              "Key": "IJG_VERSION",
              "Value": "9c"
            },
            {
              "Key": "JHEAD_VERSION",
              "Value": "3.00"
            },
            {
              "Key": "JPEGARCHIVE_VERSION",
              "Value": "2.2.0"
            },
            {
              "Key": "JPEGOPTIM_VERSION",
              "Value": "1.4.6"
            },
            {
              "Key": "MOZJPEG_VERSION",
              "Value": "3.3.1"
            },
            {
              "Key": "OPTIPNG_VERSION",
              "Value": "0.7.7"
            },
            {
              "Key": "PNGCRUSH_VERSION",
              "Value": "1.8.13"
            },
            {
              "Key": "PNGOUT_VERSION",
              "Value": "20150319"
            },
            {
              "Key": "PNGQUANT_VERSION",
              "Value": "2.12.1"
            },
            {
              "Key": "LIBIMAGEQUANT_VERSION",
              "Value": "2.12.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update --upgrade add --no-cache $BUILD_PACKAGES $DEV_PACKAGES"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add   libstdc++   libjpeg-turbo   libpng   nodejs yarn   ruby   \u0026\u0026 apk add --virtual build-dependencies   build-base   libjpeg-turbo-dev   zlib-dev   bash libpng-dev   pkgconfig autoconf automake libtool nasm   curl   ruby-irb   \u0026\u0026 curl -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz   \u0026\u0026 tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz   \u0026\u0026 cd advancecomp-$ADVANCECOMP_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -L -O https://github.com/kohler/gifsicle/archive/v$GIFSICLE_VERSION.tar.gz   \u0026\u0026 tar zxf v$GIFSICLE_VERSION.tar.gz   \u0026\u0026 cd gifsicle-$GIFSICLE_VERSION   \u0026\u0026 autoreconf -i \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz   \u0026\u0026 tar zxf jhead-$JHEAD_VERSION.tar.gz   \u0026\u0026 cd jhead-$JHEAD_VERSION   \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -O https://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz   \u0026\u0026 tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz   \u0026\u0026 cd jpegoptim-$JPEGOPTIM_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz   \u0026\u0026 tar zxf v$MOZJPEG_VERSION.tar.gz   \u0026\u0026 cd mozjpeg-$MOZJPEG_VERSION   \u0026\u0026 autoreconf -fiv \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -L -O https://github.com/danielgtaylor/jpeg-archive/archive/v$JPEGARCHIVE_VERSION.tar.gz   \u0026\u0026 tar zxf v$JPEGARCHIVE_VERSION.tar.gz   \u0026\u0026 cd jpeg-archive-$JPEGARCHIVE_VERSION   \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz   \u0026\u0026 tar zxf jpegsrc.v$IJG_VERSION.tar.gz   \u0026\u0026 cd jpeg-$IJG_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz   \u0026\u0026 tar zxf optipng-$OPTIPNG_VERSION.tar.gz   \u0026\u0026 cd optipng-$OPTIPNG_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 curl -L -O http://downloads.sourceforge.net/project/pmt/pngcrush/$PNGCRUSH_VERSION/pngcrush-$PNGCRUSH_VERSION.tar.gz   \u0026\u0026 tar zxf pngcrush-$PNGCRUSH_VERSION.tar.gz   \u0026\u0026 cd pngcrush-$PNGCRUSH_VERSION   \u0026\u0026 make \u0026\u0026 cp -f pngcrush /usr/local/bin   \u0026\u0026 curl -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz   \u0026\u0026 tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz   \u0026\u0026 cd pngout-$PNGOUT_VERSION-linux-static   \u0026\u0026 cp -f x86_64/pngout-static /usr/local/bin/pngout   \u0026\u0026 curl -L -O https://github.com/ImageOptim/libimagequant/archive/$LIBIMAGEQUANT_VERSION.tar.gz   \u0026\u0026 tar xzf $LIBIMAGEQUANT_VERSION.tar.gz   \u0026\u0026 curl -L -O https://github.com/pornel/pngquant/archive/$PNGQUANT_VERSION.tar.gz   \u0026\u0026 tar xzf $PNGQUANT_VERSION.tar.gz   \u0026\u0026 mv libimagequant-$LIBIMAGEQUANT_VERSION/* pngquant-$PNGQUANT_VERSION/lib/   \u0026\u0026 cd pngquant-$PNGQUANT_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 yarn global add svgo --prefix /usr/local   \u0026\u0026 rm -rf /tmp/*   \u0026\u0026 apk del build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install -N bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install libv8"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}