{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4-alpine3.6",
      "SourceCode": "FROM ruby:2.4-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4-alpine3.6"
      },
      "Commands": [
        {
          "Maintainer": "Alex Drummer \u003cdrummerroma@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "RAILS_VERSION",
              "Value": "\"5.0.6\""
            },
            {
              "Key": "BUILD_PACKAGES",
              "Value": "\"curl-dev build-base openssh\""
            },
            {
              "Key": "DEV_PACKAGES",
              "Value": "\"tzdata libxml2 libxml2-dev libxslt libxslt-dev mysql-client                   imagemagick imagemagick-dev mysql-dev sqlite-dev git nodejs bash syslog-ng \t\t\t\t\t\t\t\t\tlibstdc++ libjpeg-turbo libpng\""
            },
            {
              "Key": "JPEGOPTIM_VERSION",
              "Value": "1.4.3"
            },
            {
              "Key": "PNGCRUSH_VERSION",
              "Value": "1.7.88"
            },
            {
              "Key": "ZOPFLI_VERSION",
              "Value": "1.0.1"
            },
            {
              "Key": "ADVANCECOMP_VERSION",
              "Value": "1.20"
            },
            {
              "Key": "JHEAD_VERSION",
              "Value": "3.00"
            },
            {
              "Key": "GIFSICLE_VERSION",
              "Value": "1.88"
            },
            {
              "Key": "OPTIPNG_VERSION",
              "Value": "0.7.5"
            },
            {
              "Key": "PNGQUANT_VERSION",
              "Value": "2.5.2"
            },
            {
              "Key": "JPEGARCHIVE_VERSION",
              "Value": "2.1.1"
            },
            {
              "Key": "MOZJPEG_VERSION",
              "Value": "3.1"
            },
            {
              "Key": "IJG_VERSION",
              "Value": "9a"
            },
            {
              "Key": "PNGOUT_VERSION",
              "Value": "20150319"
            },
            {
              "Key": "SKIP_IMAGE_OPTIM_PACK",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update --upgrade add  --no-cache  $BUILD_PACKAGES $DEV_PACKAGES \u0026\u0026   rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add \t  \u0026\u0026 apk add --virtual build-dependencies \t  libjpeg-turbo-dev \t  zlib-dev \t  bash libpng-dev \t  pkgconfig autoconf automake libtool nasm \t  curl \t  \u0026\u0026 curl -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz \t  \u0026\u0026 tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz \t  \u0026\u0026 cd advancecomp-$ADVANCECOMP_VERSION \t  \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -O https://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz \t  \u0026\u0026 tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz \t  \u0026\u0026 cd gifsicle-$GIFSICLE_VERSION \t  \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz \t  \u0026\u0026 tar zxf jhead-$JHEAD_VERSION.tar.gz \t  \u0026\u0026 cd jhead-$JHEAD_VERSION \t  \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -O http://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz \t  \u0026\u0026 tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz \t  \u0026\u0026 cd jpegoptim-$JPEGOPTIM_VERSION \t  \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz \t  \u0026\u0026 tar zxf v$MOZJPEG_VERSION.tar.gz \t  \u0026\u0026 cd mozjpeg-$MOZJPEG_VERSION \t  \u0026\u0026 autoreconf -fiv \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -L -O https://github.com/danielgtaylor/jpeg-archive/archive/$JPEGARCHIVE_VERSION.tar.gz \t  \u0026\u0026 tar zxf $JPEGARCHIVE_VERSION.tar.gz \t  \u0026\u0026 cd jpeg-archive-$JPEGARCHIVE_VERSION \t  \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz \t  \u0026\u0026 tar zxf jpegsrc.v$IJG_VERSION.tar.gz \t  \u0026\u0026 cd jpeg-$IJG_VERSION \t  \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz \t  \u0026\u0026 tar zxf optipng-$OPTIPNG_VERSION.tar.gz \t  \u0026\u0026 cd optipng-$OPTIPNG_VERSION \t  \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz \t  \u0026\u0026 tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz \t  \u0026\u0026 cd pngout-$PNGOUT_VERSION-linux-static \t  \u0026\u0026 cp -f x86_64/pngout-static /usr/local/bin/pngout \t  \u0026\u0026 cd .. \t  \u0026\u0026 curl -L -O http://pngquant.org/pngquant-$PNGQUANT_VERSION-src.tar.bz2 \t  \u0026\u0026 tar xjf pngquant-$PNGQUANT_VERSION-src.tar.bz2 \t  \u0026\u0026 cd pngquant-$PNGQUANT_VERSION \t  \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t  \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install -N bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/* \u0026\u0026 \t\tapk del build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}