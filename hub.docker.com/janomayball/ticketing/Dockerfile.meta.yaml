MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: org.label-schema.name
      Value: '"Jano Ticketing System"'
    - Key: maintainer
      Value: '"Andrew Ying <hi@andrewying.com>"'
    - Key: org.label-schema.description
      Value: '"Official Docker image for the Jano Ticketing System"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/jano-may-ball/ticketing"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Key: BUILD_ENV
    Name: arg
    Value: development
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends apt-utils curl
      gnupg wget software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -     && add-apt-repository
      ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends         git         vim         htop         mariadb-server         redis-server         supervisor         openssl         openssh-server         apache2         apache2-bin         apache2-data         apache2-utils         libapache2-mod-php7.1         php7.1         php7.1-xdebug         php7.1-mysql         php7.1-redis         php7.1-mbstring         php7.1-tokenizer         php7.1-bcmath         php7.1-gd         php7.1-xml         php7.1-curl         php7.1-zip         php7.1-bz2         unzip         nodejs         sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ie 's/upload_max_filesize\ =\ 2M/upload_max_filesize\ =\ 200M/g' /etc/php/7.1/apache2/php.ini     &&
      sed -ie 's/post_max_size\ =\ 8M/post_max_size\ =\ 200M/g' /etc/php/7.1/apache2/php.ini     &&
      sed -ie 's/bind/# bind/g' /etc/redis/redis.conf     && sed -ie 's/daemonize
      yes/daemonize no/g' /etc/redis/redis.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe;     bash -c "mysqld_safe --user=mysql &";     sleep 10;     echo "GRANT
      ALL ON *.* TO root@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION; FLUSH
      PRIVILEGES" | mysql;     echo "CREATE DATABASE jano" | mysql -u root -ppassword
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean     && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* /root/.composer
      /var/www/jano/node_modules
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .codeship
    - /var/www/codeship
  - CmdLine:
    - chmod +x /var/www/codeship/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/jano
  - Name: workdir
    Path: /var/www/jano
  - CmdLine:
    - chown -R www-data:www-data /var/www/jano     && if [ "$BUILD_ENV" = "development"
      ];            then HOME=/var/www/jano sudo -u www-data composer install --prefer-source
      --no-interaction                 && curl https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh
      | bash                 && fossa init;            else HOME=/var/www/jano sudo
      -u www-data composer install --prefer-source --no-dev --no-interaction;        fi     &&
      sudo -u www-data openssl genpkey -algorithm RSA -out storage/oauth-private.key
      -pkeyopt rsa_keygen_bits:2048     && sudo -u www-data openssl rsa -in storage/oauth-private.key
      -outform PEM -pubout -out storage/oauth-public.key     && HOME=/var/www/jano
      sudo -u www-data npm install     && if [ "$BUILD_ENV" = "development" ];            then
      HOME=/var/www/jano sudo -u www-data npm run development;            else HOME=/var/www/jano
      sudo -u www-data npm run production;        fi
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/html     && ln -s /var/www/jano/public /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe;     bash -c "mysqld --user=mysql &";     sleep 20;     sudo -u www-data
      php jano migrate --seed --force
    Name: run
    PrependShell: true
  - CmdLine:
    - supervisord
    - -c
    - /etc/supervisor/conf.d/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
