{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "oraclelinux:7",
      "SourceCode": "FROM oraclelinux:7",
      "Platform": "",
      "From": {
        "Image": "oraclelinux:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum install -y yum-plugin-ovl \u0026\u0026     rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \u0026\u0026     rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm \u0026\u0026     yum update -y \u0026\u0026     yum install -y         git httpd         php70w php70w-cli php70w-common php70w-bcmath php70w-gd php70w-imap php70w-intl php70w-mbstring         php70w-mcrypt php70w-mysql php70w-pdo php70w-pear php70w-soap php70w-tidy php70w-xml php70w-pecl-redis \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y php70w-devel gcc openssl-devel make \u0026\u0026     pecl install mongodb \u0026\u0026     echo \"extension=mongodb.so\" \u003e /etc/php.d/mongodb.ini \u0026\u0026     yum remove -y php70w-devel gcc openssl-devel make \u0026\u0026     yum autoremove -y \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/project \u0026\u0026     chown -R apache:apache /var/www/project \u0026\u0026     ln -sf /dev/stdout /var/log/httpd/access_log \u0026\u0026     ln -sf /dev/stderr /var/log/httpd/error_log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/etc/php.d/project.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vhost.conf",
            "/etc/httpd/conf.d/project.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/project"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "httpd-foreground",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "httpd-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}