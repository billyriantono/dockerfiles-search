MetaArgs: null
Stages:
- BaseName: jupyter/datascience-notebook:400c69639ea5
  Commands:
  - Name: user
    User: root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/hammerlab/immune-infiltrate-explorations/master/model-single-origin-samples/biokepi/conda_requirements.txt
    - /home/jovyan/conda_requirements.txt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/hammerlab/immune-infiltrate-explorations/master/model-single-origin-samples/biokepi/pip_requirements.txt
    - /home/jovyan/pip_requirements.txt
  - CmdLine:
    - chown jovyan:users /home/jovyan/conda_requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - chown jovyan:users /home/jovyan/pip_requirements.txt
    Name: run
    PrependShell: true
  - Name: user
    User: jovyan
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install_Cibersort_dependencies.R
    - /home/jovyan/install_Cibersort_dependencies.R
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runRserve.R
    - /home/jovyan/runRserve.R
  - CmdLine:
    - conda install --file=/home/jovyan/conda_requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r /home/jovyan/pip_requirements.txt
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update -y && apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: '''/usr/lib/jvm/java-8-openjdk-amd64'''
    Name: env
  - CmdLine:
    - 'javac -version # validates that installed'
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/opt/conda/lib/R/lib:/opt/conda/lib:${LD_LIBRARY_PATH}"'
    Name: env
  - CmdLine:
    - Rscript /home/jovyan/install_Cibersort_dependencies.R
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     wget     imagemagick     parallel     tzdata     libicu-dev;
    Name: run
    PrependShell: true
  - CmdLine:
    - 'ln -s /bin/tar /bin/gtar; # necessary for bioclite and devtools::install_github,
      at least for grimbough/biomaRt -- calls out to gtar for some reason'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages(c('Rcpp'), repo='http://cran.rstudio.com')";
    Name: run
    PrependShell: true
  - CmdLine:
    - 'Rscript -e "install.packages(c(''stringi'', ''stringr''), repos=''http://cran.rstudio.com/'')";
      # requires libicu-dev to be installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c r --quiet --yes     'r-essentials'     'r-rserve'     'r-dplyr'     'r-e1071'     'r-glue'     'r-lubridate'     'r-purrr'     'r-stringr'     'r-tibble'     'r-readr'     'r-tidyr'     'r-magrittr'     'r-rmarkdown'     'r-reticulate'     'r-readxl'     'r-testthat'     'r-rcolorbrewer'     'r-formatr';
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c r --quiet --yes 'r-xml';
    Name: run
    PrependShell: true
  - CmdLine:
    - 'conda install --quiet --yes gxx_linux-64; # needed for purrrlyr (https://github.com/RcppCore/Rcpp/issues/770)'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'conda install --quiet --yes gcc_linux-64 gfortran_linux-64; # needed for statmod
      ("/opt/conda/bin/x86_64-conda_cos6-linux-gnu-gfortran: Command not found"):
      see https://conda.io/docs/di-guide/tasks/build-packages/compiler-tools.html'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "withCallingHandlers(install.packages(c(     'estimate',     'purrrlyr',     'txtplot',     'statmod'),
      repos=c('http://cran.rstudio.com', 'http://r-forge.r-project.org', 'http://www.bioconductor.org/packages/release/bioc')),
      warning = function(w) stop(w))";
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite(c('grimbough/biomaRt',
      'sva', 'tximport', 'Rsubread', 'rhdf5', 'edgeR', 'limma'))";
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "library(devtools); devtools::install_github('maximz/rinfino@ux_changes',
      dependencies=T)";
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -e git+https://github.com/hammerlab/infino.git@develop#egg=infino
    Name: run
    PrependShell: true
  - Name: user
    User: jovyan
  - CmdLine:
    - 'pyensembl install --release 79 --species homo_sapiens # this requires a lot
      of memory (if we see Killed, it''s an out-of-memory error that requires allocating
      more memory to the docker machine or VM)'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+git://github.com/jburos/nbutils
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyter_contrib_nbextensions==0.4.0
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install --upgrade jupyter-core # necessary for next line'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'jupyter contrib nbextension install --user # seems to require jupyter-core>=4.4.0'
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable code_prettify/code_prettify
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable collapsible_headings/main
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable freeze/main
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable notify/notify
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable toc2/main
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable varInspector/main
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable execute_time/ExecuteTime
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable init_cell/main
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable table_beautifier/main
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable python-markdown/main
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install yapf
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x jq-linux64
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /home/jovyan/.jupyter/nbconfig/notebook.json /home/jovyan/notebook.json.bak
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cat /home/jovyan/notebook.json.bak | ./jq-linux64 ''. + {"init_cell": {"run_on_kernel_ready":
      false}}'' > /home/jovyan/.jupyter/nbconfig/notebook.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/stan-dev/cmdstan/releases/download/v2.16.0/cmdstan-2.16.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -zxvf cmdstan-2.16.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mv "/home/jovyan/`tar -tzf cmdstan-2.16.0.tar.gz | head -1 | cut -f1 -d"/"`"
      "/home/jovyan/cmdstan"
    Name: run
    PrependShell: true
  - CmdLine:
    - make build -C /home/jovyan/cmdstan
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/home/jovyan/cmdstan/bin:${PATH}"'
    Name: env
  - CmdLine:
    - conda install --yes mkl mkl-service
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c 'import sklearn.linear_model.tests.test_randomized_l1'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - Rscript /home/jovyan/runRserve.R && start-notebook.sh --NotebookApp.token=''
    Name: cmd
    PrependShell: true
  From:
    Image: jupyter/datascience-notebook:400c69639ea5
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/datascience-notebook:400c69639ea5
