{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"0.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"A simple PHP 7.2 Server\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends gnupg     \u0026\u0026 echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" \u003e /etc/apt/sources.list.d/ondrej-php.list     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y --no-install-recommends install         curl ca-certificates unzip         php7.2-cli         php7.2-curl         php-apcu         php-apcu-bc         php7.2-json         php7.2-mbstring         php7.2-opcache         php7.2-readline         php7.2-xml         php7.2-zip         php7.2-fpm         php-memcached         php7.2-mysql         php-xdebug         php7.3-gd     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_10.x | bash -    \u0026\u0026 apt-get install -y --no-install-recommends nodejs     \u0026\u0026 apt-get install -y --no-install-recommends git ssh     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer    \u0026\u0026 php -r \"unlink('composer-setup.php');\"     \u0026\u0026 composer global require hirak/prestissimo     \u0026\u0026 composer global require laravel/installer     \u0026\u0026 composer global require friendsofphp/php-cs-fixer     \u0026\u0026 composer global require phpunit/phpunit     \u0026\u0026 composer global require \"squizlabs/php_codesniffer=*\"     \u0026\u0026 composer global require phpmd/phpmd     \u0026\u0026 composer clear-cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "custom.conf",
            "/etc/php/7.2/fpm/pool.d/z-custom.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.ini",
            "/etc/php/7.2/fpm/pool.d/98-overrides.ini"
          ]
        },
        {
          "CmdLine": [
            "echo \"export PATH=\\$HOME/.composer/vendor/bin:\\$PATH\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/php/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/php-fpm7.2 -F -O"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        }
      ]
    }
  ]
}