MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get -y dist-upgrade && apt-get install -y curl wget build-essential
      gcc git      make python2.7 squashfs-tools libblas-dev liblapack-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/c9/core.git /c9 &&     cd /c9 &&     scripts/install-sdk.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - "useradd -u 1000 docker \t&& mkdir /home/docker \t&& chown docker:docker /home/docker
      \t&& addgroup docker staff"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y --no-install-recommends \t\ted \t\tless \t\tlocales \t\tvim-tiny
      \t\twget \t\tca-certificates \t\tfonts-texgyre"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \t&& locale-gen en_US.utf8 \t&&
      /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: R_BASE_VERSION
      Value: 3.3.3
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ubuntukey.pub
    - /tmp
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common python-software-properties apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key add /tmp/ubuntukey.pub
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu
      xenial/'
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tlittler                 r-cran-littler
      \t\tr-base=${R_BASE_VERSION}* \t\tr-base-dev=${R_BASE_VERSION}* \t\tr-recommended=${R_BASE_VERSION}*
      \        && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method
      = \"libcurl\")' >> /etc/R/Rprofile.site         && echo 'source(\"/etc/R/Rprofile.site\")'
      >> /etc/littler.r \t&& ln -s /usr/share/doc/littler/examples/install.r /usr/local/bin/install.r
      \t&& ln -s /usr/share/doc/littler/examples/install2.r /usr/local/bin/install2.r
      \t&& ln -s /usr/share/doc/littler/examples/installGithub.r /usr/local/bin/installGithub.r
      \t&& ln -s /usr/share/doc/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r
      \t&& install.r docopt \t&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds ENV SLURM_VER=16.05.11"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y munge curl gcc make bzip2 supervisor python python-dev     libmunge-dev
      libmunge2 lua5.2 lua5.2-dev libopenmpi-dev openmpi-bin     gfortran vim python-mpi4py
      python-numpy python-psutil psmisc     software-properties-common python-software-properties
      iputils-ping     openssh-server openssh-client default-jdk
    Name: run
    PrependShell: true
  - Env:
    - Key: SLURM_VER
      Value: 16.05.11
    Name: env
  - CmdLine:
    - curl -fsL https://download.schedmd.com/slurm/slurm-16.05.11.tar.bz2 | tar xfj
      - -C /opt/ &&     cd /opt/slurm-${SLURM_VER}/ &&     ./configure && make &&
      make install
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root /var/log/munge
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/munge
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root /var/lib/munge
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root /etc/munge/munge.key
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 600 /etc/munge/munge.key
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root /etc/munge
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install build-essential curl git man vim autoconf libtool default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install python
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/singularityware/singularity.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd singularity && git fetch origin pull/1106/head:PR1106 && git checkout PR1106
      && ./autogen.sh && ./configure --prefix=/usr/local && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && cd /usr/local/bin && curl -fsSL get.nextflow.io | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +rw /usr/local/bin/nextflow
    Name: run
    PrependShell: true
  - CmdLine:
    - install2.r rslurm
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R o+rw /c9
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - cd /home/docker && /c9/scripts/install-sdk.sh
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir /templates
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /home/docker/.c9 /templates
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - userconf.sh
    - /userconf.sh
  - CmdLine:
    - chmod +x /userconf.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd slurm
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - '"/userconf.sh"'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
