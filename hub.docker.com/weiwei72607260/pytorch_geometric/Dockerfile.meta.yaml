MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils ca-certificates
      apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5
      &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key
      adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
      &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n
      +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum
      -c --strict - && rm cudasign.pub &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 9.0.176
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.4.2
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 9-0=$CUDA_VERSION-1
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.4.2.24
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --allow-unauthenticated --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda9.0
      &&     apt-mark hold libnccl2 &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --allow-unauthenticated --no-install-recommends         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-core-9-0=9.0.176.3-1         cuda-cublas-dev-9-0=9.0.176.4-1         libnccl-dev=$NCCL_VERSION-1+cuda9.0
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda/lib64/stubs
    Name: env
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"${CUDA_VERSION}"'
    Name: label
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=9.0"'
    Name: env
  - CmdLine:
    - rm /etc/apt/sources.list.d/cuda.list &&     rm /etc/apt/sources.list.d/nvidia-ml.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  apt-get install -y     curl     ca-certificates     vim     sudo     git     bzip2     libx11-6  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - adduser --disabled-password --gecos '' --shell /bin/bash user  && chown -R user:user
      /app
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - Env:
    - Key: HOME
      Value: /home/user
    Name: env
  - CmdLine:
    - chmod 777 /home/user
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -so ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh  &&
      chmod +x ~/miniconda.sh  && ~/miniconda.sh -b -p ~/miniconda  && rm ~/miniconda.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/user/miniconda/bin:$PATH
    Name: env
  - Env:
    - Key: CONDA_AUTO_UPDATE_CONDA
      Value: "false"
    Name: env
  - CmdLine:
    - /home/user/miniconda/bin/conda install conda-build  && /home/user/miniconda/bin/conda
      create -y --name py36 python=3.6.5  && /home/user/miniconda/bin/conda clean
      -ya
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DEFAULT_ENV
      Value: py36
    Name: env
  - Env:
    - Key: CONDA_PREFIX
      Value: /home/user/miniconda/envs/$CONDA_DEFAULT_ENV
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_PREFIX/bin:$PATH
    Name: env
  - CmdLine:
    - conda install -y -c pytorch     cuda90=1.0     magma-cuda90=2.4.0     "pytorch=1.1.0=py3.6_cuda9.0.176_cudnn7.5.1_0"     torchvision=0.2.1  &&
      conda clean -ya
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y h5py=2.8.0  && conda clean -ya
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install h5py-cache==1.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install torchnet==0.0.4
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y requests=2.19.1  && conda clean -ya
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install graphviz==0.8.4
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update && sudo apt-get install -y --no-install-recommends     libgtk2.0-0     libcanberra-gtk-module  &&
      sudo rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c menpo opencv3=3.1.0  && conda clean -ya
    Name: run
    PrependShell: true
  - CmdLine:
    - CPATH=/usr/local/cuda/include:$CPATH  && LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH  &&
      DYLD_LIBRARY_PATH=/usr/local/cuda/lib:$DYLD_LIBRARY_PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --verbose --no-cache-dir torch-scatter  && pip install --verbose
      --no-cache-dir torch-sparse  && pip install --verbose --no-cache-dir torch-cluster  &&
      pip install --verbose --no-cache-dir torch-spline-conv  && pip install torch-geometric
    Name: run
    PrependShell: true
  - CmdLine:
    - python3
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
