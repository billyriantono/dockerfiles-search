MetaArgs:
- DefaultValue: stanfordoval/decanlp:latest
  Key: BASE_IMAGE
  ProvidedValue: null
  Value: stanfordoval/decanlp:latest
Stages:
- BaseName: ${BASE_IMAGE}
  Commands:
  - Maintainer: Thingpedia Admins <thingpedia-admins@lists.stanford.edu>
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - touch /var/lib/rpm/* &&   curl -sL https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
      -o epel-release-latest-8.noarch.rpm &&   dnf -y install epel-release-latest-8.noarch.rpm
      &&   curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo
      &&   curl -sL https://copr.fedorainfracloud.org/coprs/gcampax/sqlcipher/repo/epel-8/gcampax-sqlcipher-epel-8.repo
      -o /etc/yum.repos.d/gcampax-sqlcipher-epel-8.repo &&   curl -sL https://copr.fedorainfracloud.org/coprs/gcampax/bubblewrap/repo/epel-8/gcampax-bubblewrap-epel-8.repo
      -o /etc/yum.repos.d/gcampax-bubblewrap-epel-8.repo &&   dnf module install -y
      nodejs:10 &&   dnf -y install unzip GraphicsMagick bubblewrap sqlcipher sqlcipher-devel
      procps-ng &&   rm -rf /var/cache/dnf
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli && rm -fr /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://almond-static.stanford.edu/test-data/cvc4-1.6-x86_64-linux-opt
      -o /usr/local/bin/cvc4
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/share/almond-cloud/classifier &&     curl -sL https://nnmaster.almond.stanford.edu/test-models/classifier1.tar.gz
      -o classifier1.tar.gz &&     tar xvf classifier1.tar.gz -C /usr/local/share/almond-cloud/classifier
      &&     rm -f classifier1.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/lib/rpm/* &&     dnf -y install gcc gcc-c++ &&     pip3 install wheel
      &&     pip3 install pytorch_transformers==1.2.0 tensorboardX tqdm &&     rm
      -fr /root/.cache &&     dnf -y remove gcc gcc-c++ &&     rm -fr /var/cache/dnf
    Name: run
    PrependShell: true
  - Env:
    - Key: ALMOND_FRONTEND_CLASSIFIER
      Value: /usr/local/share/almond-cloud/classifier
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /opt/almond-cloud/
  - Name: workdir
    Path: /opt/almond-cloud/
  - CmdLine:
    - echo "build_from_source true" > .yarnrc && echo "sqlite_libname sqlcipher" >>
      .yarnrc
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/lib/rpm/* &&   dnf -y install make gettext python27 yarn gcc gcc-c++
      sqlcipher-devel &&   alternatives --set python /usr/bin/python2 &&   yarn install
      &&   dnf -y remove make gettext python27 yarn gcc gcc-c++ sqlcipher-devel &&   rm
      -fr /root/.cache &&   rm -fr /var/cache/dnf
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash -r almond-cloud
    Name: run
    PrependShell: true
  - Name: user
    User: almond-cloud
  - Name: workdir
    Path: /home/almond-cloud
  - CmdLine:
    - /opt/almond-cloud/docker/start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ${BASE_IMAGE}
  Name: ""
  Platform: ""
  SourceCode: FROM ${BASE_IMAGE}
