MetaArgs: null
Stages:
- BaseName: zendesk/samson:latest
  Commands:
  - Env:
    - Key: TERM
      Value: '"xterm"'
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - baselayout.tar
    - /
  - CmdLine:
    - set -x     && apt-update     && /usr/local/bin/generate-dockerimage-info     &&
      sed -ri "s/(deb.*\/debian $(docker-image-info dist-codename) main)/\1 contrib
      non-free /" -- /etc/apt/sources.list     && apt-update     && /usr/local/bin/apt-upgrade     &&
      /usr/local/bin/apt-install         apt-transport-https         ca-certificates         locales     &&
      GOSU_VERSION=1.10     && /usr/local/bin/apt-install wget gnupg dirmngr     &&
      dpkgArch="amd64"     && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"     &&
      wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true     && GOREPLACE_VERSION=0.5.4     &&
      wget -O /usr/local/bin/go-replace https://github.com/webdevops/goreplace/releases/download/$GOREPLACE_VERSION/gr-64-linux     &&
      chmod +x /usr/local/bin/go-replace     && apt-get purge -y -f --force-yes wget
      dirmngr     && docker-image-cleanup
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_CONF_HOME
      Value: /opt/docker/
    - Key: LOG_STDOUT
      Value: '""'
    - Key: LOG_STDERR
      Value: '""'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/
    - /opt/docker/
  - CmdLine:
    - /usr/local/bin/apt-install         python-minimal         python-setuptools         python-pip         python-paramiko         python-jinja2         python-dev         libffi-dev         libssl-dev         build-essential     &&
      pip install --upgrade pip     && hash -r     && pip install --no-cache-dir ansible     &&
      chmod 750 /usr/local/bin/ansible*     && apt-get purge -y -f --force-yes         python-dev         build-essential         libssl-dev         libffi-dev     &&
      docker-image-cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /opt/docker/bin/*     && /usr/local/bin/apt-install         supervisor         wget         curl         net-tools         gnupg     &&
      chmod +s /usr/local/bin/gosu     && /opt/docker/bin/provision run --tag bootstrap
      --role webdevops-base     && /opt/docker/bin/bootstrap.sh     && docker-image-cleanup
    Name: run
    PrependShell: true
  - Env:
    - Key: APPLICATION_USER
      Value: application
    - Key: APPLICATION_GROUP
      Value: application
    - Key: APPLICATION_PATH
      Value: /app
    - Key: APPLICATION_UID
      Value: "1000"
    - Key: APPLICATION_GID
      Value: "1000"
    Name: env
  - CmdLine:
    - /usr/local/bin/apt-install         zip         unzip         bzip2         wget         curl         net-tools         moreutils         dnsutils         openssh-client         rsync         git     &&
      /usr/local/bin/generate-locales     && /opt/docker/bin/provision run --tag bootstrap
      --role webdevops-base-app     && /opt/docker/bin/bootstrap.sh     && docker-image-cleanup
    Name: run
    PrependShell: true
  - Env:
    - Key: RAILS_ENV
      Value: '"production"'
    Name: env
  - Env:
    - Key: SQLITE_CLEANUP_DAYS
      Value: "0"
    Name: env
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive && set -x        && echo deb https://apt.dockerproject.org/repo
      debian-jessie main > /etc/apt/sources.list.d/docker.list        && curl -fsSL
      https://yum.dockerproject.org/gpg | apt-key add -     && /usr/local/bin/apt-install         nginx         docker-engine         php5-cli         php5-mysqlnd         php5-mcrypt         php5-curl         php5-recode         php5-json         openjdk-7-jre         sqlite3     &&
      pip install -U         docker-compose         python-dotenv     && curl -sS
      https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer     &&
      chmod 755 /usr/local/bin/ansible*     && docker-image-cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -     && apt-get install
      -y nodejs     && npm install -g npm     && npm install -g gulp     && npm install
      -g grunt-cli     && npm install -g bower     && npm install -g npm-cache     &&
      docker-image-cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && /usr/local/bin/apt-install         build-essential     && ansible-galaxy
      install --force         carlosbuenosvinos.ansistrano-deploy         carlosbuenosvinos.ansistrano-rollback     &&
      wget --quiet -O/usr/local/bin/dep http://deployer.org/deployer.phar     && chmod
      +x /usr/local/bin/dep     && gem install capistrano     && wget http://download.magephp.com/magallanes.latest.tar.gz
      -O /tmp/magallanes.tar.gz     && tar -xzf /tmp/magallanes.tar.gz -C /tmp/     &&
      /tmp/magallanes/bin/mage install --installDir=/opt/magallanes     && rm -rf
      /tmp/magallanes.tar.gz /tmp/magallanes/     && ln -s /opt/magallanes/latest/bin/mage
      /usr/bin/mage     && docker-image-cleanup
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - database.yml
    - /app/config/database.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - web/
    - /app/public/assets/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - crontab
    - /etc/cron.d/webdevops-samson-deployment
  - CmdLine:
    - rake assets:precompile     && /opt/docker/bin/control.sh service.enable cron     &&
      /opt/docker/bin/provision run --tag bootstrap --role webdevops-base --role webdevops-base-app
      --role webdevops-samson-deployment     && /opt/docker/bin/bootstrap.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /storage
  - CmdLine:
    - /opt/docker/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: zendesk/samson:latest
  Name: ""
  Platform: ""
  SourceCode: FROM zendesk/samson:latest
