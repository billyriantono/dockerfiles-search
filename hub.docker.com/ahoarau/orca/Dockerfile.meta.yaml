MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - CmdLine:
    - apk add --no-cache cmake g++ make
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p orca/build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - orca/
  - Name: workdir
    Path: orca/build
  - CmdLine:
    - cmake ..
    Name: run
    PrependShell: true
  - CmdLine:
    - cmake --build . -- -j`nproc`
    Name: run
    PrependShell: true
  - CmdLine:
    - cmake --build . --target install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - mkdir -p orca_test/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: orca_test
  - CmdLine:
    - echo -e "cmake_minimum_required(VERSION 3.1) \n project(orca-test) \n find_package(orca
      REQUIRED) \n add_executable(orca-test orca-test.cc) \n target_link_libraries(orca-test
      orca::orca) \n " > CMakeLists.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "#include <orca/orca.h> \n using namespace orca::all; \n int main()
      \n { \n     auto c = std::make_shared<CartesianTask>(\"CartTask_EE\"); \n     auto
      r = std::make_shared<RobotModel>(\"myRobot\"); \n     return 0; \n } \n " >
      orca-test.cc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: build
  - CmdLine:
    - cmake ..
    Name: run
    PrependShell: true
  - CmdLine:
    - cmake --build . -- -j`nproc`
    Name: run
    PrependShell: true
  - CmdLine:
    - ./orca-test
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/lib/orca/examples/01-simple_controller /usr/local/share/orca/examples/resources/lwr.urdf
      -l debug
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
