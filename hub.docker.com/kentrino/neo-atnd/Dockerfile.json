{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.1-alpine",
      "SourceCode": "FROM ruby:2.3.1-alpine",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.1-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Kento Haneda \u003ckento@haneda.me\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES",
              "Value": "\"ruby-dev build-base mysql-dev git\""
            },
            {
              "Key": "PACKAGES",
              "Value": "\"libxml2-dev zlib-dev linux-headers libxslt-dev tzdata nodejs\""
            },
            {
              "Key": "RAILS_VERSION",
              "Value": "\"4.2.6\""
            },
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            },
            {
              "Key": "BUNDLE_GEMFILE",
              "Value": "/var/www/app/Gemfile"
            },
            {
              "Key": "RAILS_ROOT",
              "Value": "/var/www/app"
            },
            {
              "Key": "GROUP_ID",
              "Value": "110"
            },
            {
              "Key": "APP_USER_ID",
              "Value": "1100"
            },
            {
              "Key": "NGINX_USER_ID",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /var/www \u0026\u0026   mkdir /var/www/app \u0026\u0026   apk --update upgrade \u0026\u0026   apk --no-cache add $BUILD_PACKAGES $PACKAGES $DEV_PACKAGES \u0026\u0026   echo 'gem: --no-document' \u003e\u003e ~/.gemrc \u0026\u0026   cp ~/.gemrc /etc/gemrc \u0026\u0026   chmod uog+r /etc/gemrc  \u0026\u0026   gem install nokogiri -- --use-system-libraries \u0026\u0026   gem install rails --version \"$RAILS_VERSION\" \u0026\u0026   git clone https://github.com/kentrino/neo-atnd $RAILS_ROOT \u0026\u0026   bundle install \u0026\u0026   cd /var/www/app \u0026\u0026   rake assets:precompile \u0026\u0026   mkdir /var/www/html \u0026\u0026   cp -R /var/www/app/public/* /var/www/html \u0026\u0026   addgroup nginx -g $GROUP_ID \u0026\u0026   adduser -D -H -G nginx -u $APP_USER_ID app \u0026\u0026   adduser -D -H -G nginx -u $NGINX_USER_ID nginx \u0026\u0026   chown -R app:nginx /var/www/app \u0026\u0026   chmod -R go-rwx /var/www/app \u0026\u0026   chown app:nginx /var/run \u0026\u0026   chown nginx:nginx /var/www \u0026\u0026   chown -R nginx:nginx /var/www/html \u0026\u0026   cp -L /usr/lib/libmysqlclient.so.18 ~/ \u0026\u0026   apk del $BUILD_PACKAGES \u0026\u0026   mv ~/libmysqlclient.so.18 /usr/lib \u0026\u0026   find / -type f -iname \\*.apk-new -delete \u0026\u0026   rm -rf /usr/lib/lib/ruby/gems/*/cache/* \u0026\u0026   rm -rf ~/.gem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "app"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/app"
        },
        {
          "CmdLine": [
            "bundle",
            "exec"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "unicorn",
            "-c",
            "./config/unicorn.rb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}