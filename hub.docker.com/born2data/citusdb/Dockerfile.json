{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "Heap Analytics https://heapanalytics.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd -r postgres \u0026\u0026 useradd -r -g postgres postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get upgrade -y     \u0026\u0026 apt-get install -y curl wget curl git make gcc protobuf-c-compiler libprotobuf-c0-dev vim    \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 gpg --verify /usr/local/bin/gosu.asc     \u0026\u0026 rm /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/citus.deb -SL https://packages.citusdata.com/readline-6.0/citusdb-4.0.0-1.amd64.deb \u0026\u0026     curl -o /tmp/citus-contrib.deb -SL https://packages.citusdata.com/contrib/citusdb-contrib-4.0.0-1.amd64.deb \u0026\u0026     dpkg --install /tmp/citus.deb \u0026\u0026     dpkg --install /tmp/citus-contrib.deb \u0026\u0026     rm /tmp/citus*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CITUS_MAJOR",
              "Value": "4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGUSER",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/citusdb/$CITUS_MAJOR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "git clone https://github.com/citusdata/cstore_fdw.git /tmp/cstore_fdw \t\u0026\u0026 cd /tmp/cstore_fdw \t\u0026\u0026 PATH=/usr/local/pgsql/bin/:$PATH make \t\u0026\u0026 PATH=/usr/local/pgsql/bin/:$PATH make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "reload-workers.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint.sh \u0026\u0026 \tchmod +x /reload-workers.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p /opt/citusdb/4.0/cstore/ \u0026\u0026 \tchown postgres:postgres /opt/citusdb/4.0/cstore/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}