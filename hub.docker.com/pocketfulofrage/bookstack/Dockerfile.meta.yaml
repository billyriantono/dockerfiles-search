MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Russ Bryan (rbryan@lee.vote)"'
    Name: label
  - Env:
    - Key: PPM_VERSION
      Value: 2.0.0
    - Key: PPM_HTTP_VERSION
      Value: 2.0.2
    - Key: BOOKSTACK
      Value: BookStack
    - Key: BOOKSTACK_VERSION
      Value: 0.27.5
    - Key: BOOKSTACK_HOME
      Value: '"/app"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /app/docker-entrypoint.sh
  - CmdLine:
    - set -ex   && chmod +x /app/docker-entrypoint.sh   && addgroup -g 82 -S www-data   &&
      adduser -u 82 -D -S -G www-data www-data   && apk update   && echo "Setting
      up PHP extensions"   && apk add --no-cache      curl      nginx      tar      php7      php7-cgi      php7-ctype      php7-curl      php7-dom      php7-exif      php7-fileinfo      php7-gd      php7-iconv      php7-intl      php7-json      php7-ldap      php7-mbstring      php7-mcrypt      php7-opcache      php7-openssl      php7-pcntl      php7-pdo_mysql      php7-pecl-imagick      php7-phar      php7-posix      php7-redis      php7-session      php7-simplexml      php7-sockets      php7-tidy      php7-tokenizer      php7-xml      php7-xmlwriter      php7-zip      php7-zlib      composer   &&
      echo "Setting up PPM:"   && mkdir -p /ppm/run   && cd /ppm   && chmod -R 777
      run/   && composer require php-pm/php-pm:${PPM_VERSION} php-pm/httpkernel-adapter:${PPM_HTTP_VERSION}   &&
      chown www-data:www-data -R .   && echo "Get BookStack:"   && mkdir -p ${BOOKSTACK_HOME}   &&
      cd ${BOOKSTACK_HOME}   && curl -LJO https://github.com/BookStackApp/BookStack/archive/v${BOOKSTACK_VERSION}.tar.gz   &&
      tar --strip-components=1 -xzf BookStack-${BOOKSTACK_VERSION}.tar.gz   && rm
      -rf ${BOOKSTACK}-${BOOKSTACK_VERSION}.tar.gz .env.example .gitattributes .github
      .gitignore .travis.yml tests/ public/index.php   && ln -s init.php bootstrap/autoload.php   &&
      echo "Get Dependencies:"   && composer install   && echo "Changing ownership:"   &&
      chown www-data:www-data -R .   && echo "Ensure www-data got access to Nginx
      folders:"   && chown www-data:www-data -R /var/lib/nginx /var/log/nginx
    Name: run
    PrependShell: true
  - Name: user
    User: www-data:www-data
  - Name: workdir
    Path: $BOOKSTACK_HOME
  - Name: expose
    Ports:
    - 80/tcp
  - Name: volume
    Volumes:
    - $BOOKSTACK_HOME/public/uploads
    - $BOOKSTACK_HOME/public/storage
  - CmdLine:
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
