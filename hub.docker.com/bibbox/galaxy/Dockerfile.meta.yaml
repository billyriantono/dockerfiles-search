MetaArgs: null
Stages:
- BaseName: toolshed/requirements
  Commands:
  - Maintainer: Björn A. Grüning, bjoern.gruening@gmail.com
    Name: maintainer
  - Key: GALAXY_RELEASE
    Name: arg
    Value: null
  - Key: GALAXY_REPO
    Name: arg
    Value: null
  - Env:
    - Key: GALAXY_RELEASE
      Value: ${GALAXY_RELEASE:-release_18.05}
    - Key: GALAXY_REPO
      Value: ${GALAXY_REPO:-https://github.com/galaxyproject/galaxy}
    - Key: GALAXY_ROOT
      Value: /galaxy-central
    - Key: GALAXY_CONFIG_DIR
      Value: /etc/galaxy
    - Key: EXPORT_DIR
      Value: /export
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GALAXY_CONFIG_FILE
      Value: $GALAXY_CONFIG_DIR/galaxy.yml
    - Key: GALAXY_CONFIG_JOB_CONFIG_FILE
      Value: $GALAXY_CONFIG_DIR/job_conf.xml
    - Key: GALAXY_CONFIG_JOB_METRICS_CONFIG_FILE
      Value: $GALAXY_CONFIG_DIR/job_metrics_conf.xml
    - Key: GALAXY_CONFIG_TOOL_DATA_TABLE_CONFIG_PATH
      Value: /etc/galaxy/tool_data_table_conf.xml
    - Key: GALAXY_CONFIG_WATCH_TOOL_DATA_DIR
      Value: "True"
    - Key: GALAXY_CONFIG_TOOL_DEPENDENCY_DIR
      Value: $EXPORT_DIR/tool_deps
    - Key: GALAXY_CONFIG_TOOL_PATH
      Value: $EXPORT_DIR/galaxy-central/tools
    - Key: GALAXY_VIRTUAL_ENV
      Value: /galaxy_venv
    - Key: GALAXY_USER
      Value: galaxy
    - Key: GALAXY_UID
      Value: "1450"
    - Key: GALAXY_GID
      Value: "1450"
    - Key: GALAXY_POSTGRES_UID
      Value: "1550"
    - Key: GALAXY_POSTGRES_GID
      Value: "1550"
    - Key: GALAXY_HOME
      Value: /home/galaxy
    - Key: GALAXY_LOGS_DIR
      Value: /home/galaxy/logs
    - Key: GALAXY_DEFAULT_ADMIN_USER
      Value: admin@galaxy.org
    - Key: GALAXY_DEFAULT_ADMIN_PASSWORD
      Value: admin
    - Key: GALAXY_DEFAULT_ADMIN_KEY
      Value: admin
    - Key: GALAXY_DESTINATIONS_DEFAULT
      Value: slurm_cluster
    - Key: GALAXY_RUNNERS_ENABLE_SLURM
      Value: "True"
    - Key: GALAXY_RUNNERS_ENABLE_CONDOR
      Value: "False"
    - Key: PG_DATA_DIR_DEFAULT
      Value: /var/lib/postgresql/9.3/main/
    - Key: PG_CONF_DIR_DEFAULT
      Value: /etc/postgresql/9.3/main/
    - Key: PG_DATA_DIR_HOST
      Value: $EXPORT_DIR/postgresql/9.3/main/
    - Key: UWSGI_PROCESSES
      Value: "2"
    - Key: UWSGI_THREADS
      Value: "4"
    - Key: USE_HTTPS
      Value: "False"
    - Key: USE_HTTPS_LETSENCRYPT
      Value: "False"
    - Key: GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL
      Value: http://localhost
    - Key: GALAXY_HANDLER_NUMPROCS
      Value: "2"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8 && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r postgres -g $GALAXY_POSTGRES_GID &&     adduser --system --quiet
      --home /var/lib/postgresql --no-create-home --shell /bin/bash --gecos "" --uid
      $GALAXY_POSTGRES_UID --gid $GALAXY_POSTGRES_GID postgres
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup &&     echo "Acquire::http
      {No-Cache=True;};" > /etc/apt/apt.conf.d/no-cache &&     apt-get -qq update
      && apt-get install --no-install-recommends -y apt-transport-https software-properties-common
      wget &&     sh -c "wget -qO - https://download.docker.com/linux/ubuntu/gpg |
      sudo apt-key add -" &&     sh -c "echo deb http://research.cs.wisc.edu/htcondor/ubuntu/stable/
      trusty contrib > /etc/apt/sources.list.d/htcondor.list" &&     sh -c "wget -qO
      - http://research.cs.wisc.edu/htcondor/ubuntu/HTCondor-Release.gpg.key | sudo
      apt-key add -" &&     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable" &&     apt-add-repository -y ppa:ansible/ansible
      &&     apt-add-repository -y ppa:galaxyproject/nginx &&     apt-get update -qq
      && apt-get upgrade -y &&     apt-get install --no-install-recommends -y postgresql-9.3
      sudo python-virtualenv     nginx-extras=1.4.6-1ubuntu3.8ppa1 nginx-common=1.4.6-1ubuntu3.8ppa1
      docker-ce=17.09.0~ce-0~ubuntu slurm-llnl slurm-llnl-torque     slurm-drmaa-dev
      proftpd proftpd-mod-pgsql libyaml-dev ansible munge libmunge-dev     nano vim
      curl python-crypto python-pip python-psutil condor python-ldap autofs     gridengine-common
      gridengine-drmaa1.0 rabbitmq-server libswitch-perl unattended-upgrades supervisor
      samtools &&     apt-get -qq remove -y supervisor &&     apt-get purge -y software-properties-common
      &&     apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/* && rm -rf ~/.cache/ &&     mkdir -p /etc/supervisor/conf.d/
      /var/log/supervisor/ &&     pip install --upgrade pip setuptools &&     pip
      install ephemeris supervisor --upgrade &&     ln -s /usr/local/bin/supervisord
      /usr/bin/supervisord
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r $GALAXY_USER -g $GALAXY_GID &&     useradd -u $GALAXY_UID -r -g
      $GALAXY_USER -d $GALAXY_HOME -c "Galaxy user" $GALAXY_USER &&     mkdir $EXPORT_DIR
      $GALAXY_HOME $GALAXY_LOGS_DIR && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME
      $EXPORT_DIR $GALAXY_LOGS_DIR &&     gpasswd -a $GALAXY_USER docker &&     adduser
      condor docker
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./bashrc
    - $GALAXY_HOME/.bashrc
  - CmdLine:
    - mkdir $GALAXY_ROOT &&     wget -q -O - $GALAXY_REPO/archive/$GALAXY_RELEASE.tar.gz
      | tar xzf - --strip-components=1 -C $GALAXY_ROOT &&     virtualenv $GALAXY_VIRTUAL_ENV
      &&     chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_VIRTUAL_ENV &&     chown -R
      $GALAXY_USER:$GALAXY_USER $GALAXY_ROOT &&     mkdir -p $GALAXY_CONFIG_DIR $GALAXY_CONFIG_DIR/web
      &&     chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_CONFIG_DIR &&     $GALAXY_VIRTUAL_ENV/bin/pip2
      install pip --upgrade &&     $GALAXY_VIRTUAL_ENV/bin/pip2 install --extra-index-url
      https://wheels.galaxyproject.org/ uwsgi==2.0.15 -v --pre &&     chown -R $GALAXY_USER:$GALAXY_USER
      $GALAXY_VIRTUAL_ENV &&     rm -rf ~/.cache/
    Name: run
    PrependShell: true
  - CmdLine:
    - su $GALAXY_USER -c "cp $GALAXY_ROOT/config/galaxy.yml.sample $GALAXY_CONFIG_FILE"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./reports_wsgi.ini.sample
    - $GALAXY_CONFIG_DIR/reports_wsgi.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sample_tool_list.yaml
    - $GALAXY_HOME/ephemeris/sample_tool_list.yaml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - roles/
    - /ansible/roles
  - Chown: ""
    Name: add
    SourcesAndDest:
    - provision.yml
    - /ansible/provision.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - postgresql_provision.yml
    - /ansible/postgresql_provision.yml
  - CmdLine:
    - ansible-playbook /ansible/postgresql_provision.yml &&     ansible-playbook /ansible/provision.yml     --extra-vars
      galaxy_venv_dir=$GALAXY_VIRTUAL_ENV     --extra-vars galaxy_log_dir=$GALAXY_LOGS_DIR     --extra-vars
      galaxy_user_name=$GALAXY_USER     --extra-vars galaxy_config_file=$GALAXY_CONFIG_FILE     --extra-vars
      galaxy_config_dir=$GALAXY_CONFIG_DIR     --extra-vars galaxy_job_conf_path=$GALAXY_CONFIG_JOB_CONFIG_FILE     --extra-vars
      galaxy_job_metrics_conf_path=$GALAXY_CONFIG_JOB_METRICS_CONFIG_FILE     --extra-vars
      supervisor_manage_slurm=""     --extra-vars galaxy_extras_config_condor=True     --extra-vars
      galaxy_extras_config_condor_docker=True     --extra-vars galaxy_extras_config_rabbitmq=True     --extra-vars
      galaxy_extras_config_cvmfs=True     --extra-vars proftpd_db_connection=galaxy@galaxy     --extra-vars
      proftpd_files_dir=$EXPORT_DIR/ftp     --extra-vars proftpd_use_sftp=True     --extra-vars
      galaxy_extras_docker_legacy=False     --extra-vars galaxy_minimum_version=18.01     --extra-vars
      nginx_upload_store_path=$EXPORT_DIR/nginx_upload_store     --extra-vars supervisor_postgres_config_path=$PG_CONF_DIR_DEFAULT/postgresql.conf     --extra-vars
      supervisor_postgres_autostart=false     --extra-vars nginx_use_remote_header=True     --tags=galaxyextras,cvmfs
      -c local &&     apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir /shed_tools && chown $GALAXY_USER:$GALAXY_USER /shed_tools &&     mkdir
      $EXPORT_DIR/ftp/ && chown $GALAXY_USER:$GALAXY_USER $EXPORT_DIR/ftp &&     mkdir
      /tool_deps/ && chown $GALAXY_USER:$GALAXY_USER /tool_deps &&     ln -s /tool_deps/
      $EXPORT_DIR/tool_deps && chown $GALAXY_USER:$GALAXY_USER $EXPORT_DIR/tool_deps
      # Configure Galaxy to use the Tool Shed'
    Name: run
    PrependShell: true
  - Name: user
    User: $GALAXY_USER
  - Name: workdir
    Path: $GALAXY_ROOT
  - Env:
    - Key: GALAXY_CONFIG_DATABASE_CONNECTION
      Value: postgresql://galaxy:galaxy@localhost:5432/galaxy?client_encoding=utf8
    - Key: GALAXY_CONFIG_ADMIN_USERS
      Value: admin@galaxy.org
    - Key: GALAXY_CONFIG_MASTER_API_KEY
      Value: HSNiugRFvgT574F43jZ7N9F3
    - Key: GALAXY_CONFIG_BRAND
      Value: '"Galaxy Docker Build"'
    - Key: GALAXY_CONFIG_STATIC_ENABLED
      Value: "False"
    - Key: GALAXY_CONFIG_JOB_WORKING_DIRECTORY
      Value: $EXPORT_DIR/galaxy-central/database/job_working_directory
    - Key: GALAXY_CONFIG_FILE_PATH
      Value: $EXPORT_DIR/galaxy-central/database/files
    - Key: GALAXY_CONFIG_NEW_FILE_PATH
      Value: $EXPORT_DIR/galaxy-central/database/files
    - Key: GALAXY_CONFIG_TEMPLATE_CACHE_PATH
      Value: $EXPORT_DIR/galaxy-central/database/compiled_templates
    - Key: GALAXY_CONFIG_CITATION_CACHE_DATA_DIR
      Value: $EXPORT_DIR/galaxy-central/database/citations/data
    - Key: GALAXY_CONFIG_CLUSTER_FILES_DIRECTORY
      Value: $EXPORT_DIR/galaxy-central/database/pbs
    - Key: GALAXY_CONFIG_FTP_UPLOAD_DIR
      Value: $EXPORT_DIR/ftp
    - Key: GALAXY_CONFIG_FTP_UPLOAD_SITE
      Value: galaxy.docker.org
    - Key: GALAXY_CONFIG_USE_PBKDF2
      Value: "False"
    - Key: GALAXY_CONFIG_NGINX_X_ACCEL_REDIRECT_BASE
      Value: /_x_accel_redirect
    - Key: GALAXY_CONFIG_NGINX_X_ARCHIVE_FILES_BASE
      Value: /_x_accel_redirect
    - Key: GALAXY_CONFIG_NGINX_UPLOAD_STORE
      Value: $EXPORT_DIR/nginx_upload_store
    - Key: GALAXY_CONFIG_NGINX_UPLOAD_PATH
      Value: /_upload
    - Key: GALAXY_CONFIG_DYNAMIC_PROXY_MANAGE
      Value: "False"
    - Key: GALAXY_CONFIG_VISUALIZATION_PLUGINS_DIRECTORY
      Value: config/plugins/visualizations
    - Key: GALAXY_CONFIG_TRUST_IPYTHON_NOTEBOOK_CONVERSION
      Value: "True"
    - Key: GALAXY_CONFIG_TOOLFORM_UPGRADE
      Value: "True"
    - Key: GALAXY_CONFIG_SANITIZE_ALL_HTML
      Value: "False"
    - Key: GALAXY_CONFIG_TOOLFORM_UPGRADE
      Value: "True"
    - Key: GALAXY_CONFIG_WELCOME_URL
      Value: $GALAXY_CONFIG_DIR/web/welcome.html
    - Key: GALAXY_CONFIG_OVERRIDE_DEBUG
      Value: "False"
    - Key: GALAXY_CONFIG_ENABLE_QUOTAS
      Value: "True"
    - Key: HOME
      Value: $GALAXY_HOME
    - Key: GALAXY_CONDA_PREFIX
      Value: $GALAXY_CONFIG_TOOL_DEPENDENCY_DIR/_conda
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - GalaxyDocker.png
    - $GALAXY_CONFIG_DIR/web/welcome_image.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - welcome.html
    - $GALAXY_CONFIG_DIR/web/welcome.html
  - CmdLine:
    - ./scripts/common_startup.sh &&     . $GALAXY_VIRTUAL_ENV/bin/activate &&     python
      ./scripts/manage_tool_dependencies.py -c "$GALAXY_CONFIG_FILE" init_if_needed
      &&     cd $GALAXY_ROOT/lib/galaxy/web/proxy/js &&     npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - /tool_deps/_conda/bin/conda create -y --override-channels --channel iuc --channel
      bioconda --channel conda-forge --channel defaults --channel r --name mulled-v1-eb2018fd3ce0fcbcee48a4bf89c57219add691c16729281b6c46b30f08339397
      samtools=1.3.1 bcftools=1.5
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup_postgresql.py
    - /usr/local/bin/setup_postgresql.py
  - CmdLine:
    - rm $PG_DATA_DIR_DEFAULT -rf &&     python /usr/local/bin/setup_postgresql.py
      --dbuser galaxy --dbpassword galaxy --db-name galaxy --dbpath $PG_DATA_DIR_DEFAULT
      &&     service postgresql start &&     . $GALAXY_VIRTUAL_ENV/bin/activate &&     sh
      create_db.sh -c "$GALAXY_CONFIG_FILE" &&     python /usr/local/bin/create_galaxy_user.py
      --user $GALAXY_DEFAULT_ADMIN_USER --password $GALAXY_DEFAULT_ADMIN_PASSWORD
      -c $GALAXY_CONFIG_FILE --key $GALAXY_DEFAULT_ADMIN_KEY &&     service postgresql
      stop
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./tool_sheds_conf.xml
    - $GALAXY_HOME/tool_sheds_conf.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install_tools_wrapper.sh
    - /usr/bin/install-tools
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install_biojs_vis.sh
    - /usr/bin/install-biojs
  - CmdLine:
    - chmod +x /usr/bin/install-tools /usr/bin/install-biojs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "DISCARD_SESSION_KEYRING_ON_STARTUP=False" > /etc/condor/condor_config.local
      &&     echo "TRUST_UID_DOMAIN=true" >> /etc/condor/condor_config.local
    Name: run
    PrependShell: true
  - Env:
    - Key: GALAXY_CONFIG_INTEGRATED_TOOL_PANEL_CONFIG
      Value: $EXPORT_DIR/galaxy-central/integrated_tool_panel.xml
    Name: env
  - Name: expose
    Ports:
    - :21
  - Name: expose
    Ports:
    - :80
  - Name: expose
    Ports:
    - :443
  - Name: expose
    Ports:
    - :8800
  - Name: expose
    Ports:
    - :9002
  - Name: volume
    Volumes:
    - /export/
    - /data/
    - /var/lib/docker
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install_db.sh
    - /usr/bin/install_db.sh
  - CmdLine:
    - chmod +x /usr/bin/install_db.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/startup
    Name: cmd
    PrependShell: false
  From:
    Image: toolshed/requirements
  Name: ""
  Platform: ""
  SourceCode: FROM toolshed/requirements
