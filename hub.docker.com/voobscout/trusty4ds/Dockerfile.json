{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://prerelease.keybase.io/keybase_amd64.deb",
            "/tmp/keybase_amd64.deb"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dpkg_opts",
            "/etc/apt/apt.conf.d/local"
          ]
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND='noninteractive' \u0026\u0026     export GIT_SSL_NO_VERIFY=1 \u0026\u0026     export container=docker \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get -qqy dist-upgrade \u0026\u0026     echo \"Europe/Berlin\" \u003e /etc/timezone \u0026\u0026     dpkg-reconfigure tzdata \u0026\u0026     echo \"locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8\" | debconf-set-selections \u0026\u0026     echo \"locales locales/default_environment_locale select en_US.UTF-8\" | debconf-set-selections \u0026\u0026     apt-get install -qqyf --install-recommends     openssl     cmake     gnutls-bin     ca-certificates     locales     inotify-tools     lsb-release     kmod     git-core     zsh     screen     sudo     curl     wget     build-essential     unzip     vim     gnupg-agent     bcrypt     libgmp3-dev     libmysqlclient-dev     libmagick++5     libmagickcore-dev     libmagickwand-dev     libxslt1-dev     pdftk     libreoffice     fonts-tlwg-typist     fonts-freefont-ttf     fonts-ubuntu-font-family-console     ttf-ubuntu-font-family     fonts-roboto     ssh     libcrypto++9 libcurl3 libfuse2 fuse gnupg2     libappindicator1 lsof libxss1 libgtk-3-0 \u0026\u0026     dpkg -i /tmp/keybase_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'XAuthLocation /usr/bin/xauth' \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo 'AddressFamily inet' \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo 'X11Forwarding yes' \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo 'X11UseLocalhost no' \u003e\u003e /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "windows_ttf.tar.gz",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/local/share/fonts \u0026\u0026     tar xzf /tmp/windows_ttf.tar.gz \u0026\u0026     rm -rf /tmp/* \u0026\u0026     fc-cache \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     useradd -d /opt/app -m -g users -G sudo,lp,uucp,dialout -u 1002 -s /bin/zsh app \u0026\u0026     echo -n \"%sudo ALL=(ALL:ALL) NOPASSWD: ALL, SETENV: ALL\" \u003e /etc/sudoers.d/10-admins \u0026\u0026     mkdir -p /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://voobofdoom.keybase.pub/dots/screenrc",
            "/etc/screenrc"
          ]
        },
        {
          "CmdLine": [
            "chmod 0644 /etc/screenrc \u0026\u0026     sed -i 's/rights=\"none\"/rights=\"read|write\"/g' /etc/ImageMagick/policy.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "app"
        },
        {
          "Name": "workdir",
          "Path": "/opt/app"
        },
        {
          "CmdLine": [
            "/bin/bash -l -c \"gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \u0026\u0026 curl -sSL https://get.rvm.io | bash -s -- --version latest \u0026\u0026 source /opt/app/.rvm/scripts/rvm \u0026\u0026 rvm requirements \u0026\u0026 mkdir /opt/app/gem_setup \u0026\u0026echo ': 1418507005:0;encfs /opt/app/run /opt/app/mnt' \u003e ~/.zsh_history \u0026\u0026echo ': 1418508006:0;cd ~/mnt/insurance_agent' \u003e\u003e ~/.zsh_history \u0026\u0026echo ': 1418509007:0;bundle exec ruby ./lib/insurance_agent.rb' \u003e\u003e ~/.zsh_history \u0026\u0026 mkdir -p /opt/app/.terminfo/e \u0026\u0026 mkdir -p /opt/app/mnt\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gemfile",
            "/opt/app/gem_setup/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -l -c \"source /opt/app/.rvm/scripts/rvm \u0026\u0026 source /etc/profile \u0026\u0026 echo 'gem: --no-ri --no-rdoc' \u003e\u003e /opt/app/.gemrc \u0026\u0026 rvm install ruby-2.4.2 \u0026\u0026rvm use ruby-2.4.2@global --default \u0026\u0026 gem install bundler \u0026\u0026 gem update --system \u0026\u0026cd /opt/app/gem_setup \u0026\u0026 bundle \u0026\u0026cd .. \u0026\u0026 rm -rf /opt/app/gem_setup\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" \u0026\u0026     git clone https://github.com/nojhan/liquidprompt.git ~/.liquidprompt \u0026\u0026     echo 'export LC_ALL=en_US.UTF-8' \u003e\u003e ~/.zshrc \u0026\u0026     echo '[ ! $TERM = \"dumb\" ] \u0026\u0026 [[ $- = *i* ]] \u0026\u0026 source ~/.liquidprompt/liquidprompt' \u003e\u003e ~/.zshrc \u0026\u0026     echo '[[ -z $STY ]] \u0026\u0026 export LP_PS1_POSTFIX=\"¬» \" || export LP_PS1_POSTFIX=\"§» \"' \u003e\u003e ~/.zshrc \u0026\u0026     mkdir -p /opt/app/mnt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}