{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "erdc/debian_base:latest",
      "SourceCode": "FROM erdc/debian_base:latest",
      "Platform": "",
      "From": {
        "Image": "erdc/debian_base:latest"
      },
      "Commands": [
        {
          "Maintainer": "Proteus Project \u003cproteus@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \u0026\u0026     echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \u0026\u0026     mv tini /usr/local/bin/tini \u0026\u0026     chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/.jupyter \u0026\u0026     mkdir /home/$NB_USER/.local \u0026\u0026     echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" \u003e /home/$NB_USER/.curlrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R $NB_USER:users /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install six configparser ipyparallel ipython terminado jupyter jupyterlab ipywidgets ipyleaflet pythreejs rise cesiumpy bqplot hide_code ipympl sympy transforms3d widgetsnbextension ipymesh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter serverextension enable --py jupyterlab --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix widgetsnbextension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix bqplot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix pythreejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix ipympl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix ipymesh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix ipyleaflet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension install --py --sys-prefix hide_code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix hide_code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension install --py --sys-prefix rise"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --py --sys-prefix rise"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension install --sys-prefix --py ipyparallel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter nbextension enable --sys-prefix --py ipyparallel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter serverextension enable --sys-prefix --py ipyparallel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "REPO=http://cdn-fastly.deb.debian.org     \u0026\u0026 echo \"deb $REPO/debian jessie main\\ndeb $REPO/debian-security jessie/updates main\" \u003e /etc/apt/sources.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get -yq dist-upgrade     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_9.x | bash -     \u0026\u0026 apt-get install -yq --no-install-recommends --fix-missing nodejs     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter labextension install @jupyter-widgets/jupyterlab-manager"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER"
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start.sh",
            "/usr/local/bin/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start-notebook.sh",
            "/usr/local/bin/start-notebook.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start-singleuser.sh",
            "/usr/local/bin/start-singleuser.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/jupyter_notebook_config.py",
            "/home/$NB_USER/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "CmdLine": [
            "chmod a+rx /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R $NB_USER:users /home/$NB_USER/.jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        }
      ]
    }
  ]
}