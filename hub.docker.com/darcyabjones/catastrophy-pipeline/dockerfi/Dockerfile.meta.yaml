MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Dan Coleman <dan@dancoleman.uk>"'
    Name: label
  - Env:
    - Key: php_conf
      Value: /etc/php7/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php7/php-fpm.d/www.conf
    Name: env
  - Env:
    - Key: php_vars
      Value: /etc/php7/conf.d/docker-vars.ini
    Name: env
  - CmdLine:
    - apk update
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add bash supervisor nginx php7 php7-fpm php7-opcache curl git nodejs libpng-dev
      autoconf automake build-base
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add php7-gd php7-mysqli php7-curl php7-json php7-mbstring php7-phar php7-zlib
      php7-pdo php7-simplexml php7-tokenizer php7-xml php7-xmlwriter php7-session
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf conf/supervisor.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - rm -Rf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - rm -Rf /etc/php7/php.ini
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/php.ini
    - /etc/php7/php.ini
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/nginx/sites-available/ && mkdir -p /etc/nginx/sites-enabled/ &&
      rm -Rf /var/www/* && mkdir /var/www/html/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/sites-available/default.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cgi.fix_pathinfo=0" > ${php_vars} &&    echo "upload_max_filesize = 100M"  >>
      ${php_vars} &&    echo "post_max_size = 100M"  >> ${php_vars} &&    echo "variables_order
      = \"EGPCS\""  >> ${php_vars} &&     echo "memory_limit = 128M"  >> ${php_vars}
      &&     sed -i         -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output
      = yes/g"         -e "s/pm.max_children = 5/pm.max_children = 4/g"         -e
      "s/pm.start_servers = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers
      = 1/pm.min_spare_servers = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers
      = 4/g"         -e "s/;pm.max_requests = 500/pm.max_requests = 200/g"         -e
      "s/user = www-data/user = nginx/g"         -e "s/group = www-data/group = nginx/g"         -e
      "s/;listen.mode = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = www-data/listen.owner
      = nginx/g"         -e "s/;listen.group = www-data/listen.group = nginx/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${fpm_conf}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
