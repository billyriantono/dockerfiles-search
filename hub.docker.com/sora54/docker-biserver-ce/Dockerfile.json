{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "zhicwu/java:8",
      "SourceCode": "FROM zhicwu/java:8",
      "Platform": "",
      "From": {
        "Image": "zhicwu/java:8"
      },
      "Commands": [
        {
          "Maintainer": "Zhichun Wu \u003czhicwu@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "BISERVER_VERSION",
              "Value": "7.0"
            },
            {
              "Key": "BISERVER_BUILD",
              "Value": "7.0.0.0-25"
            },
            {
              "Key": "PDI_PATCH",
              "Value": "7.0.0.0.3"
            },
            {
              "Key": "BISERVER_HOME",
              "Value": "/biserver-ce"
            },
            {
              "Key": "BISERVER_USER",
              "Value": "pentaho"
            },
            {
              "Key": "KETTLE_HOME",
              "Value": "/biserver-ce/pentaho-solutions/system/kettle"
            },
            {
              "Key": "JNA_VERSION",
              "Value": "4.2.2"
            },
            {
              "Key": "OSHI_VERSION",
              "Value": "3.2"
            },
            {
              "Key": "POSTGRESQL_DRIVER_VERSION",
              "Value": "9.4.1212"
            },
            {
              "Key": "MYSQL_DRIVER_VERSION",
              "Value": "5.1.41"
            },
            {
              "Key": "JTDS_VERSION",
              "Value": "1.3.1"
            },
            {
              "Key": "CASSANDRA_DRIVER_VERSION",
              "Value": "0.6.3"
            },
            {
              "Key": "H2DB_VERSION",
              "Value": "1.4.193"
            },
            {
              "Key": "HSQLDB_VERSION",
              "Value": "2.3.4"
            },
            {
              "Key": "XMLA_PROVIDER_VERSION",
              "Value": "1.0.0.103"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "java_server",
              "Value": "\"Pentaho BA Server $BISERVER_VERSION Community Edition\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"Download and unpack Pentaho server...\" \t\u0026\u0026 wget --progress=dot:giga http://downloads.sourceforge.net/project/pentaho/Business%20Intelligence%20Server/${BISERVER_VERSION}/pentaho-server-ce-${BISERVER_BUILD}.zip \t\u0026\u0026 unzip -q *.zip \t\u0026\u0026 rm -f *.zip \t\u0026\u0026 mv /pentaho-server $BISERVER_HOME \t\u0026\u0026 ln -s $BISERVER_HOME /pentaho-server \t\u0026\u0026 find $BISERVER_HOME -name \"*.bat\" -delete \t\u0026\u0026 find $BISERVER_HOME -name \"*.exe\" -delete \t\u0026\u0026 mkdir -p $BISERVER_HOME/data/.hsqldb \t\u0026\u0026 /bin/cp -rf $BISERVER_HOME/data/hsqldb/* $BISERVER_HOME/data/.hsqldb/. \t\u0026\u0026 echo \"Install APR for Tomcat...\" \t\t\u0026\u0026 tar zxf $BISERVER_HOME/tomcat/bin/tomcat-native.tar.gz \t\t\u0026\u0026 cd tomcat-native*/native \t\t\u0026\u0026 apt-get update \t\t\u0026\u0026 apt-get install -y libjna-java libapr1-dev gcc make \t\t\u0026\u0026 ./configure --with-apr=/usr/bin/apr-config --disable-openssl --with-java-home=$JAVA_HOME --prefix=$BISERVER_HOME/tomcat \t\t\u0026\u0026 make \t\t\u0026\u0026 make install \t\t\u0026\u0026 sed -i -e 's|\\(SSLEngine=\"\\).*\\(\"\\)|\\1off\\2|' $BISERVER_HOME/tomcat/conf/server.xml \t\t\u0026\u0026 cd / \t\t\u0026\u0026 rm -rf tomcat-native* $BISERVER_HOME/tomcat/bin/tomcat-native.tar.gz \t\t\u0026\u0026 apt-get autoremove -y libapr1-dev gcc make \t\t\u0026\u0026 apt-get clean \t\t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 echo \"Update server configuration...\" \t\t\u0026\u0026 cd $BISERVER_HOME \t\t\u0026\u0026 sed -i -e 's/\\(exec \".*\"\\) start/\\1 run/' tomcat/bin/startup.sh \t\t\u0026\u0026 rm -f promptuser.* pentaho-solutions/system/default-content/* \t\t\u0026\u0026 sed -i -e 's|\\(      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel\"\u003e\\)|      \u003cMimeTypeDefinition mimeType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\u003e\\n        \u003cextension\u003exlsx\u003c/extension\u003e\\n      \u003c/MimeTypeDefinition\u003e\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel\"\u003e\\)|      \u003cMimeTypeDefinition mimeType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\"\u003e\\n        \u003cextension\u003exltx\u003c/extension\u003e\\n      \u003c/MimeTypeDefinition\u003e\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel\"\u003e\\)|      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel.sheet.macroEnabled.12\"\u003e\\n        \u003cextension\u003exlsm\u003c/extension\u003e\\n      \u003c/MimeTypeDefinition\u003e\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel\"\u003e\\)|      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel.template.macroEnabled.12\"\u003e\\n        \u003cextension\u003exltm\u003c/extension\u003e\\n      \u003c/MimeTypeDefinition\u003e\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel\"\u003e\\)|      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel.addin.macroEnabled.12\"\u003e\\n        \u003cextension\u003exlam\u003c/extension\u003e\\n      \u003c/MimeTypeDefinition\u003e\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel\"\u003e\\)|      \u003cMimeTypeDefinition mimeType=\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\"\u003e\\n        \u003cextension\u003exlsb\u003c/extension\u003e\\n      \u003c/MimeTypeDefinition\u003e\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(        \u003cextension\u003exls\u003c/extension\u003e\\)|\\1\\n        \u003cextension\u003exlt\u003c/extension\u003e\\n        \u003cextension\u003exla\u003c/extension\u003e|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(        \u003cextension\u003esql\u003c/extension\u003e\\)|\\1\\n        \u003cextension\u003etxt\u003c/extension\u003e\\n        \u003cextension\u003ecsv\u003c/extension\u003e|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 sed -i -e 's|\\(,csv,\\)|\\1sql,|' pentaho-solutions/system/*.xml \t\t\u0026\u0026 sed -i -e 's|\\(,xlsx,\\)|\\1xltx,xlsm,xltm,xlam,xlsb,|' pentaho-solutions/system/*.xml \t\u0026\u0026 echo \"Add Pentaho user...\" \t\t\u0026\u0026 useradd -md $BISERVER_HOME -s /bin/bash $BISERVER_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$BISERVER_HOME"
        },
        {
          "CmdLine": [
            "echo \"Download and install JDBC drivers...\" \t\u0026\u0026 wget --progress=dot:giga https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar \t\t\thttp://central.maven.org/maven2/mysql/mysql-connector-java/${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}.jar \t\t\thttp://central.maven.org/maven2/net/sourceforge/jtds/jtds/${JTDS_VERSION}/jtds-${JTDS_VERSION}.jar \t\t\thttp://central.maven.org/maven2/com/github/zhicwu/cassandra-jdbc-driver/${CASSANDRA_DRIVER_VERSION}/cassandra-jdbc-driver-${CASSANDRA_DRIVER_VERSION}-shaded.jar \t\t\thttp://central.maven.org/maven2/com/h2database/h2/${H2DB_VERSION}/h2-${H2DB_VERSION}.jar \t\t\thttp://central.maven.org/maven2/org/hsqldb/hsqldb/${HSQLDB_VERSION}/hsqldb-${HSQLDB_VERSION}.jar \t\u0026\u0026 wget --progress=dot:giga  -O tomcat/webapps/pentaho/docs/xmla-connector.exe https://sourceforge.net/projects/xmlaconnect/files/XMLA_Provider_v${XMLA_PROVIDER_VERSION}.exe/download \t\u0026\u0026 sed -i -e 's|\\( class=\"bannercontent\"\u003e.*\\)\\(\u003cbr /\u003e\u003c/td\u003e\\)|\\1\u003cbr /\u003eTo access OLAP cube via Excel/SharePoint, please install \u003ca href=\"xmla-connector.exe\"\u003eXMLA Connector\u003c/a\u003e from \u003ca href=\"http://www.arquery.com\"\u003eArquery\u003c/a\u003e.\\2|' tomcat/webapps/pentaho/docs/InformationMap.jsp \t\u0026\u0026 rm -f tomcat/lib/postgre*.jar tomcat/lib/mysql*.jar tomcat/lib/jtds*.jar tomcat/lib/h2*.jar tomcat/lib/hsqldb*.jar \t\u0026\u0026 mv *.jar $BISERVER_HOME/tomcat/lib/."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Download plugins...\" \t\u0026\u0026 wget -P $BISERVER_HOME/tomcat/webapps/pentaho/WEB-INF/lib https://github.com/zhicwu/saiku/releases/download/3.8.8-SNAPSHOT/saiku-olap-util-3.8.8.jar \t\u0026\u0026 wget -O btable.zip https://sourceforge.net/projects/btable/files/Version3.0-3.6/BTable-pentaho7-3.6-STABLE.zip/download \t\u0026\u0026 wget -O saiku-chart-plus.zip http://sourceforge.net/projects/saikuchartplus/files/SaikuChartPlus3/saiku-chart-plus-vSaiku3-plugin-pentaho.zip/download \t\u0026\u0026 wget -O jamon.zip https://sourceforge.net/projects/jamonapi/files/jamonapi/v2_81/jamonall-2.81.zip/download \t\u0026\u0026 wget --progress=dot:giga https://github.com/zhicwu/saiku/releases/download/3.8.8-SNAPSHOT/saiku-plugin-p6-3.8.8.zip \t\t\thttps://github.com/zhicwu/cte/releases/download/7.0-SNAPSHOT/cte-7.0-snapshot.zip \t\t\thttp://ctools.pentaho.com/files/d3ComponentLibrary/14.06.18/d3ComponentLibrary-14.06.18.zip \t\t\thttps://github.com/rpbouman/pash/raw/master/bin/pash.zip \t\u0026\u0026 echo \"Installing plugins...\" \t\t\u0026\u0026 for i in *.zip; do echo \"Unpacking $i...\" \u0026\u0026 unzip -q -d pentaho-solutions/system $i \u0026\u0026 rm -f $i; done \t\t\u0026\u0026 rm -f pentaho-solutions/system/BTable/resources/datasources/*.cda \t\u0026\u0026 echo \"Update configuration...\" \t\t\u0026\u0026 sed -i -e 's|\\(\u003centry key=\"jpeg\" value-ref=\"streamConverter\"/\u003e\\)|\\1\u003centry key=\"saiku\" value-ref=\"streamConverter\"/\u003e|' pentaho-solutions/system/importExport.xml \t\t\u0026\u0026 sed -i -e 's|\\(\u003cvalue\u003e.xcdf\u003c/value\u003e\\)|\\1\u003cvalue\u003e.saiku\u003c/value\u003e|' pentaho-solutions/system/importExport.xml \t\t\u0026\u0026 sed -i -e 's|\\(\u003cvalue\u003excdf\u003c/value\u003e\\)|\\1\u003cvalue\u003esaiku\u003c/value\u003e|' pentaho-solutions/system/importExport.xml \t\t\u0026\u0026 sed -i -e 's|\\(\u003cextension\u003excdf\u003c/extension\u003e\\)|\\1\u003cextension\u003esaiku\u003c/extension\u003e|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \t\t\u0026\u0026 touch pentaho-solutions/system/saiku/ui/js/saiku/plugins/CCC_Chart/cdo.js \t\t\u0026\u0026 wget -P pentaho-solutions/system/saiku/components/saikuWidget https://github.com/OSBI/saiku/raw/release-3.8/saiku-bi-platform-plugin-p5/src/main/plugin/components/saikuWidget/SaikuWidgetComponent.js \t\t\u0026\u0026 sed -i -e \"s|\\(: data.query.queryModel.axes.FILTER\\)\\(.*\\)|\\1 == undefined ? [] \\1\\2|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \t\t\u0026\u0026 sed -i -e \"s|\\(: data.query.queryModel.axes.COLUMNS\\)\\(.*\\)|\\1 == undefined ? [] \\1\\2|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \t\t\u0026\u0026 sed -i -e \"s|\\(: data.query.queryModel.axes.ROWS\\)\\(.*\\)|\\1 == undefined ? [] \\1\\2|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \t\t\u0026\u0026 sed -i -e 's|\\(var query = Saiku.tabs._tabs\\[0\\].content.query;\\)|\\1\\nif (query == undefined ) query = Saiku.tabs._tabs[1].content.query;|' pentaho-solutions/system/saiku/ui/js/saiku/plugins/BIServer/plugin.js \t\t\u0026\u0026 sed -i -e 's|self.template()|\"Error!\"|' pentaho-solutions/system/saiku/ui/saiku.min.js \t\t\u0026\u0026 sed -i -e 's|http://meteorite.bi/|/|' pentaho-solutions/system/saiku/ui/saiku.min.js \t\t\u0026\u0026 sed -i -e \"s|\\(request.setRequestHeader('Authorization', auth);\\)|// \\1|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \t\u0026\u0026 echo \"Enable JAMon API...\" \t\t\u0026\u0026 mv pentaho-solutions/system/jamonall-2.81/jamon-2.81.jar tomcat/lib/. \t\t\u0026\u0026 unzip -q -d tomcat/webapps/jamon pentaho-solutions/system/jamonall-2.81/jamon.war \t\t\u0026\u0026 rm -rf pentaho-solutions/system/__MACOSX tomcat/webapps/jamon/WEB-INF/lib/hsqldb.jar *.zip \t\t\u0026\u0026 rm -rf pentaho-solutions/system/jamonall* \t\t\u0026\u0026 sed -i -e 's|\\(\u003cEngine name=\"Catalina\" defaultHost=\"localhost\"\u003e\\)|\\1\\n      \u003cValve className=\"com.jamonapi.http.JAMonTomcatValve\"/\u003e|' tomcat/conf/server.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Download patches and dependencies...\" \t\u0026\u0026 wget https://maven.java.net/content/repositories/releases/net/java/dev/jna/jna/$JNA_VERSION/jna-$JNA_VERSION.jar \t\t\thttps://maven.java.net/content/repositories/releases/net/java/dev/jna/jna-platform/$JNA_VERSION/jna-platform-$JNA_VERSION.jar \t\t\thttp://central.maven.org/maven2/com/github/dblock/oshi-core/$OSHI_VERSION/oshi-core-$OSHI_VERSION.jar \t\u0026\u0026 mv *.jar tomcat/webapps/pentaho/WEB-INF/lib/. \t\u0026\u0026 wget --progress=dot:giga https://github.com/zhicwu/pdi-cluster/releases/download/${PDI_PATCH}/pentaho-kettle-${PDI_PATCH}.jar \t\t\thttps://github.com/zhicwu/pdi-cluster/releases/download/${PDI_PATCH}/pentaho-platform-${PDI_PATCH}.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "$BISERVER_HOME/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "repository.xml.template",
            "$BISERVER_HOME/pentaho-solutions/system/jackrabbit/repository.xml.template"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "purge-old-files.sh",
            "/etc/cron.hourly/purge-old-files"
          ]
        },
        {
          "CmdLine": [
            "echo \"Post configuration...\" \t\u0026\u0026 chmod 0700 /etc/cron.hourly/* \t\u0026\u0026 chmod +x $BISERVER_HOME/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init",
            "--",
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}