MetaArgs:
- DefaultValue: alpine
  Key: BASE_IMAGE
  ProvidedValue: null
  Value: alpine
- DefaultValue: "3.10"
  Key: ALPINE_VERSION
  ProvidedValue: null
  Value: "3.10"
Stages:
- BaseName: ${BASE_IMAGE}:${ALPINE_VERSION}
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: YOUTUBE_DL_OVERWRITE
    Name: arg
    Value: ""
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"quentin.mcgaw@gmail.com"'
    - Key: org.opencontainers.image.created
      Value: $BUILD_DATE
    - Key: org.opencontainers.image.revision
      Value: $VCS_REF
    - Key: org.opencontainers.image.version
      Value: '"${YOUTUBE_DL_OVERWRITE}"'
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/qdm12/youtube-dl-docker"'
    - Key: org.opencontainers.image.documentation
      Value: '"https://github.com/qdm12/youtube-dl-docker/blob/master/README.md"'
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/qdm12/youtube-dl-docker"'
    - Key: org.opencontainers.image.title
      Value: '"youtube-dl-docker"'
    - Key: org.opencontainers.image.description
      Value: '"Download with youtube-dl using command line arguments or configuration
        files"'
    - Key: image-size
      Value: '"97.7MB"'
    - Key: ram-usage
      Value: '"Variable"'
    - Key: cpu-usage
      Value: '"Variable"'
    Name: label
  - Health:
      Interval: 600000000000
      Retries: 1
      Test:
      - CMD-SHELL
      - '[ "$(wget -qO- https://duckduckgo.com 2>/dev/null)" != "" ] || exit 1'
      Timeout: 10000000000
    Name: healthcheck
  - Env:
    - Key: LOG
      Value: "yes"
    - Key: AUTOUPDATE
      Value: "no"
    - Key: GOTIFYURL
      Value: ""
    - Key: GOTIFYTOKEN
      Value: ""
    Name: env
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -h
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - 'apk add -q --progress --update --no-cache ca-certificates wget ffmpeg python
      gnupg curl &&     LATEST=$(wget -qO- https://api.github.com/repos/rg3/youtube-dl/releases/latest
      | grep ''"tag_name": '' | sed -E ''s/.*"([^"]+)".*/\1/'') &&     LATEST=${YOUTUBE_DL_OVERWRITE:-$LATEST}
      &&     wget -q https://github.com/rg3/youtube-dl/releases/download/$LATEST/youtube-dl
      -O /usr/local/bin/youtube-dl &&     wget -q https://github.com/rg3/youtube-dl/releases/download/$LATEST/youtube-dl.sig
      -O /tmp/youtube-dl.sig &&     gpg --keyserver keyserver.ubuntu.com --recv-keys
      ''ED7F5BF46B3BBED81C87368E2C393E0F18A9236D'' &&     gpg --verify /tmp/youtube-dl.sig
      /usr/local/bin/youtube-dl &&     SHA256=$(wget -qO- https://github.com/rg3/youtube-dl/releases/download/$LATEST/SHA2-256SUMS
      | head -n 1 | cut -d " " -f 1) &&     [ $(sha256sum /usr/local/bin/youtube-dl
      | cut -d " " -f 1) = "$SHA256" ] &&     apk del gnupg wget &&     rm -rf /var/cache/apk/*
      /tmp/youtube-dl.sig &&     chown 1000 /entrypoint.sh /usr/local/bin/youtube-dl
      &&     chmod 500 /entrypoint.sh &&     chmod 700 /usr/local/bin/youtube-dl'
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  From:
    Image: ${BASE_IMAGE}:${ALPINE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM ${BASE_IMAGE}:${ALPINE_VERSION}
