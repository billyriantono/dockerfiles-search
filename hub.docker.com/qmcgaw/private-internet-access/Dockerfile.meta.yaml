MetaArgs:
- DefaultValue: "3.10"
  Key: ALPINE_VERSION
  ProvidedValue: null
  Value: "3.10"
Stages:
- BaseName: alpine:${ALPINE_VERSION}
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"quentin.mcgaw@gmail.com"'
    - Key: org.opencontainers.image.created
      Value: $BUILD_DATE
    - Key: org.opencontainers.image.version
      Value: '""'
    - Key: org.opencontainers.image.revision
      Value: $VCS_REF
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/qdm12/private-internet-access-docker"'
    - Key: org.opencontainers.image.documentation
      Value: '"https://github.com/qdm12/private-internet-access-docker"'
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/qdm12/private-internet-access-docker"'
    - Key: org.opencontainers.image.title
      Value: '"PIA client"'
    - Key: org.opencontainers.image.description
      Value: '"VPN client to tunnel to private internet access servers using OpenVPN,
        IPtables, DNS over TLS and Alpine Linux"'
    - Key: image-size
      Value: '"23.3MB"'
    - Key: ram-usage
      Value: '"13MB to 80MB"'
    - Key: cpu-usage
      Value: '"Low to Medium"'
    Name: label
  - Env:
    - Key: USER
      Value: ""
    - Key: PASSWORD
      Value: ""
    - Key: ENCRYPTION
      Value: strong
    - Key: PROTOCOL
      Value: udp
    - Key: REGION
      Value: '"CA Montreal"'
    - Key: NONROOT
      Value: "no"
    - Key: DOT
      Value: "on"
    - Key: BLOCK_MALICIOUS
      Value: "off"
    - Key: BLOCK_NSA
      Value: "off"
    - Key: UNBLOCK
      Value: ""
    - Key: EXTRA_SUBNETS
      Value: ""
    - Key: PORT_FORWARDING
      Value: "off"
    - Key: PORT_FORWARDING_STATUS_FILE
      Value: '"/forwarded_port"'
    - Key: TINYPROXY
      Value: "off"
    - Key: TINYPROXY_LOG
      Value: Critical
    - Key: TINYPROXY_PORT
      Value: "8888"
    - Key: TINYPROXY_USER
      Value: ""
    - Key: TINYPROXY_PASSWORD
      Value: ""
    - Key: SHADOWSOCKS
      Value: "off"
    - Key: SHADOWSOCKS_LOG
      Value: "on"
    - Key: SHADOWSOCKS_PORT
      Value: "8388"
    - Key: SHADOWSOCKS_PASSWORD
      Value: ""
    - Key: TZ
      Value: ""
    Name: env
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: true
  - Name: expose
    Ports:
    - 8388/tcp
    - 8388/udp
    - 8888/tcp
  - Health:
      Interval: 180000000000
      Retries: 1
      StartPeriod: 20000000000
      Test:
      - CMD-SHELL
      - /healthcheck.sh
      Timeout: 3000000000
    Name: healthcheck
  - CmdLine:
    - 'apk add -q --progress --no-cache --update openvpn wget ca-certificates iptables
      unbound unzip tinyproxy jq tzdata &&     echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing"
      >> /etc/apk/repositories &&     apk add -q --progress --no-cache --update shadowsocks-libev
      &&     wget -q https://www.privateinternetaccess.com/openvpn/openvpn.zip     https://www.privateinternetaccess.com/openvpn/openvpn-strong.zip     https://www.privateinternetaccess.com/openvpn/openvpn-tcp.zip     https://www.privateinternetaccess.com/openvpn/openvpn-strong-tcp.zip
      &&     mkdir -p /openvpn/target &&     unzip -q openvpn.zip -d /openvpn/udp-normal
      &&     unzip -q openvpn-strong.zip -d /openvpn/udp-strong &&     unzip -q openvpn-tcp.zip
      -d /openvpn/tcp-normal &&     unzip -q openvpn-strong-tcp.zip -d /openvpn/tcp-strong
      &&     apk del -q --progress --purge unzip &&     rm -rf /*.zip /var/cache/apk/*
      /etc/unbound/* /usr/sbin/unbound-anchor /usr/sbin/unbound-checkconf /usr/sbin/unbound-control
      /usr/sbin/unbound-control-setup /usr/sbin/unbound-host /etc/tinyproxy/tinyproxy.conf
      &&     adduser nonrootuser -D -H --uid 1000 &&     wget -q https://raw.githubusercontent.com/qdm12/files/master/named.root.updated
      -O /etc/unbound/root.hints &&     wget -q https://raw.githubusercontent.com/qdm12/files/master/root.key.updated
      -O /etc/unbound/root.key &&     cd /tmp &&     wget -q https://raw.githubusercontent.com/qdm12/files/master/malicious-hostnames.updated
      -O malicious-hostnames &&     wget -q https://raw.githubusercontent.com/qdm12/files/master/surveillance-hostnames.updated
      -O nsa-hostnames &&     wget -q https://raw.githubusercontent.com/qdm12/files/master/malicious-ips.updated
      -O malicious-ips &&     while read hostname; do echo "local-zone: \""$hostname"\"
      static" >> blocks-malicious.conf; done < malicious-hostnames &&     while read
      ip; do echo "private-address: $ip" >> blocks-malicious.conf; done < malicious-ips
      &&     tar -cjf /etc/unbound/blocks-malicious.bz2 blocks-malicious.conf &&     while
      read hostname; do echo "local-zone: \""$hostname"\" static" >> blocks-nsa.conf;
      done < nsa-hostnames &&     tar -cjf /etc/unbound/blocks-nsa.bz2 blocks-nsa.conf
      &&     rm -f /tmp/*'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - unbound.conf
    - /etc/unbound/unbound.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tinyproxy.conf
    - /etc/tinyproxy/tinyproxy.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shadowsocks.json
    - /etc/shadowsocks.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - healthcheck.sh
    - portforward.sh
    - /
  - CmdLine:
    - chown nonrootuser -R /etc/unbound /etc/tinyproxy &&     chmod 700 /etc/unbound
      /etc/tinyproxy &&     chmod 600 /etc/unbound/unbound.conf /etc/tinyproxy/tinyproxy.conf
      /etc/shadowsocks.json &&     chmod 500 /entrypoint.sh /healthcheck.sh /portforward.sh
      &&     chmod 400 /etc/unbound/root.hints /etc/unbound/root.key /etc/unbound/*.bz2
    Name: run
    PrependShell: true
  From:
    Image: alpine:${ALPINE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:${ALPINE_VERSION}
