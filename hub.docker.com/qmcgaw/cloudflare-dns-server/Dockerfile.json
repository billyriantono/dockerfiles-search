{
  "MetaArgs": [
    {
      "Key": "BASE_IMAGE",
      "DefaultValue": "alpine",
      "ProvidedValue": null,
      "Value": "alpine"
    },
    {
      "Key": "ALPINE_VERSION",
      "DefaultValue": "3.10",
      "ProvidedValue": null,
      "Value": "3.10"
    }
  ],
  "Stages": [
    {
      "Name": "build",
      "BaseName": "${BASE_IMAGE}:${ALPINE_VERSION}",
      "SourceCode": "FROM ${BASE_IMAGE}:${ALPINE_VERSION} AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "${BASE_IMAGE}:${ALPINE_VERSION}"
      },
      "Commands": [
        {
          "Key": "UNBOUND_VERSION",
          "Name": "arg",
          "Value": "latest"
        },
        {
          "Key": "CFLAGS",
          "Name": "arg",
          "Value": "-Os"
        },
        {
          "Name": "workdir",
          "Path": "/tmp/unbound"
        },
        {
          "CmdLine": [
            "apk add --update --progress -q ca-certificates build-base libressl-dev expat-dev libevent-dev libevent-static"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://nlnetlabs.nl/downloads/unbound/unbound-${UNBOUND_VERSION}.tar.gz -O unbound.tar.gz \u0026\u0026     tar -xzf unbound.tar.gz --strip-components=1 \u0026\u0026     rm unbound.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CFLAGS=${CFLAGS} ./configure --disable-flto --with-libevent --with-conf-file=unbound.conf --enable-fully-static"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/LDFLAGS=.*$/LDFLAGS=-all-static/' Makefile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make \u0026\u0026 strip unbound"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "updated",
      "BaseName": "${BASE_IMAGE}:${ALPINE_VERSION}",
      "SourceCode": "FROM ${BASE_IMAGE}:${ALPINE_VERSION} AS updated",
      "Platform": "",
      "As": "updated",
      "From": {
        "Image": "${BASE_IMAGE}:${ALPINE_VERSION}"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/tmp/updated"
        },
        {
          "CmdLine": [
            "wget -q https://raw.githubusercontent.com/qdm12/updated/master/files/named.root.updated -O root.hints \u0026\u0026     wget -q https://raw.githubusercontent.com/qdm12/updated/master/files/root.key.updated -O root.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/updated/work"
        },
        {
          "CmdLine": [
            "wget -q https://raw.githubusercontent.com/qdm12/updated/master/files/malicious-hostnames.updated -O malicious-hostnames \u0026\u0026     wget -q https://raw.githubusercontent.com/qdm12/updated/master/files/nsa-hostnames.updated -O nsa-hostnames \u0026\u0026     wget -q https://raw.githubusercontent.com/qdm12/updated/master/files/malicious-ips.updated -O malicious-ips \u0026\u0026     while read hostname; do echo \"local-zone: \\\"\"$hostname\"\\\" static\" \u003e\u003e blocks-malicious.conf; done \u003c malicious-hostnames \u0026\u0026     while read ip; do echo \"private-address: $ip\" \u003e\u003e blocks-malicious.conf; done \u003c malicious-ips \u0026\u0026     tar -cjf /tmp/updated/blocks-malicious.bz2 blocks-malicious.conf \u0026\u0026     while read hostname; do echo \"local-zone: \\\"\"$hostname\"\\\" static\" \u003e\u003e blocks-nsa.conf; done \u003c nsa-hostnames \u0026\u0026     tar -cjf /tmp/updated/blocks-nsa.bz2 blocks-nsa.conf \u0026\u0026     rm -rf /tmp/updated/work/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "${BASE_IMAGE}:${ALPINE_VERSION}",
      "SourceCode": "FROM ${BASE_IMAGE}:${ALPINE_VERSION}",
      "Platform": "",
      "From": {
        "Image": "${BASE_IMAGE}:${ALPINE_VERSION}"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.opencontainers.image.authors",
              "Value": "\"quentin.mcgaw@gmail.com\""
            },
            {
              "Key": "org.opencontainers.image.created",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.opencontainers.image.version",
              "Value": "\"\""
            },
            {
              "Key": "org.opencontainers.image.revision",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.opencontainers.image.url",
              "Value": "\"https://github.com/qdm12/cloudflare-dns-server\""
            },
            {
              "Key": "org.opencontainers.image.documentation",
              "Value": "\"https://github.com/qdm12/cloudflare-dns-server/blob/master/README.md\""
            },
            {
              "Key": "org.opencontainers.image.source",
              "Value": "\"https://github.com/qdm12/cloudflare-dns-server\""
            },
            {
              "Key": "org.opencontainers.image.title",
              "Value": "\"cloudflare-dns-server\""
            },
            {
              "Key": "org.opencontainers.image.description",
              "Value": "\"Runs a local DNS server connected to Cloudflare DNS server 1.1.1.1 over TLS (and more)\""
            },
            {
              "Key": "image-size",
              "Value": "\"25.7MB\""
            },
            {
              "Key": "ram-usage",
              "Value": "\"13.2MB to 70MB\""
            },
            {
              "Key": "cpu-usage",
              "Value": "\"Low\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "53/udp"
          ]
        },
        {
          "Env": [
            {
              "Key": "VERBOSITY",
              "Value": "1"
            },
            {
              "Key": "VERBOSITY_DETAILS",
              "Value": "0"
            },
            {
              "Key": "BLOCK_MALICIOUS",
              "Value": "on"
            },
            {
              "Key": "BLOCK_NSA",
              "Value": "off"
            },
            {
              "Key": "UNBLOCK",
              "Value": ""
            },
            {
              "Key": "LISTENINGPORT",
              "Value": "53"
            },
            {
              "Key": "PROVIDERS",
              "Value": "cloudflare"
            },
            {
              "Key": "CACHING",
              "Value": "on"
            },
            {
              "Key": "PRIVATE_ADDRESS",
              "Value": "127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:0:0/96"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/unbound/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Retries": 1,
            "StartPeriod": 5000000000,
            "Test": [
              "CMD-SHELL",
              "LISTENINGPORT=${LISTENINGPORT:-53}; dig @127.0.0.1 +short +time=1 duckduckgo.com -p $LISTENINGPORT \u0026\u003e /dev/null; [ $? = 0 ] || exit 1"
            ],
            "Timeout": 15000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "workdir",
          "Path": "/unbound"
        },
        {
          "CmdLine": [
            "apk --update --progress -q add ca-certificates bind-tools \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     adduser nonrootuser -D -H --uid 1000 \u0026\u0026     mv /etc/ssl/certs/ca-certificates.crt . \u0026\u0026     chown nonrootuser . ca-certificates.crt \u0026\u0026     chmod 700 ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "nonrootuser",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/unbound/unbound",
            "."
          ]
        },
        {
          "Chown": "nonrootuser",
          "From": "updated",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/updated/root.hints",
            "."
          ]
        },
        {
          "Chown": "nonrootuser",
          "From": "updated",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/updated/root.key",
            "."
          ]
        },
        {
          "Chown": "nonrootuser",
          "From": "updated",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/updated/blocks-malicious.bz2",
            "."
          ]
        },
        {
          "Chown": "nonrootuser",
          "From": "updated",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/updated/blocks-nsa.bz2",
            "."
          ]
        },
        {
          "Chown": "nonrootuser",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "unbound.conf",
            "entrypoint.sh",
            "./"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 unbound.conf \u0026\u0026     chmod 500 entrypoint.sh \u0026\u0026     chmod 400 root.hints root.key ca-certificates.crt *.bz2 \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 500 unbound \u0026\u0026     apk add libcap \u0026\u0026     setcap 'cap_net_bind_service,cap_sys_chroot=+ep' unbound \u0026\u0026     apk del libcap \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nonrootuser"
        }
      ]
    }
  ]
}