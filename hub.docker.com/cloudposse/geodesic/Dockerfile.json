{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update \t\t\u0026\u0026 apk add unzip curl tar python make bash vim jq openssl openssh-client iputils drill git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.7.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL -O https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip     \u0026\u0026 unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip     \u0026\u0026 rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip     \u0026\u0026 mv terraform /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KUBERNETES_VERSION",
              "Value": "1.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL -O https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl     \u0026\u0026 mv kubectl /usr/local/bin/kubectl     \u0026\u0026 chmod +x /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KOPS_VERSION",
              "Value": "1.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL -O https://github.com/kubernetes/kops/releases/download/v${KOPS_VERSION}/kops-linux-amd64     \u0026\u0026 mv kops-linux-amd64 /usr/local/bin/kops     \u0026\u0026 chmod +x /usr/local/bin/kops"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.1.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL -O http://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz     \u0026\u0026 tar -zxf helm-v${HELM_VERSION}-linux-amd64.tar.gz     \u0026\u0026 mv linux-amd64/helm /usr/local/bin/helm     \u0026\u0026 rm -rf linux-amd64     \u0026\u0026 chmod +x /usr/local/bin/helm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL -O https://s3.amazonaws.com/aws-cli/awscli-bundle.zip     \u0026\u0026 unzip awscli-bundle.zip     \u0026\u0026 ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws     \u0026\u0026 rm awscli-bundle.zip     \u0026\u0026 rm -rf awscli-bundle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BOOTSTRAP",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/geodesic"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KOPS_STATE_PATH",
              "Value": "/geodesic/state/kops"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECONFIG",
              "Value": "/geodesic/state/kubernetes/kubeconfig"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_DATA_PATH",
              "Value": "/geodesic/state/aws/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_SHARED_CREDENTIALS_FILE",
              "Value": "/geodesic/state/aws/credentials"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_CONFIG_FILE",
              "Value": "/geodesic/state/aws/config"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TF_STATE_FILE",
              "Value": "/geodesic/state/terraform/terraform.tfstate"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_HOME",
              "Value": "/geodesic/state/helm/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HISTFILE",
              "Value": "/geodesic/state/history"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_STATE_PATH",
              "Value": "/geodesic/state"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_CONFIG",
              "Value": "/geodesic/state/env"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEODESIC_PATH",
              "Value": "/geodesic"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VALUES_PATH",
              "Value": "/geodesic/state/helm/values"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDG_CONFIG_HOME",
              "Value": "/geodesic/state"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/geodesic/state"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "dist",
            "/geodesic"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "aws-assumed-role/profile",
            "/usr/local/bin/profile"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cloud",
            "/usr/local/bin/cloud"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "confirm",
            "/usr/local/bin/confirm"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "watch",
            "/usr/local/bin/watch"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/geodesic"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "--rcfile",
            "/geodesic/profile"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}