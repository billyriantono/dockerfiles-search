MetaArgs: null
Stages:
- BaseName: golang:1.12.9
  Commands:
  - Env:
    - Key: GOARM
      Value: "7"
    Name: env
  - Env:
    - Key: KUBE_DYNAMIC_CROSSPLATFORMS
      Value: armhf   arm64   s390x   ppc64el
    Name: env
  - Env:
    - Key: KUBE_CROSSPLATFORMS
      Value: linux/386   linux/arm linux/arm64   linux/ppc64le   linux/s390x   linux/mips64le   darwin/amd64
        darwin/386   windows/amd64 windows/386
    Name: env
  - CmdLine:
    - for platform in ${KUBE_CROSSPLATFORMS}; do GOOS=${platform%/*} GOARCH=${platform##*/}
      go install std; done     && go clean -cache
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y rsync jq apt-utils file patch unzip   &&
      apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu xenial main universe" > /etc/apt/sources.list.d/cgocrosscompiling.list   &&
      apt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5
      3B4FE6ACC0B21F32   && apt-get update   && apt-get install -y build-essential   &&
      for platform in ${KUBE_DYNAMIC_CROSSPLATFORMS}; do apt-get install -y crossbuild-essential-${platform};
      done   && apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture mips64el   && apt-get update   && apt-get install -y
      --no-install-recommends         gcc-mips64el-linux-gnuabi64   && apt-get clean
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - PROTOBUF_VERSION=3.0.2; ZIPNAME="protoc-${PROTOBUF_VERSION}-linux-x86_64.zip";   mkdir
      /tmp/protoc && cd /tmp/protoc   && wget "https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/${ZIPNAME}"   &&
      unzip "${ZIPNAME}"   && chmod -R +rX /tmp/protoc   && cp -pr bin /usr/local   &&
      cp -pr include /usr/local   && rm -rf /tmp/protoc   && protoc --version
    Name: run
    PrependShell: true
  - Env:
    - Key: TMPDIR
      Value: /tmp.k8s
    Name: env
  - CmdLine:
    - mkdir $TMPDIR   && chmod a+rwx $TMPDIR   && chmod o+t $TMPDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/cover            golang.org/x/tools/cmd/goimports     &&
      go clean -cache
    Name: run
    PrependShell: true
  - CmdLine:
    - export ETCD_VERSION=v3.2.24;   mkdir -p /usr/local/src/etcd   && cd /usr/local/src/etcd   &&
      curl -fsSL https://github.com/coreos/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz
      | tar -xz   && ln -s ../src/etcd/etcd-${ETCD_VERSION}-linux-amd64/etcd /usr/local/bin/
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12.9
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.12.9
