{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pkienzle/opencl_docker",
      "SourceCode": "FROM pkienzle/opencl_docker",
      "Platform": "",
      "From": {
        "Image": "pkienzle/opencl_docker"
      },
      "Commands": [
        {
          "Maintainer": "Julian Villella \u003cjulian@objectspace.io\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "GOOS",
          "Name": "arg",
          "Value": "linux"
        },
        {
          "Key": "GOARCH",
          "Name": "arg",
          "Value": "amd64"
        },
        {
          "Key": "CC_FOR_TARGET",
          "Name": "arg",
          "Value": "gcc"
        },
        {
          "Key": "USER",
          "Name": "arg",
          "Value": "appuser"
        },
        {
          "CmdLine": [
            "groupadd -g 999 $USER \u0026\u0026 useradd -mr -u 999 -g $USER $USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GOLANG_VERSION",
          "Name": "arg",
          "Value": "1.10.4"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install --no-install-recommends -y -q     curl     pkg-config     build-essential     ca-certificates     wget     zip     bison     libtool     autoconf     automake     uuid-dev     checkinstall     git     mingw-w64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/x86_64-linux-gnu/libOpenCL.so.1 /usr/lib/libOpenCL.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./build/OpenCL.dll",
            "/usr/x86_64-w64-mingw32/lib/OpenCL.dll"
          ]
        },
        {
          "CmdLine": [
            "curl -s https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz | tar -v -C /usr/local -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/home/$USER/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $GOPATH/bin \u0026\u0026     mkdir -p $GOPATH/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GOPATH/bin:$GOROOT/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://glide.sh/get | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/github.com/consensus-ai/sentient-miner"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "chown -R $USER:$USER $GOPATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod g+s $GOPATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USER"
        },
        {
          "CmdLine": [
            "make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "$GOPATH/bin/sentient-miner"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}