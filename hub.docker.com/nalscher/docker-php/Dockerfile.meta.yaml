MetaArgs: null
Stages:
- BaseName: php:7.1-fpm-alpine
  Commands:
  - Env:
    - Key: PUID
      Value: "1000"
    Name: env
  - Env:
    - Key: GUID
      Value: "1000"
    Name: env
  - Env:
    - Key: APP_DATETIME
      Value: Europe/Paris
    Name: env
  - Env:
    - Key: APP_POST_SIZE
      Value: 64M
    Name: env
  - Env:
    - Key: APP_MEMORY_LIMIT
      Value: 256M
    Name: env
  - Env:
    - Key: APP_MAX_EXECUTION_TIME
      Value: "120"
    Name: env
  - Env:
    - Key: APP_ENV
      Value: development
    Name: env
  - CmdLine:
    - apk add --update --no-cache bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache libintl icu icu-dev libxml2-dev     && docker-php-ext-install
      intl zip soap exif
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache postgresql-dev     && docker-php-ext-install mysqli
      pdo pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache         freetype-dev         libjpeg-turbo-dev         libmcrypt-dev         libpng-dev     &&
      docker-php-ext-install -j"$(getconf _NPROCESSORS_ONLN)" iconv mcrypt     &&
      docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     &&
      docker-php-ext-install -j"$(getconf _NPROCESSORS_ONLN)" gd
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache gmp gmp-dev     && docker-php-ext-install gmp
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPREDIS_VERSION
      Value: 4.1.1
    Name: env
  - CmdLine:
    - docker-php-source extract     && curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz     &&
      tar xfz /tmp/redis.tar.gz     && rm -r /tmp/redis.tar.gz     && mv phpredis-$PHPREDIS_VERSION
      /usr/src/php/ext/redis     && docker-php-ext-install redis     && docker-php-source
      delete
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract     && apk add --no-cache --virtual .phpize-deps-configure
      $PHPIZE_DEPS     && pecl install apcu     && docker-php-ext-enable apcu     &&
      apk del .phpize-deps-configure     && docker-php-source delete
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache git
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache autoconf g++ imagemagick imagemagick-dev libtool
      make pcre-dev     && pecl install imagick     && docker-php-ext-enable imagick     &&
      apk del autoconf g++ libtool make pcre-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPMONGODB_VERSION
      Value: 1.5.2
    Name: env
  - CmdLine:
    - apk add --update --no-cache autoconf g++ make pcre-dev     && pecl install mongodb-$PHPMONGODB_VERSION     &&
      docker-php-ext-enable mongodb     && apk del autoconf g++ make pcre-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "[Date]\ndate.timezone = \"${APP_DATETIME}\"" > /usr/local/etc/php/conf.d/zz-timezone.ini     &&
      echo "upload_max_filesize = ${APP_POST_SIZE}" > /usr/local/etc/php/conf.d/zz-limit.ini     &&
      echo "post_max_size = ${APP_POST_SIZE}" >> /usr/local/etc/php/conf.d/zz-limit.ini     &&
      echo "memory_limit = ${APP_MEMORY_LIMIT}" >> /usr/local/etc/php/conf.d/zz-limit.ini     &&
      echo "max_execution_time = ${APP_MAX_EXECUTION_TIME}" >> /usr/local/etc/php/conf.d/zz-limit.ini     &&
      echo "display_errors = On" > /usr/local/etc/php/conf.d/zz-errors.ini     &&
      echo "log_errors = on" >> /usr/local/etc/php/conf.d/zz-errors.ini     && echo
      "error_reporting = E_ALL | E_STRICT" >> /usr/local/etc/php/conf.d/zz-errors.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin     && php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"     &&
      php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061')
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;"     && php composer-setup.php     && php -r "unlink('composer-setup.php');"     &&
      ln -s composer.phar composer
    Name: run
    PrependShell: true
  - CmdLine:
    - echo http://dl-2.alpinelinux.org/alpine/edge/community/ >> /etc/apk/repositories     &&
      apk add --update --no-cache shadow
    Name: run
    PrependShell: true
  - CmdLine:
    - "usermod -u ${PUID} www-data && \tgroupmod -g ${GUID} www-data"
    Name: run
    PrependShell: true
  From:
    Image: php:7.1-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm-alpine
