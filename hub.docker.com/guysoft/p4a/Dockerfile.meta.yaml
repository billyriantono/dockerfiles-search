MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Env:
    - Key: SDK_TOOLS
      Value: '"sdk-tools-linux-4333796.zip"'
    Name: env
  - Env:
    - Key: NDK_DL
      Value: '"https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip"'
    Name: env
  - Env:
    - Key: NDKVER
      Value: r17c
    Name: env
  - Env:
    - Key: NDKDIR
      Value: /ndk/
    Name: env
  - Env:
    - Key: NDKAPI
      Value: "21"
    Name: env
  - Env:
    - Key: ANDROIDAPI
      Value: "28"
    Name: env
  - Env:
    - Key: PIP
      Value: pip2
    Name: env
  - CmdLine:
    - apt update --fix-missing && apt upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update && apt install -y zip python3 python-pip python python3-virtualenv
      python-virtualenv curl wget lbzip2 bsdtar && dpkg --add-architecture i386 &&
      apt update && apt install -y build-essential libstdc++6:i386 zlib1g-dev zlib1g:i386
      openjdk-8-jdk libncurses5:i386 && apt install -y libtool automake autoconf unzip
      pkg-config git ant gradle rsync
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /sdk-install/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /sdk-install && wget https://dl.google.com/android/repository/${SDK_TOOLS}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /sdk-install && unzip ./sdk-tools-*.zip && chmod +x ./tools//bin/sdkmanager
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | /sdk-install/tools/bin/sdkmanager --licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - /sdk-install/tools/bin/sdkmanager --update
    Name: run
    PrependShell: true
  - CmdLine:
    - /sdk-install/tools/bin/sdkmanager "platform-tools" "platforms;android-28" "build-tools;28.0.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/ndk/ && cd /tmp/ndk/ && wget ${NDK_DL} && unzip -q android-ndk*.zip
      && mv android-*/ /ndk/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y libffi-dev libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - $PIP install -U buildozer Cython
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - '$PIP install -U ''https://github.com/kivy/python-for-android/archive/master.zip''  #
      p4a build c270252e-d9b4-48e0-99c8-d5e217443f64'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/test-app/ && cd /tmp/test-app && git clone https://github.com/kivy/python-for-android/
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -R /tmp/test-app/testapps/testapp_keyboard/ /root/testapp-sdl2-keyboard/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -R /tmp/test-app/testapps/testapp_flask/ /root/testapp-webview-flask/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -R /tmp/test-app/testapps/testapp_nogui/ /root/testapp-service_only-nogui/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/output
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/output
  - Name: volume
    Volumes:
    - /root/workspace/
  - Name: workdir
    Path: /root/
  - CmdLine:
    - echo '#!/usr/bin/python3\nimport json\nimport os\nprint("echo \"\"")\nprint("echo
      \"To build a kivy demo app, use this command:\"")\nif os.environ["PIP"] == "pip2":\n    print("echo
      \"cd ~/testapp-sdl2-keyboard && p4a apk --arch=armeabi-v7a --name test --package
      com.example.test --version 1 --requirements=kivy,python2 --private .\"")\n    print("shopt
      -s expand_aliases")\n    print("alias testbuild=\"cd ~/testapp-sdl2-keyboard
      && p4a apk --arch=armeabi-v7a --name test --package com.example.test --version
      1 --requirements=kivy,python2 --private . && cp *.apk ~/output\"")\n    print("alias
      testbuild_webview=\"cd ~/testapp-webview-flask && p4a apk --arch=armeabi-v7a
      --name test --package com.example.test --version 1 --bootstrap webview --requirements=python2,flask
      --private . && cp *.apk ~/output\"")\n    print("alias testbuild_service_only=\"cd
      ~/testapp-service_only-nogui && p4a apk --arch=armeabi-v7a --name test --package
      com.example.test --version 1 --bootstrap service_only --requirements=pyjnius,python2
      --private . && cp *.apk ~/output\"")\nelse:\n    print("echo \"cd ~/testapp-sdl2-keyboard
      && p4a apk --arch=armeabi-v7a --name test --package com.example.test --version
      1 --requirements=kivy,python3 --private .\"")\n    print("shopt -s expand_aliases")\n    print("alias
      testbuild=\"cd ~/testapp-sdl2-keyboard && p4a apk --arch=armeabi-v7a --name
      test --package com.example.test --version 1 --requirements=kivy,python3 --private
      . && cp *.apk ~/output\"")\n    print("alias testbuild_webview=\"cd ~/testapp-webview-flask
      && p4a apk --arch=armeabi-v7a --name test --package com.example.test --version
      1 --bootstrap webview --requirements=python3,flask --private . && cp *.apk ~/output\"")\n    print("alias
      testbuild_service_only=\"cd ~/testapp-service_only-nogui && p4a apk --arch=armeabi-v7a
      --name test --package com.example.test --version 1 --bootstrap service_only
      --requirements=pyjnius,python3 --private . && cp *.apk ~/output\"")\nlaunch_cmd="bash"\nprint("export
      ANDROIDAP='$ANDROIDAPI'" +\n    " ANDROIDNDKVER='$NDKVER'" +\n    " NDKAPI='$NDKAPI'"
      +\n    " GRADLE_OPTS=\"-Xms1724m -Xmx5048m -Dorg.gradle.jvmargs='"'"'-Xms1724m
      -Xmx5048m'"'"'\""+\n    " JAVA_OPTS=\"-Xms1724m -Xmx5048m\"" +\n    " ANDROIDSDK=/sdk-install/
      ANDROIDNDK=\"'$NDKDIR'\"")\nprint("CMD=\x27" + launch_cmd.replace("\x27", "\x27\"\x27\"\x27")
      + "\x27")' > /cmdline.py
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "`python3 /cmdline.py`; exec $CMD"
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
