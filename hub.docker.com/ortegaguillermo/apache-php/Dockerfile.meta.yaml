MetaArgs: null
Stages:
- BaseName: php:7.1-apache
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"guillermortega1e@gmail.com"'
    Name: label
  - Env:
    - Key: SERVER_NAME
      Value: '"localhost"'
    Name: env
  - Env:
    - Key: WEBSERVER_USER
      Value: '"www-data"'
    Name: env
  - Env:
    - Key: LOCAL_USER
      Value: '"local"'
    Name: env
  - Env:
    - Key: IDEKEY
      Value: '"PHPSTORM"'
    Name: env
  - Env:
    - Key: REMOTEPORT
      Value: '"9000"'
    Name: env
  - CmdLine:
    - groupadd localGroup -g 3000
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -g 3000 -m -d /home/${LOCAL_USER} -s /bin/bash ${LOCAL_USER} && usermod
      -g www-data ${LOCAL_USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/$LOCAL_USER/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - passwd ${LOCAL_USER} -d
    Name: run
    PrependShell: true
  - CmdLine:
    - groups ${LOCAL_USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends locales wget apt-utils
      tcl build-essential -y
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x;     locale-gen es_MX.UTF-8 &&     update-locale &&     echo 'LANG="es_MX.UTF-8"'
      > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export LANG=en_US.UTF-8\nexport LANGUAGE=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\nexport
      PYTHONIOENCODING=UTF-8" | tee -a /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libmcrypt-dev python-pip gcc g++ make librabbitmq-dev libbz2-dev
      libicu-dev libxml2-dev libxslt1-dev libfreetype6-dev     libjpeg62-turbo-dev
      libpng-dev git unzip vim openssh-server ocaml expect curl libssl-dev libcurl4-openssl-dev
      pkg-config -y
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     &&
      docker-php-ext-configure hash --with-mhash     && docker-php-ext-install     bcmath
      bz2 calendar curl dom
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install ftp gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install json mbstring mysqli opcache pdo pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install simplexml soap wddx xml xsl zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install amqp && pecl install mongodb && docker-php-ext-enable amqp && docker-php-ext-enable
      mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install gnupg2 gnupg -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install net-tools openssh-server nano vim mariadb-client -y && apt-get
      install -y apache2     && a2enmod rewrite     && a2enmod proxy     && a2enmod
      proxy_fcgi    && a2enmod ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/apache2/sites-available/000-default.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - extrafiles/000-default.conf
    - /etc/apache2/sites-available/000-default.conf
  - CmdLine:
    - curl http://browscap.org/stream?q=Full_PHP_BrowsCapINI >> "/usr/local/etc/php/browscap.ini"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - extrafiles/php.ini
    - /usr/local/etc/php
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x nodesource_setup.sh && ./nodesource_setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nodejs yarn -y
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g sass less grunt
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -new -x509 -days 365 -keyout /ssl/privkey.pem -out /ssl/cert.pem
      -nodes -subj  '/O=VirtualHost Website Company name/OU=Virtual Host Website department/CN=backend.local.com'
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod -g $(id -u  ${LOCAL_USER}) www-data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "443"
    - "80"
  From:
    Image: php:7.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-apache
