MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine:3.2
  Commands:
  - Env:
    - Key: VERSION
      Value: v0.10.42
    - Key: CMD
      Value: node
    - Key: DOMAIN
      Value: nodejs.org
    - Key: CFLAGS
      Value: '"-D__USE_MISC"'
    Name: env
  - CmdLine:
    - apk-install openssl ca-certificates git curl make gcc g++ python linux-headers
      paxctl libgcc libstdc++ &&   update-ca-certificates &&   curl -sSL https://${DOMAIN}/dist/${VERSION}/${CMD}-${VERSION}.tar.gz
      | tar -xz &&   cd /${CMD}-${VERSION} &&   ./configure --prefix=/usr ${CONFIG_FLAGS}
      &&   make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) &&   make install
      &&   paxctl -cm /usr/bin/${CMD} &&   cd / &&   if [ -x /usr/bin/npm -a -z "$NO_NPM_UPDATE"
      ]; then     npm install -g npm@2 &&     find /usr/lib/node_modules/npm -name
      test -o -name .bin -type d | xargs rm -rf;   fi &&   rm -rf /etc/ssl /${CMD}-${VERSION}
      ${RM_DIRS}     /usr/share/man /tmp/* /root/.npm /root/.node-gyp     /usr/lib/node_modules/npm/man
      /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./procman.sh
    - /bin/node-procman
  - Expression: RUN mkdir -p /usr/src/app
    Name: onbuild
  - Expression: WORKDIR /usr/src/app
    Name: onbuild
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Expression: COPY . /usr/src/app
    Name: onbuild
  - Expression: RUN npm install --production
    Name: onbuild
  - CmdLine:
    - /bin/node-procman
    - npm
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: gliderlabs/alpine:3.2
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine:3.2
