MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: DbFace "support@dbface.com"
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy install passwd supervisor sudo unzip wget curl cron apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list
      | sudo tee /etc/apt/sources.list.d/mssql-server-2017.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | sudo tee
      /etc/apt/sources.list.d/mssql-tools.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy update
    Name: run
    PrependShell: true
  - CmdLine:
    - ACCEPT_EULA=Y apt-get -qqy install mssql-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -qqy install unixodbc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy install openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:root' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - service ssh start; service ssh stop
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/ssl;     openssl genrsa -out /root/ssl/local.key 1024;     openssl
      req -new -key /root/ssl/local.key -out /root/ssl/local.csr -subj "/C=DE/ST=BW/L=FREIBURG/O=Jankowfsky
      AG/OU=Development/CN=localhost";     openssl x509 -req -days 365 -in /root/ssl/local.csr
      -signkey /root/ssl/local.key -out /root/ssl/local.crt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy install apache2 apache2-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/apache2/conf.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ServerName localhost" | tee /etc/apache2/conf.d/fqdn
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ServerName localhost" >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/apache/000-default
    - /etc/apache2/sites-enabled/000-default.conf
  - CmdLine:
    - apt-get -qqy install php-pear php7.0 mcrypt php7.0-mcrypt php7.0-dev php7.0-cli
      php7.0-mysql php7.0-sqlite php7.0-interbase php7.0-pgsql php7.0-curl php7.0-mbstring
      php7.0-gd php7.0-xml libapache2-mod-php7.0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy install libssl-dev pkg-config libaio-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mongodb &&     echo "extension=mongodb.so" >> /etc/php/7.0/cli/php.ini
      &&     echo "extension=mongodb.so" >> /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install sqlsrv pdo_sqlsrv &&     echo "extension= pdo_sqlsrv.so" >> /etc/php/7.0/cli/php.ini
      &&     echo "extension= pdo_sqlsrv.so" >> /etc/php/7.0/apache2/php.ini &&     echo
      "extension= sqlsrv.so" >> /etc/php/7.0/cli/php.ini &&     echo "extension= sqlsrv.so"
      >> /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/oracle     && cd /opt/oracle     && wget https://s3-ap-southeast-1.amazonaws.com/download-dbface/instantclient-basiclite-linux.x64-12.2.0.1.0.zip     &&
      wget https://s3-ap-southeast-1.amazonaws.com/download-dbface/instantclient-sdk-linux.x64-12.2.0.1.0.zip     &&
      unzip /opt/oracle/instantclient-basiclite-linux.x64-12.2.0.1.0.zip -d /opt/oracle     &&
      unzip /opt/oracle/instantclient-sdk-linux.x64-12.2.0.1.0.zip -d /opt/oracle     &&
      ln -s /opt/oracle/instantclient_12_2/libclntsh.so.12.1 /opt/oracle/instantclient_12_2/libclntsh.so     &&
      ln -s /opt/oracle/instantclient_12_2/libclntshcore.so.12.1 /opt/oracle/instantclient_12_2/libclntshcore.so     &&
      ln -s /opt/oracle/instantclient_12_2/libocci.so.12.1 /opt/oracle/instantclient_12_2/libocci.so     &&
      rm -rf /opt/oracle/*.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'instantclient,/opt/oracle/instantclient_12_2/' | pecl install oci8 &&     echo
      "extension= oci8.so" >> /etc/php/7.0/cli/php.ini &&     echo "extension= oci8.so"
      >> /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html &&     wget http://s3-ap-southeast-1.amazonaws.com/download-dbface/ioncube_loaders_lin_x86-64.tar.gz
      &&     tar zxvf ioncube_loaders_lin_x86-64.tar.gz &&     rm ioncube_loaders_lin_x86-64.tar.gz
      &&     echo "zend_extension = /var/www/html/ioncube/ioncube_loader_lin_7.0.so"
      >> /etc/php/7.0/apache2/php.ini &&     echo "zend_extension = /var/www/html/ioncube/ioncube_loader_lin_7.0.so"
      >> /etc/php/7.0/cli/php.ini
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/dbface
    - /etc/cron.d/dbface
  - CmdLine:
    - chmod 0644 /etc/cron.d/dbface
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/log/cronlog.log
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisor/startup.conf
    - /etc/supervisor/conf.d/startup.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/scripts/startup.sh
    - /usr/bin/startup_container
  - CmdLine:
    - chmod +x /usr/bin/startup_container
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean -y;     apt-get autoclean -y;     apt-get autoremove -y;     rm
      -rf /var/www/index.html;     rm -rf /var/lib/{apt,dpkg,cache,log}/
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www
  - Name: expose
    Ports:
    - "22"
    - "443"
    - "80"
  - CmdLine:
    - /bin/bash
    - /usr/bin/startup_container
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
