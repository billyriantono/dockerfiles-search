{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Danil Kuznetsov \u003ckuznetsov.danil.v@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LANGUAGE",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "TERM",
              "Value": "\"xterm\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 addgroup -g 82 -S nginx \t\u0026\u0026 adduser -u 82 -D -S -G nginx -h /var/cache/nginx -s /sbin/nologin nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.12.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEOIP_VERSION",
              "Value": "1.6.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update  --no-cache  \t\twget \t\tbuild-base \t\tca-certificates \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\topenssl \t\tpcre-dev \t\tpcre \t\tzlib \t\tzlib-dev \t\tlinux-headers  \u0026\u0026 mkdir -p /tmp/src  \u0026\u0026 cd /tmp/src  \u0026\u0026 wget  https://github.com/maxmind/geoip-api-c/releases/download/v${GEOIP_VERSION}/GeoIP-${GEOIP_VERSION}.tar.gz  \u0026\u0026 tar -zxvf GeoIP-${GEOIP_VERSION}.tar.gz  \u0026\u0026 cd /tmp/src/GeoIP-${GEOIP_VERSION}  \u0026\u0026 ./configure  \u0026\u0026 make  \u0026\u0026 make check  \u0026\u0026 make install  \u0026\u0026 cd /tmp/src  \u0026\u0026 wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz  \u0026\u0026 gunzip GeoIP.dat.gz  \u0026\u0026 mkdir /usr/local/share/GeoIP/  \u0026\u0026 mv GeoIP.dat /usr/local/share/GeoIP/  \u0026\u0026 echo 'adding /usr/local/share/GeoIP/GeoIP.dat database'  \u0026\u0026 wget http://nginx.org/download/${NGINX_VERSION}.tar.gz  \u0026\u0026 tar -zxvf ${NGINX_VERSION}.tar.gz  \u0026\u0026 cd /tmp/src/${NGINX_VERSION}  \u0026\u0026 ./configure         --prefix=/etc/nginx         --sbin-path=/usr/local/sbin/nginx         --conf-path=/etc/nginx/nginx.conf         --pid-path=/run/nginx.pid         --lock-path=/run/nginx.lock         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --with-pcre-jit         --with-http_ssl_module         --with-stream_ssl_module         --with-http_stub_status_module         --with-http_gzip_static_module         --with-http_v2_module         --with-http_auth_request_module         --with-http_geoip_module  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 rm /usr/local/lib/libGeoIP.a  \u0026\u0026 rm -rf /tmp/src  \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/default-site.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/default-page.html",
            "/var/www/defaults/index.html"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/run.sh",
            "/RUN/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod u+x /RUN/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/DATA"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/RUN"
          ]
        },
        {
          "CmdLine": [
            "/RUN/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}