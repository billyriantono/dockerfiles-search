{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "TRUE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOCKEYE_VERSION",
              "Value": "1.18.97"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEMP",
              "Value": "/home/model-server/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m model-server \u0026\u0026     mkdir -p $TEMP \u0026\u0026     chown model-server $TEMP"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/model-server"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y     build-essential     python3-dev     python3-venv     openjdk-8-jdk-headless     curl     vim \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements/",
            "requirements/"
          ]
        },
        {
          "CmdLine": [
            "python3 -m venv venv \u0026\u0026     . venv/bin/activate \u0026\u0026     pip install --no-cache-dir -U pip setuptools wheel \u0026\u0026     pip install --no-cache-dir sockeye==$SOCKEYE_VERSION \u0026\u0026     pip install --no-cache-dir -r requirements/sockeye-serving/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/config.properties",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/dockerd-entrypoint.sh",
            "/usr/local/bin/dockerd-entrypoint.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "8081",
            "8443",
            "8444"
          ]
        },
        {
          "Name": "user",
          "User": "model-server"
        },
        {
          "CmdLine": [
            "/usr/local/bin/dockerd-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "serve"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.1.0\""
            },
            {
              "Key": "maintainer",
              "Value": "\"james.e.woo@gmail.com\""
            },
            {
              "Key": "source",
              "Value": "\"https://github.com/jamesewoo/sockeye-serving\""
            },
            {
              "Key": "description",
              "Value": "\"A containerized service for neural machine translation\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}