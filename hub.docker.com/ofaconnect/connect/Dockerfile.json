{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7",
      "SourceCode": "FROM python:2.7",
      "Platform": "",
      "From": {
        "Image": "python:2.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_5.x | bash - \u0026\u0026     apt-get install -y nodejs build-essential libmemcached-dev ruby gifsicle \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf '#!/bin/bash\\ncd /app/ \u0026\u0026 eval \"$(grep -i \"^$1: \" /app/Procfile | awk -F'\\'': '\\'' '\\''{print $2}'\\'')\"' \u003e /bin/proclaunch \u0026\u0026     chmod +x /bin/proclaunch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos '' appuser \u0026\u0026     chown -R --from=root:root appuser:appuser /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ryandotsmith/nginx-buildpack.git nginx-buildpack \u0026\u0026     cd nginx-buildpack \u0026\u0026     git checkout 005ca0374e3cf61a29fb0f9041a7315677af1972 \u0026\u0026     STACK=cedar-14 bash bin/compile '/app' \u0026\u0026     cd .. \u0026\u0026 rm -r nginx-buildpack \u0026\u0026     chown -R --from=root:root appuser:appuser /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ofa/heroku-buildpack-pgbouncer.git pgbouncer-buildpack \u0026\u0026     cd pgbouncer-buildpack \u0026\u0026     git checkout cb5656d70991e98a1bf3f55a66b843939e3384e1 \u0026\u0026     STACK=cedar-14 bash bin/compile '/app' \u0026\u0026     cd .. \u0026\u0026 rm -r pgbouncer-buildpack \u0026\u0026 chown -R --from=root:root appuser:appuser /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "package.json",
            "/app/package.json"
          ]
        },
        {
          "CmdLine": [
            "npm install \u0026\u0026 rm -r ~/.npm \u0026\u0026 npm uninstall phantomjs \u0026\u0026     chown -R --from=root:root appuser:appuser /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "*requirements.txt",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt \u0026\u0026 rm -r ~/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bower.json",
            "/app/bower.json"
          ]
        },
        {
          "CmdLine": [
            "bower install --allow-root \u0026\u0026 rm -r ~/.cache \u0026\u0026     chown -R --from=root:root appuser:appuser /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "chown -R --from=root:root appuser:appuser /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "appuser"
        },
        {
          "CmdLine": [
            "grunt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        }
      ]
    }
  ]
}