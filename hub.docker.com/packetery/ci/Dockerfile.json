{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1",
      "SourceCode": "FROM php:7.1",
      "Platform": "",
      "From": {
        "Image": "php:7.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y libcurl4-openssl-dev sudo git libxslt-dev mercurial subversion zlib1g-dev graphviz zip libmcrypt-dev libicu-dev g++ libpng-dev libgd-dev libc-client-dev libkrb5-dev rsync \t\u0026\u0026 apt-get clean \t\u0026\u0026 docker-php-ext-install soap \t\u0026\u0026 docker-php-ext-install zip \t\u0026\u0026 docker-php-ext-install xsl \t\u0026\u0026 docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \t\u0026\u0026 docker-php-ext-install gd \t\u0026\u0026 docker-php-ext-install mcrypt \t\u0026\u0026 docker-php-ext-install mbstring \t\u0026\u0026 docker-php-ext-install gettext \t\u0026\u0026 docker-php-ext-install curl \t\u0026\u0026 docker-php-ext-install mysqli \t\u0026\u0026 docker-php-ext-install pdo_mysql \t\u0026\u0026 docker-php-ext-install json \t\u0026\u0026 docker-php-ext-install intl \t\u0026\u0026 docker-php-ext-install opcache \t\u0026\u0026 docker-php-ext-install bcmath \t\u0026\u0026 docker-php-ext-install sockets \t\u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl \t\u0026\u0026 docker-php-ext-install imap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y purge \tlibc-client-dev \tlibicu-dev \tlibkrb5-dev \tlibpng-dev \tzlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove --purge nodejs   \u0026\u0026 apt-get remove --purge npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://deb.nodesource.com/setup_10.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g \tgulp-cli \tgrunt-cli \tbower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '{ \"allow_root\": true, \"storage\": {\"packages\": \".bower-cache/\"} }' \u003e ~/.bowerrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'cache=.node-cache' \u003e ~/.npmrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '{ \"config\": { \"cache-dir\": \".composer-cache\" } }' \u003e ~/.composer/composer.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require --no-progress --no-interaction --no-suggest deployer/deployer deployer/recipes hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/bin/dep /usr/bin/deployer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh \u0026\u0026 chmod +x wait-for-it.sh \u0026\u0026 ln -s ~/wait-for-it.sh /usr/bin/wait-for-it"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/.ssh \u0026\u0026 chmod 700 ~/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}