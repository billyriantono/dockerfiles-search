MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - mkdir /root/build_folder
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - /root/build_folder/
  - Name: workdir
    Path: /root/build_folder/
  - Name: user
    User: root
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy automake libtool pkg-config libffi6 libgmp3-dev openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - make sdist
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as builder
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - mkdir /root/artifacts
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /root/build_folder/dist/
    - /root/artifacts/
  - Name: workdir
    Path: /root/artifacts/
  - CmdLine:
    - apt-get update && apt-get install -qqy python3-pip libssl-dev && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install *.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/
  - CmdLine:
    - rm -rf /root/artifacts
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c '[[ $(which web3-gear) == "/usr/local/bin/web3-gear" ]] || exit 1'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod 777 /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - 8545/tcp
  - Name: expose
    Ports:
    - 8545/udp
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
