MetaArgs: null
Stages:
- BaseName: jenkinsci/jnlp-slave:alpine
  Commands:
  - Maintainer: Beni Ben Zikry
    Name: maintainer
  - Name: user
    User: root
  - Env:
    - Key: HELM_VERSION
      Value: v2.8.1
    Name: env
  - Env:
    - Key: HELM_FILENAME
      Value: helm-${HELM_VERSION}-linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: KUBE_LATEST_VERSION
      Value: '"v1.8.4"'
    Name: env
  - Env:
    - Key: DOTNET_SYSTEM_GLOBALIZATION_INVARIANT
      Value: "false"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: DOTNET_RUNNING_IN_CONTAINER
      Value: "true"
    - Key: DOTNET_SYSTEM_GLOBALIZATION_INVARIANT
      Value: "true"
    Name: env
  - Env:
    - Key: DOTNET_SDK_VERSION
      Value: 2.1.301
    Name: env
  - Env:
    - Key: DOTNET_USE_POLLING_FILE_WATCHER
      Value: "true"
    - Key: NUGET_XMLDOC_MODE
      Value: skip
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - apk add --no-cache         ca-certificates                 krb5-libs         libgcc         libintl         libssl1.0         libstdc++         tzdata         userspace-rcu         zlib     &&
      apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache         lttng-ust
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update -t deps curl tar gzip ca-certificates git
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps     openssl     && wget -O dotnet.tar.gz
      https://dotnetcli.blob.core.windows.net/dotnet/Sdk/${DOTNET_SDK_VERSION}/dotnet-sdk-${DOTNET_SDK_VERSION}-linux-musl-x64.tar.gz     &&
      dotnet_sha512='86e288cce53999b719ced7959f5ba652f667b8c1e0aec266c3012c9870380e5142e3f5ac103f03691d4426158d9da4d7c89f0739dee5815419a6150c8ee84a12'     &&
      echo "$dotnet_sha512  dotnet.tar.gz" | sha512sum -c -     && mkdir -p /usr/share/dotnet     &&
      tar -C /usr/share/dotnet -xzf dotnet.tar.gz     && ln -s /usr/share/dotnet/dotnet
      /usr/bin/dotnet     && rm dotnet.tar.gz     && apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet help
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://kubernetes-helm.storage.googleapis.com/helm-canary-linux-amd64.tar.gz
      | tar zxv -C /tmp   && cp /tmp/linux-amd64/helm /usr/local/bin/helm   && chmod
      +x /usr/local/bin/helm
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./installers/img.sh
    - .
  - CmdLine:
    - chmod +x ./img.sh && ./img.sh && rm img.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -o /usr/local/bin/kubectl  && chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del --purge deps  && rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - CmdLine:
    - helm init --client-only
    Name: run
    PrependShell: true
  From:
    Image: jenkinsci/jnlp-slave:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM jenkinsci/jnlp-slave:alpine
