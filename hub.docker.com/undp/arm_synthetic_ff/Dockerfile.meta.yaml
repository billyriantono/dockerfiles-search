MetaArgs: null
Stages:
- BaseName: resin/armv7hf-debian-qemu
  Commands:
  - CmdLine:
    - cross-build-start
    Name: run
    PrependShell: false
  - Labels:
    - Key: maintainer
      Value: '"osimood@gmail.com"'
    - Key: description
      Value: '"Docker container for Selenium Testing with Firefox"'
    Name: label
  - Env:
    - Key: SELENIUM_DIR
      Value: /selenium
    Name: env
  - CmdLine:
    - mkdir -p $SELENIUM_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && \tapt-get install -y gnupg2 \t\tcurl \t\twget"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb http://httpredir.debian.org/debian stretch main contrib non-free\"
      | tee --append /etc/apt/sources.list && \techo \"deb http://httpredir.debian.org/debian
      stretch-updates main contrib non-free\" | tee --append /etc/apt/sources.list
      && \techo \"deb http://httpredir.debian.org/debian stretch-backports main contrib
      non-free\" | tee --append /etc/apt/sources.list && \techo \"deb http://security.debian.org/
      stretch/updates main contrib non-free\" | tee --append /etc/apt/sources.list
      && \techo \"deb http://ports.ubuntu.com/ bionic main restricted universe multiverse\"
      | tee --append /etc/apt/sources.list && \techo \"deb http://ports.ubuntu.com/
      bionic-security main restricted universe multiverse\" | tee --append /etc/apt/sources.list
      && \techo \"deb http://ports.ubuntu.com/ bionic-updates main restricted universe
      multiverse\" | tee --append /etc/apt/sources.list && \techo \"deb http://ports.ubuntu.com/
      bionic-backports main restricted universe multiverse\" | tee --append /etc/apt/sources.list
      && \tapt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys EF0F382A1A7B6500
      && \tapt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/share/man/man1/ && touch /usr/share/man/man1/sh.distrib.1.gz
      && \tapt-get update && \tapt-get autoremove -y && \tapt-get upgrade -y && \tapt-get
      install -y python3 \t\tpython3-pip \t\txvfb \t\tunzip \t\tfirefox \t\tsoftware-properties-common
      \t\tunzip \t\txvfb"
    Name: run
    PrependShell: true
  - Key: GECKODRIVER_VERSION
    Name: arg
    Value: latest
  - CmdLine:
    - "GK_VERSION=$(if [ ${GECKODRIVER_VERSION:-latest} = \"latest\" ]; then echo
      \"0.23.0\"; else echo $GECKODRIVER_VERSION; fi) \t&& echo \"Using GeckoDriver
      version: \"$GK_VERSION \t&& wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GK_VERSION/geckodriver-v$GK_VERSION-arm7hf.tar.gz
      \t&& rm -rf /opt/geckodriver \t&& tar -C /opt -zxf /tmp/geckodriver.tar.gz \t&&
      rm /tmp/geckodriver.tar.gz \t&& mv /opt/geckodriver /opt/geckodriver-$GK_VERSION
      \t&& chmod 755 /opt/geckodriver-$GK_VERSION \t&& ln -fs /opt/geckodriver-$GK_VERSION
      /usr/local/bin/geckodriver"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install selenium
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install requests
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install selenium
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install PyVirtualDisplay
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install xvfbwrapper
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get remove -y unzip \tcurl \tgnupg2 \twget && \tapt autoremove -y"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Name: workdir
    Path: $SELENIUM_DIR
  - CmdLine:
    - cross-build-end
    Name: run
    PrependShell: false
  From:
    Image: resin/armv7hf-debian-qemu
  Name: ""
  Platform: ""
  SourceCode: FROM resin/armv7hf-debian-qemu
