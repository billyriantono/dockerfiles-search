MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Manel Martinez <manel@nixelsolutions.com>
    Name: maintainer
  - Env:
    - Key: VERSION
      Value: "1.80"
    Name: env
  - Env:
    - Key: S3User
      Value: AWSS3User
    Name: env
  - Env:
    - Key: S3Secret
      Value: AWSS3Secret
    Name: env
  - Env:
    - Key: BUCKETNAME
      Value: mycloudbucketname
    Name: env
  - Env:
    - Key: MOUNTPOINT
      Value: /var/www/data/hls
    Name: env
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y  automake  curl  build-essential  libfuse-dev
      libcurl4-openssl-dev  libtool  libxml2-dev mime-support  tar  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/s3fs-fuse/s3fs-fuse/archive/v${VERSION}.tar.gz |
      tar zxv -C /usr/src
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/s3fs-fuse-${VERSION} && ./autogen.sh && ./configure --prefix=/usr
      && make && make install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - s3fs.sh
    - /root/s3fs.sh
  - CmdLine:
    - chmod +x /root/s3fs.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y python-software-properties software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:gluster/glusterfs-3.5 &&     apt-get update &&     apt-get
      install -y php5-fpm php5-mysql php-apc supervisor glusterfs-client wget haproxy
      pwgen unzip php5-gd php5-mcrypt mysql-client dnsutils
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:mc3man/trusty-media &&     apt-get update &&     apt-get
      install -y ffmpeg dpkg-dev git &&     apt-get source nginx &&     apt-get -y
      build-dep nginx
    Name: run
    PrependShell: true
  - Env:
    - Key: SQLBUDDY_URL
      Value: https://codeload.github.com/lavvy/sqlbuddy/tar.gz/v1.0.0
    Name: env
  - Env:
    - Key: GLUSTER_VOL
      Value: ranchervol
    Name: env
  - Env:
    - Key: GLUSTER_VOL_PATH
      Value: /var/www
    Name: env
  - Env:
    - Key: HTTP_PORT
      Value: "80"
    Name: env
  - Env:
    - Key: RTMP_PORT
      Value: "1935"
    Name: env
  - Env:
    - Key: HTTP_DOCUMENTROOT
      Value: ${GLUSTER_VOL_PATH}
    Name: env
  - Env:
    - Key: DEBUG
      Value: "0"
    Name: env
  - Env:
    - Key: DB_USER
      Value: root
    Name: env
  - Env:
    - Key: DB_PASSWORD
      Value: '**ChangeMe**'
    Name: env
  - Env:
    - Key: DB_HOST
      Value: db
    Name: env
  - Env:
    - Key: GLUSTER_HOST
      Value: storage
    Name: env
  - CmdLine:
    - mkdir -p /var/log/supervisor ${GLUSTER_VOL_PATH} /usr/src/nginx
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GLUSTER_VOL_PATH}
  - CmdLine:
    - cd /usr/src/nginx && sudo git clone https://github.com/arut/nginx-rtmp-module.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /nginx-* && perl -p -i -e "s/ngx_http_substitutions_filter_module \\\/ngx_http_substitutions_filter_module
      \\\\\n            --add-module=\/usr\/src\/nginx\/nginx-rtmp-module \\\/g" debian/rules
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /nginx-* && dpkg-buildpackage -b
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --install /nginx-common_* /nginx-full_*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /nginx-*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/bin
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./bin
    - /usr/local/bin
  - CmdLine:
    - chmod +x /usr/local/bin/*.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./etc/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./etc/haproxy/haproxy.cfg
    - /etc/haproxy/haproxy.cfg
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./etc/nginx/sites-enabled/http
    - /etc/nginx/sites-enabled/http
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./etc/nginx/rtmp
    - /etc/nginx/rtmp
  - Chown: ""
    Name: add
    SourcesAndDest:
    - static
    - /static
  - CmdLine:
    - sed -i -e"s/keepalive_timeout\s*65/keepalive_timeout 2/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e"s/keepalive_timeout 2/keepalive_timeout 2;\n\tclient_max_body_size
      100m/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\nrtmp {\n    include /etc/nginx/rtmp;\n}" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g" /etc/php5/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize = 100M/g" /etc/php5/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/post_max_size\s*=\s*8M/post_max_size = 100M/g" /etc/php5/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/;daemonize\s*=\s*yes/daemonize = no/g" /etc/php5/fpm/php-fpm.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -p -i -e "s/ENABLED=0/ENABLED=1/g" /etc/default/haproxy
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "1935"
    - "80"
  - CmdLine:
    - /usr/local/bin/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
