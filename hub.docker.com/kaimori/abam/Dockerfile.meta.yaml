MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - Maintainer: The maintainer
    Name: maintainer
  - CmdLine:
    - yum install -y yum-utils python-setuptools inotify-tools unzip sendmail tar
      mysql sudo wget telnet rsync git
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx.repo
    - /etc/yum.repos.d/
  - CmdLine:
    - yum install -y nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install epel-release &&     rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
      &&     yum-config-manager -q --enable remi &&     yum-config-manager -q --enable
      remi-php56
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y php-fpm php-common memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y php-pecl-apc php-cli php-pear php-pdo php-mysql php-pecl-memcache
      php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml php-adodb php-imap
      php-intl php-soap
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y php-mysqli php-zip php-iconv php-curl php-simplexml php-dom php-bcmath
      php-opcache php-pecl-redis
    Name: run
    PrependShell: true
  - CmdLine:
    - yum update -y && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y sudo gcc-c++
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&   wget http://nodejs.org/dist/v0.10.32/node-v0.10.32.tar.gz &&   tar
      xvzf node-v0.10.32.tar.gz &&   rm -f node-v0.10.32.tar.gz &&   cd node-v* &&   ./configure
      &&   CXX="g++ -Wno-unused-local-typedefs" make &&   CXX="g++ -Wno-unused-local-typedefs"
      make install &&   cd /tmp &&   rm -rf /tmp/node-v* &&   npm -y install -g npm
      &&   echo -e '\n# Node.js\nexport PATH="node_modules/.bin:$PATH"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -y install -g grunt-cli gulp webpack bower
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod --gid 80 --new-name www nginx &&     usermod --uid 80 --home /data/www
      --gid 80 --login www --shell /bin/bash --comment www nginx &&     rm -rf /etc/nginx/*.d
      /etc/nginx/*_params &&     chown -R www:www /var/www
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - container-files
    - /
  - CmdLine:
    - find /config |grep .sh |xargs chmod +x
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /config/bootstrap.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
