{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm-alpine3.7",
      "SourceCode": "FROM php:7.1-fpm-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm-alpine3.7"
      },
      "Commands": [
        {
          "Maintainer": "Vlad Tuznichenko \u003cvlad.tuznichenko@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "ROOTFS_DIR",
          "Name": "arg",
          "Value": "\"./rootfs\""
        },
        {
          "Env": [
            {
              "Key": "PUID",
              "Value": "1000"
            },
            {
              "Key": "PGID",
              "Value": "1000"
            },
            {
              "Key": "MODE",
              "Value": "\"prod\""
            },
            {
              "Key": "WAIT_FOR",
              "Value": "\"\""
            },
            {
              "Key": "SECRET_ENV",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_FILE_UPLOADS",
              "Value": "\"on\""
            },
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "\"2G\""
            },
            {
              "Key": "PHP_POST_MAX_SIZE",
              "Value": "\"50M\""
            },
            {
              "Key": "PHP_UPLOAD_MAX_FILESIZE",
              "Value": "\"50M\""
            },
            {
              "Key": "PHP_MAX_INPUT_TIME",
              "Value": "60"
            },
            {
              "Key": "PHP_MAX_EXECUTION_TIME",
              "Value": "300"
            },
            {
              "Key": "PHP_DATE_TIME_ZONE",
              "Value": "\"Europe/Kiev\""
            },
            {
              "Key": "PHP_SESSION_SAVE_HANDLER",
              "Value": "\"files\""
            },
            {
              "Key": "PHP_SESSION_SAVE_PATH",
              "Value": "\"\""
            },
            {
              "Key": "PHP_SENDMAIL_PATH",
              "Value": "\"\""
            },
            {
              "Key": "PHP_FPM_LISTEN",
              "Value": "\"/var/run/php.sock\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            },
            {
              "Key": "COMPOSER_HOME",
              "Value": "/etc/composer"
            },
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.6.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSMTP_ROOT",
              "Value": "\"yourmail@mail.com\""
            },
            {
              "Key": "SSMTP_MAILHUB",
              "Value": "\"mailhog:1025\""
            },
            {
              "Key": "SSMTP_HOSTNAME",
              "Value": "\"yourserver.example.com\""
            },
            {
              "Key": "SSMTP_FROM_LINE_OVERRIDE",
              "Value": "\"YES\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCRIPTS_ROOT_DIR",
              "Value": "'/usr/scripts'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCRIPTS_CORE_RUNTIME_DIR",
              "Value": "\"$SCRIPTS_ROOT_DIR/core-runtime\""
            },
            {
              "Key": "SCRIPTS_AFTER_WAIT_RUNTIME_DIR",
              "Value": "\"$SCRIPTS_ROOT_DIR/after-wait-for-it\""
            },
            {
              "Key": "SCRIPTS_BEFORE_WAIT_RUNTIME_DIR",
              "Value": "\"$SCRIPTS_ROOT_DIR/before-wait-for-it\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo http://dl-2.alpinelinux.org/alpine/edge/community/ \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache     libjpeg-turbo-dev     ca-certificates     imagemagick-dev     libmcrypt-dev     libjpeg-turbo     mysql-client     freetype-dev     libxslt-dev     imagemagick \topenssl-dev     libpng-dev     subversion \tsupervisor     mercurial \tfindutils \tlibc-dev     freetype     autoconf     pcre-dev \tcurl-dev \tpkgconf     openssh     openssl     icu-dev     libtool \tshadow \tdcron \trsync     nginx     unzip     patch     ssmtp     tini     curl \tfile \tmake \tre2c \twget     git \tg++ \tgcc     tar     mc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd     --with-gd     --with-freetype-dir=/usr/include/     --with-png-dir=/usr/include/     --with-jpeg-dir=/usr/include/   \u0026\u0026 NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1)   \u0026\u0026 docker-php-ext-install -j${NPROC} gd   \u0026\u0026 apk del --no-cache freetype-dev libpng-dev libjpeg-turbo-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source extract         \u0026\u0026 pecl install gd mcrypt xdebug redis imagick         \u0026\u0026 docker-php-ext-enable imagick redis xdebug         \u0026\u0026 docker-php-source delete         \u0026\u0026 docker-php-ext-install mcrypt zip mbstring intl xsl exif pdo_mysql soap simplexml opcache bcmath         \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps zlib-dev  \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions     | tr ',' '\\n'     | sort -u     | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     )\"  \u0026\u0026 apk add --virtual .composer-phpext-rundeps $runDeps \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer  \u0026\u0026 php -r \"     \\$signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061';     \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}  \u0026\u0026 composer --ansi --version --no-interaction  \u0026\u0026 rm -rf /tmp/* /tmp/.htaccess"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g 1001 composer \u0026\u0026 usermod --append --groups www-data,nginx nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod --uid ${PUID} --shell /bin/sh --append --groups composer,nginx,www-data www-data \u0026\u0026 groupmod --gid ${PGID} www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /proc/1/fd/2 /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /proc/1/fd/1 /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/scripts/command",
            "/usr/bin/command"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/scripts/entrypoint.sh",
            "/usr/bin/entrypoint"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/scripts/core-runtime",
            "$SCRIPTS_CORE_RUNTIME_DIR"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/nginx/sites-enabled",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/cron-jobs",
            "/var/spool/cron/crontabs"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/supervisor/programs",
            "/etc/supervisor.programs"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/supervisor/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/php/php-fpm.d",
            "/usr/local/etc/php-fpm.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/php/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/php/docker-php-ext-xdebug.ini",
            "/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${ROOTFS_DIR}/html",
            "/var/www/html"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p $SCRIPTS_CORE_RUNTIME_DIR $SCRIPTS_AFTER_WAIT_RUNTIME_DIR $SCRIPTS_BEFORE_WAIT_RUNTIME_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/nginx /var/log/supervisor/ /etc/cron/periodic /etc/cron/crontabs /etc/cron/cronstamps /etc/supervisor.programs /etc/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/command/phpmod.sh /usr/bin/phpmod"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/command/wait-for.sh /usr/bin/wait-for"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/command/secret-env.sh /usr/bin/secret-env"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 770 $COMPOSER_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R root:composer $COMPOSER_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 600 /var/spool/cron/crontabs/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R +x /usr/bin/command /usr/bin/crontab /usr/bin/entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}