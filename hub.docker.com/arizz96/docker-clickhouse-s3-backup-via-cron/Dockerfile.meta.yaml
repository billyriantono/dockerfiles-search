MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: arizz96@gmail.com
    Name: maintainer
  - Key: repository
    Name: arg
    Value: '"deb http://repo.yandex.ru/clickhouse/deb/stable/ main/"'
  - Key: version
    Name: arg
    Value: 19.3.4
  - CmdLine:
    - apt-get update     && apt-get install --yes --no-install-recommends         cron         ruby2.3         ruby2.3-dev         build-essential         libxml2-dev         libxslt-dev         liblzma-dev         zlib1g-dev         lbzip2         patch         apt-transport-https         dirmngr         gnupg     &&
      mkdir -p /etc/apt/sources.list.d     && apt-key adv --keyserver keyserver.ubuntu.com
      --recv E0C56BD4     && echo $repository > /etc/apt/sources.list.d/clickhouse.list     &&
      apt-get update     && env DEBIAN_FRONTEND=noninteractive         apt-get install
      --allow-unauthenticated --yes --no-install-recommends             clickhouse-client=$version             clickhouse-common-static=$version             locales             tzdata     &&
      rm -rf /var/lib/apt/lists/* /var/cache/debconf     && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - mkdir /backup
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /backup
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - /backup/Gemfile
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile.lock
    - /backup/Gemfile.lock
  - CmdLine:
    - gem install nokogiri -v 1.8.5 -- --use-system-libraries=true --with-xml2-include=/usr/include/libxml2
      &&     gem install bundler -v 1.10.6 &&     bundle config build.nokogiri --use-system-libraries=true
      --with-xml2-include=/usr/include/libxml2 &&     NOKOGIRI_USE_SYSTEM_LIBRARIES=1
      bundle install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_cron.sh
    - /backup/run_cron.sh
  - CmdLine:
    - chmod 0700 /backup/run_cron.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup.sh
    - /backup/backup.sh
  - CmdLine:
    - chmod 0700 /backup/backup.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - s3upload.rb
    - /backup/s3upload.rb
  - CmdLine:
    - chmod 0700 /backup/s3upload.rb
    Name: run
    PrependShell: true
  - Env:
    - Key: BACKUP_CRON_SCHEDULE
      Value: '"0 * * * *"'
    Name: env
  - Env:
    - Key: BACKUP_PRIORITY
      Value: '"ionice -c 3 nice -n 10"'
    Name: env
  - CmdLine:
    - touch /var/log/cron.log
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - crontab
    - /etc/cron.d/backup-cron
  - CmdLine:
    - chmod 0644 /etc/cron.d/backup-cron
    Name: run
    PrependShell: true
  - CmdLine:
    - /backup/run_cron.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
