{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Maintainer": "Tangent Solutions \u003czander@tangentsolutions.co.za\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.sh",
            "/bin/"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite expires include deflate headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         git         libldap2-dev         libcurl4-gnutls-dev         curl         libicu-dev         libmcrypt-dev         libvpx-dev         libjpeg-dev         libpng-dev         libxpm-dev         zlib1g-dev         libfreetype6-dev         libxml2-dev         libexpat1-dev         libbz2-dev         libgmp3-dev         libldap2-dev         unixodbc-dev         libpq-dev         libsqlite3-dev         libaspell-dev         libsnmp-dev         libpcre3-dev         libtidy-dev         build-essential         libkrb5-dev         libedit-dev         libedit2         gcc         make         python2.7-dev         python-pip         re2c         wget         sqlite3         libmemcached-dev         libc-client-dev -yqq         openssh-server     \u0026\u0026 echo \"root:Docker!\" | chpasswd     \u0026\u0026 echo \"cd /home\" \u003e\u003e /etc/bash.bashrc     \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so     \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so     \u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 pecl install redis     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-install mbstring          pdo_mysql          json          intl          gd          xml          zip          bz2          opcache          pgsql          pdo_sqlite         intl          bcmath          soap          ldap          readline     \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libmagickwand-dev --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install imagick \u0026\u0026 docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -fr /var/log/apache2    \u0026\u0026 rmdir /var/lock/apache2    \u0026\u0026 rmdir /var/run/apache2    \u0026\u0026 chmod 777 /var/log    \u0026\u0026 chmod 777 /var/run    \u0026\u0026 chmod 777 /var/lock    \u0026\u0026 chmod 755 /bin/init.sh    \u0026\u0026 mkdir -p /home/LogFiles    \u0026\u0026 rm -rf /var/www/html    \u0026\u0026 ln -s /home/site/wwwroot /var/www/html    \u0026\u0026 ln -s /home/LogFiles /var/log/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache2.conf",
            "/etc/apache2/apache2.conf"
          ]
        },
        {
          "CmdLine": [
            "{                 echo 'opcache.memory_consumption=128';                 echo 'opcache.interned_strings_buffer=8';                 echo 'opcache.max_accelerated_files=4000';                 echo 'opcache.revalidate_freq=60';                 echo 'opcache.fast_shutdown=1';                 echo 'opcache.enable_cli=1';     } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{                 echo 'error_log=/var/log/apache2/php-error.log';                 echo 'display_errors=Off';                 echo 'log_errors=On';                 echo 'display_startup_errors=Off';                 echo 'date.timezone=UTC';                 echo 'expose_php=Off';                 echo 'allow_url_fopen=Off';                 echo 'allow_url_include=Off';                 echo 'disable_functions=exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source';     } \u003e /usr/local/etc/php/conf.d/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "8080"
          ]
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_ROLE_INSTANCE_ID",
              "Value": "localRoleInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_INSTANCE_ID",
              "Value": "localInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/home/site/wwwroot"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "/bin/init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}