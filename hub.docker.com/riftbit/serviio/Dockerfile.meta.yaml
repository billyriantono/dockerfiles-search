MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: '"Riftbit ErgoZ <ergozru@riftbit.com>"'
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: "2.0"
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"DLNA Serviio Container"'
    - Key: org.label-schema.description
      Value: '"DLNA Serviio Container"'
    - Key: org.label-schema.url
      Value: '"https://riftbit.com/"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/riftbit/docker-serviio"'
    - Key: org.label-schema.vendor
      Value: '"Riftbit Studio"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: maintainer
      Value: '"Riftbit ErgoZ"'
    Name: label
  - Key: FFMPEG_VERSION
    Name: arg
    Value: "4.1"
  - Env:
    - Key: JAVA_HOME
      Value: '"/usr"'
    Name: env
  - CmdLine:
    - "echo \"http://dl-cdn.alpinelinux.org/alpine/v3.7/community\" >> /etc/apk/repositories;
      \    echo \"http://dl-cdn.alpinelinux.org/alpine/v3.7/main\" >> /etc/apk/repositories;
      \    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories;
      \    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories;
      \    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories;
      \    apk update && apk upgrade && \tapk add --no-cache --update \t\talsa-lib
      \t\tbzip2 \t\texpat \t\tfdk-aac \t\tlame \t\tlibbz2 \t\tlibdrm \t\tlibffi \t\tlibjpeg-turbo
      \t\tlibtheora \t\tlibogg \t\tlibpciaccess \t\tlibrtmp \t\tlibstdc++ \t\tlibtasn1
      \t\tlibva \t\tlibvorbis \t\tlibvpx \t\tmesa-gl \t\tmesa-glapi \t\tmusl \t\topus
      \t\topenjdk8-jre \t\tp11-kit \t\tsdl \t\tx264-libs \t\tx264 \t\tx265 \t\tjasper-dev
      \        libass-dev \t\tgnutls-dev \t\tlibwebp-dev \t\tlame-dev \t\tv4l-utils-libs
      \t\txvidcore &&     apk add --no-cache --update --virtual=build-dependencies
      \t\talsa-lib-dev \t\tbzip2-dev \t\tcoreutils \t\tcurl \t\tfdk-aac-dev \t\tfreetype-dev
      \t\tg++ \t\tgcc \t\tgit \t\timlib2-dev \t\tlcms2-dev \t\tlibgcc \t\tlibjpeg-turbo-dev
      \t\tlibtheora-dev \t\tlibogg-dev \t\tlibva-dev \t\tlibvorbis-dev         libvpx-dev
      \t\tlibx11 \t\tlibxau \t\tlibxcb \t\tlibxcb-dev \t\tlibxdamage \t\tlibxdmcp
      \t\tlibxext \t\tlibxfixes \t\tlibxfixes-dev \t\tlibxshmfence \t\tlibxxf86vm
      \t\tmake \t\tmusl-dev \t\tnasm \t\tnettle \t\topus-dev \t\tpkgconf \t\tpkgconf-dev
      \t\trtmpdump-dev \t\tsdl-dev \t\ttar \t\tttf-dejavu \t\tv4l-utils-dev \t\tx264-dev
      \t\tx265-dev \t\txvidcore-dev \t\tyasm-dev         zlib-dev && \tDIR=$(mktemp
      -d) && cd ${DIR} && \tcurl -s http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz
      | tar zxf - -C . && \tcd ffmpeg-${FFMPEG_VERSION} && \t./configure \t--disable-doc
      \t--disable-debug \t--disable-shared \t--enable-avfilter \t--enable-avresample
      \t--enable-gnutls \t--enable-gpl \t--enable-libass \t--enable-libfdk-aac \t--enable-libfreetype
      \t--enable-libmp3lame \t--enable-libopus \t--enable-librtmp \t--enable-libtheora
      \t--enable-libv4l2 \t--enable-libvorbis \t--enable-libvpx \t--enable-libwebp
      \t--enable-libx264 \t--enable-libx265 \t--enable-libxcb \t--enable-libxvid \t--enable-nonfree
      \t--enable-pic \t--enable-pthreads \t--enable-postproc \t--enable-static \t--enable-version3
      \t--enable-vaapi \t--prefix=/usr && \tmake -j4 && \tmake install && \tgcc -o
      tools/qt-faststart $CFLAGS tools/qt-faststart.c && \tinstall -D -m755 tools/qt-faststart
      /usr/bin/qt-faststart && \tmake distclean && \tcd ${DIR} && \twget http://www.cybercom.net/~dcoffin/dcraw/dcraw.c
      && \tgcc -o dcraw -O4 dcraw.c -lm -ljasper -ljpeg -llcms2 && \tcp dcraw /usr/bin/dcraw
      && \tchmod +x /usr/bin/dcraw  && \tcd ${DIR} && \tcurl -s http://download.serviio.org/releases/serviio-${VERSION}-linux.tar.gz
      | tar zxvf - -C . && \tmkdir -p /opt/serviio && \tmkdir -p /media/serviio &&
      \tmv ./serviio-${VERSION}/* /opt/serviio && \tchmod +x /opt/serviio/bin/serviio.sh
      && \tmkdir -p /opt/serviio/log && \ttouch /opt/serviio/log/serviio.log && \trm
      -rf ${DIR} && \tapk del --purge build-dependencies && \trm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt/serviio/config
    - /opt/serviio/library
    - /opt/serviio/log
    - /opt/serviio/plugins
    - /media/serviio
  - Name: expose
    Ports:
    - 1900/udp
  - Name: expose
    Ports:
    - 8895/tcp
  - Name: expose
    Ports:
    - 23423/tcp
  - Name: expose
    Ports:
    - 23523/tcp
  - Name: expose
    Ports:
    - 23424/tcp
  - Name: expose
    Ports:
    - 23524/tcp
  - CmdLine:
    - tail -f /opt/serviio/log/serviio.log & /opt/serviio/bin/serviio.sh
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
