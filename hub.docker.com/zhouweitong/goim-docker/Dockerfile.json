{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.4.1708",
      "SourceCode": "FROM centos:7.4.1708",
      "Platform": "",
      "From": {
        "Image": "centos:7.4.1708"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "kafka_rel",
              "Value": "2.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "kafka_ver",
              "Value": "2.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "golang_url",
              "Value": "https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "golang_name",
              "Value": "go1.12.6.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026     mkdir src \u0026\u0026     mkdir soft \u0026\u0026     mkdir shell \u0026\u0026     mkdir logs \u0026\u0026     mkdir /root/soft/example"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "shell",
            "/root/shell"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "example",
            "/root/soft/example"
          ]
        },
        {
          "CmdLine": [
            "yum install -y bash sudo psmisc git wget gcc gcc-c++ java-1.8.0-openjdk tcpdump \u0026\u0026     yum clean all \u0026\u0026     cd /root/src \u0026\u0026     git clone -b master https://github.com/zhouweitong3/goim.git \u0026\u0026     cd /root/soft \u0026\u0026     wget http://www-us.apache.org/dist/kafka/$kafka_rel/kafka_$kafka_ver-$kafka_rel.tgz \u0026\u0026     tar -xzvf kafka_$kafka_ver-$kafka_rel.tgz \u0026\u0026     rm -rf kafka_$kafka_ver-$kafka_rel.tgz \u0026\u0026     cd /root/soft/kafka_$kafka_ver-$kafka_rel \u0026\u0026     mkdir /root/config \u0026\u0026     mv ./config/zookeeper.properties /root/config/ \u0026\u0026     ln -s /root/config/zookeeper.properties ./config/zookeeper.properties \u0026\u0026     mv ./config/server.properties /root/config/ \u0026\u0026     ln -s /root/config/server.properties ./config/server.properties \u0026\u0026     cd /root/soft \u0026\u0026     wget $golang_url \u0026\u0026     tar -C /usr/local -xzvf $golang_name \u0026\u0026     export PATH=$PATH:/usr/local/go/bin \u0026\u0026     export GOPATH=$HOME/go \u0026\u0026     source ~/.bash_profile \u0026\u0026     cd /root/src \u0026\u0026     go get -u github.com/thinkboy/log4go \u0026\u0026     go get -u github.com/Terry-Mao/goconf \u0026\u0026     go get -u github.com/gorilla/websocket \u0026\u0026     cd /root/go/src/github.com/gorilla/websocket \u0026\u0026     git checkout 6656ddce919367f4c4090b0f89a45854d26da020 \u0026\u0026     cd /root/src \u0026\u0026     go get -u github.com/Shopify/sarama \u0026\u0026     go get -u github.com/wvanbergen/kazoo-go \u0026\u0026     \\cp -rf goim /root/go/src/ \u0026\u0026     cd /root/go/src/github.com/wvanbergen \u0026\u0026     git clone https://github.com/wvanbergen/kafka.git \u0026\u0026     cd /root/go/src/goim/router \u0026\u0026     go build \u0026\u0026     mkdir /root/soft/router \u0026\u0026     \\cp -rf router /root/soft/router/ \u0026\u0026     \\cp -rf router-example.conf /root/config/router.conf \u0026\u0026     ln -s /root/config/router.conf /root/soft/router/router.conf \u0026\u0026     \\cp -rf router-log.xml /root/soft/router/router-log.xml \u0026\u0026     cd /root/go/src/goim/comet \u0026\u0026     go build \u0026\u0026     mkdir /root/soft/comet \u0026\u0026     \\cp -rf comet /root/soft/comet/ \u0026\u0026     \\cp -rf comet-example.conf /root/config/comet.conf \u0026\u0026     ln -s /root/config/comet.conf /root/soft/comet/comet.conf \u0026\u0026     \\cp -rf comet-log.xml /root/soft/comet/comet-log.xml \u0026\u0026     cd /root/go/src/goim/logic/job \u0026\u0026     go build \u0026\u0026     mkdir /root/soft/job \u0026\u0026     \\cp -rf job /root/soft/job/ \u0026\u0026     \\cp -rf job-example.conf /root/config/job.conf \u0026\u0026     ln -s /root/config/job.conf /root/soft/job/job.conf \u0026\u0026     \\cp -rf job-log.xml /root/soft/job/job-log.xml \u0026\u0026     cd /root/go/src/goim/logic \u0026\u0026     go build \u0026\u0026     mkdir /root/soft/logic \u0026\u0026     \\cp -rf logic /root/soft/logic/ \u0026\u0026     \\cp -rf logic-example.conf /root/config/logic.conf \u0026\u0026     ln -s /root/config/logic.conf /root/soft/logic/logic.conf \u0026\u0026     \\cp -rf logic-log.xml /root/soft/logic/logic-log.xml \u0026\u0026     cd /root/go/src/goim/comet/client \u0026\u0026     go build \u0026\u0026     mkdir /root/soft/client \u0026\u0026     \\cp -rf client /root/soft/client/ \u0026\u0026     \\cp -rf client-example.conf /root/config/client.conf \u0026\u0026     ln -s /root/config/client.conf /root/soft/client/client.conf \u0026\u0026     \\cp -rf log.xml /root/soft/client/log.xml \u0026\u0026     cd /root/go/src/goim \u0026\u0026     \\cp -rf examples /root/soft \u0026\u0026     \\cp -rf benchmark /root/soft \u0026\u0026     cd /root/soft/examples/javascript \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/soft/benchmark/client \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/soft/benchmark/multi_push \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/soft/benchmark/push \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/soft/benchmark/push_room \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/soft/benchmark/push_rooms \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/soft/example \u0026\u0026     go build main.go \u0026\u0026     rm -rf main.go \u0026\u0026     cd /root/src \u0026\u0026     yum autoremove -y git go wget \u0026\u0026     rm -rf /root/src \u0026\u0026     rm -rf /root/go \u0026\u0026     chmod -R 777 /root/shell \u0026\u0026     ln -s /root/shell/start.sh /root/start.sh \u0026\u0026     ln -s /root/shell/stop.sh /root/stop.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/logs",
            "/root/config",
            "/root/soft/example"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "1999"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2181"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6971"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6972"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7170"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7171"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7172"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7270"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7271"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7371"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7372"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7373"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7374"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8090"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8092"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c /root/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}