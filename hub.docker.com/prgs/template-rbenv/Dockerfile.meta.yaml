MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Maintainer: Paulo RogÃ©rio "psilva.gomes.rogerio@gmail.com"
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get update -yq &&           apt-get upgrade -yq &&           apt-get install
      -yq --no-install-recommends             software-properties-common             apt-transport-https
      \t          wget             lsb-core             gnupg             ca-certificates
      \            curl             unzip             apt-utils"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main"
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://deb.nodesource.com/node_8.x bionic main" > /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb-src https://deb.nodesource.com/node_8.x bionic main" >> /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yq &&           apt-get install -yq             build-essential             libffi-dev             zlib1g-dev             libssl-dev             libreadline-dev             libyaml-dev             libpq-dev             libmysqlclient-dev             libsqlite3-dev             libssl-doc             sqlite3             libxml2-dev             libxslt1-dev             libgdbm-dev             libncurses5-dev             libcurl4-openssl-dev             libffi-dev             nodejs             net-tools             vim             git             apt-transport-https             vim             postgresql-10             dirmngr             gnupg             openssh-client             openjdk-8-jdk             nginx             autoconf             bison             libssl-dev             libyaml-dev             libreadline6-dev             zlib1g-dev             libncurses5-dev             libffi-dev             rsyslog             rsyslog-gnutls             nginx             wkhtmltopdf             libfontconfig1             libfontconfig1-dev             xvfb             fluxbox
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yq &&           apt-get -yq install             sudo             fonts-ipafont-gothic             xfonts-100dpi             xfonts-75dpi             xfonts-cyrillic             xfonts-scalable             x11-apps             ttf-ubuntu-font-family             libfreetype6             libfontconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yq &&           apt-get -yq install             openssl1.0             libssl1.0-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yq &&           apt-get -yq install             software-properties-common             python3-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -yq &&          apt-get -yq install     \t    xvfb     \t    firefox
      \            firefox-locale-pt     \t    google-chrome-stable     \t    default-jre"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-mark hold firefox
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ./scripts-bash
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts-bash
    - /scripts-bash
  - CmdLine:
    - chmod +x /scripts-bash/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /scripts-bash/x11_server.sh /root
    Name: run
    PrependShell: true
  - CmdLine:
    - /scripts-bash/install.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: RBENV_ROOT
      Value: /root/.rbenv
    Name: env
  - Env:
    - Key: PATH
      Value: '"$RBENV_ROOT/bin:$RBENV_ROOT/shims:$RBENV_ROOT/libexec:$RBENV_ROOT/plugins/ruby-build/bin:$PATH"'
    Name: env
  - CmdLine:
    - eval "$(rbenv init -)"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: volume
    Volumes:
    - /app
  - CmdLine:
    - /scripts-bash/clean.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/x11_server.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM       ubuntu:bionic
