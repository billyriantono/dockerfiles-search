{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "https://github.com/helderco/",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       ca-certificates       curl       librecode0       libmysqlclient-dev       libsqlite3-0       libxml2     \u0026\u0026 apt-get clean     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       autoconf       file       g++       gcc       libc-dev       make       pkg-config       re2c     \u0026\u0026 apt-get clean     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PHP_INI_DIR/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7 0E604491"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 for key in $GPG_KEYS; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "OPENSSL_VERSION=\"1.0.2k\"       \u0026\u0026 cd /tmp       \u0026\u0026 mkdir openssl       \u0026\u0026 curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" -o openssl.tar.gz       \u0026\u0026 curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc\" -o openssl.tar.gz.asc       \u0026\u0026 gpg --verify openssl.tar.gz.asc       \u0026\u0026 tar -xzf openssl.tar.gz -C openssl --strip-components=1       \u0026\u0026 cd /tmp/openssl       \u0026\u0026 ./config \u0026\u0026 make \u0026\u0026 make install       \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "5.3.29"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps=\"                 autoconf2.13                 libcurl4-openssl-dev                 libreadline6-dev                 librecode-dev                 libsqlite3-dev                 libssl-dev                 libxml2-dev                 xz-utils       \"       \u0026\u0026 set -x       \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*       \u0026\u0026 curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz       \u0026\u0026 curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc       \u0026\u0026 gpg --verify php.tar.xz.asc       \u0026\u0026 mkdir -p /usr/src/php       \u0026\u0026 tar -xof php.tar.xz -C /usr/src/php --strip-components=1       \u0026\u0026 rm php.tar.xz*       \u0026\u0026 cd /usr/src/php       \u0026\u0026 ./configure             --with-config-file-path=\"$PHP_INI_DIR\"             --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"             --enable-fpm             --with-fpm-user=www-data             --with-fpm-group=www-data             --disable-cgi             --enable-mysqlnd             --with-mysql             --with-curl             --with-openssl=/usr/local/ssl             --with-readline             --with-recode             --with-zlib       \u0026\u0026 make -j\"$(nproc)\"       \u0026\u0026 make install       \u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; }       \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps       \u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-*",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 cd /usr/local/etc   \u0026\u0026 if [ -d php-fpm.d ]; then     sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf \u003e /dev/null;     cp php-fpm.d/www.conf.default php-fpm.d/www.conf;   else     mkdir php-fpm.d;     cp php-fpm.conf.default php-fpm.d/www.conf;     {       echo '[global]';       echo 'include=etc/php-fpm.d/*.conf';     } | tee php-fpm.conf;   fi   \u0026\u0026 {     echo '[global]';     echo 'error_log = /proc/self/fd/2';     echo;     echo '[www]';     echo '; if we send this to /proc/self/fd/1, it never appears';     echo 'access.log = /proc/self/fd/2';     echo;     echo '; Ensure worker stdout and stderr are sent to the main error log.';     echo 'catch_workers_output = yes';   } | tee php-fpm.d/docker.conf   \u0026\u0026 {     echo '[global]';     echo 'daemonize = no';     echo;     echo '[www]';     echo 'listen = 9000';   } | tee php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"\" /usr/local/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}