{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"helder\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/etc/php/disabled"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-install       libfreetype6-dev       libjpeg62-turbo-dev       libpng-dev       imagemagick       ghostscript   \u0026\u0026 docker-php-ext-install       mysqli       pdo_mysql       mbstring   \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-install zlib1g-dev libicu-dev g++ \u0026\u0026     docker-php-ext-configure intl \u0026\u0026     docker-php-ext-install intl \u0026\u0026     apt-purge g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USE_XDEBUG",
              "Value": "no"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "docker-php-pecl-install xdebug-$XDEBUG_VERSION \u0026\u0026     echo \"xdebug.remote_enable=on\\nxdebug.remote_connect_back=on\" \u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026     mkdir -p /usr/local/etc/php/xdebug.d \u0026\u0026     mv /usr/local/etc/php/conf.d/*xdebug.ini /usr/local/etc/php/xdebug.d/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-install ssmtp \u0026\u0026     groupadd -g 500 ssmtp \u0026\u0026     chown :ssmtp /usr/sbin/ssmtp \u0026\u0026     chmod g+s /usr/sbin/ssmtp \u0026\u0026     echo \"sendmail_path = /usr/sbin/ssmtp -t\" \u003e /usr/local/etc/php/conf.d/sendmail.ini \u0026\u0026     mv /etc/ssmtp/ssmtp.conf /etc/ssmtp/ssmtp.conf~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 curl -sSLo /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture | awk -F- '{ print $NF }')\"   \u0026\u0026 chmod +x /usr/local/bin/gosu   \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-install git rsync unzip zlib1g-dev \u0026\u0026     docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/var/www/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "vendor/bin:$COMPOSER_HOME/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php --       --install-dir=/usr/local/bin       --filename=composer       --version=${COMPOSER_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $COMPOSER_HOME/cache \u0026\u0026     chown -R www-data:www-data /var/www \u0026\u0026     echo \"phar.readonly = off\" \u003e /usr/local/etc/php/conf.d/phar.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$COMPOSER_HOME/cache"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/*.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/local/etc/php \u0026\u0026 cp prod.ini conf.d/environment.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e '/^access.log/ s/^/;/' /usr/local/etc/php-fpm.d/docker.conf \u0026\u0026     sed -i -e '/^listen =/ s/^/;/' /usr/local/etc/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/^pm = dynamic/pm = ondemand/\" /usr/local/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.d",
            "/docker-entrypoint-init.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}