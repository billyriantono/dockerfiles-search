MetaArgs: null
Stages:
- BaseName: ubuntu:yakkety
  Commands:
  - Maintainer: chukin <admin@kusumpharm.com>
    Name: maintainer
  - Env:
    - Key: php_conf
      Value: /etc/php/7.0/fpm/php.ini
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php/7.0/fpm/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_pool_conf
      Value: /etc/php/7.0/fpm/pool.d/www.conf
    Name: env
  - Env:
    - Key: php_cli_conf
      Value: /etc/php/7.0/cli/php.ini
    Name: env
  - CmdLine:
    - "apt-get update &&     apt-get install --no-install-recommends --no-install-suggests
      -y     ca-certificates \tnginx \tgettext-base \tapt-transport-https     bash
      \    software-properties-common     openssh-client     wget     supervisor     curl
      \    git     cron     libxml2-dev     php-fpm     php-mcrypt     php-common
      \    php-gd     php-intl     php-memcache     php-xsl     php-curl     php-json
      \    php-gearman     php-apcu     php-sybase     php-xml     php-pear     php-dev
      \    php7.0-mbstring     php-zip     gnupg2     gcc     musl-dev     gearman-job-server
      \    libgearman-dev     gcc     g++     nano     rsync     build-essential     libffi-dev
      &&    mkdir -p /etc/nginx &&     mkdir -p /run/nginx &&     mkdir -p /var/log/supervisor
      &&    mkdir -p /run/php &&    php -r \"copy('https://getcomposer.org/installer',
      'composer-setup.php');\" &&     php composer-setup.php --install-dir=/usr/bin
      --filename=composer &&     php -r \"unlink('composer-setup.php');\""
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.10/prod.list > /etc/apt/sources.list.d/mssql-release.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - ACCEPT_EULA=Y apt-get install -y msodbcsql
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y unixodbc-dev nodejs gitlab-ci-multi-runner
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install sqlsrv pdo_sqlsrv
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"extension= pdo_sqlsrv.so\" >> ${php_conf} && \techo \"extension= sqlsrv.so\"
      >> ${php_conf} && \techo \"extension= pdo_sqlsrv.so\" >> ${php_cli_conf} &&
      \    echo \"extension= sqlsrv.so\" >> ${php_cli_conf}"
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - rm -Rf /etc/cron.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - mkdir -p /etc/nginx/sites-available/ && mkdir -p /etc/nginx/sites-enabled/ &&
      mkdir -p /etc/nginx/ssl/ && mkdir -p /var/www/html/
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /etc/nginx/sites-enabled/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/sites-available/default.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i         -e "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g"         -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize
      = 100M/g"         -e "s/post_max_size\s*=\s*8M/post_max_size = 100M/g"         -e
      "s/variables_order = \"GPCS\"/variables_order = \"EGPCS\"/g"         -e "s/;date.timezone
      =/date.timezone = \"Europe\/Kiev\"/g"         ${php_conf} &&     sed -i         -e
      "s/;daemonize\s*=\s*yes/daemonize = no/g"         ${fpm_conf} &&     sed -i         -e
      "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g"         -e
      "s/pm.max_children = 4/pm.max_children = 4/g"         -e "s/pm.start_servers
      = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g"         -e
      "s/pm.max_requests = 500/pm.max_requests = 200/g"         -e "s/;listen.mode
      = 0660/listen.mode = 0666/g"         -e "s/^;clear_env = no$/clear_env = no/"         -e
      "s/;realpath_cache_size = 16k/realpath_cache_size = 4096k/g"         ${fpm_pool_conf}
      &&     ln -s /etc/php/7.0/fpm/php.ini /etc/php/7.0/fpm/conf.d/php.ini &&     find
      /etc/php/7.0/fpm/conf.d/ -name "*.ini" -exec sed -i -re 's/^(\s*)#(.*)/\1;\2/g'
      {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower gulp
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/start.sh
    - /start.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/php-watcher.sh
    - /usr/bin/php-watcher.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/enable_xdebug.sh
    - /enable_xdebug.sh
  - CmdLine:
    - chmod 755 /start.sh && chmod 755 /usr/bin/php-watcher.sh && chmod 755 /enable_xdebug.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www/html
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:yakkety
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:yakkety
