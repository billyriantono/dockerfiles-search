MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - CmdLine:
    - "apt-get -y update \t&& apt-get -y upgrade \t&& apt-get install -y software-properties-common
      \t&& add-apt-repository ppa:maxmind/ppa \t&& apt-get -y update \t&& apt-get
      install -y \tlibpcre3 \tlibpcre3-dev \tlibssl-dev \tlibperl4-corelibs-perl \tlibmaxminddb0
      libmaxminddb-dev mmdb-bin \tg++ \tcmake \tunzip \twget \tcurl \t&& apt-get clean
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/krallin/tini/releases/download/v0.18.0/tini -O /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - "wget https://github.com/mongodb/mongo-c-driver/releases/download/1.13.0/mongo-c-driver-1.13.0.tar.gz
      \t&& tar -xvzf mongo-c-driver-1.13.0.tar.gz \t&& rm mongo-c-driver-1.13.0.tar.gz
      \t&& cd mongo-c-driver-1.13.0 \t&& mkdir cmake-build \t&& cd cmake-build \t&&
      cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF .. \t&& make \t&& make install
      \t&& cd ../.. \t&& rm -r mongo-c-driver-1.13.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /modules \t&& cd /modules \t&& wget https://github.com/leev/ngx_http_geoip2_module/archive/3.2.tar.gz
      \t&& tar -xvzf 3.2.tar.gz \t&& rm 3.2.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://github.com/openresty/openresty/releases/download/v1.13.6.1/openresty-1.13.6.1.tar.gz
      \t&& tar -xvf openresty-1.13.6.1.tar.gz \t&& rm openresty-1.13.6.1.tar.gz \t&&
      cd openresty-1.13.6.1/ \t&& ./configure -j2 \t\t--add-module=/modules/ngx_http_geoip2_module-3.2
      \t\t--with-http_v2_module \t\t--with-ipv6 \t&& make -j2 \t&& make install \t&&
      cd .. \t&& rm -r openresty-1.13.6.1"
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_CBSON_SHA
      Value: 6af9aee63895e3a538a879a155ecdea0b7325941
    Name: env
  - CmdLine:
    - "wget https://github.com/isage/lua-cbson/archive/$LUA_CBSON_SHA.zip \t&& unzip
      $LUA_CBSON_SHA.zip \t&& rm $LUA_CBSON_SHA.zip \t&& cd lua-cbson-$LUA_CBSON_SHA
      \t&& mkdir build \t&& cd build \t&& cmake .. \t&& make \t&& make install \t&&
      ldconfig \t&& cd ../.. \t&& rm -r lua-cbson-$LUA_CBSON_SHA"
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_MOONGOO_SHA
      Value: ca544d1ba0dda0c705bfe1123733bff2cd43633a
    Name: env
  - CmdLine:
    - "wget https://github.com/isage/lua-resty-moongoo/archive/$LUA_MOONGOO_SHA.zip
      \t&& unzip $LUA_MOONGOO_SHA.zip \t&& rm $LUA_MOONGOO_SHA.zip \t&& cp -r lua-resty-moongoo-$LUA_MOONGOO_SHA/lib/resty/*
      /usr/local/openresty/lualib/resty \t&& ls -lah /usr/local/openresty/lualib/resty
      \t&& rm -r lua-resty-moongoo-$LUA_MOONGOO_SHA"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget http://luarocks.org/releases/luarocks-2.0.13.tar.gz \t&& tar -xzvf luarocks-2.0.13.tar.gz
      \t&& rm luarocks-2.0.13.tar.gz \t&& cd luarocks-2.0.13/ \t&& ./configure --prefix=/usr/local/openresty/luajit
      \t\t--with-lua=/usr/local/openresty/luajit/ \t\t--lua-suffix=jit \t\t--with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1
      \t&& make \t&& make install"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/local/openresty/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/luajit/bin:${PATH}"'
    Name: env
  - CmdLine:
    - opm get thibaultcha/lua-resty-mlcache
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install lua-resty-auto-ssl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - http://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz
    - /var/lib/nginx/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz
    - /var/lib/nginx/
  - CmdLine:
    - "cd /var/lib/nginx/ \t&& tar --strip-components=1 -xzf GeoLite2-ASN.tar.gz \t&&
      rm GeoLite2-ASN.tar.gz \t&& tar --strip-components=1 -xzf GeoLite2-City.tar.gz
      \t&& rm GeoLite2-City.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \t&& ln -sf /dev/stderr
      /usr/local/openresty/nginx/logs/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - openresty
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
