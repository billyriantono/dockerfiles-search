MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"v.la@live.cn"'
    Name: label
  - Env:
    - Key: SERVICE_NAME
      Value: redis
    - Key: SERVICE_USER
      Value: redis
    - Key: SERVICE_GROUP
      Value: redis
    - Key: SERVICE_UID
      Value: "1000"
    - Key: SERVICE_GID
      Value: "1000"
    - Key: SERVICE_CONF
      Value: /etc/redis/redis.conf
    - Key: REDIS_VERSION
      Value: 5.0.2
    - Key: REDIS_DATA_DIR
      Value: /var/lib/redis
    - Key: REDIS_LOG_DIR
      Value: /var/log/redis
    Name: env
  - Labels:
    - Key: description
      Value: '"redis built from source"'
    - Key: redis
      Value: '"redis ${SERVICE_VERSION}"'
    - Key: maintainer
      Value: '"JohnWu <v.la@live.cn>"'
    Name: label
  - Key: REDIS_DOWNLOAD_URL
    Name: arg
    Value: http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz
  - Key: REDIS_DOWNLOAD_SHA
    Name: arg
    Value: 937dde6164001c083e87316aa20dad2f8542af089dfcb1cbb64f9c8300cd00ed
  - CmdLine:
    - echo "https://mirrors.ustc.edu.cn/alpine/latest-stable/main" > /etc/apk/repositories
      &&  echo "https://mirrors.ustc.edu.cn/alpine/latest-stable/community" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk -U upgrade && apk add --update --no-cache su-exec>=0.2 tzdata && apk add
      --no-cache --virtual .build-deps   gcc   jemalloc-dev   coreutils   linux-headers
      \  make   musl-dev   curl && wget -cq ${REDIS_DOWNLOAD_URL} -O /tmp/redis-${REDIS_VERSION}.tar.gz
      && echo \"$REDIS_DOWNLOAD_SHA /tmp/redis-${REDIS_VERSION}.tar.gz\" | sha256sum
      -c - && mkdir -p /tmp/redis && tar -zxf /tmp/redis-${REDIS_VERSION}.tar.gz --strip-components=1
      -C /tmp/redis && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /tmp/redis/src/server.h
      && sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /tmp/redis/src/server.h
      && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /tmp/redis/src/server.h
      && cd  /tmp/redis && make -j $(getconf _NPROCESSORS_ONLN) && make install &&
      runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local
      \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" && mkdir -p /etc/redis/
      && cp redis.conf ${SERVICE_CONF} && sed 's/^# unixsocket \\/tmp\\/redis.sock/unixsocket
      \\/run\\/redis\\/redis.sock/' -i ${SERVICE_CONF} && sed 's/^# unixsocketperm
      700/unixsocketperm 777/' -i ${SERVICE_CONF} && addgroup -g ${SERVICE_GID} ${SERVICE_GROUP}
      && adduser -g \"${SERVICE_NAME} user\" -D -h ${REDIS_DATA_DIR} -G ${SERVICE_GROUP}
      -s /sbin/nologin -u ${SERVICE_UID} ${SERVICE_USER} && apk del .build-deps &&
      rm -rf       /tmp/*       /var/cache/apk/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /run/redis ${REDIS_LOG_DIR} ${REDIS_DATA_DIR} && chmod -R 0755 ${REDIS_LOG_DIR}
      /run/redis   && chown -R ${SERVICE_USER}:${SERVICE_GROUP} ${REDIS_DATA_DIR}
      ${REDIS_LOG_DIR} ${SERVICE_CONF} /run/redis /etc/redis/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 6379/tcp
  - Name: volume
    Volumes:
    - ${REDIS_DATA_DIR}
  - Name: workdir
    Path: ${REDIS_DATA_DIR}
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - redis-server
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
