{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"v.la@live.cn\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_NAME",
              "Value": "redis"
            },
            {
              "Key": "SERVICE_USER",
              "Value": "redis"
            },
            {
              "Key": "SERVICE_GROUP",
              "Value": "redis"
            },
            {
              "Key": "SERVICE_UID",
              "Value": "1000"
            },
            {
              "Key": "SERVICE_GID",
              "Value": "1000"
            },
            {
              "Key": "SERVICE_CONF",
              "Value": "/etc/redis/redis.conf"
            },
            {
              "Key": "REDIS_VERSION",
              "Value": "5.0.2"
            },
            {
              "Key": "REDIS_DATA_DIR",
              "Value": "/var/lib/redis"
            },
            {
              "Key": "REDIS_LOG_DIR",
              "Value": "/var/log/redis"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"redis built from source\""
            },
            {
              "Key": "redis",
              "Value": "\"redis ${SERVICE_VERSION}\""
            },
            {
              "Key": "maintainer",
              "Value": "\"JohnWu \u003cv.la@live.cn\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "REDIS_DOWNLOAD_URL",
          "Name": "arg",
          "Value": "http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz"
        },
        {
          "Key": "REDIS_DOWNLOAD_SHA",
          "Name": "arg",
          "Value": "937dde6164001c083e87316aa20dad2f8542af089dfcb1cbb64f9c8300cd00ed"
        },
        {
          "CmdLine": [
            "echo \"https://mirrors.ustc.edu.cn/alpine/latest-stable/main\" \u003e /etc/apk/repositories \u0026\u0026  echo \"https://mirrors.ustc.edu.cn/alpine/latest-stable/community\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk -U upgrade \u0026\u0026 apk add --update --no-cache su-exec\u003e=0.2 tzdata \u0026\u0026 apk add --no-cache --virtual .build-deps   gcc   jemalloc-dev   coreutils   linux-headers   make   musl-dev   curl \u0026\u0026 wget -cq ${REDIS_DOWNLOAD_URL} -O /tmp/redis-${REDIS_VERSION}.tar.gz \u0026\u0026 echo \"$REDIS_DOWNLOAD_SHA /tmp/redis-${REDIS_VERSION}.tar.gz\" | sha256sum -c - \u0026\u0026 mkdir -p /tmp/redis \u0026\u0026 tar -zxf /tmp/redis-${REDIS_VERSION}.tar.gz --strip-components=1 -C /tmp/redis \u0026\u0026 grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /tmp/redis/src/server.h \u0026\u0026 sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /tmp/redis/src/server.h \u0026\u0026 grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /tmp/redis/src/server.h \u0026\u0026 cd  /tmp/redis \u0026\u0026 make -j $(getconf _NPROCESSORS_ONLN) \u0026\u0026 make install \u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \u0026\u0026 mkdir -p /etc/redis/ \u0026\u0026 cp redis.conf ${SERVICE_CONF} \u0026\u0026 sed 's/^# unixsocket \\/tmp\\/redis.sock/unixsocket \\/run\\/redis\\/redis.sock/' -i ${SERVICE_CONF} \u0026\u0026 sed 's/^# unixsocketperm 700/unixsocketperm 777/' -i ${SERVICE_CONF} \u0026\u0026 addgroup -g ${SERVICE_GID} ${SERVICE_GROUP} \u0026\u0026 adduser -g \"${SERVICE_NAME} user\" -D -h ${REDIS_DATA_DIR} -G ${SERVICE_GROUP} -s /sbin/nologin -u ${SERVICE_UID} ${SERVICE_USER} \u0026\u0026 apk del .build-deps \u0026\u0026 rm -rf       /tmp/*       /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/redis ${REDIS_LOG_DIR} ${REDIS_DATA_DIR} \u0026\u0026 chmod -R 0755 ${REDIS_LOG_DIR} /run/redis   \u0026\u0026 chown -R ${SERVICE_USER}:${SERVICE_GROUP} ${REDIS_DATA_DIR} ${REDIS_LOG_DIR} ${SERVICE_CONF} /run/redis /etc/redis/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6379/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${REDIS_DATA_DIR}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${REDIS_DATA_DIR}"
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "redis-server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}