{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "JohnWu \"v.la@live.cn\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 1ABFE185 \u0026\u0026 apt-get update \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y libpcre++0 zlib1g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_MODULE_VERSION",
              "Value": "0.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.0.2h"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_VERSION",
              "Value": "2.0.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFIG",
              "Value": "\"    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-mail     --with-mail_ssl_module     --with-file-aio     --with-ipv6     --with-http_v2_module     --with-openssl=/usr/src/openssl-$OPENSSL_VERSION     --add-module=/usr/src/ngx_devel_kit-0.3.0     --add-module=/usr/src/nginx_upstream_check_module-master     --add-module=/usr/src/lua-nginx-module-$LUA_MODULE_VERSION     --add-module=/usr/src/ngx_cache_purge-2.3 \t\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 buildDeps=\" ca-certificates gcc libpcre++-dev make curl patch unzip zlib1g-dev \" \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y $buildDeps \u0026\u0026 mkdir -p /tmp \u0026\u0026 cd /tmp \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx-$NGINX_VERSION.tar.gz \u0026\u0026 curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz -o ngx_devel_kit-0.3.0.tar.gz \u0026\u0026 curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$LUA_MODULE_VERSION.tar.gz -o lua-nginx-module-$LUA_MODULE_VERSION.tar.gz \u0026\u0026 curl -fSL https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz -o ngx_cache_purge-2.3.tar.gz \u0026\u0026 curl -fSL https://github.com/yaoweibin/nginx_upstream_check_module/archive/master.zip -o nginx_upstream_check_module.zip \u0026\u0026 curl -fSL http://luajit.org/download/LuaJIT-$LUAJIT_VERSION.tar.gz -o LuaJIT-$LUAJIT_VERSION.tar.gz \u0026\u0026 curl -fSL https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz -o openssl-$OPENSSL_VERSION.tar.gz \u0026\u0026 mkdir -p /usr/src \u0026\u0026 tar -zxC /usr/src -f nginx-$NGINX_VERSION.tar.gz \u0026\u0026 tar -zxC /usr/src -f ngx_devel_kit-0.3.0.tar.gz \u0026\u0026 tar -zxC /usr/src -f lua-nginx-module-$LUA_MODULE_VERSION.tar.gz \u0026\u0026 tar -zxC /usr/src -f ngx_cache_purge-2.3.tar.gz \u0026\u0026 unzip -ox nginx_upstream_check_module.zip -d /usr/src \u0026\u0026 tar -zxC /usr/src -f LuaJIT-$LUAJIT_VERSION.tar.gz \u0026\u0026 tar -zxC /usr/src -f openssl-$OPENSSL_VERSION.tar.gz \u0026\u0026 addgroup --system nginx \u0026\u0026 adduser --system --disabled-password --disabled-login --home /var/www/nginx -uid 1000 --shell /sbin/nologin nginx \u0026\u0026 mkdir -p /var/www/nginx \u0026\u0026 chown nginx:nginx -R /var/www/nginx \u0026\u0026 usermod -aG nginx nginx \u0026\u0026 cd /usr/src/LuaJIT-$LUAJIT_VERSION \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 export LUAJIT_LIB=/usr/local/lib \u0026\u0026 export LUAJIT_INC=/usr/local/include/luajit-2.0 \u0026\u0026 cd /usr/src/nginx-$NGINX_VERSION \u0026\u0026 patch -p0 \u003c /usr/src/nginx_upstream_check_module-master/check_1.9.2+.patch \u0026\u0026 mkdir -p /var/log/nginx \u0026\u0026 mkdir -p /var/cache/nginx \u0026\u0026 ./configure $CONFIG \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 ldconfig \u0026\u0026 rm -rf /etc/nginx/html/ \u0026\u0026 mkdir -p /etc/nginx/conf.d/ \u0026\u0026 mkdir -p /usr/share/nginx/html/ \u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/ \u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/ \u0026\u0026 strip /usr/sbin/nginx* \u0026\u0026 cd / \u0026\u0026 apt-get purge --auto-remove -y $buildDeps \u0026\u0026 rm -rf /usr/src/* \u0026\u0026 rm -rf /tmp* \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test.conf",
            "/etc/nginx/test.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}