MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Env:
    - Key: PYTHONPATH
      Value: /opt/caffe/python
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/opt/caffe/.build_release/tools
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y  bc  cmake  curl  gcc-4.6  g++-4.6  gcc-4.6-multilib  g++-4.6-multilib  gfortran  git  libprotobuf-dev  libleveldb-dev  libsnappy-dev  libopencv-dev  libboost-all-dev  libhdf5-serial-dev  liblmdb-dev  libjpeg62  libfreeimage-dev  libatlas-base-dev  pkgconf  protobuf-compiler  python-dev  python-pip  unzip  wget
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.6 30 &&  update-alternatives
      --install /usr/bin/c++ c++ /usr/bin/g++-4.6 30 &&  update-alternatives --install
      /usr/bin/gcc gcc /usr/bin/gcc-4.6 30 &&  update-alternatives --install /usr/bin/g++
      g++ /usr/bin/g++-4.6 30
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && git clone https://github.com/BVLC/caffe.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz &&  tar
      zxvf glog-0.3.3.tar.gz &&  cd /opt/glog-0.3.3 &&  ./configure &&  make &&  make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&  wget https://github.com/schuhschuh/gflags/archive/master.zip &&  unzip
      master.zip &&  cd /opt/gflags-master &&  mkdir build &&  cd /opt/gflags-master/build
      &&  export CXXFLAGS="-fPIC" &&  cmake .. &&  make VERBOSE=1 &&  make &&  make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/caffe &&  cp Makefile.config.example Makefile.config &&  echo "CPU_ONLY
      := 1" >> Makefile.config &&  echo "CXX := /usr/bin/g++-4.6" >> Makefile.config
      &&  sed -i 's/CXX :=/CXX ?=/' Makefile &&  make all
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - caffe-ld-so.conf
    - /etc/ld.so.conf.d/
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/caffe &&  (for req in $(cat python/requirements.txt); do pip install
      $req; done) && easy_install numpy &&  (for req in $(cat python/requirements.txt);
      do pip install $req; done) && easy_install pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy /usr/include/python2.7/numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/caffe && make pycaffe
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/caffe && make test && make runtest
    Name: run
    PrependShell: true
  - CmdLine:
    - ln /dev/null /dev/raw1394
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.ssh/ && touch /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:root' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/caffe -s /bin/bash caffe  && echo "caffe:caffe" | chpasswd  &&
      mkdir /home/caffe/.ssh  && chmod 700 /home/caffe/.ssh  && cp /root/.ssh/authorized_keys
      /home/caffe/.ssh  && chmod 600 /home/caffe/.ssh/authorized_keys  && chown -R
      caffe:caffe /home/caffe/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "caffe ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=$PATH:/opt/caffe/.build_release/tools' >> /home/caffe/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'PYTHONPATH=$PYTHONPATH/opt/caffe/python' >> /home/caffe/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - chown caffe:caffe -R /opt/caffe/
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/chainer -s /bin/bash chainer  && echo "chainer:chainer"
      | chpasswd  && mkdir /home/chainer/.ssh  && chmod 700 /home/chainer/.ssh  &&
      cp /root/.ssh/authorized_keys /home/chainer/.ssh  && chmod 600 /home/chainer/.ssh/authorized_keys  &&
      chown -R chainer:chainer /home/chainer/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "chainer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scikit-learn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install chainer
    Name: run
    PrependShell: true
  - Name: user
    User: chainer
  - Name: workdir
    Path: /home/chainer
  - CmdLine:
    - 'git clone -b v.1.1.0 https://github.com/pfnet/chainer.git # version 1.1.0'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
