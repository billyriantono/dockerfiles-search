MetaArgs: null
Stages:
- As: vault
  BaseName: rust:1.40
  Commands:
  - Env:
    - Key: VAULT_VERSION
      Value: '"v2.12.0b"'
    Name: env
  - Env:
    - Key: URL
      Value: '"https://github.com/dani-garcia/bw_web_builds/releases/download/$VAULT_VERSION/bw_web_$VAULT_VERSION.tar.gz"'
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: LANG
    Name: arg
    Value: C.UTF-8
  - Key: TZ
    Name: arg
    Value: UTC
  - Key: TERM
    Name: arg
    Value: xterm-256color
  - CmdLine:
    - apt-get update     && apt-get install -y         --no-install-recommends         curl         tar
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /web-vault
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /web-vault
  - Name: shell
    Shell:
    - /bin/bash
    - -o
    - nounset
    - -o
    - pipefail
    - -o
    - errexit
    - -c
  - CmdLine:
    - curl -L $URL | tar xz
    Name: run
    PrependShell: true
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  From:
    Image: rust:1.40
  Name: vault
  Platform: ""
  SourceCode: FROM rust:1.40 as vault
- As: build
  BaseName: rust:1.40
  Commands:
  - Key: DB
    Name: arg
    Value: mysql
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: LANG
    Name: arg
    Value: C.UTF-8
  - Key: TZ
    Name: arg
    Value: UTC
  - Key: TERM
    Name: arg
    Value: xterm-256color
  - CmdLine:
    - rustup set profile minimal
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     --no-install-recommends     libmariadb-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - USER=root cargo new --bin /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./Cargo.*
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rust-toolchain
    - ./rust-toolchain
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./build.rs
    - ./build.rs
  - CmdLine:
    - cargo build --features ${DB} --release
    Name: run
    PrependShell: true
  - CmdLine:
    - find . -not -path "./target*" -delete
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - touch src/main.rs
    Name: run
    PrependShell: true
  - CmdLine:
    - cargo build --features ${DB} --release
    Name: run
    PrependShell: true
  From:
    Image: rust:1.40
  Name: build
  Platform: ""
  SourceCode: FROM rust:1.40 as build
- BaseName: debian:buster-slim
  Commands:
  - Env:
    - Key: ROCKET_ENV
      Value: '"staging"'
    Name: env
  - Env:
    - Key: ROCKET_PORT
      Value: "80"
    Name: env
  - Env:
    - Key: ROCKET_WORKERS
      Value: "10"
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     --no-install-recommends     openssl     ca-certificates     curl     libmariadbclient-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "3012"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Rocket.toml
    - .
  - Chown: ""
    From: vault
    Name: copy
    SourcesAndDest:
    - /web-vault
    - ./web-vault
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - app/target/release/bitwarden_rs
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/healthcheck.sh
    - ./healthcheck.sh
  - Health:
      Interval: 30000000000
      Test:
      - CMD-SHELL
      - sh healthcheck.sh || exit 1
      Timeout: 3000000000
    Name: healthcheck
  - Name: workdir
    Path: /
  - CmdLine:
    - /bitwarden_rs
    Name: cmd
    PrependShell: false
  From:
    Image: debian:buster-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:buster-slim
