MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Warren Spits <warren@spits.id.au>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Preconfigured development environment"'
    Name: label
  - Key: user
    Name: arg
    Value: '"warren"'
  - Key: fullname
    Name: arg
    Value: '"Warren Spits"'
  - Key: email
    Name: arg
    Value: '"warren@spits.id.au"'
  - Key: timezone
    Name: arg
    Value: '"Australia/Melbourne"'
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y xz-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y openssh-server tmux zsh curl man-db sudo iputils-ping locales
      \t               tzdata mosh xsel xclip htop strace ltrace lsof dialog vim-common"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y aptitude software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'docker.io docker.io/restart boolean true' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker.io docker-compose                        ruby2.5 ruby2.5-dev                        nodejs
      npm                        python3-pip python3                        python-pip
      python                        build-essential cmake autoconf exuberant-ctags
      silversearcher-ag
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ncurses-dev libsqlite3-dev tig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y golang golang-go.tools golang-1.10
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby2.5 400
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ca-certificates/
    - /usr/local/share/ca-certificates/
  - CmdLine:
    - update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:neovim-ppa/unstable &&   apt-get update && apt-get install
      -y neovim &&   update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60
      &&   update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60 &&   update-alternatives
      --install /usr/bin/editor editor /usr/bin/nvim 60
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     openssl libcurl4-openssl-dev libxml2
      libssl-dev libxml2-dev pinentry-curses
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:git-core/ppa   && apt-get update && apt-get install -y
      git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - rm /etc/update-motd.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/$timezone /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - locale.gen
    - /etc/
  - CmdLine:
    - locale-gen && update-locale LANG=en_AU.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser $user --disabled-password --shell /bin/zsh --gecos "$fullname,,,,$email"
      &&   usermod $user -G sudo,users -a &&   passwd -d $user
    Name: run
    PrependShell: true
  - CmdLine:
    - perl -i -pe 's|(%sudo.*\s+)ALL$|$1NOPASSWD:ALL|g' /etc/sudoers   && echo 'Defaults
      env_keep = "http_proxy https_proxy ftp_proxy DISPLAY XAUTHORITY"' > /etc/sudoers.d/preserve_envÂ¬
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - home/
    - /home/$user/
  - CmdLine:
    - chown -R $user:$user /home/$user
    Name: run
    PrependShell: true
  - Name: user
    User: $user
  - CmdLine:
    - git config --global user.name "$fullname"   && git config --global user.email
      "$email"
    Name: run
    PrependShell: true
  - CmdLine:
    - umask g-w,o-w; git clone --depth 1 https://github.com/robbyrussell/oh-my-zsh.git
      ~/.oh-my-zsh &&   git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
      ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting &&   git clone https://github.com/Treri/fzf-zsh.git
      ~/.oh-my-zsh/custom/plugins/fzf-zsh &&   cp ~/.oh-my-zsh/templates/zshrc.zsh-template
      ~/.zshrc &&   sed -i 's/^ZSH_THEME=.*/ZSH_THEME="blinks"/' ~/.zshrc &&   perl
      -0pe 's/^(plugins=)\(.*\)/$1(gitfast gitignore ruby golang node docker zsh-syntax-highlighting
      fzf-zsh)/ms' -i ~/.zshrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zsh_custom/
    - /home/$user/.oh-my-zsh/custom
  - CmdLine:
    - git clone https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --bin
      &&   ln -s ~/.fzf ~/.oh-my-zsh/custom/plugins/fzf &&   git clone https://github.com/tmux-plugins/tpm
      ~/.tmux/plugins/tpm &&   ~/.tmux/plugins/tpm/bin/install_plugins &&   pip3 install
      setuptools && pip3 install neovim &&   pip install setuptools && pip install
      neovim &&   curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs   https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash     &&
      NVM_DIR=/home/$user/.nvm && . $NVM_DIR/nvm.sh     && nvm install --lts node     &&
      npm config set cafile /etc/ssl/certs/ca-certificates.crt     && npm install
      -g --upgrade npm
    Name: run
    PrependShell: true
  - CmdLine:
    - NVM_DIR=/home/$user/.nvm && . $NVM_DIR/nvm.sh     && npm install -g yarn eslint_d
      javascript-typescript-langserver import-js
    Name: run
    PrependShell: true
  - Key: GOPATH
    Name: arg
    Value: /home/$user/go
  - CmdLine:
    - (echo export GOPATH=$GOPATH &&   echo export PATH=\$GOPATH/bin:\$PATH &&   echo
      export CDPATH=.:$GOPATH/src &&   echo export FZF_DEFAULT_COMMAND=\'ag --nocolor
      -g \"\"\' ) >> ~/.zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - "go get -v             github.com/github/hub             github.com/nsf/gocode
      \            github.com/alecthomas/gometalinter             golang.org/x/tools/cmd/goimports
      \t    golang.org/x/tools/cmd/guru             golang.org/x/tools/cmd/gorename
      \            github.com/golang/lint/golint             github.com/kisielk/errcheck
      \            github.com/jstemmer/gotags             github.com/rogpeppe/godef
      \            github.com/klauspost/asmfmt/cmd/asmfmt             github.com/fatih/motion
      \t    github.com/zmb3/gogetdoc \t    github.com/josharian/impl"
    Name: run
    PrependShell: true
  - CmdLine:
    - nvim +PlugInstall +UpdateRemotePlugins +qa &&   nvim +GoInstallBinaries +qa
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b v1.3.0 https://github.com/lastpass/lastpass-cli.git ~/build/lastpass-cli
      &&   cd ~/build/lastpass-cli && make
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - cd /home/$user/build/lastpass-cli && make PREFIX=/usr/local install
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R $user:$user /home/$user/.oh-my-zsh/custom
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
