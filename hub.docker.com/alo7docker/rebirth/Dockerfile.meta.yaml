MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Black-Hole<158blackhole@gmail.com>
    Name: maintainer
  - CmdLine:
    - sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yq
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get install -yq tzdata --fix-missing
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq x11vnc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq lsof
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq socat
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libx11-xcb1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libxrandr2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libasound2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libpangocairo-1.0-0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libatk1.0-0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libatk-bridge2.0-0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libgtk-3-0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libnss3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq libxss1
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq google-chrome-stable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yq ttf-wqy-microhei ttf-wqy-zenhei
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen zh_CN.UTF-8   && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen zh_CN.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: zh_CN.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: zh_CN:zh
    Name: env
  - Env:
    - Key: LC_ALL
      Value: zh_CN.UTF-8
    Name: env
  - Key: MATERIAL_URL
    Name: arg
    Value: '"https://github.com/"'
  - Env:
    - Key: MATERIAL_URL
      Value: $MATERIAL_URL
    Name: env
  - Key: MAX_RECORD_TIME
    Name: arg
    Value: "7200000"
  - Env:
    - Key: MAX_RECORD_TIME
      Value: $MAX_RECORD_TIME
    Name: env
  - Key: START_VNC
    Name: arg
    Value: '"no"'
  - Env:
    - Key: START_VNC
      Value: $START_VNC
    Name: env
  - Key: VNC_PASSWORD
    Name: arg
    Value: rebirth
  - Env:
    - Key: VNC_PASSWORD
      Value: $VNC_PASSWORD
    Name: env
  - Env:
    - Key: XAUTHORITY
      Value: /tmp/Xauthority
    Name: env
  - Name: workdir
    Path: /etc/www
  - CmdLine:
    - npm install -g node-gyp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - ./
  - CmdLine:
    - npm install --production
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - ./
  - CmdLine:
    - chmod +x ./entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9223"
  - Name: expose
    Ports:
    - "5920"
  - Expression: ENTRYPOINT ["/etc/www/entrypoint.sh"]
    Name: onbuild
  - CmdLine:
    - /etc/www/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
