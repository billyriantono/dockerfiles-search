MetaArgs: null
Stages:
- BaseName: microsoft/dotnet:2.1-sdk
  Commands:
  - Env:
    - Key: NODE_VERSION
      Value: 11.14.0
    Name: env
  - Env:
    - Key: NODE_DOWNLOAD_SHA
      Value: 0d5c078137c992a919898c8fda7e5af40118f355bb938fccfd5aecddaf2dc123
    Name: env
  - Env:
    - Key: NODE_DOWNLOAD_URL
      Value: https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz
    Name: env
  - CmdLine:
    - curl -SL "$NODE_DOWNLOAD_URL" --output nodejs.tar.gz     && echo "$NODE_DOWNLOAD_SHA
      nodejs.tar.gz" | sha256sum -c -     && tar -xzf "nodejs.tar.gz" -C /usr/local
      --strip-components=1     && rm nodejs.tar.gz     && ln -s /usr/local/bin/node
      /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
      && chmod +x /usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy     apt-transport-https     ca-certificates     curl     lxc     iptables     bzip2     python-pip     unzip     python-setuptools
      jq     --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.docker.com/ | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli --upgrade
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home/jre
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u212
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u212-b01-1~deb9u1
    Name: env
  - CmdLine:
    - "set -ex; \t\tif [ ! -d /usr/share/man/man1 ]; then \t\tmkdir -p /usr/share/man/man1;
      \tfi; \t\tapt-get update; \tapt-get install -y \t\topenjdk-8-jre=\"$JAVA_DEBIAN_VERSION\"
      \t; \trm -rf /var/lib/apt/lists/*; \t\t[ \"$(readlink -f \"$JAVA_HOME\")\" =
      \"$(docker-java-home)\" ]; \t\tupdate-alternatives --get-selections | awk -v
      home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3, home) == 1 { $2 = \"manual\";
      print | \"update-alternatives --set-selections\" }'; \tupdate-alternatives --query
      java | grep -q 'Status: manual'"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g typescript
    Name: run
    PrependShell: true
  From:
    Image: microsoft/dotnet:2.1-sdk
  Name: ""
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.1-sdk
