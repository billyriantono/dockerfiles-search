{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk",
      "SourceCode": "FROM openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SDK_HOME",
              "Value": "/sdk"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$SDK_HOME"
        },
        {
          "CmdLine": [
            "apt-get --quiet update --yes   \u0026\u0026 apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 git file build-essential ca-certificates openssh-server --no-install-recommends   \u0026\u0026 apt-get -q autoremove   \u0026\u0026 apt-get -q clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -f /var/cache/apt/*.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure   \u0026\u0026 sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g' /etc/pam.d/sshd   \u0026\u0026 mkdir -p /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "3.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_SDK_URL",
              "Value": "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL \"${GRADLE_SDK_URL}\" -o gradle-${GRADLE_VERSION}-bin.zip    \u0026\u0026 unzip gradle-${GRADLE_VERSION}-bin.zip -d ${SDK_HOME}    \u0026\u0026 rm -rf gradle-${GRADLE_VERSION}-bin.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "${SDK_HOME}/gradle-${GRADLE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${GRADLE_HOME}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_TARGET_SDK",
              "Value": "\"android-27,android-28\""
            },
            {
              "Key": "ANDROID_BUILD_TOOLS",
              "Value": "\"build-tools-28.0.2,build-tools-28.0.3\""
            },
            {
              "Key": "ANDROID_SDK_TOOLS",
              "Value": "\"25.2.3\""
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "${SDK_HOME}/android-sdk-linux"
            },
            {
              "Key": "PATH",
              "Value": "${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:$PATH:${ANDROID_HOME}/cmake/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${ANDROID_HOME} \u0026\u0026 wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/tools_r${ANDROID_SDK_TOOLS}-linux.zip   \u0026\u0026 unzip android-sdk.zip -d ${ANDROID_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://dl.google.com/android/repository/cmake-3.6.3155560-linux-x86_64.zip -O android-cmake.zip   \u0026\u0026 unzip -q android-cmake.zip -d ${ANDROID_HOME}/cmake   \u0026\u0026 chmod u+x ${ANDROID_HOME}/cmake/bin/ -R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter \"${ANDROID_TARGET_SDK}\"   \u0026\u0026 echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter platform-tools   \u0026\u0026 echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter \"${ANDROID_BUILD_TOOLS}\"   \u0026\u0026 echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter extra-android-m2repository   \u0026\u0026 echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter extra-google-google_play_services   \u0026\u0026 echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter extra-google-m2repository"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(while sleep 3; do echo \"y\"; done) | $ANDROID_HOME/tools/android update sdk -u"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.x"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install curl -y \u0026\u0026 curl -sL \"https://deb.nodesource.com/setup_${NODE_VERSION}\" | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026 apt-get update \u0026\u0026 apt-get install yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g react-native-cli"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}