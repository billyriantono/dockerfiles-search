MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Name: volume
    Volumes:
    - input
  - Name: volume
    Volumes:
    - output
  - Name: volume
    Volumes:
    - template
  - CmdLine:
    - apt-get -qq -y update && apt-get -qq -y install locales cmtk python python-pip
      python-dev ipython build-essential git nano autoconf nasm zip automake autoconf
      m4 libtool bison cmake flex xvfb imagej bc sec libpq-dev&& pip install --upgrade
      virtualenv && pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pynrrd
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requests
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install psycopg2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install neo4j
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install build-essential gcc make wget libdirectfb-dev libjpeg-dev
      zlib1g-dev libsdl-gfx1.2-dev gcc libsdl1.2-dev libasound2-dev  pkg-config libpci-dev
      dh-autoreconf csh
    Name: run
    PrependShell: true
  - Env:
    - Key: MA
      Value: /opt/MouseAtlas
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/MouseAtlas/bin:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /opt/MouseAtlas/lib:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: LD_RUN_PATH
      Value: /opt/MouseAtlas/lib:$LD_RUN_PATH
    Name: env
  - CmdLine:
    - cd /tmp/ && git clone https://github.com/ma-tech/External.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/External/ && cd Fcgi/ && tar -zxf fcgi-2.4.0.tar.gz && patch -p0 < fcgi-2.4.0-patch-01
      && cd fcgi-2.4.0 && ./configure --prefix=$MA --enable-static --disable-shared
      && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/External/ && cd Log4Cpp && rm -rf log4cpp-1.0 && tar -zxf log4cpp-1.0.tar.gz
      && patch -p0 < log4cpp-1.0.patch && cd log4cpp-1.0 && ./configure --prefix $MA
      --disable-shared --enable-static --with-pic && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/External/ && cd PNG && rm -rf libpng-1.6.29 && tar -zxf libpng-1.6.29.tar.gz
      && cd libpng-1.6.29 && ./configure --prefix $MA --disable-shared --enable-static
      --with-pic && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/External/ && cd Jpeg && rm -rf libjpeg-turbo-1.5.1 && tar -zxf libjpeg-turbo-1.5.1.tar.gz
      && cd libjpeg-turbo-1.5.1 && autoreconf -fi && ./configure --prefix $MA --disable-shared
      --enable-static --with-jpeg7 --with-pic && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/External/ && cd Tiff && rm -rf tiff-4.0.8 && tar -zxf tiff-4.0.8.tar.gz
      && cd tiff-4.0.8 && ./configure --prefix=$MA --disable-shared --enable-static
      --with-pic --with-jpeg-include-dir=$MA/include --with-jpeg-lib-dir==$MA/lib
      && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/External/ && cd NIfTI && tar -zxf nifticlib-2.0.0.tar.gz && cmake nifticlib-2.0.0
      && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ && git clone https://github.com/ma-tech/Woolz.git && cd Woolz && mkdir
      -p m4 && libtoolize && aclocal && automake --add-missing && autoreconf -i --force
      && ./build.sh && ./configure --prefix=$MA --enable-optimise --enable-extff --with-jpeg=$MA
      --with-tiff=$MA --with-nifti=/usr/local/ && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/NRRDtools.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/SWCtools.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/Bound.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/3DwarpScoring.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/IndexStackConv.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/3DstackDisplay.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/lsm2nrrd.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/Robbie1977/nrrd2raw.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/VirtualFlyBrain/VFB_neo4j.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/VirtualFlyBrain/StackProcessing.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && git clone https://github.com/VirtualFlyBrain/StackLoader.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/ && wget https://downloads.imagej.net/fiji/latest/fiji-linux64.zip &&
      unzip fiji-linux64.zip && rm fiji-linux64.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: FIJI
      Value: /opt/Fiji.app/ImageJ-linux64
    Name: env
  - CmdLine:
    - mkdir -p /data/ && cd /data/ && git clone https://github.com/VirtualFlyBrain/DrosAdultVNSdomains.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /data/ && git clone https://github.com/VirtualFlyBrain/DrosAdultBRAINdomains.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /data/ && git clone https://github.com/VirtualFlyBrain/DrosAdultHalfBRAINdomains.git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /disk/data/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/StackLoader /disk/data/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /partition/bocian/VFBTools
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/* /partition/bocian/VFBTools/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /VFB /disk/data/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /disk/data/VFBTools
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/Fiji.app /disk/data/VFBTools/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /disk/data/VFBTools/Fiji.app /disk/data/VFBTools/Fiji
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/* /disk/data/VFBTools/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /disk/data/VFBTools/MouseAtlas /disk/data/VFBTools/Woolz2013Full
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /partition/karenin/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/StackLoader /partition/karenin/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /VFB /partition/karenin/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /partition/bocian/VFBTools/python-modules-2.6/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "#empty" > /partition/bocian/VFBTools/python-modules-2.6/bin/activate
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/StackProcessing /disk/data/VFB/IMAGE_DATA/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /scripts/*
    - /scripts/
  - CmdLine:
    - chmod +x /scripts/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /scripts/startup.sh
    Name: entrypoint
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
