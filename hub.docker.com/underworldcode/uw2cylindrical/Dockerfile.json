{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "underworldcode/base@sha256:e022c04b6bbaddf7447b89dd187bdd31958d403db3677adc3b21c7ca6560202e",
      "SourceCode": "FROM underworldcode/base@sha256:e022c04b6bbaddf7447b89dd187bdd31958d403db3677adc3b21c7ca6560202e",
      "Platform": "",
      "From": {
        "Image": "underworldcode/base@sha256:e022c04b6bbaddf7447b89dd187bdd31958d403db3677adc3b21c7ca6560202e"
      },
      "Commands": [
        {
          "Maintainer": "https://github.com/underworldcode/",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "printf \"#\\041/bin/sh \\n rm -f /tmp/.X99-lock \u0026\u0026 xvfb-run -s '-screen 0 1600x1200x16' \\$@\" \u003e\u003e /usr/local/bin/xvfbrun.sh \u0026\u0026 chmod +x /usr/local/bin/xvfbrun.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "--",
            "/usr/local/bin/xvfbrun.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "UW2_TMP",
              "Value": "/tmp/underworld2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UW2_DIR",
              "Value": "/usr/local/underworld2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYTHONPATH:$UW2_DIR/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $UW2_TMP"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir lavavu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "jovyan:users",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "$UW2_TMP"
          ]
        },
        {
          "Chown": "jovyan:users",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docs/",
            "$NB_WORK/"
          ]
        },
        {
          "CmdLine": [
            "cd $UW2_TMP/libUnderworld \u0026\u0026     ./configure.py --with-debugging=0 --prefix=$UW2_DIR \u0026\u0026     ./compile.py                      \u0026\u0026     scons install                     \u0026\u0026     env \u003e build_environment.txt       \u0026\u0026     cd /tmp                           \u0026\u0026     rm -rf *                          \u0026\u0026     python -c \"import underworld\"     \u0026\u0026     python -c \"import glucifer\"       \u0026\u0026     chown -R $NB_USER:users $UW2_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b development https://github.com/underworldcode/UWGeodynamics.git \u0026\u0026     pip3 install --no-cache-dir UWGeodynamics/ \u0026\u0026     mkdir $NB_WORK/UWGeodynamics \u0026\u0026     mv ./UWGeodynamics/examples   $NB_WORK/UWGeodynamics/. \u0026\u0026     mv ./UWGeodynamics/tutorials  $NB_WORK/UWGeodynamics/. \u0026\u0026     mv ./UWGeodynamics/benchmarks $NB_WORK/UWGeodynamics/. \u0026\u0026     mv ./UWGeodynamics/docs       $NB_WORK/UWGeodynamics/  \u0026\u0026     rm -rf UWGeodynamics                                   \u0026\u0026     chown -R $NB_USER:users $NB_WORK/UWGeodynamics"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9999"
          ]
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Name": "workdir",
          "Path": "$NB_WORK"
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--ip='0.0.0.0'",
            "--no-browser"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}