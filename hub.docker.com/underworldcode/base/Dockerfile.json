{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base_runtime",
      "BaseName": "debian:latest",
      "SourceCode": "FROM debian:latest as base_runtime",
      "Platform": "",
      "As": "base_runtime",
      "From": {
        "Image": "debian:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VIRTUAL_ENV",
              "Value": "/opt/venv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${VIRTUAL_ENV}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/lib/python3.7/site-packages:${VIRTUAL_ENV}/lib/python3.7/site-packages"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         python3-minimal         python3-virtualenv         python3-pip         libpng16-16         libtiff5         libavcodec58         libavformat58         libswscale5         zlib1g         libxcb-glx0         libx11-xcb1         libxcb-dri2-0         libxdamage1         libxxf86vm1         libxcb-dri3-0         libxcb-present0         libxcb-sync1         libxshmfence1         libllvm7 \u0026\u0026  apt-get clean \u0026\u0026  rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U setuptools  \u0026\u0026  pip3 install --no-cache-dir         packaging         appdirs         numpy         jupyter         pillow         ipython"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build_base",
      "BaseName": "base_runtime",
      "SourceCode": "FROM base_runtime AS build_base",
      "Platform": "",
      "As": "build_base",
      "From": {
        "Stage": {
          "Named": "base_runtime",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -qq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         build-essential         libpng-dev         libtiff-dev         git         python3-dev         wget         libavcodec-dev         libavformat-dev         libavutil-dev         libswscale-dev         zlib1g-dev         libx11-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb-src http://deb.debian.org/debian buster main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y build-dep mesa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/osmesa-build"
        },
        {
          "CmdLine": [
            "wget ftp://ftp.freedesktop.org/pub/mesa/mesa-19.1.7.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvf mesa-19.1.7.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/osmesa-build/mesa-19.1.7"
        },
        {
          "CmdLine": [
            "meson build/ -Dosmesa=gallium -Dgallium-drivers=swrast -Ddri-drivers=                  -Dvulkan-drivers= -Degl=false -Dgbm=false -Dgles1=false                   -Dgles2=false -Dbuildtype=release -Db_ndebug=true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "meson configure build/ -Dprefix=/usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ninja -C build/ -j5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ninja -C build/ install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LV_LIB_DIRS",
              "Value": "/usr/local/lib/x86_64-linux-gnu/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LV_INC_DIRS",
              "Value": "/usr/local/include/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LV_OSMESA",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/lib/x86_64-linux-gnu/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/bin/python3 -m virtualenv --python=/usr/bin/python3 ${VIRTUAL_ENV}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir lavavu"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "minimal",
      "BaseName": "base_runtime",
      "SourceCode": "FROM base_runtime AS minimal",
      "Platform": "",
      "As": "minimal",
      "From": {
        "Stage": {
          "Named": "base_runtime",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build_base",
          "Name": "copy",
          "SourcesAndDest": [
            "$VIRTUAL_ENV",
            "$VIRTUAL_ENV"
          ]
        },
        {
          "Chown": "",
          "From": "build_base",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local",
            "/usr/local"
          ]
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/lib/x86_64-linux-gnu/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "PYTHONPATH= /usr/bin/pip3 freeze \u003e/opt/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-mark showmanual \u003e/opt/installed.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "minimal",
      "SourceCode": "FROM minimal",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "minimal",
          "Index": 2
        }
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/v0.18.0/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N jovyan"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Env": [
            {
              "Key": "NB_WORK",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$NB_WORK/workspace"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$NB_WORK"
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--no-browser",
            "--ip='0.0.0.0'"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}