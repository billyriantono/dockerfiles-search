{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "heroku/heroku:18",
      "SourceCode": "FROM heroku/heroku:18",
      "Platform": "",
      "From": {
        "Image": "heroku/heroku:18"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Bob Olde Hampsink \u003cbob@robuust.digital\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "3000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.3.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_EXT_VERSION",
              "Value": "5.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IMAGICK_EXT_VERSION",
              "Value": "3.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "12.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.21.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /app/.heroku/php /app/.heroku/node /app/.profile.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app/user"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/app/.heroku/php/bin:/app/.heroku/php/sbin:/app/.heroku/node/bin/:/app/user/node_modules/.bin:/app/user/vendor/bin:/app/user/:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-18-stable/nginx-$NGINX_VERSION.tar.gz | tar xz -C /app/.heroku/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default \u003e /app/.heroku/php/etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\\nuser nobody root;\\n\" \u003e\u003e /app/.heroku/php/etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-18-stable/php-$PHP_VERSION.tar.gz | tar xz -C /app/.heroku/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app/.heroku/php/etc/php/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/php/php.ini \u003e /app/.heroku/php/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-18-stable/extensions/no-debug-non-zts-20180731/redis-$REDIS_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-18-stable/extensions/no-debug-non-zts-20180731/imagick-$IMAGICK_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\\nuser_ini.cache_ttl = 30 \\nopcache.enable = 0 \\nextension=bcmath.so \\nextension=calendar.so \\nextension=exif.so \\nextension=ftp.so \\nextension=gd.so\\nextension=gettext.so \\nextension=intl.so \\nextension=mbstring.so \\nextension=pcntl.so \\nextension=redis.so \\nextension=imagick.so \\nextension=shmop.so \\nextension=soap.so \\nextension=sqlite3.so \\nextension=pdo_sqlite.so \\nextension=xmlrpc.so \\nextension=xsl.so\\n\" \u003e\u003e /app/.heroku/php/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-18-stable/composer-$COMPOSER_VERSION.tar.gz | tar xz -C /app/.heroku/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://s3pository.heroku.com/node/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz | tar --strip-components=1 -xz -C /app/.heroku/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz | tar --strip-components=1 -xz -C /app/.heroku/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`  \u0026\u0026 mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION  \u0026\u0026 curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip  \u0026\u0026 unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION  \u0026\u0026 rm /tmp/chromedriver_linux64.zip  \u0026\u0026 chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver  \u0026\u0026 ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -  \u0026\u0026 echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list  \u0026\u0026 apt-get update -qqy  \u0026\u0026 apt-get -qqy install google-chrome-stable  \u0026\u0026 rm /etc/apt/sources.list.d/google-chrome.list  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "COPY composer.lock /app/user/",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY composer.json /app/user/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN composer install --prefer-dist --no-scripts --no-suggest",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN composer show heroku/heroku-buildpack-php || { echo 'Your composer.json must have \"heroku/heroku-buildpack-php\" as a \"require-dev\" dependency.'; exit 1; }",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY package*.json yarn.* /app/user/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN [ -f yarn.lock ] \u0026\u0026 yarn install --no-progress || npm install",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY . /app/user/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN cat composer.json | python -c 'import sys,json; sys.exit(\"post-install-cmd\" not in json.load(sys.stdin).get(\"scripts\", {}));' \u0026\u0026 composer run-script post-install-cmd || true",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN cat composer.json | python -c 'import sys,json; sys.exit(\"post-autoload-dump\" not in json.load(sys.stdin).get(\"scripts\", {}));' \u0026\u0026 composer run-script post-autoload-dump || true",
          "Name": "onbuild"
        }
      ]
    }
  ]
}