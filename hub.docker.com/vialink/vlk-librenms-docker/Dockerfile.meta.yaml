MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: maintainer
      Value: '"CrazyMax"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"librenms"'
    - Key: org.label-schema.description
      Value: '"LibreNMS"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.url
      Value: '"https://github.com/librenms/docker"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/librenms/docker"'
    - Key: org.label-schema.vendor
      Value: '"LibreNMS"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - apk --update --no-cache add     busybox-extras     acl     bash     bind-tools     binutils     ca-certificates     coreutils     curl     fping     git     graphviz     imagemagick     ipmitool     monitoring-plugins     mtr     mysql-client     net-snmp     net-snmp-tools     nginx     nmap     openssl     perl     php7     php7-cli     php7-ctype     php7-curl     php7-dom     php7-fileinfo     php7-fpm     php7-gd     php7-json     php7-ldap     php7-mbstring     php7-mcrypt     php7-memcached     php7-mysqlnd     php7-opcache     php7-openssl     php7-pdo     php7-pdo_mysql     php7-phar     php7-posix     php7-session     php7-simplexml     php7-snmp     php7-tokenizer     php7-xml     php7-zip     py-mysqldb     python     py2-pip     python3     rrdtool     runit     shadow     su-exec     syslog-ng     ttf-dejavu     tzdata      util-linux     whois   &&
      pip2 install --upgrade pip   && pip2 install python-memcached   && pip3 install
      --upgrade pip   && pip3 install python-memcached   && wget -q "https://github.com/just-containers/s6-overlay/releases/latest/download/s6-overlay-amd64.tar.gz"
      -qO "/tmp/s6-overlay-amd64.tar.gz"   && tar xzf /tmp/s6-overlay-amd64.tar.gz
      -C /   && rm -rf /var/cache/apk/* /var/www/* /tmp/*   && setcap cap_net_raw+ep
      /usr/bin/nmap   && setcap cap_net_raw+ep /usr/sbin/fping
    Name: run
    PrependShell: true
  - Env:
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: '"2"'
    - Key: LIBRENMS_VERSION
      Value: '"1.58.1"'
    - Key: LIBRENMS_PATH
      Value: '"/opt/librenms"'
    - Key: LIBRENMS_DOCKER
      Value: '"1"'
    - Key: TZ
      Value: '"UTC"'
    - Key: PUID
      Value: '"1000"'
    - Key: PGID
      Value: '"1000"'
    Name: env
  - CmdLine:
    - mkdir -p /opt   && curl -sSL https://getcomposer.org/installer | php -- --install-dir=/usr/bin
      --filename=composer   && git clone --branch ${LIBRENMS_VERSION} https://github.com/librenms/librenms.git
      ${LIBRENMS_PATH}   && COMPOSER_CACHE_DIR="/tmp" composer install --no-dev --no-interaction
      --no-ansi --working-dir=${LIBRENMS_PATH}   && curl -sSLk -q https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro
      -o /usr/bin/distro   && chmod +x /usr/bin/distro   && mkdir -p ${LIBRENMS_PATH}/config.d   &&
      cp ${LIBRENMS_PATH}/config.php.default ${LIBRENMS_PATH}/config.php   && cp ${LIBRENMS_PATH}/snmpd.conf.example
      /etc/snmp/snmpd.conf   && sed -i "1s|.*|#!/usr/bin/env python3|" ${LIBRENMS_PATH}/snmp-scan.py   &&
      echo "foreach (glob(\"/data/config/*.php\") as \$filename) include \$filename;"
      >> ${LIBRENMS_PATH}/config.php   && echo "foreach (glob(\"${LIBRENMS_PATH}/config.d/*.php\")
      as \$filename) include \$filename;" >> ${LIBRENMS_PATH}/config.php   && pip3
      install -r ${LIBRENMS_PATH}/requirements.txt   && chown -R nobody.nogroup ${LIBRENMS_PATH}   &&
      rm -rf ${LIBRENMS_PATH}/.git /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs
    - /
  - CmdLine:
    - addgroup -g ${PGID} librenms   && adduser -D -h ${LIBRENMS_PATH} -u ${PUID}
      -G librenms -s /bin/sh -D librenms   && usermod -aG adm librenms   && mkdir
      -p /data /var/run/nginx /var/run/php-fpm
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "514"
    - 514/udp
    - "8000"
  - Name: workdir
    Path: ${LIBRENMS_PATH}
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
