{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Maintainer": "Huang Rui \u003cvowstar@gmail.com\u003e, Turtle \u003cturtled@emqtt.io\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "EMQ_VERSION",
              "Value": "v2.3.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk --no-cache add --virtual .build-deps         build-base         bsd-compat-headers         perl         erlang         erlang-public-key         erlang-syntax-tools         erlang-erl-docgen         erlang-observer         erlang-ssh         erlang-cosfiletransfer         erlang-runtime-tools         erlang-os-mon         erlang-tools         erlang-cosproperty         erlang-common-test         erlang-dialyzer         erlang-edoc         erlang-otp-mibs         erlang-crypto         erlang-costransaction         erlang-odbc         erlang-inets         erlang-asn1         erlang-snmp         erlang-erts         erlang-et         erlang-cosnotification         erlang-xmerl         erlang-coseventdomain         erlang-stdlib         erlang-diameter         erlang-hipe         erlang-ic         erlang-eunit         erlang-mnesia         erlang-erl-interface         erlang-sasl         erlang-jinterface         erlang-kernel         erlang-orber         erlang-costime         erlang-dev         erlang-eldap         erlang-reltool         erlang-debugger         erlang-ssl         erlang-megaco         erlang-parsetools         erlang-cosevent         erlang-compiler     \u0026\u0026 apk add --no-cache --virtual .fetch-deps         git         wget     \u0026\u0026 apk add --no-cache --virtual .run-deps         ncurses-terminfo-base         ncurses-terminfo         ncurses-libs         readline     \u0026\u0026 git clone -b ${EMQ_VERSION} https://github.com/emqtt/emq-relx.git /emqttd     \u0026\u0026 cd /emqttd     \u0026\u0026 make     \u0026\u0026 mkdir -p /opt \u0026\u0026 mv /emqttd/_rel/emqttd /opt/emqttd     \u0026\u0026 cd / \u0026\u0026 rm -rf /emqttd     \u0026\u0026 ln -s /opt/emqttd/bin/* /usr/local/bin/     \u0026\u0026 apk --purge del .build-deps .fetch-deps     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/emqttd"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "/opt/emqttd/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/emqttd/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/emqttd/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "adduser -D -u 1000 emqtt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chgrp -Rf root /opt/emqttd \u0026\u0026 chmod -Rf g+w /opt/emqttd       \u0026\u0026 chown -Rf emqtt /opt/emqttd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "emqtt"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/emqttd/log",
            "/opt/emqttd/data",
            "/opt/emqttd/lib",
            "/opt/emqttd/etc"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "18083",
            "1883",
            "4369",
            "6000-6999",
            "8080",
            "8083",
            "8084",
            "8883"
          ]
        }
      ]
    }
  ]
}