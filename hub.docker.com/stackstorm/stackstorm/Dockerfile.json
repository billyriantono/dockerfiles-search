{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/init-fake.conf",
            "/etc/init/fake-container-events.conf"
          ]
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     apt-get update     \u0026\u0026 apt-get install -y       openssh-server       sudo       curl       gdebi-core       sshpass       cron       netcat       net-tools       crudini       uuid-runtime       apache2-utils       bash-completion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-divert /etc/bash.bashrc \u0026\u0026     sed -i '/^# enable bash completion/,/^# sudo hint/{//p;//d;s/^#//}' /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"#!/bin/sh\\nexit 101\\n\" \u003e /usr/sbin/policy-rc.d     \u0026\u0026 rm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl     \u0026\u0026 locale-gen en_US.UTF-8 \u0026\u0026 update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/update-rc.d -f ondemand remove;   for f in     /etc/init/u*.conf     /etc/init/mounted-dev.conf     /etc/init/mounted-proc.conf     /etc/init/mounted-run.conf     /etc/init/mounted-tmp.conf     /etc/init/mounted-var.conf     /etc/init/hostname.conf     /etc/init/networking.conf     /etc/init/tty*.conf     /etc/init/plymouth*.conf     /etc/init/hwclock*.conf     /etc/init/module*.conf  ; do     dpkg-divert --local --rename --add \"$f\";   done;   echo '# /lib/init/fstab: cleared out for bare-bones Docker' \u003e /lib/init/fstab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "ST2_REPO",
          "Name": "arg",
          "Value": "stable"
        },
        {
          "Key": "ST2_VERSION",
          "Name": "arg",
          "Value": "\"2.2.1-5\""
        },
        {
          "Key": "ST2WEB_VERSION",
          "Name": "arg",
          "Value": "\"2.2.1-1\""
        },
        {
          "Key": "ST2MISTRAL_VERSION",
          "Name": "arg",
          "Value": "\"2.2.1-4\""
        },
        {
          "CmdLine": [
            "curl -s https://packagecloud.io/install/repositories/StackStorm/${ST2_REPO}/script.deb.sh | sudo bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y st2=${ST2_VERSION} st2web=${ST2WEB_VERSION} st2mistral=${ST2MISTRAL_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/start on filesystem and net-device-up IFACE!=lo/start on runlevel \\[2345\\]/' /etc/init/st2*.conf     \u0026\u0026 sed -i 's/stop on starting rc RUNLEVEL=\\[016\\]/stop on runlevel \\[!2345\\]/' /etc/init/st2*.conf     \u0026\u0026 sed -i 's/start on filesystem and net-device-up IFACE!=lo/start on runlevel \\[2345\\]/' /etc/init/mistral.conf     \u0026\u0026 sed -i 's/stop on starting rc RUNLEVEL=\\[016\\]/stop on runlevel \\[!2345\\]/' /etc/init/mistral.conf     \u0026\u0026 sed -i '/start mistral-api/i\\  /opt/stackstorm/mistral/bin/mistral-db-manage --config-file /etc/mistral/mistral.conf upgrade head\\n  /opt/stackstorm/mistral/bin/mistral-db-manage --config-file /etc/mistral/mistral.conf populate\\n' /etc/init/mistral.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/st2/keys     \u0026\u0026 st2-generate-symmetric-crypto-key --key-path /etc/st2/keys/datastore_key.json     \u0026\u0026 usermod -a -G st2 st2 \u0026\u0026 chgrp st2 /etc/st2/keys \u0026\u0026 chmod o-r /etc/st2/keys     \u0026\u0026 chgrp st2 /etc/st2/keys/datastore_key.json \u0026\u0026 chmod o-r /etc/st2/keys/datastore_key.json     \u0026\u0026 crudini --set /etc/st2/st2.conf keyvalue encryption_key_path /etc/st2/keys/datastore_key.json     \u0026\u0026 crudini --set /etc/st2/st2.conf auth enable True     \u0026\u0026 crudini --set /etc/st2/st2.conf content packs_base_paths /opt/stackstorm/packs.dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'source /opt/stackstorm/st2/bin/activate \u0026\u0026 pip install redis'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/stanley/.ssh \u0026\u0026 chmod 0700 /home/stanley/.ssh     \u0026\u0026 ssh-keygen -f /home/stanley/.ssh/stanley_rsa -P \"\"     \u0026\u0026 cat /home/stanley/.ssh/stanley_rsa.pub \u003e\u003e /home/stanley/.ssh/authorized_keys     \u0026\u0026 chown -R stanley:stanley /home/stanley/.ssh     \u0026\u0026 echo \"stanley    ALL=(ALL)       NOPASSWD: SETENV: ALL\" \u003e\u003e /etc/sudoers.d/st2     \u0026\u0026 chmod 0440 /etc/sudoers.d/st2     \u0026\u0026 sed -i -r \"s/^Defaults\\s+\\+?requiretty/# Defaults +requiretty/g\" /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O - http://nginx.org/keys/nginx_signing.key | apt-key add -     \u0026\u0026 echo \"deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 echo \"deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y nginx     \u0026\u0026 cp /usr/share/doc/st2/conf/nginx/st2.conf /etc/nginx/conf.d     \u0026\u0026 mkdir -p /etc/ssl/st2     \u0026\u0026 mkdir /var/run/sshd     \u0026\u0026 openssl req -x509 -newkey rsa:2048 -keyout /etc/ssl/st2/st2.key -out /etc/ssl/st2/st2.crt -days 3650 -nodes -subj '/O=st2 self signed/CN=localhost'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "443"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/stackstorm/packs.dev"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/local.conf",
            "/etc/init/local.conf"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}