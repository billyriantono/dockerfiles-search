MetaArgs: null
Stages:
- BaseName: jupyter/notebook
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y pkg-config libzmq-dev build-essential curl bzip2 tar ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://storage.googleapis.com/golang/go1.5.linux-amd64.tar.gz > golang.tar.gz
      &&   tar -C /usr/local -xzf golang.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOROOT/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/goimports
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/gophergala2016/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.ipython/kernels/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r $GOPATH/src/github.com/gophergala2016/gophernotes/kernel/* ~/.ipython/kernels/gophernotes
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /notebooks
  - Name: workdir
    Path: /notebooks
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - notebook
    Name: cmd
    PrependShell: false
  From:
    Image: jupyter/notebook
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/notebook
