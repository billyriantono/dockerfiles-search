{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DRUSH_VERSION",
              "Value": "8.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUSH_LAUCHER",
              "Value": "0.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COLUMNS",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUSH_LAUNCHER_FALLBACK",
              "Value": "/usr/local/bin/drush8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps g++ gcc make autoconf curl curl-dev bzip2 bzip2-dev     zip libzip-dev icu icu-libs icu-dev libmemcached libmemcached-dev zlib-dev cyrus-sasl-dev     mysql-client nginx supervisor tzdata bash libpng-dev freetype-dev libjpeg-turbo-dev libmcrypt-dev     git imagemagick-dev libtool postgresql-libs postgresql-dev \u0026\u0026     docker-php-ext-configure gd         --with-gd --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     echo no | pecl install redis \u0026\u0026     echo yes | pecl install memcached \u0026\u0026     echo yes | pecl install imagick \u0026\u0026     echo yes | pecl install xdebug \u0026\u0026     docker-php-ext-enable redis memcached xdebug imagick \u0026\u0026     docker-php-ext-install mysqli opcache gd bz2 zip intl pdo_mysql bcmath pgsql pdo_pgsql calendar \u0026\u0026     ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \u0026\u0026     curl -fsSL -o /usr/local/bin/drush8 https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar | sh \u0026\u0026     chmod +x /usr/local/bin/drush8 \u0026\u0026     drush8 core-status \u0026\u0026     wget -O drush.phar https://github.com/drush-ops/drush-launcher/releases/download/$DRUSH_LAUCHER/drush.phar \u0026\u0026     chmod +x drush.phar \u0026\u0026     mv drush.phar /usr/local/bin/drush \u0026\u0026     php -r \"readfile('https://getcomposer.org/installer');\" \u003e composer-setup.php \u0026\u0026     php composer-setup.php \u0026\u0026     php -r \"unlink('composer-setup.php');\" \u0026\u0026     mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/www.conf",
            "/usr/local/etc/php-fpm.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/drupal8.conf",
            "/tmp/drupal.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/laravel.conf",
            "/tmp/laravel.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/sparkpos/docker-nginx-php/master/conf/docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s/listen = 9000//g\" /usr/local/etc/php-fpm.d/zz-docker.conf \u0026\u0026     sed -i -e \"s/access.log = \\/proc\\/self\\/fd\\/2/access.log = \\/proc\\/self\\/fd\\/1/g\" /usr/local/etc/php-fpm.d/docker.conf \u0026\u0026     chmod +x /usr/local/bin/docker-entrypoint \u0026\u0026     mkdir -p /etc/nginx/ssl /etc/nginx/site-enabled /etc/supervisor/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html",
            "/etc/nignx/site-enabled"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}