MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Labels:
    - Key: authors
      Value: '"Julien Neuhart <j.neuhart@thecodingmachine.com>, David NÃ©grier <d.negrier@thecodingmachine.com>"'
    Name: label
  - CmdLine:
    - apt-get update &&    apt-get install -y --no-install-recommends curl git nano
      sudo ca-certificates procps libfontconfig --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.1.5/supercronic-linux-amd64  &&
      SUPERCRONIC=supercronic-linux-amd64  && SUPERCRONIC_SHA1SUM=9aeb41e00cc7b71d30d33c57a2333f2c2581a201  &&
      curl -fsSLO "$SUPERCRONIC_URL"  && echo "${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}"
      | sha1sum -c -  && chmod +x "$SUPERCRONIC"  && mv "$SUPERCRONIC" "/usr/local/bin/${SUPERCRONIC}"  &&
      ln -s "/usr/local/bin/${SUPERCRONIC}" /usr/local/bin/supercronic
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash docker && adduser docker sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&    apt-get install -y --no-install-recommends gnupg &&    curl
      -sL https://deb.nodesource.com/setup_6.x | bash - &&    apt-get update &&    apt-get
      install -y --no-install-recommends nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&    echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&    apt-get update &&    apt-get install -y --no-install-recommends yarn
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:./node_modules/.bin"'
    Name: env
  - CmdLine:
    - sed -i 's#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:./node_modules/.bin#g'
      /etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - mkdir ~/.ssh && touch ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts &&
      eval $(ssh-agent -s)
    Name: run
    PrependShell: true
  - CmdLine:
    - '{         echo "alias ls=''ls --color=auto''";         echo "alias ll=''ls
      --color=auto -alF''";         echo "alias la=''ls --color=auto -A''";         echo
      "alias l=''ls --color=auto -CF''";     } >> ~/.bashrc'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: NODE_VERSION
      Value: 6.x
    Name: env
  - CmdLine:
    - mkdir -p /usr/src/app && chown docker:docker /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Env:
    - Key: TINI_VERSION
      Value: v0.16.1
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils/docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils/docker-entrypoint-as-root.sh
    - /usr/local/bin/docker-entrypoint-as-root.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils/startup_commands.js
    - /usr/local/bin/startup_commands.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils/generate_cron.js
    - /usr/local/bin/generate_cron.js
  - CmdLine:
    - node
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: docker
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
