MetaArgs: null
Stages:
- BaseName: heroku/cedar:14
  Commands:
  - CmdLine:
    - mkdir /gissrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /gissrc
  - CmdLine:
    - mkdir -p /app/gis/lib
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app/gis/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/app/gis/lib
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/app/gis/bin
    Name: env
  - CmdLine:
    - curl -s https://cmake.org/files/v3.4/cmake-3.4.3.tar.gz | tar zxv
    Name: run
    PrependShell: true
  - CmdLine:
    - cd cmake-3.4.3 && ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - cd cmake-3.4.3 && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd cmake-3.4.3 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://netix.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz
      | tar zxv
    Name: run
    PrependShell: true
  - CmdLine:
    - cd swig-3.0.8 && ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - cd swig-3.0.8 && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd swig-3.0.8 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://download.osgeo.org/proj/proj-4.8.0.tar.gz | tar zxv
    Name: run
    PrependShell: true
  - CmdLine:
    - cd proj-4.8.0 && ./configure --prefix=/app/gis
    Name: run
    PrependShell: true
  - CmdLine:
    - cd proj-4.8.0 && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd proj-4.8.0 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 | tar xvj
    Name: run
    PrependShell: true
  - CmdLine:
    - cd geos-3.5.0 && ./configure --prefix=/app/gis
    Name: run
    PrependShell: true
  - CmdLine:
    - cd geos-3.5.0 && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd geos-3.5.0 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://download.osgeo.org/gdal/2.0.2/gdal-2.0.2.tar.gz | tar zxv
    Name: run
    PrependShell: true
  - CmdLine:
    - cd gdal-2.0.2 && ./configure --prefix=/app/gis
    Name: run
    PrependShell: true
  - CmdLine:
    - cd gdal-2.0.2 && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd gdal-2.0.2 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://download.osgeo.org/mapserver/mapserver-7.0.0.tar.gz | tar zxv
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir mapserver-7.0.0/build
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mapserver-7.0.0/build && cmake -DCMAKE_INSTALL_PREFIX=/app/gis -DWITH_PYTHON=ON
      -DWITH_FRIBIDI=0 -DWITH_FCGI=0 -DWITH_HARFBUZZ=0 -DWITH_GIF=0 .. > ../configure.log
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mapserver-7.0.0/build && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mapserver-7.0.0/build && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Name: workdir
    Path: /app/user
  - Env:
    - Key: PATH
      Value: /app/.heroku/python/bin/:/app/heroku/node/bin/:/app/user/node_modules/.bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p /app/.profile.d
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENGINE
      Value: 0.12.2
    Name: env
  - CmdLine:
    - mkdir -p /app/heroku/node
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://s3pository.heroku.com/node/v$NODE_ENGINE/node-v$NODE_ENGINE-linux-x64.tar.gz
      | tar --strip-components=1 -xz -C /app/heroku/node
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export PATH=\"/app/heroku/node/bin:/app/user/node_modules/.bin:\$PATH\""
      > /app/.profile.d/nodejs.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /app/.profile.d/nodejs.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: python-2.7.11
    Name: env
  - CmdLine:
    - mkdir -p /app/.heroku/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://lang-python.s3.amazonaws.com/cedar-14/runtimes/$PYTHON_VERSION.tar.gz
      | tar zx -C /app/.heroku/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://bootstrap.pypa.io/get-pip.py | /app/.heroku/python/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /gissrc/mapserver-7.0.0/build/mapscript/python/* /app/.heroku/python/lib/python2.7/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /gissrc/gdal-2.0.2/swig/python && python setup.py build
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /gissrc/gdal-2.0.2/swig/python && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=$HOME/.heroku/python/bin:$PATH PYTHONUNBUFFERED=true PYTHONHOME=/app/.heroku/python
      LIBRARY_PATH=/app/.heroku/vendor/lib:/app/.heroku/python/lib:$LIBRARY_PATH LD_LIBRARY_PATH=/app/.heroku/vendor/lib:/app/.heroku/python/lib:$LD_LIBRARY_PATH
      LANG=${LANG:-en_US.UTF-8} PYTHONHASHSEED=${PYTHONHASHSEED:-random} PYTHONPATH=${PYTHONPATH:-/app/user/}'
      > /app/.profile.d/python.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /app/.profile.d/python.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - Expression: ADD . /app/user/
    Name: onbuild
  - Expression: RUN /app/heroku/node/bin/npm install
    Name: onbuild
  - Expression: RUN /app/.heroku/python/bin/pip install -r requirements.txt
    Name: onbuild
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./init
    - /usr/bin/init
  - CmdLine:
    - /usr/bin/init
    Name: entrypoint
    PrependShell: false
  From:
    Image: heroku/cedar:14
  Name: ""
  Platform: ""
  SourceCode: FROM heroku/cedar:14
