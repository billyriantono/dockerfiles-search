{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "derek.roberts@gmail.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd -r mongodb; \t\tuseradd -r -g mongodb mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tca-certificates; \t\trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MONGO_MAJOR",
              "Value": "3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_VERSION",
              "Value": "3.0.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 492EAFE8CD016A07919F1D2B9ECBEC467F0CEB10; \t\techo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/$MONGO_MAJOR multiverse\" \u003e /etc/apt/sources.list.d/mongodb-org.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update; \t\tapt-get install -y \t\t\tmongodb-org=$MONGO_VERSION \t\t\tmongodb-org-server=$MONGO_VERSION \t\t\tmongodb-org-shell=$MONGO_VERSION \t\t\tmongodb-org-mongos=$MONGO_VERSION \t\t\tmongodb-org-tools=$MONGO_VERSION; \t\trm -rf /var/lib/apt/lists/* \t\t\t/var/lib/mongodb \t\t\t/etc/mongod.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/db; \t\tchown -R mongodb:mongodb /data/db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/db"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "27017"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/mongod/; \tSCRIPT=/etc/service/mongod/run;   (     echo \"#!/bin/bash\"; \t\techo \"\"; \t\techo \"\"; \t\techo \"# Start mongod\"; \t\techo \"#\"; \t\techo \"exec mongod --storageEngine wiredTiger\";   )      \u003e\u003e ${SCRIPT}; \tchmod +x ${SCRIPT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "SCRIPT=/db_maintenance.sh;   (     echo \"#!/bin/bash\";     echo \"\";     echo \"\"; \t\techo \"# Wait for mongo to start\";     echo \"#\";     echo \"while [ \\$( pgrep -c mongod ) -eq 0 ]\";     echo \"do\"; \t\techo \"\tsleep 60\"; \t\techo \"done\";     echo \"sleep 5\"; \t\techo \"\"; \t\techo \"\"; \t\techo \"# Set index\"; \t\techo \"#\"; \t\techo \"/usr/bin/mongo query_gateway_development --eval 'printjson( db.records.ensureIndex({ hash_id : 1 }, { unique : true }))'\"; \t\techo \"\"; \t\techo \"\";     echo \"# Database junk cleanup\";     echo \"#\";     echo \"/usr/bin/mongo query_gateway_development --eval 'db.providers.drop()'\";     echo \"/usr/bin/mongo query_gateway_development --eval 'db.queries.drop()'\";     echo \"/usr/bin/mongo query_gateway_development --eval 'db.results.drop()'\";   )      \u003e\u003e ${SCRIPT};   chmod +x ${SCRIPT};   (     echo \"# Run maintenance script (boot, Sundays at noon)\"; \t\techo \"@reboot \"${SCRIPT};     echo \"0 12 * * 0 \"${SCRIPT};   )     | crontab -"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}