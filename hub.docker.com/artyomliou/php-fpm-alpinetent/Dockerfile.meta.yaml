MetaArgs: null
Stages:
- BaseName: rocker/r-ver:latest
  Commands:
  - CmdLine:
    - "apt-get update && apt-get install -y     sudo     gdebi-core     pandoc     pandoc-citeproc
      \    libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     xtail     wget
      \ \tgosu \tgettext-base \tgit"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --no-verbose https://download3.rstudio.org/ubuntu-14.04/x86_64/VERSION
      -O \"version.txt\" &&     VERSION=$(cat version.txt)  &&     wget --no-verbose
      \"https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb\"
      -O ss-latest.deb &&     gdebi -n ss-latest.deb &&     rm -f version.txt ss-latest.deb
      &&     . /etc/environment &&     R -e \"install.packages(c('shiny', 'rmarkdown'),
      repos='$MRAN')\" &&     chown shiny:shiny /var/lib/shiny-server && \trm -rf
      /tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -qq && apt-get -y --no-install-recommends install \tlibxml2-dev
      \tlibsqlite3-dev \tlibmariadbd-dev \tlibpq-dev \tlibssh2-1-dev \tunixodbc-dev
      \tlibcurl4-openssl-dev \tlibssl-dev \tlibmagick++-dev \tlibudunits2-dev libgdal-dev
      tcl8.6-dev tk8.6-dev \tlibv8-dev \tlibjq-dev \tlibprotobuf-dev protobuf-compiler
      \t&& cd / \t&& rm -rf /tmp/* \t&& apt-get remove --purge -y $BUILDDEPS \t&&
      apt-get autoremove -y \t&& apt-get autoclean -y \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Key: REQUIRED_PACKAGES_PLUS
    Name: arg
    Value: ""
  - CmdLine:
    - "install2.r \t--error     --deps TRUE     --skipinstalled \t--ncpus -1 \tshiny
      \trmarkdown \tremotes \t`echo $REQUIRED_PACKAGES_PLUS |  sed 's/,/ /g'` \t&&
      rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Key: REQUIRED_PACKAGES
    Name: arg
    Value: ""
  - CmdLine:
    - "install2.r \t--error \t--ncpus -1     --skipinstalled \t`echo $REQUIRED_PACKAGES
      |  sed 's/,/ /g'` \t&& rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "remotes::install_github(c('rstudio/httpuv'))"
    Name: run
    PrependShell: true
  - Key: DOCKER_IMAGE
    Name: arg
    Value: artificiallyintelligent/shiny
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: 0.x.x
  - Key: MAINTAINER
    Name: arg
    Value: slink42
  - Key: SOURCE_BRANCH
    Name: arg
    Value: null
  - Key: SOURCE_COMMIT
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"$DOCKER_IMAGE version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: build_source
      Value: '"${SOURCE_BRANCH} - https://github.com/Artificially-Intelligent/shiny/commit/${SOURCE_COMMIT}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"$MAINTAINER"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install_discovered_packages.R
    - /etc/shiny-server/install_discovered_packages.R
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shiny-server.conf.tmpl
    - /etc/shiny-server/shiny-server.conf.tmpl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shiny-server.sh
    - /usr/bin/shiny-server.sh
  - CmdLine:
    - chmod +x /usr/bin/shiny-server.sh
    Name: run
    PrependShell: true
  - Key: PARENT_DIR
    Name: arg
    Value: /srv/shiny-server
  - Key: DATA_DIR
    Name: arg
    Value: ${PARENT_DIR}/data
  - Key: WWW_DIR
    Name: arg
    Value: ${PARENT_DIR}/www
  - Key: TEMP_DIR
    Name: arg
    Value: ${PARENT_DIR}/staging
  - Key: OUTPUT_DIR
    Name: arg
    Value: ${PARENT_DIR}/output
  - Key: LOG_DIR
    Name: arg
    Value: /var/log/shiny-server
  - CmdLine:
    - "mkdir -p $PARENT_DIR \t&& mkdir -p $DATA_DIR  \t&& mkdir -p $WWW_DIR  \t&&
      ln -s /tmp $TEMP_DIR  \t&& mkdir -p $OUTPUT_DIR  \t&& mkdir -p $LOG_DIR \t&&
      chown $PUID.$PGID -R $PARENT_DIR"
    Name: run
    PrependShell: true
  - Env:
    - Key: REQUIRED_PACKAGES
      Value: ${REQUIRED_PACKAGES}
    Name: env
  - Env:
    - Key: REQUIRED_PACKAGES_PLUS
      Value: ${REQUIRED_PACKAGES_PLUS}
    Name: env
  - Env:
    - Key: DATA_DIR
      Value: ${DATA_DIR}
    Name: env
  - Env:
    - Key: WWW_DIR
      Value: ${WWW_DIR}
    Name: env
  - Env:
    - Key: TEMP_DIR
      Value: ${TEMP_DIR}
    Name: env
  - Env:
    - Key: OUTPUT_DIR
      Value: ${OUTPUT_DIR}
    Name: env
  - Env:
    - Key: LOG_DIR
      Value: ${LOG_DIR}
    Name: env
  - CmdLine:
    - /usr/bin/shiny-server.sh
    Name: cmd
    PrependShell: false
  From:
    Image: rocker/r-ver:latest
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/r-ver:latest
