MetaArgs: null
Stages:
- BaseName: java:openjdk-8
  Commands:
  - Env:
    - Key: OSM_HOME
      Value: /osm
    Name: env
  - Env:
    - Key: OSM_CONFIG_HOME
      Value: /osm/config
    Name: env
  - Env:
    - Key: JAVA_OPTS
      Value: '"-server -Dgrails.env=prod -Dfile.encoding=UTF-8"'
    Name: env
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.3.0
    Name: env
  - CmdLine:
    - groupadd -r osm && useradd -ms /bin/bash -r -g osm osm
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&     tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&     rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $OSM_HOME $OSM_HOME/logs $OSM_CONFIG_HOME &&     chmod -R 775 $OSM_HOME
      $OSM_CONFIG_HOME &&     chown -R osm:100 $OSM_HOME $OSM_CONFIG_HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $OSM_HOME
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./build/libs/OpenSpeedMonitor*.war
    - $OSM_HOME/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/templates/osm-config.yml.j2
    - $OSM_CONFIG_HOME/OpenSpeedMonitor-config.yml.j2
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod 775 /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: user
    User: osm
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: java:openjdk-8
  Name: ""
  Platform: ""
  SourceCode: FROM java:openjdk-8
