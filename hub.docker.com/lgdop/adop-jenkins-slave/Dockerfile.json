{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Maintainer": "\"Nick Griffin\" \u003cnicholas.griffin@accenture.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "1.8.0_202"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_TARBALL",
              "Value": "jdk-8u202-linux-x64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/java/jdk${JAVA_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWARM_MASTER",
              "Value": "http://jenkins:8080/jenkins/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWARM_USER",
              "Value": "jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWARM_PASSWORD",
              "Value": "jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_NAME",
              "Value": "\"Swarm_Slave\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_LABELS",
              "Value": "\"docker aws ldap\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_MODE",
              "Value": "\"exclusive\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_EXECUTORS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAVE_DESCRIPTION",
              "Value": "\"Core Jenkins Slave\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y install epel-release \u0026\u0026     yum -y install which     wget     tar     zip     unzip     openldap-clients     openssl     python-pip     libxslt     expect     dos2unix     telnet     nc     net-tools     strace     glibc.i686     file     sendmail     http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm \u0026\u0026     yum install -y git \u0026\u0026     yum clean all \u0026\u0026     pip install awscli==1.10.19     mammoth     pymongo     requests==2.13.0     jsondiff     paramiko     jira     python-dotenv     python-jenkins     python-docx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_ENGINE_VERSION",
              "Value": "1.10.3-1.el7.centos"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_MACHINE_VERSION",
              "Value": "v0.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "confluence.py",
            "/usr/lib/python2.7/site-packages"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.ini",
            "/usr/lib/python2.7/site-packages"
          ]
        },
        {
          "CmdLine": [
            "curl -fsSL https://get.docker.com/ | sed \"s/docker-engine/docker-engine-${DOCKER_ENGINE_VERSION}/\" | sh \u0026\u0026     curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` \u003e /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose \u0026\u0026     curl -L https://github.com/docker/machine/releases/download/${DOCKER_MACHINE_VERSION}/docker-machine-`uname -s`-`uname -m` \u003e/usr/local/bin/docker-machine \u0026\u0026     chmod +x /usr/local/bin/docker-machine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q --no-check-certificate --directory-prefix=/tmp          --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\"             https://download.oracle.com/otn-pub/java/jdk/8u202-b08/1961070e4c9b4e26a04e7f5a083f551e/${JAVA_TARBALL} \u0026\u0026           mkdir -p /opt/java \u0026\u0026               tar -xzf /tmp/${JAVA_TARBALL} -C /opt/java/ \u0026\u0026             alternatives --install /usr/bin/java java /opt/java/jdk${JAVA_VERSION}/bin/java 100 \u0026\u0026                 rm -rf /tmp/* \u0026\u0026 rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -o /bin/swarm-client.jar -k http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/2.0/swarm-client-2.0-jar-with-dependencies.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "java -jar /bin/swarm-client.jar -executors ${SLAVE_EXECUTORS} -description \"${SLAVE_DESCRIPTION}\" -master ${SWARM_MASTER} -username ${SWARM_USER} -password ${SWARM_PASSWORD} -name \"${SLAVE_NAME}\" -labels \"${SLAVE_LABELS}\" -mode ${SLAVE_MODE}"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}