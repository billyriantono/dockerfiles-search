{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "arm32v7/alpine:latest",
      "SourceCode": "FROM arm32v7/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "arm32v7/alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOGS_CUSTOM",
              "Value": "/data/gogs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QEMU_EXECVE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/armhf/qemu-arm-static",
            "/usr/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/armhf/resin-xbuild",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/qemu-arm-static",
            "/bin/sh",
            "-c",
            "ln -s resin-xbuild /usr/bin/cross-build-start; ln -s resin-xbuild /usr/bin/cross-build-end; ln /bin/sh /bin/sh.real"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "cross-build-start"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/tianon/gosu/releases/download/1.9/gosu-armhf",
            "/usr/sbin/gosu"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/sbin/gosu   \u0026\u0026 echo http://dl-2.alpinelinux.org/alpine/edge/community/ \u003e\u003e /etc/apk/repositories   \u0026\u0026 apk --no-cache --no-progress add     bash     ca-certificates     curl     git     linux-pam     openssh     s6     shadow     socat     tzdata     rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/nsswitch.conf",
            "/etc/nsswitch.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker",
            "/app/gogs/docker"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "/app/gogs/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "public",
            "/app/gogs/public"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app/gogs/build"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "./docker/build-go.sh     \u0026\u0026 ./docker/build.sh     \u0026\u0026 ./docker/finalize.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cross-build-end"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "3000"
          ]
        },
        {
          "CmdLine": [
            "/app/gogs/docker/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/s6-svscan",
            "/app/gogs/docker/s6/"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}