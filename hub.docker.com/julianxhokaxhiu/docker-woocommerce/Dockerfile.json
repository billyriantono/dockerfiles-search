{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-apache",
      "SourceCode": "FROM php:7.3-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.3-apache"
      },
      "Commands": [
        {
          "Maintainer": "Julian Xhokaxhiu \u003cinfo [at] julianxhokaxhiu [dot] com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"PHP Docker for Woocommerce on Steroids\""
            },
            {
              "Key": "Vendor",
              "Value": "\"Julian Xhokaxhiu\""
            },
            {
              "Key": "Version",
              "Value": "\"0.4\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./pngout-static",
            "/usr/bin/pngout"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite   \u0026\u0026 a2enmod headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y       libpng-dev       libjpeg-dev       libxml2-dev       libxslt-dev       libgraphicsmagick1-dev       graphicsmagick       libjpeg-turbo-progs       optipng       pngquant       gifsicle       webp   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr   \u0026\u0026 docker-php-ext-install       gd       json       mysqli       pdo       pdo_mysql       opcache       gettext       exif       calendar       soap       xsl       sockets       wddx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install apcu \u0026\u0026 docker-php-ext-enable apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install gmagick-beta \u0026\u0026 docker-php-ext-enable gmagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" \u003e /usr/bin/wp     \u0026\u0026 chmod +x /usr/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo 'opcache.memory_consumption=128';     echo 'opcache.interned_strings_buffer=8';     echo 'opcache.max_accelerated_files=4000';     echo 'opcache.revalidate_freq=60';     echo 'opcache.fast_shutdown=1';     echo 'opcache.enable_cli=1';   } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"upload_max_filesize = 25M\";     echo \"post_max_size = 50M\";   } \u003e /usr/local/etc/php/conf.d/uploads.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"expose_php = Off\";     echo \"display_startup_errors = off\";     echo \"display_errors = off\";     echo \"html_errors = off\";     echo \"log_errors = off\";     echo \"error_log = /dev/stderr\";     echo \"ignore_repeated_errors = off\";     echo \"ignore_repeated_source = off\";     echo \"report_memleaks = on\";     echo \"track_errors = on\";     echo \"docref_root = 0\";     echo \"docref_ext = 0\";     echo \"error_reporting = -1\";     echo \"log_errors_max_len = 0\";   } \u003e /usr/local/etc/php/conf.d/security.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"ServerSignature Off\";     echo \"ServerTokens Prod\";     echo \"TraceEnable off\";   } \u003e\u003e /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        }
      ]
    }
  ]
}