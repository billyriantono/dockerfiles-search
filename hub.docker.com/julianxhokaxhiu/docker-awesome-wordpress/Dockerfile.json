{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Maintainer": "Julian Xhokaxhiu",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "a2enmod rewrite   \u0026\u0026 a2enmod headers   \u0026\u0026 a2enmod ldap   \u0026\u0026 a2enmod authnz_ldap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"\\nTLS_REQCERT never\\n\" \u003e\u003e /etc/ldap/ldap.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y git zip zlib1g-dev libpng-dev libjpeg-dev libxml2-dev libxslt-dev libgraphicsmagick1-dev graphicsmagick libldap2-dev mcrypt libmcrypt-dev libltdl7 mariadb-client gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install apcu \u0026\u0026 docker-php-ext-enable apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install gmagick-beta \u0026\u0026 docker-php-ext-enable gmagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install mcrypt-1.0.1 \u0026\u0026 docker-php-ext-enable mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr   \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/   \u0026\u0026 docker-php-ext-install gd json mysqli pdo pdo_mysql opcache gettext exif calendar soap sockets wddx ldap zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" \u003e /usr/bin/wp     \u0026\u0026 chmod +x /usr/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer     \u0026\u0026 chmod +x /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1   \u0026\u0026 apt-get install -y ca-certificates-java openjdk-8-jre-headless libbatik-java   \u0026\u0026 curl -sL https://deb.nodesource.com/setup_8.x | bash -   \u0026\u0026 apt-get install -y nodejs fontforge   \u0026\u0026 npm i -g ttf2eot   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo 'opcache.memory_consumption=128';     echo 'opcache.interned_strings_buffer=8';     echo 'opcache.max_accelerated_files=4000';     echo 'opcache.revalidate_freq=60';     echo 'opcache.fast_shutdown=1';     echo 'opcache.enable_cli=1';   } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"upload_max_filesize = 25M\";     echo \"post_max_size = 50M\";   } \u003e /usr/local/etc/php/conf.d/uploads.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"expose_php = Off\";     echo \"display_startup_errors = off\";     echo \"display_errors = off\";     echo \"html_errors = off\";     echo \"log_errors = on\";     echo \"error_log = /dev/stderr\";     echo \"ignore_repeated_errors = off\";     echo \"ignore_repeated_source = off\";     echo \"report_memleaks = on\";     echo \"track_errors = on\";     echo \"docref_root = 0\";     echo \"docref_ext = 0\";     echo \"error_reporting = -1\";     echo \"log_errors_max_len = 0\";   } \u003e /usr/local/etc/php/conf.d/security.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"ServerSignature Off\";     echo \"ServerTokens Prod\";     echo \"TraceEnable off\";   } \u003e\u003e /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y --auto-remove libpng-dev libjpeg-dev libxml2-dev libxslt-dev libgraphicsmagick1-dev libldap2-dev libmcrypt-dev openjdk-8-jre openjdk-8-jre-headless"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        }
      ]
    }
  ]
}