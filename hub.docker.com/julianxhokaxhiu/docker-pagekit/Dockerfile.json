{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Maintainer": "Julian Xhokaxhiu \u003cinfo at julianxhokaxhiu dot com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"PHP Docker for Pagekit\""
            },
            {
              "Key": "Vendor",
              "Value": "\"Julian Xhokaxhiu\""
            },
            {
              "Key": "Version",
              "Value": "\"0.2\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash   \u0026\u0026 apt-get install -y --no-install-recommends libpng12-dev libjpeg-dev libxml2-dev libgraphicsmagick1-dev zlib1g-dev graphicsmagick git zip nodejs   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr   \u0026\u0026 docker-php-ext-install gd json mysqli pdo pdo_mysql opcache gettext exif calendar soap sockets wddx zip   \u0026\u0026 curl --silent --show-error https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer   \u0026\u0026 npm install -g bower gulp webpack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install apcu \u0026\u0026 docker-php-ext-enable apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl -vvv install gmagick-beta \u0026\u0026 docker-php-ext-enable gmagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo 'opcache.memory_consumption=128';     echo 'opcache.interned_strings_buffer=8';     echo 'opcache.max_accelerated_files=4000';     echo 'opcache.revalidate_freq=60';     echo 'opcache.fast_shutdown=1';     echo 'opcache.enable_cli=1';   } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"upload_max_filesize = 25M\";     echo \"post_max_size = 50M\";   } \u003e /usr/local/etc/php/conf.d/uploads.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo \"ServerSignature Off\";     echo \"ServerTokens Prod\";     echo \"TraceEnable off\";   } \u003e\u003e /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        }
      ]
    }
  ]
}