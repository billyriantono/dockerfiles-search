{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7.13-alpine",
      "SourceCode": "FROM python:2.7.13-alpine",
      "Platform": "",
      "From": {
        "Image": "python:2.7.13-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache \t\tca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.06.1-ce"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tapk add --no-cache --virtual .fetch-deps \t\tcurl \t\ttar \t; \t\tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64) dockerArch='x86_64' ;; \t\ts390x) dockerArch='s390x' ;; \t\t*) echo \u003e\u00262 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;\tesac; \t\tif ! curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\"; then \t\techo \u003e\u00262 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\ttar --extract \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/ \t; \trm docker.tgz; \t\tapk del .fetch-deps; \t\tdockerd -v; \tdocker -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app",
            "/opt/docker-service-replicas-exporter"
          ]
        },
        {
          "CmdLine": [
            "pip install -r /opt/docker-service-replicas-exporter/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9258"
          ]
        },
        {
          "CmdLine": [
            "python",
            "/opt/docker-service-replicas-exporter/exporter.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}