MetaArgs: null
Stages:
- BaseName: phusion/baseimage:latest
  Commands:
  - Maintainer: Natan SÄ…gol <m@merlinnot.com>
    Name: maintainer
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get -qq update && apt-get -qq upgrade -y -o       Dpkg::Options::="--force-confold"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends vim nano git wget curl unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/service/sshd/down && /usr/sbin/enable_insecure_key
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.ssh && curl -sL       https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub       >
      /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends       python       python3       python-dev       python3-dev       python-pip       python3-pip       libpython-all-dev       libpython3-all-dev       python-setuptools       python3-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends       build-essential       clang
    Name: run
    PrependShell: true
  - CmdLine:
    - BOOST_MAJOR=1 &&     BOOST_MINOR=62 &&     BOOST_PATCH=0 &&     BOOST_BASE_URL="http://sourceforge.net/projects/boost/files/boost/"
      &&     BOOST_VERSION_DIR="${BOOST_MAJOR}.${BOOST_MINOR}.${BOOST_PATCH}/" &&     BOOST_PKG="boost_${BOOST_MAJOR}_${BOOST_MINOR}_${BOOST_PATCH}.tar.bz2"
      &&     wget -c       "${BOOST_BASE_URL}${BOOST_VERSION_DIR}${BOOST_PKG}/download"       --directory-prefix=/tmp/boost/
      &&     mkdir /tmp/boost/extracted &&     tar -xf /tmp/boost/download -C /tmp/boost/extracted/
      &&     cd /tmp/boost/extracted/boost_1_${BOOST_MINOR}_0 &&     ./bootstrap.sh
      --prefix=/usr/local/ &&     ./b2 -d0 install &&     rm -r /tmp/boost
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends libtinfo-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${HOME}/.local/bin:${PATH}"'
    Name: env
  - CmdLine:
    - curl -sSLq https://get.haskellstack.org/ | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - stack setup
    Name: run
    PrependShell: true
  - CmdLine:
    - stack install       apply-refact       hlint       stylish-haskell       hasktags       hoogle       intero       hindent
    Name: run
    PrependShell: true
  - CmdLine:
    - GO_VERSION="1.7.3" &&     GO_BASE_URL="https://storage.googleapis.com/golang/"
      &&     wget -q ${GO_BASE_URL}go${GO_VERSION}.linux-amd64.tar.gz &&     tar -xf
      go${GO_VERSION}.linux-amd64.tar.gz &&     mv go /usr/local &&     rm go${GO_VERSION}.linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ${HOME}/.go
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: ${HOME}/.go
    Name: env
  - Env:
    - Key: PATH
      Value: '"${GOPATH}/bin:${GOROOT}/bin:${PATH}"'
    Name: env
  - CmdLine:
    - go get -u       github.com/nsf/gocode       github.com/rogpeppe/godef       golang.org/x/tools/cmd/guru       golang.org/x/tools/cmd/gorename       golang.org/x/tools/cmd/goimports       github.com/alecthomas/gometalinter
      &&     gometalinter --install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "${GOPATH}/bin" && curl https://glide.sh/get | sh
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_APPENGINE_VERSION
      Value: '"1.9.46"'
    Name: env
  - Env:
    - Key: GO_APPENGINE_URL
      Value: '"https://storage.googleapis.com/appengine-sdks/featured/"'
    Name: env
  - Env:
    - Key: GO_APPENGINE_FILE
      Value: '"go_appengine_sdk_linux_amd64-${GO_APPENGINE_VERSION}.zip"'
    Name: env
  - CmdLine:
    - wget -q       "${GO_APPENGINE_URL}${GO_APPENGINE_FILE}"       -O /tmp/sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip -qq /tmp/sdk.zip -d "${HOME}" &&     rm /tmp/sdk.zip &&     mv "${HOME}/go_appengine"
      "${HOME}/.go_appengine"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/local/.go_appengine"'
    Name: env
  - CmdLine:
    - go get google.golang.org/appengine
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | bash &&     apt-get install
      -y --no-install-recommends nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g       tern       js-beautify       eslint
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://dl.yarnpkg.com/debian/pubkey.gpg |     apt-key add - &&     echo
      "deb http://dl.yarnpkg.com/debian/ stable main" |     tee /etc/apt/sources.list.d/yarn.list
      &&     apt-get update &&     apt-get install yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends emacs
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .spacemacs
    - /root/.spacemacs
  - CmdLine:
    - emacs -nw -batch -u "${UNAME}" -q -kill
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install thefuck
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends unzip &&     wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip
      &&     unzip -q google-cloud-sdk.zip &&     mv ./google-cloud-sdk ${HOME}/.google-cloud-sdk
      &&     rm -r google-cloud-sdk* &&     ${HOME}/.google-cloud-sdk/install.sh       --usage-reporting=true       --path-update=true       --bash-completion=true       --rc-path=${HOME}/.profile       --additional-components         app-engine-python         app         kubectl         alpha         beta         gcd-emulator         pubsub-emulator         cloud-datastore-emulator         app-engine-go         bigtable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install ngrok-client
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .bash_ext
    - /root/.bash_ext
  - CmdLine:
    - echo "source $HOME/.bash_ext" >> $HOME/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: phusion/baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:latest
