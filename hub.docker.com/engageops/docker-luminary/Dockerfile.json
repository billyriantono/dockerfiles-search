{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9 as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "Maintainer": "Matthew Cuyar \u003cmatt@elumatherapy.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add tzdata \u0026\u0026     cp /usr/share/zoneinfo/Etc/UTC /etc/localtime \u0026\u0026     echo \"UTC\" | tee /etc/timezone \u0026\u0026     apk del tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache bash git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "s6_version",
          "Name": "arg",
          "Value": "v1.22.0.0"
        },
        {
          "CmdLine": [
            "apk add --no-cache wget  \u0026\u0026 wget https://github.com/just-containers/s6-overlay/releases/download/${s6_version}/s6-overlay-amd64.tar.gz --no-check-certificate -O /tmp/s6-overlay.tar.gz  \u0026\u0026 tar xvfz /tmp/s6-overlay.tar.gz -C /  \u0026\u0026 rm -f /tmp/s6-overlay.tar.gz  \u0026\u0026 apk del wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add     php7 php7-cgi php7-ctype php7-curl php7-dom php7-exif php7-fileinfo php7-fpm php7-ftp php7-gd php7-iconv     php7-intl php7-json php7-ldap php7-mbstring php7-mcrypt php7-mysqli php7-opcache php7-openssl php7-pcntl     php7-pdo_mysql php7-pdo_pgsql php7-phar php7-pgsql php7-posix php7-redis php7-session php7-simplexml     php7-sockets php7-tokenizer php7-xml php7-xmlreader php7-xmlwriter php7-zip php7-zlib php7-pdo_sqlite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$COMPOSER_HOME/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add curl     \u0026\u0026 mkdir /composer     \u0026\u0026 curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mkdir -p /opt/composer     \u0026\u0026 mv composer.phar /opt/composer/composer.phar     \u0026\u0026 apk del curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/php7  \u0026\u0026 touch /var/log/php7/fpm-error.log  \u0026\u0026 ln -sf /dev/stderr /var/log/php7/fpm-error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/www/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add --virtual .build-deps bash curl tar libxml2-utils     \u0026\u0026 export JET_VERSION=$(/opt/scripts/jet-latest.sh)     \u0026\u0026 curl -SLO \"https://s3.amazonaws.com/codeship-jet-releases/${JET_VERSION}/jet-linux_amd64_${JET_VERSION}.tar.gz\"     \u0026\u0026 tar -xaC /usr/local/bin -f jet-linux_amd64_${JET_VERSION}.tar.gz     \u0026\u0026 chmod +x /usr/local/bin/jet     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -f jet-linux_amd64_${JET_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "composer create-project --prefer-dist --stability dev engage-php/luminary:dev-develop .     \u0026\u0026 composer clearcache     \u0026\u0026 rm -rf composer.lock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R nginx:nginx /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /var/www -type f -exec chmod 644 {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /var/www -type d -exec chmod 755 {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}