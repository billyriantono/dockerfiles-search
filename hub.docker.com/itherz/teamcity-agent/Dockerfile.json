{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "itherz/java8",
      "SourceCode": "FROM itherz/java8",
      "Platform": "",
      "From": {
        "Image": "itherz/java8"
      },
      "Commands": [
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update  \u0026\u0026 apt-get -qq upgrade -y  \u0026\u0026 apt-get -qq install -y curl procps git libfontconfig zip imagemagick libjpeg8-dev zlib1g-dev python-pip python-pythonmagick  \u0026\u0026 apt-get -qq clean -y  \u0026\u0026 pip install --upgrade pip  \u0026\u0026 pip install spritify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "4.4.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(curl -L https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz | gunzip -c | tar x)  \u0026\u0026 cp -R node-v${NODE_VERSION}-linux-x64/* /usr/  \u0026\u0026 rm -fR node-v${NODE_VERSION}-linux-x64  \u0026\u0026 npm update  -g  \u0026\u0026 npm install -g node-gyp bower grunt-cli gulp-cli karma-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(curl -L http://www.us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | gunzip -c | tar x)  \u0026\u0026 mv apache-maven-$MAVEN_VERSION apache-maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/apache-maven"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_OPTS",
              "Value": "-Xmx512m -Xss256k -XX:+UseCompressedOops"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$M2_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEAMCITY_VERSION",
              "Value": "10.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEAMCITY_GIT_PATH",
              "Value": "/usr/bin/git"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -LO http://download.jetbrains.com/teamcity/TeamCity-$TEAMCITY_VERSION.war  \u0026\u0026 unzip -qq TeamCity-$TEAMCITY_VERSION.war -d /tmp/teamcity  \u0026\u0026 unzip -qq /tmp/teamcity/update/buildAgent.zip -d /teamcity-agent  \u0026\u0026 chmod +x /teamcity-agent/bin/*.sh  \u0026\u0026 mv /teamcity-agent/conf/buildAgent.dist.properties /teamcity-agent/conf/buildAgent.properties  \u0026\u0026 rm -f TeamCity-$TEAMCITY_VERSION.war  \u0026\u0026 rm -fR /tmp/* ~/.cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/serverUrl=http:\\/\\/localhost:8111\\//serverUrl=http:\\/\\/teamcity:8080\\/teamcity\\//' /teamcity-agent/conf/buildAgent.properties  \u0026\u0026 sed -i 's/workDir=..\\/work/workDir=\\/home\\/teamcity\\/work/'                                  /teamcity-agent/conf/buildAgent.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AWS_MAVEN_VERSION",
              "Value": "5.0.0.RELEASE"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mvn dependency:get -DgroupId=org.springframework.build -DartifactId=aws-maven -Dversion=$AWS_MAVEN_VERSION  \u0026\u0026 mvn dependency:copy-dependencies -f /root/.m2/repository/org/springframework/build/aws-maven/$AWS_MAVEN_VERSION/aws-maven-$AWS_MAVEN_VERSION.pom -DincludeScope=runtime -DoutputDirectory=/teamcity-agent/plugins/mavenPlugin/maven-watcher-jdk16/  \u0026\u0026 cp /root/.m2/repository/org/springframework/build/aws-maven/$AWS_MAVEN_VERSION/aws-maven-$AWS_MAVEN_VERSION.jar /teamcity-agent/plugins/mavenPlugin/maven-watcher-jdk16/  \u0026\u0026 rm -f /teamcity-agent/plugins/mavenPlugin/maven-watcher-jdk16/logback-*  \u0026\u0026 rm -fR /root/.m2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m teamcity  \u0026\u0026 chown -R teamcity:teamcity /apache-maven /usr/lib/node_modules /teamcity-agent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "teamcity"
        },
        {
          "Name": "expose",
          "Ports": [
            "9090"
          ]
        },
        {
          "CmdLine": [
            "/teamcity-agent/bin/agent.sh",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}