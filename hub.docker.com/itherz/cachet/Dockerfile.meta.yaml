MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: Alt Three <support@alt-three.com>
    Name: maintainer
  - Key: cachet_ver
    Name: arg
    Value: null
  - Env:
    - Key: cachet_ver
      Value: ${cachet_ver:-master}
    Name: env
  - Env:
    - Key: PG_MAJOR
      Value: "9.5"
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.10.1-1~jessie
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.2.1
    Name: env
  - CmdLine:
    - echo "deb http://nginx.org/packages/debian/ jessie nginx" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     echo "APT::Install-Recommends \"0\";" >>
      /etc/apt/apt.conf.d/02recommends &&     echo "APT::Install-Suggests \"0\";"
      >> /etc/apt/apt.conf.d/02recommends &&     apt-get clean &&     apt-get -q -y
      --force-yes update &&     apt-get -q -y --force-yes install     ca-certificates     postgresql-client-$PG_MAJOR     mysql-client     nginx=${NGINX_VERSION}     php5-fpm
      php5-curl     php5-readline php5-mcrypt sudo     php5-apcu php5-cli php5-gd     php5-mysql
      php5-pgsql php5-sqlite     wget sqlite libsqlite3-dev git     supervisor cron
      &&     apt-get clean && apt-get autoremove -q &&     rm -rf /var/lib/apt/lists/*
      /usr/share/doc /usr/share/man /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php-fpm-pool.conf
    - /etc/php5/fpm/pool.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisor/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/html &&     chown -R www-data /var/www
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/crontab
    - /etc/cron.d/artisan-schedule
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chown www-data /sbin/entrypoint.sh &&     chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0644 /etc/cron.d/artisan-schedule &&         touch /var/log/cron.log
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser www-data sudo &&     echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log &&     ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html/
  - Name: user
    User: www-data
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');"
      &&     php -r "copy('https://composer.github.io/installer.sig', '/tmp/composer-setup.sig');"
      &&     php -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php'))
      !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php');
      echo 'Invalid installer' . PHP_EOL; exit(1); }" &&     php /tmp/composer-setup.php
      --version=$COMPOSER_VERSION &&     php -r "unlink('/tmp/composer-setup.php');"
      &&     php composer.phar global require "hirak/prestissimo:^0.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/cachethq/Cachet/archive/${cachet_ver}.tar.gz &&     tar
      xzvf ${cachet_ver}.tar.gz --strip-components=1 &&     chown -R www-data /var/www/html
      &&     rm -r ${cachet_ver}.tar.gz &&     php composer.phar install --no-dev
      -o &&     rm -rf bootstrap/cache/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/.env.docker
    - /var/www/html/.env
  - Name: volume
    Volumes:
    - /var/www
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
