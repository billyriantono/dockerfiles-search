{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm",
      "SourceCode": "FROM php:5.6-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Dmitrii Zolotov \u003cdzolotov@herzen.spb.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt upgrade -y \u0026\u0026 apt install -y ssmtp git zlib1g-dev libmemcached-dev libmcrypt-dev libldap2-dev freetds-dev libjpeg-dev libpng-dev libfreetype6-dev libcurl4-gnutls-dev libxml2-dev libicu-dev libgmp3-dev libxslt1-dev wget python-setuptools libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y cmake clang build-essential automake libpcre++-dev bison \u0026\u0026 cd /tmp \u0026\u0026 git clone https://github.com/swig/swig.git \u0026\u0026 cd swig \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure --prefix=/usr \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 mkdir proton \u0026\u0026 cd proton \u0026\u0026 wget https://dist.apache.org/repos/dist/release/qpid/proton/0.16.0/qpid-proton-0.16.0.tar.gz \u0026\u0026 tar xzvpf qpid-proton* \u0026\u0026     cd qpid-proton* \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 CXX=clang++ CC=clang cmake -DCMAKE_CXX_FLAGS=-std=c++11 -DSYSINSTALL_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/usr .. \u0026\u0026     make \u0026\u0026 make install \u0026\u0026 rm -rf /tmp/proton"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/f/firebird3.0/firebird-dev_3.0.2.32703.ds4-14_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/f/firebird3.0/libfbclient2_3.0.2.32703.ds4-14_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/f/firebird3.0/firebird3.0-common_3.0.2.32703.ds4-14_all.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/f/firebird3.0/firebird3.0-common-doc_3.0.2.32703.ds4-14_all.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/libt/libtommath/libtommath1_1.0-4_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/n/ncurses/libtinfo5_6.0+20171125-1_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/n/ncurses/libncurses5_6.0+20171125-1_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/n/ncurses/libncursesw5_6.0+20171125-1_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/f/firebird3.0/libib-util_3.0.2.32703.ds4-14_amd64.deb \u0026\u0026     dpkg -i *.deb \u0026\u0026 rm *.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/n/ncurses/libtinfo-dev_6.0+20171125-1_amd64.deb \u0026\u0026     wget http://ftp.ru.debian.org/debian/pool/main/n/ncurses/ncurses-bin_6.0+20171125-1_amd64.deb \u0026\u0026     dpkg -i *.deb \u0026\u0026 rm *.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/include/ldap.h /usr/lib/x86_64-linux-gnu \u0026\u0026     ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/ \u0026\u0026     mkdir /root/sybase \u0026\u0026 mkdir /root/sybase/include \u0026\u0026 mkdir /root/sybase/lib \u0026\u0026     ln -s /usr/include/syb*.h /root/sybase/include \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libsyb* /root/sybase/lib \u0026\u0026     docker-php-ext-configure pdo_dblib --with-pdo-dblib=/root/sybase \u0026\u0026     docker-php-ext-configure ldap --with-ldap=/usr/lib/x86_64-linux-gnu \u0026\u0026     docker-php-ext-configure mysqli --with-mysqli=mysqlnd \u0026\u0026     docker-php-ext-configure mysql \u0026\u0026     docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     sed -i 's~;pid.*~pid=/run/php-fpm.pid~ig' /usr/local/etc/php-fpm.conf \u0026\u0026     cd /root \u0026\u0026 git clone https://github.com/php-memcached-dev/php-memcached \u0026\u0026 cd php-memcached \u0026\u0026 git checkout REL2_0 \u0026\u0026 phpize \u0026\u0026 ./configure --disable-memcached-sasl \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 echo \"extension=memcached.so\" \u003e\u003e/usr/local/etc/php/conf.d/docker-php-ext-memcached.ini \u0026\u0026 rm -r /root/php-memcached \u0026\u0026     cd /root \u0026\u0026 git clone https://github.com/phpredis/phpredis \u0026\u0026 cd phpredis \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 echo \"extension=redis.so\" \u003e\u003e/usr/local/etc/php/conf.d/docker-php-ext-redis.ini \u0026\u0026 rm -rf /root/phpredis \u0026\u0026     docker-php-ext-install -j4 pdo interbase ctype iconv mcrypt ldap curl pdo_mysql mysqli soap intl gd gmp bcmath mbstring zip pcntl xsl json phar pdo_dblib pdo_firebird mysql \u0026\u0026     echo \"zend_extension=opcache.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \u0026\u0026     echo \"extension=phar.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-phar.ini \u0026\u0026     echo \"extension=json.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-json.ini \u0026\u0026     echo \"extension=curl.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-curl.ini \u0026\u0026     echo \"extension=iconv.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-iconv.ini \u0026\u0026     echo \"extension=interbase.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-interbase.ini \u0026\u0026     echo \"extension=curl.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-curl.ini \u0026\u0026     echo \"extension=pdo.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-pdo.ini \u0026\u0026     echo \"extension=pdo_firebird.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-pdo_firebird.ini \u0026\u0026     echo \"extension=ctype.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-ctype.ini \u0026\u0026     echo \"extension=mysql.so\" \u003e/usr/local/etc/php/conf.d/docker-php-ext-mysql.ini \u0026\u0026     ln -s /usr/local/bin/php /usr/bin/php \u0026\u0026     mkdir /root/conf.d \u0026\u0026 mv /usr/local/etc/php/conf.d/proton.ini /root/conf.d/docker-php-ext-proton.ini \u0026\u0026     cp -v /usr/local/etc/php/conf.d/* /root/conf.d/ \u0026\u0026     cd /usr/bin \u0026\u0026 wget https://getcomposer.org/composer.phar \u0026\u0026 mv composer.phar composer \u0026\u0026 chmod +x composer \u0026\u0026     wget http://gordalina.github.io/cachetool/downloads/cachetool.phar \u0026\u0026 mv cachetool.phar cachetool \u0026\u0026 chmod +x cachetool \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 mkdir -p /run/php \u0026\u0026 mkdir /var/log/supervisor/ \u0026\u0026 /usr/bin/easy_install supervisor \u0026\u0026 /usr/bin/easy_install supervisor-stdout \u0026\u0026 mkdir /etc/container.run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fastcgi-php.conf",
            "/etc/nginx/snippets/fastcgi-php.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "startFPMWithDockerEnvs.sh",
            "/usr/local/etc/php/startFPMWithDockerEnvs.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php-production.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php-development.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "00-enable_modules",
            "/etc/container-run.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "01-apply_environment",
            "/etc/container-run.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/"
          ]
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "GMT"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MODULES",
              "Value": "opcache phar json"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBUG",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEVUSER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-n",
            "-c",
            "/etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}