MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: NGINX Docker Maintainers "docker-maint@nginx.com", Dmitrii Zolotov
      <dzolotov@herzen.spb.ru>
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.11.5
    Name: env
  - Env:
    - Key: LUA_VERSION
      Value: 5.3.3
    Name: env
  - Env:
    - Key: NGX_DEVEL_KIT_VERSION
      Value: 0.3.0
    Name: env
  - Env:
    - Key: LUAJIT_VERSION
      Value: 2.0.4
    Name: env
  - Env:
    - Key: LUA_NGINX_MODULE_VERSION
      Value: 0.10.6
    Name: env
  - Env:
    - Key: LUAJIT_LIB
      Value: /usr/local/lib/lua/5.1
    Name: env
  - Env:
    - Key: LUAJIT_INC
      Value: /usr/local/include/luajit-2.0
    Name: env
  - CmdLine:
    - "apk update && apk add git && mkdir -p /opt && cd /opt && git clone https://github.com/simpl/ngx_devel_kit
      && cd ngx_devel_kit && git checkout -b v$NGX_DEVEL_KIT_VERSION &&     apk add
      make g++ && cd /opt && git clone https://github.com/luajit/luajit && cd luajit
      && git checkout -b v$LUAJIT_VERSION && make && make install && cd .. &&     cd
      /opt && git clone https://github.com/openresty/lua-nginx-module && cd lua-nginx-module
      && git checkout -b v$LUA_NGINX_MODULE_VERSION &&     cd /opt && git clone https://github.com/kvspb/nginx-auth-ldap.git
      && apk del git &&     GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&&
      CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules
      \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log
      \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid
      \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx                 --with-ld-opt=\"-Wl,-rpath,/usr/local/lib/lua/5.1\"
      \                --add-module=/opt/ngx_devel_kit                 --add-module=/opt/lua-nginx-module
      \                --add-module=/opt/nginx-auth-ldap \t\t--with-http_ssl_module
      \t\t--with-http_realip_module \t\t--with-http_addition_module \t\t--with-http_sub_module
      \t\t--with-http_dav_module \t\t--with-http_flv_module \t\t--with-http_mp4_module
      \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module
      \t\t--with-http_secure_link_module \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module
      \t\t--with-http_xslt_module=dynamic \t\t--with-http_image_filter_module=dynamic
      \t\t--with-http_geoip_module=dynamic \t\t--with-http_perl_module=dynamic \t\t--with-threads
      \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module
      \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio
      \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h
      /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual
      .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev
      \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev
      \t\tperl-dev                 openldap-dev \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
      -o nginx.tar.gz \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc
      \ -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \t&& gpg --batch --verify
      nginx.tar.gz.asc nginx.tar.gz \t&& rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t&&
      mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz
      \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug
      \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug
      \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so
      objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf
      _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir
      /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html
      /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/
      \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755
      objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \        && rm -rf /opt \t\t&& apk add --no-cache --virtual .gettext gettext
      \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner
      /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps
      $runDeps \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst
      /usr/local/bin/ \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln
      -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
