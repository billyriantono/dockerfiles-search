{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitwalker/alpine-elixir-phoenix:1.8.1",
      "SourceCode": "FROM bitwalker/alpine-elixir-phoenix:1.8.1",
      "Platform": "",
      "From": {
        "Image": "bitwalker/alpine-elixir-phoenix:1.8.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ALPINE_VERSION",
              "Value": "3.9"
            },
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PATH",
              "Value": "/usr/local/bin/"
            },
            {
              "Key": "PATH",
              "Value": "\"/usr/local/lib/python$PYTHON_VERSION/bin/:/usr/local/lib/pyenv/versions/$PYTHON_VERSION/bin:${PATH}\""
            },
            {
              "Key": "PACKAGES",
              "Value": "\"      dumb-init       musl       libc6-compat       linux-headers       build-base       bash       git       ca-certificates       libssl1.0     \""
            },
            {
              "Key": "PYTHON_BUILD_PACKAGES",
              "Value": "\"      bzip2-dev       coreutils       dpkg-dev dpkg       expat-dev       findutils       gcc       gdbm-dev       libc-dev       libffi-dev       libnsl-dev       libtirpc-dev       linux-headers       make       ncurses-dev       libressl-dev       pax-utils       readline-dev       sqlite-dev       tcl-dev       tk       tk-dev       util-linux-dev       xz-dev       zlib-dev       git     \""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'http://dl-cdn.alpinelinux.org/alpine/v3.8/main' \u003e\u003e /etc/apk/repositories \u0026\u0026    apk add libssl1.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex ;    export PYTHON_MAJOR_VERSION=$(echo \"${PYTHON_VERSION}\" | rev | cut -d\".\" -f3-  | rev) ;    export PYTHON_MINOR_VERSION=$(echo \"${PYTHON_VERSION}\" | rev | cut -d\".\" -f2-  | rev) ;    echo \"http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/community\" \u003e\u003e /etc/apk/repositories ;    echo \"http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main\" \u003e\u003e /etc/apk/repositories ;    apk add --no-cache $PACKAGES ||         (sed -i -e 's/dl-cdn/dl-4/g' /etc/apk/repositories \u0026\u0026 apk add --no-cache --force-broken-world $PACKAGES)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps $PYTHON_BUILD_PACKAGES ||         (sed -i -e 's/dl-cdn/dl-4/g' /etc/apk/repositories \u0026\u0026 apk add --no-cache --virtual --force-broken-world .build-deps $PYTHON_BUILD_PACKAGES) ;    echo \"http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main/\" \u003e /etc/apk/repositories ;    git clone --depth 1 https://github.com/pyenv/pyenv /usr/local/lib/pyenv ;    GNU_ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ;    PYENV_ROOT=/usr/local/lib/pyenv CONFIGURE_OPTS=\"--build=$GNU_ARCH --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip --with-shared\" /usr/local/lib/pyenv/bin/pyenv install $PYTHON_VERSION ;    find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';'         | tr ',' '\\n'         | sort -u         | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'         | grep -ve 'libpython'         | xargs -rt apk add --no-cache --virtual .python-rundeps ;    find /usr/local/lib/pyenv/ -mindepth 1 -name versions -prune -o -exec rm -rf {} \\; || true ;    find /usr/local/lib/pyenv/versions/$PYTHON_VERSION/ -depth \\( -name '*.pyo' -o -name '*.pyc' -o -name 'test' -o -name 'tests' \\) -exec rm -rf '{}' + ;    ln -s /usr/local/lib/pyenv/versions/$PYTHON_VERSION/bin/* $PYTHON_PATH ;    apk del --no-cache --purge .build-deps ;    rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/dumb-init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}