{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:8-alpine",
      "SourceCode": "FROM node:8-alpine",
      "Platform": "",
      "From": {
        "Image": "node:8-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "[ ! -e /etc/nsswitch.conf ] \u0026\u0026 echo 'hosts: files dns' \u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.09.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VER",
              "Value": "1.23.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARCH",
              "Value": "x86_64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;     echo 'http://nl.alpinelinux.org/alpine/edge/testing' | tee -a /etc/apk/repositories \u0026\u0026     apk add --no-cache aws-cli bash curl py3-pip git openssh-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux; \tif ! wget -O docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${ARCH}/docker-${DOCKER_VERSION}.tgz\"; then \t\techo \u003e\u00262 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${ARCH}'\"; \t\texit 1; \tfi; \t\ttar --extract \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/ \t; \trm docker.tgz; \t\tdockerd --version; \tdocker --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install docker-compose \u0026\u0026     docker-compose --version"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}