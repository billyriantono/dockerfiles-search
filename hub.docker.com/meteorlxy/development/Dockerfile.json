{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer.name",
              "Value": "\"meteorlxy\""
            },
            {
              "Key": "maintainer.email",
              "Value": "\"meteor.lxy@foxmail.com\""
            },
            {
              "Key": "description",
              "Value": "\"Meteorlxy Development Image\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"Asia/Shanghai\""
            },
            {
              "Key": "LC_ALL",
              "Value": "\"C.UTF-8\""
            },
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "NODE_VERSION",
          "Name": "arg",
          "Value": "\"12.x\""
        },
        {
          "Key": "PHP_VERSION",
          "Name": "arg",
          "Value": "\"7.3\""
        },
        {
          "Key": "GO_VERSION",
          "Name": "arg",
          "Value": "\"1.12.7\""
        },
        {
          "CmdLine": [
            "APT_INSTALL=\"apt-get install --no-install-recommends -y\" \u0026\u0026     export DEBIAN_FRONTEND=noninteractive \u0026\u0026     set -x \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL       apt-utils       ca-certificates       curl       gnupg       git       htop       net-tools       openssh-server       software-properties-common       tzdata       unzip       vim       wget       zip       \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL       build-essential       cmake       g++       gcc       gdb       make       \u0026\u0026     curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} |  bash - \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL       nodejs       yarn       \u0026\u0026     npm install -g npm \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL       python       python-dev       python3       python3-dev       \u0026\u0026     curl -L https://bootstrap.pypa.io/get-pip.py | python2 \u0026\u0026     curl -L https://bootstrap.pypa.io/get-pip.py | python3 \u0026\u0026     pip --no-cache-dir install pipenv \u0026\u0026     add-apt-repository -y ppa:ondrej/php \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL       php${PHP_VERSION}-cli       php${PHP_VERSION}-curl       php${PHP_VERSION}-dom       php${PHP_VERSION}-gd       php${PHP_VERSION}-mbstring       php${PHP_VERSION}-mysql       php${PHP_VERSION}-soap       php${PHP_VERSION}-xdebug       php${PHP_VERSION}-zip       \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet \u0026\u0026     gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \u0026\u0026     curl -sSL https://get.rvm.io | bash -s stable --ruby --autolibs=enable --auto-dotfiles \u0026\u0026     gpasswd â€“a root rvm \u0026\u0026     curl -o /tmp/${GO_VERSION}.linux-amd64.tar.gz https://dl.google.com/go/${GO_VERSION}.linux-amd64.tar.gz \u0026\u0026     tar -zxf /tmp/${GO_VERSION}.linux-amd64.tar.gz -C /usr/local/ \u0026\u0026     ln -s /usr/local/go/bin/go /usr/local/bin/go \u0026\u0026     ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt \u0026\u0026     ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc \u0026\u0026     rm -f /tmp/${GO_VERSION}.linux-amd64.tar.gz \u0026\u0026     /usr/local/bin/go version \u0026\u0026     apt-get purge -y ${BUILD_PACKAGES} \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get autoclean -y \u0026\u0026     apt-get clean -y \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/tmp/* /tmp/* \u0026\u0026     npm cache clean --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}