MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Labels:
    - Key: maintainer.name
      Value: '"meteorlxy"'
    - Key: maintainer.email
      Value: '"meteor.lxy@foxmail.com"'
    - Key: description
      Value: '"Cloud9 Web IDE image"'
    Name: label
  - Name: user
    User: root
  - Env:
    - Key: C9_WORKSPACE
      Value: '"/workspace"'
    - Key: C9_AUTH_USER
      Value: '"user"'
    - Key: C9_AUTH_PASSWORD
      Value: '"password"'
    - Key: TZ
      Value: '"Asia/Shanghai"'
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    - Key: LANG
      Value: '"C.UTF-8"'
    Name: env
  - Key: NODE_VERSION
    Name: arg
    Value: '"10.x"'
  - Key: PHP_VERSION
    Name: arg
    Value: '"7.2"'
  - CmdLine:
    - BASE_PACKAGES="ca-certificates curl gnupg git python2.7 software-properties-common
      tzdata wget"     BUILD_PACKAGES="build-essential"     set -x       && export
      DEBIAN_FRONTEND=noninteractive       && apt-get update       && apt-get install
      --no-install-recommends -y         net-tools         unzip         vim         zip         ${BASE_PACKAGES}         ${BUILD_PACKAGES}       &&
      git clone --single-branch --depth 1 https://github.com/c9/core.git /cloud9       &&
      /cloud9/scripts/install-sdk.sh       && ln -s /cloud9/bin/c9 /usr/local/bin       &&
      curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} |  bash -       &&
      curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -       && echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list       &&
      apt-get update       && apt-get install --no-install-recommends -y nodejs yarn       &&
      npm install -g npm       && apt-get install --no-install-recommends -y python-dev
      python3-dev       && curl -L https://bootstrap.pypa.io/get-pip.py | python2       &&
      curl -L https://bootstrap.pypa.io/get-pip.py | python3       && pip --no-cache-dir
      install pipenv       && add-apt-repository -y ppa:ondrej/php       && apt-get
      update       && apt-get install --no-install-recommends -y         php${PHP_VERSION}-cli         php${PHP_VERSION}-curl         php${PHP_VERSION}-dom         php${PHP_VERSION}-gd         php${PHP_VERSION}-mbstring         php${PHP_VERSION}-mysql         php${PHP_VERSION}-soap         php${PHP_VERSION}-xdebug         php${PHP_VERSION}-zip       &&
      curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer --quiet       && gpg --keyserver hkp://keys.gnupg.net --recv-keys
      409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB       &&
      curl -sSL https://get.rvm.io | bash -s stable --ruby       && apt-get purge
      -y ${BUILD_PACKAGES}       && apt-get autoremove -y       && apt-get autoclean
      -y       && apt-get clean -y       && rm -rf /var/lib/apt/lists/* /var/tmp/*
      /tmp/* /root/.cache/* /root/.c9/tmp/* /root/.c9/tmux-* /root/.c9/libevent-*
      /root/.c9/ncurses-*       && npm cache clean --force
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./build/docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
