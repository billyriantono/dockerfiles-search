MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"deanjeans<deanjeans@live.com>"'
    Name: label
  - Key: SS_VER
    Name: arg
    Value: 3.1.3
  - Key: SS_OBFS_VER
    Name: arg
    Value: 0.0.5
  - Key: SS_URL
    Name: arg
    Value: https://github.com/shadowsocks/shadowsocks-libev/archive/v$SS_VER.tar.gz
  - Key: SS_OBFS_URL
    Name: arg
    Value: https://github.com/shadowsocks/simple-obfs/archive/v$SS_OBFS_VER.tar.gz
  - CmdLine:
    - set -ex &&     apk add --no-cache --virtual .build-deps                                 git                                 autoconf                                 automake                                 make                                 build-base                                 curl                                 libev-dev                                 libtool                                 linux-headers                                 udns-dev                                 libsodium-dev                                 mbedtls-dev                                 pcre-dev                                 tar                                 c-ares-dev
      &&     cd /tmp/ &&     git clone https://github.com/shadowsocks/shadowsocks-libev.git
      &&     cd shadowsocks-libev &&     git checkout v$SS_VER &&     git submodule
      update --init --recursive &&     ./autogen.sh &&     ./configure --prefix=/usr
      --disable-documentation &&     make install &&     cd /tmp/ &&     git clone
      https://github.com/shadowsocks/simple-obfs.git shadowsocks-obfs &&     cd shadowsocks-obfs
      &&     git checkout v$SS_OBFS_VER &&     git submodule update --init --recursive
      &&     ./autogen.sh &&     ./configure --prefix=/usr --disable-documentation
      &&     make install &&     cd .. &&     runDeps="$(         scanelf --needed
      --nobanner /usr/bin/ss-*             | awk '{ gsub(/,/, "\nso:", $2); print
      "so:" $2 }'             | xargs -r apk info --installed             | sort -u     )"
      &&     apk add --no-cache --virtual .run-deps $runDeps &&     apk del .build-deps
      &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: SERVER_ADDR
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: SERVER_PORT
      Value: "8388"
    Name: env
  - Env:
    - Key: PASSWORD
      Value: ispassword
    Name: env
  - Env:
    - Key: METHOD
      Value: chacha20
    Name: env
  - Env:
    - Key: TIMEOUT
      Value: "3600"
    Name: env
  - Env:
    - Key: DNS_ADDR
      Value: 8.8.8.8
    Name: env
  - Env:
    - Key: DNS_ADDR_2
      Value: 8.8.4.4
    Name: env
  - Env:
    - Key: OBFS_OPTS
      Value: obfs=http;obfs-host=www.bing.com
    Name: env
  - Name: expose
    Ports:
    - $SERVER_PORT/tcp
  - Name: expose
    Ports:
    - $SERVER_PORT/udp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
