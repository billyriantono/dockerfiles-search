{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc",
      "SourceCode": "FROM frolvlad/alpine-glibc",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update  \u0026\u0026 apk add --no-cache build-base cmake g++ linux-headers openssl python3-dev ca-certificates wget vim  \u0026\u0026 update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ECFLOW_VERSION",
              "Value": "5.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BOOST_VERSION",
              "Value": "1.71.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBUILD",
              "Value": "/tmp/ecflow_build"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${DBUILD}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${DBUILD}     \u0026\u0026 export BOOST_TGZ=boost_$(echo ${BOOST_VERSION} | tr '.' '_').tar.gz \t    ETGZ=ecFlow.tgz \t    HTTPB=https://dl.bintray.com/boostorg/release/1.71.0/source/boost_1_71_0.tar.gz \t    HTTPE=https://software.ecmwf.int/wiki/download/attachments/8650755     \u0026\u0026 wget -O ${ETGZ} ${HTTPE}/ecFlow-$ECFLOW_VERSION-Source.tar.gz?api=v2     \u0026\u0026 wget -O ${BOOST_TGZ} ${HTTPB}     \u0026\u0026 tar -xzf ${ETGZ}     \u0026\u0026 tar -xzf ${BOOST_TGZ}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${DBUILD}     \u0026\u0026 export WK=${DBUILD}/ecFlow-${ECFLOW_VERSION}-Source               BOOST_ROOT=${DBUILD}/boost_$(echo ${BOOST_VERSION} | tr '.' '_')     \u0026\u0026 cd ${BOOST_ROOT}     \u0026\u0026 python_root=$(python3 -c \"import sys; print(sys.prefix)\")     \u0026\u0026 ./bootstrap.sh  --with-python-root=$python_root                        --with-python=/usr/bin/python3     \u0026\u0026 sed -i \"s|using python : 3.7 :  ;|using python : 3 : python3 : /usr/include/python ;|g\" project-config.jam     \u0026\u0026 ln -sf /usr/include/python3.7m /usr/include/python     \u0026\u0026 ln -sf /usr/include/python3.7m /usr/include/python3.7     \u0026\u0026 mkdir -p ${WK}/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache openssl-dev perl git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CM",
              "Value": "https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CM",
              "Value": "https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp/ecflow_build/ \u0026\u0026 wget -O cmake-3.tgz ${CM}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ecflow_build/     \u0026\u0026 tar -xzf cmake-3.tgz     \u0026\u0026 cd cmake-3.*     \u0026\u0026 ./configure     \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export WK=${DBUILD}/ecFlow-${ECFLOW_VERSION}-Source            BOOST_ROOT=${DBUILD}/boost_$(echo ${BOOST_VERSION} | tr '.' '_')   \u0026\u0026 cd $WK/build   \u0026\u0026sed -i '1s/^/cmake_policy(SET CMP0004 OLD)/' ../cmake/ecbuild_add_library.cmake   \u0026\u0026 cd ${BOOST_ROOT}   \u0026\u0026 sed -i -e 's/1690/1710/' ${WK}/build_scripts/boost_build.sh   \u0026\u0026 ash ${WK}/build_scripts/boost_build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export WK=${DBUILD}/ecFlow-${ECFLOW_VERSION}-Source            BOOST_ROOT=${DBUILD}/boost_$(echo ${BOOST_VERSION} | tr '.' '_')   \u0026\u0026 cd ${WK}/build   \u0026\u0026 cmake -DCMAKE_CXX_FLAGS=-w -DENABLE_GUI=OFF -DENABLE_UI=OFF ..   \u0026\u0026 make -j$(grep processor /proc/cpuinfo | wc -l)   \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -SD ecflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/ecflow"
        },
        {
          "Name": "expose",
          "Ports": [
            "2500"
          ]
        },
        {
          "Env": [
            {
              "Key": "ECFLOW_USER",
              "Value": "ecflow"
            },
            {
              "Key": "ECF_PORT",
              "Value": "2500"
            },
            {
              "Key": "ECF_HOME",
              "Value": "/home/ecflow"
            },
            {
              "Key": "HOME",
              "Value": "/home/ecflow"
            },
            {
              "Key": "HOST",
              "Value": "ecflow"
            },
            {
              "Key": "LANG",
              "Value": "C"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/local/lib/python3/site-packages"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}