{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:bullseye",
      "SourceCode": "FROM debian:bullseye",
      "Platform": "",
      "From": {
        "Image": "debian:bullseye"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get -y update   \u0026\u0026 apt-get -y upgrade   \u0026\u0026 apt-get update   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y locales   \u0026\u0026 sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen   \u0026\u0026 dpkg-reconfigure --frontend=noninteractive locales   \u0026\u0026 update-locale LANG=en_US.UTF-8   \u0026\u0026 apt-get install -y build-essential cmake python-dev python3-dev qtbase5-dev     libmotif-dev libx11-dev libxext-dev libxpm-dev vim fvwm libxt-dev     xvfb wget   \u0026\u0026 apt-get install -qqy x11-apps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "WK",
              "Value": "/tmp/ecflow_build/ecFlow-5.1.0-Source"
            },
            {
              "Key": "BOOST_ROOT",
              "Value": "/tmp/ecflow_build/boost_1_71_0"
            },
            {
              "Key": "TE",
              "Value": "ecFlow-5.1.0-Source.tar.gz"
            },
            {
              "Key": "TB",
              "Value": "boost_1_71_0.tar.gz"
            },
            {
              "Key": "COMPILE",
              "Value": "1"
            },
            {
              "Key": "HTTPB",
              "Value": "https://dl.bintray.com/boostorg/release/1.71.0/source"
            },
            {
              "Key": "HTTP",
              "Value": "https://software.ecmwf.int/wiki/download/attachments/8650755"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${WK}/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/ecflow_build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/ecflow_build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ecflow_build \u0026\u0026 wget --output-document=${TE} ${HTTP}/${TE}?api=v2 \u0026\u0026 wget --output-document=${TB} ${HTTPB}/${TB}?api=v2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ecflow_build     \u0026\u0026 tar -xzvf ${TE}     \u0026\u0026 tar -xzvf ${TB}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-utils python3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test ${COMPILE} -eq 1     \u0026\u0026 cd ${BOOST_ROOT} \u0026\u0026 ./bootstrap.sh     \u0026\u0026 python_root=$(python3 -c \"import sys; print(sys.prefix)\")     \u0026\u0026 ./bootstrap.sh  --with-python-root=$python_root                        --with-python=/usr/bin/python3     \u0026\u0026 sed -i \"s|using python : 3.7 :  ;|using python : 3 : python3 : /usr/include/python ;|g\" project-config.jam     \u0026\u0026 ln -sf /usr/include/python3.7m /usr/include/python     \u0026\u0026 ln -sf /usr/include/python3.7m /usr/include/python3.7     \u0026\u0026 sed -i -e 's/1690/1710/' ${WK}/build_scripts/boost_build.sh     \u0026\u0026 ${WK}/build_scripts/boost_build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git build-essential cmake qt5-default qtscript5-dev libssl-dev qttools5-dev qttools5-dev-tools qtmultimedia5-dev libqt5svg5-dev libqt5webkit5-dev libsdl2-dev libasound2 libxmu-dev libxi-dev freeglut3-dev libasound2-dev libjack-jackd2-dev libxrandr-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${BOOST_ROOT} \u0026\u0026 bash ${WK}/build_scripts/boost_build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CM",
              "Value": "https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp/ecflow_build/ \u0026\u0026 wget -O  /tmp/ecflow_build/cmake-3.tgz ${CM}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ecflow_build/     \u0026\u0026 tar -xzf cmake-3.tgz     \u0026\u0026 cd cmake-3.*     \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find $HOME/."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/bin:$PATH"
            },
            {
              "Key": "CMAKE_MODULE_PATH",
              "Value": "/root/cmake:/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${WK}/build     \u0026\u0026 cd ${WK}/build     \u0026\u0026 cmake .. -DCMAKE_MODULE_PATH=/root/cmake -DENABLE_GUI=ON -DENABLE_UI=OFF     \u0026\u0026 make -j2 \u0026\u0026 make install # \u0026\u0026 make test \u0026\u0026 cd /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git build-essential cmake qt5-default qtscript5-dev     libssl-dev qttools5-dev qttools5-dev-tools qtmultimedia5-dev libqt5svg5-dev     libqt5webkit5-dev libsdl2-dev libasound2 libxmu-dev libxi-dev freeglut3-dev     libasound2-dev libjack-jackd2-dev libxrandr-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${WK}/build   \u0026\u0026 cmake .. -DCMAKE_MODULE_PATH=/root/cmake   \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ECFLOW_USER",
              "Value": "ecflow"
            },
            {
              "Key": "ECF_PORT",
              "Value": "2500"
            },
            {
              "Key": "ECF_HOME",
              "Value": "/home/ecflow"
            },
            {
              "Key": "HOME",
              "Value": "/home/ecflow"
            },
            {
              "Key": "HOST",
              "Value": "ecflow"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/local/lib/python3.7/site-packages"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "${ECF_PORT}"
          ]
        },
        {
          "CmdLine": [
            "groupadd --system ${ECFLOW_USER}     \u0026\u0026 useradd --create-home --system --gid ${ECFLOW_USER} ${ECFLOW_USER}     \u0026\u0026 chown ecflow /home/ecflow \u0026\u0026 chgrp ecflow /home/ecflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "ecflow"
        },
        {
          "Name": "workdir",
          "Path": "/home/ecflow"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":0"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}