MetaArgs: null
Stages:
- BaseName: php:7.2-fpm
  Commands:
  - Maintainer: support@cyber-duck.co.uk
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --allow-downgrades --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --allow-downgrades --no-install-recommends         libmemcached-dev         libz-dev         libpq-dev         libjpeg-dev         libpng-dev         libfreetype6-dev         libssl-dev         libmcrypt-dev         openssh-server         libmagickwand-dev         git         nano         libxml2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install soap
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pcntl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y         libzip-dev         zip   && docker-php-ext-configure
      zip --with-libzip   && docker-php-ext-install zip
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_pgsql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick &&     docker-php-ext-enable imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install gd &&     docker-php-ext-configure gd         --enable-gd-native-ttf         --with-jpeg-dir=/usr/lib         --with-freetype-dir=/usr/include/freetype2
      &&     docker-php-ext-install gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install exif
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable opcache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./opcache.ini
    - /usr/local/etc/php/conf.d/opcache.ini
  - CmdLine:
    - curl -s http://getcomposer.org/installer | php &&     echo "export PATH=${PATH}:/var/www/vendor/bin"
      >> ~/.bashrc &&     mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - . ~/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./laravel.ini
    - /usr/local/etc/php/conf.d
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./zz-cyberduck.conf
    - /usr/local/etc/php-fpm.d/zz-cyberduck.conf
  - CmdLine:
    - echo '#!/bin/bash\n/usr/local/bin/php /var/www/artisan "$@"' > /usr/bin/art
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/bin/art
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '#!/bin/bash\n/usr/local/bin/php /var/www/artisan config:clear\n/var/www/vendor/bin/phpunit
      -d memory_limit=2G --stop-on-error --stop-on-failure --testdox-text=tests/report.txt
      "$@"' > /usr/bin/t
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/bin/t
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '#!/bin/bash\n/usr/local/bin/php /var/www/artisan config:clear\n/bin/bash\n/usr/local/bin/php
      /var/www/artisan dusk -d memory_limit=2G --stop-on-error --stop-on-failure --testdox-text=tests/report-dusk.txt
      "$@"' > /usr/bin/d
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/bin/d
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/bin/docker-entrypoint.sh /
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.2-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm
