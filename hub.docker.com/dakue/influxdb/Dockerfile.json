{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Daniel Kuehne \u003cdkhmailto@googlemail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "INFLUXDB_VERSION",
              "Value": "0.9.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENVPLATE_VERSION",
              "Value": "0.0.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "0.8.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo $TZ \u003e /etc/timezone \u0026\u0026   DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026   apt-get -qq update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl ca-certificates \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026   curl -sSL https://s3.amazonaws.com/influxdb/influxdb_${INFLUXDB_VERSION}_amd64.deb -o /tmp/influxdb_${INFLUXDB_VERSION}_amd64.deb \u0026\u0026   dpkg -i /tmp/influxdb_${INFLUXDB_VERSION}_amd64.deb \u0026\u0026   rm /tmp/influxdb_${INFLUXDB_VERSION}_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026   curl -sSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture)\" -o /usr/local/bin/gosu \u0026\u0026   chmod +x /usr/local/bin/gosu \u0026\u0026   curl -ssL \"https://github.com/kreuzwerker/envplate/releases/download/v${ENVPLATE_VERSION}/ep-linux\" -o /usr/local/bin/ep \u0026\u0026   chmod +x /usr/local/bin/ep \u0026\u0026   ln -s /usr/local/bin/ep /usr/local/bin/envplate \u0026\u0026   curl -sSL \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static\" -o /usr/local/bin/tini \u0026\u0026   chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "influxdb.conf",
            "/etc/influxdb/config.toml"
          ]
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026   mkdir -p /var/run/influxdb \u0026\u0026   chown -R influxdb:influxdb /var/run/influxdb \u0026\u0026   mkdir -p /var/lib/influxdb \u0026\u0026   chown -R influxdb:influxdb /var/lib/influxdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/influxdb"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "influxdb-start.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /influxdb-start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "influxdb-setup.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /influxdb-setup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2003",
            "25826/udp",
            "4242",
            "8083",
            "8086",
            "8088"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/tini",
            "--",
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "influxdb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}