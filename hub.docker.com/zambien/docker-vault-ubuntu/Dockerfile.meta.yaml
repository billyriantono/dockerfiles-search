MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - VERSION
    - .
  - Key: VAULT_VERSION
    Name: arg
    Value: 0.11.6
  - CmdLine:
    - apt update && apt -y upgrade     && apt install -y gnupg wget unzip     && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'useradd -ms /bin/bash vault     && unameArch="$(uname -m)";     case "$unameArch"
      in         armhf) ARCH=''arm'' ;;         aarch64) ARCH=''arm64'' ;;         x86_64)
      ARCH=''amd64'' ;;         x86) ARCH=''386'' ;;         *) echo >&2 "error: unsupported
      architecture: $unameArch"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='''';     for
      server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ;
      do         echo "Fetching GPG key $VAULT_GPGKEY from $server";         gpg --batch
      --keyserver "$server" --recv-keys "$VAULT_GPGKEY" && found=yes && break;     done;     test
      -z "$found" && echo >&2 "error: failed to fetch GPG key $VAULT_GPGKEY" && exit
      1;     mkdir -p /tmp/build &&     cat VERSION && export VAULT_VERSION=`cat VERSION`
      &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip
      &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS
      &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig
      &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS
      &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS
      | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip
      &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf
      --kill gpg-agent &&     rm -rf /root/.gnupg'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config
      &&     chown -R vault:vault /vault
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /vault/logs
  - Name: volume
    Volumes:
    - /vault/file
  - Name: expose
    Ports:
    - "8200"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - server
    - -dev
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
