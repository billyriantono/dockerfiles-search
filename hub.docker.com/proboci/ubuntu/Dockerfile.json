{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "\"Ubuntu 18.04 LTS Based ProboCI Image\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Our base container for ProboCI Builds.\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "author",
              "Value": "\"Michael R. Bagnall \u003cmrbagnall@icloud.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"ProboCI, LLC.\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y apt-utils   apt-transport-https   build-essential   ca-certificates   curl   git   gnupg   libnss3   lsb-release   memcached   nano   netcat-openbsd   nodejs   ntp   openjdk-8-jre   redis-server   sendmail   software-properties-common   sudo   vim   wget   zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/mysql-setup.sql",
            "/mysql-setup.sql"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/mycnf.txt",
            "/root/.my.cnf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/varnishcache_varnish41.list",
            "/etc/apt/sources.list.d/varnishcache_varnish41.list"
          ]
        },
        {
          "CmdLine": [
            "curl -L https://packagecloud.io/varnishcache/varnish41/gpgkey | sudo apt-key add -   \u0026\u0026 wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn apt-key add -   \u0026\u0026 echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 add-apt-repository ppa:ondrej/php   \u0026\u0026 apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y php7.2   php7.2-bcmath   php7.2-bz2   php7.2-cli   php7.2-common   php7.2-curl   php7.2-dba   php7.2-dev   php7.2-gd   php7.2-json   php7.2-ldap   php7.2-mbstring   php7.2-mysql   php7.2-opcache   php7.2-readline   php7.2-soap   php7.2-xml   php7.2-zip   php7.2-pgsql   php-memcached   libapache2-mod-php7.2   php-redis   php-imagick   php-pear   imagemagick   postgresql   postgresql-contrib   apache2   apache2-utils   mysql-server   mysql-client   google-chrome-stable   libreadline-dev   zlib1g-dev   ruby-dev   libsqlite3-dev   varnish/xenial   \u0026\u0026 service mysql start   \u0026\u0026 mysql -uroot \u003c /mysql-setup.sql   \u0026\u0026 rm -rf /tmp/* /mysql-setup.sql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php --   --install-dir=/usr/local/bin   --filename=composer   --version=1.8.5   \u0026\u0026 composer   --working-dir=/usr/local/src/   global   require   drush/drush:8.*   \u0026\u0026 ln -s /usr/local/src/vendor/bin/drush /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://drupalconsole.com/installer -L -o /tmp/drupal.phar   \u0026\u0026 mv /tmp/drupal.phar /usr/local/bin/drupal   \u0026\u0026 chmod +x /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower   grunt-cli   gulp-cli   lighthouse   the-a11y-machine   yarn   proboscis   --no-document   \u0026\u0026 ln -s /usr/lib/node_modules/proboscis/bin/proboscis /usr/bin/proboscis   \u0026\u0026 ln -s /usr/lib/node_modules/proboscis/bin/proboscis-control /usr/bin/proboscis-control   \u0026\u0026 ln -s /usr/lib/node_modules/proboscis/bin/proboscis-format /usr/bin/proboscis-format   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/pgpass.txt",
            "/root/.pgpass"
          ]
        },
        {
          "CmdLine": [
            "service postgresql start   \u0026\u0026 su - postgres -c \"createuser -d -l -r -s root\"   \u0026\u0026 su - postgres -c \"createdb --owner=postgres drupal\"   \u0026\u0026 psql --username=root --dbname=drupal -c \"ALTER USER root WITH PASSWORD 'strongpassword';\"   \u0026\u0026 chmod 0600 /root/.pgpass   \u0026\u0026 service postgresql stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/www/html   \u0026\u0026 a2enmod rewrite   \u0026\u0026 a2enmod actions   \u0026\u0026 a2enmod alias   \u0026\u0026 a2enmod deflate   \u0026\u0026 a2enmod dir   \u0026\u0026 a2enmod expires   \u0026\u0026 a2enmod headers   \u0026\u0026 a2enmod mime   \u0026\u0026 a2enmod negotiation   \u0026\u0026 a2enmod setenvif   \u0026\u0026 a2enmod proxy   \u0026\u0026 a2enmod proxy_http"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/apache-default-host.conf",
            "/etc/apache2/conf-enabled/apache-default-host.conf"
          ]
        },
        {
          "CmdLine": [
            "gem install rails   mailcatcher   compass   bundler   --no-document"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://archive.apache.org/dist/lucene/solr/6.6.5/solr-6.6.5.tgz   \u0026\u0026 tar xzf solr-6.6.5.tgz solr-6.6.5/bin/install_solr_service.sh --strip-components=2   \u0026\u0026 ./install_solr_service.sh solr-6.6.5.tgz    \u0026\u0026 wget https://ftp.drupal.org/files/projects/search_api_solr-7.x-1.14.tar.gz   \u0026\u0026 tar xzf search_api_solr-7.x-1.14.tar.gz   \u0026\u0026 mv search_api_solr /opt/solr/.   \u0026\u0026 sudo -u solr -- /opt/solr/bin/solr create -c drupal7 -d \"/opt/solr/search_api_solr/solr-conf/6.x\"   \u0026\u0026 wget https://ftp.drupal.org/files/projects/search_api_solr-8.x-2.3.tar.gz   \u0026\u0026 rm -rf /opt/solr/search_api_solr   \u0026\u0026 tar xzf search_api_solr-8.x-2.3.tar.gz   \u0026\u0026 mv search_api_solr /opt/solr/.   \u0026\u0026 sudo -u solr -- /opt/solr/bin/solr create -c drupal8 -d \"/opt/solr/search_api_solr/solr-conf/6.x\"   \u0026\u0026 service solr stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/wordpress-default-4.vcl",
            "/etc/varnish/wordpress-default-4.vcl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/drupal-default-4.vcl",
            "/etc/varnish/default.vcl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/varnish",
            "/etc/default/varnish"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/secret",
            "/etc/varnish/secret"
          ]
        },
        {
          "CmdLine": [
            "mkdir /root/.ssh   \u0026\u0026 chmod 700 /root/.ssh   \u0026\u0026 touch /root/.ssh/config   \u0026\u0026 chmod 0700 /root/.ssh/config   \u0026\u0026 echo \"Host *\" \u003e\u003e /root/.ssh/config   \u0026\u0026 echo \"StrictHostKeyChecking no\" \u003e\u003e /root/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/wp-cli.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar   \u0026\u0026 chmod +x /tmp/wp-cli.phar   \u0026\u0026 mv /tmp/wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}