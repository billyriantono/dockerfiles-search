MetaArgs: null
Stages:
- BaseName: golang:1.8-alpine
  Commands:
  - Maintainer: Axel Etcheverry <axel@etcheverry.biz>
    Name: maintainer
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - Key: LIBVIPS_VERSION_MAJOR_MINOR
    Name: arg
    Value: "8.4"
  - Key: LIBVIPS_VERSION_PATCH
    Name: arg
    Value: "5"
  - Key: MOZJPEG_VERSION
    Name: arg
    Value: '"v3.1"'
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/v3.5/community" >> /etc/apk/repositories
      &&     apk update &&     apk upgrade &&     apk add     zlib libxml2 libxslt
      glib libexif lcms2 fftw ca-certificates curl git     giflib libpng libwebp orc
      tiff poppler-glib librsvg &&     apk add --no-cache --virtual .build-dependencies
      autoconf automake build-base     git libtool nasm zlib-dev libxml2-dev libxslt-dev
      glib-dev     libexif-dev lcms2-dev fftw-dev giflib-dev libpng-dev libwebp-dev
      orc-dev tiff-dev     poppler-dev librsvg-dev &&     cd /tmp &&     git clone
      git://github.com/mozilla/mozjpeg.git &&     cd /tmp/mozjpeg &&     git checkout
      ${MOZJPEG_VERSION} &&     autoreconf -fiv && ./configure --prefix=/usr && make
      install &&     wget -O- http://www.vips.ecs.soton.ac.uk/supported/${LIBVIPS_VERSION_MAJOR_MINOR}/vips-${LIBVIPS_VERSION_MAJOR_MINOR}.${LIBVIPS_VERSION_PATCH}.tar.gz
      | tar xzC /tmp &&     cd /tmp/vips-${LIBVIPS_VERSION_MAJOR_MINOR}.${LIBVIPS_VERSION_PATCH}
      &&     ./configure --prefix=/usr                 --without-python                 --without-gsf                 --enable-debug=no                 --disable-dependency-tracking                 --disable-static                 --enable-silent-rules
      &&     make -s install-strip &&     cd $OLDPWD &&     go get -u github.com/euskadi31/image-service
      &&     rm -rf /tmp/vips-${LIBVIPS_VERSION_MAJOR_MINOR}.${LIBVIPS_VERSION_PATCH}
      &&     rm -rf /tmp/mozjpeg &&     apk del --purge .build-dependencies &&     rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Health:
      Interval: 60000000000
      Test:
      - CMD-SHELL
      - curl -f http://localhost:${PORT}/health > /dev/null 2>&1 || exit 1
      Timeout: 3000000000
    Name: healthcheck
  - Name: expose
    Ports:
    - ${PORT}
  - Name: volume
    Volumes:
    - /var/lib/image-service
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config.yml.dist
    - /etc/image-service/config.yml
  - CmdLine:
    - /go/bin/image-service
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1.8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.8-alpine
