MetaArgs: null
Stages:
- As: base
  BaseName: alpine:3.10
  Commands:
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: base
  Platform: ""
  SourceCode: FROM alpine:3.10 AS base
- As: builder
  BaseName: base
  Commands:
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 19.03.2
    Name: env
  - CmdLine:
    - set -eux   ; DOCKER_URL="https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz"   ;
      wget -O docker.tgz ${DOCKER_URL}   ; tar -xf docker.tgz --strip-components 1
      --directory /usr/local/bin/   ; rm docker.tgz   ; dockerd --version   ; docker
      --version
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /scripts
    - /scripts
  - CmdLine:
    - set -ex   ; chmod 0755 /scripts/*   ; mv /scripts/* /usr/local/bin/
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: base
  Name: builder
  Platform: ""
  SourceCode: FROM base AS builder
- As: release
  BaseName: base
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin
    - /usr/local/bin
  - Env:
    - Key: DOCKER_TLS_CERTDIR
      Value: /certs
    Name: env
  - CmdLine:
    - mkdir /certs /certs/client && chmod 1777 /certs /certs/client
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - sh
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: base
  Name: release
  Platform: ""
  SourceCode: FROM base AS release
