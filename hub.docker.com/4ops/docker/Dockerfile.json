{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10 AS base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "[ ! -e /etc/nsswitch.conf ] \u0026\u0026 echo 'hosts: files dns' \u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "builder",
      "BaseName": "base",
      "SourceCode": "FROM base AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "19.03.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux   ; DOCKER_URL=\"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\"   ; wget -O docker.tgz ${DOCKER_URL}   ; tar -xf docker.tgz --strip-components 1 --directory /usr/local/bin/   ; rm docker.tgz   ; dockerd --version   ; docker --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/scripts"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/scripts",
            "/scripts"
          ]
        },
        {
          "CmdLine": [
            "set -ex   ; chmod 0755 /scripts/*   ; mv /scripts/* /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "release",
      "BaseName": "base",
      "SourceCode": "FROM base AS release",
      "Platform": "",
      "As": "release",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin",
            "/usr/local/bin"
          ]
        },
        {
          "Env": [
            {
              "Key": "DOCKER_TLS_CERTDIR",
              "Value": "/certs"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /certs /certs/client \u0026\u0026 chmod 1777 /certs /certs/client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}