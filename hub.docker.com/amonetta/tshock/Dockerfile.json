{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mono:latest",
      "SourceCode": "FROM mono:latest",
      "Platform": "",
      "From": {
        "Image": "mono:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Agustin I. monetta \u003cagustin.monetta@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "TSHOCK_VERSION",
          "Name": "arg",
          "Value": "\"v4.3.26\""
        },
        {
          "Env": [
            {
              "Key": "TSHOCK_VERSION",
              "Value": "\"${TSHOCK_VERSION}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOUSE_REGION_VERSION",
              "Value": "\"1.2.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLANS_VERSION",
              "Value": "\"v1.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PERMABUFFS_VERSION",
              "Value": "\"4.1.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TSHOCK_HOME",
              "Value": "\"/opt/tshock\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt -qq update \u0026\u0026     apt -qqy install unzip \u0026\u0026     apt -qqy install jq \u0026\u0026     apt -qqy install curl \u0026\u0026     apt -qqy install nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "TSHOCK_DOWNLOAD_URL=$(curl -sS -X GET https://api.github.com/repos/Pryaxis/TShock/releases/tags/${TSHOCK_VERSION} | jq -r '.assets[0].browser_download_url') \u0026\u0026     curl -sL \"${TSHOCK_DOWNLOAD_URL}\" -o \"/tmp/tshock_${TSHOCK_VERSION}.zip\" \u0026\u0026     unzip \"/tmp/tshock_${TSHOCK_VERSION}.zip\" -d ${TSHOCK_HOME} \u0026\u0026     rm \"/tmp/tshock_${TSHOCK_VERSION}.zip\" \u0026\u0026     echo \"${TSHOCK_VERSION}\" \u003e ${TSHOCK_HOME}/tshock.version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/config.json",
            "${TSHOCK_HOME}/tshock/config.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/sscconfig.json",
            "/tmp/sscconfig.json"
          ]
        },
        {
          "Key": "SSC_ENABLED",
          "Name": "arg",
          "Value": "\"false\""
        },
        {
          "CmdLine": [
            "jq \".Enabled = ${SSC_ENABLED}\" /tmp/sscconfig.json \u003e ${TSHOCK_HOME}/tshock/sscconfig.json \u0026\u0026     rm \"/tmp/sscconfig.json\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "${TSHOCK_HOME}/scripts"
          ]
        },
        {
          "CmdLine": [
            "chmod -R +x ${TSHOCK_HOME}/scripts \u0026\u0026     echo \"export PATH=\"\\$PATH:${TSHOCK_HOME}/scripts\"\" \u003e\u003e /etc/profile \u0026\u0026     echo \"export PATH=\"\\$PATH:${TSHOCK_HOME}/scripts\"\" \u003e\u003e ~/.profile \u0026\u0026     echo \"export PATH=\"\\$PATH:${TSHOCK_HOME}/scripts\"\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:${TSHOCK_HOME}/scripts\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "CLANS_URL=$(curl -sS -X GET https://api.github.com/repos/ivanbiljan/Clans/releases/tags/${CLANS_VERSION} | jq -r '.assets[0].browser_download_url') \u0026\u0026     cd \"${TSHOCK_HOME}/ServerPlugins\" \u0026\u0026 curl -sL \"${CLANS_URL}\" -O"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "HOUSE_REGION_URL=$(curl -sS -X GET https://api.github.com/repos/CoderCow/HouseRegions-Plugin/releases/tags/${HOUSE_REGION_VERSION} | jq -r '.assets[0].browser_download_url') \u0026\u0026     curl -sL \"${HOUSE_REGION_URL}\" -o \"/tmp/HouseRegion_${HOUSE_REGION_VERSION}.zip\" \u0026\u0026     unzip  \"/tmp/HouseRegion_${HOUSE_REGION_VERSION}.zip\" -d /opt/tshock \u0026\u0026     rm \"/tmp/HouseRegion_${HOUSE_REGION_VERSION}.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PERMABUFFS_URL=$(curl -sS -X GET https://api.github.com/repos/amonetta/PermabuffsV2/releases/tags/${PERMABUFFS_VERSION} | jq -r '.assets[0].browser_download_url') \u0026\u0026     curl -sL \"${PERMABUFFS_URL}\" -o \"/tmp/Permabuffs_${PERMABUFFS_VERSION}.zip\" \u0026\u0026     unzip  \"/tmp/Permabuffs_${PERMABUFFS_VERSION}.zip\" -d /opt/tshock \u0026\u0026     rm \"/tmp/Permabuffs_${PERMABUFFS_VERSION}.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "7777/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7878/tcp"
          ]
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Test": [
              "CMD-SHELL",
              "tsc health"
            ],
            "Timeout": 1000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "workdir",
          "Path": "${TSHOCK_HOME}"
        },
        {
          "CmdLine": [
            "mono",
            "--server",
            "--gc=sgen",
            "-O=all",
            "TerrariaServer.exe"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-world",
            "Terraria/Worlds/Default.wld",
            "-autocreate",
            "2"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}