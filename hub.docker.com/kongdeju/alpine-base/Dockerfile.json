{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc:alpine-3.7",
      "SourceCode": "FROM frolvlad/alpine-glibc:alpine-3.7",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc:alpine-3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "\"/opt/conda\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$CONDA_DIR/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "CONDA_VERSION=\"4.0.5\" \u0026\u0026     CONDA_MD5_CHECKSUM=\"42dac45eee5e58f05f37399adda45e85\" \u0026\u0026         apk add --no-cache --virtual=.build-dependencies wget ca-certificates bash \u0026\u0026         mkdir -p \"$CONDA_DIR\" \u0026\u0026     wget \"http://repo.continuum.io/miniconda/Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\" -O miniconda.sh \u0026\u0026     echo \"$CONDA_MD5_CHECKSUM  miniconda.sh\" | md5sum -c \u0026\u0026     bash miniconda.sh -f -b -p \"$CONDA_DIR\" \u0026\u0026     echo \"export PATH=$CONDA_DIR/bin:\\$PATH\" \u003e /etc/profile.d/conda.sh \u0026\u0026     rm miniconda.sh \u0026\u0026         conda update --all --yes \u0026\u0026     conda config --set auto_update_conda False \u0026\u0026     rm -r \"$CONDA_DIR/pkgs\" \u0026\u0026         apk del --purge .build-dependencies \u0026\u0026         mkdir -p \"$CONDA_DIR/locks\" \u0026\u0026     chmod 777 \"$CONDA_DIR/locks\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}