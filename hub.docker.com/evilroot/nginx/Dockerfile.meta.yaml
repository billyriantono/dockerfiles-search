MetaArgs: null
Stages:
- BaseName: evilroot/baseimage:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"k@e-dot.uk"'
    Name: label
  - Env:
    - Key: NGINX_VERSION
      Value: 1.16.1
    Name: env
  - Env:
    - Key: NGX_BROTLI_COMMIT
      Value: e505dce68acc190cc5a1e780a3b0275e39f160ca
    Name: env
  - Env:
    - Key: NGX_FANCYINDEX_COMMIT
      Value: fa13aef31b4d663d081a9b0eb8649357fb44de32
    Name: env
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" > /etc/apk/repositories   &&
      echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories   &&
      echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-http_perl_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module
      \t\t--with-http_slice_module \t\t--with-file-aio \t\t--with-http_v2_module     --with-http_v3_module
      \t\t--with-ipv6 \t\t--add-module=/usr/src/ngx_brotli \t\t--add-module=/usr/src/ngx-fancyindex
      \    --with-openssl=/usr/src/quiche/deps/boringssl     --add-module=/usr/src/headers-more-nginx-module
      \    --with-quiche=/usr/src/quiche                 --with-cc-opt=-Wno-error
      \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin
      -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev
      \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl
      \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\tperl-dev \t&& apk add
      --no-cache --virtual .brotli-build-deps \t\tautoconf \t\tlibtool \t\tautomake
      \t\tgit     go     perl     rust     cargo \t\tg++ \t\tcmake \t&& mkdir -p /usr/src
      \t&& cd /usr/src \t&& git clone --recursive https://github.com/google/ngx_brotli.git
      \t&& cd ngx_brotli \t&& git checkout -b $NGX_BROTLI_COMMIT $NGX_BROTLI_COMMIT
      \t&& cd /usr/src \t&& git clone --recursive https://github.com/aperezdc/ngx-fancyindex.git
      \t&& cd ngx-fancyindex \t&& git checkout -b $NGX_FANCYINDEX_COMMIT $NGX_FANCYINDEX_COMMIT
      \t&& cd ..   && git clone --recursive https://github.com/openresty/headers-more-nginx-module.git
      \  && git clone --recursive https://github.com/cloudflare/quiche \t&& curl -fSL
      https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz   &&
      sha512sum nginx.tar.gz \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz
      \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION   && patch -p01 <
      /usr/src/quiche/extras/nginx/nginx-1.16.patch \t&& ./configure $CONFIG \t&&
      make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/
      \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install
      -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644 html/50x.html
      /usr/share/nginx/html/ \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules
      \t&& strip /usr/sbin/nginx* \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf
      /usr/src/nginx-$NGINX_VERSION \t&& rm -rf /usr/src/ngx_brotli \t&& rm -rf /usr/src/headers-more-nginx-module
      \t&& rm -rf /usr/src/quiche \t\t&& apk add --no-cache --virtual .gettext gettext
      \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner
      /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps
      $runDeps \t&& apk del .build-deps \t&& apk del .brotli-build-deps \t&& apk del
      .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log
      \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - index.html
    - /usr/share/nginx/html/index.html
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: evilroot/baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM evilroot/baseimage:latest
