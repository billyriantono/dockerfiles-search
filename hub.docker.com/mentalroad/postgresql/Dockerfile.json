{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:11.2-alpine",
      "SourceCode": "FROM postgres:11.2-alpine",
      "Platform": "",
      "From": {
        "Image": "postgres:11.2-alpine"
      },
      "Commands": [
        {
          "Maintainer": "me@nebirhos.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MAX_CONNECTIONS",
              "Value": "500"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WAL_KEEP_SEGMENTS",
              "Value": "256"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_WAL_SENDERS",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPLICATION_ROLE",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPLICATION_USER",
              "Value": "replication"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPLICATION_PASSWORD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_HOST",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_MASTER_SERVICE_PORT",
              "Value": "5432"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "10-config.sh",
            "/docker-entrypoint-initdb.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "20-replication.sh",
            "/docker-entrypoint-initdb.d/"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         gcc \t\tlibc-dev \t\tmake     \u0026\u0026 cd ~     \u0026\u0026 wget -O scws-1.2.2.tar.bz2 http://www.xunsearch.com/scws/down/scws-1.2.2.tar.bz2      \u0026\u0026 tar xf scws-1.2.2.tar.bz2     \u0026\u0026 cd scws-1.2.2     \u0026\u0026 ./configure     \u0026\u0026 make install     \u0026\u0026 cd ~     \u0026\u0026 wget -O zhparser.tar.gz https://github.com/amutu/zhparser/archive/v0.2.0.tar.gz      \u0026\u0026 tar zxf zhparser.tar.gz     \u0026\u0026 cd zhparser-0.2.0     \u0026\u0026 SCWS_HOME=/usr/local make \u0026\u0026 make install     \u0026\u0026 cd ~     \u0026\u0026 rm -rf scws-1.2.2* zhparser*     \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/set -e/set -e -x\\nPGDATA=$(eval echo \"$PGDATA\")/' /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}