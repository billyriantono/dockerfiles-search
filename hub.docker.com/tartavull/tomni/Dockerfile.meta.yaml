MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Seung Lab
    Name: maintainer
  - CmdLine:
    - apt-get -qq update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y install wget  npm  nodejs  nodejs-legacy  ruby-dev  libopenctm-dev  javacc  libpython2.7  libspatialindex-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-7-openjdk-amd64/
    Name: env
  - Env:
    - Key: TEST_SPARK_VERSION
      Value: 1.6.0
    Name: env
  - CmdLine:
    - mkdir thirdparty
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://apache.mirror.cdnetworks.com/spark/spark-$TEST_SPARK_VERSION/spark-$TEST_SPARK_VERSION-bin-hadoop2.4.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxfC spark-$TEST_SPARK_VERSION-bin-hadoop2.4.tgz thirdparty
    Name: run
    PrependShell: true
  - Env:
    - Key: SPARK_HOME
      Value: /thirdparty/spark-$TEST_SPARK_VERSION-bin-hadoop2.4
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /tomni
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $SPARK_HOME/python/:$PYTHONPATH
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $SPARK_HOME/python/lib/py4j-0.9-src.zip:$PYTHONPATH
    Name: env
  - CmdLine:
    - wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O
      miniconda.sh;
    Name: run
    PrependShell: true
  - CmdLine:
    - hash -r
    Name: run
    PrependShell: true
  - CmdLine:
    - bash miniconda.sh -p /miniconda -b
    Name: run
    PrependShell: true
  - CmdLine:
    - rm  miniconda.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /miniconda/bin:${PATH}
    Name: env
  - CmdLine:
    - conda update -y conda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y     numpy     scikit-image     pillow     shapely     h5py     virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c https://conda.anaconda.org/ioos rtree
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tornado   networkx   Trimesh   pypng   urllib3   tox
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g grunt bower
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install compass
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - Name: expose
    Ports:
    - "8888"
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
