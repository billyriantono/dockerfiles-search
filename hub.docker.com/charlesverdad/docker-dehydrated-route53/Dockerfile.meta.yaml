MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:xenial
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y     git     wget     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /dehydrated
  - CmdLine:
    - git clone --depth=1 https://github.com/lukas2511/dehydrated . && mkdir hooks
      && git clone --depth=1 https://github.com/whereisaaron/dehydrated-route53-hook-script
      hooks/route53
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.5.0
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -ex; \tfetchDeps=' \t\tca-certificates \t\twget \t'; \tapt-get update;
      \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*;
      \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget
      -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc;
      \tchmod +x /usr/local/bin/gosu; \tgosu nobody true; \tapt-get purge -y --auto-remove
      $fetchDeps"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:xenial AS builder
- BaseName: golang:1.11.0-alpine3.8
  Commands:
  - CmdLine:
    - apk add --update curl libressl bash git jq &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/barnybug/cli53/cmd/cli53
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /dehydrated
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /dehydrated
    - /dehydrated
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.tmpl
    - config.tmpl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /dehydrated/certs
  - Name: volume
    Volumes:
    - /dehydrated/accounts
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: golang:1.11.0-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.11.0-alpine3.8
