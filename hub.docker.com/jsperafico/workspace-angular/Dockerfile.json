{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "node",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge as NODE",
      "Platform": "",
      "As": "node",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "12.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.17.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -g 1000 node     \u0026\u0026 adduser -u 1000 -G node -s /bin/sh -D node     \u0026\u0026 apk add --no-cache         libstdc++     \u0026\u0026 apk add --no-cache --virtual .build-deps         binutils-gold         curl         g++         gcc         gnupg         libgcc         linux-headers         make         python   \u0026\u0026 for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ; do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;   done     \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xf \"node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 cd \"node-v$NODE_VERSION\"     \u0026\u0026 ./configure     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) V=     \u0026\u0026 make install     \u0026\u0026 apk del .build-deps     \u0026\u0026 cd ..     \u0026\u0026 rm -Rf \"node-v$NODE_VERSION\"     \u0026\u0026 rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 mkdir -p /opt   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 apk del .build-deps-yarn"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "android",
      "BaseName": "NODE",
      "SourceCode": "FROM NODE as ANDROID",
      "Platform": "",
      "As": "android",
      "From": {
        "Image": "NODE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/usr/local/android"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_VERSION",
              "Value": "27"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_BUILD_TOOLS_VERSION",
              "Value": "27.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir \"$ANDROID_HOME\" \u0026\u0026     mkdir /root/.android \u0026\u0026     touch /root/.android/repositories.cfg \u0026\u0026     apk add openjdk8 \u0026\u0026     apk add curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$ANDROID_HOME"
        },
        {
          "CmdLine": [
            "curl -fsSLO --compressed https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \u0026\u0026     unzip sdk-tools-linux-4333796.zip \u0026\u0026     rm sdk-tools-linux-4333796.zip \u0026\u0026     chmod -R +x $ANDROID_HOME/tools/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sdkmanager --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | sdkmanager --licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager \"platform-tools\" --no_https"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager \"platforms;android-${ANDROID_VERSION}\"                \"build-tools;${ANDROID_BUILD_TOOLS_VERSION}\"                \"extras;android;m2repository\"                \"extras;google;m2repository\"                \"extras;google;google_play_services\" --no_https"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del openjdk8"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "java",
      "BaseName": "ANDROID",
      "SourceCode": "FROM ANDROID as JAVA",
      "Platform": "",
      "As": "java",
      "From": {
        "Image": "ANDROID"
      },
      "Commands": [
        {
          "Key": "JDK_LOCATION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/java/current"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.29-r0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade --update \u0026\u0026     apk add --update tar libstdc++ curl ca-certificates bash \u0026\u0026     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done \u0026\u0026     apk add --allow-untrusted /tmp/*.apk \u0026\u0026     rm -v /tmp/*.apk \u0026\u0026     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) \u0026\u0026     echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${JDK_LOCATION}",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "mkdir /opt/java \u0026\u0026     tar -zxvf /tmp/jdk-8u221-linux-x64.tar.gz -C /opt/java \u0026\u0026     ln -s /opt/java/jdk1.8.0_221 /opt/java/current \u0026\u0026     ln -sfT /opt/java/current/bin/java /usr/bin/java \u0026\u0026     ln -sfT /opt/java/current/bin/javac /usr/bin/javac \u0026\u0026     ln -sfT /opt/java/current/bin/jar /usr/bin/jar \u0026\u0026     rm -rf /tmp/jdk-8u221-linux-x64.tar.gz \u0026\u0026     apk del glibc-i18n"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${JAVA_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        }
      ]
    },
    {
      "Name": "gradle",
      "BaseName": "JAVA",
      "SourceCode": "FROM JAVA as GRADLE",
      "Platform": "",
      "As": "gradle",
      "From": {
        "Image": "JAVA"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "5.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${GRADLE_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_USER_HOME",
              "Value": "/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "mkdir ${GRADLE_USER_HOME} \u0026\u0026     curl -fsSLO --compressed https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \u0026\u0026     unzip gradle-$GRADLE_VERSION-bin.zip \u0026\u0026     rm -f gradle-$GRADLE_VERSION-bin.zip \u0026\u0026     ln -s gradle-$GRADLE_VERSION gradle \u0026\u0026     chmod +x ${GRADLE_HOME}/bin/gradle"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "python",
      "BaseName": "GRADLE",
      "SourceCode": "FROM GRADLE as PYTHON",
      "Platform": "",
      "As": "python",
      "From": {
        "Image": "GRADLE"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add python2"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "angular",
      "BaseName": "PYTHON",
      "SourceCode": "FROM PYTHON as ANGULAR",
      "Platform": "",
      "As": "angular",
      "From": {
        "Image": "PYTHON"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir /home/workspace"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/workspace"
        },
        {
          "CmdLine": [
            "npm install -g @angular/cli \u0026\u0026     npm install -g cordova \u0026\u0026     npm install -g ionic \u0026\u0026     npm install -g node-gyp \u0026\u0026     npm install -g npm-install-peers"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}