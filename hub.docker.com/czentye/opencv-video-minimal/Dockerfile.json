{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Maintainer": "Janos Czentye \u003cczentye@tmit.bme.hu\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "4.2.0"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache     build-base clang clang-dev cmake pkgconf wget openblas openblas-dev     linux-headers     libjpeg-turbo libjpeg-turbo-dev     libpng libpng-dev     libwebp libwebp-dev     tiff tiff-dev     jasper-libs jasper-dev     openexr openexr-dev     ffmpeg-libs ffmpeg-dev     libavc1394 libavc1394-dev     gstreamer gstreamer-dev     gst-plugins-base gst-plugins-base-dev     libgphoto2 libgphoto2-dev \u0026\u0026     apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing             --update --no-cache libtbb libtbb-dev \u0026\u0026     apk add --no-cache python3=3.7.5-r1 python3-dev=3.7.5-r1 \u0026\u0026     apk upgrade --repository http://dl-cdn.alpinelinux.org/alpine/edge/main musl \u0026\u0026     ln -vfs /usr/bin/python3 /usr/local/bin/python \u0026\u0026     ln -vfs /usr/bin/pip3 /usr/local/bin/pip \u0026\u0026     ln -vfs /usr/include/libpng16 /usr/include/libpng \u0026\u0026     ln -vfs /usr/include/locale.h /usr/include/xlocale.h \u0026\u0026     pip3 install -v --no-cache-dir --upgrade pip \u0026\u0026     pip3 install -v --no-cache-dir numpy \u0026\u0026     cd /tmp \u0026\u0026     wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.tar.gz \u0026\u0026     tar -xvzf $OPENCV_VERSION.tar.gz \u0026\u0026     rm -vrf $OPENCV_VERSION.tar.gz \u0026\u0026     mkdir -vp /tmp/opencv-$OPENCV_VERSION/build \u0026\u0026     cd /tmp/opencv-$OPENCV_VERSION/build \u0026\u0026     cmake         -D CMAKE_BUILD_TYPE=RELEASE         -D CMAKE_C_COMPILER=/usr/bin/clang         -D CMAKE_CXX_COMPILER=/usr/bin/clang++         -D CMAKE_INSTALL_PREFIX=/usr         -D INSTALL_PYTHON_EXAMPLES=NO         -D INSTALL_C_EXAMPLES=NO         -D WITH_IPP=NO         -D WITH_1394=NO         -D WITH_LIBV4L=NO         -D WITH_V4l=YES         -D WITH_TBB=YES         -D WITH_FFMPEG=YES         -D WITH_GPHOTO2=YES         -D WITH_GSTREAMER=YES         -D BUILD_DOCS=NO         -D BUILD_TESTS=NO         -D BUILD_PERF_TESTS=NO         -D BUILD_EXAMPLES=NO         -D BUILD_opencv_java=NO         -D BUILD_opencv_python2=NO         -D BUILD_ANDROID_EXAMPLES=NO         -D PYTHON3_LIBRARY=`find /usr -name libpython3.so`         -D PYTHON_EXECUTABLE=`which python3`         -D PYTHON3_EXECUTABLE=`which python3`         -D BUILD_opencv_python3=YES .. \u0026\u0026     make -j`grep -c '^processor' /proc/cpuinfo` \u0026\u0026     make install \u0026\u0026     cd / \u0026\u0026 rm -vrf /tmp/opencv-$OPENCV_VERSION \u0026\u0026     apk del --purge build-base clang clang-dev cmake pkgconf wget openblas-dev                     openexr-dev gstreamer-dev gst-plugins-base-dev libgphoto2-dev                     libtbb-dev libjpeg-turbo-dev libpng-dev tiff-dev jasper-dev                     ffmpeg-dev libavc1394-dev python3-dev \u0026\u0026     rm -vrf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}