MetaArgs: null
Stages:
- BaseName: registry.access.redhat.com/ubi8/ubi:8.0-208
  Commands:
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.14
    Name: env
  - Env:
    - Key: TERRAFORM_IBMCLOUD_VERSION
      Value: 0.20.0
    Name: env
  - Env:
    - Key: TERRAFORM_KUBERNETES_VERSION
      Value: 1.9.0
    Name: env
  - Env:
    - Key: TERRAFORM_HELM_VERSION
      Value: 0.10.2
    Name: env
  - Env:
    - Key: SUPPORTED_CALICO
      Value: 3.9.1
    Name: env
  - Env:
    - Key: NVM_VERSION
      Value: 0.35.0
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 11.12.0
    Name: env
  - CmdLine:
    - dnf install -y dnf-plugins-core --disableplugin=subscription-manager &&     dnf
      install -y golang --disableplugin=subscription-manager &&     dnf install -y
      sudo --disableplugin=subscription-manager &&     dnf install -y unzip --disableplugin=subscription-manager
      &&     dnf install -y openssl --disableplugin=subscription-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O -L https://github.com/projectcalico/calicoctl/releases/download/v${SUPPORTED_CALICO}/calicoctl
      &&     mv ./calicoctl /usr/local/bin/calicoctl &&     chmod +x /usr/local/bin/calicoctl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"
      | bash &&     mv kustomize /usr/local/bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/bin
  - CmdLine:
    - curl -O -L https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip &&     chmod +x
      terraform &&     rm -rf terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/bin/*
    - /usr/local/bin/
  - CmdLine:
    - chmod u+w /etc/sudoers && echo "%sudo   ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/devops
    Name: env
  - CmdLine:
    - groupadd --force sudo &&     groupadd -g 10000 devops &&     useradd -u 10000
      -g 10000 -G sudo -d ${HOME} -m devops &&     usermod --password $(echo password
      | openssl passwd -1 -stdin) devops
    Name: run
    PrependShell: true
  - Name: user
    User: devops
  - Name: workdir
    Path: ${HOME}
  - Chown: devops:devops
    From: ""
    Name: copy
    SourcesAndDest:
    - src/etc/*
    - ${HOME}/etc/
  - CmdLine:
    - curl -sL https://ibm.biz/idt-installer | bash &&     ibmcloud config --check-version=false
      &&     ibmcloud plugin install cloud-databases
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'echo "Initializing environment..."' > ${HOME}/.bashrc-ni &&     echo 'export
      NVM_DIR="${HOME}/.nvm"' >> ${HOME}/.bashrc-ni &&     echo '[ -s "$NVM_DIR/nvm.sh"
      ] && \. "$NVM_DIR/nvm.sh"' >> ${HOME}/.bashrc-ni
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ${PWD} && . ./.bashrc-ni && nvm install "v${NODE_VERSION}" && nvm use "v${NODE_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${HOME}/.terraform.d/plugins
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${HOME}/.terraform.d/plugins
  - CmdLine:
    - curl -O -L https://github.com/IBM-Cloud/terraform-provider-ibm/releases/download/v${TERRAFORM_IBMCLOUD_VERSION}/linux_amd64.zip
      &&    unzip linux_amd64.zip &&     chmod +x terraform-provider-ibm_* &&    rm
      -rf linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://releases.hashicorp.com/terraform-provider-kubernetes/${TERRAFORM_KUBERNETES_VERSION}/terraform-provider-kubernetes_${TERRAFORM_KUBERNETES_VERSION}_linux_amd64.zip
      --output kube_linux_amd64.zip &&     unzip kube_linux_amd64.zip &&     chmod
      +x terraform-provider-kubernetes_* &&     rm -rf kube_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://releases.hashicorp.com/terraform-provider-helm/${TERRAFORM_HELM_VERSION}/terraform-provider-helm_${TERRAFORM_HELM_VERSION}_linux_amd64.zip
      --output helm_linux_amd64.zip &&    unzip helm_linux_amd64.zip &&    chmod +x
      terraform-provider-helm_* &&    rm -rf helm_linux_amd64.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - . ./.bashrc-ni && npm i -g yo
    Name: run
    PrependShell: true
  - CmdLine:
    - . ./.bashrc-ni && npm i -g @garage-catalyst/ibm-garage-cloud-cli
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/image-message
    - ./image-message
  - CmdLine:
    - cat ./image-message >> ./.bashrc-ni
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo dnf install python3-pip -y --disableplugin=subscription-manager &&     sudo
      ln -s /usr/bin/python3 /usr/bin/python &&     sudo ln -s /usr/bin/pip3 /usr/bin/pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --user ansible &&     echo "export PATH=\"${PATH}:${HOME}/.local/bin\""
      >> ./.bashrc-ni
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo dnf clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
      --output oc-client.tar.gz &&     tar xzf oc-client.tar.gz &&     sudo cp openshift-origin-client-tools*/oc
      /usr/local/bin &&     sudo cp openshift-origin-client-tools*/kubectl /usr/local/bin
      &&     sudo chmod +x /usr/local/bin/oc &&     sudo chmod +x /usr/local/bin/kubectl
      &&     rm -rf openshift-origin-client-tools*
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - --init-file
    - /home/devops/.bashrc-ni
    Name: entrypoint
    PrependShell: false
  From:
    Image: registry.access.redhat.com/ubi8/ubi:8.0-208
  Name: ""
  Platform: ""
  SourceCode: FROM registry.access.redhat.com/ubi8/ubi:8.0-208
