{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "apache/nifi:1.6.0",
      "SourceCode": "FROM apache/nifi:1.6.0",
      "Platform": "",
      "From": {
        "Image": "apache/nifi:1.6.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Apache NiFi \u003cdev@nifi.apache.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "site",
              "Value": "\"https://nifi.apache.org\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "UID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "GID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "NIFI_VERSION",
          "Name": "arg",
          "Value": "1.6.0"
        },
        {
          "Key": "MIRROR",
          "Name": "arg",
          "Value": "https://archive.apache.org/dist"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "NIFI_BASE_DIR",
              "Value": "/opt/nifi"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NIFI_TOOLKIT_HOME",
              "Value": "$NIFI_BASE_DIR/nifi-toolkit-$NIFI_VERSION"
            },
            {
              "Key": "NIFI_TOOLKIT_URL",
              "Value": "/nifi/${NIFI_VERSION}/nifi-toolkit-${NIFI_VERSION}-bin.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $NIFI_BASE_DIR/data     \u0026\u0026 mkdir -p $NIFI_BASE_DIR/flowfile_repository     \u0026\u0026 mkdir -p $NIFI_BASE_DIR/content_repository     \u0026\u0026 mkdir -p $NIFI_BASE_DIR/provenance_repository     \u0026\u0026 mkdir -p $NIFI_BASE_DIR/logs     \u0026\u0026 mkdir -p $NIFI_BASE_DIR/data/templates     \u0026\u0026 chown -R nifi:nifi ${NIFI_BASE_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fSL ${MIRROR}/${NIFI_TOOLKIT_URL} -o ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.tar.gz     \u0026\u0026 echo \"$(curl ${MIRROR}/${NIFI_TOOLKIT_URL}.sha256) *${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.tar.gz\" | sha256sum -c -     \u0026\u0026 tar -xvzf ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.tar.gz -C ${NIFI_BASE_DIR}     \u0026\u0026 rm ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.tar.gz     \u0026\u0026 chown -R nifi:nifi ${NIFI_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "10000",
            "8080",
            "8443"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts/nifi-env.sh",
            "$NIFI_HOME/bin/nifi-env.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/",
            "/${NIFI_BASE_DIR}/data/templates/"
          ]
        },
        {
          "CmdLine": [
            "chmod 700 /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$NIFI_HOME"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bin/nifi.sh",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}