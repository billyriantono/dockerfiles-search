MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine:3.1
  Commands:
  - Maintainer: Jimmi Dyson <jimmidyson@gmail.com>
    Name: maintainer
  - CmdLine:
    - /opt/grafana/grafana
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: GRAFANA_VERSION
      Value: 1.9.1
    Name: env
  - Env:
    - Key: INFLUXDB_NAME
      Value: k8s
    Name: env
  - Env:
    - Key: GRAFANA_DB_NAME
      Value: grafana
    Name: env
  - Env:
    - Key: GRAFANA_DEFAULT_DASHBOARD
      Value: /dashboard/file/default.json
    Name: env
  - Env:
    - Key: INFLUXDB_PROTO
      Value: http
    Name: env
  - Env:
    - Key: INFLUXDB_USER
      Value: root
    Name: env
  - Env:
    - Key: INFLUXDB_PASSWORD
      Value: root
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/jimmidyson/docker-grafana
  - CmdLine:
    - apk-install go git mercurial ca-certificates openssl tar gzip   && mkdir /opt   &&
      wget -q -O - http://grafanarel.s3.amazonaws.com/grafana-${GRAFANA_VERSION}.tar.gz
      | gzip -dc | tar xv -C /opt   && mv /opt/grafana-${GRAFANA_VERSION} /opt/grafana   &&
      export GOPATH=/go   && export PATH=${GOPATH}/bin:${PATH}   && cd ${GOPATH}/src/github.com/jimmidyson/docker-grafana/   &&
      go build -ldflags "-X main.Version $(cat VERSION)" -o /opt/grafana/grafana   &&
      rm -rf ${GOPATH}   && apk del go git mercurial tar gzip   && chown nobody:nobody
      /opt/grafana/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.js.tmpl
    - /opt/grafana/config.js.tmpl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - kubernetes-dashboard.json
    - /opt/grafana/app/dashboards/kubernetes.json
  - Name: workdir
    Path: /opt/grafana
  - Name: user
    User: nobody
  From:
    Image: gliderlabs/alpine:3.1
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine:3.1
