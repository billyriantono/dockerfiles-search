MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: GO_VERSION
      Value: 1.12.6
    Name: env
  - Env:
    - Key: GO_BUNDLE
      Value: go$GO_VERSION.linux-alpine-amd64.tar.gz
    Name: env
  - Env:
    - Key: GO_URL
      Value: http://resin-packages.s3.amazonaws.com/golang/v$GO_VERSION/$GO_BUNDLE
    Name: env
  - Env:
    - Key: GO_CRC
      Value: cfe52b99a1b76b93da9d381027af47a62b8d0c6278cefd6186d1dd6fa450204b
    Name: env
  - Env:
    - Key: WORK
      Value: /tmp/TorrServer
    Name: env
  - Env:
    - Key: GODIR
      Value: /usr/local/go
    Name: env
  - CmdLine:
    - "apk add curl g++ git && \techo \"Installing Go...\" && \tmkdir -p /usr/local/go
      && \tcurl -SLO \"$GO_URL\" && \techo \"$GO_CRC  $GO_BUNDLE\" | sha256sum -c
      - && \ttar -xzf $GO_BUNDLE -C /usr/local/go --strip-components=1 && \trm -f
      $GO_BUNDLE && \tcd /tmp && git clone https://github.com/YouROK/TorrServer.git
      && \techo \"Getting all project dependencies...\" && \tcd $WORK && GOPATH=$WORK
      GOBIN=$GODIR/bin $GODIR/bin/go get -fix ./... >/dev/null 2>&1 || : && \tmkdir
      -p $WORK/src/github.com/anacrolix && \tcd $WORK/src/github.com/anacrolix &&
      \tgit clone https://github.com/anacrolix/utp.git && \techo \"Compiling TorrServer...\"
      && \tcd $WORK && GOPATH=$WORK GOOS=linux GOARCH=amd64 $GODIR/bin/go build -o
      dist/TorrServer main && mv dist/TorrServer / && \trm -rf /var/cache/apk/* /usr/local/go
      /tmp /root/.cache/go-build && \tapk del curl g++ git && apk add libc-dev libstdc++"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 8090:8090
  - CmdLine:
    - /TorrServer
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
