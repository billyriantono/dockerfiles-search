{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "BeeeeeMo",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "SCALA_VERSION",
              "Value": "2.12.8"
            },
            {
              "Key": "ALMOND_VERSION",
              "Value": "0.3.1"
            },
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.6"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends default-jre             default-jdk             wget             build-essential             libreadline-dev             zlib1g-dev             libssl-dev             libbz2-dev             libsqlite3-dev             libffi-dev             libevent-dev             python3-dev             libkrb5-dev             gcc             vim             curl \u0026\u0026     apt-get clean -y \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/Python \u0026\u0026     cd /tmp/Python \u0026\u0026     wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz \u0026\u0026     tar xvf Python-$PYTHON_VERSION.tar.xz \u0026\u0026     cd /tmp/Python/Python-$PYTHON_VERSION \u0026\u0026     ./configure --enable-optimizations \u0026\u0026     make altinstall \u0026\u0026     rm -rf /tmp/Python \u0026\u0026     cd \u0026\u0026     pip3.6 install jupyter \u0026\u0026     pip3.6 install pyspark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lo coursier https://git.io/coursier-cli \u0026\u0026     chmod +x coursier \u0026\u0026     ./coursier bootstrap     -r jitpack     -i user -I user:sh.almond:scala-kernel-api_$SCALA_VERSION:$ALMOND_VERSION     sh.almond:scala-kernel_$SCALA_VERSION:$ALMOND_VERSION     -o almond \u0026\u0026     ./almond --install \u0026\u0026     rm -f almond \u0026\u0026     rm -f coursier"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--ip=0.0.0.0",
            "--allow-root"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--NotebookApp.password=sha1:92564cf3d00c:f00f85a4a122d13ff2f3cdb11d734cfdcbc823b3"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}