MetaArgs: null
Stages:
- As: fabricbase
  BaseName: ubuntu:18.04
  Commands:
  - Key: name
    Name: arg
    Value: value
  - CmdLine:
    - apt-get update && apt-get install -y apt-utils     && apt-get install -y curl
      python-pip git libltdl-dev tree openssh-server net-tools vim apt-transport-https
      software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://dl.google.com/go/go1.10.4.linux-amd64.tar.gz | tar -C /usr/local
      -zx && mkdir -p /root/eetue/gopath /root/eetue/myfabric
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /root/eetue/gopath
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin
    Name: env
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     &&
      add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable"     && apt-get update && apt-get install -y docker-ce
      && pip install docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $GOPATH/src/github.com/hyperledger && cd $GOPATH/src/github.com/hyperledger     &&
      git clone -b release-1.4 https://github.com/hyperledger/fabric && git clone
      -b release-1.4 https://github.com/hyperledger/fabric-ca
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/eetue/myfabric
  From:
    Image: ubuntu:18.04
  Name: fabricbase
  Platform: ""
  SourceCode: FROM ubuntu:18.04 AS fabricbase
- As: ca
  BaseName: fabricbase
  Commands:
  - CmdLine:
    - mkdir /root/eetue/myfabric/ca-server /root/eetue/myfabric/ca-admin /root/eetue/myfabric/org-admin
      && cd $GOPATH/src/github.com/hyperledger/fabric-ca && make fabric-ca-server
      && make fabric-ca-client
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/src/github.com/hyperledger/fabric-ca/bin
    - Key: FABRIC_CA_SERVER_HOME
      Value: /root/eetue/myfabric/ca-server
    - Key: FABRIC_CA_CLIENT_HOME
      Value: /root/eetue/myfabric/org-admin
    Name: env
  - Name: expose
    Ports:
    - "7054"
  From:
    Stage:
      Index: 0
      Named: fabricbase
  Name: ca
  Platform: ""
  SourceCode: FROM fabricbase AS ca
- As: orderer
  BaseName: fabricbase
  Commands:
  - CmdLine:
    - cd $GOPATH/src/github.com/hyperledger/fabric-ca && make fabric-ca-client
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/src/github.com/hyperledger/fabric-ca/bin
    Name: env
  - CmdLine:
    - cd $GOPATH/src/github.com/hyperledger/fabric && make configtxgen && make orderer
    Name: run
    PrependShell: true
  - Env:
    - Key: FABRIC_HOME
      Value: $GOPATH/src/github.com/hyperledger/fabric
    - Key: PATH
      Value: $PATH:$GOPATH/src/github.com/hyperledger/fabric/.build/bin
    - Key: FABRIC_CFG_PATH
      Value: /root/eetue/myfabric
    - Key: FABRIC_CA_CLIENT_HOME
      Value: /root/eetue/myfabric
    Name: env
  - CmdLine:
    - 'cd $FABRIC_HOME/sampleconfig && cp core.yaml $FABRIC_CFG_PATH && cp orderer.yaml
      $FABRIC_CFG_PATH # cd는 RUN마다 해줘야됨'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "7050"
  From:
    Stage:
      Index: 0
      Named: fabricbase
  Name: orderer
  Platform: ""
  SourceCode: FROM fabricbase AS orderer
- As: peer
  BaseName: fabricbase
  Commands:
  - CmdLine:
    - cd $GOPATH/src/github.com/hyperledger/fabric-ca && make fabric-ca-client
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/src/github.com/hyperledger/fabric-ca/bin
    Name: env
  - CmdLine:
    - cd $GOPATH/src/github.com/hyperledger/fabric && make peer
    Name: run
    PrependShell: true
  - Env:
    - Key: FABRIC_HOME
      Value: $GOPATH/src/github.com/hyperledger/fabric
    - Key: PATH
      Value: $PATH:$GOPATH/src/github.com/hyperledger/fabric/.build/bin
    - Key: FABRIC_CFG_PATH
      Value: /root/eetue/myfabric
    - Key: FABRIC_CA_CLIENT_HOME
      Value: /root/eetue/myfabric
    Name: env
  - CmdLine:
    - cd $FABRIC_HOME/sampleconfig && cp core.yaml $FABRIC_CFG_PATH && cp orderer.yaml
      $FABRIC_CFG_PATH
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "7051"
    - "7053"
  From:
    Stage:
      Index: 0
      Named: fabricbase
  Name: peer
  Platform: ""
  SourceCode: FROM fabricbase AS peer
