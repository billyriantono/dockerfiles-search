{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.3",
      "SourceCode": "FROM ubuntu:14.04.3",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.3"
      },
      "Commands": [
        {
          "Maintainer": "khiraiwa",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "4.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MARVEL_VERSION",
              "Value": "2.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install software-properties-common python-software-properties wget unzip -y --no-install-recommends \u0026\u0026   echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026   add-apt-repository -y ppa:webupd8team/java \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y oracle-java8-installer --no-install-recommends \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   rm -rf /var/cache/oracle-jdk8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /home/kibana/ \u0026\u0026   groupadd -r kibana \u0026\u0026 useradd -r -d /home/kibana -s /bin/bash -g kibana kibana \u0026\u0026   echo 'kibana ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/kibana \u0026\u0026   wget http://download.elastic.co/kibana/kibana-snapshot/kibana-${KIBANA_VERSION}-snapshot-linux-x64.zip \u0026\u0026   unzip kibana-${KIBANA_VERSION}-snapshot-linux-x64.zip \u0026\u0026   rm -f kibana-${KIBANA_VERSION}-snapshot-linux-x64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/kibana \u0026\u0026   wget https://download.elastic.co/elasticsearch/marvel/marvel-${MARVEL_VERSION}.tar.gz \u0026\u0026   /home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64/bin/kibana plugin --install marvel --url file:///home/kibana/marvel-${MARVEL_VERSION}.tar.gz \u0026\u0026   rm -f marvel-${MARVEL_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/kibana.yml",
            "/home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64/config/kibana.yml"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /data_kibana/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data_kibana/"
          ]
        },
        {
          "CmdLine": [
            "chown -R kibana:kibana /data_kibana \u0026\u0026   chown -R kibana:kibana /home/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "kibana"
        },
        {
          "Name": "workdir",
          "Path": "/home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64"
        },
        {
          "Name": "expose",
          "Ports": [
            "5601"
          ]
        },
        {
          "CmdLine": [
            "sudo chown -R kibana:kibana /data_kibana \u0026\u0026   /home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64/bin/kibana"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}