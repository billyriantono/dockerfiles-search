MetaArgs: null
Stages:
- BaseName: ubuntu:14.04.3
  Commands:
  - Maintainer: khiraiwa
    Name: maintainer
  - Env:
    - Key: KIBANA_VERSION
      Value: 4.2.0
    Name: env
  - Env:
    - Key: MARVEL_VERSION
      Value: 2.0.0
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install software-properties-common python-software-properties
      wget unzip -y --no-install-recommends &&   echo oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true | debconf-set-selections &&   add-apt-repository -y ppa:webupd8team/java
      &&   apt-get update &&   apt-get install -y oracle-java8-installer --no-install-recommends
      &&   apt-get clean &&   rm -rf /var/lib/apt/lists/* &&   rm -rf /var/cache/oracle-jdk8-installer
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - mkdir -p /home/kibana/ &&   groupadd -r kibana && useradd -r -d /home/kibana
      -s /bin/bash -g kibana kibana &&   echo 'kibana ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/kibana &&   wget http://download.elastic.co/kibana/kibana-snapshot/kibana-${KIBANA_VERSION}-snapshot-linux-x64.zip
      &&   unzip kibana-${KIBANA_VERSION}-snapshot-linux-x64.zip &&   rm -f kibana-${KIBANA_VERSION}-snapshot-linux-x64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/kibana &&   wget https://download.elastic.co/elasticsearch/marvel/marvel-${MARVEL_VERSION}.tar.gz
      &&   /home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64/bin/kibana plugin
      --install marvel --url file:///home/kibana/marvel-${MARVEL_VERSION}.tar.gz &&   rm
      -f marvel-${MARVEL_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/kibana.yml
    - /home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64/config/kibana.yml
  - CmdLine:
    - mkdir -p /data_kibana/
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data_kibana/
  - CmdLine:
    - chown -R kibana:kibana /data_kibana &&   chown -R kibana:kibana /home/kibana
    Name: run
    PrependShell: true
  - Name: user
    User: kibana
  - Name: workdir
    Path: /home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - sudo chown -R kibana:kibana /data_kibana &&   /home/kibana/kibana-${KIBANA_VERSION}-snapshot-linux-x64/bin/kibana
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:14.04.3
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04.3
