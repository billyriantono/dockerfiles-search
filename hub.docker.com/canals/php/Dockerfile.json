{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --yes --force-yes     cron g++ gettext libicu-dev openssl     libc-client-dev libkrb5-dev      libxml2-dev libfreetype6-dev     libgd-dev libmcrypt-dev bzip2     libbz2-dev libtidy-dev libcurl4-openssl-dev     libz-dev libmemcached-dev libxslt-dev git-core"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath \u0026\u0026    docker-php-ext-install bz2 \u0026\u0026     docker-php-ext-install calendar \u0026\u0026     docker-php-ext-install dba \u0026\u0026     docker-php-ext-install exif \u0026\u0026    docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr \u0026\u0026    docker-php-ext-install gd \u0026\u0026    docker-php-ext-install gettext \u0026\u0026    docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026    docker-php-ext-install imap \u0026\u0026    docker-php-ext-install intl \u0026\u0026    docker-php-ext-install mcrypt \u0026\u0026    docker-php-ext-install pdo pdo_mysql \u0026\u0026    docker-php-ext-install soap \u0026\u0026    docker-php-ext-install tidy \u0026\u0026    docker-php-ext-install xmlrpc \u0026\u0026    docker-php-ext-install mbstring \u0026\u0026    docker-php-ext-install xsl \u0026\u0026    docker-php-ext-install zip \u0026\u0026    docker-php-ext-configure hash --with-mhash \u0026\u0026    pecl install xdebug \u0026\u0026 docker-php-ext-enable xdebug \u0026\u0026    pecl install mongodb \u0026\u0026 docker-php-ext-enable mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php   \u0026\u0026 mv composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod ssl \u0026\u0026     a2ensite default-ssl \u0026\u0026    openssl req -subj '/CN=example.com/O=My Company Name LTD./C=US' -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/ssl/private/ssl-cert-snakeoil.key -out /etc/ssl/certs/ssl-cert-snakeoil.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "apt-get install --yes --force-yes libmagickwand-dev libmagickcore-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes '' | pecl install -f imagick \u0026\u0026    docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}