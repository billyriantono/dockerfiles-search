{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache-jessie",
      "SourceCode": "FROM php:7.1-apache-jessie",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache-jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apt-transport-https ca-certificates libz-dev libmemcached-dev redis-tools unzip \u0026\u0026     echo \"deb https://dl-ssl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026     curl -O https://dl-ssl.google.com/linux/linux_signing_key.pub \u0026\u0026     apt-key add linux_signing_key.pub \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026     curl -O https://dl.yarnpkg.com/debian/pubkey.gpg \u0026\u0026     apt-key add pubkey.gpg \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y git zip libbz2-dev build-essential mysql-client libpng12-dev libjpeg-dev google-chrome-stable yarn \u0026\u0026     pecl install xdebug redis memcached  \u0026\u0026 docker-php-ext-enable xdebug redis memcached  \u0026\u0026     docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \u0026\u0026     docker-php-ext-install bz2 gd mbstring opcache pdo pdo_mysql zip \u0026\u0026     a2enmod rewrite \u0026\u0026     echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo \"xdebug.remote_connect_back=0\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo \"xdebug.remote_port=9000\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo \"xdebug.profiler_enable=0\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo \"xdebug.profiler_enable_trigger=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo \"xdebug.profiler_output_name = \\\"cachegrind.out.%t-%s\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo \"xdebug.profiler_append=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.disabled \u0026\u0026     echo \"opcache.memory_consumption=128\" \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     echo \"opcache.interned_strings_buffer=8\" \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     echo \"opcache.max_accelerated_files=4000\" \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     echo \"opcache.revalidate_freq=60\" \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     echo \"opcache.fast_shsutdown=1\" \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     echo \"opcache.enable_cli=1\" \u003e\u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     echo \"memory_limit=2048M\" \u003e /usr/local/etc/php/conf.d/global.ini \u0026\u0026     echo \"date.timezone=Europe/London\" \u003e\u003e /usr/local/etc/php/conf.d/global.ini \u0026\u0026     echo \"max_input_vars = 5000\" \u003e\u003e /usr/local/etc/php/conf.d/global.ini \u0026\u0026     echo \"max_execution_time = 360\" \u003e\u003e /usr/local/etc/php/conf.d/global.ini \u0026\u0026     echo \"max_input_time = 120\" \u003e\u003e /usr/local/etc/php/conf.d/global.ini \u0026\u0026     touch /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "vagrant"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --silent --show-error https://getcomposer.org/installer | php \u0026\u0026 mv composer.phar /usr/local/bin/composer \u0026\u0026     curl -sL https://deb.nodesource.com/setup_8.x | sh \u0026\u0026 apt-get install -y nodejs \u0026\u0026     composer global require \"hirak/prestissimo:^0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}