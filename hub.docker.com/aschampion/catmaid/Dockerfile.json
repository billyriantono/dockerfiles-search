{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Andrew Champion \u003candrew.champion@gmail.com\u003e, Tom Kazimiers \u003ctom@voodoo-arts.net\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y apt-utils gawk     \u0026\u0026 apt-get install -y software-properties-common     \u0026\u0026 add-apt-repository ppa:deadsnakes/ppa     \u0026\u0026 add-apt-repository -y ppa:nginx/stable     \u0026\u0026 add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\"     \u0026\u0026 apt-get install -y wget ca-certificates     \u0026\u0026 wget --quiet -O - https://postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -     \u0026\u0026 apt-get update -y     \u0026\u0026 apt-get install -y python3.6 python3.6-dev git python-pip     \u0026\u0026 apt-get install -y nginx supervisor     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "packagelist-ubuntu-16.04-apt.txt",
            "/home/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -y      \u0026\u0026 xargs apt-get install -y \u003c /home/packagelist-ubuntu-16.04-apt.txt     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "django/requirements.txt",
            "/home/django/"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORKON_HOME",
              "Value": "/opt/virtualenvs"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/virtualenvs     \u0026\u0026 /bin/bash -c \"source /usr/share/virtualenvwrapper/virtualenvwrapper.sh     \u0026\u0026 mkvirtualenv catmaid -p /usr/bin/python3.6     \u0026\u0026 workon catmaid     \u0026\u0026 pip install -U pip setuptools     \u0026\u0026 pip install -r /home/django/requirements.txt\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/home/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".git",
            "/home/.git"
          ]
        },
        {
          "CmdLine": [
            "cd /home/ \u0026\u0026 git describe \u003e /home/git-version \u0026\u0026 rm -r /home/.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source /usr/share/virtualenvwrapper/virtualenvwrapper.sh     \u0026\u0026 workon catmaid     \u0026\u0026 pip install uwsgi\"     \u0026\u0026 ln -s /home/scripts/docker/supervisor-catmaid.conf /etc/supervisor/conf.d/     \u0026\u0026 chmod +x /home/scripts/docker/start-catmaid.sh     \u0026\u0026 chmod +x /home/scripts/docker/catmaid-entry.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/ssl/private-copy;     mv /etc/ssl/private/* /etc/ssl/private-copy/;     rm -r /etc/ssl/private;     mv /etc/ssl/private-copy /etc/ssl/private;     chmod -R 0700 /etc/ssl/private;     chown -R postgres /etc/ssl/private"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/home/scripts/docker/catmaid-entry.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/django/projects/"
        },
        {
          "CmdLine": [
            "platform"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}