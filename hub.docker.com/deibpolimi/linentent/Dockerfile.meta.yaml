MetaArgs: null
Stages:
- BaseName: instructure/ruby:2.3
  Commands:
  - Maintainer: Instructure
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7   &&
      apt-get install -y apt-transport-https ca-certificates   && sh -c 'echo deb
      https://oss-binaries.phusionpassenger.com/apt/passenger trusty main > /etc/apt/sources.list.d/passenger.list'   &&
      sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg
      main" >> /etc/apt/sources.list.d/pgdg.list'   && curl --silent https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add -   && curl -sL https://deb.nodesource.com/setup_4.x | bash -   &&
      apt-get update   && apt-get install -y --no-install-recommends nginx-extras
      passenger postgresql-client-9.5 nodejs   && apt-get clean   && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''docker ALL=(ALL) NOPASSWD: SETENV: /usr/sbin/nginx'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - passenger_metrics.rb
    - /monitoring/sensu/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - passenger_check
    - /monitoring/sensu/
  - CmdLine:
    - chmod +x /monitoring/sensu/passenger_metrics.rb /monitoring/sensu/passenger_check
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install -i /var/lib/gems/$RUBY_MAJOR.0 nokogiri sensu-plugin
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - passenger-config build-native-support     && gem install bundler -v '~>1.12'
      && gem install rails -v '~>4.2'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint
    - /usr/src/entrypoint
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf.erb
    - /usr/src/nginx/nginx.conf.erb
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - env-whitelist.conf
    - /usr/src/nginx/main.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - main.d/*
    - /usr/src/nginx/main.d/
  - CmdLine:
    - mkdir -p /usr/src/nginx/conf.d  && mkdir -p /usr/src/nginx/location.d  && mkdir
      -p /usr/src/nginx/main.d  && ln -sf /dev/stdout /var/log/nginx/access.log  &&
      ln -sf /dev/stderr /var/log/nginx/error.log  && chown docker:docker -R /usr/src/nginx
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/src/entrypoint
    Name: cmd
    PrependShell: false
  From:
    Image: instructure/ruby:2.3
  Name: ""
  Platform: ""
  SourceCode: FROM instructure/ruby:2.3
