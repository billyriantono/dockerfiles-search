{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine3.6",
      "SourceCode": "FROM php:7.2-fpm-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine3.6"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "'/app'"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade    \u0026\u0026 apk add --no-cache curl libbz2 php7-bz2 php7-pdo php7-pgsql php7-bcmath php7-zmq php7-curl bash php7-pear php7-imagick openssh    libtool     postgresql-dev     libpng-dev     imagemagick-c++     imagemagick-dev     libmcrypt-dev     libxml2-dev     yaml-dev     bzip2     aspell-dev     autoconf     build-base     linux-headers     libaio-dev     zlib-dev     git     subversion     freetype-dev     libjpeg-turbo-dev     libmcrypt-dev     bzip2-dev     libstdc++     libxslt-dev     openldap-dev     hiredis-dev     make     unzip     ffmpeg     wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd bcmath zip bz2 pdo pdo_pgsql simplexml opcache sockets mbstring pcntl xsl pspell"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://xdebug.org/files/xdebug-2.6.1.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xvzf xdebug-2.6.1.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd xdebug-2.6.1     \u0026\u0026 phpize     \u0026\u0026 ./configure --enable-xdebug     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20170718     \u0026\u0026 echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'xdebug.remote_enable=on' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'xdebug.remote_connect_back=1' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'xdebug.remote_host=127.0.0.1' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'xdebug.remote_port=9000' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'xdebug.remote_handler=dbgp' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'xdebug.max_nesting_level=512' \u003e\u003e /usr/local/etc/php.ini     \u0026\u0026 echo 'extension=xdebug.so' \u003e\u003e /usr/local/etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 curl -OL https://github.com/symfony/symfony/archive/v4.2.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -u 2000 -g 2000 -h /home/symfony -s /bin/bash -D symfony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "'/var/www/html'"
        }
      ]
    }
  ]
}