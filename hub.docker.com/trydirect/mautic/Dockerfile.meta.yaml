MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y apache2 software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r -g 2000 mautic; useradd -r -u 2000 -g 2000 -m -c "app account" -d
      /home/mautic -s /bin/bash mautic
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/html && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2
      /var/www/html     && chown -R mautic. /var/lock/apache2 /var/run/apache2 /var/log/apache2
      /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ServerName localhost" >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_LOCK_DIR
      Value: /var/lock/apache2
    Name: env
  - Env:
    - Key: APACHE_PID_FILE
      Value: /var/run/apache2/apache2.pid
    Name: env
  - Env:
    - Key: APACHE_RUN_DIR
      Value: /var/run/apache2/
    Name: env
  - Env:
    - Key: APACHE_RUN_USER
      Value: mautic
    Name: env
  - Env:
    - Key: APACHE_RUN_GROUP
      Value: mautic
    Name: env
  - Env:
    - Key: APACHE_LOG_DIR
      Value: /var/log/apache2
    Name: env
  - Env:
    - Key: APACHE_SERVER_NAME
      Value: demo.loc
    Name: env
  - CmdLine:
    - a2enmod rewrite ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes php libapache2-mod-php php-mcrypt php-mysql php7.0-mysql
      php-xsl php-gd php-intl php-curl libc-client-dev php-mbstring php7.0-mbstring
      libapache2-mod-php7.0 php-bcmath php-zip libicu-dev libkrb5-dev libmcrypt-dev
      libssl-dev unzip zip git php-cli cron curl wget git && phpenmod mcrypt mysql
      xsl gd intl curl imap imap-ssl kerberos mbstring mysqli pdo pdo_mysql && apt-get
      clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/apache_default_vhost
    - /etc/apache2/sites-available/demo.loc.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/apache_default_vhost_ssl
    - /etc/apache2/sites-available/ssl.conf
  - CmdLine:
    - rm -f /etc/apache2/sites-enabled/000-default.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/ports.conf
    - /etc/apache2/ports.conf
  - CmdLine:
    - a2ensite demo.loc.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite ssl.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssl
    - /etc/apache2/ssl/
  - Name: volume
    Volumes:
    - /var/www/html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2-foreground
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/apache2-foreground
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Env:
    - Key: MAUTIC_VERSION
      Value: 2.15.0
    Name: env
  - Env:
    - Key: MAUTIC_SHA1
      Value: eec5676cc242b32142b6efcf0c44edc8b16fdd63
    Name: env
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - git clone https://github.com/mautic/mautic.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/mautic
  - CmdLine:
    - git fetch --all --tags
    Name: run
    PrependShell: true
  - CmdLine:
    - git checkout tags/2.15.0 -b 2.15.0
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/;cgi.fix_pathinfo\s*=\s*1/cgi.fix_pathinfo = 0/g; s/expose_php\s*=\s*On/expose_php
      = Off/g" /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/expose_php\s*=\s*On/expose_php = Off/g" /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize = 100M/g; s/post_max_size\s*=\s*8M/post_max_size
      = 100M/g" /etc/php/7.0/apache2/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php
    Name: run
    PrependShell: true
  - CmdLine:
    - mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/src/mautic/app/cache/ip_data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R mautic. /usr/src/mautic
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /update_geolite.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cd /var/www/html/app/cache/ip_data" >> /update_geolite.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "curl -o GeoLite2-City.mmdb.gz -SL http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz"
      >> /update_geolite.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "gunzip -f /var/www/html/app/cache/ip_data/*.gz" >> /update_geolite.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "chmod 755 /var/www/html/app/cache/ip_data/GeoLite2-City.mmdb" >> /update_geolite.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /update_geolite.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c crontab -l > /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/log/cron.log &&     chown mautic. /var/log/cron.log &&     chown
      -R mautic. /var/run/ &&     chmod u+s /usr/sbin/cron
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '* 2 10 * *  mautic /bin/sh /update_geolite.sh >/dev/null 2>&1' >> /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '*/5 * * * * mautic php /var/www/html/app/console mautic:segments:update
      --env=prod' >> /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '*/5 * * * * mautic php /var/www/html/app/console mautic:campaigns:rebuild
      --env=prod' >> /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '*/5 * * * * mautic php /var/www/html/app/console mautic:emails:send --env=prod'
      >> /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '* * * * * mautic echo "Mautic cronjob check" >> /var/log/cron.log 2>&1'
      >> /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - CmdLine:
    - crontab /etc/cron.d/mautic-cronjobs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - makeconfig.php
    - /makeconfig.php
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - makedb.php
    - /makedb.php
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2-foreground
    - /
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - service cron restart
    Name: run
    PrependShell: true
  - Name: user
    User: mautic
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
