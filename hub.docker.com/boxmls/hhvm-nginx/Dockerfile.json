{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hipstack/hipstack:0.2.0",
      "SourceCode": "FROM          hipstack/hipstack:0.2.0",
      "Platform": "",
      "From": {
        "Image": "hipstack/hipstack:0.2.0"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_IMAGE",
              "Value": "boxmls/docker-hhvm-nginx"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO - https://packagecloud.io/gpg.key | sudo apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026               apt-get -y --force-yes update \u0026\u0026               apt-get -y --force-yes upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026               apt-get -y --force-yes upgrade hhvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.9.32.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo deb http://httpredir.debian.org/debian wheezy-backports main | sudo tee /etc/apt/sources.list.d/backports.list \u0026\u0026               apt-get update --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --force-yes nginx \u0026\u0026               apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --force-yes nginx-extras \u0026\u0026               apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026               wget --quiet https://github.com/pagespeed/ngx_pagespeed/archive/release-1.9.32.6-beta.zip \u0026\u0026               unzip release-1.9.32.6-beta.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/incubator-pagespeed-ngx-release-${NPS_VERSION}-beta/ \u0026\u0026               wget --quiet https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz \u0026\u0026               tar -xzvf ${NPS_VERSION}.tar.gz \u0026\u0026               rm -fv ${NPS_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026               wget --quiet http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026               tar -xvzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026               cd /usr/src/nginx-${NGINX_VERSION}/ \u0026\u0026                 ./configure --add-module=/usr/src/incubator-pagespeed-ngx-release-${NPS_VERSION}-beta                   --with-http_ssl_module                   --with-threads                   --with-stream                   --prefix=/usr/local/share/nginx                   --conf-path=/etc/nginx/nginx.conf                   --sbin-path=/usr/sbin                   --error-log-path=/var/log/nginx/error.log \u0026\u0026                   make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr \u0026\u0026               rm -fr /usr/src/* \u0026\u0026               mkdir -p /var/pagespeed/cache \u0026\u0026               apt-get clean \u0026\u0026               rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026               find /var/log -type f | while read f; do echo -ne '' \u003e $f; done;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -skS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin \u0026\u0026               ln -sf /usr/local/bin/composer.phar /usr/local/bin/composer \u0026\u0026               chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm cache clean -f \u0026\u0026               npm install -g n"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "n v8.16.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g npm@latest \u0026\u0026               npm install -g pm2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"127.0.0.1 localhost\" \u003e\u003e /etc/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        }
      ]
    }
  ]
}