{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:9",
      "SourceCode": "FROM          debian:9",
      "Platform": "",
      "From": {
        "Image": "debian:9"
      },
      "Commands": [
        {
          "Maintainer": "MyPropertyOffice \"http://mypropertyoffice.com\"",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_IMAGE",
              "Value": "mypropertyoffice/debian"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026               apt-get install -y --force-yes apt-transport-https sudo nano apt-utils curl wget python build-essential \u0026\u0026               apt-get install -y --force-yes htop man unzip vim socat telnet git \u0026\u0026               apt-get install -y --force-yes libpcre3-dev libcurl3 libcurl3-dev lsyncd monit \u0026\u0026               apt-get install -y --force-yes openssh-server \u0026\u0026               apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026               apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid=500 core \u0026\u0026               useradd --create-home --uid=500 --gid=500 --home-dir=/home/core core \u0026\u0026               echo core:mmoqmwnpipmrkho | /usr/sbin/chpasswd \u0026\u0026               usermod -a -G sudo core \u0026\u0026               yes | cp /root/.bashrc /home/core \u0026\u0026               chown -R core:core /home/core \u0026\u0026               echo \"core ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026               mkdir -p /root/.ssh \u0026\u0026               mkdir -p /etc/pki/tls/certs \u0026\u0026               mkdir -p /etc/pki/tls/private \u0026\u0026               mkdir -p /home/core/.ssh \u0026\u0026               mkdir -p /home/core/.config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"127.0.0.1 localhost\" \u003e\u003e /etc/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin/entrypoint.sh",
            "/usr/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x  /usr/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/core"
        },
        {
          "Name": "user",
          "User": "core"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/usr/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}