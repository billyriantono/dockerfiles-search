MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 &&         echo
      'deb http://download.fpcomplete.com/ubuntu trusty main' | tee /etc/apt/sources.list.d/fpco.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         aria2         git         libncurses-dev         pkg-config         python-dev         python-pip         python3-dev         python3-pip
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - useradd --uid 1000 -m jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p -m 700 /books && chown jupyter /books
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /books
  - Name: user
    User: jupyter
  - Name: workdir
    Path: /home/jupyter
  - Env:
    - Key: PATH
      Value: '"/home/jupyter/.local/bin:${PATH}"'
    Name: env
  - CmdLine:
    - mkdir -p -m 700 ~/.jupyter/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /home/jupyter/.jupyter/
  - Name: user
    User: root
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         gcc         g++         libzmq3-dev
    Name: run
    PrependShell: true
  - Name: user
    User: jupyter
  - CmdLine:
    - pip3 install --user --upgrade jupyter
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         smlnj         libsmlnj-smlnj
    Name: run
    PrependShell: true
  - Name: user
    User: jupyter
  - CmdLine:
    - git clone https://github.com/matsubara0507/simple-ismlnj.git ismlnj
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "/home/jupyter/.local/share/jupyter/kernels/ismlnj"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's:/root/sml:/home/jupyter/ismlnj:' "/home/jupyter/ismlnj/kernels/smlnj/kernel.json"
      &&     jupyter kernelspec install --user /home/jupyter/ismlnj/kernels/smlnj
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         stack
    Name: run
    PrependShell: true
  - Name: user
    User: jupyter
  - CmdLine:
    - stack --install-ghc --resolver lts-5.0 install ihaskell
    Name: run
    PrependShell: true
  - CmdLine:
    - ~/.local/bin/ihaskell install
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         m4         texlive-fonts-recommended         texlive-latex-extra         texlive-latex-recommended         texlive-xetex
    Name: run
    PrependShell: true
  - Name: user
    User: jupyter
  - CmdLine:
    - aria2c --seed-time=0 http://mirror.aarnet.edu.au/pub/sage/linux/64bit/meta/sage-8.2-Ubuntu_14.04-x86_64.tar.bz2.torrent
      &&     tar xvjf sage*.tar.bz2 &&     rm sage*.tar.bz2*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf SageMath/local/share/jupyter/kernels/sagemath/doc
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's:/home/buildbot/.*/local/bin/sage:/home/jupyter/SageMath/sage:g' /home/jupyter/SageMath/local/share/jupyter/kernels/sagemath/kernel.json
      && jupyter kernelspec install --user SageMath/local/share/jupyter/kernels/sagemath
    Name: run
    PrependShell: true
  - Env:
    - Key: SAGE_ROOT
      Value: '"/home/jupyter/SageMath"'
    Name: env
  - Env:
    - Key: JUPYTER_PATH
      Value: '"/home/jupyter/SageMath/local/share/jupyter${JUPYTER_PATH:+:$JUPYTER_PATH}"'
    Name: env
  - CmdLine:
    - aria2c https://root.cern.ch/download/cling/cling_2018-11-05_ubuntu14.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvjf cling_*.tar.bz2 &&     rm -f cling_*.tar.bz2 &&     mv cling_* cling
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/home/jupyter/cling/bin:${PATH}"'
    Name: env
  - CmdLine:
    - cd /home/jupyter/cling/share/cling/Jupyter/kernel &&     pip install --user
      -e . &&     jupyter kernelspec install --user cling-cpp11 &&     jupyter kernelspec
      install --user cling-cpp14 &&     jupyter kernelspec install --user cling-cpp17
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --user --upgrade six
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends     graphviz     python3-matplotlib     python3-numpy     python3-pandas     python3-scipy
    Name: run
    PrependShell: true
  - Name: user
    User: jupyter
  - CmdLine:
    - pip3 install --user --upgrade     graphviz     seaborn     scikit-image     scikit-learn     sympy     tensorflow
    Name: run
    PrependShell: true
  - CmdLine:
    - stack
    - exec
    - jupyter
    - notebook
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
