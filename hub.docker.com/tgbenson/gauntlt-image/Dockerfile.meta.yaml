MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Env:
    - Key: SONAR_SCANNER_VERSION
      Value: "2.8"
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gnupg2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git sudo make locate wget ruby-dev host gem bsdmainutils
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "wget sourceforge.net/projects/ubuntuzilla/files/mozilla/apt/pool/main/f/firefox-mozilla-build/firefox-mozilla-build_39.0.3-0ubuntu1_amd64.deb;dpkg
      -i firefox-mozilla-build_39.0.3-0ubuntu1_amd64.deb"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-setuptools python-dev build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y maven
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-cffi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g eslint
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g retire
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g eslint-plugin-scanjs-rules
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g eslint-plugin-no-unsafe-innerhtml
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install datadog
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install sslyze
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/18F/compliance-toolkit.git /opt/compliance-toolkit
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ToddBenson/concourse-maven-spring-boot /opt/base-project
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/gauntlt/gauntlt /opt/gauntlt
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/drwetter/testssl.sh.git /opt/testssl
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "cd /opt/gauntlt; source ./install_gauntlt_deps.sh"; exit 0
    Name: run
    PrependShell: true
  - CmdLine:
    - bash /opt/gauntlt/ready_to_rumble.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip uninstall cryptography -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cryptography
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - CmdLine:
    - ln -s /usr/bin/nodejs /usr/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/base-project;./mvnw clean install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '"https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-${SONAR_SCANNER_VERSION}.zip"'
    - /
  - CmdLine:
    - unzip "sonar-scanner-${SONAR_SCANNER_VERSION}.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - Env:
    - Key: PATH
      Value: /sonar-scanner-${SONAR_SCANNER_VERSION}/bin:/bin:${PATH}
    Name: env
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: From ubuntu:latest
