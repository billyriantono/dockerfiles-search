{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openshift/jenkins-slave-base-centos7:v3.11",
      "SourceCode": "FROM openshift/jenkins-slave-base-centos7:v3.11",
      "Platform": "",
      "From": {
        "Image": "openshift/jenkins-slave-base-centos7:v3.11"
      },
      "Commands": [
        {
          "Key": "go_version",
          "Name": "arg",
          "Value": "1.11.2"
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION_DEFAULT",
              "Value": "$go_version"
            },
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            },
            {
              "Key": "GOPATH",
              "Value": "/usr/src/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:$GOROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492.zip \u0026\u0026     unzip /tmp/sonar-scanner.zip \u0026\u0026     mv sonar-scanner-* sonar-scanner \u0026\u0026     ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner \u0026\u0026     chmod 755 /usr/local/bin/sonar-scanner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install gcc make -y \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ -z $GO_VERSION ] ; then GO_VERSION=${GO_VERSION_DEFAULT} ; fi \u0026\u0026     curl -L -o /usr/go${GO_VERSION}.linux-amd64.tar.gz https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz \u0026\u0026     mkdir -p /usr/src/go/src/redhat \u0026\u0026     tar -xzf /usr/go${GO_VERSION}.linux-amd64.tar.gz \u0026\u0026     mv $(pwd)/go /usr/local/ \u0026\u0026     go get -u github.com/golang/dep/cmd/dep \u0026\u0026     chown -R 1001 /usr/src/go \u0026\u0026     chown -R 1001 /usr/local/go \u0026\u0026     chown -R 1001 ${HOME}/.cache/go-build \u0026\u0026     chmod -R 777 ${HOME}/.cache \u0026\u0026     rm -f /usr/go${GO_VERSION}.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1001"
        }
      ]
    }
  ]
}