{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update         \u0026\u0026 apk add --no-cache --virtual .build-deps bash gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev git wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "soft",
            "${HOME}"
          ]
        },
        {
          "CmdLine": [
            "cd ${HOME}     \u0026\u0026 tar xvf libfastcommon-master.tar.gz     \u0026\u0026 tar xvf fastdfs-master.tar.gz     \u0026\u0026 tar xvf fastdfs-nginx-module-master.tar.gz     \u0026\u0026 tar xvf fastdht-master.tar.gz     \u0026\u0026 tar xvf nginx-1.15.3.tar.gz     \u0026\u0026 tar xvf db-18.1.32.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}/libfastcommon-master/         \u0026\u0026 ./make.sh         \u0026\u0026 ./make.sh install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}/fastdfs-master/         \u0026\u0026 ./make.sh         \u0026\u0026 ./make.sh install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${HOME}/db-18.1.32/build_unix"
        },
        {
          "CmdLine": [
            "../dist/configure -prefix=/usr         \u0026\u0026 make         \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}/fastdht-master/         \u0026\u0026 sed -i \"s?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -I/usr/include/ -L/usr/lib/'?\" make.sh         \u0026\u0026 ./make.sh         \u0026\u0026 ./make.sh install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /etc/fdfs/         \u0026\u0026 cp storage.conf.sample storage.conf         \u0026\u0026 cp tracker.conf.sample tracker.conf         \u0026\u0026 cp client.conf.sample client.conf         \u0026\u0026 sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/tracker|g\" /etc/fdfs/tracker.conf         \u0026\u0026 sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/storage.conf         \u0026\u0026 sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/client.conf         \u0026\u0026 sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdhtd.conf         \u0026\u0026 sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdht_client.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${HOME}         \u0026\u0026 chmod u+x ${HOME}/fastdfs-nginx-module-master/src/config         \u0026\u0026 cd nginx-1.15.3         \u0026\u0026 ./configure --add-module=${HOME}/fastdfs-nginx-module-master/src         \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp ${HOME}/fastdfs-nginx-module-master/src/mod_fastdfs.conf /etc/fdfs/         \u0026\u0026 sed -i \"s|^store_path0.*$|store_path0=/var/local/fdfs/storage|g\" /etc/fdfs/mod_fastdfs.conf         \u0026\u0026 sed -i \"s|^url_have_group_name =.*$|url_have_group_name = true|g\" /etc/fdfs/mod_fastdfs.conf         \u0026\u0026 cd ${HOME}/fastdfs-master/conf/         \u0026\u0026 cp http.conf mime.types anti-steal.jpg /etc/fdfs/         \u0026\u0026 echo -e \"           events {\\n           worker_connections  1024;\\n           }\\n           http {\\n           include       mime.types;\\n           default_type  application/octet-stream;\\n           server {\\n               listen 80;\\n               server_name localhost;\\n               location ~ /group[0-9]/M00 {\\n                 ngx_fastdfs_module;\\n               }\\n             }\\n            }\" \u003e/usr/local/nginx/conf/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf ${HOME}/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build-deps gcc libc-dev make openssl-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add bash pcre-dev zlib-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WEB_PORT",
              "Value": "80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FDFS_PORT",
              "Value": "22122"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FDHT_PORT",
              "Value": "11411"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -e \"mkdir -p /var/local/fdfs/storage/data /var/local/fdfs/tracker /var/local/fdht; \\nsed -i \\\"s/listen\\ .*$/listen\\ \\$WEB_PORT;/g\\\" /usr/local/nginx/conf/nginx.conf; \\nsed -i \\\"s/http.server_port=.*$/http.server_port=\\$WEB_PORT/g\\\" /etc/fdfs/storage.conf; \\n\\nif [ \\\"\\$IP\\\" = \\\"\\\" ]; then \\n    IP=\\`ifconfig eth0 | grep inet | awk '{print \\$2}'| awk -F: '{print \\$2}'\\`; \\nfi \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=\\$IP:\\$FDFS_PORT/\\\" /etc/fdfs/client.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=\\$IP:\\$FDFS_PORT/\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=\\$IP:\\$FDFS_PORT/\\\" /etc/fdfs/mod_fastdfs.conf; \\nsed -i \\\"s/^group0.*$/group0=\\$IP:\\$FDHT_PORT/\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"4d\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"s/^check_file_duplicate=.*$/check_file_duplicate=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^keep_alive=.*$/keep_alive=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^##include \\/home\\/yuqing\\/fastdht\\/conf\\/fdht_servers.conf/#include \\/etc\\/fdht\\/fdht_servers.conf/g\\\" /etc/fdfs/storage.conf; \\n/etc/init.d/fdfs_trackerd start; \\n/usr/local/bin/fdhtd /etc/fdht/fdhtd.conf; \\n/etc/init.d/fdfs_storaged start; \\n/usr/local/nginx/sbin/nginx; \\ntail -f /usr/local/nginx/logs/access.log \"\u003e/start.sh \u0026\u0026 chmod u+x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}