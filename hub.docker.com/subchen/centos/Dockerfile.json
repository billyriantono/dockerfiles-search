{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum makecache  \u0026\u0026 yum install -y git  \u0026\u0026 yum install -y make gcc gcc-c++ libtool  \u0026\u0026 yum install -y openssh-clients openssl  \u0026\u0026 yum install -y rpm-build yum-utils createrepo  \u0026\u0026 yum install -y bash-completion sudo wget which zip unzip tree yajl epel-release net-tools  \u0026\u0026 yum install -y sshpass the_silver_searcher jq  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  \u0026\u0026 echo -e \"LANG=en_US.UTF-8\\nLC_ALL=en_US.UTF-8\" \u003e /etc/environment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOVERSION",
              "Value": "1.11.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/share/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -fSL https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz -o golang.tar.gz  \u0026\u0026 mkdir -p $GOROOT  \u0026\u0026 tar -zxf golang.tar.gz -C $GOROOT --strip-components=1  \u0026\u0026 rm -f golang.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "1.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-$JAVA_VERSION-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum makecache  \u0026\u0026 yum install -y java-$JAVA_VERSION-openjdk-devel  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/share/maven"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -fSL https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz -o maven.tar.gz  \u0026\u0026 mkdir -p $MAVEN_HOME  \u0026\u0026 tar xzf maven.tar.gz --strip-components=1 -C $MAVEN_HOME  \u0026\u0026 rm -rf maven.tar.gz  \u0026\u0026 ln -s $MAVEN_HOME/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.m2/repository"
          ]
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.15.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -fSL https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz -o node.tar.gz  \u0026\u0026 tar -xzf node.tar.gz -C /usr/local --strip-components=1  \u0026\u0026 rm -f node.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yarn  \u0026\u0026 rm -rf /root/.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.npm"
          ]
        },
        {
          "CmdLine": [
            "yum install -y python python-devel  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -fSL https://bootstrap.pypa.io/get-pip.py | python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y ruby ruby-devel libffi-devel  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install fpm travis  \u0026\u0026 rm -rf /root/.gem  \u0026\u0026 mkdir -p /root/.travis  \u0026\u0026 echo \"checked_completion: true\" \u003e /root/.travis/config.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -fSL https://copr.fedorainfracloud.org/coprs/lbiaggi/vim80-ligatures/repo/epel-7/lbiaggi-vim80-ligatures-epel-7.repo -o /etc/yum.repos.d/vim80.repo  \u0026\u0026 yum install -y vim-enhanced  \u0026\u0026 yum install -y ctags cscope  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*  \u0026\u0026 curl -s -fSL https://raw.githubusercontent.com/subchen/dev-box/master/vim/config/.vimrc -o /root/.vimrc  \u0026\u0026 curl -s -fSL https://raw.githubusercontent.com/subchen/dev-box/master/vim/update-vim-plugins.sh | bash -e"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "POWERLINE_VERSION",
              "Value": "1.12.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fSL https://github.com/justjanne/powerline-go/releases/download/v$POWERLINE_VERSION/powerline-go-linux-amd64 -o /usr/local/bin/powerline-go  \u0026\u0026 chmod +x /usr/local/bin/powerline-go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.bash  \u0026\u0026 curl -s -fSL https://raw.githubusercontent.com/subchen/dev-box/master/powerline-go/config/powerline-go.bash -o /root/.bash/powerline-go.bash  \u0026\u0026 echo \". /root/.bash/powerline-go.bash\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y openssh-server  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*  \u0026\u0026 ssh-keygen -q -N '' -t rsa -f /etc/ssh/ssh_host_rsa_key  \u0026\u0026 ssh-keygen -q -N '' -t rsa -f /etc/ssh/ssh_host_ecdsa_key  \u0026\u0026 ssh-keygen -q -N '' -t rsa -f /etc/ssh/ssh_host_ed25519_key  \u0026\u0026 sed '/UseDNS/c UseDNS=no' /etc/ssh/sshd_config  \u0026\u0026 echo 'root:123123' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "yum install -y openssh-clients  \u0026\u0026 yum clean all  \u0026\u0026 rm -rf /var/cache/yum/*  \u0026\u0026 mkdir -p /root/.ssh  \u0026\u0026 ssh-keygen -q -N '' -t rsa -f /root/.ssh/id_rsa  \u0026\u0026 curl -s -fSL https://github.com/subchen/dev-box/blob/master/ssh/config/config -o /root/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root"
          ]
        }
      ]
    }
  ]
}