{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "centos:7",
      "SourceCode": "FROM    centos:7 AS base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum -y install libgomp \u0026\u0026         yum clean all;"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build",
      "BaseName": "base",
      "SourceCode": "FROM        base AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/tmp/workdir"
        },
        {
          "Key": "PKG_CONFIG_PATH",
          "Name": "arg",
          "Value": "/opt/ffmpeg/lib/pkgconfig"
        },
        {
          "Key": "LD_LIBRARY_PATH",
          "Name": "arg",
          "Value": "/opt/ffmpeg/lib"
        },
        {
          "Key": "PREFIX",
          "Name": "arg",
          "Value": "/opt/ffmpeg"
        },
        {
          "Key": "MAKEFLAGS",
          "Name": "arg",
          "Value": "\"-j2\""
        },
        {
          "Env": [
            {
              "Key": "FFMPEG_VERSION",
              "Value": "4.0.1"
            },
            {
              "Key": "FDKAAC_VERSION",
              "Value": "0.1.5"
            },
            {
              "Key": "LAME_VERSION",
              "Value": "3.99.5"
            },
            {
              "Key": "LIBASS_VERSION",
              "Value": "0.13.7"
            },
            {
              "Key": "OGG_VERSION",
              "Value": "1.3.2"
            },
            {
              "Key": "OPENCOREAMR_VERSION",
              "Value": "0.1.5"
            },
            {
              "Key": "OPUS_VERSION",
              "Value": "1.2"
            },
            {
              "Key": "OPENJPEG_VERSION",
              "Value": "2.1.2"
            },
            {
              "Key": "THEORA_VERSION",
              "Value": "1.1.1"
            },
            {
              "Key": "VORBIS_VERSION",
              "Value": "1.3.5"
            },
            {
              "Key": "VPX_VERSION",
              "Value": "1.7.0"
            },
            {
              "Key": "X264_VERSION",
              "Value": "20170226-2245-stable"
            },
            {
              "Key": "X265_VERSION",
              "Value": "2.3"
            },
            {
              "Key": "XVID_VERSION",
              "Value": "1.3.4"
            },
            {
              "Key": "FREETYPE_VERSION",
              "Value": "2.5.5"
            },
            {
              "Key": "FRIBIDI_VERSION",
              "Value": "0.19.7"
            },
            {
              "Key": "FONTCONFIG_VERSION",
              "Value": "2.12.4"
            },
            {
              "Key": "LIBVIDSTAB_VERSION",
              "Value": "1.1.0"
            },
            {
              "Key": "KVAZAAR_VERSION",
              "Value": "1.2.0"
            },
            {
              "Key": "AOM_VERSION",
              "Value": "master"
            },
            {
              "Key": "SRC",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "OGG_SHA256SUM",
          "Name": "arg",
          "Value": "\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\""
        },
        {
          "Key": "OPUS_SHA256SUM",
          "Name": "arg",
          "Value": "\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9  opus-1.2.tar.gz\""
        },
        {
          "Key": "VORBIS_SHA256SUM",
          "Name": "arg",
          "Value": "\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\""
        },
        {
          "Key": "THEORA_SHA256SUM",
          "Name": "arg",
          "Value": "\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\""
        },
        {
          "Key": "XVID_SHA256SUM",
          "Name": "arg",
          "Value": "\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\""
        },
        {
          "Key": "FREETYPE_SHA256SUM",
          "Name": "arg",
          "Value": "\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8  freetype-2.5.5.tar.gz\""
        },
        {
          "Key": "LIBVIDSTAB_SHA256SUM",
          "Name": "arg",
          "Value": "\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\""
        },
        {
          "Key": "LIBASS_SHA256SUM",
          "Name": "arg",
          "Value": "\"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7  0.13.7.tar.gz\""
        },
        {
          "Key": "FRIBIDI_SHA256SUM",
          "Name": "arg",
          "Value": "\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\""
        },
        {
          "CmdLine": [
            "buildDeps=\"autoconf                    automake                    bzip2                    cmake                    expat-devel                    gcc                    gcc-c++                    git                    gperf                    libtool                    make                    nasm                    perl                    openssl-devel                    tar                    yasm                    which                    zlib-devel\" \u0026\u0026         echo \"${SRC}/lib\" \u003e /etc/ld.so.conf.d/libc.conf \u0026\u0026         yum --enablerepo=extras install -y epel-release \u0026\u0026         yum install -y ${buildDeps}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/opencore-amr \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://kent.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |         tar -zx --strip-components=1 \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --enable-shared  \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/x264 \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |         tar -jx --strip-components=1 \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/x265 \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |         tar -zx \u0026\u0026         cd x265_${X265_VERSION}/build/linux \u0026\u0026         sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/\" multilib.sh \u0026\u0026         sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh \u0026\u0026         ./multilib.sh \u0026\u0026         make -C 8bit install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/ogg \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \u0026\u0026         echo ${OGG_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --enable-shared  \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/opus \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \u0026\u0026         echo ${OPUS_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \u0026\u0026         autoreconf -fiv \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/vorbis \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \u0026\u0026         echo ${VORBIS_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/theora \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \u0026\u0026         echo ${THEORA_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/vpx \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar -zx --strip-components=1 \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-pic --enable-shared         --disable-debug --disable-examples --disable-docs --disable-install-bins  \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/lame \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://kent.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/')/lame-${LAME_VERSION}.tar.gz |         tar -zx --strip-components=1 \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --enable-pic --disable-frontend \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/xvid \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \u0026\u0026         echo ${XVID_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \u0026\u0026         cd xvidcore/build/generic \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --datadir=\"${DIR}\" --enable-shared --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/fdk-aac \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar -zx --strip-components=1 \u0026\u0026         autoreconf -fiv \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/openjpeg \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |         tar -zx --strip-components=1 \u0026\u0026         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/freetype \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \u0026\u0026         echo ${FREETYPE_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \u0026\u0026         ./configure --prefix=\"${PREFIX}\" --disable-static --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/vid.stab \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \u0026\u0026        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \u0026\u0026         cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/fribidi \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz \u0026\u0026         echo ${FRIBIDI_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz \u0026\u0026         sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \u0026\u0026         ./bootstrap --no-config \u0026\u0026         ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \u0026\u0026         make -j 1 \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/fontconfig \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \u0026\u0026        tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \u0026\u0026         ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/libass \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz \u0026\u0026        echo ${LIBASS_SHA256SUM} | sha256sum --check \u0026\u0026         tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz \u0026\u0026         ./autogen.sh \u0026\u0026         ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=/tmp/kvazaar \u0026\u0026         mkdir -p ${DIR} \u0026\u0026         cd ${DIR} \u0026\u0026         curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz \u0026\u0026        tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz \u0026\u0026         ./autogen.sh \u0026\u0026         ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dir=/tmp/aom ;         mkdir -p ${dir} ;         cd ${dir} ;         curl -sLO https://aomedia.googlesource.com/aom/+archive/${AOM_VERSION}.tar.gz ;         tar -zx -f ${AOM_VERSION}.tar.gz ;         rm -rf CMakeCache.txt CMakeFiles ;         mkdir -p ./aom_build ;         cd ./aom_build ;         cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 ..;         make ;         make install ;         rm -rf ${dir}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DIR=$(mktemp -d) \u0026\u0026 cd ${DIR} \u0026\u0026         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \u0026\u0026         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 \u0026\u0026         ./configure         --disable-debug         --disable-doc         --disable-ffplay         --enable-shared         --enable-avresample         --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl         --enable-libass         --enable-libfreetype         --enable-libvidstab         --enable-libmp3lame         --enable-libopenjpeg         --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libx265         --enable-libxvid         --enable-libx264         --enable-nonfree         --enable-openssl         --enable-libfdk_aac         --enable-libkvazaar                 --enable-postproc         --enable-small         --enable-version3         --extra-cflags=\"-I${PREFIX}/include\"         --extra-ldflags=\"-L${PREFIX}/lib\"         --extra-libs=-ldl         --prefix=\"${PREFIX}\" \u0026\u0026         make \u0026\u0026         make install \u0026\u0026         make distclean \u0026\u0026         hash -r \u0026\u0026         cd tools \u0026\u0026         make qt-faststart \u0026\u0026         cp qt-faststart ${PREFIX}/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib64/ \u0026\u0026         cp ${PREFIX}/bin/* /usr/local/bin/ \u0026\u0026         cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ \u0026\u0026         LD_LIBRARY_PATH=/usr/local/lib64 ffmpeg -buildconf"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base",
      "SourceCode": "FROM        base",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Maintainer": "Julien Rottenberg \u003cjulien@rottenberg.info\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "ffmpeg"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib64"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/",
            "/usr/local/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/",
            "/opt"
          ]
        }
      ]
    }
  ]
}