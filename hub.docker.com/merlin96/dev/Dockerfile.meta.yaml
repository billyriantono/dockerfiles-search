MetaArgs: null
Stages:
- BaseName: debian:8.7
  Commands:
  - CmdLine:
    - echo "deb http://ftp.debian.org/debian jessie-backports main" > /etc/apt/sources.list.d/backports.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update &&     apt-get -y upgrade &&     apt-get -yqq install     net-tools     docker.io     mc     nano     openssh-server     curl     wget
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export LANG=\"C.UTF-8\"" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://github.com/rancher/cli/releases/download/v0.4.1/rancher-linux-amd64-v0.4.1.tar.gz
      | tar xvz -C /tmp &&     mv /tmp/rancher-v0.4.1/rancher /usr/local/bin/rancher
      &&     chmod +x /usr/local/bin/rancher
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname
      -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /bin/sh /bin/sh.backup && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - Env:
    - Key: AZURE_CLI_VERSION
      Value: '"0.10.9"'
    Name: env
  - Env:
    - Key: NODEJS_APT_ROOT
      Value: '"node_4.x"'
    Name: env
  - Env:
    - Key: NODEJS_VERSION
      Value: '"4.7.0"'
    Name: env
  - CmdLine:
    - apt-get install -qqy --no-install-recommends     apt-transport-https     build-essential     ca-certificates     git     lsb-release     python-all     rlwrap     jq
      &&     rm -rf /var/lib/apt/lists/* &&     curl https://deb.nodesource.com/${NODEJS_APT_ROOT}/pool/main/n/nodejs/nodejs_${NODEJS_VERSION}-1nodesource1~jessie1_amd64.deb
      > node.deb &&     dpkg -i node.deb &&     rm node.deb &&     npm install --global
      azure-cli@${AZURE_CLI_VERSION} &&     azure --completion >> ~/azure.completion.sh
      &&     echo 'source ~/azure.completion.sh' >> ~/.bashrc &&     azure
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd &&     echo 'root:secretpw' | chpasswd &&     sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin
      yes/' /etc/ssh/sshd_config &&     sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/run/docker.sock
    - /root
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: debian:8.7
  Name: ""
  Platform: ""
  SourceCode: FROM debian:8.7
