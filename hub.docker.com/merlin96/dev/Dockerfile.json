{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:8.7",
      "SourceCode": "FROM debian:8.7",
      "Platform": "",
      "From": {
        "Image": "debian:8.7"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian jessie-backports main\" \u003e /etc/apt/sources.list.d/backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get -yqq install     net-tools     docker.io     mc     nano     openssh-server     curl     wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export LANG=\\\"C.UTF-8\\\"\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://github.com/rancher/cli/releases/download/v0.4.1/rancher-linux-amd64-v0.4.1.tar.gz | tar xvz -C /tmp \u0026\u0026     mv /tmp/rancher-v0.4.1/rancher /usr/local/bin/rancher \u0026\u0026     chmod +x /usr/local/bin/rancher"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /bin/sh /bin/sh.backup \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AZURE_CLI_VERSION",
              "Value": "\"0.10.9\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODEJS_APT_ROOT",
              "Value": "\"node_4.x\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "\"4.7.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -qqy --no-install-recommends     apt-transport-https     build-essential     ca-certificates     git     lsb-release     python-all     rlwrap     jq \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     curl https://deb.nodesource.com/${NODEJS_APT_ROOT}/pool/main/n/nodejs/nodejs_${NODEJS_VERSION}-1nodesource1~jessie1_amd64.deb \u003e node.deb \u0026\u0026     dpkg -i node.deb \u0026\u0026     rm node.deb \u0026\u0026     npm install --global azure-cli@${AZURE_CLI_VERSION} \u0026\u0026     azure --completion \u003e\u003e ~/azure.completion.sh \u0026\u0026     echo 'source ~/azure.completion.sh' \u003e\u003e ~/.bashrc \u0026\u0026     azure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd \u0026\u0026     echo 'root:secretpw' | chpasswd \u0026\u0026     sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/run/docker.sock",
            "/root"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}