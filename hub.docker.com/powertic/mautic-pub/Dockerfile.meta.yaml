MetaArgs: null
Stages:
- BaseName: mautic/mautic:apache
  Commands:
  - Labels:
    - Key: name
      Value: '"Luiz Eduardo Oliveira Fonseca"'
    Name: label
  - Labels:
    - Key: version
      Value: '"201912180545"'
    Name: label
  - Env:
    - Key: COMPOSER_HOME
      Value: /root/.composer
    Name: env
  - Env:
    - Key: SPOOL_THREADS
      Value: "2"
    Name: env
  - Env:
    - Key: MAUTIC_RUN_CRON_JOBS
      Value: '"true"'
    Name: env
  - Env:
    - Key: S3_BUCKET_NAME
      Value: '"backupmautic"'
    Name: env
  - Env:
    - Key: AWS_ACCESS_KEY_ID
      Value: '""'
    Name: env
  - Env:
    - Key: AWS_SECRET_ACCESS_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: AWS_DEFAULT_REGION
      Value: '""'
    Name: env
  - Env:
    - Key: S3_REGION
      Value: '""'
    Name: env
  - Env:
    - Key: PHP_INI_DATE_TIMEZONE
      Value: '''UTC'''
    Name: env
  - Env:
    - Key: PHP_MEMORY_LIMIT
      Value: 768M
    Name: env
  - Env:
    - Key: PHP_MAX_UPLOAD
      Value: 128M
    Name: env
  - Env:
    - Key: PHP_MAX_EXECUTION_TIME
      Value: "300"
    Name: env
  - CmdLine:
    - chmod -R +777 /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get upgrade -y && apt-get install -q -y     ca-certificates
      \    build-essential      software-properties-common     htop     g++     tcl
      \    nano     dos2unix     git     acl     gnupg2     dialog     zip     unzip
      \    sudo     apache2     libapache2-mod-security2     modsecurity-crs     curl
      \    tcl     cron     bzip2     tidy     sysvbanner     wget     htop     csstidy
      \    zlib1g-dev     libjpeg-dev \t\tlibmagickwand-dev \t\tlibpng-dev     libz-dev
      \    libpq-dev     libfreetype6-dev     libcurl4-openssl-dev     libaprutil1-dev
      \    libssl-dev     libfreetype6-dev     libicu-dev     libldap2-dev     libmemcached-dev
      \    libxml2-dev     libz-dev \t\tlibzip-dev     mariadb-client     libmagickwand-dev
      \    imagemagick     ghostscript     groff     python     python-setuptools
      \    python-pip     libmagickwand-dev     imagemagick     libpng-dev     libwebp-dev
      \    libjpeg62-turbo-dev     libxpm-dev     wget     groff     libmemcached-dev
      \    zlib1g-dev     libz-dev     libmemcachedutil2     libpq-dev     libxpm4
      \    libjpeg-dev     libjpeg62-turbo     libfreetype6-dev     python     python-setuptools
      \    python-pip     mariadb-client     && apt-get purge -y --auto-remove -o
      APT::AutoRemove::RecommendsImportant=false     && rm -rf /var/lib/apt/lists/*
      \    && sudo apt-get clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract     && docker-php-ext-configure mysqli --with-mysqli=mysqlnd     &&
      docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd     && docker-php-ext-configure
      bcmath     && docker-php-ext-install bcmath exif intl pcntl ftp mbstring xml
      gd soap opcache     && docker-php-ext-enable opcache      && docker-php-ext-configure
      gd       --with-gd --with-webp-dir --with-jpeg-dir       --with-png-dir --with-zlib-dir
      --with-xpm-dir --with-freetype       --enable-gd-native-ttf     && docker-php-ext-install
      gd     && for i in $(seq 1 3); do pecl install -o redis && s=0 && break || s=$?
      && sleep 1; done; (exit $s)     && docker-php-ext-enable redis             &&
      for i in $(seq 1 3); do echo no | pecl install -o memcached && s=0 && break
      || s=$? && sleep 1; done; (exit $s)         && docker-php-ext-enable memcached     &&
      pecl install imagick -y     && docker-php-ext-enable imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $COMPOSER_HOME     && curl -sS https://getcomposer.org/installer |
      php -- --install-dir=/usr/local/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - '{       echo ''opcache.memory_consumption=800M'';       echo ''opcache.interned_strings_buffer=8'';       echo
      ''opcache.max_accelerated_files=10000'';       echo ''opcache.revalidate_freq=2'';       echo
      ''opcache.fast_shutdown=1'';       echo ''opcache.enable_cli=1'';       echo
      ''expose_php = Off'';       echo ''file_uploads = On'';     } > /usr/local/etc/php/conf.d/powertic.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "no\n" | pecl install apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu_bc-1.0.3     && docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini     &&
      docker-php-ext-enable apc --ini-name 20-docker-php-ext-apc.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod setenvif       headers       security2       deflate       filter       expires       rewrite       include       ext_filter
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - powertic.conf
    - /etc/apache2/conf-available/powertic.conf
  - CmdLine:
    - a2enconf powertic
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - my.cnf
    - /root/.my.cnf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build.txt
    - /var/www/build.txt
  - CmdLine:
    - mkdir -p /var/www/bootstrap
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - local.php
    - /var/www/bootstrap/local.php
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mautic.sql
    - /var/www/bootstrap/mautic.sql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/*
    - /usr/bin/
  - CmdLine:
    - chmod +x -R /usr/bin/*
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x -R /usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/cron.d/mautic
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - powertic.crontab
    - /etc/cron.d/powertic
  - CmdLine:
    - chmod 644 /etc/cron.d/powertic
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mautic.crontab
    - /etc/cron.d/mautic-pub
  - CmdLine:
    - chmod 644 /etc/cron.d/mautic-pub
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - chmod
    - +x
    - /entrypoint.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: mautic/mautic:apache
  Name: ""
  Platform: ""
  SourceCode: FROM mautic/mautic:apache
