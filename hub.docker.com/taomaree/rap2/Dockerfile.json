{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget curl git npm libhiredis-dev make gcc g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yarn typescript serve      \u0026\u0026 git clone https://github.com/thx/rap2-delos.git     \u0026\u0026 git clone https://github.com/thx/rap2-dolores.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/rap2-dolores  \u0026\u0026 sed -i \"s/serve.*,/serve: '' ,/g\" src/config/config.prod.ts \u0026\u0026 npm install \u0026\u0026 npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/rap2-delos    ;  sed -i -e 's/noImplicitThis\".*,/noImplicitThis\": false,/g' -e 's/noImplicitAny\".*,/noImplicitAny\": false,/g' tsconfig.json ; npm install; npm install; npm run build ;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app/rap2-dolores /app/rap2-delos \u0026\u0026 cp -rv /tmp/rap2-dolores/build /app/rap2-dolores     \u0026\u0026 cp -rv /tmp/rap2-delos /app"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "TZ",
              "Value": "'Asia/Shanghai'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates libhiredis-dev npm nginx default-mysql-client runit cron     \u0026\u0026 mkdir -p /etc/service/nginx /etc/service/nodejs /etc/service/cron     \u0026\u0026 bash -c 'echo -e \"#!/bin/bash\\nexec /usr/sbin/nginx -g \\\"daemon off;\\\"\" \u003e /etc/service/nginx/run'     \u0026\u0026 bash -c 'echo -e \"#!/bin/bash\\nexec /usr/bin/node /app/rap2-delos/dist/dispatch.js \" \u003e /etc/service/nodejs/run'     \u0026\u0026 bash -c 'echo -e \"#!/bin/bash\\nexec /usr/sbin/cron -f\" \u003e /etc/service/cron/run'     \u0026\u0026 chmod 755 /etc/service/nginx/run /etc/service/nodejs/run /etc/service/cron/run     \u0026\u0026 sed -i '/session    required     pam_loginuid.so/c\\#session    required   pam_loginuid.so' /etc/pam.d/cron     \u0026\u0026 bash -c 'echo \"0 3 * * * /bin/bash /mysql_backup.sh \u003e\u003e /var/log/mysql_backup.log 2\u003e\u00261\" \u003e /etc/cron.d/mysql_backup'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "default.conf",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "mysql_backup.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "runsvdir",
            "/etc/service"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}