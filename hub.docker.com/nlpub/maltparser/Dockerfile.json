{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Maintainer": "Dmitry Ustalov",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y -o Dpkg::Options::=\"--force-confold\" build-essential unzip \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://maltparser.org/dist/malt-1.5.tar.gz \u0026\u0026 tar xf malt-1.5.tar.gz -C / \u0026\u0026 mv malt-1.5 malt \u0026\u0026 rm malt-1.5.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/malt"
        },
        {
          "CmdLine": [
            "mkdir treetagger \u0026\u0026 cd treetagger \u0026\u0026 curl -O 'http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/data/tree-tagger-linux-3.2.1.tar.gz' -O 'http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/data/tagger-scripts.tar.gz' -O 'http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/data/install-tagger.sh' -O 'http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/data/russian-par-linux-3.2-utf8.bin.gz' -O 'http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/data/english-par-linux-3.2-utf8.bin.gz' -O 'http://corpus.leeds.ac.uk/mocky/lemma-ru.tgz' -O 'http://corpus.leeds.ac.uk/tools/smallutils.pm' \u0026\u0026 sh install-tagger.sh \u0026\u0026 tar xf lemma-ru.tgz -C cmd \u0026\u0026 mv smallutils.pm cmd/ \u0026\u0026 ln -sf /malt/treetagger/cmd/utf8-tokenize.perl /malt/treetagger/cmd/utf8-tokenize.pl \u0026\u0026 rm *.gz *.tgz \u0026\u0026 sed -i \"s#use lib('/corpora/tools'#use File::Basename;\\nuse lib(dirname(\\$0)#g\" cmd/lemmatiser.pl \u0026\u0026 sed -i 's/    if ($lline=\u003c$fh\u003e) { #read the next line for the lemma/    if (defined($lline=\u003c$fh\u003e)) { #read the next line for the lemma/g' cmd/lemmatiser.pl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO 'https://github.com/kuhumcst/parsesgml/archive/master.tar.gz' \u0026\u0026 tar zxf master.tar.gz \u0026\u0026 mv parsesgml-master parsesgml \u0026\u0026 rm master.tar.gz \u0026\u0026 curl -LO 'https://github.com/kuhumcst/letterfunc/archive/master.tar.gz' \u0026\u0026 tar zxf master.tar.gz \u0026\u0026 mv letterfunc-master letterfunc \u0026\u0026 rm master.tar.gz \u0026\u0026 curl -LO 'https://github.com/kuhumcst/hashmap/archive/master.tar.gz' \u0026\u0026 tar zxf master.tar.gz \u0026\u0026 mv hashmap-master hashmap \u0026\u0026 rm master.tar.gz \u0026\u0026 curl -LO 'https://github.com/kuhumcst/cstlemma/archive/master.tar.gz' \u0026\u0026 tar zxf master.tar.gz \u0026\u0026 mv cstlemma-master cstlemma \u0026\u0026 rm master.tar.gz \u0026\u0026 cd cstlemma/src \u0026\u0026 make \u0026\u0026 cp cstlemma /malt/treetagger/cmd/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O 'http://corpus.leeds.ac.uk/mocky/russian-malt.tgz' -O 'http://corpus.leeds.ac.uk/mocky/rus-test.mco' \u0026\u0026 tar xfv russian-malt.tgz \u0026\u0026 sed -i 's#/corpora/tools#/malt#g' russian-malt.sh \u0026\u0026 sed -i 's#^MALT=.*#MALT=/malt#g' russian-malt.sh \u0026\u0026 sed -i \"s#russian.par#russian-utf8.par#g\" russian-malt.sh \u0026\u0026 sed -i 's#make-malt.pl#/malt/make-malt.pl#g' russian-malt.sh \u0026\u0026 sed -i 's#shake-malt.pl#/malt/shake-malt.pl#g' russian-malt.sh \u0026\u0026 sed -i 's/^#\\$/$/g' russian-malt.sh \u0026\u0026 sed -i 's#tmpmalttex#$MALT/tmpmalttex#g' russian-malt.sh \u0026\u0026 rm russian-malt.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}