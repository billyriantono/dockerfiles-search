MetaArgs: null
Stages:
- BaseName: python:3.6
  Commands:
  - CmdLine:
    - "apt-get update && apt-get install -y     libblas-dev \tliblapack-dev    libatlas-base-dev
      \    mecab     mecab-naist-jdic     mecab-ipadic-utf8     swig     libmecab-dev
      \tgfortran     libav-tools     sudo     cmake     python3-setuptools"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install         tensorflow         keras         xgboost
      \        catboost         https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp36-cp36m-linux_x86_64.whl
      \        torchvision         sklearn         jupyter         ipykernel \t\tscipy
      \        simpy         matplotlib         ipython         seaborn         xlrd
      \        numpy         pandas         plotly         sympy         mecab-python3
      \        librosa         Pillow         h5py         google-api-python-client
      \        tornado==5.1.1         tqdm         japanize-matplotlib         nltk
      \        gensim         opencv-python         wordcloud         beautifulsoup4
      \        &&     python -m ipykernel.kernelspec"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - git clone --depth 1 https://github.com/neologd/mecab-ipadic-neologd.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/mecab-ipadic-neologd
  - CmdLine:
    - ./bin/install-mecab-ipadic-neologd -n -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - rm -rf mecab-ipadic-neologd
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - git clone --recursive https://github.com/Microsoft/LightGBM
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/LightGBM
  - CmdLine:
    - export CXX=g++-8 CC=gcc-8
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/LightGBM/build
  - CmdLine:
    - cmake ..
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/LightGBM/python-package
  - CmdLine:
    - python3 setup.py install --precompile
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - rm -rf LightGBM
    Name: run
    PrependShell: true
  - Env:
    - Key: CONFIG
      Value: /root/.jupyter/jupyter_notebook_config.py
    Name: env
  - Env:
    - Key: CONFIG_IPYTHON
      Value: /root/.ipython/profile_default/ipython_config.py
    Name: env
  - CmdLine:
    - jupyter notebook --generate-config --allow-root &&     ipython profile create
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "c.NotebookApp.ip = '0.0.0.0'" >>${CONFIG} &&     echo "c.NotebookApp.port
      = 8888" >>${CONFIG} &&     echo "c.NotebookApp.open_browser = False" >>${CONFIG}
      &&     echo "c.NotebookApp.iopub_data_rate_limit=10000000000" >>${CONFIG} &&     echo
      "c.MultiKernelManager.default_kernel_name = 'python3'" >>${CONFIG}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "c.InteractiveShellApp.exec_lines = ['%matplotlib inline']" >>${CONFIG_IPYTHON}
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: volume
    Volumes:
    - /notebooks
  - Name: workdir
    Path: '"/notebooks"'
  - CmdLine:
    - jupyter
    - notebook
    - --allow-root
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
