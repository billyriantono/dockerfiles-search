{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.1-fpm-alpine3.7",
      "SourceCode": "FROM php:7.2.1-fpm-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "php:7.2.1-fpm-alpine3.7"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add --no-cache openssh-client git nginx supervisor bash mysql mysql-client vim         gd freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev php7-zip     \u0026\u0026 apk add gnu-libiconv --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ --allow-untrusted     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_PRELOAD",
              "Value": "/usr/lib/preloadable_libiconv.so php"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://getcomposer.org/composer.phar",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "chmod 0755 /usr/bin/composer     \u0026\u0026 mkdir -p /run/nginx     \u0026\u0026 touch /run/nginx/nginx.pid     \u0026\u0026 echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf     \u0026\u0026 rm -fr /www \u0026\u0026 mkdir /www     \u0026\u0026 mkdir -p /var/log/supervisor     \u0026\u0026 mkdir -p /var/log/nginx/     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./etc/nginx/conf.d/default.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./etc/nginx/snippets/cors-wildcard.conf",
            "/etc/nginx/snippets/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./etc/mysql/my.cnf",
            "/etc/mysql/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./var/spool/cron/crontabs/www-data",
            "/var/spool/cron/crontabs/"
          ]
        },
        {
          "CmdLine": [
            "chmod 0600 /var/spool/cron/crontabs/www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./etc/supervisor/supervisord.conf",
            "/etc/supervisor/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./etc/supervisor/conf.d/*",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./root/_ssh",
            "/root/.ssh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./root/docker-entrypoint.sh",
            "/root/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./root/scripts",
            "/root/scripts"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/www"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/mysql"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "CmdLine": [
            "/root/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}