MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Maintainer: hugh.mooney@hest.io
    Name: maintainer
  - Env:
    - Key: AWSH_ROOT
      Value: /opt/awsh
    Name: env
  - Env:
    - Key: AWSH_USER_HOME
      Value: /home/awsh
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /opt/awsh/lib/python
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/awsh/bin:/opt/awsh/bin/tools:$PATH
    Name: env
  - Env:
    - Key: AWSH_PYTHON_DEPS
      Value: /tmp/requirements.python2
    Name: env
  - Env:
    - Key: AWSH_CONTAINER
      Value: docker
    Name: env
  - Env:
    - Key: PATCHED_FONT_IN_USE
      Value: "no"
    Name: env
  - Env:
    - Key: AWSH_VERSION_DOCKER
      Value: latest
    Name: env
  - Env:
    - Key: RUNTIME_PACKAGES
      Value: bash   coreutils   curl   tar   openssh-client   sshpass   git   python   py-boto   py-dateutil   py-httplib2   py-jinja2   py-paramiko   py-pip   py-yaml   ncurses   util-linux   util-linux-bash-completion   jq   krb5   ca-certificates
    Name: env
  - Env:
    - Key: HTTP_PROXY
      Value: '"${http_proxy}"'
    Name: env
  - Env:
    - Key: http_proxy
      Value: '"${http_proxy}"'
    Name: env
  - Env:
    - Key: HTTPS_PROXY
      Value: '"${https_proxy}"'
    Name: env
  - Env:
    - Key: https_proxy
      Value: '"${https_proxy}"'
    Name: env
  - Env:
    - Key: no_proxy
      Value: '"${no_proxy}"'
    Name: env
  - Env:
    - Key: NO_PROXY
      Value: '"${NO_PROXY}"'
    Name: env
  - Key: HTTP_PROXY
    Name: arg
    Value: '"${http_proxy}"'
  - Key: http_proxy
    Name: arg
    Value: '"${http_proxy}"'
  - Key: HTTPS_PROXY
    Name: arg
    Value: '"${https_proxy}"'
  - Key: https_proxy
    Name: arg
    Value: '"${https_proxy}"'
  - Key: no_proxy
    Name: arg
    Value: '"${no_proxy}"'
  - Key: NO_PROXY
    Name: arg
    Value: '"${NO_PROXY}"'
  - CmdLine:
    - adduser -D -u 1000 awsh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${AWSH_ROOT}/log ${AWSH_ROOT}/tmp /home/awsh/.aws
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements/requirements.python2
    - ${AWSH_PYTHON_DEPS}
  - CmdLine:
    - apk update && apk upgrade &&     apk --update add --virtual build-dependencies
      alpine-sdk gcc krb5-dev musl-dev libffi-dev openssl-dev python-dev &&     apk
      add --no-cache ${RUNTIME_PACKAGES} &&     python -m pip install -r ${AWSH_PYTHON_DEPS}
      --disable-pip-version-check &&     apk --no-cache add ruby ruby-dev ruby-bundler
      ruby-json ruby-irb ruby-rake ruby-bigdecimal &&     apk del build-dependencies
      &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /
    - ${AWSH_ROOT}
  - CmdLine:
    - ln -s ${AWSH_ROOT}/lib/jq ${AWSH_USER_HOME}/.jq
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '. /opt/awsh/etc/awshrc' >> ${AWSH_USER_HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - '{     echo ''[default]'' ;     echo ''output = json'' ;     } | tee ${AWSH_USER_HOME}/.aws/config'
    Name: run
    PrependShell: true
  - CmdLine:
    - '{     echo ''[default]'' ;     echo ''aws_access_key_id = 1'' ;     echo ''aws_secret_access_key
      = 1'' ;     } | tee ${AWSH_USER_HOME}/.aws/credentials'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'chown -R awsh: ${AWSH_ROOT} &&     chown -R awsh: ${AWSH_USER_HOME}'
    Name: run
    PrependShell: true
  - Name: user
    User: awsh
  - Name: workdir
    Path: ${AWSH_USER_HOME}
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
