MetaArgs: null
Stages:
- BaseName: node:12-alpine
  Commands:
  - CmdLine:
    - apk add git
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.7.3
    Name: env
  - CmdLine:
    - "set -ex \t&& apk add --no-cache --virtual .fetch-deps \tgnupg \ttar \txz \t\t&&
      wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm
      -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar
      -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t\t&& apk add --no-cache --virtual .build-deps  \tbzip2-dev \tcoreutils \tdpkg-dev
      dpkg \texpat-dev \tfindutils \tgcc \tgdbm-dev \tlibc-dev \tlibffi-dev \tlibnsl-dev
      \tlibtirpc-dev \tlinux-headers \tmake \tncurses-dev \topenssl-dev \tpax-utils
      \treadline-dev \tsqlite-dev \ttcl-dev \ttk \ttk-dev \tutil-linux-dev \txz-dev
      \tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t--build=\"$gnuArch\" \t--enable-loadable-sqlite-extensions
      \t--enable-shared \t--with-system-expat \t--with-system-ffi \t--without-ensurepip
      \t&& make -j \"$(nproc)\" \tEXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \t&&
      make install \t\t&& find /usr/local -type f -executable -not \\( -name '*tkinter*'
      \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' \t| tr ',' '\\n'
      \t| sort -u \t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next
      } { print \"so:\" $1 }' \t| xargs -rt apk add --no-cache --virtual .python-rundeps
      \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\\( \t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t-o \t\\( -type f -a \\( -name '*.pyc'
      -o -name '*.pyo' \\) \\) \t\\) -exec rm -rf '{}' + \t&& rm -rf /usr/src/python
      \t\t&& python3 --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s
      python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.1.1
    Name: env
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython
      get-pip.py \t--disable-pip-version-check \t--no-cache-dir \t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\\( \t\\( -type d -a \\( -name
      test -o -name tests \\) \\) \t-o \t\\( -type f -a \\( -name '*.pyc' -o -name
      '*.pyo' \\) \\) \t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/
      upgrade && \tapk --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/
      add \tchromium xwininfo xvfb dbus eudev ttf-freefont fluxbox procps"
    Name: run
    PrependShell: true
  - CmdLine:
    - "npm install -g testcafe && \tnpm cache clean --force && \trm -rf /tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache --virtual .build-deps curl binutils \t&& GLIBC_VER=\"2.29-r0\"
      \t&& ALPINE_GLIBC_REPO=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\"
      \t&& GCC_LIBS_URL=\"https://archive.archlinux.org/packages/g/gcc-libs/gcc-libs-8.2.1%2B20180831-1-x86_64.pkg.tar.xz\"
      \t&& GCC_LIBS_SHA256=e4b39fb1f5957c5aab5c2ce0c46e03d30426f3b94b9992b009d417ff2d56af4d
      \t&& ZLIB_URL=\"https://archive.archlinux.org/packages/z/zlib/zlib-1%3A1.2.11-3-x86_64.pkg.tar.xz\"
      \t&& ZLIB_SHA256=17aede0b9f8baa789c5aa3f358fbf8c68a5f1228c5e6cba1a5dd34102ef4d4e5
      \t&& curl -LfsS https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub
      \t&& SGERRAND_RSA_SHA256=\"823b54589c93b02497f1ba4dc622eaef9c813e6b0f0ebbb2f771e32adf9f4ef2\"
      \t&& echo \"${SGERRAND_RSA_SHA256} */etc/apk/keys/sgerrand.rsa.pub\" | sha256sum
      -c - \t&& curl -LfsS ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-${GLIBC_VER}.apk
      > /tmp/glibc-${GLIBC_VER}.apk \t&& apk add /tmp/glibc-${GLIBC_VER}.apk \t&&
      curl -LfsS ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk > /tmp/glibc-bin-${GLIBC_VER}.apk
      \t&& apk add /tmp/glibc-bin-${GLIBC_VER}.apk \t&& curl -Ls ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-i18n-${GLIBC_VER}.apk
      > /tmp/glibc-i18n-${GLIBC_VER}.apk \t&& apk add /tmp/glibc-i18n-${GLIBC_VER}.apk
      \t&& /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8
      \"$LANG\" || true \t&& echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh
      \t&& curl -LfsS ${GCC_LIBS_URL} -o /tmp/gcc-libs.tar.xz \t&& echo \"${GCC_LIBS_SHA256}
      */tmp/gcc-libs.tar.xz\" | sha256sum -c - \t&& mkdir /tmp/gcc \t&& tar -xf /tmp/gcc-libs.tar.xz
      -C /tmp/gcc \t&& mv /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* /usr/glibc-compat/lib
      \t&& strip /usr/glibc-compat/lib/libgcc_s.so.* /usr/glibc-compat/lib/libstdc++.so*
      \t&& curl -LfsS ${ZLIB_URL} -o /tmp/libz.tar.xz \t&& echo \"${ZLIB_SHA256} */tmp/libz.tar.xz\"
      | sha256sum -c - \t&& mkdir /tmp/libz \t&& tar -xf /tmp/libz.tar.xz -C /tmp/libz
      \t&& mv /tmp/libz/usr/lib/libz.so* /usr/glibc-compat/lib \t&& apk del --purge
      .build-deps glibc-i18n \t&& rm -rf /tmp/*.apk /tmp/gcc /tmp/gcc-libs.tar.xz
      /tmp/libz /tmp/libz.tar.xz /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION
      Value: jdk8u212-b04
    Name: env
  - CmdLine:
    - "set -eux; \tapk add --virtual .fetch-deps curl; \tARCH=\"$(apk --print-arch)\";
      \tcase \"${ARCH}\" in \taarch64|arm64) \tESUM='b0b3923a48243fa98b71c7fd8ff96def453e07b33156e90cb6851b7b7cacd4b1';
      \tBINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u191-b12/OpenJDK8U-jre_aarch64_linux_hotspot_8u191b12.tar.gz';
      \t;; \tamd64|x86_64) \tESUM='96d24d94c022b3e414b612cae8829244329d71ad2cce790f099c020f33247e7e';
      \tBINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u212-b04/OpenJDK8U-jre_x64_linux_hotspot_8u212b04.tar.gz';
      \t;; \ts390x) \tESUM='90554726525b4acb38dae6f1f958711476e5484ff593a0666f43f2a044bb070a';
      \tBINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u212-b04/OpenJDK8U-jre_s390x_linux_hotspot_8u212b04.tar.gz';
      \t;; \tppc64el|ppc64le) \tESUM='7e09a9939c0baff8f24277df71844dc121f0bdfa855c2a02fb557e0d3438b9c5';
      \tBINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u212-b04/OpenJDK8U-jre_ppc64le_linux_hotspot_8u212b04.tar.gz';
      \t;; \t*) \techo \"Unsupported arch: ${ARCH}\"; \texit 1; \t;; \tesac; \tcurl
      -LfsSo /tmp/openjdk.tar.gz ${BINARY_URL}; \techo \"${ESUM} */tmp/openjdk.tar.gz\"
      | sha256sum -c -; \tmkdir -p /opt/java/openjdk; \tcd /opt/java/openjdk; \ttar
      -xf /tmp/openjdk.tar.gz --strip-components=1; \tapk del --purge .fetch-deps;
      \trm -rf /var/cache/apk/*; \trm -rf /tmp/openjdk.tar.gz;"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /opt/java/openjdk
    - Key: PATH
      Value: '"/opt/java/openjdk/bin:$PATH"'
    Name: env
  - CmdLine:
    - apk add --no-cache curl grep sed unzip bash
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - "curl -o ./sonarscanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      && \tunzip sonarscanner.zip && \trm sonarscanner.zip && \tmv sonar-scanner-3.3.0.1492-linux
      /usr/lib/sonar-scanner && \tln -s /usr/lib/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner"
    Name: run
    PrependShell: true
  - Env:
    - Key: SONAR_RUNNER_HOME
      Value: /usr/lib/sonar-scanner
    Name: env
  - CmdLine:
    - sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' /usr/lib/sonar-scanner/bin/sonar-scanner
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: node:12-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:12-alpine
