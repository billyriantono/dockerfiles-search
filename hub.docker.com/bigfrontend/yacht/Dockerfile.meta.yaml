MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - Maintainer: Kim Goh <gaojingan@gmail.com>
    Name: maintainer
  - Labels:
    - Key: Vendor
      Value: '"CentOS"'
    Name: label
  - Labels:
    - Key: License
      Value: GPLv2
    Name: label
  - Labels:
    - Key: Version
      Value: "0.2"
    Name: label
  - CmdLine:
    - yum -y update; yum -y clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y --setopt=tsflags=nodocs install bash-completion curl wget w3m sudo rsync
      vim git unzip gcc make automake zsh systemd-sysv     initscripts openssh-server
      openssh-clients net-tools environment-modules
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y clean all; yum -y erase vim-minimal
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -q -N "" -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -q -N "" -t rsa -b 2048 -f /root/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo 'root:gaoxing' |chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sed -i 's/.*session.*required.*pam_loginuid.so.*/session optional pam_loginuid.so/g'
      /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/echo -e "LANG=\"en_US.UTF-8\"" > /etc/default/local
    Name: run
    PrependShell: true
  - CmdLine:
    - sed  -i "/^[^#]*UsePAM/ s/.*/#&/"  /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "UsePAM no" >> /etc/ssh/sshd_config; echo "UseDNS no" >> /etc/ssh/sshd_config;
      echo "Port 22" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "443"
    - "80"
  - Env:
    - Key: container
      Value: docker
    Name: env
  - CmdLine:
    - (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service
      ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*;rm
      -f /etc/systemd/system/*.wants/*;rm -f /lib/systemd/system/local-fs.target.wants/*;
      rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*;
      rm -f /lib/systemd/system/basic.target.wants/*;rm -f /lib/systemd/system/anaconda.target.wants/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - systemctl enable sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.7"
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: 702ad90f705365227e902b42d91dd1a40e48ca7f67a2f4b2fd052aaa4295cd95
    Name: env
  - CmdLine:
    - curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz     && echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz"
      | sha256sum -c -     && tar -C /usr/local -xzf golang.tar.gz     && rm golang.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - golang
    - /usr/share/Modules/modulefiles/golang
  - Name: volume
    Volumes:
    - /sys/fs/cgroup
  - CmdLine:
    - /usr/sbin/init
    Name: cmd
    PrependShell: false
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
