MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Fill Quazy <admin@njoyx.net> (@drfill)"'
    Name: label
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: GPG_KEY
      Value: C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF
    Name: env
  - Env:
    - Key: BUILD_DIR
      Value: '''/build'''
    Name: env
  - Key: PY_VERSION
    Name: arg
    Value: null
  - Key: PY_PIP_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: PYTHON_VERSION
      Value: ${PY_VERSION:-'2.7.14'}
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: ${PY_PIP_VERSION:-'9.0.1'}
    Name: env
  - CmdLine:
    - "set -ex;     apt-get update && apt-get install -y --no-install-recommends \t\ttcl
      \t\ttk \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client
      \t\tsubversion \t\tprocps"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex;     mkdir -p ${BUILD_DIR}; \tif ! command -v gpg > /dev/null; then
      \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2
      \t\t\tdirmngr \t\t; \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex;     echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg
      main\" > /etc/apt/sources.list.d/pgdg.list;     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add -;     apt-get update;     apt-get install -y --no-install-recommends
      \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick
      \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev
      \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibgeoip-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev
      \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev
      \t\tlibncurses-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev
      \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev
      \t\tmake \t\tpatch \t\txz-utils \t\tzlib1g-dev \t\tdpkg-dev \t\ttcl-dev \t\ttk-dev
      \t\tlibtiff5-dev \t\tlibfreetype6-dev         liblcms2-dev         libopenjpeg-dev
      \        libwebp-dev         libsnappy-dev         liblz4-dev \t\t\t\t$( \t\t
      \   if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:';
      then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev';
      \t\t\tfi \t\t);         rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&&
      tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-shared \t\t--enable-unicode=ucs4
      \t&& make -j \"$(nproc)\" \t&& make install \t&& ldconfig \t\t&& find /usr/local
      -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o
      \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec
      rm -rf '{}' + \t&& rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython
      get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name
      '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && mkdir -p $HOME/.ssh/     && printf "Host github.com\n\tStrictHostKeyChecking
      no\n" >> $HOME/.ssh/config     && printf "Host gist.github.com\n\tStrictHostKeyChecking
      no\n" >> $HOME/.ssh/config     && printf "Host bitbucket.org\n\tStrictHostKeyChecking
      no\n" >> $HOME/.ssh/config     && printf "Host gitlab.com\n\tStrictHostKeyChecking
      no\n" >> $HOME/.ssh/config     && ssh-keygen -f $HOME/.ssh/id_rsa -t rsa -N
      '' -b 4096
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${BUILD_DIR}
  - CmdLine:
    - pip install --no-cache-dir pex virtualenv "ipython<6"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${BUILD_DIR}
    - ${BUILD_DIR}/dist
  - CmdLine:
    - ipython
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
