MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - set -xe     && echo "@php http://dl-cdn.alpinelinux.org/alpine/v3.7/community"
      >> /etc/apk/repositories     && apk --update add --no-cache         openssh         openssl         bash         mc         nginx         supervisor         curl         zip
      unzip         git         dcron
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && apk --no-cache add         php7         php7-fpm         php7-ctype         php7-curl         php7-dom         php7-fileinfo         php7-iconv         php7-json         php7-mbstring         php7-pear         php7-phar         php7-posix         php7-xml         php7-xmlreader         php7-xmlwriter         php7-zlib         php7-gd         php7-mcrypt         php7-zip         php7-intl         php7-redis         php7-pear         php7-pcntl         php7-exif         php7-ldap         php7-bcmath         php7-soap         php7-zmq         php7-sockets         php7-amqp         php7-opcache         php7-gettext         php7-imap         php7-xdebug         php7-bz2         php7-tidy         php7-pdo_mysql         php7-mysqlnd         php7-pdo_pgsql         php7-pgsql         php7-apcu
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf file g++ gcc libc-dev make pkgconf re2c php7-dev php7-pear
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: /etc/php7
    Name: env
  - CmdLine:
    - set -xe     && apk add --no-cache --repository "http://dl-cdn.alpinelinux.org/alpine/edge/testing"     --virtual
      .phpize-deps     $PHPIZE_DEPS     && apk add --no-cache libevent-dev openssl-dev
      libsodium-dev     && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $(which pecl)     &&
      pecl channel-update pecl.php.net     && pecl install event libsodium     &&
      echo "extension=event.so" > $PHP_INI_DIR/conf.d/01_event.ini     && echo "extension=sodium.so"
      > $PHP_INI_DIR/conf.d/01_sodium.ini     && rm -rf /usr/share/php7     && rm
      -rf /tmp/*     && apk del .phpize-deps     && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.build/docker/sshd_config
    - /etc/ssh/
  - Env:
    - Key: SSH_PASSWD
      Value: '"root:Docker!"'
    Name: env
  - CmdLine:
    - echo "$SSH_PASSWD" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/#HostKey \/etc\/ssh\/ssh_host_key/HostKey \/etc\/ssh\/ssh_host_key/g'
      /etc/ssh/sshd_config && sed -ir 's/#HostKey \/etc\/ssh\/ssh_host_rsa_key/HostKey
      \/etc\/ssh\/ssh_host_rsa_key/g' /etc/ssh/sshd_config && sed -ir 's/#HostKey
      \/etc\/ssh\/ssh_host_dsa_key/HostKey \/etc\/ssh\/ssh_host_dsa_key/g' /etc/ssh/sshd_config
      && sed -ir 's/#HostKey \/etc\/ssh\/ssh_host_ecdsa_key/HostKey \/etc\/ssh\/ssh_host_ecdsa_key/g'
      /etc/ssh/sshd_config && sed -ir 's/#HostKey \/etc\/ssh\/ssh_host_ed25519_key/HostKey
      \/etc\/ssh\/ssh_host_ed25519_key/g' /etc/ssh/sshd_config && /usr/bin/ssh-keygen
      -A && ssh-keygen -t rsa -b 4096 -f  /etc/ssh/ssh_host_key
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/composer && chown nobody:nogroup -R /home/composer
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /home/composer
    Name: env
  - CmdLine:
    - composer global require hirak/prestissimo
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.build/docker/index.php
    - /var/www
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.build/docker/www.conf
    - /etc/php7/php-fpm.d/www.conf
  - CmdLine:
    - "sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php7/php.ini \t&&
      sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php7/php.ini \t&&
      sed -i \"s/short_open_tag =.*/short_open_tag = Off/\" /etc/php7/php.ini \t&&
      sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php7/php-fpm.conf
      \t&& sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php7/php.ini
      \t&& sed -i \"s/session.auto_start\\s*=.*/session.auto_start = 0/\" /etc/php7/php.ini"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.build/docker/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - mkdir -p /etc/nginx/sites-enabled
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./.build/docker/default.conf
    - /etc/nginx/sites-enabled/default.conf
  - CmdLine:
    - rm -rf /etc/supervisor.d/*.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.build/docker/supervisord/*.conf
    - /etc/supervisor.d/
  - CmdLine:
    - sed -i "s/files\s*=.*/files = \/etc\/supervisor.d\/\*.conf/" /etc/supervisord.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.build/docker/init_container.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/init_container.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2222"
    - "8000"
  - CmdLine:
    - init_container.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
