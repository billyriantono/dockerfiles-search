MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: ViViDboarder <vividboarder@gmail.com>
    Name: maintainer
  - Env:
    - Key: MAPZEN_API_KEY
      Value: mapzen-XXXX
    Name: env
  - Env:
    - Key: MAPBOX_API_KEY
      Value: mapbox-XXXX
    Name: env
  - Env:
    - Key: ALLOWED_HOSTS
      Value: '*'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y     libboost-all-dev     libglib2.0-0     libxrender-dev     python3-tk     python3     python3-pip     wget     &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - virtualenv /venv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y cmake git &&     git clone https://github.com/davisking/dlib.git
      &&     mkdir /dlib/build &&     cd /dlib/build &&     cmake .. -DDLIB_USE_CUDA=0
      -DUSE_AVX_INSTRUCTIONS=0 &&     cmake --build . &&     cd /dlib &&     /venv/bin/python
      setup.py install --no USE_AVX_INSTRUCTIONS --no DLIB_USE_CUDA
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /code/
  - CmdLine:
    - /venv/bin/pip install http://download.pytorch.org/whl/cpu/torch-0.3.1-cp35-cp35m-linux_x86_64.whl  &&
      /venv/bin/pip install torchvision
    Name: run
    PrependShell: true
  - CmdLine:
    - /venv/bin/pip install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - /venv/bin/python -m spacy download en_core_web_sm
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code/api/places365
  - CmdLine:
    - wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/places365_model.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xf places365_model.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove --purge -y cmake git &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Env:
    - Key: ADMIN_EMAIL
      Value: admin@dot.com
    Name: env
  - Env:
    - Key: ADMIN_USERNAME
      Value: admin
    Name: env
  - Env:
    - Key: ADMIN_PASSWORD
      Value: changeme
    Name: env
  - Env:
    - Key: SECRET_KEY
      Value: supersecretkey
    Name: env
  - Env:
    - Key: DEBUG
      Value: "true"
    Name: env
  - Env:
    - Key: DB_BACKEND
      Value: postgresql
    Name: env
  - Env:
    - Key: DB_NAME
      Value: ownphotos
    Name: env
  - Env:
    - Key: DB_USER
      Value: ownphotos
    Name: env
  - Env:
    - Key: DB_PASS
      Value: ownphotos
    Name: env
  - Env:
    - Key: DB_HOST
      Value: database
    Name: env
  - Env:
    - Key: DB_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: CACHE_HOST_PORT
      Value: memcached:11211
    Name: env
  - Env:
    - Key: REDIS_HOST
      Value: memcached
    Name: env
  - Env:
    - Key: REDIS_PORT
      Value: "11211"
    Name: env
  - Env:
    - Key: TIME_ZONE
      Value: UTC
    Name: env
  - Name: expose
    Ports:
    - "8000"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /code
  - CmdLine:
    - mv /code/config_docker.py /code/config.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - CmdLine:
    - ./entrypoint.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
