MetaArgs: null
Stages:
- BaseName: gzevd/alpine:3.8
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf   dpkg-dev dpkg   file   g++   gcc   libc-dev   make   pkgconf   re2c
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual .persistent-deps   ca-certificates   curl   apache2   apache2-utils   xz   libressl   openssh-client   mysql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe;   mkdir -p /run/apache2/   && sed -i 's/^#ServerName.*/ServerName localhost/'
      /etc/apache2/httpd.conf   && sed -i 's/^#LoadModule rewrite_module/LoadModule
      rewrite_module/' /etc/apache2/httpd.conf   && sed -i 's/^Listen 80/Listen 0.0.0.0:80/'
      /etc/apache2/httpd.conf   && ln -sf /dev/stdout /var/log/apache2/access.log   &&
      ln -sf /dev/stderr /var/log/apache2/error.log
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.21
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"de06aff019d8f5079115795bd7d8eedd4cd03daecb62d58abb18f492dd995c95"'
    Name: env
  - CmdLine:
    - set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget   ;     mkdir
      -p /usr/src;   cd /usr/src;     wget -O php.tar.xz "$PHP_URL";     if [ -n "$PHP_SHA256"
      ]; then     echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;   fi;     if [
      -n "$PHP_ASC_URL" ]; then     wget -O php.tar.xz.asc "$PHP_ASC_URL";     export
      GNUPGHOME="$(mktemp -d)";     for key in $GPG_KEYS; do       gpg --keyserver
      pgp.mit.edu --recv-keys "$key" ||       gpg --keyserver keyserver.pgp.com --recv-keys
      "$key" ||       gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"
      ;     done;     gpg --batch --verify php.tar.xz.asc php.tar.xz;     rm -rf "$GNUPGHOME";   fi;     apk
      del .fetch-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - set -xe   && apk add --no-cache --virtual .build-deps     $PHPIZE_DEPS     curl-dev     libedit-dev     libxml2-dev     libressl-dev     apache2-dev     freetype-dev     libjpeg-turbo-dev     libpng-dev     libsodium-dev     &&
      export CFLAGS="$PHP_CFLAGS"     CPPFLAGS="$PHP_CPPFLAGS"     LDFLAGS="$PHP_LDFLAGS"   &&
      docker-php-source extract   && cd /usr/src/php   && gnuArch="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)"   && ./configure     --build="$gnuArch"     --sysconfdir="$PHP_INI_DIR"     --with-layout=GNU     --with-config-file-path="$PHP_INI_DIR"     --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"         --enable-option-checking=fatal     --with-apxs2=/usr/bin/apxs         --disable-rpath     --disable-debug     --disable-static     --disable-embed     --disable-cgi     --without-db1     --without-db2     --without-db3     --without-db4     --without-qdbm     --without-pdo_sqlite     --without-sqlite3         --enable-ftp   --enable-mbstring   --enable-mysqlnd   --enable-pdo   --enable-zip   --enable-opcache         --with-sodium=shared     --with-curl     --with-libedit     --with-openssl     --with-zlib     --with-gd     --with-freetype-dir=/usr/include/     --with-jpeg-dir=/usr/include/     --with-png-dir=/usr/include/     --with-pdo-mysql=mysqlnd         $(test
      "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit')       && make -j
      "$(nproc)"   && make install   && cp php.ini-production $PHP_INI_DIR/php.ini   &&
      { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all
      '{}' + || true; }   && make clean   && docker-php-source delete     && runDeps="$(     scanelf
      --needed --nobanner --recursive /usr/local       | awk '{ gsub(/,/, "\nso:",
      $2); print "so:" $2 }'       | sort -u       | xargs -r apk info --installed       |
      sort -u   )"   && apk add --no-cache --virtual .php-rundeps $runDeps     &&
      apk del .build-deps   && pecl update-channels && rm -rf /tmp/pear ~/.pearrc
      && sed -i 's,lib/apache2/libphp7.so,modules/libphp7.so,' /etc/apache2/httpd.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: MEMCACHED_DEPS
      Value: zlib-dev libmemcached-dev cyrus-sasl-dev
    Name: env
  - CmdLine:
    - set -xe;   apk add --no-cache --update   libmemcached-libs   zlib
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe;   apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS   &&
      apk add --no-cache --update --virtual .memcached-deps $MEMCACHED_DEPS   && pecl
      install memcached   && echo "extension=memcached.so" > $PHP_INI_DIR/conf.d/20_memcached.ini   &&
      rm -rf /usr/share/php7   && rm -rf /tmp/*   && apk del .memcached-deps .phpize-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-ext-enable opcache sodium
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - override_php.ini
    - $PHP_INI_DIR/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2-foreground
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-module.conf
    - /etc/apache2/conf.d/
  - Name: workdir
    Path: /var/www/localhost/htdocs
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: gzevd/alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM gzevd/alpine:3.8
