MetaArgs: null
Stages:
- BaseName: teodorescuserban/hdx-base-ckan:latest
  Commands:
  - Maintainer: Serban Teodorescu, teodorescu.serban@gmail.com
    Name: maintainer
  - Env:
    - Key: HDX_CKAN_WORKERS
      Value: "4"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - helper_ckan.py
    - run_ckan
    - gunicorn_conf.py
    - hdx-test-core.ini.tpl
    - prod.ini.tpl
    - run_pgb
    - pgb.ini.tpl
    - pgb.users.tpl
    - /srv/
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main" > /etc/apt/sources.list.d/pgdg.list
      &&     curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key
      add - &&     apt-get -qq update &&     apt-get -qq -y install pgbouncer         libc-bin         imagemagick
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     mkdir
      -p /var/log/ckan /srv/filestore /etc/service/ckan /srv/pgb /etc/service/pgb
      &&     mv /srv/helper_ckan.py /srv/helper.py &&     mv /srv/run_ckan /etc/service/ckan/run
      &&     chmod +x /etc/service/ckan/run &&     chown www-data:www-data -R /var/log/ckan
      /srv/filestore &&     mv /srv/run_pgb /etc/service/pgb/run &&     chmod +x /etc/service/pgb/run
      &&     chown -R postgres:postgres /srv/pgb &&     echo "127.0.0.1:5432:pgbouncer:pgb:pgb"
      >> /root/.pgpass &&     mv /srv/pgb*.tpl /srv/pgb/ &&     git clone https://github.com/OCHA-DAP/hdx-ckan.git
      /srv/ckan &&     cd /srv/ckan &&     python setup.py develop &&     pip install
      -r requirements.txt &&     pip install -r dev-requirements.txt &&     curl -s
      -o /srv/hdxckantool.py https://raw.githubusercontent.com/OCHA-DAP/hdx-tools/master/hdxckantool.py
      &&     chmod +x /srv/hdxckantool.py &&     ln -s /srv/hdxckantool.py /usr/sbin/hdxckantool
      &&     mv /usr/local/lib/python2.7/dist-packages/requests /usr/local/lib/python2.7/dist-packages/requests.bak
      &&     echo "application/vnd.geo+json                        geojson" >> /etc/mime.types
      &&     pip install newrelic &&     newrelic-admin generate-config LICENSE_KEY
      /srv/newrelic.ini
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /srv/filestore
    - /srv/backup
    - /var/log/ckan
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: teodorescuserban/hdx-base-ckan:latest
  Name: ""
  Platform: ""
  SourceCode: from teodorescuserban/hdx-base-ckan:latest
