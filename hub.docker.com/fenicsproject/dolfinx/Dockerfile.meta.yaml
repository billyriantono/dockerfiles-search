MetaArgs: null
Stages:
- As: base
  BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"fenics-project <fenics-support@googlegroups.org>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Base image for real and complex FEniCS test environments"'
    Name: label
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: OPENBLAS_NUM_THREADS
      Value: "1"
    - Key: OPENBLAS_VERBOSE
      Value: "0"
    Name: env
  - CmdLine:
    - apt-get -qq update &&     apt-get -y --with-new-pkgs -o Dpkg::Options::="--force-confold"
      upgrade &&     apt-get -y install     cmake     doxygen     g++     gfortran     git     gmsh     graphviz     libboost-dev     libboost-filesystem-dev     libboost-iostreams-dev     libboost-math-dev     libboost-program-options-dev     libboost-system-dev     libboost-thread-dev     libboost-timer-dev     libeigen3-dev     libhdf5-openmpi-dev     liblapack-dev     libopenmpi-dev     libopenblas-dev     ninja-build     openmpi-bin     pkg-config     python3-dev     python3-pip     python3-setuptools     valgrind     wget     bash-completion
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir mpi4py numpy scipy numba
    Name: run
    PrependShell: true
  - Key: PYBIND11_VERSION
    Name: arg
    Value: 2.2.4
  - CmdLine:
    - wget -nc --quiet https://github.com/pybind/pybind11/archive/v${PYBIND11_VERSION}.tar.gz
      &&     tar -xf v${PYBIND11_VERSION}.tar.gz &&     cd pybind11-${PYBIND11_VERSION}
      &&     mkdir build &&     cd build &&     cmake -DPYBIND11_TEST=False ../ &&     make
      install &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: base
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as base
- As: real
  BaseName: base
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"fenics-project <fenics-support@googlegroups.org>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"FEniCS test environment with PETSc real mode"'
    Name: label
  - Name: workdir
    Path: /tmp
  - Key: PETSC_VERSION
    Name: arg
    Value: 3.9.4
  - CmdLine:
    - apt-get -qq update &&     apt-get -y install bison flex python &&     wget -nc
      --quiet https://bitbucket.org/petsc/petsc/get/v${PETSC_VERSION}.tar.gz -O petsc-${PETSC_VERSION}.tar.gz
      &&     mkdir -p petsc-src && tar -xf petsc-${PETSC_VERSION}.tar.gz -C petsc-src
      --strip-components 1 &&     cd petsc-src &&     ./configure     --COPTFLAGS="-O2
      -g"     --CXXOPTFLAGS="-O2 -g"     --FOPTFLAGS="-O2 -g"     --with-debugging=yes     --with-fortran-bindings=no     --download-blacs     --download-hypre     --download-metis     --download-mumps     --download-ptscotch     --download-scalapack     --download-spai     --download-suitesparse     --download-superlu     --with-scalar-type=real     make
      &&     make install &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Key: SLEPC_VERSION
    Name: arg
    Value: 3.9.2
  - CmdLine:
    - wget -nc --quiet http://slepc.upv.es/download/distrib/slepc-${SLEPC_VERSION}.tar.gz
      -O slepc-${SLEPC_VERSION}.tar.gz &&     mkdir -p slepc-src && tar -xf slepc-${SLEPC_VERSION}.tar.gz
      -C slepc-src --strip-components 1 &&     cd slepc-src &&     ./configure &&     make
      &&     make install &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Key: PETSC4PY_VERSION
    Name: arg
    Value: 3.9.1
  - Key: SLEPC4PY_VERSION
    Name: arg
    Value: 3.9.0
  - CmdLine:
    - pip3 install --no-cache-dir petsc4py==${PETSC4PY_VERSION} &&     pip3 install
      --no-cache-dir slepc4py==${SLEPC4PY_VERSION}
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: base
  Name: real
  Platform: ""
  SourceCode: FROM base as real
- As: complex
  BaseName: base
  Commands:
  - Labels:
    - Key: description
      Value: '"FEniCS test environment with PETSc complex mode"'
    Name: label
  - Name: workdir
    Path: /tmp
  - Key: PETSC_VERSION
    Name: arg
    Value: 3.9.4
  - CmdLine:
    - apt-get -qq update &&     apt-get -y install bison flex python &&     wget -nc
      --quiet https://bitbucket.org/petsc/petsc/get/v${PETSC_VERSION}.tar.gz -O petsc-${PETSC_VERSION}.tar.gz
      &&     mkdir -p petsc-src && tar -xf petsc-${PETSC_VERSION}.tar.gz -C petsc-src
      --strip-components 1 &&     cd petsc-src &&     ./configure     --COPTFLAGS="-O2
      -g"     --CXXOPTFLAGS="-O2 -g"     --FOPTFLAGS="-O2 -g"     --with-debugging=yes     --with-fortran-bindings=no     --download-blacs     --download-metis     --download-mumps     --download-ptscotch     --download-scalapack     --download-suitesparse     --download-superlu     --with-scalar-type=complex     make
      &&     make install &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Key: SLEPC_VERSION
    Name: arg
    Value: 3.9.2
  - CmdLine:
    - wget -nc --quiet http://slepc.upv.es/download/distrib/slepc-${SLEPC_VERSION}.tar.gz
      -O slepc-${SLEPC_VERSION}.tar.gz &&     mkdir -p slepc-src && tar -xf slepc-${SLEPC_VERSION}.tar.gz
      -C slepc-src --strip-components 1 &&     cd slepc-src &&     ./configure &&     make
      &&     make install &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Key: PETSC4PY_VERSION
    Name: arg
    Value: 3.9.1
  - Key: SLEPC4PY_VERSION
    Name: arg
    Value: 3.9.0
  - CmdLine:
    - pip3 install --no-cache-dir petsc4py==${PETSC4PY_VERSION} &&     pip3 install
      --no-cache-dir slepc4py==${SLEPC4PY_VERSION}
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: base
  Name: complex
  Platform: ""
  SourceCode: FROM base as complex
