{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.8-fpm",
      "SourceCode": "FROM php:7.3.8-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3.8-fpm"
      },
      "Commands": [
        {
          "Key": "TZ",
          "Name": "arg",
          "Value": "Asia/Shanghai"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "${TZ}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./sources.list",
            "/etc/apt/sources.list"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get install -y --no-install-recommends  \tlibssl-dev libicu-dev libmemcached-dev libz-dev libpq-dev libjpeg-dev libpng-dev libfreetype6-dev \tlibmcrypt-dev libzip-dev zip unzip libxml2-dev libxslt-dev \t\u0026\u0026 pecl channel-update pecl.php.net \t\u0026\u0026 apt-get install -yqq \t\u0026\u0026 pecl install redis \t\u0026\u0026 docker-php-ext-enable redis \t\u0026\u0026 pecl install memcached \t\u0026\u0026 docker-php-ext-enable memcached \t\u0026\u0026 pecl install mongodb \t\u0026\u0026 docker-php-ext-enable mongodb \t\u0026\u0026 pecl install msgpack \t\u0026\u0026 docker-php-ext-enable msgpack \t\u0026\u0026 docker-php-ext-install opcache \t\u0026\u0026 pecl install xdebug \t\u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./opcache.ini",
            "/usr/local/etc/php/conf.d/opcache.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./xdebug.ini",
            "/usr/local/etc/php/conf.d/xdebug.ini"
          ]
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/freetype2 --with-jpeg-dir=/usr/include/ \t\u0026\u0026 docker-php-ext-install gd \t\u0026\u0026 docker-php-ext-install pcntl \t\u0026\u0026 docker-php-ext-install intl \t\u0026\u0026 docker-php-ext-install soap \t\u0026\u0026 docker-php-ext-install xsl \t\u0026\u0026 docker-php-ext-install wddx \t\u0026\u0026 docker-php-ext-install zip \t\u0026\u0026 docker-php-ext-install pdo_mysql \t\u0026\u0026 docker-php-ext-install mysqli \t\u0026\u0026 docker-php-ext-install mbstring \t\u0026\u0026 docker-php-ext-install exif \t\u0026\u0026 docker-php-ext-install bcmath \t\u0026\u0026 docker-php-ext-install calendar \t\u0026\u0026 docker-php-ext-install sockets \t\u0026\u0026 docker-php-ext-install gettext \t\u0026\u0026 docker-php-ext-install shmop \t\u0026\u0026 docker-php-ext-install sysvmsg \t\u0026\u0026 docker-php-ext-install sysvsem \t\u0026\u0026 docker-php-ext-install sysvshm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./www.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "CmdLine": [
            "apt-get clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \t\u0026\u0026 rm /var/log/lastlog /var/log/faillog \t\u0026\u0026 usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        }
      ]
    }
  ]
}