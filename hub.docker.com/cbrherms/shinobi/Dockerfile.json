{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jrottenberg/ffmpeg:ubuntu",
      "SourceCode": "FROM jrottenberg/ffmpeg:ubuntu",
      "Platform": "",
      "From": {
        "Image": "jrottenberg/ffmpeg:ubuntu"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/opt/shinobi"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/shinobi"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_HOST",
              "Value": "\"127.0.0.1\""
            },
            {
              "Key": "MYSQL_DATABASE",
              "Value": "\"shinobi\""
            },
            {
              "Key": "MYSQL_ROOT_USER",
              "Value": "\"root\""
            },
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": "\"rootpass\""
            },
            {
              "Key": "MYSQL_USER",
              "Value": "\"ccio\""
            },
            {
              "Key": "MYSQL_PASSWORD",
              "Value": "\"shinobi\""
            },
            {
              "Key": "TIMEZONE",
              "Value": "\"UTC\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \t\u0026\u0026 echo mysql-server mysql-server/root_password password $MYSQL_ROOT_PASSWORD | debconf-set-selections \t\u0026\u0026 echo mysql-server mysql-server/root_password_again password $MYSQL_ROOT_PASSWORD | debconf-set-selections \t\u0026\u0026 apt-get install -y mysql-server mysql-client libmysqlclient-dev \t\u0026\u0026 apt install -y curl     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_8.x | bash     \u0026\u0026 apt install --no-install-recommends -y nodejs libav-tools     wget libcairo2-dev libjpeg-dev libpango1.0-dev     libgif-dev build-essential g++ \t\u0026\u0026 apt clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 cp /opt/shinobi/conf.sample.json /opt/shinobi/conf.json     \u0026\u0026 cp /opt/shinobi/super.sample.json /opt/shinobi/super.json     \u0026\u0026 npm install     \u0026\u0026 npm install pm2 -g \t\u0026\u0026 npm install canvas     \u0026\u0026 chmod +x ./docker-entrypoint.sh     \u0026\u0026 cp /opt/shinobi/plugins/motion/conf.sample.json /opt/shinobi/plugins/motion/conf.json \t\u0026\u0026 mkdir -p /var/run/mysqld \t\u0026\u0026 chown root:root /var/run/mysqld"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e\"s/^user\\s*=\\s*mysql/user = root/\" /etc/mysql/mysql.conf.d/mysqld.cnf \t\u0026\u0026 sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/mysql.conf.d/mysqld.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/shinobi/videos"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mysql"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "CmdLine": [
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}