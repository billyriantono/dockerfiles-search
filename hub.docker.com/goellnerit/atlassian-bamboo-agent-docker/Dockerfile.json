{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Philipp Goellner \u003cphilipp@goellner.it\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "BAMBOO_SERVER",
              "Value": "https://build.xaltbc.de/agentServer/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BAMBOO_VERSION",
              "Value": "5.14.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886 \u0026\u0026     echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu/ precise main\" \u003e /etc/apt/sources.list.d/java.list \u0026\u0026     echo \"debconf shared/accepted-oracle-license-v1-1 select true\" | debconf-set-selections \u0026\u0026     echo \"debconf shared/accepted-oracle-license-v1-1 seen true\" | debconf-set-selections \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     apt-get clean \u0026\u0026     echo -n \u003e /var/lib/apt/extended_states     \u0026\u0026 apt-get update --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --quiet --yes --force-yes libtcnative-1 xmlstarlet ssh sudo wget curl sed unzip git ntpdate     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"deb https://sdkrepo.atlassian.com/debian/ stable contrib\" \u003e\u003e/etc/apt/sources.list' \u0026\u0026     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B07804338C015B73 \u0026\u0026     apt-get install --quiet --yes --no-install-recommends apt-transport-https \u0026\u0026     apt-get update \u0026\u0026     apt-get install --quiet --yes --no-install-recommends atlassian-plugin-sdk \u0026\u0026     atlas-version \u0026\u0026     mkdir -p /root/bamboo-agent-home/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://www-eu.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -zxf apache-maven-3.3.9-bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo cp -R apache-maven-3.3.9 /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ${BAMBOO_SERVER}/agentInstaller/atlassian-bamboo-agent-installer-${BAMBOO_VERSION}.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget ${BAMBOO_SERVER}/agentInstaller/atlassian-bamboo-agent-installer-${BAMBOO_VERSION}.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp atlassian-bamboo-agent-installer-${BAMBOO_VERSION}.jar /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/bamboo-agent-home/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'system.git.executable=/usr/bin/git' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'atlassian.sdk=6.1.0' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'system.builder.mvn3.atlas-mvn\\ 3=/usr/share/atlassian-plugin-sdk-6.1.0/apache-maven-3.2.1' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'system.builder.mvn3.atlas-mvn\\ 3.2=/usr/share/atlassian-plugin-sdk-6.1.0/apache-maven-3.2.1' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'system.builder.mvn3.atlas-mvn\\ 3.2.1=/usr/share/atlassian-plugin-sdk-6.1.0/apache-maven-3.2.1' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'system.builder.mvn3.Maven\\ 3=/usr/bin/mvn' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get install -y \t\tbuild-essential \t\tsoftware-properties-common \t\tgit \t\tpython \t\tpython-dev \t\tpython-pip \t\tunzip \t\tvim \t\tcurl \t\tant \t\tlibc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 \t\tlibjpeg8-dev zlib1g-dev \u0026\u0026 \t\tapt-get clean \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026 \tadd-apt-repository -y ppa:webupd8team/java \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get install -y oracle-java8-installer \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \trm -rf /var/cache/oracle-jdk8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA8_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SDK_VERSION",
              "Value": "24.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "curl -sL https://dl.google.com/android/android-sdk_r${SDK_VERSION}-linux.tgz -o android-sdk.tgz \u0026\u0026 \ttar -xvzf android-sdk.tgz \u0026\u0026 \trm -f android-sdk.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NDK_VERSION",
              "Value": "10e"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "curl -sL http://dl.google.com/android/ndk/android-ndk-r${NDK_VERSION}-linux-x86_64.bin -o android-ndk.bin \u0026\u0026 \tchmod a+x ./android-ndk.bin \u0026\u0026 \t./android-ndk.bin \u0026\u0026 \tmv ./android-ndk-r${NDK_VERSION} ./android-ndk \u0026\u0026 \trm -f android-ndk.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_NDK_HOME",
              "Value": "/opt/android-ndk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_NDK",
              "Value": "/opt/android-ndk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${ANDROID_NDK_HOME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "2.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "dumb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "-Xms256m -Xmx512m"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "curl -sLO https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-all.zip \u0026\u0026 \tunzip gradle-${GRADLE_VERSION}-all.zip \u0026\u0026 \tln -s gradle-${GRADLE_VERSION} gradle \u0026\u0026 \trm gradle-${GRADLE_VERSION}-all.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install Pillow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'android.sdk=true' \u003e\u003e /root/bamboo-agent-home/bin/bamboo-capabilities.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget git \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://get.docker.com/builds/Linux/x86_64/docker-1.13.0.tgz",
            "/usr/local/bin/docker"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "java -jar atlassian-bamboo-agent-installer-${BAMBOO_VERSION}.jar ${BAMBOO_SERVER}"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}