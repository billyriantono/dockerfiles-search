{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "image_name",
          "Name": "arg",
          "Value": "crawler-jp"
        },
        {
          "Key": "github_url",
          "Name": "arg",
          "Value": "https://raw.githubusercontent.com/peinan/dockerfiles/${image_name}/${image_name}"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         libgdbm-dev         libc6-dev         libbz2-dev         libssl-dev         libreadline-gplv2-dev         libncursesw5-dev         libsqlite3-dev         libappindicator1         fonts-liberation         libasound2         libnspr4         libnss3         lsb-release         xdg-utils         zlib1g-dev         zip         unzip         gcc         locales         tk-dev         git         sudo         vim         make         wget         curl         xz-utils         file         ca-certificates         libappindicator3-1         libatk-bridge2.0-0         libatspi2.0-0         libgtk-3-0         libxtst6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ja_JP UTF-8\" \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "ja_JP:ja"
            },
            {
              "Key": "LC_ALL",
              "Value": "ja_JP.UTF-8"
            },
            {
              "Key": "TZ",
              "Value": "\"Asia/Tokyo\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "cdver",
          "Name": "arg",
          "Value": "\"74.0.3729.6\""
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://chromedriver.storage.googleapis.com/${cdver}/chromedriver_linux64.zip     \u0026\u0026 unzip chromedriver_linux64.zip     \u0026\u0026 mv chromedriver /usr/local/bin/     \u0026\u0026 rm -rf chromedriver_linux64.zip     \u0026\u0026 touch /etc/default/google-chrome     \u0026\u0026 wget --no-check-certificate https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb     \u0026\u0026 apt-get install -f     \u0026\u0026 dpkg -i google-chrome-stable_current_amd64.deb     \u0026\u0026 rm -rf google-chrome-stable_current_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "pyver",
          "Name": "arg",
          "Value": "\"3.6.8\""
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://www.python.org/ftp/python/${pyver}/Python-${pyver}.tgz     \u0026\u0026 tar zxf Python-${pyver}.tgz     \u0026\u0026 cd Python-${pyver}     \u0026\u0026 ./configure     \u0026\u0026 make altinstall     \u0026\u0026 rm -rf /Python-${pyver} /Python-${pyver}.tgz     \u0026\u0026 ln -s /usr/local/bin/python3.6 /usr/local/bin/python     \u0026\u0026 ln -s /usr/local/bin/pip3.6 /usr/local/bin/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "\"utf-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${github_url}/requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install -U pip setuptools     \u0026\u0026 pip install -r /tmp/requirements.txt     \u0026\u0026 rm -rf /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}