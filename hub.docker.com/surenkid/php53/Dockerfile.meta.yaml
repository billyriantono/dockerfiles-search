MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: https://github.com/surenkid/
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends       ca-certificates       curl       librecode0       libmysqlclient-dev       libsqlite3-0       libxml2     &&
      apt-get clean     && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends       autoconf       file       g++       gcc       libc-dev       make       pkg-config       re2c     &&
      apt-get clean     && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: 0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7
        0E604491
    Name: env
  - CmdLine:
    - set -xe   && for key in $GPG_KEYS; do     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key";   done
    Name: run
    PrependShell: true
  - CmdLine:
    - OPENSSL_VERSION="1.0.2k"       && cd /tmp       && mkdir openssl       && curl
      -sL "https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz" -o openssl.tar.gz       &&
      curl -sL "https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc"
      -o openssl.tar.gz.asc       && gpg --verify openssl.tar.gz.asc       && tar
      -xzf openssl.tar.gz -C openssl --strip-components=1       && cd /tmp/openssl       &&
      ./config && make && make install       && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp       && curl -sL "ftp://ftp.gnome.org/mirror/ubuntu/pool/main/f/freetds/freetds_0.91.orig.tar.gz"
      -o freetds.tar.gz       && tar -xof freetds.tar.gz       && rm freetds.tar.gz*       &&
      cd freetds-0.91       && ./configure --prefix=/usr/local/freetds --with-tdsver=7.1
      --enable-msdblib --enable-dbmfix --with-gnu-ld --enable-shared --enable-static       &&
      make && make install       && make clean       && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_VERSION
      Value: 5.3.29
    Name: env
  - CmdLine:
    - buildDeps="                 autoconf2.13                 libcurl4-openssl-dev                 libreadline6-dev                 librecode-dev                 libsqlite3-dev                 libssl-dev                 libxml2-dev                 xz-utils       "       &&
      set -x       && apt-get update && apt-get install -y $buildDeps --no-install-recommends
      && rm -rf /var/lib/apt/lists/*       && curl -SL "http://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror"
      -o php.tar.xz       && curl -SL "http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror"
      -o php.tar.xz.asc       && gpg --verify php.tar.xz.asc       && mkdir -p /usr/src/php       &&
      tar -xof php.tar.xz -C /usr/src/php --strip-components=1       && rm php.tar.xz*       &&
      cd /usr/src/php       && ./configure             --with-config-file-path="$PHP_INI_DIR"             --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"             --enable-fpm             --with-fpm-user=www-data             --with-fpm-group=www-data             --disable-cgi             --enable-mysqlnd             --with-mysql             --with-curl             --with-openssl=/usr/local/ssl             --with-readline             --with-recode             --with-zlib       &&
      make -j"$(nproc)"       && make install       && { find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; }       && apt-get
      purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false
      $buildDeps       && make clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-*
    - /usr/local/bin/
  - CmdLine:
    - cd /tmp       && mkdir -p /usr/src/php/ext/phpredis       && curl -sL "https://github.com/phpredis/phpredis/archive/master.tar.gz"
      -o phpredis.tar.gz       && tar -xof phpredis.tar.gz -C /usr/src/php/ext/phpredis
      --strip-components=1       && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp       && mkdir -p /usr/src/php/ext/xdebug       && curl -sL "https://xdebug.org/files/xdebug-2.2.7.tgz"
      -o xdebug.tgz       && tar -xof xdebug.tgz -C /usr/src/php/ext/xdebug --strip-components=1       &&
      rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp       && mkdir -p /usr/src/php/ext/yaf       && curl -sL "https://github.com/laruence/yaf/archive/yaf-2.3.5.tar.gz"
      -o yaf.tar.gz       && tar -xof yaf.tar.gz -C /usr/src/php/ext/yaf --strip-components=1       &&
      rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/include/freetype2/freetype         && ln -s /usr/include/freetype2/freetype.h
      /usr/include/freetype2/freetype/freetype.h         && chmod +x /usr/local/bin/docker-php-*
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install iconv mbstring mcrypt mysqli phpredis yaf xdebug         &&
      docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/         &&
      docker-php-ext-install gd         && docker-php-ext-configure mssql --with-mssql=/usr/local/freetds         &&
      docker-php-ext-install mssql
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - set -ex   && cd /usr/local/etc   && if [ -d php-fpm.d ]; then     sed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null;     cp php-fpm.d/www.conf.default
      php-fpm.d/www.conf;   else     mkdir php-fpm.d;     cp php-fpm.conf.default
      php-fpm.d/www.conf;     {       echo '[global]';       echo 'include=etc/php-fpm.d/*.conf';     }
      | tee php-fpm.conf;   fi   && {     echo '[global]';     echo 'error_log = /proc/self/fd/2';     echo;     echo
      '[www]';     echo '; if we send this to /proc/self/fd/1, it never appears';     echo
      'access.log = /proc/self/fd/2';     echo;     echo '; Ensure worker stdout and
      stderr are sent to the main error log.';     echo 'catch_workers_output = yes';   }
      | tee php-fpm.d/docker.conf   && {     echo '[global]';     echo 'daemonize
      = no';     echo;     echo '[www]';     echo 'listen = 9000';   } | tee php-fpm.d/zz-docker.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/listen = 127.0.0.1:9000/listen = 0.0.0.0:9000/g" /usr/local/etc/php-fpm.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - '{     echo ''zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20090626/xdebug.so'';     echo
      ''xdebug.idekey = PHPSTORM'';     echo ''xdebug.remote_host = host.docker.internal'';     echo
      ''xdebug.default_enable = 1'';     echo ''xdebug.remote_autostart = 1'';     echo
      ''xdebug.remote_connect_back = 0'';     echo ''xdebug.remote_enable = 1'';     echo
      ''xdebug.remote_handler = dbgp'';     echo ''xdebug.remote_port = 9000'';   }
      | tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'yaf.use_namespace = 1' | tee -a /usr/local/etc/php/conf.d/docker-php-ext-yaf.ini
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
