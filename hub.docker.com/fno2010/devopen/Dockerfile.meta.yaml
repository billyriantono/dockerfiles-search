MetaArgs: null
Stages:
- BaseName: kdelfour/supervisor-docker
  Commands:
  - Maintainer: Jensen Zhang <jingxuan.n.zhang@gmail.com>
    Name: maintainer
  - Env:
    - Key: MININET_REPO
      Value: https://github.com/mininet/mininet
    Name: env
  - Env:
    - Key: MININET_INSTALLER
      Value: ./mininet/util/install.sh
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk/jdk1.8.0_101
    Name: env
  - Env:
    - Key: PATH
      Value: /root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - 'apt-get update --quiet `# ------------------------------------------------------------------------------`
      `# Install base`     && apt-get install         --yes         --no-install-recommends         --no-install-suggests         autoconf
      automake ca-certificates libtool net-tools openssh-client unzip         build-essential
      g++ curl libssl-dev apache2-utils git libxml2-dev sshfs tmux `# ------------------------------------------------------------------------------`
      `# Clone and install mininet`     && cd /tmp     && git clone -b 2.2.1 $MININET_REPO     &&
      sed -e ''s/sudo //g''         -e ''s/~\//\//g''         -e ''s/\(apt-get -y
      install\)/\1 --no-install-recommends --no-install-suggests/g''         -i $MININET_INSTALLER
      && touch /.bashrc     && chmod +x $MININET_INSTALLER     && $MININET_INSTALLER
      -nfv `# ------------------------------------------------------------------------------`
      `# Install Java and Maven`     && curl -LO -H "Cookie: oraclelicense=accept-securebackup-cookie"
      http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz     &&
      mkdir /opt/jdk     && tar -zxf jdk-8u101-linux-x64.tar.gz -C /opt/jdk     &&
      update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_101/bin/java
      100     && update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_101/bin/javac
      100     && curl -LO http://mirror.cc.columbia.edu/pub/software/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz     &&
      tar -zxf apache-maven-3.3.9-bin.tar.gz -C /opt     && ln -s /opt/apache-maven-3.3.9/bin/mvn
      /usr/bin/mvn     && mkdir -p /root/.m2     && curl -L https://raw.githubusercontent.com/opendaylight/odlparent/master/settings.xml
      > /root/.m2/settings.xml     && curl -L -o m2.zip $(curl -s https://api.github.com/repos/snlab/m2-odl-summit/releases
      | grep browser_download_url | head -n 1 | cut -d "\"" -f 4)     && unzip m2.zip     &&
      cp -rf .m2/* /root/.m2/ `# ------------------------------------------------------------------------------`
      `# Install Node.js`     && curl -sL https://deb.nodesource.com/setup_6.x | bash
      -     && apt-get install -y nodejs `# Symbolic link for utility`     && mkdir
      -p /root/bin     && cd /root/bin     && npm i ssh2 scp2 optimist     && ln -s
      /cloud9/plugins/snlab.devopen.controller/deploy.js /root/bin/deploy `# ------------------------------------------------------------------------------`
      `# Install Cloud9`     && git clone https://github.com/fno2010/core.git -b devopen
      /cloud9     && cd /cloud9     && scripts/install-sdk.sh `# Tweak standlone.js
      conf`     && sed -i -e ''s_127.0.0.1_0.0.0.0_g'' /cloud9/configs/standalone.js
      `# Fix bug https://github.com/npm/npm/issues/9863`     && cd $(npm root -g)/npm     &&
      npm install fs-extra     && sed -i -e s/graceful-fs/fs-extra/ -e s/fs\.rename/fs.move/
      ./lib/utils/rename.js     && cd /cloud9 `# Install extra dependencies for cloud9`     &&
      npm i body-parser express ssh2 sqlite3 request `# ------------------------------------------------------------------------------`
      `# Clean up APT when done`     && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /cloud9
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/cloud9.conf
    - /etc/supervisor/conf.d/
  - CmdLine:
    - mkdir /workspace
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /workspace
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entry-point
    - /docker-entry-point
  - CmdLine:
    - chmod 755 /docker-entry-point
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mininetSim
    - /root/bin/mininetSim
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - 9001-9100
  - CmdLine:
    - /docker-entry-point
    Name: entrypoint
    PrependShell: false
  From:
    Image: kdelfour/supervisor-docker
  Name: ""
  Platform: ""
  SourceCode: FROM kdelfour/supervisor-docker
