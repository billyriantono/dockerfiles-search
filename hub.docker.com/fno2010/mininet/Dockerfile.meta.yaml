MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: David Bainbridge <dbainbri@ciena.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: MININET_REPO
      Value: git://github.com/mininet/mininet
    Name: env
  - Env:
    - Key: MININET_INSTALLER
      Value: ./mininet/util/install.sh
    Name: env
  - Env:
    - Key: INSTALLER_SWITCHES
      Value: -fbinptvwyx
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "apt-get update         --quiet     && apt-get install         --yes         --no-install-recommends
      \        --no-install-suggests     autoconf     automake     ca-certificates
      \    git     curl     libtool     net-tools     iputils-ping     iperf3     tcpdump
      \    openssh-client     xterm     patch     vim     && git clone -b 2.2.1 $MININET_REPO
      \    && sed -e 's/sudo //g'     \t-e 's/~\\//\\//g'     \t-e 's/\\(apt-get -y
      install\\)/\\1 --no-install-recommends --no-install-suggests/g'     \t-i $MININET_INSTALLER
      \    && touch /.bashrc     && chmod +x $MININET_INSTALLER     && ./$MININET_INSTALLER
      -nfv     && ln -s /usr/bin/ovs-testcontroller /usr/bin/ovs-controller     &&
      rm -rf /tmp/mininet               /tmp/openflow     && apt-get clean     &&
      rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entry-point
    - /docker-entry-point
  - CmdLine:
    - chmod 755 /docker-entry-point
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - CmdLine:
    - /docker-entry-point
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
