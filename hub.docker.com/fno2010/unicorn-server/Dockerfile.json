{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "opendaylight/odl:5.4.0",
      "SourceCode": "FROM opendaylight/odl:5.4.0",
      "Platform": "",
      "From": {
        "Image": "opendaylight/odl:5.4.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jensen Zhang \u003chack@jensen-zhang.site\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "yum -y --setopt=tsflags=nodocs update     \u0026\u0026 yum -y --setopt=tsflags=nodocs install git python34-devel python34-setuptools python34-pip         python-devel python-setuptools python2-pip java-1.8.0-openjdk-devel     \u0026\u0026 echo 'Downloading maven...'     \u0026\u0026 curl -sSLO http://www-us.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz     \u0026\u0026 echo 'Done'     \u0026\u0026 tar -zxf apache-maven-3.3.9-bin.tar.gz -C /opt     \u0026\u0026 ln -s /opt/apache-maven-3.3.9/bin/mvn /usr/bin/mvn     \u0026\u0026 mkdir -p /root/.m2     \u0026\u0026 curl -sSL https://raw.githubusercontent.com/opendaylight/odlparent/master/settings.xml \u003e /root/.m2/settings.xml     \u0026\u0026 git clone https://github.com/openalto/alto-experimental -b odl-boron-sr4     \u0026\u0026 pushd alto-experimental     \u0026\u0026 mvn clean install -Ptest -DskipTests     \u0026\u0026 unzip alto-bwmonitor/features/target/alto-bwmonitor-*.kar 'repository/*'     \u0026\u0026 unzip alto-pathmanager/features/target/alto-pathmanager-*.kar 'repository/*'     \u0026\u0026 unzip alto-unicorn/features/target/alto-unicorn-*.kar 'repository/*'     \u0026\u0026 cp -r repository/* /opt/opendaylight/system/     \u0026\u0026 chown -R odl:odl /opt/opendaylight/system/     \u0026\u0026 popd     \u0026\u0026 git clone https://github.com/openalto/alto-nova     \u0026\u0026 pushd alto-nova     \u0026\u0026 pip3 install -r requirements.txt     \u0026\u0026 python3 setup.py install     \u0026\u0026 popd     \u0026\u0026 git clone https://github.com/openalto/alto-domain-agent     \u0026\u0026 pushd alto-domain-agent     \u0026\u0026 mvn clean package     \u0026\u0026 cp target/unicorn-server.war /opt/     \u0026\u0026 cp -r target/unicorn-server /opt/     \u0026\u0026 cp bin/pyunicorn /usr/bin/     \u0026\u0026 popd     \u0026\u0026 pip2 install python-odl     \u0026\u0026 curl -sSL -o /opt/jetty-runner.jar http://central.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.4.7.v20170914/jetty-runner-9.4.7.v20170914.jar     \u0026\u0026 yum clean all \u0026\u0026 rm -rf /tmp/* /var/tmp/* /root/.m2/repository/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patch/instance.py",
            "/usr/lib/python2.7/site-packages/odl/instance.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patch/templates",
            "/var/lib/data/python-odl/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entry-point",
            "/docker-entry-point"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /docker-entry-point"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6633"
          ]
        },
        {
          "CmdLine": [
            "/docker-entry-point"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}