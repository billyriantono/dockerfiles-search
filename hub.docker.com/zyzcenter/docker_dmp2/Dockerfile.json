{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "confluent_env",
      "BaseName": "tairangroup/confluent:latest",
      "SourceCode": "FROM tairangroup/confluent:latest AS confluent_env",
      "Platform": "",
      "As": "confluent_env",
      "From": {
        "Image": "tairangroup/confluent:latest"
      },
      "Commands": [
        {
          "Maintainer": "gudaoxuri \u003ci@sunisle.org\u003e",
          "Name": "maintainer"
        }
      ]
    },
    {
      "Name": "hive_env",
      "BaseName": "tairangroup/hive:latest",
      "SourceCode": "FROM tairangroup/hive:latest AS hive_env",
      "Platform": "",
      "As": "hive_env",
      "From": {
        "Image": "tairangroup/hive:latest"
      },
      "Commands": null
    },
    {
      "Name": "hbase_env",
      "BaseName": "tairangroup/hbase:latest",
      "SourceCode": "FROM tairangroup/hbase:latest AS hbase_env",
      "Platform": "",
      "As": "hbase_env",
      "From": {
        "Image": "tairangroup/hbase:latest"
      },
      "Commands": null
    },
    {
      "Name": "spark_env",
      "BaseName": "tairangroup/spark:latest",
      "SourceCode": "FROM tairangroup/spark:latest AS spark_env",
      "Platform": "",
      "As": "spark_env",
      "From": {
        "Image": "tairangroup/spark:latest"
      },
      "Commands": null
    },
    {
      "Name": "kylin_env",
      "BaseName": "tairangroup/kylin:latest",
      "SourceCode": "FROM tairangroup/kylin:latest AS kylin_env",
      "Platform": "",
      "As": "kylin_env",
      "From": {
        "Image": "tairangroup/kylin:latest"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "confluent_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/confluent",
            "/opt/confluent"
          ]
        },
        {
          "Chown": "",
          "From": "confluent_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/bootstrap_confluent.sh",
            "/bin/bootstrap_confluent.sh"
          ]
        },
        {
          "Chown": "",
          "From": "hive_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/hive",
            "/opt/hive"
          ]
        },
        {
          "Chown": "",
          "From": "hive_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/bootstrap_hive.sh",
            "/bin/bootstrap_hive.sh"
          ]
        },
        {
          "Chown": "",
          "From": "hbase_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/hbase",
            "/opt/hbase"
          ]
        },
        {
          "Chown": "",
          "From": "hbase_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/phoenix",
            "/opt/phoenix"
          ]
        },
        {
          "Chown": "",
          "From": "hbase_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/bootstrap_hbase.sh",
            "/bin/bootstrap_hbase.sh"
          ]
        },
        {
          "Chown": "",
          "From": "spark_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/spark",
            "/opt/spark"
          ]
        },
        {
          "Chown": "",
          "From": "spark_env",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/bootstrap_spark.sh",
            "/bin/bootstrap_spark.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "CONFLUENT_HOME",
              "Value": "/opt/confluent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KAFKA_HOME",
              "Value": "/opt/confluent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HIVE_HOME",
              "Value": "/opt/hive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HBASE_HOME",
              "Value": "/opt/hbase"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIVY_HOME",
              "Value": "/opt/livy"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONFLUENT_HOME/bin:$HIVE_HOME/bin:$HBASE_HOME/bin:$SPARK_HOME/bin:$LIVY_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KEEP",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export KAFKA_HOME=/opt/confluent\" \u003e\u003e /etc/profile  \u0026\u0026 echo \"export CONFLUENT_HOME=/opt/confluent\" \u003e\u003e /etc/profile  \u0026\u0026 echo \"export HIVE_HOME=/opt/hive\" \u003e\u003e /etc/profile  \u0026\u0026 echo \"export HBASE_HOME=/opt/hbase\" \u003e\u003e /etc/profile  \u0026\u0026 echo \"export SPARK_HOME=/opt/spark\" \u003e\u003e /etc/profile  \u0026\u0026 echo \"export LIVY_HOME=/opt/livy\" \u003e\u003e /etc/profile  \u0026\u0026 echo \"export PATH=$CONFLUENT_HOME/bin:$HIVE_HOME/bin:$HBASE_HOME/bin:$SPARK_HOME/bin:$LIVY_HOME/bin:$PATH\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y unzip zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo su  \u0026\u0026 wget -q -O livy-0.5.0-incubating-bin.zip http://mirrors.tuna.tsinghua.edu.cn/apache/incubator/livy/0.5.0-incubating/livy-0.5.0-incubating-bin.zip  \u0026\u0026 unzip /livy-0.5.0-incubating-bin.zip -d /opt/  \u0026\u0026 mv /opt/livy-0.5.0-incubating-bin /opt/livy  \u0026\u0026 mkdir /opt/livy/logs  \u0026\u0026 cp $LIVY_HOME/conf/log4j.properties.template $LIVY_HOME/conf/log4j.properties  \u0026\u0026 cp $LIVY_HOME/conf/spark-blacklist.conf.template $LIVY_HOME/conf/spark-blacklist.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp $HIVE_HOME/conf/hive-site.xml $SPARK_HOME/conf/  \u0026\u0026 cp $HIVE_HOME/conf/hive-site.xml $LIVY_HOME/conf/  \u0026\u0026 cp $HIVE_HOME/conf/hive-log4j2.properties $SPARK_HOME/conf/  \u0026\u0026 cp $HIVE_HOME/lib/mysql-connector-java-5.1.45-bin.jar $SPARK_HOME/jars/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "livy.conf",
            "$LIVY_HOME/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bootstrap_all.sh",
            "/bin/bootstrap_all.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bootstrap.sh",
            "/bin/bootstrap.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /bin/bootstrap*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "10000",
            "60000",
            "60010",
            "60030",
            "7070",
            "8081",
            "8082",
            "8083",
            "8998",
            "9092"
          ]
        },
        {
          "CmdLine": [
            "/bin/bootstrap.sh $KEEP"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}