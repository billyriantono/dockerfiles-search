{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "\"Paolo D'Onorio De Meo \u003cp.donoriodemeo@cineca.it\u003e\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.23-r3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_REPO",
              "Value": "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/$GLIBC_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add     --repository http://dl-4.alpinelinux.org/alpine/edge/testing     rethinkdb     \u0026\u0026 apk --update add         bash wget curl ca-certificates bzip2 unzip         sudo musl-dev git vim         gcc libstdc++ glib libxext libxrender tini     \u0026\u0026 curl -L \"$GLIBC_REPO/glibc-${GLIBC_VERSION}.apk\" -o /tmp/glibc.apk     \u0026\u0026 curl -L \"$GLIBC_REPO/glibc-bin-${GLIBC_VERSION}.apk\" -o /tmp/glibc-bin.apk     \u0026\u0026 curl -L \"$GLIBC_REPO/glibc-i18n-${GLIBC_VERSION}.apk\" -o /tmp/glibc-i18n.apk     \u0026\u0026 apk add --allow-untrusted /tmp/glibc*.apk     \u0026\u0026 /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib     \u0026\u0026 /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8     \u0026\u0026 rm -rf /tmp/glibc*apk \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $CONDA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_VER",
              "Value": "4.1.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTINUUM_REPO",
              "Value": "https://repo.continuum.io/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_LINK",
              "Value": "$CONTINUUM_REPO/miniconda/Miniconda3-${CONDA_VER}-Linux-x86_64.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_SCRIPT",
              "Value": "/tmp/conda.sh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo $CONDA_LINK"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -k -o $INSTALL_SCRIPT $CONDA_LINK     \u0026\u0026 /bin/bash $INSTALL_SCRIPT -f -b -p $CONDA_DIR     \u0026\u0026 rm $INSTALL_SCRIPT     \u0026\u0026 echo \"installing\"     \u0026\u0026 conda install --quiet --yes         jupyter pip         pandas scipy matplotlib cython numba seaborn     \u0026\u0026 conda remove -y nbpresent     \u0026\u0026 conda install -y -c damianavila82 rise     \u0026\u0026 conda install -y -c pydy version_information     \u0026\u0026 conda clean -y --all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade --no-cache-dir pip     xlrd openpyxl     ptpython     ipython-sql     rethinkdb     attrs     flit colorama begins     pywebview     watchdog ptpython     arrow parsedatetime timestring     boltons"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser -s $SHELL -u $NB_UID $NB_USER -D \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     chown $NB_USER $CONDA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jovyan"
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/work \u0026\u0026     mkdir /home/$NB_USER/.jupyter \u0026\u0026     mkdir /home/$NB_USER/.local \u0026\u0026     echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" \u003e /home/$NB_USER/.curlrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "notebook_config.py",
            "/home/$NB_USER/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "CmdLine": [
            "cd /opt/conda/share/jupyter/nbextensions/rise     \u0026\u0026 wget -q http://j.mp/risecustomkeys -O main.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf ~/.cache/matplotlib ~/.matplotlib/fontList.cache ~/.cache/fontconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export PATH=$CONDA_DIR/bin:/home/$NB_USER/.local/bin:\\$PATH\" \u003e /home/$NB_USER/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "BOOTER",
              "Value": "/docker-entrypoint.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DATADIR",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$DATADIR"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$DATADIR"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bootstrap.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x $BOOTER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown $NB_USER -R $DATADIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}