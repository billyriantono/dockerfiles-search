MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:bionic
  Commands:
  - Maintainer: Gautier Bureau "gautier.bureau@rte-france.com"
    Name: maintainer
  - Env:
    - Key: USER
      Value: '"dynawo_travis"'
    Name: env
  - Env:
    - Key: TZ
      Value: Europe/Paris
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade -y -q && apt-get install -y git   gcc   g++   gfortran   autoconf   pkgconf   automake   make   sudo   libtool   cmake   hwloc   openjdk-8-jdk   libblas-dev   liblpsolve55-dev   libarchive-dev   doxygen   liblapack-dev   libexpat1-dev   libsqlite3-dev   zlib1g-dev   gettext   patch   python-pip   libncurses5-dev   libreadline-dev   libdigest-perl-md5-perl   unzip   lcov   libboost-all-dev   qt4-qmake   qt4-dev-tools   lsb-release   libxml2-utils   python-lxml   python-psutil   vim   wget   rsync   libcurl4-openssl-dev   curl
      && apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/${USER} --user-group ${USER} && chown -R ${USER} /opt
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Name: workdir
    Path: /home/${USER}
  - CmdLine:
    - git clone https://github.com/dynawo/dynawo.git dynawo && cd dynawo && echo $'#!/bin/bash
      \nexport DYNAWO_HOME=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)\n\nexport
      DYNAWO_SRC_OPENMODELICA=/opt/OpenModelica/Source\nexport DYNAWO_INSTALL_OPENMODELICA=/opt/OpenModelica/Install\n\nexport
      DYNAWO_LOCALE=en_GB\nexport DYNAWO_RESULTS_SHOW=false\nexport DYNAWO_BROWSER=xdg-open\n\nexport
      DYNAWO_NB_PROCESSORS_USED=1\n\nexport DYNAWO_BUILD_TYPE=Release\nexport DYNAWO_CXX11_ENABLED=YES\n\n$DYNAWO_HOME/util/envDynawo.sh
      $@' > myEnvDynawo.sh && chmod +x myEnvDynawo.sh && ./myEnvDynawo.sh build-omcDynawo
      && rm -rf /opt/OpenModelica/Source && rm -rf /opt/OpenModelica/Install/share
      && cd .. && rm -rf dynawo
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/${USER}/dynawo
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:bionic as builder
- BaseName: ubuntu:bionic
  Commands:
  - Maintainer: Gautier Bureau "gautier.bureau@rte-france.com"
    Name: maintainer
  - Env:
    - Key: USER
      Value: '"dynawo_travis"'
    Name: env
  - Env:
    - Key: ADEPT_VERSION
      Value: '"2.0.5"'
    Name: env
  - Env:
    - Key: SUITE_SPARSE_VERSION
      Value: '"4.5.4"'
    Name: env
  - Env:
    - Key: SUNDIALS_VERSION
      Value: '"4.1.0"'
    Name: env
  - Env:
    - Key: SUITE_SPARSE_VERSION2
      Value: '"5.3.0"'
    Name: env
  - Env:
    - Key: SUNDIALS_VERSION2
      Value: '"5.0.0"'
    Name: env
  - Env:
    - Key: XERCESC_VERSION
      Value: '"3.2.2"'
    Name: env
  - Env:
    - Key: XERCESC_VERSION_SHORT
      Value: '"3"'
    Name: env
  - Env:
    - Key: CPPLINT_VERSION
      Value: '"1.4.4"'
    Name: env
  - Env:
    - Key: JQUERY_VERSION
      Value: '"1.3.2"'
    Name: env
  - Env:
    - Key: FLOT_VERSION
      Value: '"0.6.0"'
    Name: env
  - Env:
    - Key: BOOST_VERSION
      Value: '"1.64.0"'
    Name: env
  - Env:
    - Key: BOOST_VERSION_
      Value: '"1_64_0"'
    Name: env
  - Env:
    - Key: LIBARCHIVE_VERSION
      Value: '"2.8.0"'
    Name: env
  - Env:
    - Key: ZLIB_VERSION
      Value: '"1.2.11"'
    Name: env
  - Env:
    - Key: TZ
      Value: Europe/Paris
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade -y -q && apt-get install -y git   gcc   g++   gfortran   autoconf   pkgconf   automake   make   sudo   libtool   cmake   hwloc   openjdk-8-jdk   libblas-dev   liblpsolve55-dev   libarchive-dev   doxygen   liblapack-dev   libexpat1-dev   libsqlite3-dev   zlib1g-dev   gettext   patch   python-pip   libncurses5-dev   libreadline-dev   libdigest-perl-md5-perl   unzip   lcov   libboost-all-dev   qt4-qmake   qt4-dev-tools   lsb-release   libxml2-utils   python-lxml   python-psutil   vim   wget   rsync   libcurl4-openssl-dev   curl   bash-completion
      && apt-get clean && rm -rf /var/lib/apt/lists/* && wget http://www.met.reading.ac.uk/clouds/adept/adept-${ADEPT_VERSION}.tar.gz
      -P /opt && wget https://github.com/LLNL/sundials/releases/download/v${SUNDIALS_VERSION}/sundials-${SUNDIALS_VERSION}.tar.gz
      -P /opt && wget http://faculty.cse.tamu.edu/davis/SuiteSparse/SuiteSparse-${SUITE_SPARSE_VERSION}.tar.gz
      -P /opt && wget https://github.com/LLNL/sundials/releases/download/v${SUNDIALS_VERSION2}/sundials-${SUNDIALS_VERSION2}.tar.gz
      -P /opt && wget http://faculty.cse.tamu.edu/davis/SuiteSparse/SuiteSparse-${SUITE_SPARSE_VERSION2}.tar.gz
      -P /opt && wget https://github.com/jquery/jquery/archive/${JQUERY_VERSION}.tar.gz
      -P /opt && wget https://github.com/flot/flot/archive/v${FLOT_VERSION}.tar.gz
      -P /opt && wget https://github.com/cpplint/cpplint/archive/${CPPLINT_VERSION}.tar.gz
      -P /opt && wget http://archive.apache.org/dist/xerces/c/${XERCESC_VERSION_SHORT}/sources/xerces-c-${XERCESC_VERSION}.tar.gz
      -P /opt && mkdir -p /opt/3/sources/ && mv /opt/xerces-c-${XERCESC_VERSION}.tar.gz
      /opt/3/sources/ && wget https://github.com/libarchive/libarchive/archive/v${LIBARCHIVE_VERSION}.tar.gz
      -P /opt && wget https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION_}.tar.gz
      -P /opt && wget https://sourceforge.net/projects/libpng/files/zlib/${ZLIB_VERSION}/zlib-${ZLIB_VERSION}.tar.gz
      -P /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/${USER} --user-group ${USER} && chown -R ${USER} /opt
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /opt/OpenModelica
    - /opt/OpenModelica
  - Name: user
    User: ${USER}
  - Name: workdir
    Path: /home/${USER}
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
