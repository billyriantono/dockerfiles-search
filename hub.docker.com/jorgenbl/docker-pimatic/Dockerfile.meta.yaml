MetaArgs: null
Stages:
- BaseName: node:4-slim
  Commands:
  - Labels:
    - Key: Description
      Value: '"Pimatic docker image"'
    Name: label
  - CmdLine:
    - apt-get update   && apt-get install -y   git build-essential make python python-pip
      avahi-daemon avahi-discover libnss-mdns libavahi-compat-libdnssd-dev   && apt-get
      clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -- 's/#enable-dbus=yes/enable-dbus=yes/g'  /etc/avahi/avahi-daemon.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/pimatic-docker
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && npm install pimatic --prefix pimatic-docker --production
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/pimatic-docker/node_modules/pimatic && npm link
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://raw.githubusercontent.com/pimatic/pimatic/v0.9.x/install/pimatic-init-d
      && cp pimatic-init-d /etc/init.d/pimatic
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /etc/init.d/pimatic
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root:root /etc/init.d/pimatic
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d pimatic defaults
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opt/pimatic-docker/node_modules/pimatic/config_default.json /data/config.json
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i "s/\"password\": \"\"/\"password\": \"pimatic\"/g" /data/config.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i "s/\"port\": 80\"\"/\"port\": 8086/g" /data/config.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /data/pimatic-database.sqlite
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/pimatic-docker/     && npm install pimatic-cron     && npm install pimatic-mobile-frontend     &&
      npm install pimatic-hap     && cd node_modules/pimatic-hap     && npm install     &&
      cd node_modules/hap-nodejs     && npm install     && cd /opt/pimatic-docker/     &&
      npm install pimatic-shell-execute     && npm install pimatic-log-reader     &&
      npm install pimatic-angular-material-frontend
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - ln -fs /data/config.json /opt/pimatic-docker/config.json &&    ln -fs /data/pimatic-database.sqlite
      /opt/pimatic-docker/pimatic-database.sqlite &&    /etc/init.d/dbus restart &&    avahi-daemon
      -D &&    pimatic.js
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "8086"
  From:
    Image: node:4-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:4-slim
