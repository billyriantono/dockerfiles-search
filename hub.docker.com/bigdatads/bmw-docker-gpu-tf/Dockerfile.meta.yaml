MetaArgs: null
Stages:
- BaseName: nvidia/cuda:cudnn
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - mkdir /jupyter
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: HOME
      Value: /jupyter
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.3.11
    Name: env
  - Env:
    - Key: MINICONDA_URL
      Value: http://repo.continuum.io/miniconda/Miniconda2-$MINICONDA_VERSION-Linux-x86_64.sh
    Name: env
  - Env:
    - Key: TINI_VERSION
      Value: v0.10.0
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     sudo     wget     bzip2     unzip     locales     ca-certificates     make     build-essential     python-dev     texlive-latex-base     texlive-latex-extra     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     libpq-dev     gcc     g++     libatlas-base-dev     gfortran     liblapack-dev     libopenblas-dev     default-jre     &&
      apt-get clean all &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cacert=/etc/ssl/certs/ca-certificates.crt" > /root/.curlrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/local/bin/tini
  - CmdLine:
    - chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     wget --output-document miniconda.sh
      --quiet $MINICONDA_URL &&     /bin/bash miniconda.sh -f -b -p $CONDA_DIR &&     rm
      miniconda.sh &&     $CONDA_DIR/bin/conda install --quiet --yes conda==$MINICONDA_VERSION
      &&     $CONDA_DIR/bin/conda config --system --add channels conda-forge &&     conda
      clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -f pip setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'ipython=4.2*'     'ipywidgets=5.1*'     'pandas=0.18*'     'numexpr=2.5*'     'matplotlib=1.5*'     'scipy=0.17*'     'sympy=1.0*'     'cython=0.23*'     'patsy=0.4*'     'statsmodels=0.6*'     'cloudpickle=0.1*'     'dill=0.2*'     'numba=0.23*'     'bokeh=0.11*'     'h5py=2.5*'     'pyzmq'     'mkl'
      &&     conda remove --quiet --yes --force qt pyqt &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $CONDA_DIR/bin/pip $CONDA_DIR/bin/pip2
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements/requirements.txt
    - requirements.txt
  - CmdLine:
    - pip --no-cache-dir install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends git     && apt-get
      clean all &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/ucbrise/clipper.git@release-0.2#subdirectory=clipper_admin
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter contrib nbextension install --user
    Name: run
    PrependShell: true
  - CmdLine:
    - $CONDA_DIR/bin/python -m ipykernel install
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}
    Name: env
  - Env:
    - Key: CUDA_ROOT
      Value: /usr/local/cuda/bin
    Name: env
  - Env:
    - Key: CUDA_CUDA_LIBRARY
      Value: /usr/local/cuda/lib64/stubs/libcuda.so
    Name: env
  - Env:
    - Key: CUDA_VISIBLE_DEVICES
      Value: "0"
    Name: env
  - CmdLine:
    - pip --no-cache-dir install     https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.0.1-cp27-none-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Env:
    - Key: KERAS_BACKEND
      Value: tensorflow
    Name: env
  - CmdLine:
    - pip install jupyterlab
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /notebooks
  - Name: volume
    Volumes:
    - /misc
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "6006"
  - Name: expose
    Ports:
    - "8888"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - oracle-instantclient12.1-basic-12.1.0.2.0-1.x86_64.rpm
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm
    - /
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends apt-utils libaio1
      alien && apt-get clean all && rm -rf /var/lib/apt/lists/* && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - alien -i oracle-instantclient12.1-basic-12.1.0.2.0-1.x86_64.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - alien -i oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - alien -i oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm
    Name: run
    PrependShell: true
  - Env:
    - Key: ORACLE_HOME
      Value: /usr/lib/oracle/12.1/client64
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $ORACLE_HOME/lib/:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: PATH
      Value: $ORACLE_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - export ORACLE_HOME=$ORACLE_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH=$PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cx_oracle
    Name: run
    PrependShell: true
  - CmdLine:
    - usr/local/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - mkdir -p $HOME/.ipython/profile_default/startup
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/mplimporthook.py
    - $HOME/.ipython/profile_default/startup/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf.templates
    - conf.templates
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/jupyter_notebook_config.py
    - $HOME/.jupyter/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/notebook.json
    - $HOME/.jupyter/nbconfig/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin
  - CmdLine:
    - chmod +x /usr/local/bin/start-notebook.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - api
    - api
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.yml
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - example.ipynb
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hive-jdbc-0.14.0-standalone.jar
    - /
  From:
    Image: nvidia/cuda:cudnn
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:cudnn
