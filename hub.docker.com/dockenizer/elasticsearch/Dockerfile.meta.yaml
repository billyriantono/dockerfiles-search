MetaArgs: null
Stages:
- BaseName: dockenizer/alpine
  Commands:
  - Maintainer: Jacques Moati <jacques@moati.net>
    Name: maintainer
  - Env:
    - Key: ELASTICSEARCH_VERSION
      Value: 5.1.1
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - apk --update add curl openjdk8-jre &&   curl -o /usr/local/bin/gosu -sSL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64"
      &&   chmod +x /usr/local/bin/gosu &&   curl -o elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz
      -sSL https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz
      &&   tar -xzf elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz &&   mv elasticsearch-${ELASTICSEARCH_VERSION}
      /usr/share/elasticsearch &&   mkdir -p /usr/share/elasticsearch/data /usr/share/elasticsearch/logs
      /usr/share/elasticsearch/config/scripts &&   adduser -DH -s /sbin/nologin elasticsearch
      &&   chown -R elasticsearch:elasticsearch /usr/share/elasticsearch &&   apk
      del --purge curl &&   rm -rf /var/cache/apk/* &&   rm elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Name: workdir
    Path: /usr/share/elasticsearch
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: dockenizer/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM dockenizer/alpine
