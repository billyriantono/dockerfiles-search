MetaArgs: null
Stages:
- BaseName: node:4.2-slim
  Commands:
  - CmdLine:
    - groupadd user && useradd --create-home --home-dir /home/user -g user user
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends
      curl ca-certificates \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: run
    PrependShell: true
  - CmdLine:
    - "arch=\"$(dpkg --print-architecture)\" \t&& set -x \t&& curl -o /usr/local/bin/gosu
      -fSL \"https://github.com/tianon/gosu/releases/download/1.7/gosu-$arch\" \t&&
      curl -o /usr/local/bin/gosu.asc -fSL \"https://github.com/tianon/gosu/releases/download/1.7/gosu-$arch.asc\"
      \t&& gpg --verify /usr/local/bin/gosu.asc \t&& rm /usr/local/bin/gosu.asc \t&&
      chmod +x /usr/local/bin/gosu"
    Name: run
    PrependShell: true
  - Env:
    - Key: GHOST_SOURCE
      Value: /usr/src/ghost
    Name: env
  - Name: workdir
    Path: $GHOST_SOURCE
  - Env:
    - Key: GHOST_VERSION
      Value: 0.11.2
    Name: env
  - CmdLine:
    - "buildDeps=' \t\tgcc \t\tmake \t\tpython \t\tunzip \t' \t&& set -x \t&& apt-get
      update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*
      \t&& curl -sSL \"https://ghost.org/archives/ghost-${GHOST_VERSION}.zip\" -o
      ghost.zip \t&& unzip ghost.zip \t&& npm install --production \t&& apt-get purge
      -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false
      $buildDeps \t&& rm ghost.zip \t&& npm cache clean \t&& rm -rf /tmp/npm*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GHOST_CONTENT
      Value: /var/ghost
    Name: env
  - CmdLine:
    - mkdir -p "$GHOST_CONTENT" && chown -R user:user "$GHOST_CONTENT"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $GHOST_CONTENT
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - rm -rf /usr/src/ghost/config.js /usr/src/ghost/config.example.js
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.example.js
    - /usr/src/ghost/
  - CmdLine:
    - chmod a+x /start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2368"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: node:4.2-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:4.2-slim
