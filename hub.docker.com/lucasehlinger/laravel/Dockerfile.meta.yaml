MetaArgs: null
Stages:
- BaseName: php:7.1-apache
  Commands:
  - Maintainer: Lucas Ehlinger <lucas.ehlinger@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends         openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mbstring
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install tokenizer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends         libxml2-dev     && docker-php-ext-install
      xml
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install iconv
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends         libmcrypt-dev     && docker-php-ext-install
      -j$(nproc)         mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends         libfreetype6-dev         libjpeg62-turbo-dev     &&
      docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     &&
      docker-php-ext-install -j$(nproc) gd
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer     && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig     && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { echo 'Invalid installer' . PHP_EOL; exit(1); }"     && php /tmp/composer-setup.php
      --install-dir=/bin --filename=composer     && rm /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri -e 's!/var/www/html!/home/public!g' /etc/apache2/sites-available/*.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri -e 's!/var/www/!/home/!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "BUILD_DEPENDENCIES=\"autoconf\"     DEV_DEPENDENCIES=\"libcurl4-gnutls-dev
      \     \t    libicu-dev      \t    libmcrypt-dev      \t    libvpx-dev      \t
      \   libjpeg-dev      \t    libxpm-dev      \t    zlib1g-dev      \t    libfreetype6-dev
      \     \t    libxml2-dev      \t    libexpat1-dev      \t    libbz2-dev      \t
      \   libgmp3-dev      \t    libldap2-dev      \t    unixodbc-dev      \t    libpq-dev
      \     \t    libsqlite3-dev      \t    libaspell-dev      \t    libsnmp-dev      \t
      \   libpcre3-dev     \t    libtidy-dev     \t    openssh-client     \t    git
      \    \t    zip     \t    unzip\"     && docker-php-source extract     && apt-get
      update && apt-get install -y         $BUILD_DEPENDENCIES         $DEV_DEPENDENCIES
      \    && docker-php-ext-install mbstring mcrypt pdo_mysql pdo_pgsql curl json
      intl gd xml zip bz2 opcache bcmath soap tidy     && pecl install xdebug     &&
      docker-php-ext-enable xdebug     && php -v     && docker-php-source delete     &&
      exit $RESULT"
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://phar.phpunit.de/phpunit.phar','/tmp/phpunit.phar');"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tmp/phpunit.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /tmp/phpunit.phar /usr/local/bin/phpunit
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install cron -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home
  From:
    Image: php:7.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-apache
