{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Michael Mitchell \u003cmmitchel@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386     \u0026\u0026 apt-get update -yq     \u0026\u0026 apt-get upgrade -yq     \u0026\u0026 apt-get install -yq --no-install-recommends build-essential bzip2 cpio curl python unzip wget     libc6:i386 libx11-6:i386 libxext6:i386 libstdc++6:i386 libexpat1:i386     libxext6 libxrender1 libxtst6 libgtk2.0-0 libxslt1.1 libncurses5-dev bzip2 \tunzip \txz-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fSL -A \"Mozilla/4.0\" -o /tmp/xc8.run \"http://www.microchip.com/mplabxc8linux\"     \u0026\u0026 chmod a+x /tmp/xc8.run     \u0026\u0026 /tmp/xc8.run --mode unattended --unattendedmodeui none         --netservername localhost --LicenseType FreeMode --prefix /opt/microchip/xc8     \u0026\u0026 rm /tmp/xc8.run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/microchip/xc8/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fSL -A \"Mozilla/4.0\" -o /tmp/mplabx-installer.tar \"http://www.microchip.com/mplabx-ide-linux-installer\"     \u0026\u0026 tar xf /tmp/mplabx-installer.tar \u0026\u0026 rm /tmp/mplabx-installer.tar     \u0026\u0026 USER=root ./*-installer.sh --nox11         -- --unattendedmodeui none --mode unattended --installdir /opt/microchip/mplabx     \u0026\u0026 rm ./*-installer.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/microchip/mplabx/mplab_ide/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/tmp/.X11-unix"
          ]
        },
        {
          "CmdLine": [
            "useradd user     \u0026\u0026 mkdir -p /home/user/MPLABXProjects     \u0026\u0026 touch /home/user/MPLABXProjects/.directory     \u0026\u0026 chown user:user /home/user/MPLABXProjects"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/user/MPLABXProjects"
          ]
        },
        {
          "CmdLine": [
            "echo 'deb http://httpredir.debian.org/debian jessie-backports main' \u003e /etc/apt/sources.list.d/jessie-backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} \u003e /usr/local/bin/docker-java-home \t\u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u102"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_DEBIAN_VERSION",
              "Value": "8u102-b14.1-1~bpo8+1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CA_CERTIFICATES_JAVA_VERSION",
              "Value": "20140324"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y \t\topenjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\" \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "[ -x /opt/microchip/xc8/bin/xc8 ] \u0026\u0026 xc8 --ver"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}