MetaArgs: null
Stages:
- As: build-env
  BaseName: microsoft/dotnet:2.0-sdk
  Commands:
  - Name: workdir
    Path: /docker-gc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - DockerGC
    - ./
  - CmdLine:
    - dotnet publish -c Release -o out
    Name: run
    PrependShell: true
  From:
    Image: microsoft/dotnet:2.0-sdk
  Name: build-env
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.0-sdk AS build-env
- BaseName: microsoft/dotnet:2.0-runtime
  Commands:
  - Name: workdir
    Path: /docker-gc
  - Chown: ""
    From: build-env
    Name: copy
    SourcesAndDest:
    - /docker-gc/out
    - ./
  - Env:
    - Key: DOCKERGC_DOCKER_ENDPOINT
      Value: unix:///var/run/docker.sock
    Name: env
  - Env:
    - Key: DOCKERGC_EXECUTION_INTERVAL_IN_MINUTES
      Value: "720"
    Name: env
  - Env:
    - Key: DOCKERGC_DOCKER_CLIENT_TIMEOUT_IN_SECONDS
      Value: "180"
    Name: env
  - Env:
    - Key: DOCKERGC_IMAGE_DELETION_ORDER
      Value: ByImageLastTouchDate
    Name: env
  - Env:
    - Key: DOCKERGC_RECYCLING_STRATEGY
      Value: ByDate
    Name: env
  - Env:
    - Key: DOCKERGC_DAYS_BEFORE_DELETION
      Value: "30"
    Name: env
  - Env:
    - Key: DOCKERGC_CONTAINER_STATE_BLACKLIST
      Value: dead,exited
    Name: env
  - Env:
    - Key: DOCKERGC_STATSD_LOGGER_ENABLED
      Value: "False"
    Name: env
  - CmdLine:
    - dotnet
    - DockerGC.dll
    Name: entrypoint
    PrependShell: false
  From:
    Image: microsoft/dotnet:2.0-runtime
  Name: ""
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.0-runtime
