{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "node",
      "BaseName": "node:latest",
      "SourceCode": "FROM node:latest as node",
      "Platform": "",
      "As": "node",
      "From": {
        "Image": "node:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir -p /usr/src/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "yarn.lock",
            "./"
          ]
        },
        {
          "CmdLine": [
            "yarn --pure-lockfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "yarn build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "nginx:latest",
      "SourceCode": "FROM nginx:latest",
      "Platform": "",
      "From": {
        "Image": "nginx:latest"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "node",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/src/app/dist",
            "/usr/share/nginx/html"
          ]
        },
        {
          "CmdLine": [
            "echo 'server {\\n  listen ${PORT};\\n  server_name ${HOST};\\n  location / {\\n    root /usr/share/nginx/html;\\n    index index.html index.htm;\\n    if ($http_x_forwarded_proto = \"http\") {\\n         return 301 https://$server_name$request_uri;\\n    }\\n  }\\n}\\n'\u003e\u003e /etc/nginx/conf.d/nginx.tmpl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOST",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "API_URL",
              "Value": "http://localhost:8000"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "${PORT}"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "sed -i s#%API_URL%#${API_URL}# /usr/share/nginx/html/static/js/app.*.js     \u0026\u0026 envsubst '$$PORT,$$HOST' \u003c /etc/nginx/conf.d/nginx.tmpl \u003e /etc/nginx/conf.d/default.conf     \u0026\u0026 cat /etc/nginx/conf.d/default.conf     \u0026\u0026 nginx -g \"daemon off;\""
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}