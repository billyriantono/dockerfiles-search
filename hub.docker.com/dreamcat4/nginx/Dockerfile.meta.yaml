MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: dreamcat4 <dreamcat4@gmail.com>
    Name: maintainer
  - Env:
    - Key: _clean
      Value: '"rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"'
    Name: env
  - Env:
    - Key: _apt_clean
      Value: '"eval apt-get clean && $_clean"'
    Name: env
  - Env:
    - Key: s6_overlay_version
      Value: '"1.17.1.1"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/just-containers/s6-overlay/releases/download/v${s6_overlay_version}/s6-overlay-amd64.tar.gz
    - /tmp/
  - CmdLine:
    - tar zxf /tmp/s6-overlay-amd64.tar.gz -C / && $_clean
    Name: run
    PrependShell: true
  - Env:
    - Key: S6_LOGGING
      Value: '"1"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/jpetazzo/pipework/archive/master.tar.gz
    - /tmp/pipework-master.tar.gz
  - CmdLine:
    - tar -zxf /tmp/pipework-master.tar.gz -C /tmp && cp /tmp/pipework-master/pipework
      /sbin/ && $_clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62  &&
      echo "deb http://nginx.org/packages/mainline/ubuntu xenial nginx" >> /etc/apt/sources.list  &&
      apt-get update && apt-get install -y ca-certificates nginx && $_apt_clean
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log  && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod -o -g 8080 nginx  && usermod -o -u 8080 -g nginx --shell /bin/sh -d
      /www nginx  && install -o nginx -g nginx -d /www /ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mime.types
    - /etc/nginx/mime.types
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default
    - /etc/nginx/sites-enabled/default
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default-ssl
    - /etc/nginx/sites-available/default-ssl
  - Env:
    - Key: S6_LOGGING
      Value: '"0"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - services.d
    - /etc/services.d
  - Name: volume
    Volumes:
    - /www
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
