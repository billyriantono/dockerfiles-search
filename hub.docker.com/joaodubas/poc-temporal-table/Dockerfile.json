{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Joao Paulo Dubas \u003cjoao.dubas@gmail.com\u003e\""
            },
            {
              "Key": "version",
              "Value": "\"1.0\""
            },
            {
              "Key": "description",
              "Value": "\"POC using django and temporal tables to handle accounting app.\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "groupadd -r account --gid 1000     \u0026\u0026 useradd -r -g account --uid=1000 account"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_URL",
              "Value": "\"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         ca-certificates         wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 wget -O         /usr/local/bin/gosu         \"$GOSU_URL/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O         /usr/local/bin/gosu.asc         \"$GOSU_URL/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y locales     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/src"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/src"
        },
        {
          "CmdLine": [
            "python"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}