MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Joao Paulo Dubas "joao.dubas@gmail.com"
    Name: maintainer
  - CmdLine:
    - apt-get -y -qq --force-yes update     && apt-get -y -qq --force-yes install         linux-headers-generic         software-properties-common     &&
      add-apt-repository -y ppa:fcwu-tw/ppa     && apt-get -y -qq --force-yes update     &&
      apt-get -y -qq --force-yes install         build-essential         locales         python-setuptools         python-dev         ruby-dev         vim         vim-nox         vim-scripts         tmux         git         make         cmake         curl         zsh         openssl         sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen     && echo "pt_BR.UTF-8 UTF-8"
      >> /etc/locale.gen     && locale-gen --purge --lang en_US     && locale-gen
      --purge --lang pt_BR     && locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - easy_install pip     && pip install virtualenv virtualenvwrapper
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 999 docker     && useradd         -G sudo,docker         -d /home/app         -m         -p
      $(openssl passwd 123app4)         -s $(which zsh)         app
    Name: run
    PrependShell: true
  - Name: user
    User: app
  - Env:
    - Key: HOME
      Value: /home/app
    Name: env
  - Env:
    - Key: HOMESRC
      Value: ${HOME}/local/src
    Name: env
  - Env:
    - Key: HOMEBIN
      Value: ${HOME}/local/bin
    Name: env
  - CmdLine:
    - mkdir -p $HOME/public     && mkdir -p $HOMESRC     && mkdir -p $HOMEBIN
    Name: run
    PrependShell: true
  - Env:
    - Key: JS_VERSION
      Value: v5.6.0
    Name: env
  - Env:
    - Key: JS_FILENAME
      Value: nodejs-${JS_VERSION}-linux-x64
    Name: env
  - Env:
    - Key: JS_TARNAME
      Value: ${JS_FILENAME}.tar.xz
    Name: env
  - Env:
    - Key: JS_URL
      Value: https://nodejs.org/dist/${JS_VERSION}/${JS_TARNAME}
    Name: env
  - CmdLine:
    - curl -L ${JS_URL} | tar -C ${HOMESRC} -xJf -     && ln -s ${HOMESRC}/${JS_FILENAME}
      ${HOMESRC}/nodejs     && ln -s ${HOMESRC}/nodejs/bin/* ${HOMEBIN}/
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: ${HOMESRC}/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: ${HOME}/local/go
    Name: env
  - Env:
    - Key: GOBIN
      Value: ${GOPATH}/bin
    Name: env
  - Env:
    - Key: GO_VERSION
      Value: "1.6"
    Name: env
  - Env:
    - Key: GO_FILENAME
      Value: go${GO_VERSION}.linux-amd64
    Name: env
  - Env:
    - Key: GO_TARNAME
      Value: ${GO_FILENAME}.tar.gz
    Name: env
  - Env:
    - Key: GO_URL
      Value: https://storage.googleapis.com/golang/${GO_TARNAME}
    Name: env
  - CmdLine:
    - curl -L ${GO_URL} | tar -C ${HOMESRC} -xzf -     && ln -s ${HOMESRC}/go/bin/*
      ${HOMEBIN}/     && mkdir -p ${GOPATH}/src     && mkdir -p ${GOPATH}/bin     &&
      mkdir -p ${GOPATH}/pkg
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTFILE
      Value: ${HOMESRC}/dotfiles
    Name: env
  - CmdLine:
    - git clone https://github.com/joaodubas/webfaction-dotfiles.git         ${DOTFILE}     &&
      cd ${DOTFILE}     && git submodule update --init --recursive
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ${DOTFILE}/.bash_aliases ${HOME}     && ln -s ${DOTFILE}/.bash_personal
      ${HOME}     && ln -s ${DOTFILE}/.tmux.conf ${HOME}     && ln -s ${DOTFILE}/.vimrc
      ${HOME}     && ln -s ${DOTFILE}/.vim ${HOME}     && ln -s ${DOTFILE}/.gitignore_global
      ${HOME}     && cp ${DOTFILE}/.gitconfig ${HOME}/
    Name: run
    PrependShell: true
  - CmdLine:
    - printf 'y' | vim +BundleInstall +qall     && echo "install command t"     &&
      cd ${DOTFILE}/.vim/bundle/Command-T/ruby/command-t     && ruby extconf.rb     &&
      make     && echo "install tern"    && cd ${DOTFILE}/.vim/bundle/tern_for_vim     &&
      ${HOMEBIN}/npm install     && echo "install ycm"     && cd ${DOTFILE}/.vim/bundle/YouCompleteMe     &&
      sh install.sh     && echo "install vim-go deps"     && printf 'y' | vim +GoInstall
      +qall
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robbyrussell/oh-my-zsh.git         ${HOME}/.oh-my-zsh     &&
      cp $HOME/.oh-my-zsh/templates/zshrc.zsh-template ${HOME}/.zshrc     && echo
      '\n' >> ${HOME}/.zshrc     && echo '# local resources' >> ${HOME}/.zshrc     &&
      echo 'source $HOME/.bash_aliases' >> ${HOME}/.zshrc
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.6.0
    Name: env
  - Env:
    - Key: COMPOSE_URL
      Value: https://github.com/docker/compose/releases/download
    Name: env
  - CmdLine:
    - curl         -L ${COMPOSE_URL}/${COMPOSE_VERSION}/docker-compose-Linux-x86_64         -o
      ${HOMEBIN}/docker-compose     && chmod 750 ${HOMEBIN}/docker-compose     &&
      chown app:app ${HOMEBIN}/docker-compose
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - Name: volume
    Volumes:
    - /home/app/public
  - Name: workdir
    Path: /home/app
  - CmdLine:
    - /usr/bin/zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
