{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ilya@ilyaglotov.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "TZ",
          "Name": "arg",
          "Value": "Europe/London"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CFLAGS",
              "Value": "\"$CFLAGS -D_GNU_SOURCE\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update   \u0026\u0026 apk add python              python-dev              py-pip              xz-dev              zeromq                \u0026\u0026 apk add --virtual .temp                        build-base                        git                        linux-headers                        tzdata                          \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 adduser -D plaso     \u0026\u0026 cp /usr/share/zoneinfo/$TZ /etc/localtime   \u0026\u0026 echo $TZ \u003e /etc/timezone     \u0026\u0026 git clone --branch=master                --depth=1                https://github.com/log2timeline/plaso.git                /plaso   \u0026\u0026 cd /plaso   \u0026\u0026 pip install -r requirements.txt   \u0026\u0026 pip install elasticsearch   \u0026\u0026 python setup.py install     \u0026\u0026 apk del .temp   \u0026\u0026 rm -rf /root/.cache   \u0026\u0026 rm -rf /plaso"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "user",
          "User": "plaso"
        },
        {
          "CmdLine": [
            "log2timeline.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}