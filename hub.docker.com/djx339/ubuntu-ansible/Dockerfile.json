{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Daniel D \u003cdjx339@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         curl         openssh-server         sudo         wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init-fake.conf",
            "/etc/init/fake-container-events.conf"
          ]
        },
        {
          "CmdLine": [
            "rm /usr/sbin/policy-rc.d; \trm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/update-rc.d -f ondemand remove; \tfor f in \t\t/etc/init/u*.conf \t\t/etc/init/mounted-dev.conf \t\t/etc/init/mounted-proc.conf \t\t/etc/init/mounted-run.conf \t\t/etc/init/mounted-tmp.conf \t\t/etc/init/mounted-var.conf \t\t/etc/init/hostname.conf \t\t/etc/init/networking.conf \t\t/etc/init/tty*.conf \t\t/etc/init/plymouth*.conf \t\t/etc/init/hwclock*.conf \t\t/etc/init/module*.conf\t; do \t\tdpkg-divert --local --rename --add \"$f\"; \tdone; \techo '# /lib/init/fstab: cleared out for bare-bones Docker' \u003e /lib/init/fstab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/^session\\s+required\\s+pam_loginuid.so$/session optional pam_loginuid.so/' /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:docker.io' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.ssh/     \u0026\u0026 curl -skLo /root/.ssh/authorized_keys https://raw.githubusercontent.com/djx339/docker-ubuntu-ansible/master/ansible_docker.key.pub     \u0026\u0026 chmod 700 /root/.ssh     \u0026\u0026 chmod 640 /root/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         software-properties-common     \u0026\u0026 apt-add-repository -y ppa:ansible/ansible     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y ansible python-pip     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 pip install jmespath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '[local]\\nlocalhost ansible_connection=local' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}