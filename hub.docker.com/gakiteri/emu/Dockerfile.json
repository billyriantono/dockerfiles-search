{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gakiteri/emu:ubuntu",
      "SourceCode": "FROM gakiteri/emu:ubuntu",
      "Platform": "",
      "From": {
        "Image": "gakiteri/emu:ubuntu"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get install -y gnupg software-properties-common ca-certificates   \u0026\u0026 curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl   \u0026\u0026 chmod +x ./kubectl   \u0026\u0026 mv ./kubectl /usr/local/bin/kubectl   \u0026\u0026 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_1.3.1.deb   \u0026\u0026 sudo dpkg -i minikube_1.3.1.deb   \u0026\u0026 rm minikube_1.3.1.deb   \u0026\u0026 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -   \u0026\u0026 add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"   \u0026\u0026 apt-get install -y docker-ce docker-ce-cli containerd.io   \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "minikube config set vm-driver none   \u0026\u0026 apt-get install -y --no-install-recommends ebtables ethtool socat   \u0026\u0026 echo \"#!/bin/sh\" \u003e \\autorun.sh   \u0026\u0026 echo 'echo \"pass\\\\npass\\\\n\" | passwd root' \u003e\u003e /autorun.sh   \u0026\u0026 echo \"rm /autorun.sh\" \u003e\u003e /autorun.sh   \u0026\u0026 chmod +x /autorun.sh   \u0026\u0026 /autorun.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}