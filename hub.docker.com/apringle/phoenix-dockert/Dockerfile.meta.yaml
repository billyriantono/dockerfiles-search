MetaArgs: null
Stages:
- BaseName: node:4.3.0
  Commands:
  - Maintainer: Srinath Janakiraman <me@vjsrinath.com>
    Name: maintainer
  - Env:
    - Key: VERSION
      Value: 1.0.1
    Name: env
  - Env:
    - Key: WORK_DIR
      Value: /srv/www/ludicrum-files
    Name: env
  - Env:
    - Key: PORT
      Value: "4000"
    Name: env
  - Env:
    - Key: REDIS_HOST
      Value: redis
    Name: env
  - Env:
    - Key: REDIS_PORT
      Value: "6379"
    Name: env
  - Env:
    - Key: DB_HOST
      Value: orientdb
    Name: env
  - Env:
    - Key: DB_PORT
      Value: "2424"
    Name: env
  - Env:
    - Key: DB_NAME
      Value: ludicrum
    Name: env
  - Env:
    - Key: THUMBNAIL_DIR
      Value: /srv/tmp/ludicrum-files/thumbnails/
    Name: env
  - Name: expose
    Ports:
    - ${PORT}
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --yes --force-yes install wget
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://www.deb-multimedia.org jessie main non-free" >>/etc/apt/sources.list     &&
      echo "deb-src http://www.deb-multimedia.org jessie main non-free" >>/etc/apt/sources.list     &&
      apt-get update     && apt-get --yes --force-yes install deb-multimedia-keyring     &&
      apt-get update     && apt-get remove ffmpeg     && apt-get --yes --force-yes
      install build-essential libmp3lame-dev libvorbis-dev libtheora-dev libspeex-dev
      yasm pkg-config libfaac-dev libopenjpeg-dev libx264-dev;
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ffmpeg.org/releases/ffmpeg-3.0.tar.bz2     && tar xvjf ffmpeg-3.0.tar.bz2     &&
      cd ffmpeg-3.0     && ./configure --enable-gpl --enable-postproc --enable-swscale
      --enable-avfilter --enable-libmp3lame --enable-libvorbis --enable-libtheora
      --enable-libx264 --enable-libspeex --enable-shared --enable-pthreads --enable-libopenjpeg
      --enable-libfaac --enable-nonfree     && make     && make install;
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${WORK_DIR}     && mkdir -p ${THUMBNAIL_DIR};
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${WORK_DIR}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - ./
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - node
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - app.js
    Name: cmd
    PrependShell: false
  From:
    Image: node:4.3.0
  Name: ""
  Platform: ""
  SourceCode: FROM node:4.3.0
