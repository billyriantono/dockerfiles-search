{
  "MetaArgs": [
    {
      "Key": "BASEIMAGE_VERSION",
      "DefaultValue": "10.0-cudnn7-devel-centos7",
      "ProvidedValue": null,
      "Value": "10.0-cudnn7-devel-centos7"
    }
  ],
  "Stages": [
    {
      "Name": "build_tools",
      "BaseName": "skymindops/jenkins-agent:amd64-centos7",
      "SourceCode": "FROM skymindops/jenkins-agent:amd64-centos7 AS build_tools",
      "Platform": "",
      "As": "build_tools",
      "From": {
        "Image": "skymindops/jenkins-agent:amd64-centos7"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "nvidia/cuda:${BASEIMAGE_VERSION}",
      "SourceCode": "FROM nvidia/cuda:${BASEIMAGE_VERSION}",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:${BASEIMAGE_VERSION}"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build_tools",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt",
            "/opt"
          ]
        },
        {
          "CmdLine": [
            "yum install -y         centos-release-scl-rh         epel-release \u0026\u0026     yum update -y \u0026\u0026     yum install -y         devtoolset-6-toolchain         devtoolset-6-libasan-devel         devtoolset-6-liblsan-devel         devtoolset-7-toolchain         devtoolset-7-libasan-devel         devtoolset-7-liblsan-devel         tar         wget         curl         openssl         ca-certificates         git         rpm-build         java-1.8.0-openjdk-devel         openblas-devel.x86_64         openblas-static.x86_64         which         gtk2-devel         python-argparse         python-pip         python36         python36-devel         python36-setuptools \u0026\u0026     yum clean all \u0026\u0026 rm -rf /var/cache/yum \u0026\u0026     ln -s /opt/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026     pip install --no-cache-dir Cython --install-option=\"--no-cython-compile\" \u0026\u0026     easy_install-3.6 pip \u0026\u0026     pip3 install --upgrade pip \u0026\u0026     pip3 install --no-cache-dir numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd jenkins -g 1001 \u0026\u0026 useradd -d ${HOME} -u 1001 -g 1001 -m jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "CmdLine": [
            "echo 'source /opt/rh/devtoolset-6/enable' \u003e\u003e \"${HOME}/.bashrc\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${PATH}"
            },
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\""
            },
            {
              "Key": "PROTOBUF_HOME",
              "Value": "/opt/protobuf"
            },
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cat"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}