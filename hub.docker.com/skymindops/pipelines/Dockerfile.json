{
  "MetaArgs": [
    {
      "Key": "BASEIMAGE_VERSION",
      "DefaultValue": "7.6.1810",
      "ProvidedValue": null,
      "Value": "7.6.1810"
    }
  ],
  "Stages": [
    {
      "Name": "baseimage",
      "BaseName": "amd64/centos:${BASEIMAGE_VERSION}",
      "SourceCode": "FROM amd64/centos:${BASEIMAGE_VERSION} as BASEIMAGE",
      "Platform": "",
      "As": "baseimage",
      "From": {
        "Image": "amd64/centos:${BASEIMAGE_VERSION}"
      },
      "Commands": null
    },
    {
      "Name": "build_tools",
      "BaseName": "BASEIMAGE",
      "SourceCode": "FROM BASEIMAGE AS BUILD_TOOLS",
      "Platform": "",
      "As": "build_tools",
      "From": {
        "Image": "BASEIMAGE"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum install -y         centos-release-scl-rh         epel-release \u0026\u0026     yum update -y \u0026\u0026     yum install -y         devtoolset-6-toolchain         devtoolset-6-libasan-devel         devtoolset-6-liblsan-devel         tar         curl         openssl         ca-certificates         unzip \u0026\u0026     yum clean all \u0026\u0026 rm -rf /var/cache/yum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/opt/maven"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${M2_HOME} \u0026\u0026     curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz |         tar -xzC ${M2_HOME} --strip-components=1 \u0026\u0026     curl -O http://repo1.maven.org/maven2/io/takari/aether/takari-local-repository/0.11.2/takari-local-repository-0.11.2.jar \u0026\u0026     mv takari-local-repository-0.11.2.jar ${M2_HOME}/lib/ext \u0026\u0026     curl -O http://repo1.maven.org/maven2/io/takari/takari-filemanager/0.8.3/takari-filemanager-0.8.3.jar \u0026\u0026     mv takari-filemanager-0.8.3.jar ${M2_HOME}/lib/ext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/sbt \u0026\u0026     curl -fsSL https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz |     tar -xzC /opt/sbt --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/cmake \u0026\u0026     curl -fsSL https://cmake.org/files/v3.9/cmake-3.9.0-Linux-x86_64.tar.gz |     tar -xzC /opt/cmake --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source /opt/rh/devtoolset-6/enable \u0026\u0026     curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz     | tar xz \u0026\u0026     cd protobuf-3.5.1 \u0026\u0026     ./configure --prefix=/opt/protobuf \u0026\u0026     make -j2 \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf protobuf-3.5.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026     curl -s http://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -o android-ndk-r16b-linux-x86_64.zip \u0026\u0026     unzip -q android-ndk-r16b-linux-x86_64.zip -d /opt \u0026\u0026     rm -f android-ndk-r16b-linux-x86_64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "base_builder_image",
      "BaseName": "BASEIMAGE",
      "SourceCode": "FROM BASEIMAGE AS BASE_BUILDER_IMAGE",
      "Platform": "",
      "As": "base_builder_image",
      "From": {
        "Image": "BASEIMAGE"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "BUILD_TOOLS",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt",
            "/opt"
          ]
        },
        {
          "CmdLine": [
            "yum install -y         centos-release-scl-rh         epel-release \u0026\u0026     yum update -y \u0026\u0026     yum install -y         devtoolset-6-toolchain         devtoolset-6-libasan-devel         devtoolset-6-liblsan-devel         devtoolset-7-toolchain         devtoolset-7-libasan-devel         devtoolset-7-liblsan-devel         tar         wget         curl         openssl         ca-certificates         git         rpm-build         java-1.8.0-openjdk-devel         which         gtk2-devel \u0026\u0026     yum clean all \u0026\u0026 rm -rf /var/cache/yum \u0026\u0026     ln -s /opt/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd jenkins -g 1000 \u0026\u0026 useradd -d $HOME -u 1000 -g 1000 -m jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JENKINS_AGENT_VERSION",
          "Name": "arg",
          "Value": "3.29"
        },
        {
          "CmdLine": [
            "curl --create-dirs -sSLo /usr/share/jenkins/slave.jar     https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${JENKINS_AGENT_VERSION}/remoting-${JENKINS_AGENT_VERSION}.jar \u0026\u0026     chmod 755 /usr/share/jenkins \u0026\u0026     chmod 644 /usr/share/jenkins/slave.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Key": "JENKINS_AGENT_WORKDIR",
          "Name": "arg",
          "Value": "/home/jenkins/agent"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_AGENT_WORKDIR",
              "Value": "${JENKINS_AGENT_WORKDIR}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /home/jenkins/.jenkins \u0026\u0026 mkdir -p ${JENKINS_AGENT_WORKDIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins/.jenkins"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${JENKINS_AGENT_WORKDIR}"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave",
            "/usr/local/bin/jenkins-slave"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${PATH}"
            },
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\""
            },
            {
              "Key": "ANDROID_NDK_HOME",
              "Value": "/opt/android-ndk-r16b"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_NDK",
              "Value": "${ANDROID_NDK_HOME}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}