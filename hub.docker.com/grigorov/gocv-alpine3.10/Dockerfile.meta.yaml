MetaArgs: null
Stages:
- BaseName: golang:1.12-alpine3.10
  Commands:
  - Env:
    - Key: OPENCV_VERSION
      Value: 4.1.2
    Name: env
  - Env:
    - Key: BUILD
      Value: '"ca-certificates          musl          alpine-sdk          make          gcc          libc-dev          linux-headers          libjpeg-turbo          libpng          tiff          pkgconf          openblas"'
    Name: env
  - Env:
    - Key: IMG_MAGICK_BUILD
      Value: '"pkgconfig libx11 lcms2 libbz2 glib libintl"'
    Name: env
  - Env:
    - Key: DEV
      Value: '"binutils          clang clang-dev g++ cmake git wget          openblas-dev
        musl-dev libjpeg-turbo-dev          libpng-dev tiff-dev"'
    Name: env
  - Env:
    - Key: IMG_MAGICK_DEV
      Value: '"jpeg-dev tiff-dev giflib-dev glib-dev libx11-dev lcms2-dev patch"'
    Name: env
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: /usr/local/lib64/pkgconfig
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib64
    Name: env
  - Env:
    - Key: CGO_CPPFLAGS
      Value: -I/usr/local/include
    Name: env
  - Env:
    - Key: CGO_CXXFLAGS
      Value: '"--std=c++1z"'
    Name: env
  - Env:
    - Key: CGO_LDFLAGS
      Value: '"-L/usr/local/lib -lopencv_core -lopencv_face -lopencv_imgproc -lopencv_imgcodecs"'
    Name: env
  - Env:
    - Key: IMAGEMAGICK_VERSION
      Value: 6.9.8-3
    Name: env
  - Env:
    - Key: UFRAW_VERSION
      Value: '"0.22"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ufraw.patch
    - /
  - CmdLine:
    - "apk update &&     apk add --no-cache ${BUILD} ${IMG_MAGICK_BUILD} &&     apk
      add --virtual dev-dependencies --no-cache ${DEV} ${IMG_MAGICK_DEV} &&     ln
      -vfs /usr/include/libpng16 /usr/include/libpng &&     ln -vfs /usr/include/locale.h
      /usr/include/xlocale.h &&     mkdir /tmp/opencv &&     cd /tmp/opencv &&     wget
      -O opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
      &&     unzip opencv.zip &&     wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
      &&     unzip opencv_contrib.zip &&     mkdir /tmp/opencv/opencv-${OPENCV_VERSION}/build
      && cd /tmp/opencv/opencv-${OPENCV_VERSION}/build &&     cmake     -D CMAKE_BUILD_TYPE=RELEASE
      \    -D CMAKE_INSTALL_PREFIX=/usr/local     -D CMAKE_C_COMPILER=/usr/bin/clang
      \    -D CMAKE_CXX_COMPILER=/usr/bin/clang++     -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv/opencv_contrib-${OPENCV_VERSION}/modules
      \    -D INSTALL_C_EXAMPLES=NO     -D INSTALL_PYTHON_EXAMPLES=NO     -D BUILD_ANDROID_EXAMPLES=NO
      \    -D BUILD_DOCS=NO     -D BUILD_TESTS=NO     -D BUILD_PERF_TESTS=NO     -D
      BUILD_EXAMPLES=NO     -D WITH_JASPER=OFF     -D WITH_FFMPEG=NO     -D BUILD_opencv_java=NO
      \    -D BUILD_opencv_python=NO     -D BUILD_opencv_python2=NO     -D BUILD_opencv_python3=NO
      \    -D OPENCV_GENERATE_PKGCONFIG=YES .. &&     make -j4 &&     make install
      &&     cd && rm -rf /tmp/opencv &&     go get -u -d gocv.io/x/gocv && go run
      ${GOPATH}/src/gocv.io/x/gocv/cmd/version/main.go &&     cd &&         mkdir
      /tmp/imagick && cd /tmp/imagick && \twget -O imagick.tar.gz https://github.com/ImageMagick/ImageMagick6/archive/${IMAGEMAGICK_VERSION}.tar.gz
      && \ttar xvzf imagick.tar.gz && \tcd ImageMagick* && \t./configure \t    --without-magick-plus-plus
      \t    --without-perl \t    --disable-openmp \t    --with-gvc=no \t    --without-threads
      \t    --disable-docs && \tmake -j$(nproc) && make install && \tldconfig /usr/local/lib
      &&     cd / && rm -rf /tmp/imagick &&     curl -s --fail -L https://sourceforge.net/projects/ufraw/files/ufraw/ufraw-${UFRAW_VERSION}/ufraw-${UFRAW_VERSION}.tar.gz/download
      | tar -C /opt -xz &&          patch /opt/ufraw-${UFRAW_VERSION}/dcraw.cc /ufraw.patch
      &&          cd /opt/ufraw-${UFRAW_VERSION} &&          ./configure --prefix=/usr/local
      --disable-dependency-tracking --without-gtk --without-gimp &&          make
      &&          make install &&     cd / && rm -rf /opt/ufraw-${UFRAW_VERSION} &&
      \    apk del dev-dependencies &&     rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.12-alpine3.10
