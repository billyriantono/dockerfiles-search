{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster",
      "SourceCode": "FROM debian:buster",
      "Platform": "",
      "From": {
        "Image": "debian:buster"
      },
      "Commands": [
        {
          "Maintainer": "info@viperdev.io",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            },
            {
              "Key": "ANDROID_SDK_REV",
              "Value": "4333796"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "6.12.0"
            },
            {
              "Key": "IONIC_VERSION",
              "Value": "5.4.0"
            },
            {
              "Key": "CORDOVA_VERSION",
              "Value": "8.0.0"
            },
            {
              "Key": "YARN_VERSION",
              "Value": "1.19.1"
            },
            {
              "Key": "GRADLE_VERSION",
              "Value": "6.0"
            },
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y git wget curl unzip build-essential apt-transport-https ca-certificates dirmngr gnupg software-properties-common     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 npm install -g npm@\"$NPM_VERSION\" cordova@\"$CORDOVA_VERSION\" ionic@\"$IONIC_VERSION\" yarn@\"$YARN_VERSION\"     \u0026\u0026 mkdir Sources \u0026\u0026 mkdir -p /root/.cache/yarn/     \u0026\u0026 npm cache clear --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget -O /tmp/google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb     \u0026\u0026 dpkg --unpack /tmp/google-chrome.deb     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -f -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -f /tmp/google-chrome.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -qqy install fonts-ipafont-gothic xfonts-100dpi xfonts-75dpi xfonts-cyrillic xfonts-scalable libfreetype6 libfontconfig     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 curl -sL https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -     \u0026\u0026 add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y adoptopenjdk-8-hotspot     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 echo ANDROID_HOME=\"${ANDROID_HOME}\" \u003e\u003e /etc/environment     \u0026\u0026 dpkg --add-architecture i386     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y expect ant libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses6 lib32z1 qemu-kvm kmod     \u0026\u0026 mkdir /opt/android-sdk-linux \u0026\u0026 cd /opt/android-sdk-linux     \u0026\u0026 wget -O /tmp/android-tools-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-\"$ANDROID_SDK_REV\".zip     \u0026\u0026 unzip -q /tmp/android-tools-sdk.zip     \u0026\u0026 rm -f /tmp/android-tools-sdk.zip     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir  /opt/gradle \u0026\u0026 cd /opt/gradle     \u0026\u0026 wget -O /tmp/gradle.zip https://services.gradle.org/distributions/gradle-\"$GRADLE_VERSION\"-bin.zip     \u0026\u0026 unzip -q /tmp/gradle.zip     \u0026\u0026 rm -f /tmp/gradle.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:/opt/gradle/gradle-${GRADLE_VERSION}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yes Y | ${ANDROID_HOME}/tools/bin/sdkmanager --licenses     \u0026\u0026 cordova telemetry off"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "Sources"
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "8100"
          ]
        },
        {
          "CmdLine": [
            "ionic",
            "serve"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}