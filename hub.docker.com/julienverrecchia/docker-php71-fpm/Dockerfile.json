{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm-jessie",
      "SourceCode": "FROM php:7.1-fpm-jessie",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm-jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         apt-utils         apt-transport-https         libmemcached-dev         libz-dev         libpq-dev         libjpeg-dev         libpng12-dev         libfreetype6-dev         libssl-dev         libmcrypt-dev         libpq-dev         libldap2-dev         openssl         libicu-dev         libxml2-dev         zlib1g-dev         ssmtp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/     \u0026\u0026 docker-php-ext-install ldap     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-install mbstring mcrypt pcntl pdo_pgsql intl xmlrpc     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure soap --enable-soap     \u0026\u0026 docker-php-ext-install soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install memcached-3.0.4 \u0026\u0026     docker-php-ext-enable memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure opcache --enable-opcache     \u0026\u0026 docker-php-ext-install opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/opcache.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "docker-php-ext-configure intl --enable-intl     \u0026\u0026 docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/instantclient-sdk-12.2.zip http://bit.ly/2Bab3NM     \u0026\u0026 curl -L -o /tmp/instantclient-basic-12.2.zip http://bit.ly/2mBFHdA"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y unzip build-essential libaio1 re2c \u0026\u0026     ln -s /usr/include/php5 /usr/include/php \u0026\u0026     mkdir -p /opt/oracle/instantclient \u0026\u0026     unzip -q /tmp/instantclient-basic-12.2.zip -d /opt/oracle \u0026\u0026     mv /opt/oracle/instantclient_12_2 /opt/oracle/instantclient/lib \u0026\u0026     unzip -q /tmp/instantclient-sdk-12.2.zip -d /opt/oracle \u0026\u0026     mv /opt/oracle/instantclient_12_2/sdk/include /opt/oracle/instantclient/include \u0026\u0026     ln -s /opt/oracle/instantclient/lib/libclntsh.so.12.1 /opt/oracle/instantclient/lib/libclntsh.so \u0026\u0026     ln -s /opt/oracle/instantclient/lib/libocci.so.12.1 /opt/oracle/instantclient/lib/libocci.so \u0026\u0026     echo /opt/oracle/instantclient/lib \u003e\u003e /etc/ld.so.conf \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls -l /opt/oracle/instantclient/lib \u0026\u0026 echo 'instantclient,/opt/oracle/instantclient/lib' | pecl install oci8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/oci8.ini",
            "/usr/local/etc/php/conf.d/20-oci8.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/oci8-test.php",
            "/tmp/oci8-test.php"
          ]
        },
        {
          "CmdLine": [
            "php /tmp/oci8-test.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -     \u0026\u0026 curl https://packages.microsoft.com/config/debian/8/prod.list \u003e /etc/apt/sources.list.d/mssql-release.list     \u0026\u0026 apt-get update     \u0026\u0026 ACCEPT_EULA=Y apt-get install -y --no-install-recommends debconf-utils gcc build-essential g++ unixodbc-dev msodbcsql mssql-tools locales     \u0026\u0026 echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' \u003e\u003e ~/.bashrc     \u0026\u0026 /bin/bash -c \"source ~/.bashrc\"     \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen     \u0026\u0026 locale-gen     \u0026\u0026 pecl install sqlsrv-4.1.6.1     \u0026\u0026 docker-php-ext-enable sqlsrv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./ext/ioncube_loader_lin_7.1.so",
            "/usr/local/lib/php/extensions/no-debug-non-zts-20160303/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/ioncube.ini",
            "/usr/local/etc/php/conf.d/00-ioncube.ini"
          ]
        },
        {
          "CmdLine": [
            "sed -e '/9000/ s/^;*/;/' -i /usr/local/etc/php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -e '/9000/ s/^;*/;/' -i /usr/local/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/php71.pool.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/custom.php.ini",
            "/usr/local/etc/php/conf.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/ssmtp.conf",
            "/etc/ssmtp/ssmtp.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/php-ssmtp.ini",
            "/usr/local/etc/php/conf.d/php-smtp.ini"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure sockets     \u0026\u0026 docker-php-ext-install sockets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "EXPECTED_SIGNATURE=\"$(wget -q -O - https://composer.github.io/installer.sig)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ACTUAL_SIGNATURE=\"$(php -r \"echo hash_file('SHA384', 'composer-setup.php');\")\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ]; then \u003e\u00262 echo 'ERROR: Invalid installer signature' ; rm composer-setup.php ; exit 1; fi;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php composer-setup.php --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "RESULT=$?"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm composer-setup.php \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit-6.5.phar     \u0026\u0026 chmod +x phpunit-6.5.phar     \u0026\u0026 mv phpunit-6.5.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -O php-cs-fixer     \u0026\u0026 chmod a+x php-cs-fixer     \u0026\u0026 mv php-cs-fixer /usr/local/bin/php-cs-fixer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Julien Verrecchia\""
            },
            {
              "Key": "version",
              "Value": "\"2018.07.18\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}