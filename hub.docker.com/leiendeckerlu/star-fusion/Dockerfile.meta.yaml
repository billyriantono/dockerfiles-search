MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: bhaas@broadinstitute.org
    Name: maintainer
  - CmdLine:
    - "apt-get update && apt-get install -y gcc g++ perl python automake make                                        wget
      curl libdb-dev \t\t\t\t       bzip2 zlibc zlib1g zlib1g-dev  default-jre                        python-setuptools
      python-dev build-essential \t\t\t\t       unzip libbz2-dev  liblzma-dev &&     apt-get
      clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://cpanmin.us | perl - App::cpanminus
    Name: run
    PrependShell: true
  - Env:
    - Key: SRC
      Value: /usr/local/src
    Name: env
  - Env:
    - Key: BIN
      Value: /usr/local/bin
    Name: env
  - Env:
    - Key: DATA
      Value: /usr/local/data
    Name: env
  - CmdLine:
    - mkdir $DATA
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm install PerlIO::gzip
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cpanm install Set::IntervalTree  # now included w/ STAR-Fusion'
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm install DB_File
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm install URI::Escape
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm install Carp::Assert
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm install JSON::XS.pm
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC
  - CmdLine:
    - wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.5.0/ncbi-blast-2.5.0+-x64-linux.tar.gz
      &&     tar xvf ncbi-blast-2.5.0+-x64-linux.tar.gz &&         cp ncbi-blast-2.5.0+/bin/*
      $BIN &&             rm -r ncbi-blast-2.5.0+
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC
  - CmdLine:
    - wget http://eddylab.org/software/hmmer3/3.1b2/hmmer-3.1b2-linux-intel-x86_64.tar.gz
      &&       tar zxvf hmmer-3.1b2-linux-intel-x86_64.tar.gz  &&       cd hmmer-3.1b2-linux-intel-x86_64
      &&       cp binaries/* /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: SAMTOOLS_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - SAMTOOLS_URL="https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2"
      &&    cd $SRC &&    wget $SAMTOOLS_URL &&    tar xvf samtools-${SAMTOOLS_VERSION}.tar.bz2
      &&    cd samtools-${SAMTOOLS_VERSION}/htslib-${SAMTOOLS_VERSION} && ./configure
      && make && make install &&    cd ../ && ./configure --without-curses && make
      && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: TRINITY_VERSION
      Value: 2.6.6
    Name: env
  - CmdLine:
    - TRINITY_URL="https://github.com/trinityrnaseq/trinityrnaseq/archive/Trinity-v${TRINITY_VERSION}.tar.gz"
      &&    cd $SRC &&    wget $TRINITY_URL &&    tar xvf Trinity-v${TRINITY_VERSION}.tar.gz
      &&    cd trinityrnaseq-Trinity-v${TRINITY_VERSION} && make
    Name: run
    PrependShell: true
  - Env:
    - Key: TRINITY_HOME
      Value: /usr/local/src/trinityrnaseq-Trinity-v${TRINITY_VERSION}
    Name: env
  - Name: workdir
    Path: $SRC
  - CmdLine:
    - wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.3.1/bowtie2-2.3.3.1-linux-x86_64.zip/download
      -O bowtie2-2.3.3.1-linux-x86_64.zip &&     unzip bowtie2-2.3.3.1-linux-x86_64.zip
      &&     mv bowtie2-2.3.3.1-linux-x86_64/bowtie2* $BIN &&     rm *.zip &&     rm
      -r bowtie2-2.3.3.1-linux-x86_64
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC
  - CmdLine:
    - wget https://github.com/gmarcais/Jellyfish/releases/download/v2.2.7/jellyfish-2.2.7.tar.gz
      &&     tar xvf jellyfish-2.2.7.tar.gz &&     cd jellyfish-2.2.7/ &&     ./configure
      && make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC
  - CmdLine:
    - wget https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz
      &&     tar xvf Salmon-0.9.1_linux_x86_64.tar.gz &&     ln -s $SRC/Salmon-latest_linux_x86_64/bin/salmon
      $BIN/.
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC
  - Env:
    - Key: STAR_FUSION_VERSION
      Value: 1.4.0
    Name: env
  - Env:
    - Key: STARF_CHECKOUT
      Value: f08b71f
    Name: env
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/STAR-Fusion/STAR-Fusion.git &&      cd
      STAR-Fusion &&      git checkout $STARF_CHECKOUT &&      make
    Name: run
    PrependShell: true
  - Env:
    - Key: STAR_FUSION_HOME
      Value: $SRC/STAR-Fusion
    Name: env
  - Env:
    - Key: STAR_VERSION
      Value: 2.6.0a
    Name: env
  - CmdLine:
    - STAR_URL="https://github.com/alexdobin/STAR/archive/${STAR_VERSION}.tar.gz"
      &&    wget -P $SRC $STAR_URL &&    tar -xvf $SRC/${STAR_VERSION}.tar.gz -C $SRC
      &&     mv $SRC/STAR-${STAR_VERSION}/bin/Linux_x86_64_static/STAR /usr/local/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: GMAP_VERSION
      Value: "2017-11-15"
    Name: env
  - Name: workdir
    Path: $SRC
  - CmdLine:
    - GMAP_URL="http://research-pub.gene.com/gmap/src/gmap-gsnap-$GMAP_VERSION.tar.gz"
      &&     wget $GMAP_URL &&     tar xvf gmap-gsnap-$GMAP_VERSION.tar.gz &&     cd
      gmap-$GMAP_VERSION && ./configure && make && make install
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
