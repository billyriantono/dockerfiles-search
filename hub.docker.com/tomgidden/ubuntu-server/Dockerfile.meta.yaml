MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"gid@starberry.tv"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc/debconf.txt
    - /tmp
  - CmdLine:
    - debconf-set-selections < /tmp/debconf.txt
    Name: run
    PrependShell: true
  - Key: extras
    Name: arg
    Value: '"nano git inetutils-ping binutils autoconf make"'
  - Key: noclean
    Name: arg
    Value: "false"
  - CmdLine:
    - 'DEBIAN_FRONTEND=noninteractive     echo ''force-unsafe-io'' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup     &&
      echo ''DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };'' > /etc/apt/apt.conf.d/docker-clean     &&
      echo ''APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };'' >> /etc/apt/apt.conf.d/docker-clean     &&
      echo ''Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";'' >> /etc/apt/apt.conf.d/docker-clean     &&
      echo ''Acquire::Languages "none";'' > /etc/apt/apt.conf.d/docker-no-languages     &&
      echo ''Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";''
      > /etc/apt/apt.conf.d/docker-gzip-indexes     && apt-get update     && apt-get
      install -y apt-utils     && apt-get install -y ubuntu-server openssh-server
      locales sudo zsh man-db ${extras}     && apt-get clean     && ( ${noclean} ||
      rm -rf /var/lib/apt/lists/* )'
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_GB.UTF-8 en_US.UTF-8     && update-locale LANG=en_GB.UTF-8 LC_COLLATE=C
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc/zsh/zsh*
    - /etc/zsh/
  - CmdLine:
    - 'echo ''%sudo ALL=(ALL) NOPASSWD: ALL'' > /etc/sudoers.d/02_sudo_nopasswd'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Name: volume
    Volumes:
    - /home
  - Key: user
    Name: arg
    Value: me
  - CmdLine:
    - ( echo | adduser --gecos ${user} --shell=/usr/bin/zsh --home=/home/${user} --uid=501
      --disabled-password ${user} )     && ( echo "${user}:the.dog.ate.my.homework"
      | chpasswd )     && adduser ${user} sudo
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/${user}
  - Name: volume
    Volumes:
    - /sys/fs/cgroup
    - /tmp
    - /run
    - /run/lock
  - CmdLine:
    - /sbin/init
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
