{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "packages",
      "BaseName": "cloudposse/packages:0.73.0",
      "SourceCode": "FROM cloudposse/packages:0.73.0 as packages",
      "Platform": "",
      "As": "packages",
      "From": {
        "Image": "cloudposse/packages:0.73.0"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/packages"
        },
        {
          "Key": "PACKAGES",
          "Name": "arg",
          "Value": "\"atlantis aws-iam-authenticator awless cfssl cfssljson chamber fetch figurine gomplate goofys helm helmfile kubectl kubens sops stern terraform terragrunt tfmask yq\""
        },
        {
          "Env": [
            {
              "Key": "PACKAGES",
              "Value": "${PACKAGES}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELMFILE_VERSION",
              "Value": "0.45.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "make -C /packages/install helm helmfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make dist"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "nikiai/geodesic-base:debian",
      "SourceCode": "FROM nikiai/geodesic-base:debian",
      "Platform": "",
      "From": {
        "Image": "nikiai/geodesic-base:debian"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "BANNER",
              "Value": "\"geodesic\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CACHE_PATH",
              "Value": "/localhost/.geodesic"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEODESIC_PATH",
              "Value": "/usr/local/include/toolbox"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLUSTER_NAME",
              "Value": "example.foo.bar"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "packages",
          "Name": "copy",
          "SourcesAndDest": [
            "/dist/",
            "/usr/local/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "HELM_HOME",
              "Value": "/var/lib/helm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VALUES_PATH",
              "Value": "${SECRETS_PATH}/helm/values"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "helm completion bash \u003e /etc/bash_completion.d/helm.sh     \u0026\u0026 mkdir -p ${HELM_HOME}     \u0026\u0026 helm init --client-only     \u0026\u0026 mkdir -p ${HELM_HOME}/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm repo add incubator  https://kubernetes-charts-incubator.storage.googleapis.com/     \u0026\u0026 helm repo add coreos-stable https://s3-eu-west-1.amazonaws.com/coreos-charts/stable/     \u0026\u0026 helm repo update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_APPR_VERSION",
              "Value": "0.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_DIFF_VERSION",
              "Value": "2.11.0+3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_EDIT_VERSION",
              "Value": "0.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_S3_VERSION",
              "Value": "0.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "helm plugin install https://github.com/app-registry/appr-helm-plugin --version v${HELM_APPR_VERSION}     \u0026\u0026 helm plugin install https://github.com/databus23/helm-diff --version v${HELM_DIFF_VERSION}     \u0026\u0026 helm plugin install https://github.com/mstrzele/helm-edit --version v${HELM_EDIT_VERSION}     \u0026\u0026 helm plugin install https://github.com/hypnoglow/helm-s3 --version v${HELM_S3_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AWS_DATA_PATH",
              "Value": "/localhost/.aws/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_CONFIG_FILE",
              "Value": "/localhost/.aws/config"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_SHARED_CREDENTIALS_FILE",
              "Value": "/localhost/.aws/credentials"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HISTFILE",
              "Value": "${CACHE_PATH}/history"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LESS",
              "Value": "-Xr"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_AGENT_CONFIG",
              "Value": "/var/tmp/.ssh-agent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAKEFLAGS",
              "Value": "\"--no-print-directory\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAKE_INCLUDES",
              "Value": "\"Makefile Makefile.*\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDG_CONFIG_HOME",
              "Value": "/etc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "find ${XDG_CONFIG_HOME} -type f -name '*.sh' -exec chmod 755 {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/conf"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_ACCESS_TOKEN",
              "Value": "\"H7DVtR1NSjvADrNzj7TG\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWS_SDK_LOAD_CONFIG",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-c",
            "init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}