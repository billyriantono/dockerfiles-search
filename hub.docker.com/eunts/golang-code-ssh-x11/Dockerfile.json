{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.11.4-stretch",
      "SourceCode": "FROM golang:1.11.4-stretch",
      "Platform": "",
      "From": {
        "Image": "golang:1.11.4-stretch"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/bin/run"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y openssh-server \u0026\u0026     passwd -d root \u0026\u0026     chmod 0700 /bin/run \u0026\u0026     sed -ri 's/^\\s*(PermitRootLogin)/#\\1/'                   /etc/ssh/sshd_config \u0026\u0026     echo \"PermitRootLogin yes\"                           \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(X11Forwarding)/#\\1/'                     /etc/ssh/sshd_config \u0026\u0026     echo \"X11Forwarding yes\"                             \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(X11DisplayOffset)/#\\1/'                 /etc/ssh/sshd_config \u0026\u0026     echo \"X11DisplayOffset 10\"                           \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(X11UseLocalhost)/#\\1/'                  /etc/ssh/sshd_config \u0026\u0026     echo \"X11UseLocalhost no\"                            \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(ChallengeResponseAuthentication)/#\\1/'  /etc/ssh/sshd_config \u0026\u0026     echo \"ChallengeResponseAuthentication no\"            \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(PasswordAuthentication)/#\\1/'           /etc/ssh/sshd_config \u0026\u0026     echo \"PasswordAuthentication yes\"                    \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(UsePAM)/#\\1/'                           /etc/ssh/sshd_config \u0026\u0026     echo \"UsePAM no\"                                     \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(PermitEmptyPasswords)/#\\1/'             /etc/ssh/sshd_config \u0026\u0026     echo \"PermitEmptyPasswords yes\"                      \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^\\s*(Compression)/#\\1/'                      /etc/ssh/sshd_config \u0026\u0026     echo \"Compression no\"                                \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main\" \u003e /etc/apt/sources.list.d/vscode.list \u0026\u0026     curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor \u003e /tmp/microsoft.gpg \u0026\u0026     install -o root -g root -m 644 /tmp/microsoft.gpg /etc/apt/trusted.gpg.d/ \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y code libasound2 sudo bash \u0026\u0026     useradd --create-home -g root --shell /bin/bash code \u0026\u0026     passwd -d code \u0026\u0026     echo \u003e /etc/motd \u0026\u0026     echo \"export GOROOT=/usr/local/go\" \u003e\u003e /etc/bash.bashrc \u0026\u0026     echo \"export GOPATH=/go\" \u003e\u003e /etc/bash.bashrc \u0026\u0026     echo \"export PATH=\\$GOROOT/bin:\\$GOPATH/bin:\\$PATH\" \u003e\u003e /etc/bash.bashrc \u0026\u0026     sudo -u code code --install-extension ms-vscode.Go \u0026\u0026     sudo -u code code --install-extension 766b.go-outliner \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/mdempsky/gocode \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/uudashr/gopkgs/cmd/gopkgs \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/ramya-rao-a/go-outline \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/acroca/go-symbols \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get golang.org/x/tools/cmd/guru \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get golang.org/x/tools/cmd/gorename \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/go-delve/delve/cmd/dlv \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/stamblerre/gocode \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/rogpeppe/godef \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/sqs/goreturns \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get golang.org/x/lint/golint \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/cweill/gotests/... \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/fatih/gomodifytags \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/josharian/impl \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/davidrjenni/reftools/cmd/fillstruct \u0026\u0026     sudo -u code GOPATH=/go /usr/local/go/bin/go get github.com/haya14busa/goplay/cmd/goplay \u0026\u0026     chmod -R 0770 /home/code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Env": [
            {
              "Key": "RUN_USER",
              "Value": "code"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "run",
            "/usr/sbin/sshd",
            "-D",
            "-f",
            "/etc/ssh/sshd_config"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}