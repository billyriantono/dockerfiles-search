{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "KOPS_VERSION",
              "Value": "1.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "v1.8.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWSCLI_VERSION",
              "Value": "1.14.56"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.05.0-r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "0.23.3-r0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache update   \u0026\u0026 apk --no-cache add ca-certificates curl python py-pip py-setuptools groff less git openssh docker=\"${DOCKER_VERSION}\" yarn=\"${YARN_VERSION}\" bash jq   \u0026\u0026 apk --no-cache add --virtual build-dependencies curl   \u0026\u0026 pip --no-cache-dir install awscli==\"${AWSCLI_VERSION}\"   \u0026\u0026 curl -LO --silent --show-error https://github.com/kubernetes/kops/releases/download/\"${KOPS_VERSION}\"/kops-linux-amd64   \u0026\u0026 mv kops-linux-amd64 /usr/local/bin/kops   \u0026\u0026 curl -LO https://storage.googleapis.com/kubernetes-release/release/\"${KUBECTL_VERSION}\"/bin/linux/amd64/kubectl   \u0026\u0026 mv kubectl /usr/local/bin/kubectl   \u0026\u0026 curl -LO https://storage.googleapis.com/kubernetes-helm/helm-\"${HELM_VERSION}\"-linux-amd64.tar.gz   \u0026\u0026 tar -zxvf helm-\"${HELM_VERSION}\"-linux-amd64.tar.gz   \u0026\u0026 mv linux-amd64/helm /usr/local/bin/helm   \u0026\u0026 chmod +x /usr/local/bin/kops /usr/local/bin/kubectl   /usr/local/bin/helm   \u0026\u0026 apk del --purge build-dependencies   \u0026\u0026 rm -rf helm-\"${HELM_VERSION}\"-linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}