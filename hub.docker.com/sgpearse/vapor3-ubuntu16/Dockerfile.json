{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ubuntu-xenial-core-cloudimg-amd64-root.tar.gz",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -xe \t\t\u0026\u0026 echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d \t\u0026\u0026 echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d \t\u0026\u0026 chmod +x /usr/sbin/policy-rc.d \t\t\u0026\u0026 dpkg-divert --local --rename --add /sbin/initctl \t\u0026\u0026 cp -a /usr/sbin/policy-rc.d /sbin/initctl \t\u0026\u0026 sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t\u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t\u0026\u0026 echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\t\u0026\u0026 echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages \t\t\u0026\u0026 echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes \t\t\u0026\u0026 echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \u003e /etc/apt/apt.conf.d/docker-autoremove-suggests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/systemd \u0026\u0026 echo 'docker' \u003e /run/systemd/container"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export TERM=xterm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y curl     \u0026\u0026 apt-get install -y xz-utils     \u0026\u0026 apt-get install -y git     \u0026\u0026 apt-get install -y cmake     \u0026\u0026 apt-get install -y g++     \u0026\u0026 apt-get install -y freeglut3-dev     \u0026\u0026 apt-get install -y libexpat1-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026     mkdir glade        \u0026\u0026 cd glade       \u0026\u0026     mkdir p            \u0026\u0026 cd p           \u0026\u0026     mkdir VAST         \u0026\u0026 cd VAST        \u0026\u0026     mkdir VAPOR        \u0026\u0026 cd VAPOR       \u0026\u0026     mkdir third-party  \u0026\u0026 cd third-party \u0026\u0026     mkdir apps-2017    \u0026\u0026 cd apps-2017"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o     /glade/p/VAST/VAPOR/third-party/apps-2017/Linux_x86_64_Ubuntu16.04.tar.xz     \"https://drive.google.com/open?id=0B0dQMtxB89M0azF5RW1RSE5qcTg\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "fileid=\"0B0dQMtxB89M0azF5RW1RSE5qcTg\"     \u0026\u0026 filename=\"/glade/p/VAST/VAPOR/third-party/apps-2017/Linux_x86_64_Ubuntu16.04.tar.xz\"     \u0026\u0026 curl -c ./cookie -s -L \"https://drive.google.com/uc?export=download\u0026id=${fileid}\" \u003e /dev/null     \u0026\u0026 curl -Lb ./cookie     \"https://drive.google.com/uc?export=download\u0026confirm=`awk '/download/ {print $NF}' ./cookie`\u0026id=${fileid}\"     -o ${filename}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls -lrth /glade/p/VAST/VAPOR/third-party/apps-2017"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xf /glade/p/VAST/VAPOR/third-party/apps-2017/Linux_x86_64_Ubuntu16.04.tar.xz            -C /glade/p/VAST/VAPOR/third-party/apps-2017"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/g-truc/glm.git     /glade/p/VAST/VAPOR/third-party/apps-2017/Linux_x86_64/include/glm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /glade/p/VAST/VAPOR/third-party/apps-2017/Linux_x86_64/include/glm/glm/*     /glade/p/VAST/VAPOR/third-party/apps-2017/Linux_x86_64/include/glm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /     \u0026\u0026 git clone https://github.com/NCAR/VAPOR.git     \u0026\u0026 cd VAPOR     \u0026\u0026 cp site_files/site.NCAR site.local     \u0026\u0026 mkdir build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /VAPOR/build     \u0026\u0026 export CMAKE_CXX_COMPILER=g++     \u0026\u0026 cmake .. \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/VAPOR"
        }
      ]
    }
  ]
}