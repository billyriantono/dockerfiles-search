MetaArgs: null
Stages:
- As: build-env
  BaseName: golang:latest
  Commands:
  - Key: LENSVERSION
    Name: arg
    Value: null
  - Key: TENSORFLOW_DIST
    Name: arg
    Value: null
  - Env:
    - Key: BUILD_HOME
      Value: /go/src/github.com/RTradeLtd/Lens
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${BUILD_HOME}
  - Name: workdir
    Path: ${BUILD_HOME}
  - CmdLine:
    - apt-get update;     apt-get install -y sudo curl git
    Name: run
    PrependShell: true
  - CmdLine:
    - bash setup/scripts/tensorflow_install.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${LD_LIBRARY_PATH}:/usr/local/lib
    Name: env
  - CmdLine:
    - bash setup/scripts/tesseract_install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - go mod vendor
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u -tags gcc7 github.com/gen2brain/go-fitz
    Name: run
    PrependShell: true
  - CmdLine:
    - go build     -tags gcc7     -o /bin/temporal-lens     -ldflags "-X main.Version=$LENSVERSION
      -X main.Edition=$TENSORFLOW_DIST"     ./cmd/temporal-lens
    Name: run
    PrependShell: true
  From:
    Image: golang:latest
  Name: build-env
  Platform: ""
  SourceCode: FROM golang:latest AS build-env
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"RTrade Technologies Ltd."'
    Name: label
  - Chown: ""
    From: build-env
    Name: copy
    SourcesAndDest:
    - /bin/temporal-lens
    - /usr/local/bin
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup
    - /setup
  - Key: TENSORFLOW_DIST
    Name: arg
    Value: null
  - CmdLine:
    - apt-get update;     apt-get install -y sudo curl bash
    Name: run
    PrependShell: true
  - CmdLine:
    - bash setup/scripts/tensorflow_install.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib
    Name: env
  - CmdLine:
    - bash /setup/scripts/tesseract_install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ls /usr/lib/x86_64-linux-gnu
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/lens
    Name: run
    PrependShell: true
  - Env:
    - Key: CONFIG_DAG
      Value: /data/lens/config.json
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./test/config.json
    - /data/lens/config.json
  - CmdLine:
    - temporal-lens
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - v2
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
