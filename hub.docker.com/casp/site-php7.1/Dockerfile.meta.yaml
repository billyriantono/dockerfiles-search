MetaArgs: null
Stages:
- BaseName: php:7.1-apache
  Commands:
  - CmdLine:
    - "apt-get update && apt-get install -y wget nginx supervisor libapache2-mod-rpaf
      sudo git mc net-tools openssh-server mysql-client vim nano msmtp \tcron gcc
      make libjpeg-dev libpng-dev libtiff-dev libvpx-dev libxpm-dev libfontconfig1-dev
      libxpm-dev checkinstall \tlibicu-dev         libfreetype6-dev         libjpeg62-turbo-dev
      \        libmcrypt-dev         libxml2         libxml2-dev         libcurl4-openssl-dev
      \        libpspell-dev         libtidy-dev         libgeoip-dev         libxslt1-dev"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - '{                 echo ''opcache.memory_consumption=128'';                 echo
      ''opcache.interned_strings_buffer=8'';                 echo ''opcache.max_accelerated_files=4000'';                 echo
      ''opcache.revalidate_freq=60'';                 echo ''opcache.fast_shutdown=1'';                 echo
      ''opcache.enable_cli=1''; } > /usr/local/etc/php/conf.d/opcache-recommended.ini'
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOMJS
      Value: phantomjs-2.1.1-linux-x86_64
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends         libmcrypt-dev
      zlib1g-dev git libgmp-dev         libfreetype6-dev libjpeg62-turbo-dev         build-essential
      chrpath libssl-dev libxft-dev         libfreetype6 libfontconfig1 libfontconfig1-dev     &&
      ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/     && docker-php-ext-configure
      gmp     && docker-php-ext-install iconv mcrypt mbstring pdo pdo_mysql zip gmp
      opcache     && curl -o ${PHANTOMJS}.tar.bz2 -SL https://bitbucket.org/ariya/phantomjs/downloads/${PHANTOMJS}.tar.bz2     &&
      tar xvjf ${PHANTOMJS}.tar.bz2     && rm ${PHANTOMJS}.tar.bz2     && mv ${PHANTOMJS}
      /usr/local/share     && ln -sf /usr/local/share/${PHANTOMJS}/bin/phantomjs /usr/local/bin     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOMJS_BIN_PATH
      Value: /usr/local/bin/phantomjs
    Name: env
  - CmdLine:
    - docker-php-ext-install iconv mcrypt  gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install bcmath ctype curl dom gettext hash iconv json mbstring
      mysqli opcache posix pspell  session shmop simplexml  soap sockets tidy tokenizer
      wddx xsl zip pdo pdo_mysql xml  xmlrpc xmlwriter exif intl
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install geoip-1.1.1  && echo "extension=geoip.so" >> /usr/local/etc/php/conf.d/geoip.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug &&   echo "zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20160303/xdebug.so"
      >> /usr/local/etc/php/conf.d/xdebug.ini_ &&   echo "[PHP_XDEBUG]"                                                                       >>
      /usr/local/etc/php/conf.d/xdebug.ini_ &&   echo "xdebug.profiler_output_name=\"request-%R---time-%t.cachegrind\""                    >>
      /usr/local/etc/php/conf.d/xdebug.ini_ &&   echo "xdebug.collect_params = 3"                                                          >>
      /usr/local/etc/php/conf.d/xdebug.ini_ &&   echo "xdebug.remote_log = /tmp/xdebug/xdebug.log"                                         >>
      /usr/local/etc/php/conf.d/xdebug.ini_ &&   echo "xdebug.profiler_enable = 1"                                                         >>
      /usr/local/etc/php/conf.d/xdebug.ini_ &&   echo "xdebug.profiler_output_dir=/tmp/xdebug/"                                            >>
      /usr/local/etc/php/conf.d/xdebug.ini_
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rpaf rewrite
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - apache-security.conf
    - /etc/apache2/conf-enabled/security.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/
  - CmdLine:
    - 'useradd -m -d /home/sftpdev/ -s /bin/bash -o -g 33 -u 33 sftpdev;     echo
      "sftpdev ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers;     echo "www-data ALL=(ALL:ALL)
      NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /var/www/html /home/sftpdev/html -f
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd; chmod 0755 /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/Listen 80/Listen 81/g" /etc/apache2/ports.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /etc/apache2/sites-enabled/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - apache-default-vhost.conf
    - /etc/apache2/sites-enabled/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/
  - CmdLine:
    - 'echo "DOCKER PHP_VERSION=$PHP_VERSION; BUILD DATE: `date -I`" > /etc/motd'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'sendmail_path = "/usr/bin/msmtp -C /var/www/.msmtprc  -t"' > /usr/local/etc/php/conf.d/sendmail-msmtp.ini
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/sftpdev
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - chown 33:33 /var/www/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y gcc make libjpeg-dev libpng-dev libtiff-dev libvpx-dev libxpm-dev
      libfontconfig1-dev libxpm-dev checkinstall  libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libxml2-dev         libcurl4-openssl-dev         libpspell-dev         libtidy-dev         libxslt1-dev
    Name: run
    PrependShell: true
  From:
    Image: php:7.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-apache
