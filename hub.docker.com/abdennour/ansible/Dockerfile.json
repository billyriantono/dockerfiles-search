{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "ansible-slim",
      "BaseName": "python:3.6-alpine",
      "SourceCode": "FROM python:3.6-alpine as ansible-slim",
      "Platform": "",
      "As": "ansible-slim",
      "From": {
        "Image": "python:3.6-alpine"
      },
      "Commands": [
        {
          "Key": "ANSIBLE_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "${ANSIBLE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/latest-stable/community\" \u003e\u003e /etc/apk/repositories \t\u0026\u0026 apk add --update --no-cache --virtual build-dependencies linux-headers build-base python3-dev libffi-dev openssl-dev py-psutil \t\u0026\u0026 pip3 install --no-cache-dir --upgrade pip setuptools \t\u0026\u0026 pip3 install --upgrade ansible==${ANSIBLE_VERSION} \t\u0026\u0026 apk del build-dependencies     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -r /root/.cache     \u0026\u0026 ansible --version"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "ansible",
      "BaseName": "ansible-slim",
      "SourceCode": "FROM ansible-slim as ansible",
      "Platform": "",
      "As": "ansible",
      "From": {
        "Stage": {
          "Named": "ansible-slim",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Key": "MOLECULE_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "YAMLLINT_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "MOLECULE_VERSION",
              "Value": "${MOLECULE_VERSION}"
            },
            {
              "Key": "YAMLLINT_VERSION",
              "Value": "${YAMLLINT_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/latest-stable/community\" \u003e\u003e /etc/apk/repositories \t\u0026\u0026 apk add --update --no-cache         curl         openssl         ca-certificates         bash         git         zip         docker         openssh-client         sudo         shadow         sshpass \t\u0026\u0026 apk add --no-cache --virtual build-dependencies linux-headers build-base python3-dev libffi-dev openssl-dev py-psutil \t\u0026\u0026 pip3 install --no-cache-dir --upgrade pip setuptools \t\u0026\u0026 pip3 install --upgrade molecule==${MOLECULE_VERSION} yamllint==${YAMLLINT_VERSION} docker \t\u0026\u0026 pip3 install ansible-lint==4.0.1 \t\u0026\u0026 apk del build-dependencies     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -r /root/.cache     \u0026\u0026 molecule --version     \u0026\u0026 yamllint --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -S ansible \u0026\u0026   echo \"ansible ALL = (ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "ansible"
        },
        {
          "Name": "workdir",
          "Path": "/home/ansible"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fry.sh",
            "/fry.sh"
          ]
        },
        {
          "CmdLine": [
            "bash",
            "/fry.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}