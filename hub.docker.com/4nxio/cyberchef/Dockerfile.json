{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Simon Krenz \u003csk@4nx.io\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"GCHQ CyberChef Docker Container\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026     apk add --no-cache busybox-suid curl git nginx nodejs npm \u0026\u0026     npm i npm@latest -g \u0026\u0026     npm install -g grunt-cli \u0026\u0026     addgroup -S cyberchef \u0026\u0026 adduser -S cyberchef -G cyberchef"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "cyberchef"
        },
        {
          "CmdLine": [
            "git clone https://github.com/gchq/CyberChef.git /home/cyberchef"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/cyberchef"
        },
        {
          "CmdLine": [
            "npm install \u0026\u0026     npm audit fix \u0026\u0026     grunt prod"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "80/tcp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "/config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx",
            "/etc/ssl",
            "/var/log/nginx"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}