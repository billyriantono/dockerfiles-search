{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./tmp/SourceList",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install openjdk-8-jdk git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip lib32z1-dev qemu g++-multilib gcc-multilib python3-paramiko python-paramiko python-jenkins python-requests python-xlwt libglib2.0-dev libpixman-1-dev linux-libc-dev:i386 apt-utils curl axel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 git clone https://code.opensource.huaweicloud.com/HarmonyOS/OpenArkCompiler.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OacRoot",
              "Value": "/OpenArkCompiler"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $OacRoot/tools/ninja_1.9.0     \u0026\u0026 mkdir $OacRoot/tools/gn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $OacRoot/tools/ninja_1.9.0/ \u0026\u0026 curl -LO https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip \u0026\u0026 unzip ninja-linux.zip \u0026\u0026 chmod +x ninja \u0026\u0026 rm ninja-linux.zip     \u0026\u0026 echo 'ninja copied' \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $OacRoot/tools/gn/ \u0026\u0026 curl -L 'https://archive.softwareheritage.org/browse/content/sha1_git:2dc0d5b26caef44f467de8120b26f8aad8b878be/raw/?filename=gn' -o gn \u0026\u0026 chmod +x gn     \u0026\u0026 echo 'gn copied' \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $OacRoot/tools \u0026\u0026 axel -n 20 'http://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz' \u0026\u0026 tar -xvf clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz \u0026\u0026 mv clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04 clang_llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04 \u0026\u0026 rm clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAPLE_ROOT",
              "Value": "/OpenArkCompiler"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAPLE_BUILD_CORE",
              "Value": "/OpenArkCompiler/build/core"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/OpenArkCompiler/src/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /OpenArkCompiler \u0026\u0026 make -j8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        }
      ]
    }
  ]
}