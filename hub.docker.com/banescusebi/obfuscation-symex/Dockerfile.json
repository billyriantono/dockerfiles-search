{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "klee/klee:1.4.0",
      "SourceCode": "FROM klee/klee:1.4.0",
      "Platform": "",
      "From": {
        "Image": "klee/klee:1.4.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "USERNAME",
              "Value": "klee"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$USERNAME"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "echo \"$USERNAME:$USERNAME\" | chpasswd \u0026\u0026     usermod --shell /bin/bash $USERNAME \u0026\u0026     usermod -aG sudo $USERNAME \u0026\u0026     echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     usermod  --uid 1000 $USERNAME \u0026\u0026     groupmod --gid 1000 $USERNAME \u0026\u0026     apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive     apt-get -y install default-jre-headless default-jdk \u0026\u0026     apt-get -y install gcc g++ mono-mcs \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USERNAME"
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./resources",
            "${HOME}"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./simple-hash-functions",
            "${HOME}/simple-hash-functions/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts",
            "${HOME}/scripts/"
          ]
        },
        {
          "CmdLine": [
            "unzip tigress-Linux-x86_64-2.2.zip \u0026\u0026     echo 'export TIGRESS_HOME='${HOME}'/tigress-2.2' \u003e\u003e /home/$USERNAME/.bashrc \u0026\u0026     echo 'export PATH=$PATH:'${HOME}'/tigress-2.2' \u003e\u003e /home/$USERNAME/.bashrc \u0026\u0026     unzip -o satgraf-0.2.zip \u0026\u0026     unzip -o z3-z3-4.5.0.zip \u0026\u0026     rm ./*.zip \u0026\u0026     mv z3-z3-4.5.0 z3 \u0026\u0026     cd z3 \u0026\u0026 patch src/sat/tactic/sat_tactic.cpp \u003c ../scripts/z3_dimacs.patch \u0026\u0026     python scripts/mk_make.py \u0026\u0026     cd build \u0026\u0026     make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "cd z3/build \u0026\u0026 sudo make install \u0026\u0026     cd ${HOME} \u0026\u0026     chown -R $USERNAME ./scripts/ ./simple-hash-functions/ \u0026\u0026     chgrp -R $USERNAME ./scripts/ ./simple-hash-functions/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USERNAME"
        }
      ]
    }
  ]
}