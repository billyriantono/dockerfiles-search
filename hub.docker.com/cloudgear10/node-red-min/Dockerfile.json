{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "cloudgear10 \u003cpoke@cloudgear.io\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LATEST",
              "Value": "v4.x"
            },
            {
              "Key": "VERSION",
              "Value": "v4.2.2"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update curl make gcc g++ python linux-headers paxctl libgcc libstdc++ git wget \u0026\u0026   curl -sSL https://nodejs.org/dist/latest-${LATEST}/node-${VERSION}.tar.gz | tar -xz \u0026\u0026   cd /node-${VERSION} \u0026\u0026   ./configure --prefix=/usr ${CONFIG_FLAGS} \u0026\u0026   make -j$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) \u0026\u0026   make install \u0026\u0026   paxctl -cm /usr/bin/node \u0026\u0026   cd / \u0026\u0026   if [ -x /usr/bin/npm ]; then     npm install -g npm@${NPM_VERSION} \u0026\u0026     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;   fi \u0026\u0026   apk del  linux-headers paxctl ${DEL_PKGS} \u0026\u0026   rm -rf /etc/ssl /node-${VERSION} ${RM_DIRS}     /usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp     /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt \u0026\u0026 git config --system http.sslverify false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone https://github.com/node-red/node-red.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install auth0-lock --save"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install express-jwt --save"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 grunt build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "1880"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 mkdir /opt/node-redstatic"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install node-red-contrib-freeboard"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/plugins/ \u0026\u0026 git clone https://github.com/Freeboard/plugins.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/plugins/plugins \u0026\u0026 mv * ../"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/plugins/ \u0026\u0026 rm -rf plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/ \u0026\u0026 sed -i.bak -e '13d' index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/ \u0026\u0026 sed -i '13ihead.js(\"js/freeboard.js\",\"js/freeboard.plugins.min.js\", \"../freeboard_api/datasources\",\"plugins/datasources/plugin_json_ws.js\",\"plugins/datasources/plugin_node.js\",' index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install node-red-node-mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install node-red-contrib-mongodb2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install node-red-contrib-salesforce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/node-red \u0026\u0026 npm install npm install node-red-contrib-googlechart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node",
            "/opt/node-red/red.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}