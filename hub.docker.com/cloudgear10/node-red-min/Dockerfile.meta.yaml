MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: cloudgear10 <poke@cloudgear.io>
    Name: maintainer
  - Env:
    - Key: LATEST
      Value: v4.x
    - Key: VERSION
      Value: v4.2.2
    - Key: NPM_VERSION
      Value: "2"
    Name: env
  - CmdLine:
    - apk add --update curl make gcc g++ python linux-headers paxctl libgcc libstdc++
      git wget &&   curl -sSL https://nodejs.org/dist/latest-${LATEST}/node-${VERSION}.tar.gz
      | tar -xz &&   cd /node-${VERSION} &&   ./configure --prefix=/usr ${CONFIG_FLAGS}
      &&   make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) &&   make install
      &&   paxctl -cm /usr/bin/node &&   cd / &&   if [ -x /usr/bin/npm ]; then     npm
      install -g npm@${NPM_VERSION} &&     find /usr/lib/node_modules/npm -name test
      -o -name .bin -type d | xargs rm -rf;   fi &&   apk del  linux-headers paxctl
      ${DEL_PKGS} &&   rm -rf /etc/ssl /node-${VERSION} ${RM_DIRS}     /usr/share/man
      /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp     /usr/lib/node_modules/npm/man
      /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt && git config --system http.sslverify false
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && git clone https://github.com/node-red/node-red.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install -g grunt-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install auth0-lock --save
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install express-jwt --save
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && grunt build
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "1880"
  - Name: expose
    Ports:
    - "443"
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - cd /opt && mkdir /opt/node-redstatic
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install node-red-contrib-freeboard
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/plugins/
      && git clone https://github.com/Freeboard/plugins.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/plugins/plugins
      && mv * ../
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/plugins/
      && rm -rf plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/
      && sed -i.bak -e '13d' index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red/node_modules/node-red-contrib-freeboard/node_modules/freeboard/
      && sed -i '13ihead.js("js/freeboard.js","js/freeboard.plugins.min.js", "../freeboard_api/datasources","plugins/datasources/plugin_json_ws.js","plugins/datasources/plugin_node.js",'
      index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install node-red-node-mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install node-red-contrib-mongodb2
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install node-red-contrib-salesforce
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/node-red && npm install npm install node-red-contrib-googlechart
    Name: run
    PrependShell: true
  - CmdLine:
    - node
    - /opt/node-red/red.js
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
