MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 8.15.0
    Name: env
  - CmdLine:
    - buildDeps='xz-utils'     && ARCH= && dpkgArch="$(dpkg --print-architecture)"     &&
      case "${dpkgArch##*-}" in       amd64) ARCH='x64';;       ppc64el) ARCH='ppc64le';;       s390x)
      ARCH='s390x';;       arm64) ARCH='arm64';;       armhf) ARCH='armv7l';;       i386)
      ARCH='x86';;       *) echo "unsupported architecture"; exit 1 ;;     esac     &&
      set -ex     && apt-get update && apt-get install -y ca-certificates curl wget
      gnupg dirmngr $buildDeps --no-install-recommends     && rm -rf /var/lib/apt/lists/*     &&
      for key in       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       FD3A5288F042B6850C66B31F09FE44734EB7990E       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       DD8F2338BAE7501E3DD5AC78C273792F7D83545D       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       B9AE9905FFD7803F25714661B63B535A4C206CA9       77984A986EBC2AA786BC0F66B01FBB92821C587A       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       4ED778F539E3634C779C87C6D7062848A1AB005C       A48C2BEE680E841632CD4E44F07496B3EB3C1762       B9E2F5981AA6E0CD28160D9FF13993A75599653C     ;
      do       gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||       gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||       gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;     done     && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"     &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -     &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1
      --no-same-owner     && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
      SHASUMS256.txt     && apt-get purge -y --auto-remove $buildDeps     && ln -s
      /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.12.3
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Labels:
    - Key: maintainer
      Value: '"NGINX Docker Maintainers <docker-maint@nginx.com>"'
    Name: label
  - Env:
    - Key: NGINX_VERSION
      Value: 1.15.8-1~stretch
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 1.15.8.0.2.7-1~stretch
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y gnupg1 apt-transport-https ca-certificates \t&& apt-get remove --purge --auto-remove
      -y gnupg1 && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\"
      \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION}
      \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION}
      \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386)
      \t\t\techo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\"
      >> /etc/apt/sources.list.d/nginx.list \t\t\t&& apt-get update \t\t\t;; \t\t*)
      \t\t\techo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\"
      >> /etc/apt/sources.list.d/nginx.list \t\t\t&& tempDir=\"$(mktemp -d)\" \t\t\t&&
      chmod 777 \"$tempDir\" \t\t\t&& savedAptMark=\"$(apt-mark showmanual)\" \t\t\t&&
      apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages \t\t\t&& ( \t\t\t\tcd
      \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\" \t\t\t\t\tapt-get
      source --compile $nginxPackages \t\t\t) \t\t\t&& apt-mark showmanual | xargs
      apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\" ] || apt-mark manual
      $savedAptMark; } \t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&& ( cd \"$tempDir\" &&
      dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package: ' \"$tempDir/Packages\"
      \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list
      \t\t\t&& apt-get -o Acquire::GzipIndexes=false update \t\t\t;; \tesac \t&& apt-get
      install --no-install-recommends --no-install-suggests --allow-unauthenticated
      -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge
      --auto-remove -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*
      /etc/apt/sources.list.d/nginx.list \t&& if [ -n \"$tempDir\" ]; then \t\tapt-get
      purge -y --auto-remove \t\t&& rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;
      \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/web
  - Name: volume
    Volumes:
    - /etc/nginx/conf.d
    - /app/web
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /usr/bin
  - CmdLine:
    - chmod a+x /usr/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
