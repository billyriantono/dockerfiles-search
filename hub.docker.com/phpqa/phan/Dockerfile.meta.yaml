MetaArgs:
- DefaultValue: '"php:7.2-alpine"'
  Key: BASE_IMAGE
  ProvidedValue: null
  Value: '"php:7.2-alpine"'
- DefaultValue: '"phan/phan"'
  Key: PACKAGIST_NAME
  ProvidedValue: null
  Value: '"phan/phan"'
- DefaultValue: '"phan"'
  Key: PHPQA_NAME
  ProvidedValue: null
  Value: '"phan"'
- DefaultValue: '"1.2.6"'
  Key: VERSION
  ProvidedValue: null
  Value: '"1.2.6"'
Stages:
- BaseName: ${BASE_IMAGE}
  Commands:
  - Key: COMPOSER_IMAGE
    Name: arg
    Value: null
  - Key: PACKAGIST_NAME
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: PHPQA_NAME
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: IMAGE_NAME
    Name: arg
    Value: null
  - CmdLine:
    - apk add --no-cache tini
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pcntl     && apk add --no-cache --virtual .build-dependencies
      git autoconf gcc g++ make     && git clone -q https://github.com/nikic/php-ast.git     &&
      cd php-ast     && phpize && ./configure && make install     && mv ./modules/ast.so
      /usr/local/lib/php/extensions/ast.so     && echo "extension=$(find /usr/local/lib/php/extensions/
      -name ast.so)" > $PHP_INI_DIR/conf.d/ast.ini     && apk del .build-dependencies     &&
      cd .. && rm -rf php-ast
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer:1.6.5
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/bin/composer
  - CmdLine:
    - COMPOSER_HOME="/composer" composer global require --prefer-dist --no-progress
      --dev ${PACKAGIST_NAME}:${VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:${PATH}
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.vendor
      Value: '"phpqa"'
    - Key: org.label-schema.name
      Value: '"${PHPQA_NAME}"'
    - Key: org.label-schema.version
      Value: '"${VERSION}"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: org.label-schema.url
      Value: '"https://github.com/phpqa/${PHPQA_NAME}"'
    - Key: org.label-schema.usage
      Value: '"https://github.com/phpqa/${PHPQA_NAME}/README.md"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/phpqa/${PHPQA_NAME}.git"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run --rm --volume \${PWD}:/app --workdir /app ${IMAGE_NAME}"'
    Name: label
  - Name: workdir
    Path: '"/app"'
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - phan
    Name: cmd
    PrependShell: false
  From:
    Image: ${BASE_IMAGE}
  Name: ""
  Platform: ""
  SourceCode: FROM ${BASE_IMAGE}
