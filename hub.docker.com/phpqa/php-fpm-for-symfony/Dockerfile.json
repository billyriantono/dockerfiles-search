{
  "MetaArgs": [
    {
      "Key": "BASE_IMAGE",
      "DefaultValue": "\"php:7.2-fpm\"",
      "ProvidedValue": null,
      "Value": "\"php:7.2-fpm\""
    },
    {
      "Key": "PACKAGIST_NAME",
      "DefaultValue": "\"symfony/symfony\"",
      "ProvidedValue": null,
      "Value": "\"symfony/symfony\""
    },
    {
      "Key": "REPOSITORY_NAME",
      "DefaultValue": "\"phpqa/php-fpm-for-symfony\"",
      "ProvidedValue": null,
      "Value": "\"phpqa/php-fpm-for-symfony\""
    },
    {
      "Key": "VERSION",
      "DefaultValue": "\"3.4.16\"",
      "ProvidedValue": null,
      "Value": "\"3.4.16\""
    },
    {
      "Key": "REQUIREMENTS_CHECKER_VERSION",
      "DefaultValue": "\"1.1.1\"",
      "ProvidedValue": null,
      "Value": "\"1.1.1\""
    },
    {
      "Key": "TZ",
      "DefaultValue": "\"UTC\"",
      "ProvidedValue": null,
      "Value": "\"UTC\""
    }
  ],
  "Stages": [
    {
      "Name": "icu-version",
      "BaseName": "${BASE_IMAGE}",
      "SourceCode": "FROM ${BASE_IMAGE} as icu-version",
      "Platform": "",
      "As": "icu-version",
      "From": {
        "Image": "${BASE_IMAGE}"
      },
      "Commands": [
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "composer:1.6.4",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "apt-get -yqq update \u0026\u0026 apt-get -yqq install git zip     \u0026\u0026 apt-get -yqq autoremove --purge \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*     \u0026\u0026 COMPOSER_HOME=\"/composer\"         composer global require --prefer-dist --dev symfony/intl:${VERSION}     \u0026\u0026 mv /composer/vendor/symfony/intl/Resources/data/version.txt /version.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "requirements-checker",
      "BaseName": "${BASE_IMAGE}",
      "SourceCode": "FROM ${BASE_IMAGE} as requirements-checker",
      "Platform": "",
      "As": "requirements-checker",
      "From": {
        "Image": "${BASE_IMAGE}"
      },
      "Commands": [
        {
          "Key": "REQUIREMENTS_CHECKER_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "composer:1.6.4",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "apt-get -yqq update \u0026\u0026 apt-get -yqq install git zip     \u0026\u0026 COMPOSER_HOME=\"/composer\"         composer global require --prefer-dist --no-progress --dev symfony/requirements-checker:${REQUIREMENTS_CHECKER_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "${BASE_IMAGE}",
      "SourceCode": "FROM ${BASE_IMAGE}",
      "Platform": "",
      "From": {
        "Image": "${BASE_IMAGE}"
      },
      "Commands": [
        {
          "Key": "REPOSITORY_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "IMAGE_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "TZ",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "${TZ}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/local/bin/docker-php-entrypoint-with-tz"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-php-entrypoint-with-tz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "icu-version",
          "Name": "copy",
          "SourcesAndDest": [
            "\"/version.txt\"",
            "\"/version.txt\""
          ]
        },
        {
          "CmdLine": [
            "icu_version=\"$(cat /version.txt)\"     \u0026\u0026 icu_download_url=$(printf \"http://download.icu-project.org/files/icu4c/%s/icu4c-%s-src.tgz\" \"${icu_version}\" \"$(printf ${icu_version} | sed 's/\\./_/g')\")     \u0026\u0026 curl -sS -o /tmp/icu.tar.gz -L ${icu_download_url}     \u0026\u0026 tar -zxf /tmp/icu.tar.gz -C /tmp     \u0026\u0026 cd /tmp/icu/source     \u0026\u0026 ./configure --prefix=/usr/local/icu     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 rm -rf /tmp/icu*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libpq-dev     \u0026\u0026 apt-get -yqq autoremove --purge \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*     \u0026\u0026 docker-php-ext-configure intl --with-icu-dir=/usr/local/icu     \u0026\u0026 docker-php-ext-install -j$(nproc) mbstring opcache intl pdo pdo_mysql pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"short_open_tag=0 \\n\" \u003e /usr/local/etc/php/conf.d/symfony.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         libjpeg-dev libpng-dev libfreetype6-dev         libldap2-dev         zlib1g-dev     \u0026\u0026 apt-get -yqq autoremove --purge \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*     \u0026\u0026 docker-php-ext-configure gd --with-jpeg-dir=/usr/ --with-png-dir=/usr/ --with-freetype-dir=/usr/     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd ldap zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -yqq update \u0026\u0026 apt-get -yqq install git curl wget zip unzip     \u0026\u0026 apt-get -yqq autoremove --purge \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "requirements-checker",
          "Name": "copy",
          "SourcesAndDest": [
            "\"/composer/\"",
            "\"/composer/\""
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\")     \u0026\u0026 curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version     \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp     \u0026\u0026 mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so     \u0026\u0026 printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" \u003e $PHP_INI_DIR/conf.d/blackfire.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e $PHP_INI_DIR/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"phpqa\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"${REPOSITORY_NAME}\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "\"${VERSION}\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "\"${BUILD_DATE}\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/${REPOSITORY_NAME}\""
            },
            {
              "Key": "org.label-schema.usage",
              "Value": "\"https://github.com/${REPOSITORY_NAME}/README.md\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/${REPOSITORY_NAME}.git\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "\"${VCS_REF}\""
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "\"docker run --rm ${IMAGE_NAME} php-fpm --info\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "\"/var/www/html\""
        },
        {
          "CmdLine": [
            "docker-php-entrypoint-with-tz"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}