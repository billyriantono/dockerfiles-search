{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tozd/runit",
      "SourceCode": "FROM tozd/runit",
      "Platform": "",
      "From": {
        "Image": "tozd/runit"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "3000/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/meteor"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -q -q \u0026\u0026  apt-get --yes --force-yes install curl git libcairo2-dev libfreetype6-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++ \u0026\u0026  curl http://meteor.peerlibrary.org/ | sed s/--progress-bar/-sL/g | sh \u0026\u0026  export PATH=$HOME/.meteor/tools/latest/bin:$PATH \u0026\u0026  npm config set unsafe-perm true \u0026\u0026  npm install -g git+https://github.com/oortcloud/meteorite.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc",
            "/etc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/source"
          ]
        },
        {
          "CmdLine": [
            "export PATH=$HOME/.meteor/tools/latest/bin:$PATH \u0026\u0026  cp -a /source /build \u0026\u0026  rm -rf /source \u0026\u0026  cd /build \u0026\u0026  rm -rf etc \u0026\u0026  ./prepare.sh \u0026\u0026  mrt bundle /bundle.tgz \u0026\u0026  cd / \u0026\u0026  tar xf /bundle.tgz \u0026\u0026  rm /bundle.tgz \u0026\u0026  cd /build \u0026\u0026  git describe --always --dirty=+ \u003e /bundle/gitversion \u0026\u0026  cd / \u0026\u0026  rm -rf /build \u0026\u0026  adduser --system --group meteor --home /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ROOT_URL",
              "Value": "http://example.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAIL_URL",
              "Value": "smtp://user:password@mailhost:port/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METEOR_SETTINGS",
              "Value": "{}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "3000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_URL",
              "Value": "mongodb://mongodb/meteor"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_OPLOG_URL",
              "Value": "mongodb://mongodb/local"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}