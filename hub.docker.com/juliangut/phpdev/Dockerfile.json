{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "XDEBUG_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.opencontainers.image.title",
              "Value": "\"juliangut/phpdev\""
            },
            {
              "Key": "org.opencontainers.image.description",
              "Value": "\"PHP/PHP-FPM/Jenkins Docker image for development/CI, based on Alpine Linux for minimal size\""
            },
            {
              "Key": "org.opencontainers.image.url",
              "Value": "\"https://github.com/juliangut/docker-phpdev\""
            },
            {
              "Key": "org.opencontainers.image.source",
              "Value": "\"https://github.com/juliangut/docker-phpdev/tree/master/dist/fpm/7.3\""
            },
            {
              "Key": "org.opencontainers.image.revision",
              "Value": "\"$VCS_REF\""
            },
            {
              "Key": "org.opencontainers.image.created",
              "Value": "\"$BUILD_DATE\""
            },
            {
              "Key": "org.opencontainers.image.authors",
              "Value": "\"Julián Gutiérrez (juliangut@gmail.com)\""
            },
            {
              "Key": "org.opencontainers.image.licenses",
              "Value": "\"BSD-3-Clause\""
            },
            {
              "Key": "com.juliangut.php.version",
              "Value": "\"7.3\""
            },
            {
              "Key": "com.juliangut.php.extensions",
              "Value": "\"bcmath, curl, gd, mbstring, opcache, openssl, xdebug, zlib\""
            },
            {
              "Key": "com.juliangut.xdebug.version",
              "Value": "\"$XDEBUG_VERSION\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 apk add --no-cache --virtual .build-deps     tzdata     $PHPIZE_DEPS     \u0026\u0026 cp /usr/share/zoneinfo/UTC /etc/localtime   \u0026\u0026 echo \"UTC\" \u003e /etc/timezone     \u0026\u0026 apk add --no-cache     shadow     sudo     bash     freetype-dev     libpng-dev     libjpeg-turbo-dev     libwebp-dev     \u0026\u0026 groupmod -n docker www-data   \u0026\u0026 usermod -l docker -m -d /home/docker -s /sbin/bash -G wheel -a www-data   \u0026\u0026 sed -e 's;^# \\(%wheel.*NOPASSWD.*\\);\\1;g' -i /etc/sudoers     \u0026\u0026 docker-php-ext-configure     gd       --with-freetype-dir       --with-png-dir       --with-jpeg-dir       --with-webp-dir     \u0026\u0026 docker-php-ext-install     gd     bcmath     opcache     \u0026\u0026 pecl update-channels   \u0026\u0026 pecl install     xdebug-$XDEBUG_VERSION     \u0026\u0026 docker-php-ext-enable     xdebug     \u0026\u0026 apk del .build-deps   \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*     \u0026\u0026 sed -i \"s/bin\\/ash/bin\\/bash/\" /etc/passwd     \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\"     \u0026\u0026 php -r \"copy('https://composer.github.io/installer.sig', '/tmp/composer-setup.sig');\"      \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { echo 'Invalid Composer installer' . PHP_EOL; exit(1); }\"     \u0026\u0026 php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 rm -f /tmp/composer-setup.php     \u0026\u0026 rm -f /tmp/composer-setup.sig     \u0026\u0026 composer global require hirak/prestissimo     \u0026\u0026 composer global clear-cache     \u0026\u0026 mv /root/.composer /home/docker/.composer   \u0026\u0026 chown docker:docker -R /home/docker/.composer     \u0026\u0026 mkdir /app   \u0026\u0026 chown docker:docker /app     \u0026\u0026 mkdir -p /var/log/php   \u0026\u0026 touch /var/log/php/xdebug.log   \u0026\u0026 chown docker:docker -R /var/log/php   \u0026\u0026 chmod 774 -R /var/log/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "STDOUT_LOG",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_DISABLE",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_REMOTE_AUTOSTART",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_REMOTE_PORT",
              "Value": "9000"
            },
            {
              "Key": "XDEBUG_PROFILER_ENABLE",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_AUTO_TRACE",
              "Value": "0"
            },
            {
              "Key": "OPCACHE_VALIDATE_TIMESTAMP",
              "Value": "1"
            },
            {
              "Key": "OPCACHE_MEMORY_CONSUMPTION",
              "Value": "128"
            },
            {
              "Key": "OPCACHE_MAX_ACCELERATED_FILES",
              "Value": "1000"
            },
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            },
            {
              "Key": "COMPOSER_DISABLE_XDEBUG_WARN",
              "Value": "1"
            },
            {
              "Key": "PATH",
              "Value": "\"/home/docker/.composer/vendor/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "$PHP_INI_DIR/conf.d/zz-php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opcache.ini",
            "$PHP_INI_DIR/conf.d/zz-opcache.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xdebug.ini",
            "$PHP_INI_DIR/conf.d/zz-xdebug.ini"
          ]
        },
        {
          "Env": [
            {
              "Key": "PHP_FPM_CONF_DIR",
              "Value": "/usr/local/etc/php-fpm.d"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "$PHP_FPM_CONF_DIR/zz-php-fpm.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app",
            "/var/log/php"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint",
            "/usr/local/bin/docker-entrypoint"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}