{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hpess/chef:master",
      "SourceCode": "FROM hpess/chef:master",
      "Platform": "",
      "From": {
        "Image": "hpess/chef:master"
      },
      "Commands": [
        {
          "Maintainer": "Paul Cooke \u003cpaul.cooke@hp.com\u003e, Karl Stoney \u003ckarl.stoney@hp.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum -y -q install gcc gcc-c++ make zlib-devel pcre-devel openssl-devel \u0026\u0026     nginxVersion=\"1.7.9\" \u0026\u0026     cd /usr/local/src \u0026\u0026     wget --quiet http://nginx.org/download/nginx-$nginxVersion.tar.gz \u0026\u0026     tar -xzf nginx-$nginxVersion.tar.gz \u0026\u0026     ln -sf nginx-$nginxVersion nginx \u0026\u0026     cd nginx \u0026\u0026     ./configure       --user=docker                                --group=docker                               --prefix=/usr/share/nginx                         --sbin-path=/usr/sbin/nginx                 --conf-path=/etc/nginx/nginx.conf           --pid-path=/var/run/nginx/nginx.pid               --lock-path=/var/run/nginx/nginx.lock             --error-log-path=/var/log/nginx/error.log       --http-log-path=/var/log/nginx/access.log       --with-http_gzip_static_module              --with-http_stub_status_module              --with-http_ssl_module                      --with-pcre                                 --with-file-aio                             --with-http_realip_module                   --without-http_scgi_module                  --without-http_uwsgi_module                 --without-http_fastcgi_module      \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     rm -rf /usr/local/src/nginx* \u0026\u0026     yum -y -q autoremove gcc gcc-c++ make zlib-devel pcre-devel openssl-devel \u0026\u0026     yum -y -q clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/nginx \u0026\u0026     mkdir -p /var/run/nginx \u0026\u0026     mkdir -p /usr/share/nginx \u0026\u0026     chown -R docker:docker /var/log/nginx \u0026\u0026     chown -R docker:docker /var/run/nginx \u0026\u0026     chown -R docker:docker /etc/nginx \u0026\u0026     chown -R docker:docker /usr/share/nginx \u0026\u0026     setcap 'cap_net_bind_service=+ep' /usr/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Env": [
            {
              "Key": "chef_node_name",
              "Value": "nginx.docker.local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "chef_run_list",
              "Value": "nginx"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "storage/",
            "/storage/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "services/*",
            "/etc/supervisord.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cookbooks/",
            "/chef/cookbooks/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "preboot/*",
            "/preboot/"
          ]
        },
        {
          "Env": [
            {
              "Key": "HPESS_ENV",
              "Value": "nginx"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}