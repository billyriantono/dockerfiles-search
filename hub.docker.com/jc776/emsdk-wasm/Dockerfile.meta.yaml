MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Name: workdir
    Path: /root
  - CmdLine:
    - echo "2017-10-04" && apt-get update && apt-get install -y --no-install-recommends   g++   make   file   curl   ca-certificates   python   git   cmake   sudo   gdb   xz-utils   jq   bzip2   default-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash - &&     apt-get install
      -y --no-install-recommends nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://storage.googleapis.com/wasm-llvm/builds/linux/lkgr.json | jq
      '.build | tonumber' | tee llvm-build
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://storage.googleapis.com/wasm-llvm/builds/linux/$(cat llvm-build)/wasm-binaries.tbz2
      |     tar xvkj
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/wasm-install/emscripten:/root/wasm-install/bin:$PATH
    Name: env
  - CmdLine:
    - echo "EMSCRIPTEN_ROOT = '/root/wasm-install/emscripten'" >> /root/.emscripten
      &&     echo "NODE_JS='/usr/bin/node'" >> /root/.emscripten &&     echo "LLVM_ROOT='/root/wasm-install/bin'"
      >> /root/.emscripten &&     echo "BINARYEN_ROOT = '/root/wasm-install'" >> /root/.emscripten
      &&     echo "COMPILER_ENGINE = NODE_JS" >> /root/.emscripten &&     echo "JS_ENGINES
      = [NODE_JS]" >> /root/.emscripten
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/emcc-warmup
  - CmdLine:
    - "emcc --version &&     printf '#include <iostream>\\nint main(){std::cout<<\"HELLO\"<<std::endl;return
      0;}' > test.cpp && \tem++ -O2 test.cpp -o test.js &&     em++ -s WASM=1 test.cpp
      -o test.js && \tEMCC_WASM_BACKEND=1 em++ -s WASM=1 test.cpp -o test.js"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /src
  - Name: workdir
    Path: /src
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
