MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.12-alpine3.9
  Commands:
  - Name: workdir
    Path: /build/tgfeed
  - Chown: ""
    From: zenwalker/tdlib
    Name: copy
    SourcesAndDest:
    - /usr/local/include/td
    - /usr/local/include/td
  - Chown: ""
    From: zenwalker/tdlib
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/libtd*
    - /usr/local/lib/
  - CmdLine:
    - apk add --no-cache gcc g++ libc-dev openssl-dev zlib-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - go build -mod=vendor -ldflags="-linkmode external -extldflags -static" .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12-alpine3.9
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.12-alpine3.9 as build
- BaseName: alpine:3.9
  Commands:
  - Name: workdir
    Path: /app
  - Name: volume
    Volumes:
    - /data
  - Env:
    - Key: DATA_DIR
      Value: /data
    Name: env
  - CmdLine:
    - apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/tgfeed/tgfeed
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates
    - templates
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - public
    - public
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - ./tgfeed
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
