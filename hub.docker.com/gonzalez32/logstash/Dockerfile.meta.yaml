MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Elastic Docker Team <docker@elastic.co>
    Name: maintainer
  - Key: ELASTIC_VERSION
    Name: arg
    Value: 6.1.0
  - Key: LOGSTASH_DOWNLOAD_URL
    Name: arg
    Value: https://artifacts.elastic.co/downloads/logstash/logstash-${ELASTIC_VERSION}.tar.gz
  - Key: GEODB_DOWNLOAD_URL
    Name: arg
    Value: http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz
  - Key: ELASTICSEARCH_URL
    Name: arg
    Value: elasticsearch
  - CmdLine:
    - apt-get -qq update &&     apt-get -qq install -y curl netbase openjdk-8-jdk-headless
      locales &&     apt-get -qq clean
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup --gid 1000 logstash &&     adduser --disabled-password --gecos=logstash
      --uid=1000 --gid=1000             --home /usr/share/logstash --no-create-home
      logstash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lso - ${LOGSTASH_DOWNLOAD_URL} |     tar zxf - -C /usr/share &&     mv
      /usr/share/logstash-${ELASTIC_VERSION} /usr/share/logstash &&     chown --recursive
      logstash:logstash /usr/share/logstash/ &&     ln -s /usr/share/logstash /opt/logstash
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/logstash/bin:$PATH
    Name: env
  - CmdLine:
    - curl -Lso - ${GEODB_DOWNLOAD_URL} |     tar zxf - -C /usr/share &&     mv /usr/share/Geo*/GeoLite2-City.mmdb
      /usr/share/logstash
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/logstash.yml
    - config/log4j2.properties
    - /usr/share/logstash/config/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pipeline
    - /usr/share/logstash/pipeline/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - templates
    - /usr/share/logstash/templates/
  - CmdLine:
    - chown --recursive logstash:logstash /usr/share/logstash/config/ /usr/share/logstash/pipeline/
      /usr/share/logstash/templates/
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '''en_US.UTF-8'''
    - Key: LC_ALL
      Value: '''en_US.UTF-8'''
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin/docker-entrypoint.sh
    - /usr/share/logstash/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/share/logstash/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: user
    User: logstash
  - CmdLine:
    - cd /usr/share/logstash/bin && logstash-plugin install logstash-filter-translate
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5044"
    - "9600"
  - CmdLine:
    - /usr/share/logstash/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -f
    - /usr/share/logstash/pipeline/
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
