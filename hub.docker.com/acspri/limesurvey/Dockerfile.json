{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOWNLOAD_URL",
              "Value": "https://www.limesurvey.org/development-release?download=2757:limesurvey400-rc13%20191223targz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOWNLOAD_SHA256",
              "Value": "948d49b5415a9ce38129d0b1a8dc90a30a3f62bcfc9e19a3a242f77ffe8f4c77"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libc-client-dev libfreetype6-dev libmcrypt-dev libpng-dev libjpeg-dev libldap2-dev zlib1g-dev libkrb5-dev libtidy-dev libzip-dev libsodium-dev \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/  --with-png-dir=/usr --with-jpeg-dir=/usr \t\u0026\u0026 docker-php-ext-install gd mysqli pdo pdo_mysql opcache zip iconv tidy     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/$(gcc -dumpmachine)/     \u0026\u0026 docker-php-ext-install ldap     \u0026\u0026 docker-php-ext-configure imap --with-imap-ssl --with-kerberos     \u0026\u0026 docker-php-ext-install imap     \u0026\u0026 docker-php-ext-install sodium     \u0026\u0026 pecl install mcrypt-1.0.1     \u0026\u0026 docker-php-ext-enable mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x; \tcurl -SL \"$DOWNLOAD_URL\" -o /tmp/lime.tar.gz;     echo \"$DOWNLOAD_SHA256 /tmp/lime.tar.gz\" | sha256sum -c -;     tar xf /tmp/lime.tar.gz --strip-components=1 -C /var/www/html;     rm /tmp/lime.tar.gz;     chown -R www-data:www-data /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'memory_limit=256M'; \t\techo 'upload_max_filesize=128M'; \t\techo 'post_max_size=128M'; \t\techo 'max_execution_time=120';         echo 'max_input_vars=10000';         echo 'date.timezone=UTC'; \t} \u003e /usr/local/etc/php/conf.d/uploads.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/plugins"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/upload"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}