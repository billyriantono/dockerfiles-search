{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install sudo procps wget unzip mc \u0026\u0026     echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user \u0026\u0026     echo \"secret\\nsecret\" | passwd user \u0026\u0026 apt-get clean \u0026\u0026     sudo apt-get install -y -q git subversion apt-transport-https     ca-certificates     curl     lxc     iptables \u0026\u0026     apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "CmdLine": [
            "curl -sSL https://get.docker.com/ | sh \u0026\u0026     sudo usermod -aG docker user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CHE_VERSION",
              "Value": "\"3.13.4.2\""
            },
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.2.2"
            },
            {
              "Key": "JAVA_VERSION",
              "Value": "8u45"
            },
            {
              "Key": "JAVA_VERSION_PREFIX",
              "Value": "1.8.0_45"
            },
            {
              "Key": "CHE_LOCAL_CONF_DIR",
              "Value": "/home/user/.che"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/jdk$JAVA_VERSION_PREFIX"
            },
            {
              "Key": "M2_HOME",
              "Value": "/opt/apache-maven-$MAVEN_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$M2_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /home/user/che-$CHE_VERSION /home/user/che-projects \u0026\u0026     wget -q http://maven.codenvycorp.com/content/repositories/codenvy-public-releases/org/eclipse/che/ide/assembly-sdk/$CHE_VERSION/assembly-sdk-$CHE_VERSION.zip -P /home/user \u0026\u0026     unzip -q /home/user/assembly-sdk-$CHE_VERSION.zip -d /home/user \u0026\u0026     cp -a /home/user/assembly-sdk-$CHE_VERSION/. /home/user/che-$CHE_VERSION/ \u0026\u0026     rm /home/user/assembly-sdk-$CHE_VERSION.zip \u0026\u0026     rm -rf /home/user/assembly-sdk-$CHE_VERSION \u0026\u0026     wget     --no-cookies     --no-check-certificate     --header \"Cookie: oraclelicense=accept-securebackup-cookie\"     -qO-     \"http://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b14/jdk-$JAVA_VERSION-linux-x64.tar.gz\" | sudo tar -zx -C /opt/ \u0026\u0026     echo \"export JAVA_HOME=$JAVA_HOME\" \u003e\u003e /home/user/.bashrc \u0026\u0026     sudo mkdir /opt/apache-maven-$MAVEN_VERSION/ \u0026\u0026     sudo wget -qO- \"https://archive.apache.org/dist/maven/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | sudo tar -zx --strip-components=1 -C /opt/apache-maven-$MAVEN_VERSION/ \u0026\u0026     echo \"export M2_HOME=$M2_HOME\" \u003e\u003e /home/user/.bashrc \u0026\u0026     mkdir -p /home/user/.che \u0026\u0026     echo \"export PATH=$PATH\" \u003e\u003e /home/user/.bashrc \u0026\u0026     cd /home/user/.che \u0026\u0026     touch vfs \u0026\u0026     echo \"1q2w3e=/home/user/che-$CHE_VERSION/temp/fs-root\" \u003e\u003e vfs \u0026\u0026     echo \"export CHE_LOCAL_CONF_DIR=$CHE_LOCAL_CONF_DIR\" \u003e\u003e /home/user/.bashrc \u0026\u0026     sudo chmod 757 -R /home/user/che-$CHE_VERSION \u0026\u0026     sudo chmod 757 -R /home/user/.che"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "che.properties",
            "/home/user/.che/che.properties"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./wrapdocker",
            "/usr/local/bin/wrapdocker"
          ]
        },
        {
          "CmdLine": [
            "sudo chmod +x /usr/local/bin/wrapdocker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/user/che-$CHE_VERSION/bin"
        },
        {
          "Name": "expose",
          "Ports": [
            "49152-49162",
            "8000",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "sudo wrapdocker \u0026 ./che.sh run"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}