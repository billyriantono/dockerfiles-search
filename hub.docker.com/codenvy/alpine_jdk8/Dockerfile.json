{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "72"
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "15"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/default-jvm\""
            },
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            },
            {
              "Key": "TOMCAT_HOME",
              "Value": "\"/home/user/tomcat8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "\"/usr/lib/apache-maven-$MAVEN_VERSION\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$M2_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-dependencies wget ca-certificates \u0026\u0026     export ALPINE_GLIBC_BASE_URL=\"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64\" \u0026\u0026     export ALPINE_GLIBC_PACKAGE=\"glibc-2.21-r2.apk\" \u0026\u0026     export ALPINE_GLIBC_BIN_PACKAGE=\"glibc-bin-2.21-r2.apk\" \u0026\u0026     wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_BIN_PACKAGE\" \u0026\u0026     apk add --no-cache --allow-untrusted \"$ALPINE_GLIBC_PACKAGE\" \"$ALPINE_GLIBC_BIN_PACKAGE\" \u0026\u0026     /usr/glibc/usr/bin/ldconfig \"/lib\" \"/usr/glibc/usr/lib\" \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf \u0026\u0026     rm \"$ALPINE_GLIBC_PACKAGE\" \"$ALPINE_GLIBC_BIN_PACKAGE\" \u0026\u0026     apk add --update --no-cache openssh curl mc git subversion sudo unzip bash ca-certificates \u0026\u0026     cd \"/tmp\" \u0026\u0026     wget -q --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"         \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026     tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026     mkdir -p \"/usr/lib/jvm\" \u0026\u0026     mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \u0026\u0026     ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \u0026\u0026     ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \u0026\u0026     rm -rf \"$JAVA_HOME/\"*src.zip \u0026\u0026     wget -q \"http://apache.ip-connect.vn.ua/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" \u0026\u0026 tar -xzf \"apache-maven-$MAVEN_VERSION-bin.tar.gz\" \u0026\u0026     mv \"/tmp/apache-maven-$MAVEN_VERSION\" \"/usr/lib\" \u0026\u0026     rm \"/tmp/\"* \u0026\u0026     deluser svn \u0026\u0026     adduser -S user -h /home/user -s /bin/bash -G root -u 1000 \u0026\u0026     echo \"%root ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     PASS=$(openssl rand -base64 32) \u0026\u0026     echo -e \"${PASS}\\n${PASS}\" | passwd user \u0026\u0026     wget -q \"https://archive.apache.org/dist/tomcat/tomcat-8/v8.0.29/bin/apache-tomcat-8.0.29.tar.gz\" \u0026\u0026 tar -xzf \"apache-tomcat-8.0.29.tar.gz\" \u0026\u0026     mv /tmp/apache-tomcat-8.0.29 /home/user/tomcat8/ \u0026\u0026     rm -rf /home/user/tomcat8/webapps/* **     rm /tmp/apache-tomcat-8.0.29.tar.gz \u0026\u0026     chown -R user /home/user/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "8000",
            "8080"
          ]
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Name": "workdir",
          "Path": "/projects"
        },
        {
          "CmdLine": [
            "sudo /usr/bin/ssh-keygen -A \u0026\u0026     sudo /usr/sbin/sshd -D \u0026\u0026     tail -f /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}