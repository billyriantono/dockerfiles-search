MetaArgs: null
Stages:
- BaseName: debian:wheezy
  Commands:
  - Env:
    - Key: JAVA_VERSION
      Value: 8u65
    - Key: JAVA_VERSION_PREFIX
      Value: 1.8.0_65
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jre$JAVA_VERSION_PREFIX
    Name: env
  - Env:
    - Key: PATH
      Value: $JAVA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - 'apt-get update &&     apt-get -y install     openssh-server     sudo     procps     wget     unzip     mc     locales     ca-certificates     curl
      &&     mkdir /var/run/sshd &&     sed ''s@session\s*required\s*pam_loginuid.so@session
      optional pam_loginuid.so@g'' -i /etc/pam.d/sshd &&     echo "%sudo ALL=(ALL)
      NOPASSWD: ALL" >> /etc/sudoers &&     useradd -u 1000 -G users,sudo -d /home/user
      --shell /bin/bash -m user'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'PASS=$(openssl rand -base64 32) &&     echo "$PASS\n$PASS" | passwd user &&     sudo
      echo -e "deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\ndeb-src
      http://ppa.launchpad.net/git-core/ppa/ubuntu precise main" >> /etc/apt/sources.list.d/sources.list
      &&     sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1715D88E1DF1F24
      &&     sudo apt-get install git subversion -y &&     apt-get clean &&     wget    --no-cookies    --no-check-certificate    --header
      "Cookie: oraclelicense=accept-securebackup-cookie"    -qO-    "http://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b17/jre-$JAVA_VERSION-linux-x64.tar.gz"
      | tar -zx -C /opt/ &&     apt-get -y autoremove     && apt-get -y clean     &&
      rm -rf /var/lib/apt/lists/* &&     echo "#! /bin/bash\n set -e\n sudo /usr/sbin/sshd
      -D &\n exec \"\$@\"" > /home/user/entrypoint.sh && chmod a+x /home/user/entrypoint.sh'
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - echo "export JAVA_HOME=/opt/jre$JAVA_VERSION_PREFIX\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH"
      >> /home/user/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y curl     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver pgp.mit.edu --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://download.mono-project.com/repo/debian wheezy/snapshots/4.2.1.102
      main" > /etc/apt/sources.list.d/mono-xamarin.list     && apt-get install -f     &&
      apt-get update     && apt-get install -y mono-devel ca-certificates-mono fsharp
      mono-vbnc nuget     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DNX_VERSION
      Value: 1.0.0-rc1-update1
    Name: env
  - Env:
    - Key: DNX_USER_HOME
      Value: /opt/dnx
    Name: env
  - Env:
    - Key: DNX_RUNTIME_ID
      Value: ubuntu.14.04-x64
    Name: env
  - CmdLine:
    - printf "deb http://ftp.us.debian.org/debian jessie main\n" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update && apt-get -qqy install unzip libc6-dev libicu-dev sqlite3
      libsqlite3-dev && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh |
      DNX_USER_HOME=$DNX_USER_HOME DNX_BRANCH=v$DNX_VERSION sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source $DNX_USER_HOME/dnvm/dnvm.sh     && dnvm install $DNX_VERSION
      -alias default     && dnvm alias default | xargs -i ln -s $DNX_USER_HOME/runtimes/{}
      $DNX_USER_HOME/runtimes/default"
    Name: run
    PrependShell: true
  - CmdLine:
    - LIBUV_VERSION=1.4.2     && apt-get -qq update     && apt-get -qqy install autoconf
      automake build-essential libtool     && curl -sSL https://github.com/libuv/libuv/archive/v${LIBUV_VERSION}.tar.gz
      | tar zxfv - -C /usr/local/src     && cd /usr/local/src/libuv-$LIBUV_VERSION     &&
      sh autogen.sh && ./configure && make && make install     && rm -rf /usr/local/src/libuv-$LIBUV_VERSION     &&
      ldconfig     && apt-get -y purge autoconf automake build-essential libtool     &&
      apt-get -y autoremove     && apt-get -y clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $DNX_USER_HOME/runtimes/default/bin:$PATH
    Name: env
  - Env:
    - Key: MONO_THREADS_PER_CPU
      Value: "50"
    Name: env
  - Name: user
    User: user
  - CmdLine:
    - echo 'export PATH=$DNX_USER_HOME/runtimes/default/bin:$PATH' >> /home/user/.bashrc
    Name: run
    PrependShell: true
  - Labels:
    - Key: che:server:5004:ref
      Value: asp.net.server
    - Key: che:server:5004:protocol
      Value: http
    Name: label
  - Name: expose
    Ports:
    - "22"
    - "4403"
    - "5004"
  - Name: workdir
    Path: /projects
  - CmdLine:
    - tail -f /dev/null
    Name: cmd
    PrependShell: true
  From:
    Image: debian:wheezy
  Name: ""
  Platform: ""
  SourceCode: FROM debian:wheezy
