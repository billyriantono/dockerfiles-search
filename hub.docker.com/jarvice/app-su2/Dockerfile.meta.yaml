MetaArgs: null
Stages:
- BaseName: nimbix/ubuntu-base:trusty
  Commands:
  - Maintainer: stephen.fox@nimbix.net
    Name: maintainer
  - Env:
    - Key: SU2_VERSION
      Value: 4.3.0
    Name: env
  - Env:
    - Key: BUILD_DIR
      Value: /tmp/build
    Name: env
  - Env:
    - Key: HDF5_VER
      Value: 1.8.17
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     software-properties-common     python-software-properties     git     python-pip     python-setuptools     python-virtualenv     python3-pip     python-matplotlib     python3-matplotlib     python3.4-venv     pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y python-pip     libblas-dev     python-dev     libpython-dev     python-dev     libpython3-dev     python3-dev     libopenblas-base     libopenblas-dev     liblapack3gf     liblapack-dev     build-essential     python-numpy     python-scipy     gfortran
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip install --upgrade numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip install --upgrade scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ubuntu-toolchain-r/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --upgrade -y     swig     gcc-4.9     gcc-4.9-base     libstdc++6
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${BUILD_DIR}
  - CmdLine:
    - apt-get update && apt-get install -y     curl     libibverbs-dev     libibverbs1     librdmacm1     librdmacm-dev     rdmacm-utils     libibmad-dev     libibmad5     byacc     libmlx5-1     libibumad-dev     libibumad3     flex
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O http://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich2-2.2.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf mvapich2-2.2.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${BUILD_DIR}/mvapich2-2.2
  - CmdLine:
    - ./configure RSH_CMD=/usr/bin/ssh SSH_CMD=/usr/bin/ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "${BUILD_DIR}/hdf5"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${BUILD_DIR}/hdf5"'
  - CmdLine:
    - curl -o hdf5-${HDF5_VER}.tar.gz "https://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-${HDF5_VER}.tar.gz"
      && tar xvf hdf5-${HDF5_VER}.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${BUILD_DIR}/hdf5/hdf5-${HDF5_VER}"'
  - CmdLine:
    - CC=/usr/local/mvapich2/bin/mpicc ./configure --enable-parallel --prefix="/usr/local/hdf5-${HDF5_VER}"
      | tee -a hdf5-config.log &&     make clean &&     CC=/usr/local/mvapich2/bin/mpicc
      ./configure --enable-parallel --prefix="/usr/local/hdf5-${HDF5_VER}" | tee -a
      hdf5-config.log  &&     make -j4 | tee -a make.log &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "${BUILD_DIR}/CGNS"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${BUILD_DIR}/CGNS"'
  - CmdLine:
    - wget "https://github.com/CGNS/CGNS/archive/v3.2.1.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf v3.2.1.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${BUILD_DIR}/CGNS/CGNS-3.2.1"'
  - CmdLine:
    - mkdir -p /usr/local/CGNS
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${BUILD_DIR}/CGNS/CGNS-3.2.1/build"'
  - CmdLine:
    - CMAKE_PREFIX_PATH="/usr/local/hdf5-${HDF5_VER}"     CMAKE_C_COMPILER=/usr/local/mvapich2/bin/mpicc     cmake     -DCGNS_ENABLE_64BIT=on     -DCGNS_ENABLE_TESTS=on     -DCGNS_BUILD_SHARED=on     -DCGNS_BUILD_CGNSTOOLS=on     -DCMAKE_INSTALL_PREFIX=/usr/local/CGNS-3.2.1     ..
      &&     make -j4 &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD_DIR}/su2-build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${BUILD_DIR}/su2-build
  - CmdLine:
    - git clone https://github.com/su2code/SU2.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${BUILD_DIR}/su2-build/SU2
  - CmdLine:
    - git checkout v${SU2_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure     --enable-mpi     --with-cc=/usr/local/bin/mpicc     --with-cxx=/usr/local/bin/mpicxx     --with-CGNS-lib=/usr/local/CGNS-3.2.1/lib     --with-CGNS-include=/usr/local/CGNS-3.2.1/include     --enable-PY_WRAPPER     --prefix=/usr/local/su2/${SU2_VERSION}     CXXFLAGS="-O3"
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ${BUILD_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./scripts
    - /usr/local/scripts
  - CmdLine:
    - chown -R 555 /usr/local/scripts
    Name: run
    PrependShell: true
  - Name: user
    User: nimbix
  From:
    Image: nimbix/ubuntu-base:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM nimbix/ubuntu-base:trusty
