{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.16-apache",
      "SourceCode": "FROM php:7.2.16-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2.16-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git zlib1g-dev libxml2-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" RUN php -r \"if (hash_file('SHA384', 'composer-setup.php') === 'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae') \t{ echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"laravel/installer\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=\"$PATH:$HOME/.composer/vendor/bin\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c \"http://xdebug.org/files/xdebug-2.7.0.tgz\"   \u0026\u0026 tar -xf xdebug-2.7.0.tgz   \u0026\u0026 rm xdebug-2.7.0.tgz   \u0026\u0026 (         cd xdebug-2.7.0         \u0026\u0026 phpize         \u0026\u0026 ./configure --enable-xdebug         \u0026\u0026 make         \u0026\u0026 make install     )   \u0026\u0026 rm -r xdebug-2.7.0   \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -ms /bin/bash ken"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        }
      ]
    }
  ]
}