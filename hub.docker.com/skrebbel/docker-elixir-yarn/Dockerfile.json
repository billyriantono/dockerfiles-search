{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "elixir:1.9.0",
      "SourceCode": "FROM elixir:1.9.0",
      "Platform": "",
      "From": {
        "Image": "elixir:1.9.0"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get -y install apt-transport-https curl lsb-release unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\"     \u0026\u0026 echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list      \u0026\u0026 curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -     \u0026\u0026 echo \"deb https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | tee -a /etc/apt/sources.list.d/docker.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_13.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \t\u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/firefox:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "FIREFOX_URL=\"https://download-installer.cdn.mozilla.net/pub/firefox/releases/57.0/linux-x86_64/en-US/firefox-57.0.tar.bz2\"     FIREFOX_SHA256=\"c2cae016089e816c03283a359c582efab3bca34e6048ecc2382b43c1eb342457\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.tar.bz2 $FIREFOX_URL   \u0026\u0026 echo \"$FIREFOX_SHA256 /tmp/firefox.tar.bz2\" | sha256sum -c   \u0026\u0026 tar -jxf /tmp/firefox.tar.bz2   \u0026\u0026 rm /tmp/firefox.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://www.slimjet.com/chrome/download-chrome.php?file=files%2F70.0.3538.77%2Fgoogle-chrome-stable_current_amd64.deb       \u0026\u0026 (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install)        \u0026\u0026 rm -rf /tmp/google-chrome-stable_current_amd64.deb       \u0026\u0026 sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g'            \"/opt/google/chrome/google-chrome\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install apt-transport-https lsb-release ca-certificates     \u0026\u0026 wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg     \u0026\u0026 sh -c 'echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/php.list'     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install php7.2 -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y nodejs yarn google-cloud-sdk docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}