{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7-alpine3.9",
      "SourceCode": "FROM python:3.7-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "python:3.7-alpine3.9"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Shin ADACHI \u003cshn@glucose.jp\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "4.1.0"
        },
        {
          "Key": "OPENCV_PYTHON_TAG",
          "Name": "arg",
          "Value": "25"
        },
        {
          "Key": "DLIB_VERSION",
          "Name": "arg",
          "Value": "19.17"
        },
        {
          "Key": "BUILD_DEPS",
          "Name": "arg",
          "Value": "\"wget unzip cmake build-base linux-headers libpng-dev libjpeg-turbo-dev giflib-dev openblas-dev   libx11-dev python libwebp-dev tiff-dev openexr-dev jasper-dev zlib-dev\""
        },
        {
          "Key": "RUNTIME_DEPS",
          "Name": "arg",
          "Value": "\"libpng libjpeg-turbo giflib openblas libx11 libwebp tiff openexr jasper zlib\""
        },
        {
          "Key": "LIB_PREFIX",
          "Name": "arg",
          "Value": "/usr/local"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/app"
            },
            {
              "Key": "PIP_NO_CACHE_DIR",
              "Value": "off"
            },
            {
              "Key": "PIP_DISABLE_PIP_VERSION_CHECK",
              "Value": "on"
            },
            {
              "Key": "PIP_DEFAULT_TIMEOUT",
              "Value": "100"
            },
            {
              "Key": "LIB_PREFIX",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "echo \"OpenCV: ${OPENCV_VERSION}\" \u0026\u0026   echo \"Dlib: ${DLIB_VERSION}\" \u0026\u0026   apk add -u --no-cache $RUNTIME_DEPS \u0026\u0026   apk add -u --no-cache --virtual .build-dependencies $BUILD_DEPS \u0026\u0026   pip install -U numpy pip \u0026\u0026   cd /tmp \u0026\u0026   wget -q https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.zip -O opencv.zip \u0026\u0026   wget -q https://github.com/Itseez/opencv_contrib/archive/${OPENCV_VERSION}.zip -O opencv_contrib.zip \u0026\u0026   unzip -qq opencv.zip \u0026\u0026   mv opencv-${OPENCV_VERSION} opencv \u0026\u0026   unzip -qq opencv_contrib.zip \u0026\u0026   mv opencv_contrib-${OPENCV_VERSION} opencv_contrib \u0026\u0026   mkdir opencv/build \u0026\u0026   cd opencv/build \u0026\u0026   cmake     -D CMAKE_BUILD_TYPE=RELEASE -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_JAVA=OFF     -D BUILD_opencv_apps=OFF -D BUILD_opencv_aruco=OFF -D BUILD_opencv_bgsegm=OFF -D BUILD_opencv_bioinspired=OFF     -D BUILD_opencv_ccalib=OFF -D BUILD_opencv_datasets=OFF -D BUILD_opencv_dnn_objdetect=OFF -D BUILD_opencv_dpm=OFF     -D BUILD_opencv_fuzzy=OFF -D BUILD_opencv_hfs=OFF -D BUILD_opencv_java_bindings_generator=OFF     -D BUILD_opencv_js=OFF -D BUILD_opencv_img_hash=OFF -D BUILD_opencv_line_descriptor=OFF     -D BUILD_opencv_optflow=OFF -D BUILD_opencv_phase_unwrapping=OFF     -D BUILD_opencv_python2=OFF     -D BUILD_opencv_python3=ON     -D BUILD_opencv_python_bindings_generator=ON     -D BUILD_opencv_reg=OFF -D BUILD_opencv_rgbd=OFF     -D BUILD_opencv_saliency=OFF -D BUILD_opencv_shape=OFF -D BUILD_opencv_stereo=OFF     -D BUILD_opencv_stitching=OFF -D BUILD_opencv_structured_light=OFF -D BUILD_opencv_superres=OFF     -D BUILD_opencv_surface_matching=OFF -D BUILD_opencv_ts=OFF -D BUILD_opencv_xobjdetect=OFF     -D BUILD_opencv_xphoto=OFF -D WITH_VTK=OFF -D CMAKE_INSTALL_PREFIX=$LIB_PREFIX     -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules     .. \u0026\u0026   make -j $(getconf _NPROCESSORS_ONLN) \u0026\u0026   make install \u0026\u0026   cd /usr/local/lib/python3.7/site-packages \u0026\u0026   mkdir opencv_python-${OPENCV_VERSION}.${OPENCV_PYTHON_TAG}.dist-info \u0026\u0026   echo $'Metadata-Version: 2.1\\nName: opencv-python\\nVersion: '${OPENCV_VERSION}.${OPENCV_PYTHON_TAG} \u003e     opencv_python-${OPENCV_VERSION}.${OPENCV_PYTHON_TAG}.dist-info/METADATA \u0026\u0026   echo 'cv2' \u003e opencv_python-${OPENCV_VERSION}.${OPENCV_PYTHON_TAG}.dist-info/top_level.txt \u0026\u0026   cd /tmp \u0026\u0026   wget -q https://github.com/davisking/dlib/archive/v${DLIB_VERSION}.zip -O dlib.zip \u0026\u0026   unzip -qq dlib.zip \u0026\u0026   mv dlib-${DLIB_VERSION} dlib \u0026\u0026   rm dlib.zip \u0026\u0026   cd dlib \u0026\u0026   mkdir -p build \u0026\u0026   cd build \u0026\u0026   cmake     -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=$LIB_PREFIX     -D DLIB_NO_GUI_SUPPORT=ON     -D DLIB_USE_BLAS=ON -D DLIB_GIF_SUPPORT=ON -D DLIB_PNG_SUPPORT=ON -D DLIB_JPEG_SUPPORT=ON     -D DLIB_USE_CUDA=OFF     .. \u0026\u0026   make -j $(getconf _NPROCESSORS_ONLN) \u0026\u0026   cd /tmp/dlib/build \u0026\u0026   make install \u0026\u0026   cd .. \u0026\u0026   python setup.py install \u0026\u0026   apk del .build-dependencies \u0026\u0026   cd / \u0026\u0026 rm -rf /var/cache/apk/* /usr/share/man /usr/local/share/man /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}