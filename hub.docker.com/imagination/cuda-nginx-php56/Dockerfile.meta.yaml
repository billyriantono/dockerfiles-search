MetaArgs: null
Stages:
- BaseName: imagination/cuda-baseimage-docker:cuda-75
  Commands:
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update -y && apt-get install -y vim curl wget build-essential python-software-properties
      git-core unzip     pkg-config python-pip python-dev gfortran libopenblas-dev
      liblapack-dev libpng-dev libfreetype6-dev libjpeg-dev libhdf5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - https://download.newrelic.com/548C16BF.gpg | apt-key add - && echo
      "deb http://apt.newrelic.com/debian/ newrelic non-free" > /etc/apt/sources.list.d/newrelic.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 4F4EA0AAE5267A6C
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ondrej/php5-5.6 && add-apt-repository -y ppa:nginx/stable
      && add-apt-repository -y ppa:mc3man/trusty-media
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && sudo apt-get upgrade -y && apt-get install -yq php5 php5-cli
      php5-fpm php5-mysqlnd \t\t\t\t\tphp5-pgsql php5-curl php5-gd php5-mcrypt php5-intl
      php5-imap php5-tidy \t\t\t\t\tphp-pear php5-xmlrpc newrelic-php5 ffmpeg imagemagick
      php5-imagick php5-dev nginx-full ntp -y"
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install timezonedb
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -p /usr/share/zoneinfo/Australia/Sydney /etc/localtime
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda-7.5/targets/x86_64-linux/lib/stubs
    Name: env
  - CmdLine:
    - pip install -U setuptools && pip install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install chainer==1.6.2.1 Cython==0.23.4 h5py==2.5.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install image && pip install awscli --ignore-installed six
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/setup
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/setup.sh
    - /root/setup/setup.sh
  - CmdLine:
    - chmod +x /root/setup/setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - (cd /root/setup/; /root/setup/setup.sh)
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/default
    - /etc/nginx/sites-available/default
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/php-fpm.conf
    - /etc/php5/fpm/php-fpm.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/www.conf
    - /etc/php5/fpm/pool.d/www.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/.bashrc
    - /root/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/nginx.sh
    - /etc/service/nginx/run
  - CmdLine:
    - chmod +x /etc/service/nginx/run
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/phpfpm.sh
    - /etc/service/phpfpm/run
  - CmdLine:
    - chmod +x /etc/service/phpfpm/run
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/ntp.sh
    - /etc/service/ntp/run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/ntp.conf
    - /etc/ntp.conf
  - CmdLine:
    - chmod +x /etc/service/ntp/run
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/public
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/index.php
    - /var/www/public/index.php
  - CmdLine:
    - chown -R www-data:www-data /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 755 /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/newrelic.sh
    - /etc/my_init.d/newrelic.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/newrelic.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: NR_INSTALL_SILENT
      Value: "1"
    Name: env
  - Env:
    - Key: NR_INSTALL_KEY
      Value: '**ChangeMe**'
    Name: env
  - Env:
    - Key: NR_APP_NAME
      Value: '"Docker PHP Application"'
    Name: env
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 0.12.10
    Name: env
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash     &&
      source $NVM_DIR/nvm.sh     && nvm install $NODE_VERSION     && nvm alias default
      $NODE_VERSION     && nvm use default
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/v$NODE_VERSION/bin:$PATH
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: imagination/cuda-baseimage-docker:cuda-75
  Name: ""
  Platform: ""
  SourceCode: FROM imagination/cuda-baseimage-docker:cuda-75
