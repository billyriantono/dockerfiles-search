{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:0.10-slim",
      "SourceCode": "FROM node:0.10-slim",
      "Platform": "",
      "From": {
        "Image": "node:0.10-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r camo \u0026\u0026 useradd -r -m -g camo camo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends wget \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 apt-get purge -y --auto-remove wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends wget \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\"     \u0026\u0026 wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5     \u0026\u0026 gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc     \u0026\u0026 chmod +x /usr/local/bin/tini     \u0026\u0026 tini -h     \u0026\u0026 apt-get purge -y --auto-remove wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CAMO_VERSION",
              "Value": "2.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CAMO_DOWNLOAD_URL",
              "Value": "https://github.com/atmos/camo/archive/v2.3.0.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/camo     \u0026\u0026 cd /var/lib/camo     \u0026\u0026 npm install $CAMO_DOWNLOAD_URL     \u0026\u0026 npm cache clear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/camo"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "CmdLine": [
            "camo"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}