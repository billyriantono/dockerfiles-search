{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache-stretch",
      "SourceCode": "FROM php:7.1-apache-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache-stretch"
      },
      "Commands": [
        {
          "Maintainer": "averor.dev@gmail.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"Europe/Warsaw\" \u003e /etc/timezone \u0026\u0026 cp /usr/share/zoneinfo/Europe/Warsaw /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOCUMENT_ROOT",
              "Value": "/var/www/html/public"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     locales     nano     git     libicu57 libicu-dev     librabbitmq-dev     libxml2 libxml2-dev     sqlite3     zip unzip     zlib1g-dev     libcurl4-gnutls-dev     libssl-dev     libpng-dev     libxrender1     libfontconfig     mysql-client     moreutils     libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/# pl_PL.UTF-8 UTF-8/pl_PL.UTF-8 UTF-8/' /etc/locale.gen     \u0026\u0026 dpkg-reconfigure --frontend=noninteractive locales     \u0026\u0026 update-locale LANG=pl_PL.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "pl_PL.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "pl_PL:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "pl_PL.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./xdebug.ini",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL \"http://xdebug.org/files/xdebug-2.5.5.tgz\" -o xdebug.tar.gz     \u0026\u0026 mkdir -p /tmp/xdebug     \u0026\u0026 tar -xf xdebug.tar.gz -C /tmp/xdebug --strip-components=1     \u0026\u0026 rm xdebug.tar.gz     \u0026\u0026 docker-php-ext-configure /tmp/xdebug --enable-xdebug     \u0026\u0026 docker-php-ext-install /tmp/xdebug     \u0026\u0026 rm -r /tmp/xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /tmp/xdebug.ini \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath     \u0026\u0026 docker-php-ext-install curl     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-install iconv     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install json     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-install pcntl     \u0026\u0026 docker-php-ext-install pdo     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-install session     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 docker-php-ext-install xml     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install pgsql     \u0026\u0026 docker-php-ext-install pdo_pgsql pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/ext-mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -G www-data www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'PassEnv APP_ENV' \u003e /etc/apache2/conf-enabled/expose-env.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'PassEnv APP_DEBUG' \u003e\u003e /etc/apache2/conf-enabled/expose-env.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'PassEnv APP_SECRET' \u003e\u003e /etc/apache2/conf-enabled/expose-env.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www/html/var \u0026\u0026 chmod -R 770 /var/www/html/var"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}