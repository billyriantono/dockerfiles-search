{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Bluewhale \u003cblue@owhale.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "MAKE_J",
          "Name": "arg",
          "Value": "4"
        },
        {
          "Key": "NGINX_VERSION",
          "Name": "arg",
          "Value": "1.17.6"
        },
        {
          "Key": "PAGESPEED_VERSION",
          "Name": "arg",
          "Value": "1.13.35.2"
        },
        {
          "Key": "LIBPNG_VERSION",
          "Name": "arg",
          "Value": "1.6.36"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026         apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y         apt-utils         git         g++         gcc         curl         make         unzip         bzip2         gperf         python         openssl         libuuid1         apt-utils         pkg-config         icu-devtools         build-essential         ca-certificates         uuid-dev         zlib1g-dev         libicu-dev         libssl-dev         apache2-dev         libpcre3         libpcre3-dev         libpng-dev         libaprutil1-dev         linux-headers-amd64         libjpeg62-turbo-dev         libcurl4-openssl-dev         libpam-dev         software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:certbot/certbot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y python-certbot-nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026         curl -L http://prdownloads.sourceforge.net/libpng/libpng-${LIBPNG_VERSION}.tar.gz | tar -zx \u0026\u0026         cd /tmp/libpng-${LIBPNG_VERSION} \u0026\u0026         ./configure --build=$CBUILD --host=$CHOST --prefix=/usr --enable-shared --with-libpng-compat \u0026\u0026         make -j${MAKE_J} install V=0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026         curl -O -L https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-stable.zip \u0026\u0026         unzip v${PAGESPEED_VERSION}-stable.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/incubator-pagespeed-ngx-${PAGESPEED_VERSION}-stable/ \u0026\u0026         psol_url=https://dl.google.com/dl/page-speed/psol/${PAGESPEED_VERSION}.tar.gz \u0026\u0026         [ -e scripts/format_binary_url.sh ] \u0026\u0026 psol_url=$(scripts/format_binary_url.sh PSOL_BINARY_URL) \u0026\u0026         echo \"URL: ${psol_url}\" \u0026\u0026         curl -L ${psol_url} | tar -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026         git clone git://github.com/vozlt/nginx-module-vts.git \u0026\u0026         git clone https://github.com/openresty/headers-more-nginx-module.git \u0026\u0026         git clone git://github.com/yaoweibin/ngx_http_substitutions_filter_module.git \u0026\u0026         git clone https://github.com/sto/ngx_http_auth_pam_module.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026         curl -L http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -zx \u0026\u0026         cd /tmp/nginx-${NGINX_VERSION} \u0026\u0026         LD_LIBRARY_PATH=/tmp/incubator-pagespeed-ngx-${PAGESPEED_VERSION}/usr/lib:/usr/lib ./configure         --sbin-path=/usr/sbin         --modules-path=/usr/lib/nginx         --with-http_ssl_module         --with-http_gzip_static_module         --with-file-aio         --with-http_v2_module         --with-http_realip_module         --with-http_sub_module         --with-http_gunzip_module         --with-http_secure_link_module         --with-http_stub_status_module         --with-threads         --with-stream         --with-stream_ssl_module         --without-http_autoindex_module         --without-http_browser_module         --without-http_memcached_module         --without-http_userid_module         --without-mail_pop3_module         --without-mail_imap_module         --without-mail_smtp_module         --without-http_split_clients_module         --without-http_uwsgi_module         --without-http_scgi_module         --without-http_upstream_ip_hash_module         --prefix=/etc/nginx         --conf-path=/etc/nginx/nginx.conf         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --pid-path=/var/run/nginx.pid         --add-module=/tmp/nginx-module-vts         --add-module=/tmp/headers-more-nginx-module         --add-module=/tmp/ngx_http_substitutions_filter_module         --add-module=/tmp/ngx_http_auth_pam_module         --add-module=/tmp/incubator-pagespeed-ngx-${PAGESPEED_VERSION}-stable \u0026\u0026         make install --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove -y git unzip bzip2 build-essential g++ gcc make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/* \u0026\u0026         ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026         ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026         mkdir -p /var/cache/ngx_pagespeed \u0026\u0026         chmod -R o+wr /var/cache/ngx_pagespeed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/conf.d",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/include",
            "/etc/nginx/include"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/fastcgi_params.orig",
            "/etc/nginx/fastcgi_params.orig"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "8080"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/nginx"
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Test": [
              "CMD-SHELL",
              "curl -I http://127.0.0.1:8080/health || exit 1"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}