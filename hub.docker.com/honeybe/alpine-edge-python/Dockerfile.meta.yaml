MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: 2.7.13
    Name: env
  - Env:
    - Key: LIBRESSL_VERSION
      Value: "2.4"
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 9.0.1
    Name: env
  - CmdLine:
    - apk add --no-cache clang clang-libs llvm llvm-libs alpine-sdk
    Name: run
    PrependShell: true
  - Env:
    - Key: CC
      Value: clang
    Name: env
  - Env:
    - Key: CXX
      Value: clang++
    Name: env
  - CmdLine:
    - "set -ex         && apk add --no-cache --update \t        binutils \t\tllvm
      \t\tllvm-libs                 clang \t\tclang-libs \t\tlibressl                 libressl$LIBRESSL_VERSION-libssl
      \                libressl$LIBRESSL_VERSION-libtls                 libressl$LIBRESSL_VERSION-libcrypto
      \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\tclang \t\tllvm                 libressl
      \t\ttar \t\txz \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& wget -O pubkeys.txt \"https://www.python.org/static/files/pubkeys.txt\"
      \t&& gpg --import pubkeys.txt \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache
      --virtual .build-deps  \t\tbzip2-dev \t\tllvm-dev \t\tclang-dev \t\tgdbm-dev
      \t\tlibc-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\tlibressl                 libressl$LIBRESSL_VERSION-libssl
      \                libressl$LIBRESSL_VERSION-libtls                 libressl$LIBRESSL_VERSION-libcrypto
      \t\tlibressl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk
      \t\ttk-dev \t\tzlib-dev \t\texpat-dev \t\t&& apk del .fetch-deps \t\t&& cd /usr/src/python
      \t&& ./configure \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\t--enable-ipv6
      \t\t--with-threads \t\t--with-system-ffi \t\t--with-system-expat \t\t--with-system-zlib
      \t\tCC=$CC CXX=$CXX \t\tCFLAGS=\"-O3 -Qunused-arguments\" CXXFLAGS=\"-O3\" CPPFLAGS=\"-Qunused-arguments\"
      CXXCPPFLAGS=\"-Qunused-arguments\" \t&& make -j$(getconf _NPROCESSORS_ONLN)
      \t&& make install \t\t\t&& wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py'
      \t\t&& python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t&& rm /tmp/get-pip.py
      \t&& pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\"
      \t&& [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit
      }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\(
      -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name
      '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t&& runDeps=\"$( \t\tscanelf
      --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\",
      $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed
      \t\t\t| sort -u \t)\" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk
      del .build-deps \t&& rm -rf /usr/src/python ~/.cache"
    Name: run
    PrependShell: true
  - CmdLine:
    - python2
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
