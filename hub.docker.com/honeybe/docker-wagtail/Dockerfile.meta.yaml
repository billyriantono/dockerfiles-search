MetaArgs: null
Stages:
- BaseName: honeybe/alpine-pypy:latest
  Commands:
  - CmdLine:
    - echo "ipv6" >> /etc/modules
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories     &&
      echo -e '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories     &&
      echo -e '@community http://dl-cdn.alpinelinux.org/alpine/edge/community' >>
      /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache     libpng     libjpeg     bash     yaml     gettext     gsl     libjasper     tiff     libwebp     libavc1394     libdc1394     imagemagick     libpq     libtbb@testing     zlib     ffmpeg@community      ffmpeg-libs@community     openexr@community     openexr-tools@community     clang-dev     ffmpeg-dev@community     openexr-dev@community
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENCV_VERSION
      Value: 3.2.0
    Name: env
  - Env:
    - Key: WAGTAIL_VERSION
      Value: "1.9"
    Name: env
  - Env:
    - Key: DJANGO_VERSION
      Value: 1.10.0
    Name: env
  - Env:
    - Key: CC
      Value: /usr/bin/clang
    Name: env
  - Env:
    - Key: CXX
      Value: /usr/bin/clang++
    Name: env
  - Env:
    - Key: LIBRARY_PATH
      Value: /lib:/usr/lib
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .build-deps@testing          python3-dev         curl
      \        cmake         pkgconf         unzip         build-base         libavc1394-dev
      \        libjpeg-turbo-dev         libpng-dev         libdc1394-dev         tiff-dev
      \        libwebp-dev         imagemagick-dev         zlib-dev         postgresql-dev
      \        libtbb@testing         libtbb-dev@testing         linux-headers     &&
      ln -s /usr/include/locale.h /usr/include/xlocale.h     && pip3 install cython
      \    && pip3 install numpy     && mkdir /opt && cd /opt     && curl -OsSL https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
      \    && unzip ${OPENCV_VERSION}.zip     && cd /opt/opencv-${OPENCV_VERSION}
      \    && mkdir build && cd build     && cmake -D CMAKE_BUILD_TYPE=RELEASE         -D
      CMAKE_INSTALL_PREFIX=/usr/local         -D INSTALL_C_EXAMPLES=OFF     \t-D INSTALL_PYTHON_EXAMPLES=OFF
      \    \t-D BUILD_EXAMPLES=OFF         -D WITH_FFMPEG=YES         -D WITH_IPP=NO
      \        -D WITH_OPENEXR=YES         ..     && VERBOSE=1 make && make install
      \    && cd && rm -fr /opt     && pip3 install django==$DJANGO_VERSION wagtail==$WAGTAIL_VERSION
      django-redis psycopg2 wand     && apk del .build-deps && rm -r /root/.cache"
    Name: run
    PrependShell: true
  From:
    Image: honeybe/alpine-pypy:latest
  Name: ""
  Platform: ""
  SourceCode: FROM honeybe/alpine-pypy:latest
