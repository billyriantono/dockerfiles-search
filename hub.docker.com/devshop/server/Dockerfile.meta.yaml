MetaArgs:
- DefaultValue: '"ubuntu1804"'
  Key: OS_VERSION
  ProvidedValue: null
  Value: '"ubuntu1804"'
- DefaultValue: '"geerlingguy/docker-${OS_VERSION}-ansible:latest"'
  Key: FROM_IMAGE
  ProvidedValue: null
  Value: '"geerlingguy/docker-${OS_VERSION}-ansible:latest"'
Stages:
- BaseName: $FROM_IMAGE
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jon Pugh"'
    Name: label
  - Env:
    - Key: LINE
      Value: '"echo ────────────────────────────────────────────────────────────────────────────────"'
    Name: env
  - Env:
    - Key: OS_VERSION
      Value: ${OS_VERSION:-"ubuntu1804"}
    Name: env
  - Env:
    - Key: FROM_IMAGE
      Value: ${FROM_IMAGE:-"geerlingguy/docker-${OS_VERSION}-ansible:latest"}
    Name: env
  - Key: DEVSHOP_PATH
    Name: arg
    Value: '"/usr/share/devshop"'
  - Env:
    - Key: DEVSHOP_PATH
      Value: ${DEVSHOP_PATH:-"/usr/share/devshop"}
    Name: env
  - Name: workdir
    Path: $DEVSHOP_PATH
  - Env:
    - Key: PATH
      Value: '"${DEVSHOP_PATH}/bin:$PATH"'
    Name: env
  - CmdLine:
    - '$LINE && echo &&     echo " Welcome to the DevShop Dockerfile:  Build Phase  "
      &&     echo && $LINE &&     echo "# OS Info: "  &&     (cat /etc/centos-release
      2>/dev/null || cat /etc/os-release 2>/dev/null) &&     echo && $LINE &&     echo
      "# Initial Environment Variables: " &&     env &&     $LINE'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'if [ -d $DEVSHOP_PATH ]; then           $LINE;         echo " Checking $DEVSHOP_PATH:
      ! Pre-existing DevShop found !";         ls -la $DEVSHOP_PATH; cat $DEVSHOP_PATH/.git/HEAD;
      git status; git log -1;         echo "Deleting $DEVSHOP_PATH and /var/aegir/*
      ...";          rm -rf $DEVSHOP_PATH /var/aegir/* /var/aegir/.* 2> /dev/null;     else              $LINE;         echo
      " Checking $DEVSHOP_PATH: DevShop Not Present. This is a fresh image";     fi;     $LINE;     echo
      "Preparing to copy DevShop source code from host...";     $LINE;'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - $DEVSHOP_PATH
  - CmdLine:
    - devshop-logo " Contents of ${DEVSHOP_PATH} after copy";   git status; git log
      -1; $LINE
    Name: run
    PrependShell: true
  - CmdLine:
    - devshop-logo "Preparing Docker Container Environment..."
    Name: run
    PrependShell: true
  - Key: BUILD_ARG_EXAMPLE
    Name: arg
    Value: '"buildArgDefaultValue"'
  - Env:
    - Key: BUILD_ARG_EXAMPLE
      Value: ${BUILD_ARG_EXAMPLE:-"buildArgDefaultValue"}
    Name: env
  - Key: ANSIBLE_PLAYBOOK
    Name: arg
    Value: '"/usr/share/devshop/docker/playbook.server.yml"'
  - Env:
    - Key: ANSIBLE_PLAYBOOK
      Value: ${ANSIBLE_PLAYBOOK:-"/usr/share/devshop/docker/playbook.server.yml"}
    Name: env
  - Key: ANSIBLE_PLAYBOOK_COMMAND_OPTIONS
    Name: arg
    Value: '""'
  - Env:
    - Key: ANSIBLE_PLAYBOOK_COMMAND_OPTIONS
      Value: ${ANSIBLE_PLAYBOOK_COMMAND_OPTIONS:-""}
    Name: env
  - Key: ANSIBLE_CONFIG
    Name: arg
    Value: '"/usr/share/devshop/ansible.cfg"'
  - Env:
    - Key: ANSIBLE_CONFIG
      Value: ${ANSIBLE_CONFIG:-"/usr/share/devshop/ansible.cfg"}
    Name: env
  - Key: ANSIBLE_VERBOSITY
    Name: arg
    Value: "0"
  - Env:
    - Key: ANSIBLE_VERBOSITY
      Value: ${ANSIBLE_VERBOSITY:-0}
    Name: env
  - Key: ANSIBLE_TAGS
    Name: arg
    Value: '"all"'
  - Env:
    - Key: ANSIBLE_TAGS
      Value: ${ANSIBLE_TAGS:-"all"}
    Name: env
  - Key: ANSIBLE_SKIP_TAGS
    Name: arg
    Value: '"install-devmaster"'
  - Env:
    - Key: ANSIBLE_SKIP_TAGS
      Value: ${ANSIBLE_SKIP_TAGS:-"install-devmaster"}
    Name: env
  - Key: ANSIBLE_EXTRA_VARS
    Name: arg
    Value: '"dockerfile_extra_vars_source: ''ARG default Dockerfile:201''"'
  - Env:
    - Key: ANSIBLE_EXTRA_VARS
      Value: '${ANSIBLE_EXTRA_VARS:-"dockerfile_extra_vars_source: ''ENV default Dockerfile:202"}'
    Name: env
  - Key: DEVSHOP_USER_UID
    Name: arg
    Value: "1000"
  - Env:
    - Key: DEVSHOP_USER_UID
      Value: ${DEVSHOP_USER_UID:-1000}
    Name: env
  - Env:
    - Key: DEVSHOP_ENTRYPOINT_LOG_FILES
      Value: '"/var/log/aegir/*"'
    Name: env
  - Env:
    - Key: DEVSHOP_TESTS_ASSETS_PATH
      Value: '"${DEVSHOP_PATH}/.github/test-assets"'
    Name: env
  - Env:
    - Key: ANSIBLE_BUILD_COMMAND
      Value: '"ansible-playbook $ANSIBLE_PLAYBOOK -e aegir_user_uid=$DEVSHOP_USER_UID
        -e aegir_user_gid=$DEVSHOP_USER_UID --tags="$ANSIBLE_TAGS" --skip-tags="$ANSIBLE_SKIP_TAGS"
        $ANSIBLE_PLAYBOOK_COMMAND_OPTIONS "'
    Name: env
  - CmdLine:
    - echo "Container Environment Preparation Complete";   devshop-line
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-systemd-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 766 $DEVSHOP_TESTS_ASSETS_PATH
    Name: run
    PrependShell: true
  - Key: DEVSHOP_REMOVE_DEVMASTER
    Name: arg
    Value: "0"
  - Env:
    - Key: DEVSHOP_REMOVE_DEVMASTER
      Value: ${DEVSHOP_REMOVE_DEVMASTER:-0}
    Name: env
  - CmdLine:
    - if [ $DEVSHOP_REMOVE_DEVMASTER ]; then rm -rf /var/aegir/devmaster-1.x; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - devshop-logo "Ansible Playbook Environment" &&     env &&   [ -z "$ANSIBLE_EXTRA_VARS"
      ] &&     devshop-logo "No extra vars found. Use \"--build-arg ANSIBLE_EXTRA_VARS='var=value
      var2=value2'\" to alter the build." ||     devshop-logo "Ansible Playbook Extra
      Vars Found" &&     echo $ANSIBLE_EXTRA_VARS
    Name: run
    PrependShell: true
  - CmdLine:
    - 'devshop-logo "Running: $ANSIBLE_BUILD_COMMAND --extra-vars=\"$ANSIBLE_EXTRA_VARS\""
      &&   $ANSIBLE_BUILD_COMMAND --extra-vars="$ANSIBLE_EXTRA_VARS"'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'devshop-logo "Ansible Playbook Docker Build Complete!" && echo "Playbook: $ANSIBLE_PLAYBOOK"
      && echo "Tags: $ANSIBLE_TAGS" && echo "Skip Tags: $ANSIBLE_SKIP_TAGS" && echo
      "Extra Vars: $ANSIBLE_EXTRA_VARS" && echo "" && echo "Ansible Playbook Command:"
      && echo "$ANSIBLE_BUILD_COMMAND" && echo ""'
    Name: run
    PrependShell: true
  - CmdLine:
    - devshop-logo "Wrote build information to /etc/os-release" &&     env | grep
      "DEVSHOP" >> /etc/os-release &&     env | grep "ANSIBLE" >> /etc/os-release
      &&     cat  /etc/os-release
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3306"
    - "443"
    - "80"
    - "8025"
  - Name: workdir
    Path: /var/aegir
  - CmdLine:
    - docker-systemd
    Name: cmd
    PrependShell: false
  - CmdLine:
    - docker-entrypoint
    Name: entrypoint
    PrependShell: false
  From:
    Image: $FROM_IMAGE
  Name: ""
  Platform: ""
  SourceCode: FROM $FROM_IMAGE
