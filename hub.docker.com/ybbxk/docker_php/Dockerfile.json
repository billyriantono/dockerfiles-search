{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libmcrypt-dev         libicu-dev         libfreetype6-dev         libjpeg62-turbo-dev         libpng-dev         libpcre3-dev        git         libzip-dev         unzip         libxml2         libxml2-dev         libxslt-dev         libsodium-dev \tlibgmp3-dev     \u0026\u0026 docker-php-ext-install -j$(nproc) intl     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install mysqli     \u0026\u0026 docker-php-ext-install pdo     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug redis swoole     \u0026\u0026 docker-php-ext-install soap xsl sodium sockets gmp simplexml     \u0026\u0026 docker-php-ext-enable xdebug redis swoole     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_mode=\\\"req\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_handler=\\\"dbgp\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back=0\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://phar.phpunit.de/phpunit-7.phar -o /usr/local/bin/phpunit     \u0026\u0026 chmod 755 /usr/local/bin/phpunit     \u0026\u0026 usermod -u 1000 -s /bin/bash -d /home/www-data www-data     \u0026\u0026 groupmod -g 1000 www-data     \u0026\u0026 mkdir /home/www-data     \u0026\u0026 chown www-data:www-data /home/www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"readfile('http://getcomposer.org/installer');\" | php -- --install-dir=/usr/bin/ --filename=composer     \u0026\u0026 su - www-data -c 'composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/'     \u0026\u0026 echo \"export PATH=$PATH:/root/.composer/vendor/bin/\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"squizlabs/php_codesniffer=*\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/workspace"
          ]
        }
      ]
    }
  ]
}