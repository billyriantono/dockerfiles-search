{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tozd/runit:ubuntu-trusty",
      "SourceCode": "FROM tozd/runit:ubuntu-trusty",
      "Platform": "",
      "From": {
        "Image": "tozd/runit:ubuntu-trusty"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "3000/tcp"
          ]
        },
        {
          "Env": [
            {
              "Key": "ROOT_URL",
              "Value": "http://example.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAIL_URL",
              "Value": "smtp://user:password@mailhost:port/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METEOR_SETTINGS",
              "Value": "{}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "3000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_URL",
              "Value": "mongodb://mongodb/meteor"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_OPLOG_URL",
              "Value": "mongodb://mongodb/local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOG_TO_STDOUT",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/meteor"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc",
            "/etc"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -q -q \u0026\u0026  apt-get --yes --force-yes install curl python build-essential git \u0026\u0026  export METEOR_ALLOW_SUPERUSER=true \u0026\u0026  curl https://install.meteor.com/ | sed s/--progress-bar/-sL/g | sh \u0026\u0026  apt-get --yes --force-yes purge curl \u0026\u0026  apt-get --yes --force-yes autoremove \u0026\u0026  adduser --system --group meteor --home / \u0026\u0026  export \"NODE=$(find /.meteor/ -path '*bin/node' | grep '/.meteor/packages/meteor-tool/' | sort | head -n 1)\" \u0026\u0026  ln -sf ${NODE} /usr/local/bin/node \u0026\u0026  ln -sf \"$(dirname \"$NODE\")/npm\" /usr/local/bin/npm \u0026\u0026  echo \"export NODE_PATH=\\\"$(dirname $(dirname \"$NODE\"))/lib/node_modules\\\"\" \u003e\u003e /etc/service/meteor/run.env \u0026\u0026  locale-gen --no-purge en_US.UTF-8 \u0026\u0026  update-locale LANG=en_US.UTF-8 \u0026\u0026  echo locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8 | debconf-set-selections \u0026\u0026  echo locales locales/default_environment_locale select en_US.UTF-8 | debconf-set-selections \u0026\u0026  dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "COPY . /source",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN export METEOR_ALLOW_SUPERUSER=true \u0026\u0026  rm -rf /source/.meteor/local /source/node_modules \u0026\u0026  if [ -x /source/docker-source.sh ]; then /source/docker-source.sh; fi \u0026\u0026  cp -a /source /build \u0026\u0026  rm -rf /source \u0026\u0026  cd /build \u0026\u0026  meteor list \u0026\u0026  if [ -f package.json ]; then meteor npm install --production --unsafe-perm; fi \u0026\u0026  meteor build --headless --directory / \u0026\u0026  cd / \u0026\u0026  rm -rf /build \u0026\u0026  if [ -e /bundle/programs/server/package.json ]; then cd /bundle/programs/server; npm install --unsafe-perm; fi",
          "Name": "onbuild"
        }
      ]
    }
  ]
}