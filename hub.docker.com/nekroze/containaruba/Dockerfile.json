{
  "MetaArgs": [
    {
      "Key": "VERSION_RUBY",
      "DefaultValue": "2.5",
      "ProvidedValue": null,
      "Value": "2.5"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:${VERSION_RUBY}",
      "SourceCode": "FROM ruby:${VERSION_RUBY}",
      "Platform": "",
      "From": {
        "Image": "ruby:${VERSION_RUBY}"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"containaruba\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Aruba, the Cucumber CLI testing extension, containerized!\""
            },
            {
              "Key": "org.label-schema.usage",
              "Value": "\"/README.md\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/Nekroze/containaruba\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/Nekroze/containaruba.git\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Taylor 'Nekroze' Lawson \u003chttps://keybase.io/nekroze\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "VERSION_ARUBA",
          "Name": "arg",
          "Value": "'~\u003e 0.14.8'"
        },
        {
          "Key": "VERSION_CUCUMBER_LINT",
          "Name": "arg",
          "Value": "'~\u003e 0.1.2'"
        },
        {
          "Key": "VERSION_DOCKER_COMPOSE",
          "Name": "arg",
          "Value": "'1.22.0'"
        },
        {
          "CmdLine": [
            "echo \"Installing Docker-CE\"  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y    apt-transport-https    ca-certificates    curl    gnupg2    software-properties-common    bsdmainutils  \u0026\u0026 curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -  \u0026\u0026 apt-key fingerprint 0EBFCD88  \u0026\u0026  add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/debian    $(lsb_release -cs)    stable\"  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y docker-ce  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Docker Compose\"  \u0026\u0026 curl -L \"https://github.com/docker/compose/releases/download/${VERSION_DOCKER_COMPOSE}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose  \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Gem's Aruba and Cucumber Lint\"  \u0026\u0026 gem install cucumber_lint -v \"${VERSION_CUCUMBER_LINT}\"  \u0026\u0026 gem install aruba -v \"${VERSION_ARUBA}\"  \u0026\u0026 mkdir -p /usr/src/app  \u0026\u0026 chmod 777 /usr/src/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/output"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /output"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "./README.md",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "features"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/src/app/features"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        }
      ]
    }
  ]
}