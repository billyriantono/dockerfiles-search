MetaArgs: null
Stages:
- As: completion
  BaseName: golang:1.12
  Commands:
  - Name: workdir
    Path: $GOPATH/src/app/completion
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./completion/go.*
    - ./
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./completion
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app/docker
    - $GOPATH/src/app/app/docker
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/compgen.sh
    - $GOPATH/src/app/compgen.sh
  - CmdLine:
    - cd ../  && ./compgen.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    - Key: GOARCH
      Value: "386"
    Name: env
  - CmdLine:
    - GOOS=linux go build -a -installsuffix cgo -ldflags='-w -s' -o /usr/bin/dab-completion-linux
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - GOOS=darwin go build -a -installsuffix cgo -ldflags='-w -s' -o /usr/bin/dab-completion-darwin
      .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12
  Name: completion
  Platform: ""
  SourceCode: FROM golang:1.12 AS completion
- As: versioning
  BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.git
    - ./
  - CmdLine:
    - git rev-parse HEAD > /VERSION  && git clone https://github.com/Nekroze/dab.git  &&
      cd dab  && git log --graph --pretty=format:'\e[0;31m%h\e[0m|â†“|%s \e[0;34m<%an>\e[0m'
      --abbrev-commit | tac > /LOG
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: versioning
  Platform: ""
  SourceCode: FROM alpine:latest AS versioning
- As: prep
  BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk add --no-cache curl gettext bash openssl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/Nekroze/subcommander/master/subcommander
    - /usr/bin/subcommander
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/helm/helm/master/scripts/get
    - /bin/get-helm
  - Name: workdir
    Path: /usr/bin
  - CmdLine:
    - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s
      https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"  &&
      chmod 755 /usr/bin/subcommander /usr/bin/kubectl /bin/get-helm  && env HELM_INSTALL_DIR=/usr/bin
      get-helm
    Name: run
    PrependShell: true
  - Chown: ""
    From: koalaman/shellcheck-alpine:stable
    Name: copy
    SourcesAndDest:
    - /bin/shellcheck
    - /usr/bin/shellcheck
  - Chown: ""
    From: completion
    Name: copy
    SourcesAndDest:
    - /usr/bin/dab-completion*
    - /usr/bin/
  - Chown: ""
    From: nekroze/ishmael:v1.3.0
    Name: copy
    SourcesAndDest:
    - /app
    - /usr/bin/ishmael
  - Chown: ""
    From: nekroze/docker-compose-gen:latest
    Name: copy
    SourcesAndDest:
    - /app
    - /usr/bin/docker-compose-gen
  From:
    Image: alpine:latest
  Name: prep
  Platform: ""
  SourceCode: FROM alpine:latest AS prep
- As: main
  BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.name
      Value: '"dab"'
    - Key: org.label-schema.description
      Value: '"The Developer Lab"'
    - Key: org.label-schema.usage
      Value: '"/opt/dab/README.md"'
    - Key: org.label-schema.url
      Value: '"https://github.com/Nekroze/dab"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/Nekroze/dab.git"'
    - Key: org.label-schema.vendor
      Value: '"Taylor ''Nekroze'' Lawson <https://keybase.io/nekroze>"'
    Name: label
  - CmdLine:
    - apk add --no-cache --virtual .toolchain     python3-dev libffi-dev openssl-dev
      build-base  && apk add --no-cache docker-cli python3  && rm -f /usr/bin/dockerd
      /usr/bin/docker-containerd*  && pip3 install "docker-compose>=1.24.0,<1.25.0"
      asciinema  && apk del .toolchain  && rm -rf ~/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache git openssh tree util-linux jq nss-tools multitail ca-certificates
      highlight libintl entr postgresql-client task bash  && pip3 install yq  && echo
      "check_mail:0" >> /etc/multitail.conf  && chmod 666 /etc/passwd
    Name: run
    PrependShell: true
  - Env:
    - Key: DAB
      Value: '"/opt/dab"'
    - Key: PS1
      Value: '"\[\e[33m\]\A\[\e[m\] @ \[\e[36m\]\h\[\e[m\] \[\e[35m\]\\$\[\e[m\] "'
    - Key: PATH
      Value: '"$PATH:/opt/dab/bin"'
    - Key: APPLICATION
      Value: '"dab"'
    - Key: SUBCOMMANDS
      Value: '"/opt/dab/subcommands"'
    - Key: HOOK
      Value: '"/opt/dab/bin/pre-hook"'
    - Key: DESCRIPTION
      Value: '"The Developer Laboratory (Dab) is a flexible tool for managing multiple
        interdependent projects and their orchestration/execution, all while providing
        a friendly user experience and handy devops tools."'
    Name: env
  - Chown: ""
    From: prep
    Name: copy
    SourcesAndDest:
    - /usr/bin/subcommander
    - /usr/bin/shellcheck
    - /usr/bin/dab-completion*
    - /usr/bin/ishmael
    - /usr/bin/docker-compose-gen
    - /usr/bin/kubectl
    - /usr/bin/envsubst
    - /usr/bin/helm
    - /usr/bin/
  - Chown: ""
    From: versioning
    Name: copy
    SourcesAndDest:
    - /VERSION
    - /LOG
    - /
  - Name: workdir
    Path: /opt/dab
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app
    - ./README.md
    - ./LICENSE
    - ./dab
    - ./
  - CmdLine:
    - /opt/dab/bin/dab
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: main
  Platform: ""
  SourceCode: FROM alpine:latest AS main
