MetaArgs: null
Stages:
- BaseName: skateman/manageiq-pods:backend-latest
  Commands:
  - Maintainer: ManageIQ https://github.com/ManageIQ/manageiq-appliance-build
    Name: maintainer
  - Key: REF
    Name: arg
    Value: master
  - Env:
    - Key: SUI_ROOT
      Value: /opt/manageiq/manageiq-ui-service
    Name: env
  - Labels:
    - Key: name
      Value: '"manageiq"'
    - Key: vendor
      Value: '"ManageIQ"'
    - Key: version
      Value: '"Master"'
    - Key: release
      Value: ${REF}
    - Key: url
      Value: '"http://manageiq.org/"'
    - Key: summary
      Value: '"ManageIQ appliance image"'
    - Key: description
      Value: '"ManageIQ is a management and automation platform for virtual, private,
        and hybrid cloud infrastructures."'
    - Key: io.k8s.display-name
      Value: '"ManageIQ"'
    - Key: io.k8s.description
      Value: '"ManageIQ is a management and automation platform for virtual, private,
        and hybrid cloud infrastructures."'
    - Key: io.openshift.expose-services
      Value: '"80:http"'
    - Key: io.openshift.tags
      Value: '"ManageIQ,miq,manageiq"'
    Name: label
  - CmdLine:
    - yum -y install centos-release-scl-rh &&     yum -y install httpd --setopt=tsflags=nodocs
      &&     yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${SUI_ROOT} &&     curl -L https://github.com/ManageIQ/manageiq-ui-service/tarball/${REF}
      | tar vxz -C ${SUI_ROOT} --strip 1
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/httpd/conf.d/ssl.conf &&     rm -f /etc/httpd/conf.d/manageiq-http*.conf
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_ROOT}
  - CmdLine:
    - source /etc/default/evm &&     export RAILS_USE_MEMORY_STORE="true" &&     rake
      update:ui &&     bin/rails log:clear tmp:clear &&     rake evm:compile_assets
      &&     npm cache clean &&     bower cache clean &&     rm -rvf ${APP_ROOT}/tmp/cache/assets
      &&     rm -vf ${APP_ROOT}/log/*.log
    Name: run
    PrependShell: true
  - CmdLine:
    - source /etc/default/evm &&     cd ${SUI_ROOT} &&     yarn install --production
      &&     yarn run build &&     yarn cache clean
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-assets/check-dependent-services.sh
    - /bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-assets/manageiq-http.conf
    - /etc/httpd/conf.d
  - CmdLine:
    - /usr/local/bin/dumb-init
    - --single-child
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - entrypoint
    Name: cmd
    PrependShell: false
  From:
    Image: skateman/manageiq-pods:backend-latest
  Name: ""
  Platform: ""
  SourceCode: FROM skateman/manageiq-pods:backend-latest
