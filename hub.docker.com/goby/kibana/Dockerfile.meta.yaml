MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Env:
    - Key: KIBANA_VERSION
      Value: 4.6.4
    Name: env
  - Env:
    - Key: PKG_NAME
      Value: kibana
    Name: env
  - Env:
    - Key: PKG_PLATFORM
      Value: linux-x86_64
    Name: env
  - Env:
    - Key: KIBANA_PKG
      Value: $PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM
    Name: env
  - Env:
    - Key: KIBANA_CONFIG
      Value: /opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM/config/kibana.yml
    Name: env
  - Env:
    - Key: KIBANA_URL
      Value: https://download.elastic.co/$PKG_NAME/$PKG_NAME/$KIBANA_PKG.tar.gz
    Name: env
  - Env:
    - Key: ELASTICSEARCH_HOST
      Value: elasticsearch
    Name: env
  - CmdLine:
    - addgroup -S kibana && adduser -S -G kibana kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update ca-certificates wget nodejs     && mkdir -p /opt     && wget
      -O /tmp/$KIBANA_PKG.tar.gz $KIBANA_URL     && tar -xvzf /tmp/$KIBANA_PKG.tar.gz
      -C /opt/     && ln -s /opt/$KIBANA_PKG /opt/$PKG_NAME     && sed -i "s/localhost/$ELASTICSEARCH_HOST/"
      $KIBANA_CONFIG     && rm -rf /tmp/*.tar.gz /var/cache/apk/* /opt/$KIBANA_PKG/node/     &&
      mkdir -p /opt/$KIBANA_PKG/node/bin/     && ln -s $(which node) /opt/$PKG_NAME/node/bin/node     &&
      chown -R kibana:kibana /opt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5601"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - kibana.yml
    - /opt/kibana/config/kibana.yml
  - Name: user
    User: kibana
  - Name: workdir
    Path: '["/opt/kibana"]'
  - CmdLine:
    - /opt/kibana/bin/kibana
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
