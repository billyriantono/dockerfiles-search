MetaArgs:
- DefaultValue: '"paulchan/minidlna:env-1.0"'
  Key: ENV_IMG
  ProvidedValue: null
  Value: '"paulchan/minidlna:env-1.0"'
- DefaultValue: '"https://github.com/PaulChanHK/minidlna.git"'
  Key: SRC_GIT
  ProvidedValue: null
  Value: '"https://github.com/PaulChanHK/minidlna.git"'
- DefaultValue: '"master"'
  Key: SRC_BCH
  ProvidedValue: null
  Value: '"master"'
- DefaultValue: noninteractive
  Key: DEBIAN_FRONTEND
  ProvidedValue: null
  Value: noninteractive
- DefaultValue: '""'
  Key: APT_SERVER
  ProvidedValue: null
  Value: '""'
- DefaultValue: '"Movie Episode Music Photo"'
  Key: MEDIA_DIRS
  ProvidedValue: null
  Value: '"Movie Episode Music Photo"'
Stages:
- As: pkg_build
  BaseName: ${ENV_IMG}
  Commands:
  - Key: SRC_GIT
    Name: arg
    Value: null
  - Key: SRC_BCH
    Name: arg
    Value: null
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - '( git clone ${SRC_GIT} -b ${SRC_BCH}   && mkdir /pkg   && cd minidlna*   &&
      export VERGIT=$(git describe --tags)   && export VERSTR=$(echo $VERGIT | sed
      -e ''s/^v//'' -e ''s/_/./g'')   && echo VERSTR=$VERSTR   && { echo "Git version
      : $VERGIT"   &&   echo "Git branch  : ${SRC_BCH}"   &&   echo "Git remote  :
      $(git remote -v | head -n1)"   &&   echo Changes in origin/original..HEAD :   &&   git
      log --pretty=oneline origin/original..HEAD |        sed -r ''s/^([0-9a-f]{8})[0-9a-f]{32}(.*)/\1\2/'';
      } | tee /pkg/CHANGES   && ./autogen.sh >/dev/null   && ./configure >/dev/null    &&
      make -j$(nproc) >/dev/null   && checkinstall -y -D --install=no --pkgname=minidlna
      --pkgversion=$VERSTR   && mv minidlna_$VERSTR*.deb /pkg   )'
    Name: run
    PrependShell: true
  From:
    Image: ${ENV_IMG}
  Name: pkg_build
  Platform: ""
  SourceCode: FROM ${ENV_IMG} as pkg_build
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/PaulChanHK/docker-minidlna/tree/master/run"'
    Name: label
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: null
  - Key: APT_SERVER
    Name: arg
    Value: null
  - Key: MEDIA_DIRS
    Name: arg
    Value: null
  - Chown: ""
    From: pkg_build
    Name: copy
    SourcesAndDest:
    - /pkg
    - /pkg
  - CmdLine:
    - ( echo "APT_SERVER=$APT_SERVER"       && [ -z "$APT_SERVER" ] || {          echo
      'Acquire::http::Proxy "'http://${APT_SERVER}/'";' >> /etc/apt/apt.conf.d/01proxy
      ; }       && apt-get update -y       && apt-get install --yes --assume-yes         libavcodec-ffmpeg56
      libavformat-ffmpeg56 libavutil-ffmpeg54         libexif12 libflac8 libid3tag0
      libjpeg8 libjpeg-turbo8         libogg0 libsqlite3-0 libvorbis0a libvorbisenc2
      libvorbisfile3       && cp /pkg/CHANGES /       && dpkg -i /pkg/minidlna*.deb       &&
      mkdir -p /conf/       && { for i in db ${MEDIA_DIRS}; do mkdir -p /media/$i;
      done; }       && rm -fr /pkg       && apt-get clean && rm -rf /var/lib/apt/lists/*     )
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - minidlna.conf
    - /conf/
  - Name: expose
    Ports:
    - 8200/tcp
  - Name: expose
    Ports:
    - 1900/udp
  - CmdLine:
    - /conf/entrypoint.sh
    - -S
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -f
    - /conf/minidlna.conf
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
