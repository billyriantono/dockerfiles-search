MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: '"Dongdong Kong"'
    Name: maintainer
  - Name: workdir
    Path: /model
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: VERSION_CODENAME
      Value: bionic
    Name: env
  - CmdLine:
    - rm /etc/apt/sources.list  && echo "deb [trusted=yes] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/
      ${VERSION_CODENAME} main restricted universe multiverse" >> /etc/apt/sources.list  &&
      echo "deb [trusted=yes] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${VERSION_CODENAME}-updates
      main restricted universe multiverse" >> /etc/apt/sources.list  && echo "deb
      [trusted=yes] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${VERSION_CODENAME}-backports
      main restricted universe multiverse" >> /etc/apt/sources.list  && echo "deb
      [trusted=yes] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${VERSION_CODENAME}-security
      main restricted universe multiverse" >> /etc/apt/sources.list  && echo 'Acquire::https
      { Verify-Peer "false"; Verify-Host "false"; }' >> /etc/apt/apt.conf.d/tuna.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt install -y --no-install-recommends --assume-yes     ca-certificates     dejagnu     sudo
      libtool     vim git subversion gfortran cmake cdo nco ncl-ncarg     libxml2-utils
      libxml-libxml-perl     python     make m4     libcurl4-openssl-dev liblapack-dev
      libblas-dev mpich libmpich-dev  && apt-get clean
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pkgs/*.gz
    - /usr/local/src/
  - Key: ZDIR
    Name: arg
    Value: /usr/local/zlib
  - CmdLine:
    - cd /usr/local/src/zlib-1.2.11  && CC=mpicc ./configure --prefix=${ZDIR}  &&
      make  && make install  && rm -rf /usr/local/src/zlib-1.2.11
    Name: run
    PrependShell: true
  - Env:
    - Key: CC
      Value: mpicc
    - Key: CXX
      Value: mpicxx
    - Key: FC
      Value: mpif90
    - Key: F77
      Value: mpif90
    Name: env
  - Key: PNDIR
    Name: arg
    Value: /usr/local/pnetcdf
  - CmdLine:
    - cd /usr/local/src/pnetcdf-1.11.0  && FC=mpif90 MPICC=mpicc CFLAGS="-fPIC -g
      -O2"     ./configure --prefix=${PNDIR} --enable-shared --enable-profiling &&
      make  && make install  && rm -rf /usr/local/src/pnetcdf-1.11.0
    Name: run
    PrependShell: true
  - Key: H5DIR
    Name: arg
    Value: /usr/local/hdf5
  - CmdLine:
    - cd /usr/local/src/hdf5-1.10.4  && CC=mpicc FC=mpif90 CFLAGS="-fPIC -w" ./configure
      --prefix=${H5DIR}  --with-zlib=${ZDIR} --enable-parallel --enable-hl  && make  &&
      make install  && rm -rf /usr/local/src/hdf5-1.10.4
    Name: run
    PrependShell: true
  - Key: NCDIR
    Name: arg
    Value: /usr/local/netcdf4
  - CmdLine:
    - cd /usr/local/src/netcdf-c-4.6.2  && CC=mpicc CPPFLAGS="-I${PNDIR}/include -I${H5DIR}/include
      -I${ZDIR}/include"     LDFLAGS="-L${PNDIR}/lib -L${H5DIR}/lib -L${ZDIR}/lib"     ./configure
      --prefix=${NCDIR} --enable-parallel-tests  && make  && make install  && rm -rf
      /usr/local/src/netcdf-c-4.6.2
    Name: run
    PrependShell: true
  - Key: NFDIR
    Name: arg
    Value: /usr/local/netcdff4
  - CmdLine:
    - cd /usr/local/src/netcdf-fortran-4.4.5  && CPPFLAGS=-I${NCDIR}/include LDFLAGS=-L${NCDIR}/lib     ./configure
      --prefix=${NFDIR}  && make  && make install  && rm -rf /usr/local/src/netcdf-fortran-4.4.5
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ${NCDIR}/lib > /etc/ld.so.conf.d/netcdf.conf  && echo ${NFDIR}/lib >> /etc/ld.so.conf.d/netcdf.conf  &&
      echo ${ZDIR}/lib >> /etc/ld.so.conf.d/netcdf.conf  && echo ${H5DIR}/lib >> /etc/ld.so.conf.d/netcdf.conf  &&
      echo ${PNDIR}/lib >> /etc/ld.so.conf.d/netcdf.conf  && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --assume-yes gnupg wget curl  && apt install -y --no-install-recommends
      --assume-yes     x11-apps tree  && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key
      add -  && echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee
      /etc/apt/sources.list.d/sublime-text.list  && apt update  && apt install sublime-text
      -y
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: clm
    Name: env
  - CmdLine:
    - useradd -m -G adm,sudo -s /bin/bash $USER  && echo "root:root" | chpasswd  &&
      echo "clm:clm" | chpasswd  && apt-get remove wget -y
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b release-clm5.0 https://github.com/ESCOMP/ctsm  && cd ctsm && ./manage_externals/checkout_externals  &&
      chown -R clm:clm /model/ctsm  && cd ..
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /inputdata
  - Env:
    - Key: PATH
      Value: '"/model/ctsm/cime/scripts:${NCDIR}/bin:${PATH}"'
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/*.xml
    - /home/${USER}/.cime/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - /home/${USER}/cesm/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_CLM50_example01.sh
    - /home/${USER}/cesm/
  - Name: workdir
    Path: /home/${USER}/cesm
  - CmdLine:
    - chown -R clm:clm /home /home/${USER} /home/${USER}/.cime /inputdata
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
