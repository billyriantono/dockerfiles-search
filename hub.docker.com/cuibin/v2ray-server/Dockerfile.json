{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/openssl.conf",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "yum -y install openssl \u0026\u0026     openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ssl.key -out ssl.crt -config openssl.conf \u0026\u0026     cat ssl.crt ssl.key \u003e ssl.pem \u0026\u0026     cat ssl.pem \u0026\u0026     curl -L -o /tmp/go.sh https://install.direct/go.sh \u0026\u0026     chmod +x /tmp/go.sh \u0026\u0026     /tmp/go.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/v2ray/v2ray",
            "/usr/bin/v2ray/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/v2ray/v2ctl",
            "/usr/bin/v2ray/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/v2ray/geoip.dat",
            "/usr/bin/v2ray/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/v2ray/geosite.dat",
            "/usr/bin/v2ray/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/ssl.key",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/ssl.pem",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/config.json",
            "/etc/v2ray/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/https.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "api/package.json",
            "/root/api/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "api/index.js",
            "/root/api/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "api/src",
            "/root/api/src/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/api"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     mkdir /var/log/v2ray/ \u0026\u0026     chmod +x /usr/bin/v2ray/v2ctl \u0026\u0026     chmod +x /usr/bin/v2ray/v2ray \u0026\u0026     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash \u0026\u0026     source ~/.bashrc \u0026\u0026     nvm install 10.15.3 \u0026\u0026     ln -sf /root/.nvm/versions/node/v10.15.3/bin/node /usr/bin/node \u0026\u0026     ln -sf /root/.nvm/versions/node/v10.15.3/bin/npm /usr/bin/npm \u0026\u0026     npm install --production \u0026\u0026     yum -y install crontabs \u0026\u0026     yum -y install epel-release \u0026\u0026     yum -y install nginx \u0026\u0026     yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional \u0026\u0026     yum -y install certbot python2-certbot-nginx \u0026\u0026     echo \"0 0 15 */3 * certbot renew\" | tee -a /etc/crontab \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "node",
            "/root/api/index"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}