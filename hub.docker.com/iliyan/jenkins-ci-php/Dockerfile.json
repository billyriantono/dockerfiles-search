{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Iliyan Trifonov \u003ciliyan.trifonov@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted universe multiverse\" \u003e /etc/apt/sources.list; \techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-updates main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list; \techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-backports main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list; \techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-security main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update; \tapt-get -qq install wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keys.gnupg.net --recv-keys 14AA40EC0831756756D7F66C4F4EA0AAE5267A6C; \techo \"deb http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu trusty main\" \u003e\u003e /etc/apt/sources.list; \techo \"deb-src http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu trusty main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add - \u003e /dev/null 2\u003e\u00261; \techo \"deb http://pkg.jenkins-ci.org/debian binary/\" \u003e /etc/apt/sources.list.d/jenkins.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive; \tapt-get update; \tapt-get -qq install php5 php5-cli php5-xsl php5-json php5-curl php5-sqlite php5-mysqlnd php5-xdebug php5-intl php5-mcrypt php-pear curl git ant jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service jenkins start; \twhile ! echo exit | nc -z -w 3 localhost 8080; do sleep 3; done; \twhile curl -s http://localhost:8080 | grep \"Please wait\"; do echo \"Waiting for Jenkins to start..\" \u0026\u0026 sleep 3; done; \techo \"Jenkins started\"; \tcurl -L https://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack; \twget http://localhost:8080/jnlpJars/jenkins-cli.jar; \tjava -jar jenkins-cli.jar -s http://localhost:8080 install-plugin checkstyle cloverphp crap4j dry htmlpublisher jdepend plot pmd violations warnings xunit git ansicolor; \tjava -jar jenkins-cli.jar -s http://localhost:8080 safe-restart; \tcurl https://raw.githubusercontent.com/sebastianbergmann/php-jenkins-template/master/config.xml | \tjava -jar jenkins-cli.jar -s http://localhost:8080 create-job php-template; \tjava -jar jenkins-cli.jar -s http://localhost:8080 reload-configuration"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's|disable_functions.*=|;disable_functions=|' /etc/php5/cli/php.ini; \techo \"xdebug.max_nesting_level = 500\" \u003e\u003e /etc/php5/mods-available/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/jenkins/composerbin \u0026\u0026 chown -R jenkins:jenkins /home/jenkins; \tsudo -H -u jenkins bash -c ' \t\tcurl -sS https://getcomposer.org/installer | php -- --install-dir=/home/jenkins/composerbin --filename=composer;'; \tln -s /home/jenkins/composerbin/composer /usr/local/bin/; \tsudo -H -u jenkins bash -c ' \t\texport COMPOSER_BIN_DIR=/home/jenkins/composerbin; \t\texport COMPOSER_HOME=/home/jenkins; \t\tcomposer global require \"phpunit/phpunit=*\" --prefer-source --no-interaction; \t\tcomposer global require \"squizlabs/php_codesniffer=*\" --prefer-source --no-interaction; \t\tcomposer global require \"phploc/phploc=*\" --prefer-source --no-interaction; \t\tcomposer global require \"pdepend/pdepend=*\" --prefer-source --no-interaction; \t\tcomposer global require \"phpmd/phpmd=*\" --prefer-source --no-interaction; \t\tcomposer global require \"sebastian/phpcpd=*\" --prefer-source --no-interaction; \t\tcomposer global require \"theseer/phpdox=*\" --prefer-source --no-interaction; '; \tln -s /home/jenkins/composerbin/pdepend /usr/local/bin/; \tln -s /home/jenkins/composerbin/phpcpd /usr/local/bin/; \tln -s /home/jenkins/composerbin/phpcs /usr/local/bin/; \tln -s /home/jenkins/composerbin/phpdox /usr/local/bin/; \tln -s /home/jenkins/composerbin/phploc /usr/local/bin/; \tln -s /home/jenkins/composerbin/phpmd /usr/local/bin/; \tln -s /home/jenkins/composerbin/phpunit /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'if [ -z \"$TIME_ZONE\" ]; then echo \"No TIME_ZONE env set!\" \u0026\u0026 exit 1; fi' \u003e /set_timezone.sh; \techo \"sed -i 's|;date.timezone.*=.*|date.timezone='\\$TIME_ZONE'|' /etc/php5/cli/php.ini;\" \u003e\u003e /set_timezone.sh; \techo \"echo \\$TIME_ZONE \u003e /etc/timezone;\" \u003e\u003e /set_timezone.sh; \techo \"export DEBCONF_NONINTERACTIVE_SEEN=true DEBIAN_FRONTEND=noninteractive;\" \u003e\u003e /set_timezone.sh; \techo \"dpkg-reconfigure tzdata\" \u003e\u003e /set_timezone.sh; \techo \"echo time zone set to: \\$TIME_ZONE\"  \u003e\u003e /set_timezone.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'if [ -n \"$TIME_ZONE\" ]; then sh /set_timezone.sh; fi;' \u003e /run_all.sh; \techo \"curl -o /var/lib/jenkins/jobs/php-template/config.xml https://raw.githubusercontent.com/sebastianbergmann/php-jenkins-template/master/config.xml \" \u003e\u003e /run_all.sh; \techo \"service jenkins start\" \u003e\u003e /run_all.sh; \techo \"tail -f /var/log/jenkins/jenkins.log;\" \u003e\u003e /run_all.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "/run_all.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}