MetaArgs:
- DefaultValue: null
  Key: DOCKER_TAG
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: NAME
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: VERSION
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: COMMIT
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: URL
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: BRANCH
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: DATE
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: REPO
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: DOCKERFILE_PATH
  ProvidedValue: null
  Value: null
Stages:
- As: meta
  BaseName: alpine
  Commands:
  - Key: DOCKER_TAG
    Name: arg
    Value: null
  - Key: NAME
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: COMMIT
    Name: arg
    Value: null
  - Key: URL
    Name: arg
    Value: null
  - Key: BRANCH
    Name: arg
    Value: null
  - Key: DATE
    Name: arg
    Value: null
  - Key: REPO
    Name: arg
    Value: null
  - Key: DOCKERFILE_PATH
    Name: arg
    Value: null
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"${DOCKERFILE_PATH}"'
    - /provision/"${DOCKERFILE_PATH}"
  - CmdLine:
    - 'echo >>/etc/docker-meta.yml "- name: ${NAME}"     && echo >>/etc/docker-meta.yml
      "  version: ${VERSION}"     && echo >>/etc/docker-meta.yml "  commit: ${COMMIT}"     &&
      echo >>/etc/docker-meta.yml "  url: ${URL}"     && echo >>/etc/docker-meta.yml
      "  branch: ${BRANCH}"     && echo >>/etc/docker-meta.yml "  date: ${DATE}"     &&
      echo >>/etc/docker-meta.yml "  repo: ${REPO}"     && echo >>/etc/docker-meta.yml
      "  docker_tag: ${DOCKER_TAG}"     && echo >>/etc/docker-meta.yml "  dockerfile_path:
      ${DOCKERFILE_PATH}"     && echo >>/etc/docker-meta.yml "  dockerfile: |"     &&
      sed >>/etc/docker-meta.yml ''s/^/    /'' </provision/"${DOCKERFILE_PATH}"     &&
      rm -r /provision'
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: meta
  Platform: ""
  SourceCode: FROM alpine AS meta
- BaseName: debian:stretch-slim
  Commands:
  - Chown: ""
    From: meta
    Name: copy
    SourcesAndDest:
    - /etc/docker-meta.yml
    - /etc/new-docker-meta.yml
  - CmdLine:
    - 'cat /etc/new-docker-meta.yml >>/etc/docker-meta.yml     && echo Full meta:     &&
      cat /etc/docker-meta.yml     && rm /etc/new-docker-meta.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update     && apt-get install -y --no-install-recommends         psmisc         procps         ca-certificates         curl         bzip2         vim         git         graphviz         htop         ncdu         ssh-client         certbot     &&
      echo Installing LIGO DataGrid     || exit 1     bash -c '         v=1;         until
      [ $v -eq 0 ]; do             curl https://www.lsc-group.phys.uwm.edu/lscdatagrid/doc/ldg-client.sh
      | bash;             v=$?;         done     '     && echo Installing nodejs     &&
      curl -sL https://deb.nodesource.com/setup_10.x | bash -     && apt-get install
      -y nodejs     && rm -rf /var/lib/apt/lists/*     && curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      >~/miniconda.sh     && bash ~/miniconda.sh -b -f -p /opt/anaconda     && rm
      ~/miniconda.sh     && /opt/anaconda/bin/conda update conda     && /opt/anaconda/bin/conda
      update --all     && /opt/anaconda/bin/conda config --add channels conda-forge     &&
      echo 'export PATH=/opt/anaconda/bin:"$PATH"' >/etc/profile.d/conda.sh     &&
      rm -r /opt/anaconda/pkgs     && sh -l -c '         git config --global user.name
      "LLAMA Docker Image"             && git config --global user.email "NA"     '
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - sh
    - -l
    - -c
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
