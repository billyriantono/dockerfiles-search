MetaArgs: null
Stages:
- As: ffmpeg
  BaseName: node:8-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache openssl git python make gcc g++
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /tmp/ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz  &&
      tar xJvf /tmp/ffmpeg.tar.xz  && mv ffmpeg-*-64bit-static/ffmpeg /usr/local/bin/  &&
      rm -rf /tmp/ffmpeg*
    Name: run
    PrependShell: true
  From:
    Image: node:8-alpine
  Name: ffmpeg
  Platform: ""
  SourceCode: FROM node:8-alpine as ffmpeg
- As: pm2
  BaseName: node:8-alpine
  Commands:
  - CmdLine:
    - npm install -g pm2
    Name: run
    PrependShell: true
  From:
    Image: node:8-alpine
  Name: pm2
  Platform: ""
  SourceCode: FROM node:8-alpine as pm2
- As: chinachu
  BaseName: node:8-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache openssl git python make gcc g++
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - git clone https://github.com/Chinachu/Chinachu.git .
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - CmdLine:
    - git submodule init
    Name: run
    PrependShell: true
  - CmdLine:
    - git submodule update
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm update
    Name: run
    PrependShell: true
  - CmdLine:
    - install -o node -g node config.sample.json config.json
    Name: run
    PrependShell: true
  - CmdLine:
    - install -o node -g node rules.sample.json rules.json
    Name: run
    PrependShell: true
  - CmdLine:
    - install -o node -g node -d log data recorded
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - processes.json
    - .
  - CmdLine:
    - rm -rf .git/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv web/lib/ace/src-min-noconflict/ace.js . && rm -rf web/lib/ace && mkdir -p
      web/lib/ace/src-min-noconflict/ && mv ace.js web/lib/ace/src-min-noconflict/ace.js
    Name: run
    PrependShell: true
  - CmdLine:
    - mv web/lib/dc.js/dc.min.js . && rm -rf web/lib/dc.js && mkdir -p web/lib/dc.js
      && mv dc.min.js web/lib/dc.js/dc.min.js
    Name: run
    PrependShell: true
  - CmdLine:
    - mv web/lib/d3/d3.min.js . && rm -rf web/lib/d3 && mkdir -p web/lib/d3 && mv
      d3.min.js web/lib/d3/d3.min.js
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf web/lib/bootstrap/js
    Name: run
    PrependShell: true
  - CmdLine:
    - mv web/lib/crossfilter/crossfilter.min.js . && rm -rf web/lib/crossfilter/ &&
      mkdir -p web/lib/crossfilter/ && mv crossfilter.min.js web/lib/crossfilter/crossfilter.min.js
    Name: run
    PrependShell: true
  From:
    Image: node:8-alpine
  Name: chinachu
  Platform: ""
  SourceCode: FROM node:8-alpine as chinachu
- BaseName: node:8-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache bash
    Name: run
    PrependShell: true
  - Chown: ""
    From: ffmpeg
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/ffmpeg
    - /usr/local/bin/ffmpeg
  - Chown: ""
    From: pm2
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/node_modules/pm2
    - /usr/local/lib/node_modules/pm2
  - Chown: ""
    From: chinachu
    Name: copy
    SourcesAndDest:
    - /usr/src/app
    - /usr/src/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./hacks/
    - /usr/local/bin/
  - CmdLine:
    - chown node:node /usr/src/app/data /usr/src/app/recorded /usr/src/app/log  &&
      ln -s ../lib/node_modules/pm2/bin/pm2-runtime /usr/local/bin/  && ln -s ../lib/node_modules/pm2/bin/pm2
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Name: volume
    Volumes:
    - /usr/src/app/data
  - Name: volume
    Volumes:
    - /usr/src/app/recorded
  - Name: volume
    Volumes:
    - /usr/src/app/log
  - CmdLine:
    - pm2-runtime
    - processes.json
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "20772"
  - Name: user
    User: node
  From:
    Image: node:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:8-alpine
