{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SUDOFILE",
              "Value": "/etc/sudoers"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "CHROME_VERSION",
          "Name": "arg",
          "Value": "\"google-chrome-stable\""
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash \u0026\u0026    apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026    apt-get -y install            rsyslog            systemd            passwd            openssh-client            openssh-server            sudo            wget            git            openssl            sed            locales            nginx            vim            nodejs            postgresql            libglib2.0-0            libnss3            libgconf-2-4            libfontconfig            dstat \u0026\u0026           wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026           echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026           apt-get update -qqy \u0026\u0026           apt-get -qqy install ${CHROME_VERSION} \u0026\u0026           rm /etc/apt/sources.list.d/google-chrome.list \u0026\u0026           rm -rf /var/lib/apt/lists/* /var/cache/apt/* \u0026\u0026           apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip setuptools ansible virtualenv circus tox passlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd \u0026\u0026    ssh-keygen -A \u0026\u0026    useradd -m -s /bin/bash vagrant \u0026\u0026    echo -e \"vagrant:vagrant\" | (passwd -dq vagrant) \u0026\u0026    echo 'vagrant ALL = NOPASSWD: ALL' \u003e /etc/sudoers.d/vagrant \u0026\u0026    chmod 440 /etc/sudoers.d/vagrant \u0026\u0026    mkdir -p /home/vagrant/.ssh \u0026\u0026    chmod 700 /home/vagrant/.ssh \u0026\u0026    systemctl enable nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub",
            "/home/vagrant/.ssh/authorized_keys"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/home/vagrant/run.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chmod 600 /home/vagrant/.ssh/authorized_keys \u0026\u0026    chown -R vagrant:vagrant /home/vagrant/.ssh \u0026\u0026    chmod u+w ${SUDOFILE} \u0026\u0026    echo '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL' \u003e\u003e ${SUDOFILE} \u0026\u0026    chmod u-w ${SUDOFILE} \u0026\u0026    locale-gen ja_JP.UTF-8 \u0026\u0026     localedef -f UTF-8 -i ja_JP ja_JP.utf8 \u0026\u0026    cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \u0026\u0026    chmod +x /home/vagrant/run.sh \u0026\u0026    /home/vagrant/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}