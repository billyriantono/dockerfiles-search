{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.6.1810",
      "SourceCode": "FROM centos:7.6.1810",
      "Platform": "",
      "From": {
        "Image": "centos:7.6.1810"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "\"3.6.5\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SUDOFILE",
              "Value": "/etc/sudoers"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "nginxversion",
              "Value": "\"1.16.0-1\""
            },
            {
              "Key": "os",
              "Value": "\"centos\""
            },
            {
              "Key": "osversion",
              "Value": "\"7\""
            },
            {
              "Key": "elversion",
              "Value": "\"7\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026    yum -y install            https://rpm.nodesource.com/pub_10.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm            https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm            https://centos7.iuscommunity.org/ius-release.rpm            http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm            gcc            systemd            rsyslog            libffi-dev            libyaml-dev            libssl-dev            libpython-dev            python            python-devel            python-virtualenv            python-setuptools              python-pip            aptitude            passwd            openssh            openssh-server            openssh-clients            sudo            wget            gcc make            openssl-devel            sqlite-devel            bzip2-devel            git            freetds-devel            openssl            dstat            sed \u0026\u0026           yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install            nodejs-10.16.0            nginx            python36u            python36u-libs            python36u-devel            python36u-pip            postgresql10            postgresql10-server \u0026\u0026           curl -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent3.sh | sh \u0026\u0026            yum clean all \u0026\u0026            (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done);             rm -f /lib/systemd/system/multi-user.target.wants/*;            rm -f /etc/systemd/system/*.wants/*;            rm -f /lib/systemd/system/local-fs.target.wants/*;             rm -f /lib/systemd/system/sockets.target.wants/*udev*;             rm -f /lib/systemd/system/sockets.target.wants/*initctl*;             rm -f /lib/systemd/system/basic.target.wants/*;            rm -f /lib/systemd/system/anaconda.target.wants/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3.6 install --upgrade pip setuptools ansible virtualenv circus tox passlib \u0026\u0026    td-agent-gem install                  fluent-plugin-dstat                  fluent-plugin-elasticsearch                  fluent-plugin-filter_typecast                  fluent-plugin-filter-object-flatten                  fluent-plugin-aliyun-odps                  fluent-plugin-grep \u0026\u0026    systemctl enable               nginx               rsyslog               td-agent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd \u0026\u0026    ssh-keygen -A \u0026\u0026    useradd -m -s /bin/bash vagrant \u0026\u0026    echo -e \"vagrant:vagrant\" | (passwd --stdin vagrant) \u0026\u0026    echo 'vagrant ALL = NOPASSWD: ALL' \u003e /etc/sudoers.d/vagrant \u0026\u0026    chmod 440 /etc/sudoers.d/vagrant \u0026\u0026    mkdir -p /home/vagrant/.ssh \u0026\u0026    chmod 700 /home/vagrant/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub",
            "/home/vagrant/.ssh/authorized_keys"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/home/vagrant/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 /home/vagrant/.ssh/authorized_keys \u0026\u0026    chown -R vagrant:vagrant /home/vagrant/.ssh \u0026\u0026    chmod u+w ${SUDOFILE} \u0026\u0026    echo '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL' \u003e\u003e ${SUDOFILE} \u0026\u0026    chmod u-w ${SUDOFILE} \u0026\u0026    localedef -f UTF-8 -i ja_JP ja_JP.utf8 \u0026\u0026    chmod +x /home/vagrant/run.sh \u0026\u0026    /home/vagrant/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}