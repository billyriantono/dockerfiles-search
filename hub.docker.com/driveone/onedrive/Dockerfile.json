{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine",
      "Platform": "",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo http://dl-cdn.alpinelinux.org/alpine/edge/testing \u003e\u003e/etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add alpine-sdk bash llvm5 gnupg xz jq curl-dev sqlite-dev binutils-gold autoconf automake ldc ldc-runtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/lib \u0026\u0026    ln -s libdruntime-ldc-shared.so libdruntime-ldc.so \u0026\u0026    ln -s libphobos2-ldc-shared.so libphobos2-ldc.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/tianon/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/onedrive"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/src/onedrive/ \u0026\u0026     autoreconf -fiv \u0026\u0026     ./configure \u0026\u0026     make clean \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apk add --no-cache bash libcurl libgcc shadow sqlite-libs \u0026\u0026     mkdir -p /onedrive/conf /onedrive/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "contrib/docker/entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/bin/gosu",
            "/usr/local/bin/onedrive",
            "/usr/local/bin/"
          ]
        }
      ]
    }
  ]
}