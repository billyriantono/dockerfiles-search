MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: TERM
      Value: xterm-color
    - Key: OPENRESTY_VERSION
      Value: 1.11.2.2
    - Key: NGX_CONFIG
      Value: /etc/nginx
    Name: env
  - CmdLine:
    - "apt-get update && apt-get -y install   build-essential   curl   libreadline-dev
      \  libncurses5-dev   libpcre3-dev   libssl1.0-dev   perl   wget \tgit   libpq-dev
      \  luarocks   zlib1g-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -y install \tpostgresql-client-9.6"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget http://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz &&
      \  tar -xzvf openresty-*.tar.gz &&   rm -f openresty-*.tar.gz && \tgit clone
      https://github.com/evanmiller/mod_zip.git &&   cd openresty-* &&   sed -i --
      's/^#define NGINX_VER .*/#define NGINX_VER \"nginx\"/g' bundle/nginx-*/src/core/nginx.h
      &&   ./configure --with-http_sub_module               --with-http_gzip_static_module
      \              --with-http_stub_status_module               --with-http_iconv_module
      \              --with-lua51 \t\t\t\t\t\t\t--with-luajit               --with-http_postgres_module
      \              --add-module=../mod_zip &&   make &&   make install &&   make
      clean &&   cd .. &&   rm -rf openresty-* && \trm -rf mod_zip &&   ln -s /usr/local/openresty/nginx/sbin/nginx
      /usr/local/bin/nginx &&   ldconfig"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install pgmoon
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install luafilesystem
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install lua-resty-auto-ssl
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/cache/nginx
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod 755 /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nginx
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
