MetaArgs: null
Stages:
- BaseName: adoptopenjdk/openjdk8-openj9:alpine-jre
  Commands:
  - Key: JIRA_PRODUCT
    Name: arg
    Value: jira-software
  - Key: JIRA_VERSION
    Name: arg
    Value: 8.1.0
  - Key: BUILD_DATE
    Name: arg
    Value: undefined
  - Key: LANG_LANGUAGE
    Name: arg
    Value: en
  - Key: LANG_COUNTRY
    Name: arg
    Value: US
  - Env:
    - Key: JIRA_USER
      Value: jira
    - Key: JIRA_GROUP
      Value: jira
    - Key: CONTAINER_UID
      Value: "1000"
    - Key: CONTAINER_GID
      Value: "1000"
    - Key: JIRA_CONTEXT_PATH
      Value: ROOT
    - Key: JIRA_HOME
      Value: /var/atlassian/jira
    - Key: JIRA_INSTALL
      Value: /opt/jira
    - Key: JIRA_SCRIPTS
      Value: /usr/local/share/atlassian
    - Key: LANG
      Value: ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8
    - Key: JRE_HOME
      Value: $JAVA_HOME
    - Key: _RUNJAVA
      Value: java
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin
    - $JIRA_SCRIPTS
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - export GLIBC_VERSION=2.29-r0                            && export GLIBC_DOWNLOAD_URL=https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION     &&
      export GLIBC_BIN=glibc-bin-$GLIBC_VERSION.apk        && export GLIBC_I18N=glibc-i18n-$GLIBC_VERSION.apk      &&
      wget $GLIBC_DOWNLOAD_URL/$GLIBC_BIN                  && wget $GLIBC_DOWNLOAD_URL/$GLIBC_I18N                 &&
      yes | apk add --update --no-cache                                 bash                                                    su-exec                                                 gzip                                                    nano                                                    tini                                                    wget                                                    xmlstarlet                                              $GLIBC_BIN                                              $GLIBC_I18N                                             fontconfig                                              msttcorefonts-installer                                 ttf-dejavu                                              ghostscript                                             graphviz                                                motif                                      &&
      update-ms-fonts     && fc-cache -f         && /usr/glibc-compat/bin/localedef
      -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 $LANG     && export JAVA_TOOL_OPTIONS=""     &&
      mkdir -p $JIRA_HOME $JIRA_INSTALL                               && wget -O jira.bin
      https://www.atlassian.com/software/jira/downloads/binary/atlassian-$JIRA_PRODUCT-$JIRA_VERSION-x64.bin     &&
      chmod +x jira.bin                                           && ./jira.bin -q
      -varfile $JIRA_SCRIPTS/response.varfile       && addgroup -g $CONTAINER_GID
      $JIRA_GROUP                      && adduser -u $CONTAINER_UID                                       -G
      $JIRA_GROUP                                                 -h /home/$JIRA_USER                                            -s
      /bin/bash                                                   -S $JIRA_USER                                              &&
      rm -rf $JIRA_INSTALL/jre                                    && ln -s $JAVA_HOME
      $JIRA_INSTALL/jre                          && export JIRA_LIB=$JIRA_INSTALL/lib                           &&
      export MYSQL_DRIVER_VERSION=5.1.47                          && export MYSQL_FILE_BASE=mysql-connector-java-$MYSQL_DRIVER_VERSION     &&
      export MYSQL_FILE_TAR=$MYSQL_FILE_BASE.tar.gz               && export MYSQL_FILE_BIN=$MYSQL_FILE_BASE-bin.jar              &&
      export MYSQL_DOWNLOAD_URL=https://dev.mysql.com/get/Downloads/Connector-J/$MYSQL_FILE_TAR     &&
      export POSTGRESQL_DRIVER_VERSION=42.2.5                     && export POSTGRESQL_FILE=postgresql-$POSTGRESQL_DRIVER_VERSION.jar     &&
      export POSTGRESQL_DOWNLOAD_URL=https://jdbc.postgresql.org/download/$POSTGRESQL_FILE     &&
      rm -f $JIRA_LIB/mysql-connector-java*.jar                   && wget -O $MYSQL_FILE_TAR
      $MYSQL_DOWNLOAD_URL                 && tar xzf $MYSQL_FILE_TAR --strip=1                           &&
      cp $MYSQL_FILE_BIN $JIRA_LIB/$MYSQL_FILE_BIN                && rm -f $JIRA_LIB/postgresql-*.jar                            &&
      wget -O $JIRA_LIB/$POSTGRESQL_FILE $POSTGRESQL_DOWNLOAD_URL     && export DOCKERIZE_VERSION=v0.6.1                             &&
      export DOCKERIZE_DOWNLOAD_URL=https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      export LE_DOWNLOAD_URL=https://letsencrypt.org/certs/       && export LE_AUTH_1=letsencryptauthorityx1.der                 &&
      export LE_AUTH_2=letsencryptauthorityx2.der                 && export LE_CROSS_1=lets-encrypt-x1-cross-signed.der          &&
      export LE_CROSS_2=lets-encrypt-x2-cross-signed.der          && export LE_CROSS_3=lets-encrypt-x3-cross-signed.der          &&
      export LE_CROSS_4=lets-encrypt-x4-cross-signed.der          && export KEYSTORE=$JRE_HOME/lib/security/cacerts              &&
      wget $LE_DOWNLOAD_URL/$LE_AUTH_1                            && wget $LE_DOWNLOAD_URL/$LE_AUTH_2                            &&
      wget $LE_DOWNLOAD_URL/$LE_CROSS_1                           && wget $LE_DOWNLOAD_URL/$LE_CROSS_2                           &&
      wget $LE_DOWNLOAD_URL/$LE_CROSS_3                           && wget $LE_DOWNLOAD_URL/$LE_CROSS_4                           &&
      keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias isrgrootx1 -file $LE_AUTH_1                  && keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2
      -file $LE_AUTH_2                  && keytool -trustcacerts -keystore $KEYSTORE
      -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file
      $LE_CROSS_1     && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit
      -noprompt -importcert -alias letsencryptauthorityx2 -file $LE_CROSS_2     &&
      keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias letsencryptauthorityx3 -file $LE_CROSS_3     && keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4
      -file $LE_CROSS_4     && wget -O /home/$JIRA_USER/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class      &&
      chown -R $JIRA_USER:$JIRA_GROUP $JIRA_HOME $JIRA_INSTALL $JIRA_SCRIPTS /home/$JIRA_USER     &&
      wget -O dockerize.tar.gz $DOCKERIZE_DOWNLOAD_URL                                            &&
      tar -C /usr/local/bin -xzvf dockerize.tar.gz                                                &&
      rm dockerize.tar.gz                                                                         &&
      apk del                                                                                       --no-cache                                                                                     gzip                                                                                           msttcorefonts-installer                                                                        wget                                                                                         &&
      rm -rf /var/cache/apk/* /tmp/* /var/log/*
    Name: run
    PrependShell: true
  - Labels:
    - Key: maintainer
      Value: '"Jonathan Hult <teamatldocker@JonathanHult.com>"'
    - Key: org.opencontainers.image.authors
      Value: '"Jonathan Hult <teamatldocker@JonathanHult.com>"'
    - Key: org.opencontainers.image.title
      Value: $JIRA_PRODUCT
    - Key: org.opencontainers.image.description
      Value: '"$JIRA_PRODUCT $JIRA_VERSION running on Alpine Linux"'
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/teamatldocker/jira/"'
    - Key: org.opencontainers.image.created
      Value: $BUILD_DATE
    - Key: org.opencontainers.image.version
      Value: $JIRA_VERSION
    Name: label
  - Name: user
    User: $JIRA_USER
  - Name: workdir
    Path: $JIRA_HOME
  - Name: volume
    Volumes:
    - $JIRA_HOME
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/local/share/atlassian/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jira
    Name: cmd
    PrependShell: false
  From:
    Image: adoptopenjdk/openjdk8-openj9:alpine-jre
  Name: ""
  Platform: ""
  SourceCode: FROM adoptopenjdk/openjdk8-openj9:alpine-jre
