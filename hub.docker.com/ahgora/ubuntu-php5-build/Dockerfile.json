{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM        ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Ahgora Sistemas",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get upgrade -y \u0026\u0026    apt-get install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     apache2     apache2-utils     autoconf     bash     binutils     bison     build-essential     ca-certificates     cmake     fabric     flex     fonts-droid-fallback     fonts-freefont-*     fonts-liberation     fonts-ubuntu-font-family-console     freetds-dev     g++     gcc     git     glibc-source     imagemagick     language-pack-pt-base     libapache2-mod-php5.6     libboost-all-dev     libbz2-dev     libc6-dev     libfontconfig1     libgcc-5-dev     libgmp-dev     libgmp-dev     libintl-perl     libpcre3-dev     libstdc++-5-dev     libstdc++5     libuv1-dev     libx11-6     libxext-dev     libxext6     libxrender-dev     libxrender1     make     openssl     php-gettext     php-mongodb     php-pear     php5.6     php5.6-cgi     php5.6-cli     php5.6-common     php5.6-curl     php5.6-dev     php5.6-gd     php5.6-iconv     php5.6-imap     php5.6-intl     php5.6-json     php5.6-mbstring     php5.6-mcrypt     php5.6-mssql     php5.6-mysql     php5.6-soap     php5.6-xml     php5.6-zip     pkg-config     software-properties-common     ttf-dejavu     wget     zip     zip openssl     zlib1g     zlib1g-dev     zlibc     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     xfonts-75dpi     fontconfig     xfonts-base \u0026\u0026     wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.xenial_amd64.deb \u0026\u0026    dpkg -i wkhtmltox_0.12.5-1.xenial_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/ahgora/confd/blob/master/confd?raw=true -O /usr/local/bin/confd \u0026\u0026     chmod +x /usr/local/bin/confd \u0026\u0026     cd /tmp \u0026\u0026 rm -Rf *"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/newrelic \u0026\u0026     cd /opt/newrelic \u0026\u0026     wget http://download.newrelic.com/php_agent/release/newrelic-php5-9.1.0.246-linux.tar.gz  -O newrelic-php5-linux.tar.gz \u0026\u0026    tar -zxvf newrelic-php5-linux.tar.gz  \u0026\u0026     rm newrelic-php5-linux.tar.gz \u0026\u0026     cd /opt/newrelic/newrelic-php5-9.1.0.246-linux/ \u0026\u0026     sh newrelic-install install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NR_APP_NAME",
              "Value": "\"PHP Application\""
            },
            {
              "Key": "NR_INSTALL_SILENT",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/php /usr/bin/php5 \u0026\u0026    phpenmod mcrypt \u0026\u0026    phpenmod imap \u0026\u0026    a2enmod rewrite \u0026\u0026    pecl install mongo \u0026\u0026    echo \"extension=mongo.so\" \u003e\u003e /etc/php/5.6/apache2/php.ini \u0026\u0026    echo \"extension=mongo.so\" \u003e\u003e /etc/php/5.6/cli/php.ini \u0026\u0026    pecl install redis-4.3.0 \u0026\u0026    echo \"extension=redis.so\" \u003e\u003e /etc/php/5.6/apache2/php.ini \u0026\u0026    echo \"extension=redis.so\" \u003e\u003e /etc/php/5.6/cli/php.ini \u0026\u0026    sed -i 's/^short_open_tag = Off$/short_open_tag = On/' /etc/php/5.6/apache2/php.ini \u0026\u0026    locale-gen pt_BR.UTF-8 \u0026\u0026    locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/datastax/php-driver.git \u0026\u0026 cd php-driver \u0026\u0026 git submodule update --init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/php-driver/lib/cpp-driver/"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "mkdir build \u0026\u0026 pushd build \u0026\u0026 cmake ../ \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 popd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/php-driver/ext/"
        },
        {
          "CmdLine": [
            "./install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'extension=cassandra.so' \u003e\u003e /etc/php/5.6/apache2/php.ini \u0026\u0026    echo 'extension=cassandra.so' \u003e\u003e /etc/php/5.6/cli/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LoadModule rewrite_module modules/mod_rewrite.so\" \u003e\u003e /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y autoremove \u0026\u0026    apt-get -y clean \u0026\u0026    rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/apachectl",
            "-D",
            "FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}