{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM        alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Ahgora Sistemas",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026mkdir -p /run/apache2/ \u0026\u0026apk add apache2 apache2-utils php5-zlib php5-zip php5-apache2 php5-gettext php5-cgi php5-gd php5-intl php5-iconv php5-mcrypt patch php5-imap php5-json php5-curl php5-xml php5-soap php5-dom php5-calendar wget php5-openssl \u0026\u0026apk add fabric --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted \u0026\u0026apk add --update --no-cache libgcc libstdc++ libx11 glib libxrender libxext libintl ttf-dejavu ttf-droid ttf-freefont ttf-liberation ttf-ubuntu-font-family zip openssl \u0026\u0026apk update \u0026\u0026 apk add wget ca-certificates php5-mysqli php5-mysql php5-pdo_mysql imagemagick \u0026\u0026wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-mongo/master/sgerrand.rsa.pub \u0026\u0026wget https://github.com/sgerrand/alpine-pkg-php5-mongo/releases/download/1.16.4-r0/php5-mongo-1.6.14-r0.apk --no-check-certificate \u0026\u0026apk add php5-mongo-1.6.14-r0.apk --allow-untrusted \u0026\u0026rm php5-mongo-1.6.14-r0.apk \u0026\u0026echo \"LoadModule rewrite_module modules/mod_rewrite.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026sed -i 's/^short_open_tag = Off$/short_open_tag = On/' /etc/php5/php.ini \u0026\u0026sed -i 's/^memory_limit = 128M$/memory_limit = 1536M/' /etc/php5/php.ini \u0026\u0026sed -i 's/^upload_max_filesize = 2M$/upload_max_filesize = 100M/' /etc/php5/php.ini \u0026\u0026sed -i 's/^post_max_size = 8M$/post_max_size = 100M/' /etc/php5/php.ini \u0026\u0026sed -i 's/^max_execution_time = 30$/max_execution_time = 500/' /etc/php5/php.ini \u0026\u0026sed -i 's/^\\;.*max_input_vars.*=.*[0-9]*$/max_input_vars = 5000/' /etc/php5/php.ini \u0026\u0026wget https://github.com/ahgora/wkhtmltopdf/raw/master/wkhtmltopdf \u0026\u0026chmod +x wkhtmltopdf \u0026\u0026mv wkhtmltopdf /usr/bin/ \u0026\u0026wget https://github.com/ahgora/confd/blob/master/confd?raw=true -O /usr/local/bin/confd \u0026\u0026 chmod +x /usr/local/bin/confd \u0026\u0026 apk del wget \u0026\u0026rm /var/cache/apk/* \u0026\u0026cd /tmp \u0026\u0026 rm -Rf *"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026    apk add git libuv php5-pear cmake bash libuv-dev openssl-dev php5-dev     autoconf gmp-dev make gcc g++ boost"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/datastax/php-driver.git \u0026\u0026 cd php-driver \u0026\u0026 git submodule update --init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /php-driver/ext \u0026\u0026 bash install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'extension=cassandra.so' \u003e\u003e /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del git php5-pear cmake bash libuv-dev openssl-dev php5-dev     autoconf gmp-dev make gcc g++ boost"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /var/cache/apk/* \u0026\u0026 rm -Rf /php-driver rm -Rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NR_APP_NAME",
              "Value": "\"PHP Application\""
            },
            {
              "Key": "NR_INSTALL_SILENT",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/newrelic \u0026\u0026 cd /opt/newrelic \u0026\u0026 wget http://download.newrelic.com/php_agent/release/newrelic-php5-8.1.0.209-linux-musl.tar.gz  -O newrelic-php5-linux.tar.gz \u0026\u0026tar -zxvf newrelic-php5-linux.tar.gz  \u0026\u0026 rm newrelic-php5-linux.tar.gz \u0026\u0026 cd /opt/newrelic/newrelic-php5-8.1.0.209-linux-musl \u0026\u0026 sh newrelic-install install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/apachectl",
            "-D",
            "FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}