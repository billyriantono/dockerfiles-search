MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: Tuan Vo <vohungtuan@gmail.com>
    Name: maintainer
  - CmdLine:
    - "set -x     && apk add --no-cache         bash         gcc         curl         tar
      \        alpine-sdk         linux-headers \t\tlibxml2-dev         openssl \t\topenssl-dev
      \        perl \t\tlibcap-dev         krb5-dev     && rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.9"
    Name: env
  - CmdLine:
    - set -x     && apk add --no-cache --virtual .gosu-deps         dpkg         gnupg     &&
      dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"     && wget
      -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"     &&
      wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true     && apk del .gosu-deps     &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: BIND_VERSION
      Value: 9-11-0-p1
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"-O2 -m64"'
    Name: env
  - Env:
    - Key: BUILD_OPTIONS
      Value: '"--enable-largefile                    --enable-fixed-rrset                    --enable-filter-aaaa                    --enable-ipv6                    --enable-threads                    --enable-backtrace                    --enable-rpz-nsip                    --enable-rpz-nsdname                    --enable-rrl                    --enable-fetchlimit                    --enable-linux-caps                    --enable-shared                    --enable-static                    --with-readline=no                    --with-libtool                    --with-randomdev=/dev/random                    --sysconfdir=/etc/bind                    --with-openssl                    --with-libxml2                    --with-gssapi"'
    Name: env
  - Env:
    - Key: BIND_DIR
      Value: /opt/bind
    Name: env
  - CmdLine:
    - set -x  && apk add --no-cache wget  && rm -rf /var/cache/apk/*  && mkdir -p
      ${BIND_DIR}  && wget --no-check-certificate -O bind-${BIND_VERSION}.tar.gz https://www.isc.org/downloads/file/bind-${BIND_VERSION}/?version=tar-gz  &&
      tar xzf bind-${BIND_VERSION}.tar.gz  -C ${BIND_DIR} --strip-components=1  &&
      rm -rf bind-${BIND_VERSION}.tar.gz  && chmod +x ${BIND_DIR}/*  && cd ${BIND_DIR}  &&
      ./configure ${BUILD_OPTIONS}  && make clean  && make  && make install  && rm
      -rf ${BIND_DIR}  && mkdir -p /etc/bind/dynamic  && mkdir -p /etc/bind/data  &&
      touch /etc/bind/data/named.run
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bind/*
    - /etc/bind/
  - Name: expose
    Ports:
    - "53"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
