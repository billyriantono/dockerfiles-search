{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/alpine.python:3.9",
      "SourceCode": "FROM lsiobase/alpine.python:3.9",
      "Platform": "",
      "From": {
        "Image": "lsiobase/alpine.python:3.9"
      },
      "Commands": [
        {
          "Maintainer": "Thraxis",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Thraxis' version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "\"UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "MEDIAINF_VER",
          "Name": "arg",
          "Value": "\"0.7.90\""
        },
        {
          "CmdLine": [
            "apk add --no-cache    ffmpeg    ffmpeg-libs    ffmpeg-dev    sdl2    libva    musl \t py-crypto \u0026\u0026  apk add --no-cache --virtual=build-dependencies      autoconf      automake      cppunit-dev      curl-dev      file      g++      gcc      libressl-dev      libtool      make      ncurses-dev \u0026\u0026  curl -o  /tmp/libmediainfo.tar.gz -L \t\"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \u0026\u0026  curl -o  /tmp/mediainfo.tar.gz -L \t\"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \u0026\u0026  mkdir -p \t/tmp/libmediainfo \t/tmp/mediainfo \u0026\u0026  tar xf /tmp/libmediainfo.tar.gz -C \t/tmp/libmediainfo --strip-components=1 \u0026\u0026  tar xf /tmp/mediainfo.tar.gz -C \t/tmp/mediainfo --strip-components=1 \u0026\u0026  cd /tmp/libmediainfo \u0026\u0026 \t./SO_Compile.sh \u0026\u0026  cd /tmp/libmediainfo/ZenLib/Project/GNU/Library \u0026\u0026 \tmake install \u0026\u0026  cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library \u0026\u0026 \tmake install \u0026\u0026  cd /tmp/mediainfo \u0026\u0026 \t./CLI_Compile.sh \u0026\u0026  cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI \u0026\u0026 \tmake install \u0026\u0026  apk del --purge \tbuild-dependencies \u0026\u0026  rm -rf \t/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads",
            "/tv"
          ]
        }
      ]
    }
  ]
}