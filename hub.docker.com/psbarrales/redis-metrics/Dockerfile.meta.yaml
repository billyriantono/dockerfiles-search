MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.12-alpine
  Commands:
  - Name: workdir
    Path: /go/src/github.com/oliver006/redis_exporter/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - main.go
    - /go/src/github.com/oliver006/redis_exporter/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - exporter
    - /go/src/github.com/oliver006/redis_exporter/exporter
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vendor
    - /go/src/github.com/oliver006/redis_exporter/vendor
  - Key: SHA1
    Name: arg
    Value: null
  - Env:
    - Key: SHA1
      Value: $SHA1
    Name: env
  - Key: TAG
    Name: arg
    Value: null
  - Env:
    - Key: TAG
      Value: $TAG
    Name: env
  - CmdLine:
    - apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - BUILD_DATE=$(date +%F-%T) && CGO_ENABLED=0 GOOS=linux go build -o /redis_exporter     -ldflags  "-s
      -w -extldflags \"-static\" -X main.VERSION=$TAG -X main.COMMIT_SHA1=$SHA1 -X
      main.BUILD_DATE=$BUILD_DATE" .
    Name: run
    PrependShell: true
  - CmdLine:
    - /redis_exporter -version
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.12-alpine as builder
- BaseName: alpine:3.9
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /redis_exporter
    - /redis_exporter
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs
    - /etc/ssl/certs
  - CmdLine:
    - addgroup -S redis && adduser -S -G redis redis
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache     'su-exec>=0.2'     tzdata
    Name: run
    PrependShell: true
  - Env:
    - Key: REDIS_VERSION
      Value: 5.0.4
    Name: env
  - Env:
    - Key: REDIS_DOWNLOAD_URL
      Value: http://download.redis.io/releases/redis-5.0.4.tar.gz
    Name: env
  - Env:
    - Key: REDIS_DOWNLOAD_SHA
      Value: 3ce9ceff5a23f60913e1573f6dfcd4aa53b42d4a2789e28fa53ec2bd28c987dd
    Name: env
  - CmdLine:
    - set -ex;         apk add --no-cache --virtual .build-deps     coreutils     gcc     linux-headers     make     musl-dev     ;         wget
      -O redis.tar.gz "$REDIS_DOWNLOAD_URL";     echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"
      | sha256sum -c -;     mkdir -p /usr/src/redis;     tar -xzf redis.tar.gz -C
      /usr/src/redis --strip-components=1;     rm redis.tar.gz;         grep -q '^#define
      CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h;     sed -ri 's!^(#define
      CONFIG_DEFAULT_PROTECTED_MODE) 1$!\1 0!' /usr/src/redis/src/server.h;     grep
      -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h;         make
      -C /usr/src/redis -j "$(nproc)";     make -C /usr/src/redis install;         rm
      -r /usr/src/redis;         runDeps="$(     scanelf --needed --nobanner --format
      '%n#p' --recursive /usr/local     | tr ',' '\n'     | sort -u     | awk 'system("[
      -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'     )";     apk
      add --virtual .redis-rundeps $runDeps;     apk del .build-deps;         redis-server
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data && chown redis:redis /data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - inc/redis-entrypoint.sh
    - /usr/local/bin/
  - Name: expose
    Ports:
    - "6379"
  - Name: expose
    Ports:
    - "9121"
  - CmdLine:
    - redis-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
