{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:12.04.5",
      "SourceCode": "FROM ubuntu:12.04.5",
      "Platform": "",
      "From": {
        "Image": "ubuntu:12.04.5"
      },
      "Commands": [
        {
          "Maintainer": "Michael Ruoss \"michael.ruoss@ufirstgroup.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y   wget   curl   gcc   libxml2-dev   libxslt-dev   libcurl4-openssl-dev   libreadline6-dev   libc6-dev   libssl-dev   make   build-essential   zlib1g-dev   openssh-server   git-core   libyaml-dev   postfix   libicu-dev   libfreetype6   libfontconfig1   python-software-properties   libfreetype6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LC_ALL=\\\"en_US.UTF-8\\\"\" \u003e\u003e /etc/default/locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/ruby \u0026\u0026 cd /tmp/ruby \u0026\u0026 curl -s http://ftp.ruby-lang.org/pub/ruby/ruby-2.0-stable.tar.bz2 | tar xj --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ruby \u0026\u0026 ./configure --disable-install-rdoc --silent \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/ruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"gem: --no-rdoc --no-ri\" \u003e\u003e /usr/local/etc/gemrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /root/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /gitlab-ci-runner \u0026\u0026 cd /gitlab-ci-runner \u0026\u0026 curl -sL https://github.com/gitlabhq/gitlab-ci-runner/archive/v5.0.0.tar.gz | tar xz --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /gitlab-ci-runner \u0026\u0026 gem install bundler \u0026\u0026 bundle install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install compass sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-i",
            "-l",
            "-c",
            "nvm install 0.10"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-i",
            "-l",
            "-c",
            "nvm install 0.11"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-i",
            "-l",
            "-c",
            "nvm alias default 0.10"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-i",
            "-l",
            "-c",
            "npm update -g npm"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-i",
            "-l",
            "-c",
            "npm install -g grunt grunt-cli bower jshint jsxhint"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/gitlab-ci-runner"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-i",
            "-l",
            "-c",
            "ssh-keyscan -H $GITLAB_SERVER_FQDN \u003e\u003e /root/.ssh/known_hosts \u0026 bundle exec ./bin/setup_and_run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}