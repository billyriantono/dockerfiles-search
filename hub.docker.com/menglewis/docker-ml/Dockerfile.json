{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "CONDARC",
              "Value": "/opt/conda/.condarc"
            },
            {
              "Key": "BASH_ENV",
              "Value": "/etc/profile"
            },
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update -y \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-get install -y         automake         bzip2         curl         g++         gfortran         git         libboost-program-options-dev         libpq-dev         libtool         libxrender1         make         wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-4.2.11-Linux-x86_64.sh -O /usr/local/src/miniconda.sh \u0026\u0026     /bin/bash /usr/local/src/miniconda.sh -b -p /opt/conda \u0026\u0026     rm /usr/local/src/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "python_version",
          "Name": "arg",
          "Value": "3.5.2"
        },
        {
          "Key": "TF_BINARY_URL",
          "Name": "arg",
          "Value": "https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0rc1-cp35-cp35m-linux_x86_64.whl"
        },
        {
          "CmdLine": [
            "conda install -y python=${python_version} \u0026\u0026     conda install pandas scikit-learn jupyter notebook matplotlib seaborn \u0026\u0026     pip install theano \u0026\u0026     pip install keras \u0026\u0026     pip install ${TF_BINARY_URL}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src \u0026\u0026 mkdir xgboost \u0026\u0026 cd xgboost \u0026\u0026     git clone --recursive https://github.com/dmlc/xgboost \u0026\u0026     cd xgboost \u0026\u0026 make -j4 \u0026\u0026     cd python-package \u0026\u0026 python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "bash",
            "/run_jupyter.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}