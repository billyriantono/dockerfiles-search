MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/hiracchi/docker-pdf-builder"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: maintainer
      Value: '"Toshiyuki Hirano <hiracchi@gmail.com>"'
    Name: label
  - Key: PDF_HOME
    Name: arg
    Value: '"/opt/ProteinDF"'
  - Key: WORKDIR
    Name: arg
    Value: '"/work"'
  - Env:
    - Key: LANG
      Value: '"ja_JP.UTF-8"'
    - Key: LANGUAGE
      Value: '"ja_JP:en"'
    - Key: LC_ALL
      Value: '"ja_JP.UTF-8"'
    - Key: TZ
      Value: '"Asia/Tokyo"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - set -x   && apt-get update   && apt-get install -y      apt-utils sudo wget
      gnupg locales tzdata   && locale-gen ja_JP.UTF-8   && update-locale LANG=ja_JP.UTF-8   &&
      apt-get install -y tzdata   && echo "${TZ}" > /etc/timezone   && mv /etc/localtime
      /etc/localtime.orig   && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime   &&
      dpkg-reconfigure -f noninteractive tzdata   && apt-get clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && apt-get update   && apt-get install -y     vim     build-essential
      gfortran     pkg-config ca-certificates     git automake autoconf libtool cmake     libopenblas-base
      libopenblas-dev     libscalapack-openmpi-dev     openmpi-bin openmpi-common         libeigen3-dev         opencl-headers
      libclc-dev mesa-opencl-icd clinfo         libboost-all-dev     hdf5-tools     libhdf5-dev     libhdf5-openmpi-dev         python3-dev
      python3-pip python3-setuptools python3-pip python3-wheel     python3-numpy python3-scipy
      python3-scipy python3-pandas     python3-xlrd     python3-yaml python3-msgpack     python3-tqdm     python3-requests
      python3-jinja2 python3-bs4     python3-matplotlib     python3-sklearn     python3-h5py   &&
      apt-get clean && apt-get autoclean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x    && pip3 install --no-cache-dir     jupyter     jupyter_contrib_nbextensions     jupyter_nbextensions_configurator     ipywidgets     pytraj     nglview
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && cd /tmp   && git clone "https://github.com/google/googletest.git"   &&
      mkdir -p /tmp/googletest/build   && cd /tmp/googletest/build   && cmake ..   &&
      make   && make install   && rm -rf /tmp/googletest
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-*.sh
    - pdf-*.sh
    - env2cmake.py
    - run-*.sh
    - /usr/local/bin/
  - CmdLine:
    - set -x   && chmod +x /usr/local/bin/*.sh /usr/local/bin/*.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${WORKDIR}
  - Env:
    - Key: PDF_HOME
      Value: '"${PDF_HOME}"'
    - Key: PATH
      Value: '"${PATH}:${PDF_HOME}/bin"'
    Name: env
  - Env:
    - Key: WORKDIR
      Value: '"${WORKDIR}"'
    Name: env
  - Name: volume
    Volumes:
    - ${WORKDIR}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
