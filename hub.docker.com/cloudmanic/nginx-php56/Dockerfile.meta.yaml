MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Maintainer: Spicer Mathtews <spicer@cloudmanic.com>
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.11.10
    Name: env
  - CmdLine:
    - apk add --no-cache openssh-client git tar php5-fpm curl bash vim
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache php5-curl php5-dom php5-gd php5-ctype php5-zip php5-xml php5-iconv
      php5-mysql php5-sqlite3 php5-mysqli php5-pgsql php5-json php5-phar php5-openssl
      php5-pdo php5-mcrypt php5-pdo php5-pdo_pgsql php5-pdo_mysql php5-opcache php5-zlib
    Name: run
    PrependShell: true
  - CmdLine:
    - 'curl --silent --show-error --fail --location       --header "Accept: application/tar+gzip,
      application/x-gzip, application/octet-stream"       "https://getcomposer.org/installer"     |
      php5 -- --install-dir=/usr/bin --filename=composer'
    Name: run
    PrependShell: true
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/logs/nginx.error.log \t\t--http-log-path=/logs/nginx.access.log
      \t\t--pid-path=/tmp/nginx.pid \t\t--lock-path=/tmp/nginx.lock \t\t--http-client-body-temp-path=/nginx-cache/client_temp
      \t\t--http-proxy-temp-path=/nginx-cache/proxy_temp \t\t--http-fastcgi-temp-path=/nginx-cache/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/nginx-cache/uwsgi_temp \t\t--http-scgi-temp-path=/nginx-cache/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-http_perl_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module
      \t\t--with-stream_ssl_preread_module \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic
      \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat
      \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& apk add --no-cache --virtual
      .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev
      \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev
      \t\tperl-dev \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
      -o nginx.tar.gz \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc
      \ -o nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \t&& gpg --batch --verify
      nginx.tar.gz.asc nginx.tar.gz \t&& rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t&&
      mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz
      \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug
      \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug
      \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so
      objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf
      _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir
      /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html
      /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/
      \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755
      objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'
      \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\"
      \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps
      \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx-default.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - set -x    && deluser xfs    && addgroup -g 2000 -S xfs    && adduser -u 2000
      -D -S -G xfs xfs    && addgroup -g 33 -S www-data    && adduser -u 33 -D -S
      -G www-data www-data    && addgroup -g 1001 -S deploy    && adduser -u 1001
      -D -S -G deploy deploy
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x   && mkdir /www   && mkdir /cache   && mkdir /nginx-cache   && chown
      -R www-data:www-data /www   && chown -R www-data:www-data /cache   && chown
      -R www-data:www-data /logs   && chown -R www-data:www-data /nginx-cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - index.php
    - /www/public/index.php
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /etc/php5/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm.conf
    - /etc/php5/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod 700 /start.sh && chown www-data:www-data /start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: user
    User: www-data
  - Name: workdir
    Path: /www
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
