{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Lander Usategui \u003clander at erlerobotics dot com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ROS2_DISTRO",
              "Value": "dashing"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /root/ros2_mara_ws/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/ros2_mara_ws"
        },
        {
          "CmdLine": [
            "echo 'Etc/UTC' \u003e /etc/timezone       \u0026\u0026 ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime       \u0026\u0026 apt-get update -qq \u0026\u0026 apt-get install -qq -y tzdata dirmngr gnupg2 lsb-release curl       \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654       \u0026\u0026 echo \"deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main\" \u003e /etc/apt/sources.list.d/ros2-latest.list       \u0026\u0026 apt-get update -qq \u0026\u0026 apt-get install -qq -y         build-essential         cmake         git         python3-colcon-common-extensions         python3-pip         wget       \u0026\u0026  pip3 install           tensorflow           transforms3d           billiard           psutil       \u0026\u0026 apt update -qq \u0026\u0026 apt install -qq -y         python3-vcstool         python3-numpy         python3-sip-dev         libeigen3-dev         libboost-all-dev         ros-$ROS2_DISTRO-ros-base         ros-$ROS2_DISTRO-action-msgs         ros-$ROS2_DISTRO-message-filters         ros-$ROS2_DISTRO-yaml-cpp-vendor         ros-$ROS2_DISTRO-urdf ros-$ROS2_DISTRO-rttest ros-$ROS2_DISTRO-tf2         ros-$ROS2_DISTRO-tf2-geometry-msgs         ros-$ROS2_DISTRO-rclcpp-action         ros-$ROS2_DISTRO-cv-bridge         ros-$ROS2_DISTRO-image-transport         ros-$ROS2_DISTRO-rmw-opensplice-cpp         ros-$ROS2_DISTRO-camera-info-manager         libopencv-dev       \u0026\u0026 rm -rf /var/lib/apt/lists/*       \u0026\u0026 curl -sSL http://get.gazebosim.org | sh       \u0026\u0026 wget https://raw.githubusercontent.com/AcutronicRobotics/MARA/master/mara-ros2.repos \u0026\u0026 vcs import src \u003c mara-ros2.repos       \u0026\u0026 wget https://raw.githubusercontent.com/AcutronicRobotics/gym-gazebo2/master/provision/additional-repos.repos \u0026\u0026 vcs import src \u003c additional-repos.repos       \u0026\u0026 cd ~/ros2_mara_ws/src/HRIM       \u0026\u0026 pip3 install hrim       \u0026\u0026 hrim generate models/actuator/servo/servo.xml       \u0026\u0026 hrim generate models/actuator/gripper/gripper.xml       \u0026\u0026 bash -c \" cd /root/ros2_mara_ws       \u0026\u0026 source /opt/ros/dashing/setup.bash \u0026\u0026 colcon build --merge-install --parallel-workers $(nproc) --packages-ignore orocos_kinematics_dynamics individual_trajectories_bridge       \u0026\u0026 touch /root/ros2_mara_ws/install/share/orocos_kdl/local_setup.sh /root/ros2_mara_ws/install/share/orocos_kdl/local_setup.bash       \u0026\u0026 cd /root \u0026\u0026 git clone https://github.com/openai/gym \u0026\u0026 cd /root/gym \u0026\u0026 pip3 install -e .       \u0026\u0026 cd /root \u0026\u0026 git clone -b master https://github.com/AcutronicRobotics/gym-gazebo2 \u0026\u0026 cd /root/gym-gazebo2 \u0026\u0026 pip3 install -e .       \u0026\u0026 echo 'source /root/gym-gazebo2/provision/mara_setup.sh' \u003e\u003e ~/.bashrc       \""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/gym-gazebo2/"
        },
        {
          "Name": "expose",
          "Ports": [
            "11596"
          ]
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}