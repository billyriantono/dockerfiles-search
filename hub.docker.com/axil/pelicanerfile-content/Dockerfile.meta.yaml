MetaArgs: null
Stages:
- BaseName: node:10-alpine
  Commands:
  - Maintainer: Al Wilde
    Name: maintainer
  - CmdLine:
    - apk add --no-cache 'su-exec>=0.2'
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache \t\tbash"
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Env:
    - Key: GHOST_CLI_VERSION
      Value: 1.11.0
    Name: env
  - CmdLine:
    - "set -eux; \tnpm install -g \"ghost-cli@$GHOST_CLI_VERSION\"; \tnpm cache clean
      --force"
    Name: run
    PrependShell: true
  - Env:
    - Key: GHOST_INSTALL
      Value: /var/lib/ghost
    Name: env
  - Env:
    - Key: GHOST_CONTENT
      Value: /var/lib/ghost/content
    Name: env
  - Env:
    - Key: GHOST_VERSION
      Value: 2.31.1
    Name: env
  - CmdLine:
    - "set -eux; \tmkdir -p \"$GHOST_INSTALL\"; \tchown node:node \"$GHOST_INSTALL\";
      \t\tsu-exec node ghost install \"$GHOST_VERSION\" --db sqlite3 --no-prompt --no-stack
      --no-setup --dir \"$GHOST_INSTALL\"; \t\tcd \"$GHOST_INSTALL\"; \tsu-exec node
      ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368
      --dbpath \"$GHOST_CONTENT/data/ghost.db\"; \tsu-exec node ghost config paths.contentPath
      \"$GHOST_CONTENT\"; \t\tsu-exec node ln -s config.production.json \"$GHOST_INSTALL/config.development.json\";
      \treadlink -f \"$GHOST_INSTALL/config.development.json\"; \t\tmv \"$GHOST_CONTENT\"
      \"$GHOST_INSTALL/content.orig\"; \tmkdir -p \"$GHOST_CONTENT\"; \tchown node:node
      \"$GHOST_CONTENT\"; \t\tcd \"$GHOST_INSTALL/current\"; \tsqlite3Version=\"$(npm
      view . optionalDependencies.sqlite3)\"; \tif ! su-exec node yarn add \"sqlite3@$sqlite3Version\"
      --force; then \t\tapk add --no-cache --virtual .build-deps python make gcc g++
      libc-dev; \t\t\t\tsu-exec node yarn add \"sqlite3@$sqlite3Version\" --force
      --build-from-source; \t\t\t\tapk del --no-network .build-deps; \tfi; \t\tsu-exec
      node yarn cache clean; \tsu-exec node npm cache clean --force; \tnpm cache clean
      --force; \trm -rv /tmp/yarn* /tmp/v8*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/lib/ghost
  - CmdLine:
    - mkdir -p ./content/adapters/storage
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install ghost-storage-adapter-s3
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r ./node_modules/ghost-storage-adapter-s3 ./content/adapters/storage/s3
    Name: run
    PrependShell: true
  - CmdLine:
    - rm config.production.json
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.json
    - config.production.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.json
    - config.json
  - Name: workdir
    Path: $GHOST_INSTALL
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin
  - CmdLine:
    - chmod 777 /usr/local/bin/docker-entrypoint.sh     && ln -s /usr/local/bin/docker-entrypoint.sh
      /
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "2368"
  - CmdLine:
    - node
    - current/index.js
    Name: cmd
    PrependShell: false
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
