{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"wen-wei.liao@wustl.edu\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends apt-utils \u0026\u0026     echo \"America/Chicago\" \u003e /etc/timezone \u0026\u0026     rm /etc/localtime \u0026\u0026     dpkg-reconfigure -f noninteractive tzdata;     apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     dpkg-reconfigure -f noninteractive locales \u0026\u0026     /usr/sbin/update-locale LANG=en_US.UTF-8;     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LANGUAGE",
              "Value": "\"en_US:en\""
            },
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "PATH",
              "Value": "\"/opt/conda/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     tmux less libreadline7 gzip bzip2 gnupg2     openssh-client wget curl ca-certificates rsync     libglib2.0-0 libxext6 libsm6 libxrender1 git vim-nox make     htop parallel ncdu     libnss-sss \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/fish.key -sL http://download.opensuse.org/repositories/shells:fish:release:3/Debian_9.0/Release.key \u0026\u0026     APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add /tmp/fish.key \u0026\u0026     echo 'deb http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_9.0/ /' \u003e /etc/apt/sources.list.d/fish.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends fish \u0026\u0026     chsh -s /usr/bin/fish \u0026\u0026     rm /tmp/fish.key \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://github.com/BurntSushi/ripgrep/releases/download/11.0.1/ripgrep-11.0.1-x86_64-unknown-linux-musl.tar.gz -O $HOME/ripgrep.tar.gz \u0026\u0026     cd $HOME \u0026\u0026 tar xf $HOME/ripgrep.tar.gz \u0026\u0026     cd `find $HOME -type d -name \"ripgrep*\"` \u0026\u0026     mkdir -p /usr/local/share/man/man1 \u0026\u0026     cp doc/rg.1 /usr/local/share/man/man1/ \u0026\u0026     cp rg /usr/local/bin/ \u0026\u0026     cp complete/rg.fish /usr/share/fish/vendor_completions.d \u0026\u0026     rm -rf $HOME/ripgrep* \u0026\u0026         wget --quiet https://github.com/sharkdp/fd/releases/download/v7.3.0/fd-v7.3.0-x86_64-unknown-linux-musl.tar.gz -O $HOME/fd.tar.gz \u0026\u0026     cd $HOME \u0026\u0026 tar xf $HOME/fd.tar.gz \u0026\u0026     cd `find $HOME -type d -name \"fd*\"` \u0026\u0026     cp fd /usr/local/bin/ \u0026\u0026     cp autocomplete/fd.fish /usr/share/fish/vendor_completions.d/ \u0026\u0026     cp fd.1 /usr/local/share/man/man1/ \u0026\u0026     rm -rf $HOME/fd*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exa_0.9.0_musl/exa",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exa_0.9.0_musl/exa.1",
            "/usr/local/share/man/man1/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exa_0.9.0_musl/completions.fish",
            "/usr/share/fish/vendor_completions.d/exa.fish"
          ]
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh -O $HOME/miniconda.sh \u0026\u0026     /bin/bash $HOME/miniconda.sh -b -p /opt/conda \u0026\u0026     conda config --add channels defaults \u0026\u0026     conda config --add channels bioconda \u0026\u0026     conda config --add channels conda-forge \u0026\u0026     echo '. /opt/conda/etc/profile.d/conda.sh' \u003e /etc/profile.d/conda.sh \u0026\u0026     rm $HOME/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ccwang002/dotfiles.git $HOME/dotfiles \u0026\u0026     cd $HOME/dotfiles \u0026\u0026     /opt/conda/bin/python3 ./dotfile_setup.py         --only \"~/.inputrc\" --only \"~/.editrc\" --only \"~/.tmux.conf\" \u0026\u0026     rm -rf $HOME/dotfiles/.git \u0026\u0026     rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}