MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-devel
  Commands:
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.9"
    Name: env
  - CmdLine:
    - "apt update && apt install -y --no-install-recommends\t\tca-certificates \t\tgit
      \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t\twget && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\"
      in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d70eadefce8e160638a9a6db97f7192d8463069ab33138893ad3bf31b0650a79'
      ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f52ca5933f7a8de2daf7a3172b0406353622c6a39e67dd08bbbeb84c6496f487'
      ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0958dcf454f7f26d7acc1a4ddc34220d499df845bc2051c14ff8efdf1e3c29a6'
      ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7cccff99dacf59162cd67f5b11070d667691397fd421b0a9ad287da019debc4f'
      ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='10b66dae326b32a56d4c295747df564616ec46ed0079553e88e39d4f1b2ae985'
      ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e06231e4918528e2eba1d3cff9bc4310b777971e5d8985f9772c6018694a3af8'
      ;; \t\t*) goRelArch='src'; goRelSha256='a4ab229028ed167ba1986825751463605264e44868362ca8e7accc8be057e993';
      \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not
      have a corresponding Go binary release; will be building from source\"; echo
      >&2 ;; \tesac; \turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";
      \twget --no-check-certificate -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\"
      | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \tif [ \"$goRelArch\"
      = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo
      >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and
      uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \texport PATH=\"/usr/local/go/bin:$PATH\";
      \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/cuda/lib64/stubs/libnvidia-ml.so /usr/local/cuda/lib64/stubs/libnvidia-ml.so.1
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64/stubs
    Name: env
  - Name: workdir
    Path: $GOPATH
  - CmdLine:
    - go get github.com/tankbusta/nvidia_exporter
    Name: run
    PrependShell: true
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: all
    Name: env
  - CmdLine:
    - nvidia_exporter
    Name: entrypoint
    PrependShell: false
  From:
    Image: nvidia/cuda:8.0-devel
  Name: ""
  Platform: ""
  SourceCode: FROM  nvidia/cuda:8.0-devel
