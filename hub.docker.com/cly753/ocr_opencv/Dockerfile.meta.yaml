MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y autoconf automake libtool g++ git cmake
      wget python python-pip python2.7-dev build-essential vim sed && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libpng12-dev libjpeg62-dev && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libtiff4-dev && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libopencv-dev libtesseract-dev libleptonica-dev
      && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y liblog4cplus-dev && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y tk8.5 tcl8.5 tk8.5-dev tcl8.5-dev && apt-get
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get build-dep -y python-imaging --fix-missing && apt-get
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y imagemagick && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget http://www.leptonica.org/source/leptonica-1.70.tar.gz \t&& tar -zxvf leptonica-1.70.tar.gz
      \t&& rm leptonica-1.70.tar.gz"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: leptonica-1.70/
  - CmdLine:
    - ./autobuild
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - "make \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - "wget https://tesseract-ocr.googlecode.com/files/tesseract-ocr-3.02.02.tar.gz
      \t&& tar -zxvf tesseract-ocr-3.02.02.tar.gz \t&& rm tesseract-ocr-3.02.02.tar.gz
      \t&& wget https://tesseract-ocr.googlecode.com/files/tesseract-ocr-3.02.eng.tar.gz
      \t&& tar -xf tesseract-ocr-3.02.eng.tar.gz \t&& rm tesseract-ocr-3.02.eng.tar.gz
      \t&& cp -r tesseract-ocr/tessdata /usr/local/share/"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: tesseract-ocr/
  - CmdLine:
    - ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - "make \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - "apt-get update \t&& apt-get install -y \tbuild-essential \tcmake git libgtk2.0-dev
      pkg-config libavcodec-dev libavformat-dev libswscale-dev \tpython-dev python-numpy
      \tlibtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
      \t&& apt-get clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -O opencv-3.1.0.tar.gz https://github.com/Itseez/opencv/archive/3.1.0.tar.gz
      \t&& tar -zxvf opencv-3.1.0.tar.gz \t&& rm opencv-3.1.0.tar.gz \t&& wget -O
      opencv_contrib-3.1.0.tar.gz https://github.com/Itseez/opencv_contrib/archive/3.1.0.tar.gz
      \t&& tar -zxvf opencv_contrib-3.1.0.tar.gz \t&& rm opencv_contrib-3.1.0.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opencv-3.1.0/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencv-3.1.0/build
  - CmdLine:
    - "cmake -D CMAKE_BUILD_TYPE=RELEASE \t-D CMAKE_INSTALL_PREFIX=/usr/local \t-D
      INSTALL_C_EXAMPLES=OFF \t-D INSTALL_PYTHON_EXAMPLES=OFF \t-D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib-3.1.0/modules
      \t-D BUILD_EXAMPLES=OFF .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "make -j4 \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/ -lippicv / /g' /usr/local/lib/pkgconfig/opencv.pc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - python
    - -c
    - import cv2; print('cv2.__version__ = ' + str(cv2.__version__))
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
