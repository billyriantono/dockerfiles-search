{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Key": "OUR_IMAGE_VERSION",
          "Name": "arg",
          "Value": "2.5.0-dev-bk"
        },
        {
          "Key": "OUR_IMAGE_TAG",
          "Name": "arg",
          "Value": "${OUR_IMAGE_TAG:-$OUR_IMAGE_VERSION}"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Key": "DOCKRUN_PREFIX",
          "Name": "arg",
          "Value": "\"dockrun_\""
        },
        {
          "Key": "hack_OUR_IMAGE",
          "Name": "arg",
          "Value": "\"t3docs/render-documentation:${OUR_IMAGE_TAG}\""
        },
        {
          "Key": "hack_OUR_IMAGE_SHORT",
          "Name": "arg",
          "Value": "\"t3rd\""
        },
        {
          "Key": "OUR_IMAGE_SLOGAN",
          "Name": "arg",
          "Value": "\"t3rd - TYPO3 render documentation\""
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "HOME",
              "Value": "\"/ALL/userhome\""
            },
            {
              "Key": "OUR_IMAGE",
              "Value": "\"$hack_OUR_IMAGE\""
            },
            {
              "Key": "OUR_IMAGE_SHORT",
              "Value": "\"$hack_OUR_IMAGE_SHORT\""
            },
            {
              "Key": "OUR_IMAGE_VERSION",
              "Value": "\"$OUR_IMAGE_VERSION\""
            },
            {
              "Key": "THEME_MTIME",
              "Value": "\"1530870999\""
            },
            {
              "Key": "THEME_VERSION",
              "Value": "\"develop-benjaminkott (\u003e3.6.16)\""
            },
            {
              "Key": "TOOLCHAIN_TOOL_VERSION",
              "Value": "\"develop (1.2.0-dev)\""
            },
            {
              "Key": "TOOLCHAIN_TOOL_URL",
              "Value": "\"https://github.com/marble/TCT/archive/develop.zip\""
            },
            {
              "Key": "TOOLCHAIN_UNPACKED",
              "Value": "\"Toolchain_RenderDocumentation-develop\""
            },
            {
              "Key": "TOOLCHAIN_URL",
              "Value": "\"https://github.com/marble/Toolchain_RenderDocumentation/archive/develop.zip\""
            },
            {
              "Key": "TOOLCHAIN_VERSION",
              "Value": "\"develop (2.9.0-dev)\""
            },
            {
              "Key": "TYPOSCRIPT_PY_URL",
              "Value": "\"https://raw.githubusercontent.com/TYPO3-Documentation/Pygments-TypoScript-Lexer/v2.2.4/typoscript.py\""
            },
            {
              "Key": "TYPOSCRIPT_PY_VERSION",
              "Value": "\"v2.2.4\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"TYPO3 Documentation Team\""
            },
            {
              "Key": "Description",
              "Value": "\"This image renders TYPO3 documentation.\""
            },
            {
              "Key": "Vendor",
              "Value": "\"t3docs\""
            },
            {
              "Key": "Version",
              "Value": "\"$OUR_IMAGE_VERSION\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ALL-for-build",
            "/ALL"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/ALL/venv"
        },
        {
          "CmdLine": [
            "true \"Create executable COMMENT as a workaround to allow commenting here\"    \u0026\u0026 cp /bin/true /bin/COMMENT       \u0026\u0026 COMMENT \"Garantee folders\"    \u0026\u0026 mkdir /PROJECT    \u0026\u0026 mkdir /RESULT    \u0026\u0026 mkdir /THEMES       \u0026\u0026 COMMENT \"Avoid GIT bug\"    \u0026\u0026 cp /ALL/global-gitconfig.cfg /root/.gitconfig    \u0026\u0026 cp /ALL/global-gitconfig.cfg /.gitconfig    \u0026\u0026 chmod 666 /.gitconfig       \u0026\u0026 COMMENT \"Make sure other users can write\"    \u0026\u0026 chmod -R o+w       /ALL/Makedir       /RESULT       \u0026\u0026 COMMENT \"Install and upgrade system packages\"    \u0026\u0026 apt-get update    \u0026\u0026 apt-get upgrade -qy    \u0026\u0026 apt-get install -yq        python-pip       \u0026\u0026 COMMENT \"What the toolchains needs\"    \u0026\u0026 apt-get install -yq --no-install-recommends       moreutils       pandoc       rsync       tidy       unzip       wget       zip       \u0026\u0026 COMMENT \"What we need - convenience tools\"    \u0026\u0026 apt-get install -yq --no-install-recommends       less       nano       ncdu       \u0026\u0026 COMMENT \"Try extra cleaning besides /etc/apt/apt.conf.d/docker-clean\"    \u0026\u0026 apt-get clean    \u0026\u0026 rm -rf /var/lib/apt/lists/*       \u0026\u0026 COMMENT \"Python stuff\"    \u0026\u0026 /usr/bin/pip install --upgrade pip    \u0026\u0026 apt-get remove python-pip -y    \u0026\u0026 /usr/local/bin/pip install --upgrade pipenv       \u0026\u0026 COMMENT \"Disable /ALL/venv/Pipfile.lock - it didn't work reliably\"    \u0026\u0026 rm -f Pipfile.lock.DISABLED    \u0026\u0026 if [ -f \"Pipfile.lock\" ]; then mv Pipfile.lock Pipfile.lock.DISABLED; fi       \u0026\u0026 COMMENT \"Install from /ALL/venv/Pipfile\"    \u0026\u0026 pipenv install    \u0026\u0026 echo source $(pipenv --venv)/bin/activate \u003e\u003e$HOME/.bashrc       \u0026\u0026 COMMENT \"Provide some special files\"    \u0026\u0026 wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/check_include_files.py            --quiet --output-document /usr/local/bin/check_include_files.py    \u0026\u0026 wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/config/_htaccess-2016-08.txt            --quiet --output-document /ALL/Makedir/_htaccess    \u0026\u0026 wget https://github.com/etobi/Typo3ExtensionUtils/raw/master/bin/t3xutils.phar            --quiet --output-document /usr/local/bin/t3xutils.phar    \u0026\u0026 chmod +x /usr/local/bin/t3xutils.phar       \u0026\u0026 COMMENT \"All files of the theme of a given theme version should have the\"    \u0026\u0026 COMMENT \"same mtime (last commit) to not turn off Sphinx caching\"    \u0026\u0026 python=$(pipenv --venv)/bin/python    \u0026\u0026 destdir=$(dirname $($python -c \"import t3SphinxThemeRtd; print t3SphinxThemeRtd.__file__\"))    \u0026\u0026 find $destdir -exec touch --no-create --time=mtime --date=\"$(date --rfc-2822 --date=@$THEME_MTIME)\" {} \\;       \u0026\u0026 COMMENT \"Update TypoScript lexer for highlighting. It comes with Sphinx\"    \u0026\u0026 COMMENT \"but isn't up to date there. So we use it from our own repo.\"    \u0026\u0026 COMMENT \"usually: /usr/local/lib/python2.7/site-packages/pygments/lexers\"    \u0026\u0026 python=$(pipenv --venv)/bin/python    \u0026\u0026 destdir=$(dirname $($python -c \"import pygments; print pygments.__file__\"))/lexers    \u0026\u0026 rm $destdir/typoscript.*    \u0026\u0026 wget $TYPOSCRIPT_PY_URL --quiet --output-document $destdir/typoscript.py    \u0026\u0026 curdir=$(pwd); cd $destdir; $python _mapping.py; cd $curdir       \u0026\u0026 COMMENT \"Provide the toolchain\"    \u0026\u0026 wget ${TOOLCHAIN_URL} -qO /ALL/Downloads/Toolchain_RenderDocumentation.zip    \u0026\u0026 unzip /ALL/Downloads/Toolchain_RenderDocumentation.zip -d /ALL/Toolchains    \u0026\u0026 mv /ALL/Toolchains/${TOOLCHAIN_UNPACKED} /ALL/Toolchains/RenderDocumentation    \u0026\u0026 rm /ALL/Downloads/Toolchain_RenderDocumentation.zip       \u0026\u0026 COMMENT \"Final cleanup\"    \u0026\u0026 apt-get clean    \u0026\u0026 rm -rf /tmp/* $HOME/.cache       \u0026\u0026 COMMENT \"Memorize the settings in the container\"    \u0026\u0026 echo \"export DEBIAN_FRONTEND=\\\"${DEBIAN_FRONTEND}\\\"\"         \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export DOCKRUN_PREFIX=\\\"${DOCKRUN_PREFIX}\\\"\"           \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export OUR_IMAGE=\\\"${OUR_IMAGE}\\\"\"                     \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export OUR_IMAGE_SHORT=\\\"${OUR_IMAGE_SHORT}\\\"\"         \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export OUR_IMAGE_SLOGAN=\\\"${OUR_IMAGE_SLOGAN}\\\"\"       \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export OUR_IMAGE_TAG=\\\"${OUR_IMAGE_TAG}\\\"\"             \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export OUR_IMAGE_VERSION=\\\"${OUR_IMAGE_VERSION}\\\"\"     \u003e\u003e /ALL/Downloads/envvars.sh    \u0026\u0026 echo \"export TOOLCHAIN_URL=\\\"${TOOLCHAIN_URL}\\\"\"             \u003e\u003e /ALL/Downloads/envvars.sh       \u0026\u0026 COMMENT \"Let\\'s have some debug info ('::' as separator)\"    \u0026\u0026 echo \"      $OUR_IMAGE_VERSION\\n      Versions used for $OUR_IMAGE_VERSION:\\n      Sphinx theme        :: t3SphinxThemeRtd    :: $THEME_VERSION :: mtime:$THEME_MTIME\\n      Toolchain           :: RenderDocumentation :: $TOOLCHAIN_VERSION\\n      Toolchain tool      :: TCT                 :: $TOOLCHAIN_TOOL_VERSION\\n      TYPO3-Documentation :: typo3.latex         :: v1.1.0\\n      TypoScript lexer    :: typoscript.py       :: $TYPOSCRIPT_PY_VERSION\\n      \\n      DOCKRUN_PREFIX      :: ${DOCKRUN_PREFIX}\\n      OUR_IMAGE           :: ${OUR_IMAGE}\\n      OUR_IMAGE_SHORT     :: ${OUR_IMAGE_SHORT}\\n      OUR_IMAGE_SLOGAN    :: ${OUR_IMAGE_SLOGAN}\\n      OUR_IMAGE_TAG       :: ${OUR_IMAGE_TAG}\\n      OUR_IMAGE_VERSION   :: ${OUR_IMAGE_VERSION}\\n      TOOLCHAIN_TOOL_URL  :: ${TOOLCHAIN_TOOL_URL}\\n      TOOLCHAIN_URL       :: ${TOOLCHAIN_URL}\\n      \\n\" | cut -b 7- \u003e /ALL/Downloads/buildinfo.txt    \u0026\u0026 cat /ALL/Downloads/buildinfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/ALL/Menu/mainmenu.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}