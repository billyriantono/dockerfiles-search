MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: OUR_IMAGE_VERSION
    Name: arg
    Value: 2.5.0-dev-bk
  - Key: OUR_IMAGE_TAG
    Name: arg
    Value: ${OUR_IMAGE_TAG:-$OUR_IMAGE_VERSION}
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: DOCKRUN_PREFIX
    Name: arg
    Value: '"dockrun_"'
  - Key: hack_OUR_IMAGE
    Name: arg
    Value: '"t3docs/render-documentation:${OUR_IMAGE_TAG}"'
  - Key: hack_OUR_IMAGE_SHORT
    Name: arg
    Value: '"t3rd"'
  - Key: OUR_IMAGE_SLOGAN
    Name: arg
    Value: '"t3rd - TYPO3 render documentation"'
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    - Key: LANG
      Value: C.UTF-8
    - Key: HOME
      Value: '"/ALL/userhome"'
    - Key: OUR_IMAGE
      Value: '"$hack_OUR_IMAGE"'
    - Key: OUR_IMAGE_SHORT
      Value: '"$hack_OUR_IMAGE_SHORT"'
    - Key: OUR_IMAGE_VERSION
      Value: '"$OUR_IMAGE_VERSION"'
    - Key: THEME_MTIME
      Value: '"1530870999"'
    - Key: THEME_VERSION
      Value: '"develop-benjaminkott (>3.6.16)"'
    - Key: TOOLCHAIN_TOOL_VERSION
      Value: '"develop (1.2.0-dev)"'
    - Key: TOOLCHAIN_TOOL_URL
      Value: '"https://github.com/marble/TCT/archive/develop.zip"'
    - Key: TOOLCHAIN_UNPACKED
      Value: '"Toolchain_RenderDocumentation-develop"'
    - Key: TOOLCHAIN_URL
      Value: '"https://github.com/marble/Toolchain_RenderDocumentation/archive/develop.zip"'
    - Key: TOOLCHAIN_VERSION
      Value: '"develop (2.9.0-dev)"'
    - Key: TYPOSCRIPT_PY_URL
      Value: '"https://raw.githubusercontent.com/TYPO3-Documentation/Pygments-TypoScript-Lexer/v2.2.4/typoscript.py"'
    - Key: TYPOSCRIPT_PY_VERSION
      Value: '"v2.2.4"'
    Name: env
  - Labels:
    - Key: Maintainer
      Value: '"TYPO3 Documentation Team"'
    - Key: Description
      Value: '"This image renders TYPO3 documentation."'
    - Key: Vendor
      Value: '"t3docs"'
    - Key: Version
      Value: '"$OUR_IMAGE_VERSION"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ALL-for-build
    - /ALL
  - Name: workdir
    Path: /ALL/venv
  - CmdLine:
    - 'true "Create executable COMMENT as a workaround to allow commenting here"    &&
      cp /bin/true /bin/COMMENT       && COMMENT "Garantee folders"    && mkdir /PROJECT    &&
      mkdir /RESULT    && mkdir /THEMES       && COMMENT "Avoid GIT bug"    && cp
      /ALL/global-gitconfig.cfg /root/.gitconfig    && cp /ALL/global-gitconfig.cfg
      /.gitconfig    && chmod 666 /.gitconfig       && COMMENT "Make sure other users
      can write"    && chmod -R o+w       /ALL/Makedir       /RESULT       && COMMENT
      "Install and upgrade system packages"    && apt-get update    && apt-get upgrade
      -qy    && apt-get install -yq        python-pip       && COMMENT "What the toolchains
      needs"    && apt-get install -yq --no-install-recommends       moreutils       pandoc       rsync       tidy       unzip       wget       zip       &&
      COMMENT "What we need - convenience tools"    && apt-get install -yq --no-install-recommends       less       nano       ncdu       &&
      COMMENT "Try extra cleaning besides /etc/apt/apt.conf.d/docker-clean"    &&
      apt-get clean    && rm -rf /var/lib/apt/lists/*       && COMMENT "Python stuff"    &&
      /usr/bin/pip install --upgrade pip    && apt-get remove python-pip -y    &&
      /usr/local/bin/pip install --upgrade pipenv       && COMMENT "Disable /ALL/venv/Pipfile.lock
      - it didn''t work reliably"    && rm -f Pipfile.lock.DISABLED    && if [ -f
      "Pipfile.lock" ]; then mv Pipfile.lock Pipfile.lock.DISABLED; fi       && COMMENT
      "Install from /ALL/venv/Pipfile"    && pipenv install    && echo source $(pipenv
      --venv)/bin/activate >>$HOME/.bashrc       && COMMENT "Provide some special
      files"    && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/check_include_files.py            --quiet
      --output-document /usr/local/bin/check_include_files.py    && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/config/_htaccess-2016-08.txt            --quiet
      --output-document /ALL/Makedir/_htaccess    && wget https://github.com/etobi/Typo3ExtensionUtils/raw/master/bin/t3xutils.phar            --quiet
      --output-document /usr/local/bin/t3xutils.phar    && chmod +x /usr/local/bin/t3xutils.phar       &&
      COMMENT "All files of the theme of a given theme version should have the"    &&
      COMMENT "same mtime (last commit) to not turn off Sphinx caching"    && python=$(pipenv
      --venv)/bin/python    && destdir=$(dirname $($python -c "import t3SphinxThemeRtd;
      print t3SphinxThemeRtd.__file__"))    && find $destdir -exec touch --no-create
      --time=mtime --date="$(date --rfc-2822 --date=@$THEME_MTIME)" {} \;       &&
      COMMENT "Update TypoScript lexer for highlighting. It comes with Sphinx"    &&
      COMMENT "but isn''t up to date there. So we use it from our own repo."    &&
      COMMENT "usually: /usr/local/lib/python2.7/site-packages/pygments/lexers"    &&
      python=$(pipenv --venv)/bin/python    && destdir=$(dirname $($python -c "import
      pygments; print pygments.__file__"))/lexers    && rm $destdir/typoscript.*    &&
      wget $TYPOSCRIPT_PY_URL --quiet --output-document $destdir/typoscript.py    &&
      curdir=$(pwd); cd $destdir; $python _mapping.py; cd $curdir       && COMMENT
      "Provide the toolchain"    && wget ${TOOLCHAIN_URL} -qO /ALL/Downloads/Toolchain_RenderDocumentation.zip    &&
      unzip /ALL/Downloads/Toolchain_RenderDocumentation.zip -d /ALL/Toolchains    &&
      mv /ALL/Toolchains/${TOOLCHAIN_UNPACKED} /ALL/Toolchains/RenderDocumentation    &&
      rm /ALL/Downloads/Toolchain_RenderDocumentation.zip       && COMMENT "Final
      cleanup"    && apt-get clean    && rm -rf /tmp/* $HOME/.cache       && COMMENT
      "Memorize the settings in the container"    && echo "export DEBIAN_FRONTEND=\"${DEBIAN_FRONTEND}\""         >>
      /ALL/Downloads/envvars.sh    && echo "export DOCKRUN_PREFIX=\"${DOCKRUN_PREFIX}\""           >>
      /ALL/Downloads/envvars.sh    && echo "export OUR_IMAGE=\"${OUR_IMAGE}\""                     >>
      /ALL/Downloads/envvars.sh    && echo "export OUR_IMAGE_SHORT=\"${OUR_IMAGE_SHORT}\""         >>
      /ALL/Downloads/envvars.sh    && echo "export OUR_IMAGE_SLOGAN=\"${OUR_IMAGE_SLOGAN}\""       >>
      /ALL/Downloads/envvars.sh    && echo "export OUR_IMAGE_TAG=\"${OUR_IMAGE_TAG}\""             >>
      /ALL/Downloads/envvars.sh    && echo "export OUR_IMAGE_VERSION=\"${OUR_IMAGE_VERSION}\""     >>
      /ALL/Downloads/envvars.sh    && echo "export TOOLCHAIN_URL=\"${TOOLCHAIN_URL}\""             >>
      /ALL/Downloads/envvars.sh       && COMMENT "Let\''s have some debug info (''::''
      as separator)"    && echo "      $OUR_IMAGE_VERSION\n      Versions used for
      $OUR_IMAGE_VERSION:\n      Sphinx theme        :: t3SphinxThemeRtd    :: $THEME_VERSION
      :: mtime:$THEME_MTIME\n      Toolchain           :: RenderDocumentation :: $TOOLCHAIN_VERSION\n      Toolchain
      tool      :: TCT                 :: $TOOLCHAIN_TOOL_VERSION\n      TYPO3-Documentation
      :: typo3.latex         :: v1.1.0\n      TypoScript lexer    :: typoscript.py       ::
      $TYPOSCRIPT_PY_VERSION\n      \n      DOCKRUN_PREFIX      :: ${DOCKRUN_PREFIX}\n      OUR_IMAGE           ::
      ${OUR_IMAGE}\n      OUR_IMAGE_SHORT     :: ${OUR_IMAGE_SHORT}\n      OUR_IMAGE_SLOGAN    ::
      ${OUR_IMAGE_SLOGAN}\n      OUR_IMAGE_TAG       :: ${OUR_IMAGE_TAG}\n      OUR_IMAGE_VERSION   ::
      ${OUR_IMAGE_VERSION}\n      TOOLCHAIN_TOOL_URL  :: ${TOOLCHAIN_TOOL_URL}\n      TOOLCHAIN_URL       ::
      ${TOOLCHAIN_URL}\n      \n" | cut -b 7- > /ALL/Downloads/buildinfo.txt    &&
      cat /ALL/Downloads/buildinfo.txt'
    Name: run
    PrependShell: true
  - CmdLine:
    - /ALL/Menu/mainmenu.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
