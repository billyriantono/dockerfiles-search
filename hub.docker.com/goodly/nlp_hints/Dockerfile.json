{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7-slim",
      "SourceCode": "FROM python:2.7-slim",
      "Platform": "",
      "From": {
        "Image": "python:2.7-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker/bashrc_to_docker",
            "/root/.bashrc"
          ]
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update -q \u0026\u0026 apt-get install -y --no-install-recommends         apt-transport-https ca-certificates         software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 93C4A3FD7BB9C367"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -q"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -q -y --no-install-recommends         gcc build-essential         git-core curl less vim psmisc         redis-tools         oracle-java8-installer oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/java-8-oracle/jre\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -q -y --no-install-recommends maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/",
            "nlp_hints"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/nlp_hints"
        },
        {
          "CmdLine": [
            "rm -rf docker/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mvn --batch-mode clean compile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/nlp_worker"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker/requirements.txt",
            "."
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker/nlp_worker",
            "./nlp_worker"
          ]
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/home/nlp_worker"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/nlp_hints"
        },
        {
          "CmdLine": [
            "/usr/local/bin/rq",
            "worker",
            "nlp_exporter",
            "--url",
            "redis://django_rq/0"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}