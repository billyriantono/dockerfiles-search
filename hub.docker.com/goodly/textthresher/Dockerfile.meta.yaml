MetaArgs: null
Stages:
- As: builder
  BaseName: python:2.7.13-slim
  Commands:
  - CmdLine:
    - apt-get update -q
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /bd_build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker/bd_build
    - /bd_build
  - CmdLine:
    - ./prepare.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: MINIMAL_APT_INSTALL
    Name: arg
    Value: '"apt-get install -q -y --no-install-recommends"'
  - CmdLine:
    - $MINIMAL_APT_INSTALL         curl         python
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/download
  - Key: NODEREPO
    Name: arg
    Value: '"node_6.x"'
  - Key: DISTRO
    Name: arg
    Value: '"jessie"'
  - Key: NODE_PACKAGE
    Name: arg
    Value: nodejs_6.11.3-1nodesource1_amd64.deb
  - CmdLine:
    - curl -sSO "https://deb.nodesource.com/node_6.x/pool/main/n/nodejs/${NODE_PACKAGE}"
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i ${NODE_PACKAGE}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSO https://dl.yarnpkg.com/debian/pubkey.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key add pubkey.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -q && $MINIMAL_APT_INSTALL 'yarn=1.0.2*'
    Name: run
    PrependShell: true
  - Env:
    - Key: WEBPACK_BUILD_DIR
      Value: /home/thresher
    Name: env
  - Name: workdir
    Path: /home/thresher
  - CmdLine:
    - chown ${USER}:${USER} /home/thresher
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /package.json
    - /home/thresher
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /yarn.lock
    - /home/thresher
  - Name: user
    User: ${USER}
  - CmdLine:
    - yarn install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /.babelrc
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /app
    - ./app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /webpack
    - ./webpack
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /webpack.config.js
    - .
  - CmdLine:
    - npm run deploy:quiet
    Name: run
    PrependShell: true
  From:
    Image: python:2.7.13-slim
  Name: builder
  Platform: ""
  SourceCode: FROM python:2.7.13-slim as builder
- As: django
  BaseName: python:2.7.13-slim
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - apt-get update -q
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /bd_build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker/bd_build
    - /bd_build
  - CmdLine:
    - ./prepare.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: MINIMAL_APT_INSTALL
    Name: arg
    Value: '"apt-get install -q -y --no-install-recommends"'
  - CmdLine:
    - $MINIMAL_APT_INSTALL         curl         gcc         gettext         postgresql-client
      libpq-dev         vim less psmisc
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker/thresher_api/requirements.txt
    - .
  - CmdLine:
    - pip install --upgrade pip && pip install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ipython
    Name: run
    PrependShell: true
  - Key: USER
    Name: arg
    Value: thresher
  - Key: USER_ID
    Name: arg
    Value: "9000"
  - Key: GROUP_ID
    Name: arg
    Value: "9000"
  - Key: HOME
    Name: arg
    Value: /home/thresher
  - CmdLine:
    - groupadd -g ${GROUP_ID} ${USER} &&       useradd --shell /bin/bash --home ${HOME}
      -u ${USER_ID} -g ${GROUP_ID} ${USER}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - chown ${USER}:${USER} /var/www
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: /home/thresher
    Name: env
  - Name: workdir
    Path: /home/thresher
  - CmdLine:
    - chown ${USER}:${USER} /home/thresher
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /home/thresher/dist
    - ./dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /data
    - ./data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker
    - ./docker
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /manage.py
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /researcher
    - ./researcher
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /thresher
    - ./thresher
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /thresher_backend
    - ./thresher_backend
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker/bashrc_to_docker
    - /root/.bashrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker/bashrc_to_docker
    - ${HOME}/.bashrc
  - Name: expose
    Ports:
    - "5000"
  - Name: user
    User: ${USER}
  - CmdLine:
    - bash
    - docker/thresher_api/migrate_and_run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7.13-slim
  Name: django
  Platform: ""
  SourceCode: FROM python:2.7.13-slim as django
