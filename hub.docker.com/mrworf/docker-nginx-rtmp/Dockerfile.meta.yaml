MetaArgs:
- DefaultValue: 1.14.1
  Key: NGINX_VERSION
  ProvidedValue: null
  Value: 1.14.1
- DefaultValue: 1.2.1
  Key: NGINX_RTMP_VERSION
  ProvidedValue: null
  Value: 1.2.1
- DefaultValue: "4.1"
  Key: FFMPEG_VERSION
  ProvidedValue: null
  Value: "4.1"
Stages:
- As: build-nginx
  BaseName: alpine:latest
  Commands:
  - Key: NGINX_VERSION
    Name: arg
    Value: null
  - Key: NGINX_RTMP_VERSION
    Name: arg
    Value: null
  - CmdLine:
    - apk add --update   build-base   ca-certificates   curl   gcc   libc-dev   libgcc   linux-headers   make   musl-dev   openssl   openssl-dev   pcre   pcre-dev   pkgconf   pkgconfig   zlib-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&   wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz &&   tar
      zxf nginx-${NGINX_VERSION}.tar.gz &&   rm nginx-${NGINX_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&   wget https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_VERSION}.tar.gz
      &&   tar zxf v${NGINX_RTMP_VERSION}.tar.gz && rm v${NGINX_RTMP_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/nginx-${NGINX_VERSION} &&   ./configure   --prefix=/opt/nginx   --add-module=/tmp/nginx-rtmp-module-${NGINX_RTMP_VERSION}   --conf-path=/etc/nginx/nginx.conf   --with-threads   --with-file-aio   --with-http_ssl_module   --error-log-path=/var/log/nginx/error.log   --http-log-path=/var/log/nginx/access.log   --with-debug
      &&   cd /tmp/nginx-${NGINX_VERSION} && make && make install
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: build-nginx
  Platform: ""
  SourceCode: FROM alpine:latest as build-nginx
- As: build-ffmpeg
  BaseName: alpine:latest
  Commands:
  - Key: FFMPEG_VERSION
    Name: arg
    Value: null
  - Key: PREFIX
    Name: arg
    Value: /usr/local
  - Key: MAKEFLAGS
    Name: arg
    Value: '"-j4"'
  - CmdLine:
    - apk add --update   build-base   freetype-dev   lame-dev   libogg-dev   libass   libass-dev   libvpx-dev   libvorbis-dev   libwebp-dev   libtheora-dev   opus-dev   pkgconf   pkgconfig   rtmpdump-dev   wget   x264-dev   x265-dev   yasm
    Name: run
    PrependShell: true
  - CmdLine:
    - echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update fdk-aac-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ &&   wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz
      &&   tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz && rm ffmpeg-${FFMPEG_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ffmpeg-${FFMPEG_VERSION} &&   ./configure   --prefix=${PREFIX}   --enable-version3   --enable-gpl   --enable-nonfree   --enable-small   --enable-libmp3lame   --enable-libx264   --enable-libx265   --enable-libvpx   --enable-libtheora   --enable-libvorbis   --enable-libopus   --enable-libfdk-aac   --enable-libass   --enable-libwebp   --enable-librtmp   --enable-postproc   --enable-avresample   --enable-libfreetype   --enable-openssl   --disable-debug   --disable-doc   --disable-ffplay   --extra-libs="-lpthread
      -lm" &&   make && make install && make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/* /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: build-ffmpeg
  Platform: ""
  SourceCode: FROM alpine:latest as build-ffmpeg
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: Alfred Gutierrez <alf.g.jr@gmail.com>
    Name: label
  - CmdLine:
    - apk add --update   ca-certificates   openssl   pcre   lame   libogg   libass   libvpx   libvorbis   libwebp   libtheora   opus   rtmpdump   x264-dev   x265-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: build-nginx
    Name: copy
    SourcesAndDest:
    - /opt/nginx
    - /opt/nginx
  - Chown: ""
    From: build-ffmpeg
    Name: copy
    SourcesAndDest:
    - /usr/local
    - /usr/local
  - Chown: ""
    From: build-ffmpeg
    Name: copy
    SourcesAndDest:
    - /usr/lib/libfdk-aac.so.1
    - /usr/lib/libfdk-aac.so.1
  - CmdLine:
    - mkdir -p /var/log/nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log &&     ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - mkdir -p /opt/data && mkdir /www
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - static
    - /www/static
  - Name: expose
    Ports:
    - "1935"
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /opt/nginx/sbin/nginx
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
