{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "ruby:2.5",
      "SourceCode": "FROM ruby:2.5 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "ruby:2.5"
      },
      "Commands": [
        {
          "Key": "JPEGOPTIM_VERSION",
          "Name": "arg",
          "Value": "1.4.3"
        },
        {
          "Key": "PNGCRUSH_VERSION",
          "Name": "arg",
          "Value": "1.8.11"
        },
        {
          "Key": "ZOPFLI_VERSION",
          "Name": "arg",
          "Value": "1.0.1"
        },
        {
          "Key": "ADVANCECOMP_VERSION",
          "Name": "arg",
          "Value": "1.20"
        },
        {
          "Key": "JHEAD_VERSION",
          "Name": "arg",
          "Value": "3.00"
        },
        {
          "Key": "GIFSICLE_VERSION",
          "Name": "arg",
          "Value": "1.88"
        },
        {
          "Key": "OPTIPNG_VERSION",
          "Name": "arg",
          "Value": "0.7.5"
        },
        {
          "Key": "PNGQUANT_VERSION",
          "Name": "arg",
          "Value": "2.5.2"
        },
        {
          "Key": "JPEGARCHIVE_VERSION",
          "Name": "arg",
          "Value": "2.1.1"
        },
        {
          "Key": "MOZJPEG_VERSION",
          "Name": "arg",
          "Value": "3.1"
        },
        {
          "Key": "IJG_VERSION",
          "Name": "arg",
          "Value": "9a"
        },
        {
          "Key": "PNGOUT_VERSION",
          "Name": "arg",
          "Value": "20150319"
        },
        {
          "Key": "SKIP_IMAGE_OPTIM_PACK",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -   \u0026\u0026 apt-get update \u0026\u0026 apt-get install apt-transport-https   \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list   \u0026\u0026 curl -sL https://deb.nodesource.com/setup_10.x | bash -   \u0026\u0026 apt-get install -y nodejs yarn nasm   \u0026\u0026 curl -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz   \u0026\u0026 tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz   \u0026\u0026 cd advancecomp-$ADVANCECOMP_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -O https://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz   \u0026\u0026 tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz   \u0026\u0026 cd gifsicle-$GIFSICLE_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz   \u0026\u0026 tar zxf jhead-$JHEAD_VERSION.tar.gz   \u0026\u0026 cd jhead-$JHEAD_VERSION   \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -O https://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz   \u0026\u0026 tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz   \u0026\u0026 cd jpegoptim-$JPEGOPTIM_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz   \u0026\u0026 tar zxf v$MOZJPEG_VERSION.tar.gz   \u0026\u0026 cd mozjpeg-$MOZJPEG_VERSION   \u0026\u0026 autoreconf -fiv \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -L -O https://github.com/danielgtaylor/jpeg-archive/archive/$JPEGARCHIVE_VERSION.tar.gz   \u0026\u0026 tar zxf $JPEGARCHIVE_VERSION.tar.gz   \u0026\u0026 cd jpeg-archive-$JPEGARCHIVE_VERSION   \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz   \u0026\u0026 tar zxf jpegsrc.v$IJG_VERSION.tar.gz   \u0026\u0026 cd jpeg-$IJG_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz   \u0026\u0026 tar zxf optipng-$OPTIPNG_VERSION.tar.gz   \u0026\u0026 cd optipng-$OPTIPNG_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 curl -L -O http://downloads.sourceforge.net/project/pmt/pngcrush/$PNGCRUSH_VERSION/pngcrush-$PNGCRUSH_VERSION.tar.gz   \u0026\u0026 tar zxf pngcrush-$PNGCRUSH_VERSION.tar.gz   \u0026\u0026 cd pngcrush-$PNGCRUSH_VERSION   \u0026\u0026 make \u0026\u0026 cp -f pngcrush /usr/local/bin   \u0026\u0026 cd ..   \u0026\u0026 curl -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz   \u0026\u0026 tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz   \u0026\u0026 cd pngout-$PNGOUT_VERSION-linux-static   \u0026\u0026 cp -f x86_64/pngout-static /usr/local/bin/pngout   \u0026\u0026 cd ..   \u0026\u0026 curl -L -O http://pngquant.org/pngquant-$PNGQUANT_VERSION-src.tar.bz2   \u0026\u0026 tar xjf pngquant-$PNGQUANT_VERSION-src.tar.bz2   \u0026\u0026 cd pngquant-$PNGQUANT_VERSION   \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 npm install -g svgo   \u0026\u0026 ldconfig   \u0026\u0026 npm install node-sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build-cm2.sh",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "coursemology2",
            "/app/coursemology2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "coursemology-theme",
            "/app/coursemology-theme"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patches",
            "/app/patches"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/app/files"
          ]
        },
        {
          "Env": [
            {
              "Key": "AWS_ACCESS_KEY_ID",
              "Value": "\"access\""
            },
            {
              "Key": "AWS_SECRET_ACCESS_KEY",
              "Value": "\"secret\""
            },
            {
              "Key": "AWS_REGION",
              "Value": "\"ap-southeast-1\""
            },
            {
              "Key": "AWS_BUCKET",
              "Value": "\"coursemology2\""
            },
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "/app/coursemology2/.bundle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/app/build-cm2.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "coursemology",
      "BaseName": "ruby:2.5",
      "SourceCode": "FROM ruby:2.5 AS coursemology",
      "Platform": "",
      "As": "coursemology",
      "From": {
        "Image": "ruby:2.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "useradd -d /app -u 10000 app   \u0026\u0026 addgroup -gid 999 --system docker \u0026\u0026 adduser app docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -   \u0026\u0026 apt-get install -y ghostscript nodejs imagemagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app/coursemology2"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/coursemology2",
            "."
          ]
        },
        {
          "CmdLine": [
            "mkdir -p tmp/pids tmp/sockets log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app /app/coursemology2/tmp /app/coursemology2/Gemfile.lock /app/coursemology2/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "/app/coursemology2/.bundle"
            },
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "app"
        }
      ]
    }
  ]
}