{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/base-notebook",
      "SourceCode": "FROM jupyter/base-notebook",
      "Platform": "",
      "From": {
        "Image": "jupyter/base-notebook"
      },
      "Commands": [
        {
          "Maintainer": "Michael Notter \u003cmichaelnotter@hotmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends bzip2                                                 ca-certificates                                                 curl                                                 git                                                 tree                                                 unzip                                                 wget                                                 vim                                                 xvfb                                                 zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NEURODEBIAN_URL",
              "Value": "http://neuro.debian.net/lists/xenial.de-md.full"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL $NEURODEBIAN_URL | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list \u0026\u0026     apt-key adv --recv-keys --keyserver hkp://pgp.mit.edu:80 0xA5D32F012649A5A9 \u0026\u0026     apt-get update -qq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends datalad                                                 dcm2niix                                                 git-annex-standalone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "conda install -yq python=3.5                       ipython                       codecov                       cython                       dipy                       graphviz                       joblib                       jupyter                       matplotlib                       nb_conda                       nb_conda_kernels                       nilearn                       nitime                       notebook                       pandas                       pip                       scikit-image                       seaborn \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MPLBACKEND=Agg $CONDA_DIR/bin/python -c \"import matplotlib.pyplot\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py widgetsnbextension --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "pip install kernda --no-cache \u0026\u0026     $CONDA_DIR/bin/python -m ipykernel install \u0026\u0026     kernda -o -y /usr/local/share/jupyter/kernels/python3/kernel.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -yq --no-install-recommends graphviz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "pip install --upgrade --quiet pip \u0026\u0026     pip install --upgrade --quiet duecredit                                   nipy                                   rdflib                                   pprocess                                   pybids                 --ignore-installed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "conda install -yq nipype"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda remove -yq nipype \u0026\u0026     pip install git+https://github.com/nipy/nipype#egg=nipype"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -y gcc \u0026\u0026     pip install git+https://github.com/poldracklab/mriqc.git \u0026\u0026     pip install git+https://github.com/poldracklab/fmriprep.git \u0026\u0026     apt-get purge -y --auto-remove gcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /boot /media /mnt /srv \u0026\u0026     rm -rf ~/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}