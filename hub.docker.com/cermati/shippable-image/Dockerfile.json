{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "REDIS_VERSION",
              "Value": "2.8.24"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_URL",
              "Value": "http://download.redis.io/releases/redis-2.8.24.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_SHA",
              "Value": "6c86ca5291ca7f4e37d9c90511eed67beb6649befe57e2e26307f74adb8630fe"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -r redis \u0026\u0026 useradd -r -g redis redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/lib/redis \u0026\u0026 chown redis:redis /var/lib/redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tbuildDeps=' \t\twget \t\t\t\tgcc \t\tlibc6-dev \t\tmake \t'; \tapt-get update; \tapt-get install -y $buildDeps --no-install-recommends; \trm -rf /var/lib/apt/lists/*; \t\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \techo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c -; \tmkdir -p /usr/src/redis; \ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \trm redis.tar.gz; \t\tmake -C /usr/src/redis -j \"$(nproc)\"; \tmake -C /usr/src/redis install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tmkdir /etc/redis; \tcp /usr/src/redis/redis.conf /etc/redis; \tsed -i 's/^supervised.*/supervised systemd/g' /etc/redis/redis.conf; \tsed -i 's/^daemonize.*/daemonize yes/g' /etc/redis/redis.conf; \tsed -i 's/^dir.*/dir \\/var\\/lib\\/redis/g' /etc/redis/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MONGODB_VERSION",
              "Value": "3.4.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGODB_ENV_SRC",
              "Value": "\"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6; \techo \"$MONGODB_ENV_SRC\" | tee /etc/apt/sources.list.d/mongodb-org-3.4.list; \tapt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install mongodb-org=\"$MONGODB_VERSION\" mongodb-org-server=\"$MONGODB_VERSION\" mongodb-org-shell=\"$MONGODB_VERSION\" \tmongodb-org-mongos=\"$MONGODB_VERSION\" mongodb-org-tools=\"$MONGODB_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "\"/root/.nvm\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash \t\u0026\u0026 . $NVM_DIR/nvm.sh \t\u0026\u0026 nvm install $NODE_VERSION \t\u0026\u0026 nvm alias default $NODE_VERSION \t\u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y yarn=0.24.5-1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y s3cmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/opt/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /opt/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\"/opt/entrypoint.sh\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}