{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/alpine:3.8",
      "SourceCode": "FROM lsiobase/alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "lsiobase/alpine:3.8"
      },
      "Commands": [
        {
          "Maintainer": "romancin",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_CORES",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Romancin version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "MEDIAINF_VER",
          "Name": "arg",
          "Value": "\"19.04\""
        },
        {
          "Key": "RTORRENT_VER",
          "Name": "arg",
          "Value": "\"v0.9.7\""
        },
        {
          "Key": "LIBTORRENT_VER",
          "Name": "arg",
          "Value": "\"v0.13.7\""
        },
        {
          "Key": "CURL_VER",
          "Name": "arg",
          "Value": "\"7.64.1\""
        },
        {
          "Key": "GEOIP_VER",
          "Name": "arg",
          "Value": "\"1.1.1\""
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "/usr/local/lib/pkgconfig"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTEXT_PATH",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CREATE_SUBDIR_BY_TRACKERS",
              "Value": "\"no\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} \u0026\u0026  apk add --no-cache \tbash-completion         ca-certificates         fcgi         ffmpeg         geoip \tgeoip-dev         gzip         logrotate         nginx         dtach         tar         unrar         unzip         sox         wget         irssi         irssi-perl         zlib         zlib-dev         libxml2-dev         perl-archive-zip         perl-net-ssleay         perl-digest-sha1         git         libressl         binutils         findutils         zip         php7         php7-cgi         php7-fpm         php7-json          php7-mbstring         php7-sockets         php7-pear \tphp7-opcache         php7-apcu         php7-ctype         php7-dev         php7-phar         python         python3 \u0026\u0026  apk add --no-cache --virtual=build-dependencies         autoconf         automake         cppunit-dev         perl-dev         file         g++         gcc         libtool         make         ncurses-dev         build-base         libtool         subversion         cppunit-dev         linux-headers         curl-dev         libressl-dev \u0026\u0026 cd /tmp \u0026\u0026 mkdir curl \u0026\u0026 cd curl \u0026\u0026 wget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz | tar xz --strip 1 \u0026\u0026 ./configure --with-ssl \u0026\u0026 make -j ${NB_CORES} \u0026\u0026 make install \u0026\u0026 ldconfig /usr/bin \u0026\u0026 ldconfig /usr/lib \u0026\u0026  mkdir -p         /usr/share/webapps/rutorrent         /defaults/rutorrent-conf \u0026\u0026  git clone https://github.com/Novik/ruTorrent.git         /usr/share/webapps/rutorrent/ \u0026\u0026  mv /usr/share/webapps/rutorrent/conf/*         /defaults/rutorrent-conf/ \u0026\u0026  rm -rf         /defaults/rutorrent-conf/users \u0026\u0026   pip3 install CfScrape \u0026\u0026 git clone https://github.com/QuickBox/club-QuickBox /usr/share/webapps/rutorrent/plugins/theme/themes/club-QuickBox \u0026\u0026 git clone https://github.com/Phlooo/ruTorrent-MaterialDesign /usr/share/webapps/rutorrent/plugins/theme/themes/MaterialDesign \u0026\u0026 cd /usr/share/webapps/rutorrent/plugins/ \u0026\u0026 git clone https://github.com/orobardet/rutorrent-force_save_session force_save_session \u0026\u0026 git clone https://github.com/AceP1983/ruTorrent-plugins  \u0026\u0026 mv ruTorrent-plugins/* . \u0026\u0026 rm -rf ruTorrent-plugins \u0026\u0026 apk add --no-cache cksfv \u0026\u0026 git clone https://github.com/nelu/rutorrent-thirdparty-plugins.git \u0026\u0026 mv rutorrent-thirdparty-plugins/* . \u0026\u0026 rm -rf rutorrent-thirdparty-plugins \u0026\u0026 cd /usr/share/webapps/rutorrent/ \u0026\u0026 chmod 755 plugins/filemanager/scripts/* \u0026\u0026 rm -rf plugins/fileupload \u0026\u0026 cd /tmp \u0026\u0026 git clone https://github.com/mcrapet/plowshare.git \u0026\u0026 cd plowshare/ \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -rf plowshare* \u0026\u0026 apk add --no-cache unzip bzip2 \u0026\u0026 cd /usr/share/webapps/rutorrent/plugins/ \u0026\u0026 git clone https://github.com/Gyran/rutorrent-pausewebui pausewebui \u0026\u0026 git clone https://github.com/Gyran/rutorrent-ratiocolor ratiocolor \u0026\u0026 sed -i 's/changeWhat = \"cell-background\";/changeWhat = \"font\";/g' /usr/share/webapps/rutorrent/plugins/ratiocolor/init.js \u0026\u0026 git clone https://github.com/Gyran/rutorrent-instantsearch instantsearch \u0026\u0026 git clone https://github.com/xombiemp/rutorrentMobile \u0026\u0026 git clone https://github.com/dioltas/AddZip \u0026\u0026 git clone https://github.com/Micdu70/geoip2-rutorrent geoip2 \u0026\u0026 rm -rf geoip \u0026\u0026 mkdir -p /usr/share/GeoIP \u0026\u0026 cd /usr/share/GeoIP \u0026\u0026 wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \u0026\u0026 wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \u0026\u0026 tar xzf GeoLite2-City.tar.gz \u0026\u0026 tar xzf GeoLite2-Country.tar.gz \u0026\u0026 rm -f *.tar.gz \u0026\u0026 mv GeoLite2-*/*.mmdb . \u0026\u0026 cp *.mmdb /usr/share/webapps/rutorrent/plugins/geoip2/database/ \u0026\u0026 pecl install geoip-${GEOIP_VER} \u0026\u0026 chmod +x /usr/lib/php7/modules/geoip.so \u0026\u0026 echo \";extension=geoip.so\" \u003e\u003e /etc/php7/php.ini \u0026\u0026  perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c-\u003eload(doit =\u003e 1, autoconfig =\u003e 1); $c-\u003eedit(prerequisites_policy =\u003e \"follow\"); $c-\u003eedit(build_requires_install_policy =\u003e \"yes\"); $c-\u003ecommit' \u0026\u0026  curl -L http://cpanmin.us | perl - App::cpanminus \u0026\u0026         cpanm HTML::Entities XML::LibXML JSON JSON::XS \u0026\u0026 cd /tmp \u0026\u0026 svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c \u0026\u0026 cd /tmp/xmlrpc-c \u0026\u0026 ./configure --with-libwww-ssl --disable-wininet-client --disable-curl-client --disable-libwww-client --disable-abyss-server --disable-cgi-server \u0026\u0026 make -j ${NB_CORES} \u0026\u0026 make install \u0026\u0026 cd /tmp \u0026\u0026 mkdir libtorrent \u0026\u0026 cd libtorrent \u0026\u0026 wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make -j ${NB_CORES} \u0026\u0026 make install \u0026\u0026 cd /tmp \u0026\u0026 mkdir rtorrent \u0026\u0026 cd rtorrent \u0026\u0026 wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure --with-xmlrpc-c \u0026\u0026 make -j ${NB_CORES} \u0026\u0026 make install \u0026\u0026  curl -o  /tmp/libmediainfo.tar.gz -L         \"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \u0026\u0026  curl -o  /tmp/mediainfo.tar.gz -L         \"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \u0026\u0026  mkdir -p         /tmp/libmediainfo         /tmp/mediainfo \u0026\u0026  tar xf /tmp/libmediainfo.tar.gz -C         /tmp/libmediainfo --strip-components=1 \u0026\u0026  tar xf /tmp/mediainfo.tar.gz -C         /tmp/mediainfo --strip-components=1 \u0026\u0026  cd /tmp/libmediainfo \u0026\u0026         ./SO_Compile.sh \u0026\u0026  cd /tmp/libmediainfo/ZenLib/Project/GNU/Library \u0026\u0026         make install \u0026\u0026  cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library \u0026\u0026         make install \u0026\u0026  cd /tmp/mediainfo \u0026\u0026         ./CLI_Compile.sh \u0026\u0026  cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI \u0026\u0026         make install \u0026\u0026  apk del --purge         build-dependencies \u0026\u0026  rm -rf         /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache        python        nodejs        nodejs-npm \u0026\u0026      apk add --no-cache --virtual=build-dependencies        build-base \u0026\u0026      mkdir /usr/flood \u0026\u0026      cd /usr/flood \u0026\u0026      git clone https://github.com/jfurrow/flood . \u0026\u0026      cp config.template.js config.js \u0026\u0026      npm install \u0026\u0026      npm cache clean --force \u0026\u0026      npm run build \u0026\u0026      npm prune --production \u0026\u0026      rm config.js \u0026\u0026      apk del --purge build-dependencies \u0026\u0026      ln -s /usr/local/bin/mediainfo /usr/bin/mediainfo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000",
            "51415",
            "8080"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads"
          ]
        }
      ]
    }
  ]
}