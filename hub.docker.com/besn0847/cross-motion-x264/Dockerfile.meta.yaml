MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - CmdLine:
    - apt-get update &&         apt-get install -y --force-yes --no-install-recommends                 vim
      build-essential cmake git-core pkg-config wget autoconf automake build-essential
      pkgconf libtool libzip-dev libjpeg-dev &&         apt-get autoclean &&         apt-get
      autoremove &&         rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /sandbox && \tcd /sandbox && \tgit config --global http.sslVerify false
      && \tgit clone https://github.com/raspberrypi/tools.git /opt/tools && \tgit
      clone https://github.com/Mr-Dave/motion.git &&\tgit clone https://github.com/raspberrypi/userland.git
      &&\twget http://www.ijg.org/files/jpegsrc.v9.tar.gz && \ttar xvfz jpegsrc.v9.tar.gz
      && \trm -rf jpegsrc.v9.tar.gz && \tgit clone -b release/3.3 git://source.ffmpeg.org/ffmpeg.git
      && \tcd ffmpeg && \tgit clone git://git.videolan.org/x264"
    Name: run
    PrependShell: true
  - Env:
    - Key: CCPREFIX
      Value: '"/opt/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-"'
    Name: env
  - Env:
    - Key: CC
      Value: '"/opt/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"-L/opt/arm/lib"'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"-I/opt/arm/include"'
    Name: env
  - CmdLine:
    - "cd /sandbox/jpeg-9/ && \t./configure --host=arm-unknown-linux-gnueabi --prefix=/opt/arm
      && \tmake && \tmake install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /sandbox/ffmpeg/x264 && \t./configure --host=arm-unknown-linux-gnueabi --enable-static
      --cross-prefix=${CCPREFIX} --prefix=/opt/arm --extra-cflags='-march=armv6' --extra-ldflags='-march=armv6'
      && \tmake && \tmake install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /sandbox/ffmpeg && \tpkg_config=$(which pkg-config) PKG_CONFIG_PATH=/opt/arm/lib/pkgconfig
      ./configure --enable-cross-compile --cross-prefix=${CCPREFIX} --arch=armel --target-os=linux
      --prefix=/opt/arm --enable-gpl --enable-libx264 --enable-nonfree --extra-cflags=\"-I/opt/arm/include\"
      --extra-ldflags=\"-L/opt/arm/lib\" --extra-libs=-ldl && \tmake && \tmake install"
    Name: run
    PrependShell: true
  - Env:
    - Key: CMAKE_C_COMPILER
      Value: '"/opt/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc"'
    Name: env
  - Env:
    - Key: CMAKE_CXX_COMPILER
      Value: '"/opt/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-g++"'
    Name: env
  - Env:
    - Key: MMAL_CFLAGS
      Value: '"-I/opt/vc/include"'
    Name: env
  - Env:
    - Key: MMAL_LIBS
      Value: '"-L/opt/vc/lib"'
    Name: env
  - CmdLine:
    - "cd /sandbox/userland && \texport PATH=$PATH:/opt/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/
      && \t./buildme /"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./configure.ac
    - /sandbox/motion/
  - CmdLine:
    - "cd /sandbox/motion && \tautoreconf -fiv && \t./configure --with-ffmpeg=/opt/arm/
      \ --host=arm-unknown-linux-gnueabi --prefix=/opt/arm  --without-sqlite3 && \tmake
      && \tmake install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd / && \ttar cvf /arm-motion-x264.tar /opt/arm/ /opt/vc/ && \tbzip2 /arm-motion-x264.tar"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
