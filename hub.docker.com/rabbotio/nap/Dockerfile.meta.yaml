MetaArgs: null
Stages:
- BaseName: node:8.1.3-alpine
  Commands:
  - Maintainer: Todsaporn Banjerdkit <katopz@gmail.com>
    Name: maintainer
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - /tmp/package.json
  - CmdLine:
    - npm config set registry https://registry.npmjs.org/ &&     cd /tmp &&     npm
      i --production --quiet --depth 0 &&     cd / &&     npm i --production -g --quiet
      --depth 0 modclean &&     modclean -r -D /tmp/node_modules &&     npm r -g --quiet
      modclean && du -ms . &&     mkdir -p /usr/app && cp -a /tmp/node_modules /usr/app/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/app
  - CmdLine:
    - mkdir -p /usr/app/providers &&     mkdir -p /usr/app/templates &&     mkdir
      -p /usr/app/server
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - providers
    - /usr/app/providers
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates
    - /usr/app/templates
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - server
    - /usr/app/server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - /usr/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - index.js
    - /usr/app/
  - Name: volume
    Volumes:
    - /usr/app/.env
    - /usr/app/pages
    - /usr/app/components
    - /usr/app/lib
    - /usr/app/public
    - /usr/app/graphql
    - /usr/app/routes
    - /usr/app/providers
    - /usr/app/templates
    - /usr/app/server
  - Name: expose
    Ports:
    - ${PORT:-3000}
  From:
    Image: node:8.1.3-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:8.1.3-alpine
