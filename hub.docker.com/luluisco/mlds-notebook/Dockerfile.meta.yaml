MetaArgs: null
Stages:
- BaseName: jupyter/all-spark-notebook
  Commands:
  - Key: TEST_ONLY_BUILD
    Name: arg
    Value: null
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     python-numpy     python-dev     cmake     zlib1g-dev     libjpeg-dev     xvfb     libav-tools     xorg-dev     python-opengl     libboost-all-dev     libsdl2-dev     swig     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ftp.uk.debian.org/debian jessie-backports main" >> /etc/apt/sources.list
      &&     apt-get update &&     apt-get install -yq --no-install-recommends ffmpeg
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - conda update -n base conda
    Name: run
    PrependShell: true
  - CmdLine:
    - 'conda config --add channels menpo       # for opencv'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/$NB_USER/work
  - CmdLine:
    - pip install requests &&     pip install tabulate &&     pip install six &&     pip
      install future &&     pip install colorama
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "54321"
  - Name: expose
    Ports:
    - "54322"
  - Name: expose
    Ports:
    - "55555"
  - Name: user
    User: root
  - CmdLine:
    - cd /home/$NB_USER     && wget -q http://h2o-release.s3.amazonaws.com/h2o/rel-wolpert/11/h2o-3.18.0.11.zip     &&
      unzip h2o-3.18.0.11.zip     && cd h2o-3.18.0.11     && mkdir -p /usr/local/h2o_jar/     &&
      cp h2o.jar /usr/local/h2o_jar/     && cd ..     && rm -rf h2o-3.18.0.11*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip uninstall h2o || true && pip install http://h2o-release.s3.amazonaws.com/h2o/rel-wolpert/11/Python/h2o-3.18.0.11-py2.py3-none-any.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/$NB_USER &&     wget https://s3.amazonaws.com/h2o-release/sparkling-water/rel-2.3/5/sparkling-water-2.3.5.zip
      &&     unzip sparkling-water-2.3.5.zip &&     cd sparkling-water-2.3.5 &&     cp
      -R bin/* /usr/local/bin &&     cd .. &&     rm -rf sparkling-water-2.3.5*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install h2o_pysparkling_2.3
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: JULIA_PKGDIR
      Value: /opt/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.6.2
    Name: env
  - CmdLine:
    - mkdir /opt/julia-${JULIA_VERSION} &&     cd /tmp &&     wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo
      ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
      &&     echo "dc6ec0b13551ce78083a5849268b20684421d46a7ec46b17ec1fab88a5078580
      *julia-${JULIA_VERSION}-linux-x86_64.tar.gz" | sha256sum -c - &&     tar xzf
      julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1
      &&     rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/julia &&     echo "push!(Libdl.DL_LOAD_PATH, \"$CONDA_DIR/lib\")"
      >> /etc/julia/juliarc.jl &&     mkdir $JULIA_PKGDIR &&     chown $NB_USER $JULIA_PKGDIR
      &&     fix-permissions $JULIA_PKGDIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - conda install --quiet --yes     'rpy2=2.8*'     'r-base=3.4.1'     'r-irkernel=0.8*'     'r-plyr=1.8*'     'r-devtools=1.13*'     'r-tidyverse=1.1*'     'r-shiny=1.0*'     'r-rmarkdown=1.8*'     'r-forecast=8.2*'     'r-rsqlite=2.0*'     'r-reshape2=1.4*'     'r-nycflights13=0.2*'     'r-caret=6.0*'     'r-rcurl=1.95*'     'r-crayon=1.3*'     'r-randomforest=4.6*'     'r-htmltools=0.3*'     'r-sparklyr=0.7*'     'r-htmlwidgets=1.0*'     'r-hexbin=1.27*'
      &&     conda clean -tipsy &&     fix-permissions $CONDA_DIR &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get install -y hdf5-tools
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - julia -e 'Pkg.init()' &&     julia -e 'Pkg.update()' &&     (test $TEST_ONLY_BUILD
      || julia -e 'Pkg.add("HDF5")') &&     julia -e 'Pkg.add("Gadfly")' &&     julia
      -e 'Pkg.add("PyCall")' &&     julia -e 'Pkg.add("RCall")' &&     julia -e 'Pkg.add("CxxWrap.jl")'
      &&     julia -e 'Pkg.add("JavaCall.jl")' &&     julia -e 'Pkg.add("RDatasets")'
      &&     julia -e 'Pkg.add("IJulia")' &&     julia -e 'using IJulia' &&     mv
      $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/
      &&     chmod -R go+rx $CONDA_DIR/share/jupyter &&     rm -rf $HOME/.local &&     fix-permissions
      $JULIA_PKGDIR $CONDA_DIR/share/jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'tensorflow=1.5*'     'keras=2.1*' &&     conda
      clean -tipsy &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -y   build-essential   gfortran   git   wget   liblapack-dev   libopenblas-dev   python-dev   python-pip   python-nose   python-numpy   python-scipy   vim
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip &&     pip install --upgrade six &&     pip install
      --upgrade --no-deps git+git://github.com/Theano/Theano.git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install xgboost
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - pip install py4j==0.10.6 psutil
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install sos
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install sos-notebook
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m sos_notebook.install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install bash_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m bash_kernel.install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install markdown-kernel
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Env:
    - Key: CUSTOM_DIR
      Value: '"$HOME/.custom"'
    Name: env
  - CmdLine:
    - mkdir $CUSTOM_DIR
    Name: run
    PrependShell: true
  - Env:
    - Key: PIPO_TARGET
      Value: $CUSTOM_DIR/python
    Name: env
  - CmdLine:
    - mkdir $PIPO_TARGET
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONUSERBASE
      Value: $PIPO_TARGET
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PIPO_TARGET:$PYTHONPATH
    Name: env
  - CmdLine:
    - echo 'options(repos = c(CRAN = "https://cran.rstudio.com"))' >/home/$NB_USER/.Rprofile
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $CUSTOM_DIR/R
    Name: run
    PrependShell: true
  - Env:
    - Key: R_LIBS_USER
      Value: $CUSTOM_DIR/R:$R_LIBS_USER
    Name: env
  - CmdLine:
    - mkdir -p $CUSTOM_DIR/julia
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_LOAD_PATH
      Value: $JULIA_PKGDIR/v0.6
    Name: env
  - Env:
    - Key: JULIA_PKGDIR
      Value: $CUSTOM_DIR/julia
    Name: env
  - CmdLine:
    - julia -e 'Pkg.init()'
    Name: run
    PrependShell: true
  - Env:
    - Key: NB_USER_CUSTOM
      Value: mlds
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - echo $NB_USER:$NB_USER_CUSTOM | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G sudo $NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /home/$NB_USER /home/$NB_USER_CUSTOM
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - $NB_USER_CUSTOM.sh
    - /usr/local/bin
  - CmdLine:
    - chmod o+x /usr/local/bin/$NB_USER_CUSTOM.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge jupyter_nbextensions_configurator
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /etc/sudoers /root/sudoers.bak
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$NB_USER ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias _sudo="/usr/bin/sudo"' >> /home/$NB_USER/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias sudo="sudo PATH=\$PATH"' >> /home/$NB_USER/.bashrc
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  From:
    Image: jupyter/all-spark-notebook
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/all-spark-notebook
