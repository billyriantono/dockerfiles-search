{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "cjunius/android-sdk",
      "SourceCode": "FROM cjunius/android-sdk",
      "Platform": "",
      "From": {
        "Image": "cjunius/android-sdk"
      },
      "Commands": [
        {
          "Key": "GRADLE_VERSION",
          "Name": "arg",
          "Value": "4.10.2"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/local/gradle-${GRADLE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local  \u0026\u0026 wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -O gradle-${GRADLE_VERSION}-bin.zip  \u0026\u0026 unzip gradle-${GRADLE_VERSION}-bin.zip  \u0026\u0026 rm gradle-${GRADLE_VERSION}-bin.zip  \u0026\u0026 mkdir /root/.gradle  \u0026\u0026 echo ore.gradle.jvmargs=-Xmx2560M \u003e\u003e /root/.gradle/gradle.properties  \u0026\u0026 echo org.gradle.configureondemand=true \u003e\u003e /root/.gradle/gradle.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "${GRADLE_VERSION}"
            }
          ],
          "Name": "label"
        },
        {
          "Key": "NODE_JS_VERSION",
          "Name": "arg",
          "Value": "10.13.0"
        },
        {
          "CmdLine": [
            "mkdir /opt/node  \u0026\u0026 cd /opt/node  \u0026\u0026 wget -q https://nodejs.org/dist/v${NODE_JS_VERSION}/node-v${NODE_JS_VERSION}-linux-x64.tar.xz -O node-v${NODE_JS_VERSION}-linux-x64.tar.xz  \u0026\u0026 tar -xf node-v${NODE_JS_VERSION}-linux-x64.tar.xz  \u0026\u0026 rm -f node-v${NODE_JS_VERSION}-linux-x64.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/node/node-v${NODE_JS_VERSION}-linux-x64/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "NODE_JS_VERSION",
              "Value": "${NODE_JS_VERSION}"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "npm config set strict-ssl false  \u0026\u0026 npm config set registry http://registry.npmjs.org/  \u0026\u0026 npm install --verbose -g cordova  \u0026\u0026 npm install --verbose -g cordova-android  \u0026\u0026 npm cache clean --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "BUILD_TOOLS_VERSION",
          "Name": "arg",
          "Value": "28.0.3"
        },
        {
          "CmdLine": [
            "sdkmanager \"build-tools;${BUILD_TOOLS_VERSION}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "BUILD_TOOLS_VERSION",
              "Value": "${BUILD_TOOLS_VERSION}"
            }
          ],
          "Name": "label"
        },
        {
          "Key": "ANDROID_PLATFORM",
          "Name": "arg",
          "Value": "28"
        },
        {
          "CmdLine": [
            "sdkmanager \"platforms;android-${ANDROID_PLATFORM}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "ANDROID_PLATFORM",
              "Value": "${ANDROID_PLATFORM}"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "mkdir /testapp  \u0026\u0026 cordova create /testapp  \u0026\u0026 cd /testapp  \u0026\u0026 cordova platform add android  \u0026\u0026 cordova build android --verbose  \u0026\u0026 cd /  \u0026\u0026 rm -rf /testapp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 du -h -d 1 || exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}