MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk --no-cache update &&     apk add curl python py-pip py-crcmod libc6-compat
      gnupg bash openssh-client git ca-certificates nmap nmap-ncat socat bind-tools
      openssl jq wget gcc libffi-dev musl-dev openssl-dev python-dev make &&     rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache --upgrade awscli
    Name: run
    PrependShell: true
  - Key: CLOUD_SDK_VERSION
    Name: arg
    Value: 240.0.0
  - Env:
    - Key: CLOUD_SDK_VERSION
      Value: $CLOUD_SDK_VERSION
    Name: env
  - Env:
    - Key: PATH
      Value: /google-cloud-sdk/bin:$PATH
    Name: env
  - CmdLine:
    - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz
      &&     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz &&     rm
      google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz &&     ln -s /lib
      /lib64 &&     gcloud config set core/disable_usage_reporting true &&     gcloud
      config set component_manager/disable_update_check true &&     gcloud config
      set metrics/environment github_docker_image &&     gcloud --version
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache azure-cli
    Name: run
    PrependShell: true
  - Chown: ""
    From: dtzar/helm-kubectl
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kubectl
    - /usr/local/bin/kubectl
  - Chown: ""
    From: dtzar/helm-kubectl
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/helm
    - /usr/local/bin/helm
  - Key: DOCKER_CLI_VERSION
    Name: arg
    Value: '"17.06.2-ce"'
  - Env:
    - Key: DOWNLOAD_URL
      Value: '"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz"'
    Name: env
  - CmdLine:
    - mkdir -p /tmp/download     && curl -L $DOWNLOAD_URL | tar -xz -C /tmp/download     &&
      mv /tmp/download/docker/docker /usr/local/bin/     && rm -rf /tmp/download
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
