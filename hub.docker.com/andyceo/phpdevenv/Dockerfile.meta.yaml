MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: org.labelschema.description
      Value: '"This is the image with several PHP versions (from official Ubuntu PPA),
        python libraries and other developers tools. It can be used as lightweight
        virtual machine for developers."'
    - Key: org.labelschema.docker.cmd
      Value: '"docker run --detach --name phpdevenv --restart always --hostname phpdevenv
        --net YOUR_CUSTOM_BRIDGE_NETWORK_NAME -p 40080:80 -p 40022:22 andyceo/phpdevenv:latest"'
    - Key: org.labelschema.name
      Value: '"phpdevenv"'
    - Key: org.labelschema.schema-version
      Value: '"1.0"'
    - Key: org.labelschema.vcs-url
      Value: '"https://github.com/andyceo/docker-phpdevenv"'
    - Key: org.labelschema.vendor
      Value: '"Ruware"'
    - Key: maintainer
      Value: '"Andrey Andreev <andyceo@yandex.ru> (@andyceo)"'
    - Key: run
      Value: '"/usr/bin/docker run -d --name phpdevenv --restart always --hostname
        phpdevenv --net docknet -p 80:80 -p 22:22 ${IMAGE}"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: '"noninteractive"'
    Name: env
  - Env:
    - Key: TERM
      Value: '"xterm"'
    Name: env
  - Env:
    - Key: PHP_MODULES
      Value: '"amqp bcmath cli common curl dev fpm gd intl json ldap mbstring mcrypt
        mongodb mysql opcache pdo-sqlite readline soap sybase xml zip memcached redis
        imagick xdebug"'
    Name: env
  - Env:
    - Key: GO_ARCHIVE_FILENAME
      Value: '"go1.13.1.linux-amd64.tar.gz"'
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: '"utf-8"'
    Name: env
  - CmdLine:
    - echo "Prepare package manager for installing packages and add support for https
      protocol in apt manager" &&     apt-get update && apt-get upgrade -yqq &&     apt-get
      install -yqq aptitude apt-utils apt-transport-https ca-certificates curl gnupg2
      openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Add all needed repositories (PPAs and others)" &&     echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu
      bionic main" >> /etc/apt/sources.list.d/ansible.list &&     apt-key adv --keyserver
      keyserver.ubuntu.com --recv-keys 7BB9C367 &&     echo "deb http://nginx.org/packages/ubuntu/
      bionic nginx" >> /etc/apt/sources.list.d/nginx.list &&     apt-key adv --keyserver
      keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62 &&     echo 'deb http://ppa.launchpad.net/ondrej/php/ubuntu
      bionic main' > /etc/apt/sources.list.d/php.list &&     apt-key adv --keyserver
      keyserver.ubuntu.com --recv-keys E5267A6C &&     echo 'deb https://deb.torproject.org/torproject.org
      bionic main' > /etc/apt/sources.list.d/tor.list &&     curl -s https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc
      | tac | tac | apt-key add - &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 &&     echo "deb [ arch=amd64
      ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" > /etc/apt/sources.list.d/mongodb.list
      &&     echo "deb https://dl.bintray.com/sbt/debian /" > /etc/apt/sources.list.d/sbt.list
      &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
      &&     apt-get update &&     apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install all needed basic utilities and packages" &&     apt-get install
      -yqq         acl         ansible         apache2         apache2-utils         bc         build-essential         cmake         cron         debconf-utils         deb.torproject.org-keyring         default-jre         denyhosts         dnsutils         freebsd-manpages         git         gmt-common         htop         imagemagick         iputils-arping         iputils-ping         libboost-all-dev         libffi-dev         libssl-dev         locales         man2html         manpages         manpages-dev         mc         memcached         mongodb-org         mysql-client         nano         net-tools         netcat         nginx         nmap         openjdk-8-source         openssh-server         pkg-config         privoxy         pwgen         redis-server         redis-sentinel         redis-tools         rsync         sbt         screen         shellcheck         software-properties-common         sqlite         sqlite-doc         stress         sudo         supervisor         telnet         tmux         tor         ubuntu-standard         wget
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install Apache 2 on non-standard port" &&     sed -i -e 's/80/81/g' /etc/apache2/ports.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install all LaTeX utilities and packages" &&     apt-get install -yqq         cm-super         texlive         texlive-base         texlive-binaries         texlive-fonts-recommended         texlive-science         texlive-latex-base         texlive-latex-extra         texlive-latex-recommended         texlive-full
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Add cryptocurrencies repositories and nodes" &&     echo "deb http://ppa.launchpad.net/bitcoin/bitcoin/ubuntu
      bionic main" >> /etc/apt/sources.list.d/bitcoin.list &&     apt-key adv --keyserver
      keyserver.ubuntu.com --recv-keys C70EF1F0305A1ADB9986DBD8D46F45428842CE5E &&     echo
      "deb http://ppa.launchpad.net/ethereum/ethereum/ubuntu bionic main" >> /etc/apt/sources.list.d/ethereum.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 923F6CA9 &&     wget
      -qO - https://apt.z.cash/zcash.asc | apt-key add - &&     echo "deb https://apt.z.cash/
      jessie main" | tee /etc/apt/sources.list.d/zcash.list &&     apt-get update
      &&     apt-get install -yqq       bitcoind       ethereum       zcash
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install python packages" &&     apt-get install -yqq         pylint         python3-dev         python3-pip
      &&     pip3 install -q --upgrade pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - python-requirements.txt
    - /tmp
  - CmdLine:
    - apt-get install -yqq libgmp3-dev &&     pip3 install -r /tmp/python-requirements.txt
      &&     rm /tmp/python-requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install all needed PHP utilities and packages" &&     apt-get install
      -yqq         php5.6 `echo " $PHP_MODULES" | sed "s/ / php5.6-/g"`         php7.0
      `echo " $PHP_MODULES" | sed "s/ / php7.0-/g"`         php7.1 `echo " $PHP_MODULES"
      | sed "s/ / php7.1-/g"`         php-pear         phpunit &&     apt-get clean
      && rm -rf /tmp/* /var/tmp/* &&     rm /etc/alternatives/php && ln -s /usr/bin/php7.1
      /etc/alternatives/php &&     curl -s https://getcomposer.org/installer | php
      &&     mv composer.phar /usr/local/bin/composer &&     git clone https://github.com/drush-ops/drush.git
      /usr/local/share/drush &&     composer install -d /usr/local/share/drush/ &&     ln
      -s /usr/local/share/drush/drush /usr/local/bin/drush &&     curl https://phar.phpunit.de/phpunit.phar
      -LSso /usr/local/bin/phpunit &&     chmod +x /usr/local/bin/phpunit &&     curl
      http://get.sensiolabs.org/php-cs-fixer.phar -LSso /usr/local/bin/php-cs-fixer
      &&     chmod +x /usr/local/bin/php-cs-fixer &&     curl -LsS http://codeception.com/codecept.phar
      -o /usr/local/bin/codecept &&     chmod a+x /usr/local/bin/codecept
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Finalize all other packages install" &&     curl -sL https://deb.nodesource.com/setup_10.x
      | bash - &&     apt-get install -y nodejs &&     npm install -g gulp &&     npm
      install -g bower &&     curl https://packages.elasticsearch.org/GPG-KEY-elasticsearch
      | apt-key add - &&     echo "deb https://packages.elastic.co/beats/apt stable
      main" |  tee -a /etc/apt/sources.list.d/beats.list &&     apt-get update &&
      apt-get install filebeat &&     curl https://dl.google.com/go/$GO_ARCHIVE_FILENAME
      -LSso /usr/local/$GO_ARCHIVE_FILENAME &&     tar -C /usr/local -xzf /usr/local/$GO_ARCHIVE_FILENAME
      &&     rm /usr/local/$GO_ARCHIVE_FILENAME &&     sed -i 's/^PATH="\(.*\)"$/PATH="\1:\/usr\/local\/go\/bin"/g'
      /etc/environment &&     cp -al /var/lib/mongodb /root &&     locale-gen en_US
      en_US.UTF-8 &&     locale-gen ru_RU ru_RU.UTF-8 &&     update-locale &&     cat
      /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c20 | (echo -n "root:" && cat) |
      chpasswd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc
    - /etc
  - CmdLine:
    - mkdir /root/data /root/databases /root/rootdirectories
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/andyceo/bash_scripts/master/symlinker.sh
    - /usr/local/bin
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/andyceo/bash_scripts/master/rsyncdir/rsyncdir.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - Name: expose
    Ports:
    - "22"
    - "80"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: dialog
    Name: env
  - Health:
      Interval: 10000000000
      Retries: 5
      StartPeriod: 30000000000
      Test:
      - CMD-SHELL
      - supervisorctl status || exit 1
      Timeout: 5000000000
    Name: healthcheck
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
