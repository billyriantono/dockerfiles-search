MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Li Wei <bj_liwei@yahoo.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tcurl \t\twget         git          openssh-server          nginx  sed python-pip
      python-dev uwsgi-plugin-python supervisor          autoconf \t\tautomake \t\tbzip2
      \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev
      \t\tlibevent-dev \t\tlibffi-dev \t\tlibgeoip-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev
      \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmysqlclient-dev
      \t\tlibncurses-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev
      \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev
      \t\tmake \t\tpatch \t\txz-utils \t\tzlib1g-dev \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 4.2.3
    Name: env
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --verify SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.gz\$"
      SHASUMS256.txt.asc | sha256sum -c -   && tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.gz"
      SHASUMS256.txt.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g json-server
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''{"posts": [{ "id": 1, "title": "json-server", "author": "typicode" }]}''
      >> data.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /myapp
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir public
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Hello Vwms" >> index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - mv index.html public/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /myapp
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:vwms' |chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/nginx/app
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/uwsgi/app/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - flask.conf
    - /etc/nginx/sites-available/
  - CmdLine:
    - ln -s /etc/nginx/sites-available/flask.conf /etc/nginx/sites-enabled/flask.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - uwsgi.ini
    - /var/www/app/
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - app
    - /var/www/app
  - CmdLine:
    - pip install -r /var/www/app/requirements.txt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /appdata/www
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
