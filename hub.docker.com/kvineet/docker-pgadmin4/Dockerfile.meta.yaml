MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: PGADMIN_VERSION_MAJOR
      Value: "4"
    Name: env
  - Env:
    - Key: PGADMIN_VERSION_MINOR
      Value: "0"
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: "18.1"
    Name: env
  - CmdLine:
    - apk add --no-cache alpine-sdk postgresql-client postgresql-dev python2 python2-dev
      libffi-dev linux-headers
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t&& python get-pip.py
      \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v${PGADMIN_VERSION_MAJOR}.${PGADMIN_VERSION_MINOR}/pip/pgadmin4-${PGADMIN_VERSION_MAJOR}.${PGADMIN_VERSION_MINOR}-py2.py3-none-any.whl\"
      > requirements.txt \t&& pip install --no-cache-dir -r requirements.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk del alpine-sdk \t&& rm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config_local.py
    - /usr/lib/python2.7/site-packages/pgadmin4/
  - Env:
    - Key: SERVER_MODE
      Value: "false"
    Name: env
  - Env:
    - Key: MAIL_SERVER
      Value: mail.example.tld
    Name: env
  - Env:
    - Key: MAIL_PORT
      Value: "465"
    Name: env
  - Env:
    - Key: MAIL_USE_SSL
      Value: "true"
    Name: env
  - Env:
    - Key: MAIL_USERNAME
      Value: username
    Name: env
  - Env:
    - Key: MAIL_PASSWORD
      Value: password
    Name: env
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - python
    - ./usr/lib/python2.7/site-packages/pgadmin4/pgAdmin4.py
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
