{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "boomtownroi/git:latest",
      "SourceCode": "FROM boomtownroi/git:latest",
      "Platform": "",
      "From": {
        "Image": "boomtownroi/git:latest"
      },
      "Commands": [
        {
          "Maintainer": "BoomTown CNS Team \u003cconsumerteam@boomtownroi.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "9.11.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.15.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HUB_VERSION",
              "Value": "2.2.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_BIN",
              "Value": "/usr/local/n/lib/node_modules/phantomjs-prebuilt/lib/phantom/bin/phantomjs"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:nginx/stable \u00262\u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y     build-essential     curl     dialog     gawk     jq     imagemagick     libfontconfig     libssl-dev     mysql-client     php     python     rsync     ssh-client     wget zip     php-fpm php-mysql php-curl php-gd php-mbstring     php-intl php-pear php-imagick php-imap php-mcrypt php-memcached     php-pspell php-recode php-tidy php-xmlrpc php-xsl php-xdebug \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ; do     gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ARCH= \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"   \u0026\u0026 case \"${dpkgArch##*-}\" in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64) ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo \"unsupported architecture\"; exit 1 ;;   esac   \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026   wget https://github.com/github/hub/releases/download/v$HUB_VERSION/hub-linux-amd64-$HUB_VERSION.tgz \u0026\u0026   tar -xvf hub-linux-amd64-$HUB_VERSION.tgz \u0026\u0026   rm -f hub-linux-amd64-$HUB_VERSION.tgz \u0026\u0026   cp hub-linux-amd64-$HUB_VERSION/bin/hub /bin/hub \u0026\u0026   cp -r hub-linux-amd64-$HUB_VERSION/etc /etc \u0026\u0026   rm -rf hub-linux-amd64-$HUB_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --unsafe-perm     gulp@3.9.1     yarn@$YARN_VERSION     phantomjs-prebuilt@2.1.7     webpack-merge     \u0026\u0026 npm config set color false     \u0026\u0026 npm cache clear --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit-5.7.phar \u0026\u0026 chmod +x phpunit-5.7.phar \u0026\u0026 mv phpunit-5.7.phar /bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \u0026\u0026 chmod +x wp-cli.phar \u0026\u0026 mv wp-cli.phar /bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}