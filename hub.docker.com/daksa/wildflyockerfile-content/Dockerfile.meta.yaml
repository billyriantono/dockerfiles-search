MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"dev@jpillora.com"'
    Name: label
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: NAME
      Value: cloud-torrent
    Name: env
  - Env:
    - Key: PACKAGE
      Value: github.com/cyberboysumanjay/$NAME
    Name: env
  - Env:
    - Key: PACKAGE_DIR
      Value: $GOPATH/src/$PACKAGE
    Name: env
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.1
    Name: env
  - Env:
    - Key: GOLANG_SRC_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_SRC_SHA256
      Value: a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - "set -ex \t&& apk update \t&& apk add ca-certificates \t&& apk add --no-cache
      --virtual .build-deps \tbash \tgcc \tmusl-dev \topenssl \tgit \tgo \tcurl \t&&
      curl -s https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/alpine3.6/no-pic.patch
      -o /no-pic.patch \t&& cat /no-pic.patch \t&& export GOROOT_BOOTSTRAP=\"$(go
      env GOROOT)\" \t&& wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \t&& echo \"$GOLANG_SRC_SHA256
      \ golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz
      \t&& rm golang.tar.gz \t&& cd /usr/local/go/src \t&& patch -p2 -i /no-pic.patch
      \t&& ./make.bash \t&& mkdir -p $PACKAGE_DIR \t&& git clone https://$PACKAGE.git
      $PACKAGE_DIR \t&& cd $PACKAGE_DIR \t&& go build -ldflags \"-X main.VERSION=$(git
      describe --abbrev=0 --tags)\" -o /usr/local/bin/$NAME \t&& apk del .build-deps
      \t&& rm -rf /no-pic.patch $GOPATH /usr/local/go"
    Name: run
    PrependShell: true
  - CmdLine:
    - cloud-torrent
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
