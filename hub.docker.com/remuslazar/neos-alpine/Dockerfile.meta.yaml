MetaArgs: null
Stages:
- BaseName: php:7.2-fpm-alpine3.7
  Commands:
  - Maintainer: Dmitri Pisarev <dimaip@gmail.com>
    Name: maintainer
  - Key: PHP_REDIS_VERSION
    Name: arg
    Value: '"3.1.6"'
  - Key: PHP_YAML_VERSION
    Name: arg
    Value: '"2.0.2"'
  - Key: PHP_XDEBUG_VERSION
    Name: arg
    Value: '"2.6.0beta1"'
  - Key: S6_VERSION
    Name: arg
    Value: '"1.21.2.2"'
  - Env:
    - Key: FLOW_REWRITEURLS
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.6.2
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_INSTALL_PARAMS
      Value: --prefer-source
    Name: env
  - Env:
    - Key: WWW_PORT
      Value: "80"
    Name: env
  - Env:
    - Key: DB_DATABASE
      Value: db
    Name: env
  - Env:
    - Key: DB_HOST
      Value: db
    Name: env
  - Env:
    - Key: DB_USER
      Value: admin
    Name: env
  - Env:
    - Key: DB_PASS
      Value: pass
    Name: env
  - Env:
    - Key: VERSION
      Value: master
    Name: env
  - Labels:
    - Key: org.label-schema.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: org.label-schema.license
      Value: '"MIT"'
    - Key: org.label-schema.name
      Value: '"Neos Alpine Docker Image"'
    - Key: org.label-schema.url
      Value: '"https://github.com/psmb/docker-neos-alpine"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/psmb/docker-neos-alpine"'
    - Key: org.label-schema.vcs-type
      Value: '"Git"'
    Name: label
  - CmdLine:
    - "set -x \t&& apk update \t&& apk add tar rsync curl sed bash yaml python py-pip
      py-setuptools groff less mysql-client git nginx optipng freetype libjpeg-turbo-utils
      icu-dev openssh pwgen sudo s6 \t&& pip install awscli \t&& apk del py-pip py-setuptools
      \t&& apk add --virtual .phpize-deps $PHPIZE_DEPS libtool freetype-dev libpng-dev
      libjpeg-turbo-dev yaml-dev \t&& docker-php-ext-configure gd \t\t--with-gd \t\t--with-freetype-dir=/usr/include/
      \t\t--with-png-dir=/usr/include/ \t\t--with-jpeg-dir=/usr/include/ \t&& docker-php-ext-install
      \t\tgd \t\tpdo \t\tpdo_mysql \t\tmbstring \t\topcache \t\tintl \t\texif \t\tjson
      \t\ttokenizer \t&& pecl install redis-${PHP_REDIS_VERSION} yaml-${PHP_YAML_VERSION}
      xdebug-${PHP_XDEBUG_VERSION} \t&& docker-php-ext-enable xdebug \t&& docker-php-ext-enable
      redis \t&& docker-php-ext-enable yaml \t&& apk del .phpize-deps \t&& curl -o
      /tmp/composer-setup.php https://getcomposer.org/installer \t&& php /tmp/composer-setup.php
      --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION}
      && rm -rf /tmp/composer-setup.php \t&& curl -s http://beard.famelo.com/ > /usr/local/bin/beard
      \t&& chmod +x /usr/local/bin/beard \t&& git config --global user.email \"server@server.com\"
      \t&& git config --global user.name \"Server\" \t&& rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz
    - /tmp/
  - CmdLine:
    - "tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && rm /tmp/s6-overlay-amd64.tar.gz
      \t&& echo \"xdebug.remote_enable=0\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini
      \t&& echo \"xdebug.remote_connect_back=1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini
      \t&& echo \"xdebug.max_nesting_level=512\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini
      \t&& echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini
      \t&& echo \"xdebug.remote_host=172.17.0.1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini
      \t&& sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \t&& sed -i
      -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config
      \t&& sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication
      no/' /etc/ssh/sshd_config \t&& sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin
      no/' /etc/ssh/sshd_config \t&& sed -i '/secure_path/d' /etc/sudoers"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk --no-cache add php7-imagick imagemagick autoconf gcc g++ imagemagick-dev
      libtool make \t&& echo '' | pecl install imagick \t&& docker-php-ext-enable
      imagick \t&& apk del autoconf gcc g++ imagemagick-dev libtool"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add jq
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - CmdLine:
    - "deluser www-data \t&& delgroup cdrw \t&& addgroup -g 80 www-data \t&& adduser
      -u 80 -G www-data -s /bin/bash -D www-data -h /data -k /etc/skel_www \t&& echo
      'www-data ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/www \t&& rm -Rf /home/www-data
      \t&& sed -i -e \"s#listen = 9000#listen = /var/run/php-fpm.sock#\" /usr/local/etc/php-fpm.d/zz-docker.conf
      \t&& echo \"clear_env = no\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \t&&
      echo \"listen.owner = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf
      \t&& echo \"listen.group = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf
      \t&& echo \"listen.mode = 0660\" >> /usr/local/etc/php-fpm.d/zz-docker.conf
      \t&& chown 80:80 -R /var/lib/nginx \t&& chmod +x /github-keys.sh \t&& /bin/bash
      -c \"source /init-php-conf.sh\""
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "80"
  - Name: workdir
    Path: /data
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.2-fpm-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm-alpine3.7
