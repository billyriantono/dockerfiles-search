MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: pifagor87<pifagor87@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DRUSH_VERSION
      Value: 8.x
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     apt-utils gcc
      libsasl2-dev lib32z1-dev libldap2-dev libssl-dev openssl     python-software-properties
      software-properties-common build-essential     apt-transport-https git python
      libglib2.0-dev     curl wget git zip unzip libcurl3-openssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:pinepain/libv8-archived -y &&     add-apt-repository
      ppa:ondrej/php -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --force-yes     php7.1-fpm php7.1-dev     php7.1-common
      php7.1-ftp php7.1-gd     php7.1-sockets php7.1-cgi     php7.1-bz2 php-pear php7.1-cli     php7.1-exif
      php7.1-phar php7.1-zip php7.1-calendar     php7.1-iconv php7.1-imap hp7.1-soap     php7.1-mbstring
      php7.1-bcmath     php7.1-mcrypt php7.1-curl php7.1-json     php7.1-opcache php7.1-ctype
      php7.1-xml     php7.1-xsl php7.1-ldap php7.1-xmlwriter php7.1-xmlreader     php7.1-intl
      php7.1-tokenizer php7.1-pdo     php7.1-posix php7.1-apcu php7.1-simplexml     php7.1-mysqlnd
      php7.1-mysqli     php7.1-pgsql php7.1-gmp     php7.1-imagick php7.1-xmlrpc php7.1-dba     php7.1-odbc
      php7.1-pspell libmemcached-dev     php7.1-amqp php7.1-yaml php7.1-oauth     php7.1-readline
      php7.1-geoip php7.1-recode php-xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - phpenmod pdo_mysql && phpenmod pdo_pgsql && phpenmod session     phpenmod zlib
      && phpenmod pcntl && phpenmod openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mongodb-1.2.2
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=mongodb.so" >> /etc/php/7.1/fpm/conf.d/30-mongodb.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=mongodb.so" >> /etc/php/7.1/cli/conf.d/30-mongodb.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /temp_docker && chmod -R +x /temp_docker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup_extensions/composer_drush.sh
    - /temp_docker/composer_drush.sh
  - CmdLine:
    - chmod -R +x /temp_docker && cd /temp_docker && bash /temp_docker/composer_drush.sh
      $DRUSH_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - cd .. && rm -rf /temp_docker
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y python-pip && pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libv8-5.2
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/phpv8/v8js.git &&     cd v8js &&     phpize
      &&     ./configure --with-v8js=/opt/v8 &&     make &&     make test &&     make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | sudo bash - &&     apt install
      -y nodejs &&     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key
      add - &&     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&     apt-get update && apt-get install yarn &&     yarn global add gulp-cli
      &&     yarn global add webpack
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'xdebug.remote_enable=1\nxdebug.remote_autostart=1\nxdebug.remote_port=9000\nxdebug.default_enable
      = 0\nxdebug.remote_handler = dbgp\nxdebug.remote_connect_back = 1\nxdebug.max_nesting_level
      = 256\nxdebug.profiler_output_dir=/var/www/var/profiler\nxdebug.profiler_enable_trigger=on'
      >> /etc/php/7.1/fpm/conf.d/20-xdebug.ini &&     rm /etc/php/7.1/cli/conf.d/20-xdebug.ini
      &&     apt-get remove -y curl &&     apt-get clean &&     apt-get purge &&     mkdir
      /run/php
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /temp_docker && chmod -R +x /temp_docker && cd /temp_docker
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /temp_docker && git clone https://github.com/php-memcached-dev/php-memcached
      &&     cd php-memcached && git checkout php7 && git pull &&     phpize &&     ./configure
      --with-libmemcached-dir=no --disable-memcached-sasl &&     make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'extension=memcached.so' >> /etc/php/7.1/fpm/conf.d/memcached.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'extension=memcached.so' >> /etc/php/7.1/cli/conf.d/memcached.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /temp_docker && git clone https://github.com/phpredis/phpredis.git && cd
      phpredis &&     git checkout php7-ipv6 && git pull &&     phpize  && ./configure  &&
      make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'extension=redis.so' >> /etc/php/7.1/fpm/conf.d/redis.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'extension=redis.so' >> /etc/php/7.1/cli/conf.d/redis.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get upgrade --force-yes -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /temp_docker
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/php/7.1/fpm/pool.d/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/pool.d/www.conf
    - /etc/php/7.1/fpm/pool.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/pool.d/zz-docker.conf
    - /etc/php/7.1/fpm/pool.d/zz-docker.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php-fpm.conf
    - /etc/php/7.1/fpm/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php.ini
    - /etc/php/7.1/fpm/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/cli.ini
    - /etc/php/7.1/cli/php.ini
  - CmdLine:
    - service php7.1-fpm start
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'PATH="$HOME/.composer/vendor/bin:$PATH"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source ~/.bashrc"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm7.1
    - --nodaemonize
    - --force-stderr
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
