MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - CmdLine:
    - apk update &&     apk add bash py-pip &&     apk add --virtual=build gcc libffi-dev
      musl-dev openssl-dev python-dev make &&     pip --no-cache-dir install -U pip
      &&     pip --no-cache-dir install azure-cli &&     apk del --purge build
    Name: run
    PrependShell: true
  - CmdLine:
    - az --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update git bash
    Name: run
    PrependShell: true
  - Key: PS_VERSION
    Name: arg
    Value: 6.2.0-preview.3
  - Key: PS_PACKAGE
    Name: arg
    Value: powershell-${PS_VERSION}-linux-alpine-x64.tar.gz
  - Key: PS_PACKAGE_URL
    Name: arg
    Value: https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}
  - Key: PS_INSTALL_VERSION
    Name: arg
    Value: 6-preview
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${PS_PACKAGE_URL}
    - /tmp/linux.tar.gz
  - Env:
    - Key: PS_INSTALL_FOLDER
      Value: /opt/microsoft/powershell/$PS_INSTALL_VERSION
    Name: env
  - CmdLine:
    - mkdir -p ${PS_INSTALL_FOLDER}
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxf /tmp/linux.tar.gz -C ${PS_INSTALL_FOLDER}
    Name: run
    PrependShell: true
  - Key: PS_INSTALL_VERSION
    Name: arg
    Value: 6-preview
  - Env:
    - Key: PS_INSTALL_FOLDER
      Value: /opt/microsoft/powershell/$PS_INSTALL_VERSION
    - Key: DOTNET_SYSTEM_GLOBALIZATION_INVARIANT
      Value: "false"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: PSModuleAnalysisCachePath
      Value: /var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache
    Name: env
  - CmdLine:
    - apk add --no-cache     ca-certificates     less         ncurses-terminfo-base         krb5-libs     libgcc     libintl     libssl1.0     libstdc++     tzdata     userspace-rcu     zlib     icu-libs     &&
      apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache     lttng-ust         &&
      ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh         && ln -s ${PS_INSTALL_FOLDER}/pwsh
      /usr/bin/pwsh-preview     && pwsh     -NoLogo     -NoProfile     -Command "     \$ErrorActionPreference
      = 'Stop' ;     \$ProgressPreference = 'SilentlyContinue' ;     while(!(Test-Path
      -Path \$env:PSModuleAnalysisCachePath)) {      Write-Host "'Waiting for $env:PSModuleAnalysisCachePath'"
      ;     Start-Sleep -Seconds 6 ;     }"
    Name: run
    PrependShell: true
  - CmdLine:
    - pwsh --version
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
