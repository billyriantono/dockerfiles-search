{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Douglas Andrade \u003cdouglasanpa@gmail.com\u003e\""
            },
            {
              "Key": "Description",
              "Value": "\"Docker image for SAGE.\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "APP_NAME",
              "Value": "SAGE - Sistema de Apoio à Gestão de Eventos"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_HOST",
              "Value": "mariadb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_PORT",
              "Value": "3306"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_DATABASE",
              "Value": "sage"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_USERNAME",
              "Value": "sage"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_ENV",
              "Value": "local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OAUTH",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "GIT_CI_PASS",
          "Name": "arg",
          "Value": null
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wait-for-it.sh",
            "start.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add tzdata gettext git php7 php7-fpm php7-pdo php7-mysqli php7-json php7-openssl php7-curl     php7-zlib php7-xml php7-phar php7-intl php7-dom php7-xmlreader php7-ctype php7-simplexml php7-zip     php7-mbstring php7-gd php7-xmlwriter php7-tokenizer php7-pdo_mysql php7-memcached php7-ftp php7-iconv php7-fileinfo     nginx supervisor curl bash nano jq openssl certbot certbot-nginx mariadb-client procps ca-certificates wget \u0026\u0026     sed -i 's/memory_limit = 128M/memory_limit = 2048M/g' /etc/php7/php.ini \u0026\u0026     sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 256M/g' /etc/php7/php.ini \u0026\u0026     sed -i 's/post_max_size = 8M/post_max_size = 512M/g' /etc/php7/php.ini \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     mkdir -p /src \u0026\u0026     git clone --single-branch --branch master https://gitlab-ci-token:$GIT_CI_PASS@gitlab.com/Douglas_Leandro/sage.git /src \u0026\u0026     mkdir -p /src/storage/ \u0026\u0026     cd /src/ \u0026\u0026     composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts  \u0026\u0026     composer dump-autoload  \u0026\u0026     php artisan config:cache  \u0026\u0026     rm -rf .env.* \u0026\u0026     rm -rf .git .git* \u0026\u0026     rm -rf package*  \u0026\u0026     rm -rf .php* phpunit* \u0026\u0026     rm -f Procfile \u0026\u0026     rm -f docker-compose.yml \u0026\u0026     rm -rf README.md \u0026\u0026     rm -rf start.ps1 \u0026\u0026     rm -rf tests \u0026\u0026     rm -rf update.sh \u0026\u0026     rm -rf verify* \u0026\u0026     rm -rf .vscode \u0026\u0026     rm -rf webpack.mix.js \u0026\u0026     rm -rf yarn.lock \u0026\u0026     rm -rf *.sh \u0026\u0026     rm -rf composer.lock \u0026\u0026     jq -c 'del(.require)' composer.json \u003e tmp.$$.json \u0026\u0026 mv tmp.$$.json composer.json \u0026\u0026     rm -rf resources/assets/js/*-app.js \u0026\u0026     rm -rf resources/assets/js/jquery.tagsinput-revisited.min.js \u0026\u0026     chmod u+x /wait-for-it.sh \u0026\u0026     chmod u+x /start.sh \u0026\u0026     mkdir -p /src/bootstrap/cache /src/storage /src/storage/framework \u0026\u0026     cd /src/storage/framework \u0026\u0026     mkdir -p sessions views cache \u0026\u0026     chmod 777 /src/storage -R \u0026\u0026     apk del git tzdata jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/src/storage",
            "/etc/letsencrypt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/crontab",
            "/etc/crontabs/root"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/fpm-pool.conf",
            "/etc/php7/php-fpm.d/zzz_custom.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/etc/php7/conf.d/zzz_custom.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/.env_sage",
            "/src/.env_sage"
          ]
        },
        {
          "CmdLine": [
            "chown root:root /etc/crontabs/root \u0026\u0026 /usr/sbin/crond -f"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/wait-for-it.sh $DB_HOST:$DB_PORT --strict --timeout=120 -- /start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}