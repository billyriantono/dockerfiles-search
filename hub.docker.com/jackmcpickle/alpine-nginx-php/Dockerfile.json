{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Jack McNicol \u003cjack@mcpickle.com.au\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "dumb"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache     wget     nginx     supervisor     bash     curl     git     vim     php7     php7-fpm     php7-ctype     php7-session     php7-dom     php7-zlib     php7-mbstring     php7-mcrypt     php7-openssl     php7-xml     php7-json     php7-gd     php7-opcache     php7-pdo     php7-pdo_mysql     php7-iconv     php7-curl     php7-phar     php7-dom \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php7 -- --install-dir=/usr/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./default.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s@}@application/x-font-ttf ttf; font/opentype otf; application/vnd.ms-fontobject eot; font/x-woff woff;}@g\" /etc/nginx/mime.types"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php7/php.ini  \u0026\u0026     sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 30M/g\" /etc/php7/php.ini \u0026\u0026     sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 30M/g\" /etc/php7/php.ini \u0026\u0026     sed -i -e \"s/memory_limit\\s*=\\s*128M/memory_limit = 256M/g\" /etc/php7/php.ini \u0026\u0026     sed -i -e 's/variables_order = \"GPCS\"/variables_order = \"EGPCS\"/' /etc/php7/php.ini \u0026\u0026     sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php7/php-fpm.conf \u0026\u0026     sed -i -e \"s@pid = /run/php/php7.0-fpm.pid@pid = /var/run/php7.0-fpm.pid@g\" /etc/php7/php-fpm.conf \u0026\u0026     sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/^;clear_env = no$/clear_env = no/\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php7/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/user = nobody/user = nginx/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/group = nobody/group = nginx/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/;listen.owner = nobody/listen.owner = nginx/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/;listen.group = nobody/listen.group = nginx/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s@listen = 127.0.0.1:9000@listen = /var/run/php7-fpm.sock@g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     find /etc/php7/php-fpm.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app/public"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "index.php",
            "/app/public/index.php"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}