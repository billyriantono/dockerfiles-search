MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Labels:
    - Key: maintener
      Value: '"StudioEtrange <nomorgan@gmail.com>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Sabnzbd on docker"'
    Name: label
  - Env:
    - Key: SERVICE_NAME
      Value: sabnzbd
    Name: env
  - Env:
    - Key: SERVICE_VERSION
      Value: 2.3.9
    Name: env
  - Env:
    - Key: SERVICE_USER
      Value: "0"
    Name: env
  - Env:
    - Key: SERVICE_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: SERVICE_PORT_SECURED
      Value: "8081"
    Name: env
  - Env:
    - Key: SERVICE_INSTALL_DIR
      Value: /opt/${SERVICE_NAME}
    Name: env
  - Env:
    - Key: SERVICE_DATA_PATH
      Value: /data/${SERVICE_NAME}
    Name: env
  - Env:
    - Key: SERVICE_VOLUME_PATH
      Value: ${SERVICE_DATA_PATH} /download/complete /download/incomplete /download/vault
    Name: env
  - Env:
    - Key: SERVICE_EXPORT_ARG
      Value: SERVICE_DATA_PATH SERVICE_PORT SERVICE_PORT_SECURED SERVICE_INSTALL_DIR
    Name: env
  - Env:
    - Key: MINICONDA_PYTHON_MAJOR_VERSION
      Value: "3"
    Name: env
  - Env:
    - Key: SERVICE_PYTHON_VERSION
      Value: 2.7.17
    Name: env
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.7.12.1
    Name: env
  - Env:
    - Key: CONDA_ENV
      Value: ${SERVICE_NAME}
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/miniconda/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p /etc/supervisor/conf.d && mkdir -p /var/log/supervisor && mkdir -p
      "${SERVICE_INSTALL_DIR}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${SERVICE_INSTALL_DIR}"'
  - CmdLine:
    - "echo \"deb http://httpredir.debian.org/debian stretch main non-free\" >> /etc/apt/sources.list
      \t&& echo \"deb http://httpredir.debian.org/debian stretch-updates main non-free\"
      >> /etc/apt/sources.list \t&& echo \"deb http://httpredir.debian.org/debian
      stretch-backports main non-free\" >> /etc/apt/sources.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
      \t\t\t\t\t   ca-certificates curl wget openssl libssl-dev bzip2 unrar locales
      \t\t\t\t\t   dirmngr gnupg2 unzip p7zip-full \t&& apt-key adv --keyserver keyserver.ubuntu.com
      --recv-keys 98703123E0F52B2BE16D586EF13930B14BB9F05F \t&& echo \"deb http://ppa.launchpad.net/jcfp/sab-addons/ubuntu
      xenial main\" >> /etc/apt/sources.list.d/jcfp-sabaddons.list \t&& echo \"deb-src
      http://ppa.launchpad.net/jcfp/sab-addons/ubuntu xenial main\" >> /etc/apt/sources.list.d/jcfp-sabaddons.list
      \t&& apt-get update \t&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
      \t\t\t\t\t   par2-tbb \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen &&     dpkg-reconfigure
      --frontend=noninteractive locales &&     update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - MINICONDA_FILE=Miniconda${MINICONDA_PYTHON_MAJOR_VERSION}-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     wget https://repo.continuum.io/miniconda/${MINICONDA_FILE} -O /opt/${MINICONDA_FILE}
      &&     chmod +x /opt/$MINICONDA_FILE &&     /opt/$MINICONDA_FILE -b -p /opt/miniconda
      &&     rm /opt/$MINICONDA_FILE
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/miniconda/bin/conda create -y -n ${CONDA_ENV} python=${SERVICE_PYTHON_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source activate ${CONDA_ENV} &&                 pip install supervisor==3.3.4"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -k -SL \"https://github.com/sabnzbd/sabnzbd/archive/${SERVICE_VERSION}.tar.gz\"
      \t| tar -xzf - -C ${SERVICE_INSTALL_DIR} --strip-components=1"
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source activate ${CONDA_ENV} &&                 pip install cheetah3==3.1.0
      cryptography==2.4.2 sabyenc==3.3.5 &&                 python tools/make_mo.py"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord-${SERVICE_NAME}.conf
    - /etc/supervisor/conf.d/supervisord-${SERVICE_NAME}.conf
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /download
  - Name: expose
    Ports:
    - "9999"
  - Name: expose
    Ports:
    - ${SERVICE_PORT}
  - Name: expose
    Ports:
    - ${SERVICE_PORT_SECURED}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    - -c
    - /etc/supervisor/supervisord.conf
    - -n
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
