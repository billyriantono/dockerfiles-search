{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintener",
              "Value": "\"StudioEtrange \u003cnomorgan@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Medusa on docker\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_NAME",
              "Value": "medusa"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_VERSION",
              "Value": "v0.2.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_USER",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_PORT",
              "Value": "8081"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_INSTALL_DIR",
              "Value": "/opt/${SERVICE_NAME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_DATA_PATH",
              "Value": "/data/${SERVICE_NAME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_VOLUME_PATH",
              "Value": "${SERVICE_DATA_PATH} /download /tv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVICE_EXPORT_ARG",
              "Value": "SERVICE_DATA_PATH SERVICE_INSTALL_DIR"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_MAJOR_VERSION",
              "Value": "3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_VERSION",
              "Value": "4.7.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SUPERVISOR_VERSION",
              "Value": "4.0.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_ENV",
              "Value": "${SERVICE_NAME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/miniconda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /etc/supervisor/conf.d \u0026\u0026 mkdir -p /var/log/supervisor \u0026\u0026 mkdir -p \"${SERVICE_INSTALL_DIR}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"${SERVICE_INSTALL_DIR}\""
        },
        {
          "CmdLine": [
            "echo \"deb http://httpredir.debian.org/debian stretch main non-free\" \u003e\u003e /etc/apt/sources.list \t\u0026\u0026 echo \"deb http://httpredir.debian.org/debian stretch-updates main non-free\" \u003e\u003e /etc/apt/sources.list \t\u0026\u0026 echo \"deb http://httpredir.debian.org/debian stretch-backports main non-free\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \t\t\t\t\t    ca-certificates curl wget openssl libssl-dev bzip2 unrar-free locales \t\t\t\t\t    mediainfo \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     dpkg-reconfigure --frontend=noninteractive locales \u0026\u0026     update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MINICONDA_FILE=Miniconda${PYTHON_MAJOR_VERSION}-${MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     wget https://repo.continuum.io/miniconda/${MINICONDA_FILE} -O /opt/${MINICONDA_FILE} \u0026\u0026     chmod +x /opt/$MINICONDA_FILE \u0026\u0026     /opt/$MINICONDA_FILE -b -p /opt/miniconda \u0026\u0026     rm /opt/$MINICONDA_FILE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/miniconda/bin/conda create -y -n ${CONDA_ENV} python=${PYTHON_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source activate ${CONDA_ENV} \u0026\u0026                 pip install supervisor==${SUPERVISOR_VERSION}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -k -SL \"https://github.com/pymedusa/Medusa/archive/${SERVICE_VERSION}.tar.gz\" \t| tar -xzf - -C ${SERVICE_INSTALL_DIR} --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord-${SERVICE_NAME}.conf",
            "/etc/supervisor/conf.d/supervisord-${SERVICE_NAME}.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/tv"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/download"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9999"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "${SERVICE_PORT}"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf",
            "-n"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}