{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "starlabio/centos-base:3",
      "SourceCode": "FROM starlabio/centos-base:3",
      "Platform": "",
      "From": {
        "Image": "starlabio/centos-base:3"
      },
      "Commands": [
        {
          "Maintainer": "David Esler \u003cdavid.esler@starlab.io\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "mkdir -p /root/.cargo/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf \u003e rustup-install.sh \u0026\u0026     sh ./rustup-install.sh -y --default-toolchain 1.37.0-x86_64-unknown-linux-gnu \u0026\u0026     rm rustup-install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rustup component add rustfmt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y yum-plugin-ovl vim-common attr libffi libffi-devel         elfutils-libelf-devel gcc gcc-c++ python-devel freetype-devel         libpng-devel dracut-network nfs-utils trousers-devel libtool which \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install numpy==1.16.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install xattr requests behave pyhamcrest matplotlib==2.2.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dracut.conf",
            "/etc/dracut.conf"
          ]
        },
        {
          "CmdLine": [
            "yum install -y epel-release \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y libidn-devel zlib-devel SDL-devel curl-devel \t\tlibX11-devel ncurses-devel gtk2-devel libaio-devel dev86 iasl \t\tgettext gnutls-devel openssl-devel pciutils-devel libuuid-devel \t\tbzip2-devel xz-devel e2fsprogs e2fsprogs-devel yajl-devel mingw64-binutils \t\tsystemd-devel glibc-devel.i686 texinfo         \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y checkpolicy         \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y device-mapper-devel freetype-devel gettext-devel texinfo \t\tdejavu-sans-fonts help2man libusb-devel rpm-devel glibc-static.x86_64 \t\tglibc-static.i686 autogen         \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y yum-utils         \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build_binutils",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "/tmp/build_binutils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y gcc \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y check check-devel check.i686 check-devel.i686         valgrind json-c-devel subunit         cppcheck subunit-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y tpm2-tss-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y libgcrypt-devel libpwquality-devel libblkid-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y gpg createrepo rpmsign                 libxslt-devel libxml2-devel libyaml-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*     echo \"%_source_filedigest_algorithm 8\" \u003e\u003e /etc/rpm/macros     echo \"%_binary_filedigest_algorithm 8\" \u003e\u003e /etc/rpm/macros"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y squashfs-tools \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y ccache \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y gcc-aarch64-linux-gnu libgcc.i686 libgcc-devel.i686 \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y ruby-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \u0026\u0026     gem install ronn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y gperf libcap-devel libmount-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "yum.repos.d/city-fan.repo",
            "/etc/yum.repos.d/"
          ]
        },
        {
          "CmdLine": [
            "yum update -y curl     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y selinux-policy-devel \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bash_pub_key",
            "/tmp"
          ]
        },
        {
          "Key": "BASH_VER",
          "Name": "arg",
          "Value": "5.0"
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026     wget -nv http://ftp.gnu.org/gnu/bash/bash-${BASH_VER}.tar.gz \u0026\u0026     wget -nv http://ftp.gnu.org/gnu/bash/bash-${BASH_VER}.tar.gz.sig \u0026\u0026     gpg --import bash_pub_key \u0026\u0026     gpg --verify bash-${BASH_VER}.tar.gz.sig \u0026\u0026     tar xf bash-${BASH_VER}.tar.gz \u0026\u0026     pushd bash-${BASH_VER} \u0026\u0026     ./configure         --prefix=/usr/local         --enable-alias         --enable-arith-for-command         --enable-array-variables         --enable-bang-history         --enable-brace-expansion         --enable-command-timing         --enable-cond-command         --enable-cond-regexp         --enable-coprocesses         --enable-debugger         --enable-dev-fd-stat-broken         --enable-directory-stack         --enable-disabled-builtins         --enable-dparen-arithmetic         --enable-extended-glob         --enable-help-builtin         --enable-history         --enable-job-control         --enable-multibyte         --enable-net-redirections         --enable-process-substitution         --enable-progcomp         --enable-prompt-string-decoding         --enable-readline         --enable-select         --enable-separate-helpfiles         --enable-mem-scramble \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     popd \u0026\u0026     rm bash-${BASH_VER}.tar.gz{,.sig} /tmp/bash_pub_key \u0026\u0026     rm -r bash-${BASH_VER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SHELLCHECK_VER",
          "Name": "arg",
          "Value": "v0.7.0"
        },
        {
          "CmdLine": [
            "wget -nv https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VER}.linux.x86_64.tar.xz \u0026\u0026     tar xf shellcheck-${SHELLCHECK_VER}.linux.x86_64.tar.xz \u0026\u0026     install shellcheck-${SHELLCHECK_VER}/shellcheck /usr/local/bin \u0026\u0026     rm shellcheck-${SHELLCHECK_VER}.linux.x86_64.tar.xz \u0026\u0026     rm -r shellcheck-${SHELLCHECK_VER}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}