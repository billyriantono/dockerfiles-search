{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tomcat:9-jre8",
      "SourceCode": "FROM tomcat:9-jre8",
      "Platform": "",
      "From": {
        "Image": "tomcat:9-jre8"
      },
      "Commands": [
        {
          "Maintainer": "GeoNode Development Team",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GEOSERVER_VERSION",
              "Value": "2.15.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEOSERVER_DATA_DIR",
              "Value": "\"/geoserver_data/data\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local/tomcat/webapps     \u0026\u0026 wget --no-check-certificate --progress=bar:force:noscroll     https://build.geo-solutions.it/geonode/geoserver/latest/geoserver-${GEOSERVER_VERSION}.war     \u0026\u0026 unzip -q geoserver-${GEOSERVER_VERSION}.war -d geoserver     \u0026\u0026 rm geoserver-${GEOSERVER_VERSION}.war     \u0026\u0026 mkdir -p $GEOSERVER_DATA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$GEOSERVER_DATA_DIR"
          ]
        },
        {
          "Key": "DOCKERHOST",
          "Name": "arg",
          "Value": "${DOCKERHOST}"
        },
        {
          "CmdLine": [
            "echo -n #1===\u003eDOCKERHOST=${DOCKERHOST}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKERHOST",
              "Value": "${DOCKERHOST}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -n #2===\u003eDOCKERHOST=${DOCKERHOST}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GEONODE_HOST_IP",
          "Name": "arg",
          "Value": "${GEONODE_HOST_IP}"
        },
        {
          "CmdLine": [
            "echo -n #1===\u003eGEONODE_HOST_IP=${GEONODE_HOST_IP}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEONODE_HOST_IP",
              "Value": "${GEONODE_HOST_IP}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -n #2===\u003eGEONODE_HOST_IP=${GEONODE_HOST_IP}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST_IP",
              "Value": "${DOCKER_HOST_IP:-${GEONODE_HOST_IP}}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -n #1===\u003eDOCKER_HOST_IP=${DOCKER_HOST_IP}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if ! [ -z ${DOCKER_HOST_IP} ];     then echo export DOCKER_HOST_IP=${DOCKERHOST} |     sed 's/tcp:\\/\\/\\([^:]*\\).*/\\1/' \u003e\u003e /root/.bashrc;     else echo \"DOCKER_HOST_IP is already set!\"; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -n #2===\u003eDOCKER_HOST_IP=${DOCKER_HOST_IP}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PUBLIC_PORT",
          "Name": "arg",
          "Value": "${PUBLIC_PORT}"
        },
        {
          "CmdLine": [
            "echo -n #1===\u003ePUBLIC_PORT=${PUBLIC_PORT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PUBLIC_PORT",
              "Value": "${PUBLIC_PORT}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -n #2===\u003ePUBLIC_PORT=${PUBLIC_PORT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo export NGINX_BASE_URL=http://${NGINX_HOST}:${NGINX_PORT}/ |     sed 's/tcp:\\/\\/\\([^:]*\\).*/\\1/' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/tomcat/tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/tomcat/tmp"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "set_geoserver_auth.sh",
            "/usr/local/tomcat/tmp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "setup_auth.sh",
            "/usr/local/tomcat/tmp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/usr/local/tomcat/tmp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "get_dockerhost_ip.py",
            "/usr/local/tomcat/tmp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "get_nginxhost_ip.py",
            "/usr/local/tomcat/tmp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/tomcat/tmp"
          ]
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get install -y python python-pip python-dev     \u0026\u0026 chmod +x /usr/local/tomcat/tmp/set_geoserver_auth.sh     \u0026\u0026 chmod +x /usr/local/tomcat/tmp/setup_auth.sh     \u0026\u0026 chmod +x /usr/local/tomcat/tmp/entrypoint.sh     \u0026\u0026 pip install pip==9.0.3     \u0026\u0026 pip install -r requirements.txt     \u0026\u0026 chmod +x /usr/local/tomcat/tmp/get_dockerhost_ip.py     \u0026\u0026 chmod +x /usr/local/tomcat/tmp/get_nginxhost_ip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-Djava.awt.headless=true -XX:MaxPermSize=512m -XX:PermSize=256m -Xms512m -Xmx2048m -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Dfile.encoding=UTF8 -Duser.timezone=GMT -Djavax.servlet.request.encoding=UTF-8 -Djavax.servlet.response.encoding=UTF-8 -Duser.timezone=GMT -Dorg.geotools.shapefile.datetime=true\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/local/tomcat/tmp/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}