MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Key: JENKINS_AGENT_HOME
    Name: arg
    Value: /home/${user}
  - Env:
    - Key: JENKINS_AGENT_HOME
      Value: ${JENKINS_AGENT_HOME}
    Name: env
  - CmdLine:
    - groupadd -g ${gid} ${group}     && useradd -d "${JENKINS_AGENT_HOME}" -u "${uid}"
      -g "${gid}" -m -s /bin/bash "${user}"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install --no-install-recommends -y openssh-server     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i /etc/ssh/sshd_config         -e 's/#PermitRootLogin.*/PermitRootLogin
      no/'         -e 's/#RSAAuthentication.*/RSAAuthentication yes/'          -e
      's/#PasswordAuthentication.*/PasswordAuthentication no/'         -e 's/#SyslogFacility.*/SyslogFacility
      AUTH/'         -e 's/#LogLevel.*/LogLevel INFO/' &&     mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"${JENKINS_AGENT_HOME}"'
    - '"/tmp"'
    - '"/run"'
    - '"/var/run"'
  - Name: workdir
    Path: '"${JENKINS_AGENT_HOME}"'
  - CmdLine:
    - apt-get -q update &&    DEBIAN_FRONTEND="noninteractive" apt-get -q install
      -y -o Dpkg::Options::="--force-confnew" --no-install-recommends software-properties-common
      &&    add-apt-repository -y ppa:openjdk-r/ppa &&    apt-get -q update &&    DEBIAN_FRONTEND="noninteractive"
      apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends
      openjdk-8-jre-headless &&    apt-get -q clean -y && rm -rf /var/lib/apt/lists/*
      && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://download.mono-project.com/repo/debian wheezy/snapshots/5.0.0.100
      main" > /etc/apt/sources.list.d/mono-xamarin.list   && apt-get update   && apt-get
      install -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget git libunwind8
      libcurl3   && rm -rf /var/lib/apt/lists/*   && apt-get -q clean -y && rm -rf
      /var/lib/apt/lists/* && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y curl libicu-dev  && apt-get -q clean -y
      && rm -rf /var/lib/apt/lists/* && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup-sshd
    - /usr/local/bin/setup-sshd
  - CmdLine:
    - chmod +x /usr/local/bin/setup-sshd
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - setup-sshd
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
