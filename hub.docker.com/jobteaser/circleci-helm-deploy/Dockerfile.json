{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"JobTeaser\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"opensource@jobteaser.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.12.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBE_VERSION",
              "Value": "1.14.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y --no-install-recommends       wget ca-certificates       git openssh-client     \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     (       cd /tmp \u0026\u0026       wget -q https://storage.googleapis.com/kubernetes-release/release/v$KUBE_VERSION/bin/linux/amd64/kubectl \u0026\u0026       install -m755 kubectl /usr/local/bin/kubectl     ) \u0026\u0026     (       cd /tmp \u0026\u0026       wget -q https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz \u0026\u0026       tar -xzf helm-v$HELM_VERSION-linux-amd64.tar.gz \u0026\u0026       cd linux-amd64 \u0026\u0026       install -m755 helm /usr/local/bin/helm \u0026\u0026       install -m755 tiller /usr/local/bin/tiller     ) \u0026\u0026         apt-get autoremove -y \u0026\u0026     apt-get clean -y"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}