MetaArgs: null
Stages:
- BaseName: docker:18.09.0-dind
  Commands:
  - CmdLine:
    - apk --update-cache add   ca-certificates   docker   gcc   git   libc-dev   librdkafka-dev   make   openssl-dev   openssh   pkgconf   protobuf   py-pip
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.11.4
    Name: env
  - CmdLine:
    - set -eux;     apk add --no-cache --virtual .build-deps     bash     musl-dev     go     ;     export     GOROOT_BOOTSTRAP="$(go
      env GOROOT)"     GOOS="$(go env GOOS)"     GOARCH="$(go env GOARCH)"     GOHOSTOS="$(go
      env GOHOSTOS)"     GOHOSTARCH="$(go env GOHOSTARCH)"     ;     apkArch="$(apk
      --print-arch)";     case "$apkArch" in     armhf) export GOARM='6' ;;     x86)
      export GO386='387' ;;     esac;         wget -O go.tgz "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz";     echo
      '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' |
      sha256sum -c -;     tar -C /usr/local -xzf go.tgz;     rm go.tgz;         cd
      /usr/local/go/src;     ./make.bash;         rm -rf     /usr/local/go/pkg/bootstrap     /usr/local/go/pkg/obj     ;     apk
      del .build-deps;         export PATH="/usr/local/go/bin:$PATH";     go version
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: /go/bin:/usr/local/go/bin:${PATH}
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GOPATH}
  - CmdLine:
    - go get -u   github.com/golang/protobuf/protoc-gen-go   github.com/DATA-DOG/godog/cmd/godog
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.23.1
    Name: env
  - CmdLine:
    - pip install   docker-compose==${DOCKER_COMPOSE_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "go test -tags godogs -mod vendor -v --godog.format=pretty --godog.random"
      >> ~/.ash_history
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /builder
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/rules.mk
    - .
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/Dockerfile
    - .
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/README.md
    - .
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Name: workdir
    Path: ${GOPATH}
  From:
    Image: docker:18.09.0-dind
  Name: ""
  Platform: ""
  SourceCode: FROM docker:18.09.0-dind
