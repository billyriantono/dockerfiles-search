MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Maintainer: Jacob Alberty <jacob.alberty@foundigital.com>
    Name: maintainer
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Env:
    - Key: PKGURL
      Value: https://dl.ubnt.com/unifi/5.6.30/unifi_sysvinit_all.deb
    Name: env
  - Env:
    - Key: BASEDIR
      Value: /usr/lib/unifi
    - Key: DATADIR
      Value: /unifi/data
    - Key: LOGDIR
      Value: /unifi/log
    - Key: CERTDIR
      Value: /unifi/cert
    - Key: RUNDIR
      Value: /var/run/unifi
    - Key: ODATADIR
      Value: /var/lib/unifi
    - Key: OLOGDIR
      Value: /var/log/unifi
    - Key: CERTNAME
      Value: cert.pem
    - Key: CERT_IS_CHAIN
      Value: "false"
    - Key: GOSU_VERSION
      Value: "1.10"
    - Key: BIND_PRIV
      Value: "true"
    - Key: RUNAS_UID0
      Value: "true"
    - Key: UNIFI_GID
      Value: "999"
    - Key: UNIFI_UID
      Value: "999"
    Name: env
  - CmdLine:
    - 'set -ex     && fetchDeps=''         ca-certificates         dirmngr         gpg         wget     ''     &&
      apt-get update     && apt-get install -y --no-install-recommends $fetchDeps     &&
      dpkgArch="$(dpkg --print-architecture | awk -F- ''{ print $NF }'')"     && wget
      -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"     &&
      wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && for server in $(shuf -e ha.pool.sks-keyservers.net                             hkp://p80.pool.sks-keyservers.net:80                             keyserver.ubuntu.com                             hkp://keyserver.ubuntu.com:80                             pgp.mit.edu)
      ; do         gpg --keyserver "$server" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      && break || : ;     done     && gpg --batch --verify /usr/local/bin/gosu.asc
      /usr/local/bin/gosu     && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true     && apt-get purge -y
      --auto-remove $fetchDeps     && rm -rf /var/lib/apt/lists/*'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/man/man1/  && groupadd -r unifi -g $UNIFI_GID  && useradd
      --no-log-init -r -u $UNIFI_UID -g $UNIFI_GID unifi  && apt-get update  && apt-get
      install -qy --no-install-recommends     curl     dirmngr     gnupg     openjdk-8-jre-headless     procps     libcap2-bin  &&
      echo "deb http://www.ubnt.com/downloads/unifi/debian unifi5 ubiquiti" > /etc/apt/sources.list.d/20ubiquiti.list  &&
      apt-key adv --keyserver keyserver.ubuntu.com --recv C0A52C50  && curl -L -o
      ./unifi.deb "${PKGURL}"  && apt -qy install ./unifi.deb  && apt-get -qy purge
      --auto-remove     dirmngr     gnupg  && rm -f ./unifi.deb  && chown -R unifi:unifi
      /usr/lib/unifi  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ${ODATADIR} ${OLOGDIR}  && mkdir -p ${DATADIR} ${LOGDIR}  && ln -s ${DATADIR}
      ${BASEDIR}/data  && ln -s ${RUNDIR} ${BASEDIR}/run  && ln -s ${LOGDIR} ${BASEDIR}/logs  &&
      rm -rf {$ODATADIR} ${OLOGDIR}  && ln -s ${DATADIR} ${ODATADIR}  && ln -s ${LOGDIR}
      ${OLOGDIR}  && mkdir -p /var/cert ${CERTDIR}  && ln -s ${CERTDIR} /var/cert/unifi
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /unifi
    - ${RUNDIR}
  - Name: expose
    Ports:
    - 3478/udp
    - 6789/tcp
    - 8080/tcp
    - 8443/tcp
    - 8843/tcp
    - 8880/tcp
  - CmdLine:
    - mkdir -p /usr/unifi      /usr/local/unifi/init.d      /usr/unifi/init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-healthcheck.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - functions
    - /usr/unifi/functions
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - import_cert
    - /usr/unifi/init.d/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh  && chmod +x /usr/unifi/init.d/import_cert  &&
      chmod +x /usr/local/bin/docker-healthcheck.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /unifi
  - Health:
      Test:
      - CMD-SHELL
      - /usr/local/bin/docker-healthcheck.sh || exit 1
    Name: healthcheck
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - unifi
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
