MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Jostein Austvik Jacobsen
    Name: maintainer
  - Name: workdir
    Path: /opt/
  - CmdLine:
    - apt-get update && apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i.bak 's/main$/main universe/' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:cwchien/gradle
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:openjdk-r/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_GB en_GB.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_GB:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y wget unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y openjdk-7-jdk openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y maven gradle mp3splt python3-pip python3-yaml
      git subversion mercurial bzr ansible curl vim lame sox mp3info apcalc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install mutagen slacker
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_7_HOME
      Value: /usr/lib/jvm/java-7-openjdk-amd64
    Name: env
  - Env:
    - Key: JAVA_8_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Key: user_name
    Name: arg
    Value: user
  - Key: user_uid
    Name: arg
    Value: "1000"
  - Key: user_gid
    Name: arg
    Value: "1000"
  - CmdLine:
    - apt-get update && apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - 'export uid=${user_uid} gid=${user_gid} &&     mkdir -p /home/${user_name} &&     echo
      "${user_name}:x:${uid}:${gid}:${user_name},,,:/home/${user_name}:/bin/bash"
      >> /etc/passwd &&     echo "${user_name}:x:${uid}:" >> /etc/group &&     echo
      "${user_name} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${user_name} &&     chmod
      0440 /etc/sudoers.d/${user_name} &&     chown ${user_uid}:${user_gid} -R /home/${user_name}'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz"     &&
      tar -xvvf go*.tar.gz     && rm go*.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/go/bin
    Name: env
  - Env:
    - Key: GOROOT
      Value: /opt/go
    Name: env
  - CmdLine:
    - svn checkout http://svn.code.sf.net/p/daisymfc/code/trunk@2810 daisymfc-code
    Name: run
    PrependShell: true
  - CmdLine:
    - cd daisymfc-code/dmfc/     && mkdir -p bin     && ant -f build-core.xml compile     &&
      ant -f build-core.xml buildReleaseZip     && cd dist     && unzip pipeline-*.zip     &&
      mv pipeline-*/ ../../../daisymfc     && cd ../../..     && rm daisymfc-code
      -r
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/daisymfc
    Name: env
  - CmdLine:
    - wget https://github.com/ndw/xmlcalabash1/releases/download/1.1.4-95/xmlcalabash-1.1.4-95.zip
      -O calabash.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip calabash.zip     && mv xmlcalabash-* xmlcalabash     && rm calabash.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/xmlcalabash/calabash
    - xmlcalabash/calabash
  - Env:
    - Key: PATH
      Value: $PATH:/opt/xmlcalabash
    Name: env
  - CmdLine:
    - mkdir -p saxon/lib     && cd saxon/lib     && wget http://central.maven.org/maven2/net/sf/saxon/Saxon-HE/9.5.1-8/Saxon-HE-9.5.1-8.jar     &&
      wget http://central.maven.org/maven2/xml-resolver/xml-resolver/1.2/xml-resolver-1.2.jar
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/saxon/saxon
    - saxon/saxon
  - Env:
    - Key: PATH
      Value: $PATH:/opt/saxon
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/xmlcatalog
    - /etc/opt/xmlcatalog
  - CmdLine:
    - chown -R user:user /etc/opt/xmlcatalog
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/snaekobbi/system.git dp2-system
    Name: run
    PrependShell: true
  - CmdLine:
    - cd dp2-system && git checkout 1470e1268bc534eac164adde8eb39187867d96d8
    Name: run
    PrependShell: true
  - CmdLine:
    - cd dp2-system && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd dp2-system && ansible-playbook test-server.yml 2>&1 | grep "local .*ok.*changed.*unreachable.*failed=0"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm dp2-system test-server.retry -rf
    Name: run
    PrependShell: true
  - CmdLine:
    - service pipeline2-webuid stop
    Name: run
    PrependShell: true
  - CmdLine:
    - service pipeline2d stop
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://dl.dropboxusercontent.com/u/6370535/nordic-epub3-dtbook-migrator/epubcheck-adapter-with-dependencies/dependencies-1.8.1.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://dl.dropboxusercontent.com/u/6370535/nordic-epub3-dtbook-migrator/builds/`curl
      https://dl.dropboxusercontent.com/u/6370535/nordic-epub3-dtbook-migrator/current.txt`"
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip dependencies*.zip && mv -n modules/* /opt/daisy-pipeline2/modules/ &&
      rm dependencies*zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mv -n nordic-*jar /opt/daisy-pipeline2/modules/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://repo1.maven.org/maven2/org/daisy/pipeline/assembly/1.9.1/assembly-1.9.1-cli_all.deb"
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive dpkg -i assembly*cli*deb     && rm assembly*cli*deb     &&
      echo '#!/bin/bash' > /usr/local/bin/dp2     && echo 'service pipeline2d status
      >/dev/null' >> /usr/local/bin/dp2     && echo 'if [[ "$?" -ne "0" ]] ; then
      service pipeline2d start ; fi' >> /usr/local/bin/dp2     && echo 'while [[ 1
      ]] ; do JAVA_HOME=$JAVA_7_HOME /opt/daisy-pipeline2-cli/dp2 help 2>&1 >/dev/null
      ; if [[ "$?" -eq "0" ]] ; then break ; fi ; done' >> /usr/local/bin/dp2     &&
      echo 'JAVA_HOME=$JAVA_7_HOME /opt/daisy-pipeline2-cli/dp2 "$@"' >> /usr/local/bin/dp2     &&
      chmod +x /usr/local/bin/dp2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y tcl8.6 tk8.6 tcllib tk-tile tcl-snack wavesurfer
      libsnack2-alsa mplayer pulseaudio alsa
    Name: run
    PrependShell: true
  - CmdLine:
    - 'ln --symbolic /usr/bin/tclsh8.6 /usr/bin/tclsh8.4 # tclsh8.4 is hardcoded in
      filibuster'
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G audio user
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://gitlab.com/nlbdev/filibuster-brage.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd filibuster-brage && git fetch -a && git checkout c696688c57ad0862ae0fb4db8cb274f8831a2d07
    Name: run
    PrependShell: true
  - CmdLine:
    - cp filibuster-brage/mari_config.tcl filibuster-brage/user_config.tcl
    Name: run
    PrependShell: true
  - CmdLine:
    - cp filibuster-brage/Preproc/mari_config.pl filibuster-brage/Preproc/user_config.pl
    Name: run
    PrependShell: true
  - CmdLine:
    - mv filibuster-brage/Preproc/lang/nob/Tagger/NLBtag filibuster-brage/Preproc/lang/nob/Tagger/NLBTag
    Name: run
    PrependShell: true
  - CmdLine:
    - find filibuster-brage -type f | grep -v " " | grep "\.\(tcl\|pl\)$" | xargs
      sed -i 's/n151007/n160614/g'
    Name: run
    PrependShell: true
  - CmdLine:
    - find filibuster-brage -type f | grep -v " " | grep "\.\(tcl\|pl\)$" | xargs
      sed -i 's/[A-Za-z]:\/.*filibuster[^\/]*\//\/opt\/filibuster-brage\//g'
    Name: run
    PrependShell: true
  - CmdLine:
    - find filibuster-brage -type f | grep -v " " | grep "\.\(tcl\|pl\)$" | xargs
      sed -i 's/Tagger\/NLBtag/Tagger\/NLBTag/g'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'find filibuster-brage -type f | grep -v " " | grep "\.tcl$" | xargs sed -i
      ''s/package require -exact/package require/g'' # dont require exact package
      versions'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/package require sound.*/load snack\/64-bit\/libsound.so/g' filibuster-brage/narraFil2.tcl
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\(puts stdout \[string length \[soundObject data -fileformat wav\]\]\)/#\1/'
      filibuster-brage/narraFil2.tcl
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/#set auto_path "C:\/wavesurfer\/src \$auto_path"/lappend auto_path
      \/usr\/share\/tcltk\/wavesurfer\//' filibuster-brage/filibuster.tcl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p filibuster-brage/Preproc/lang/nob/DB
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x filibuster-brage/filibuster.tcl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd filibuster-brage/Preproc     && sed -i 's/reload_lexica.*/reload_lexica =
      "1";/' user_config.pl     && USER=user perl nob_preproc.pl     && sed -i 's/reload_lexica.*/reload_lexica
      = "0";/' user_config.pl
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${user_name}:${user_name} filibuster-brage
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 filibuster-brage
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/filibuster/filibuster
    - filibuster-brage/filibuster
  - Env:
    - Key: PATH
      Value: $PATH:/opt/filibuster-brage/
    Name: env
  - Name: user
    User: ${user_name}
  - Name: workdir
    Path: /home/${user_name}/
  - CmdLine:
    - 'if [ -e /tmp/script/run.sh ]; then /tmp/script/run.sh ; else echo "Script missing:
      /tmp/script/run.sh" ; fi'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
