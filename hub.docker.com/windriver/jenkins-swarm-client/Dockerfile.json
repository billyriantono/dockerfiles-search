{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:stable",
      "SourceCode": "FROM docker:stable",
      "Platform": "",
      "From": {
        "Image": "docker:stable"
      },
      "Commands": [
        {
          "Key": "version",
          "Name": "arg",
          "Value": "0.1.0-dev"
        },
        {
          "Key": "build_date",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "Key": "commit_hash",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "Key": "vcs_url",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "Key": "vcs_branch",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Konrad Scherer \u003cKonrad.Scherer@windriver.com\u003e\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"WindRiver\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"docker-jenkins-swarm-client\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Jenkins agent using Swarm plugin with Docker\""
            },
            {
              "Key": "org.label-schema.usage",
              "Value": "\"README.md\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/WindRiver-OpenSourceLabs/docker-jenkins-swarm-client/blob/master/README.md\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$vcs_url"
            },
            {
              "Key": "org.label-schema.vcs-branch",
              "Value": "$vcs_branch"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$commit_hash"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$version"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$build_date"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "addgroup -g 1000 jenkins \u0026\u0026 addgroup -g 997 docker \u0026\u0026 addgroup -g 996 docker2     \u0026\u0026 addgroup -g 998 docker3 \u0026\u0026 addgroup -g 995 docker4     \u0026\u0026 adduser -u 1000 -G jenkins -D -s /sbin/nologin jenkins     \u0026\u0026 adduser jenkins docker2 \u0026\u0026 adduser jenkins docker3 \u0026\u0026 adduser jenkins docker4     \u0026\u0026 adduser jenkins ping \u0026\u0026 adduser jenkins jenkins     \u0026\u0026 apk --update --no-cache add tini openjdk8-jre python git openssh openssl bash sudo py-pip curl python-dev libc-dev libffi-dev openssl-dev gcc make     \u0026\u0026 pip install docker-compose     \u0026\u0026 echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /license-report  \u0026\u0026 cd /license-report     \u0026\u0026 curl --silent --remote-name https://raw.githubusercontent.com/WindRiver-OpenSourceLabs/license-report/master/generate_report.sh     \u0026\u0026 apk update \u0026\u0026 sh generate_report.sh \u003e report     \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm /license-report/generate_report.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SWARM_CLIENT_VERSION",
              "Value": "\"3.17\""
            },
            {
              "Key": "SWARM_SHA",
              "Value": "\"96dfbf0ceda7a380fb94df449ddaeddec686f800\""
            },
            {
              "Key": "SWARM_HOME",
              "Value": "\"/home/jenkins\""
            },
            {
              "Key": "SWARM_DELAYED_START",
              "Value": "\"\""
            },
            {
              "Key": "SWARM_AGENT_USER",
              "Value": "\"agent\""
            },
            {
              "Key": "COMMAND_OPTIONS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}.jar -P /usr/bin/    \u0026\u0026 mv /usr/bin/swarm-client-*.jar /usr/bin/swarm-client.jar    \u0026\u0026 echo \"$SWARM_SHA  /usr/bin/swarm-client.jar\" | sha1sum -c -    \u0026\u0026 mkdir -p \"${SWARM_HOME}/workspace\" \u0026\u0026 chown -R jenkins:jenkins \"$SWARM_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$SWARM_HOME"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}