{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "certbot/certbot:latest",
      "SourceCode": "FROM certbot/certbot:latest",
      "Platform": "",
      "From": {
        "Image": "certbot/certbot:latest"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./app",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "certbot-hourly.crontab",
            "/etc/periodic/hourly/certbot-renew"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "certbot-daily.crontab",
            "/etc/periodic/daily/certbot-vhosts"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --update bash python3 ca-certificates bash wget openssl     \u0026\u0026 update-ca-certificates     \u0026\u0026 mkdir -p /etc/nginx/conf.d /var/www/certbot \t\u0026\u0026 pip3 install --upgrade pip \t\u0026\u0026 pip3 install docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "unix:///tmp/docker.sock"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx/conf.d",
            "/etc/letsencrypt",
            "/var/www/certbot",
            "/tmp/docker.sock"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/env"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/sh",
            "/app/launch.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}