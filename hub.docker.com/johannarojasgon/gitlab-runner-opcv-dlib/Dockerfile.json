{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget unzip apt-file"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libx11-dev libatlas-base-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libgtk-3-dev libboost-python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libopenblas-dev liblapack-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y cmake-curses-gui"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DLIB_VERSION",
          "Name": "arg",
          "Value": "'19.16'"
        },
        {
          "CmdLine": [
            "cd /root/ \u0026\u0026     wget https://github.com/davisking/dlib/archive/v${DLIB_VERSION}.zip \u0026\u0026     unzip v${DLIB_VERSION}.zip \u0026\u0026     rm v${DLIB_VERSION}.zip \u0026\u0026     cd dlib-${DLIB_VERSION} \u0026\u0026     mkdir -p build \u0026\u0026     cd build \u0026\u0026     echo CMAKE \u0026\u0026     cmake .. \u0026\u0026     echo cmakebuildconfigRelease \u0026\u0026     cmake --build . --config Release \u0026\u0026     make install \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /root/dlib-${DLIB_VERSION} dlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "'4.0.1'"
        },
        {
          "CmdLine": [
            "cd /root/ \u0026\u0026     wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \u0026\u0026     unzip ${OPENCV_VERSION}.zip \u0026\u0026     rm ${OPENCV_VERSION}.zip \u0026\u0026     cd opencv-${OPENCV_VERSION} \u0026\u0026     mkdir -p build \u0026\u0026     cd build \u0026\u0026     echo CMAKE \u0026\u0026     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. \u0026\u0026     echo MAKEJ8 \u0026\u0026     make -j4 \u0026\u0026     echo MAKEINSTALL \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y ca-certificates wget apt-transport-https vim nano \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libboost-all-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://packages.gitlab.com/gpg.key | apt-key add - \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y gitlab-ci-multi-runner \u0026\u0026     wget -q https://github.com/docker/machine/releases/download/v0.7.0/docker-machine-Linux-x86_64 -O /usr/bin/docker-machine \u0026\u0026     chmod +x /usr/bin/docker-machine \u0026\u0026     apt-get clean \u0026\u0026     mkdir -p /etc/gitlab-runner/certs \u0026\u0026     chmod -R 700 /etc/gitlab-runner \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "run",
            "--working-directory=/home/gitlab-runner"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/gitlab-runner"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}