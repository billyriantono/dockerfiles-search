{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.19-fpm-alpine3.9",
      "SourceCode": "FROM php:7.2.19-fpm-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "php:7.2.19-fpm-alpine3.9"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jade \u003chmy940118@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "512M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_UPLOAD",
              "Value": "50M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_FILE_UPLOAD",
              "Value": "200"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_POST",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf         dpkg-dev dpkg         file         g++         gcc         libc-dev         make         pkgconf         re2c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add libmcrypt-dev         libxml2-dev         libxslt-dev     \u0026\u0026 docker-php-ext-install soap        xsl         xmlrpc         zip         pcntl         pdo_mysql         mysqli         exif         bcmath         sockets         shmop         sysvsem         opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add libwebp-dev         libpng-dev         libjpeg-turbo-dev         freetype-dev     \u0026\u0026 docker-php-ext-configure gd         --enable-gd-native-ttf         --with-freetype-dir         --with-jpeg-dir     \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .phpize-deps-configure $PHPIZE_DEPS     \u0026\u0026 apk add imagemagick-dev     \u0026\u0026 printf '\\n' | pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 apk del .phpize-deps-configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .phpize-deps-configure $PHPIZE_DEPS     \u0026\u0026 printf '\\n' | pecl install redis     \u0026\u0026 docker-php-ext-enable redis     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 apk del .phpize-deps-configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .phpize-deps-configure $PHPIZE_DEPS     \u0026\u0026 printf '\\n' | pecl install swoole     \u0026\u0026 docker-php-ext-enable swoole     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 apk del .phpize-deps-configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" $PHP_INI_DIR/php.ini \u0026\u0026     sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" $PHP_INI_DIR/php.ini \u0026\u0026     sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" $PHP_INI_DIR/php.ini \u0026\u0026     sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" $PHP_INI_DIR/php.ini \u0026\u0026     sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" $PHP_INI_DIR/php.ini \u0026\u0026     sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i\" $PHP_INI_DIR/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data/www"
        },
        {
          "CmdLine": [
            "php-fpm",
            "-R"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}