{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Matt Keen",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026   apt-get install -y  software-properties-common \u0026\u0026   apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \u0026\u0026   apt-add-repository -y universe \u0026\u0026   apt-get -qq update \u0026\u0026 apt-get install -y --fix-missing   build-essential   libjpeg-dev   curl   git   libevent-dev   libz-dev   libfuzzy-dev   libldap2-dev   libpcap-dev   libpcre3-dev   libsasl2-dev   libtool   libxml2-dev   libxslt1-dev   libyaml-dev   numactl   p7zip-full   python-dev   python-pip   swig   supervisor   wget   unrar-free   upx   vim   zip   libssl-dev   apache2   python-chm   clamav   clamav-daemon   python-imaging   pyew   exiftool   antiword   poppler-utils   tcpdump   tshark   autoconf   libtool   python-nids   libapache2-mod-wsgi \u0026\u0026   cp /etc/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf \u0026\u0026   ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^\\[supervisord\\]$/\u0026\\nnodaemon\\=true\\nlogfile\\=\\/data\\/log\\/supervisord\\.log\\npidfile\\=\\/data\\/run\\/supervisord\\.pid\\n\\n\\[program\\:apache2\\]\\ncommand\\=\\/bin\\/bash\\ \\-c\\ \\\"source \\/etc\\/apache2\\/envvars\\ \\\u0026\\\u0026\\ exec\\ \\/usr\\/sbin\\/apache2\\ \\-DFOREGROUND\\\"\\nuser\\=root\\nstdout\\_logfile\\=\\/data\\/log\\/supervisor\\/\\%\\(program\\_name\\)s\\.log\\nstderr\\_logfile\\=\\/data\\/log\\/supervisor\\/\\%\\(program\\_name\\)s\\.log\\nautostart\\=true\\nautorestart\\=true\\n\\n/' /etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   wget -O ssdeep-2.13.tar.gz https://github.com/REMnux/docker/raw/master/dependencies/ssdeep-2.13.tar.gz \u0026\u0026   sha256sum ssdeep-2.13.tar.gz \u003e sha256sum.out \u0026\u0026   sha256sum -c sha256sum.out \u0026\u0026   tar vxzf ssdeep-2.13.tar.gz \u0026\u0026   cd ssdeep-2.13/ \u0026\u0026   ./configure \u0026\u0026   make \u0026\u0026   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r nonroot \u0026\u0026   useradd -r -g nonroot -d /home/nonroot -m -s /sbin/nologin -c \"Nonroot User\" nonroot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'mkdir -pv /data/{db,lock/apache2,log/apache2,log/supervisor,run/apache2,ssl/certs,ssl/private}' \u0026\u0026   cd /data/ \u0026\u0026   git clone https://github.com/crits/crits.git \u0026\u0026   cd crits/ \u0026\u0026   pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /data/crits/ \u0026\u0026   touch /data/crits/logs/crits.log \u0026\u0026   touch /data/log/startup.log \u0026\u0026   ln -f -s /data/crits/logs/crits.log /data/log/crits.log \u0026\u0026   chgrp -R nonroot logs \u0026\u0026   chmod 664 /data/crits/logs/crits.log \u0026\u0026   sed -i 's/^nonroot.*$/\u0026www\\-data/' /etc/group \u0026\u0026   cp crits/config/database_example.py crits/config/database.py \u0026\u0026   sed -i \"s/localhost/mongo/\" crits/config/database.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/init.d/apache2 stop \u0026\u0026   rm -rf /etc/apache2/sites-available/* \u0026\u0026   cp /data/crits/extras/*.conf /etc/apache2 \u0026\u0026   cp -r /data/crits/extras/sites-available /etc/apache2 \u0026\u0026   rm /etc/apache2/sites-enabled/* \u0026\u0026   ln -f -s /etc/apache2/sites-available/default-ssl /etc/apache2/sites-enabled/default-ssl \u0026\u0026   mkdir -pv /etc/apache2/conf.d/i \u0026\u0026   usermod -a -G nonroot www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   openssl req -nodes -newkey rsa:4096 -keyout new.cert.key -out new.cert.csr -subj \"/CN=CRITs/O=auxilium/C=UK\" \u0026\u0026   openssl x509 -in new.cert.csr -out new.cert.cert -req -signkey new.cert.key -days 1825 \u0026\u0026   cp new.cert.cert /data/ssl/certs/crits.crt \u0026\u0026   cp new.cert.key  /data/ssl/private/crits.plain.key \u0026\u0026   mkdir /data/ssl/custom \u0026\u0026   chown -R nonroot /data/ \u0026\u0026   a2enmod ssl \u0026\u0026   export \"LANG=en_US.UTF-8\" \u0026\u0026   sed -i \"/export\\ LANG\\=C/ s/C/en\\_US\\.UTF\\-8/\" /etc/apache2/envvars \u0026\u0026   sed -i '$ i\\\\n0 * * * *       root    cd /data/crits/ \u0026\u0026 /usr/bin/python manage.py mapreduces\\n0 * * * *       root    cd /data/crits/ \u0026\u0026 /usr/bin/python manage.py generate_notifications' /etc/crontab \u0026\u0026   sed -i 's/^CustomLog \\/var/CustomLog\\ \\/data/' /etc/apache2/apache2.conf \u0026\u0026   sed -i 's/^ErrorLog\\ \\/var/ErrorLog\\ \\/data/' /etc/apache2/apache2.conf \u0026\u0026   sed -i 's/\\/var/\\/data/' /etc/apache2/envvars \u0026\u0026   sed -i 's/www\\-data/nonroot/' /etc/apache2/envvars \u0026\u0026   sed -i 's/\\ 443/\\ 8443/' /etc/apache2/ports.conf \u0026\u0026   sed -i 's/\\/var/\\/data/' /etc/apache2/sites-available/default \u0026\u0026   sed -i 's/443/8443/' /etc/apache2/sites-available/default-ssl \u0026\u0026   sed -i 's/\\/etc/\\/data/' /etc/apache2/sites-available/default-ssl \u0026\u0026   sed -i 's/\\/var/\\/data/' /etc/apache2/sites-available/default-ssl \u0026\u0026   sed -i 's/\\/var/\\/data/' /etc/supervisor/conf.d/supervisord.conf \u0026\u0026   sed -i -e :a -e '$d;N;2,3ba' -e 'P;D'  /etc/supervisor/conf.d/supervisord.conf \u0026\u0026   sed -i 's/\\/var/\\/data/' /etc/supervisor/supervisord.conf \u0026\u0026   sed -i 's/\\$CWD/\\/data\\/log\\//' /etc/supervisor/supervisord.conf \u0026\u0026   sed -i 's/\\$CWD/\\/data\\/log\\//' /etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig \u0026\u0026   rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /data \u0026\u0026 git clone https://github.com/crits/crits_services.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libtool autoconf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://codeload.github.com/plusvic/yara/tar.gz/v3.3.0 -s \u0026\u0026   tar -xvf v3.3.0 \u0026\u0026   cd yara-3.3.0 \u0026\u0026   ./bootstrap.sh \u0026\u0026   ./configure \u0026\u0026   make \u0026\u0026   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"0 * * * * freshclam\" \u003e /etc/cron.d/freshclam \u0026\u0026   echo \"0 * * * * cd /data/rules \u0026\u0026 git pull https://github.com/Yara-Rules/rules.git\" \u003e /etc/cron.d/yara-rules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /data \u0026\u0026  git clone --recursive git://github.com/MITRECND/htpy  \u0026\u0026   cd htpy \u0026\u0026   chmod +x setup.py \u0026\u0026   ./setup.py build \u0026\u0026   ./setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install shodan   pydeep   pylzma   bitstring   pythonwhois   yara-python   stix-validator   pyClamd   pycrypto   numpy   pyimpfuzzy   mod_pywebsocket   pexpect   pefile   oletools   stix==1.2.0.1   stix-ramrod==1.1.0   libtaxii==1.1.109   cybox==2.1.0.12   PyInstaller   passivetotal   cbapi   mixbox   requests==2.11.1   dnslib   pylibemu   yaraprocessor   pype32   pytx   m2crypto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/MITRECND/pynids.git \u0026\u0026   cd pynids \u0026\u0026   chmod +x setup.py \u0026\u0026   ./setup.py build \u0026\u0026   ./setup.py install \u0026\u0026   cd ../ \u0026\u0026   echo '/opt/libemu/lib/' \u003e /etc/ld.so.conf.d/libemu.conf \u0026\u0026   ldconfig \u0026\u0026   cd /data \u0026\u0026   git clone https://github.com/MITRECND/chopshop.git \u0026\u0026  cd chopshop \u0026\u0026   make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startup.sh",
            "/data/startup.sh"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s/from stix\\.utils import set_id_namespace/from mixbox\\.idgen import set_id_namespace/\" /data/crits_services/taxii_service/handlers.py \u0026\u0026   cd /data \u0026\u0026   git clone https://github.com/Yara-Rules/rules.git \u0026\u0026   chmod +x /data/startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/data/crits"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "crits_services_configuration.py",
            "/data/crits_services_configuration.py"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "CmdLine": [
            "cd /data \u0026\u0026 ./startup.sh \u0026\u0026 tail -f /data/log/startup.log"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}