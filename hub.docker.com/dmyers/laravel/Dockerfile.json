{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1",
      "SourceCode": "FROM php:7.1",
      "Platform": "",
      "From": {
        "Image": "php:7.1"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Derek Myers \u003carcticpro@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     build-essential     mysql-client     libpng-dev     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libxml2-dev     libmemcached-dev     zlib1g-dev     libicu-dev     libbz2-dev     libmagickwand-dev     libmagickcore-dev     locales     zip     git     jpegoptim     optipng     pngquant     \u0026\u0026 pecl channel-update pecl.php.net"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo en_US.UTF-8 UTF-8 \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis     xdebug     memcached     imagick     mailparse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable redis     xdebug     memcached     imagick     mailparse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mysqli     mbstring     pdo     pdo_mysql     mcrypt     pcntl     gd     zip     soap     bz2     exif     bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"max_execution_time=300\" \u003e $PHP_INI_DIR/conf.d/max-execution-time.ini \u0026\u0026     echo \"request_terminate_timeout=300\" \u003e $PHP_INI_DIR/conf.d/max-execution-time.ini \u0026\u0026     echo \"display_errors=stderr\" \u003e $PHP_INI_DIR/conf.d/display-errors.ini \u0026\u0026     echo \"expose_php=0\" \u003e $PHP_INI_DIR/conf.d/path-info.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"./vendor/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "php"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}