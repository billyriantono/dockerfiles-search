MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Tom Emmel <temmel@som.umaryland.edu>
    Name: maintainer
  - Env:
    - Key: TZ
      Value: America/New_York
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - Key: TERM
    Name: arg
    Value: linux
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: WORKFLOW_VERSION
    Name: arg
    Value: 3.2.0
  - Key: WORKFLOW_DOWNLOAD_URL
    Name: arg
    Value: http://sourceforge.net/projects/tigr-workflow/files/tigr-workflow/wf-${WORKFLOW_VERSION}.tar.gz
  - Key: ERGATIS_VERSION
    Name: arg
    Value: 2r19b5
  - Key: ERGATIS_DOWNLOAD_URL
    Name: arg
    Value: https://github.com/Virome-Collaboration-Group/ergatis/archive/v${ERGATIS_VERSION}.zip
  - Key: VIROME_VERSION
    Name: arg
    Value: master
  - Key: VIROME_DOWNLOAD_URL
    Name: arg
    Value: https://github.com/Virome-Collaboration-Group/virome_pipeline/archive/${VIROME_VERSION}.zip
  - Key: TRNASCAN_VERSION
    Name: arg
    Value: 2.0.2
  - Key: TRNASCAN_DOWNLOAD_URL
    Name: arg
    Value: http://trna.ucsc.edu/software/trnascan-se-${TRNASCAN_VERSION}.tar.gz
  - Key: INFERNAL_VERSION
    Name: arg
    Value: 1.1.2
  - Key: INFERNAL_DOWNLOAD_URL
    Name: arg
    Value: http://eddylab.org/infernal/infernal-${INFERNAL_VERSION}.tar.gz
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \tbuild-essential
      \tcurl \tcpanminus \tdh-make-perl \tapache2 \topenjdk-6-jre \tncbi-blast+ \tsqlite3
      \tzip \tunzip \tzsync \tlibdbi-perl \tlibdbd-sqlite3-perl \tlibmailtools-perl
      \tlibmldbm-perl \tlibxml-libxml-perl \tbioperl \tlibcpan-meta-perl \tlibcdb-file-perl
      \tlibcgi-session-perl \tlibconfig-inifiles-perl \tlibdate-manip-perl \tlibfile-spec-perl
      \tlibhtml-template-perl \tlibio-tee-perl \tlibjson-perl \tliblog-log4perl-perl
      \tlibmath-combinatorics-perl \tlibperlio-gzip-perl \tlibterm-progressbar-perl
      \tlibxml-parser-perl \tlibxml-twig-perl \tlibxml-rss-perl \tlibxml-writer-perl
      \tpython \tpython-pip   && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lib/libfile-mirror-perl_0.10-1_all.deb
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lib/liblog-cabin-perl_0.06-1_all.deb
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lib/libtree-nary-perl_1.3-1_all.deb
    - /tmp/
  - CmdLine:
    - dpkg -i /tmp/*.deb && rm /tmp/*.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "curl -s -SL $INFERNAL_DOWNLOAD_URL -o infernal.tar.gz \t&& tar -xzf infernal.tar.gz
      \t&& cd ./infernal-${INFERNAL_VERSION} && ./configure && make && make install
      \t&& rm /tmp/infernal.tar.gz && rm -rf /tmp/infernal-${INFERNAL_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -s -SL $TRNASCAN_DOWNLOAD_URL -o trnascan.tar.gz \t&& tar -xzf trnascan.tar.gz
      \t&& cd ./tRNAscan-SE-2.0 && ./configure && make && make install \t&& rm /tmp/trnascan.tar.gz
      && rm -rf /tmp/tRNAscan-SE-2.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/src/workflow
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/workflow
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - workflow.deploy.answers
    - /tmp/.
  - CmdLine:
    - "curl -s -SL $WORKFLOW_DOWNLOAD_URL -o workflow.tar.gz \t&& tar -xzf workflow.tar.gz
      -C /usr/src/workflow \t&& rm workflow.tar.gz \t&& mkdir -p -m 777 /opt/workflow/server-conf
      \t&& ./deploy.sh < /tmp/workflow.deploy.answers"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - workflow.log4j.properties
    - /opt/workflow/log4j.properties
  - CmdLine:
    - mkdir -p /usr/src/ergatis
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/ergatis
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ergatis.install.fix
    - /tmp/.
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ergatis.ini
    - /tmp/.
  - CmdLine:
    - "curl -s -SL $ERGATIS_DOWNLOAD_URL -o ergatis.zip \t&& unzip -o ergatis.zip
      \t&& rm ergatis.zip \t&& mkdir /opt/ergatis \t&& cd /usr/src/ergatis/ergatis-${ERGATIS_VERSION}
      \t&& cp /tmp/ergatis.install.fix . \t&& ./ergatis.install.fix \t&& perl Makefile.PL
      INSTALL_BASE=/opt/ergatis \t&& make \t&& make install \t&& mv /usr/src/ergatis/ergatis-${ERGATIS_VERSION}/htdocs
      /var/www/html/ergatis \t&& cp /tmp/ergatis.ini /var/www/html/ergatis/cgi/."
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/virome
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/virome
  - CmdLine:
    - "curl -s -SL $VIROME_DOWNLOAD_URL -o virome.zip \t&& unzip -o virome.zip \t&&
      rm virome.zip \t&& cd /usr/src/virome/virome_pipeline-${VIROME_VERSION} \t&&
      ./pre.install.fix \t&& perl Makefile.PL INSTALL_BASE=/opt/ergatis \t&& make
      \t&& make install \t&& mv /opt/ergatis/play_data /opt/play_data \t&& gunzip
      /opt/play_data/*.gz \t&& echo \"virome = /opt/projects/virome\" >> /var/www/html/ergatis/cgi/ergatis.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p -m 777 /usr/local/scratch \t&& mkdir -m 777 /usr/local/scratch/ergatis
      \t&& mkdir -m 777 /usr/local/scratch/ergatis/archival \t&& mkdir -m 777 /usr/local/scratch/workflow
      \t&& mkdir -m 777 /usr/local/scratch/workflow/id_repository \t&& mkdir -m 777
      /usr/local/scratch/workflow/runtime \t&& mkdir -m 777 /usr/local/scratch/workflow/runtime/pipeline
      \t&& mkdir -m 777 /usr/local/scratch/workflow/scripts \t&& mkdir -m 777 /tmp/pipelines_building"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - project.config
    - /tmp/.
  - CmdLine:
    - "mkdir -p /opt/projects/virome \t&& mkdir /opt/projects/virome/output_repository
      \t&& mkdir /opt/projects/virome/virome-cache-files \t&& mkdir /opt/projects/virome/software
      \t&& mkdir /opt/projects/virome/workflow \t&& mkdir /opt/projects/virome/workflow/lock_files
      \t&& mkdir /opt/projects/virome/workflow/project_id_repository \t&& mkdir /opt/projects/virome/workflow/runtime
      \t&& mkdir /opt/projects/virome/workflow/runtime/pipeline \t&& touch /opt/projects/virome/workflow/project_id_repository/valid_id_repository
      \t&& cp /tmp/project.config /opt/projects/virome/workflow/."
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.envvars
    - /etc/apache2/envvars
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.ports.conf
    - /etc/apache2/ports.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.000-default.conf
    - /etc/apache2/sites-enabled/000-default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ergatis.conf
    - /etc/apache2/conf-available/.
  - CmdLine:
    - mkdir -p -m 777 /tmp/lock/apache2 /tmp/log/apache2 /tmp/run/apache2
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod cgid && a2enconf ergatis
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - cp /opt/ergatis/software/ncbi-blast-2.5.0+/bin/* /usr/bin/.
    Name: run
    PrependShell: true
  - CmdLine:
    - "num_cores=$(grep -c ^processor /proc/cpuinfo) && \tfind /opt/ergatis/project_saved_templates
      -type f -exec         /usr/bin/perl -pi         -e 's/\\$;NODISTRIB\\$;\\s?=\\s?0/\\$;NODISTRIB\\$;='$num_cores'/g'
      {} \\;"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/scripts
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - execute_pipeline.sh
    - /opt/scripts/execute_pipeline.sh
  - CmdLine:
    - chmod 755 /opt/scripts/execute_pipeline.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - execute_pipeline_test.sh
    - /opt/scripts/execute_pipeline_test.sh
  - CmdLine:
    - chmod 755 /opt/scripts/execute_pipeline_test.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - find /opt/projects/virome -type d -exec chmod 777 {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - find /opt/workflow -type d -exec chmod 777 {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --shell /bin/bash virome
    Name: run
    PrependShell: true
  - Name: user
    User: virome
  - CmdLine:
    - /opt/scripts/execute_pipeline.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
