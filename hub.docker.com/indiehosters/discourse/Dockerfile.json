{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4.1",
      "SourceCode": "FROM ruby:2.4.1",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            },
            {
              "Key": "RUBY_GC_MALLOC_LIMIT",
              "Value": "90000000"
            },
            {
              "Key": "RUBY_GLOBAL_METHOD_CACHE_SIZE",
              "Value": "131072"
            },
            {
              "Key": "DISCOURSE_DB_HOST",
              "Value": "postgres"
            },
            {
              "Key": "DISCOURSE_REDIS_HOST",
              "Value": "redis"
            },
            {
              "Key": "DISCOURSE_SERVE_STATIC_ASSETS",
              "Value": "true"
            },
            {
              "Key": "GIFSICLE_VERSION",
              "Value": "1.88"
            },
            {
              "Key": "PNGQUANT_VERSION",
              "Value": "2.8.0"
            },
            {
              "Key": "DISCOURSE_VERSION",
              "Value": "2.2.0.beta2"
            },
            {
              "Key": "BUILD_DEPS",
              "Value": "\"      autoconf       jhead       libbz2-dev       libfreetype6-dev       libjpeg-dev       libjpeg-turbo-progs       libtiff-dev       pkg-config\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup --gid 1000 discourse  \u0026\u0026 adduser --system --uid 1000 --ingroup discourse --shell /bin/bash discourse  \u0026\u0026 cd /home/discourse  \u0026\u0026 mkdir -p ./tmp/sockets  \u0026\u0026 git clone --branch v${DISCOURSE_VERSION} https://github.com/discourse/discourse.git  \u0026\u0026 chown -R discourse:discourse .  \u0026\u0026 curl --silent --location https://deb.nodesource.com/setup_8.x | bash -  \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       ${BUILD_DEPS}       ghostscript       gsfonts       imagemagick       jpegoptim       libxml2       nodejs       optipng  \u0026\u0026 npm install svgo uglify-js@\"\u003c3\" -g  \u0026\u0026 cd /tmp  \u0026\u0026 curl -O http://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz  \u0026\u0026 tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz  \u0026\u0026 cd gifsicle-$GIFSICLE_VERSION  \u0026\u0026 ./configure \u0026\u0026 make install  \u0026\u0026 cd /tmp  \u0026\u0026 rm gifsicle-$GIFSICLE_VERSION.tar.gz  \u0026\u0026 rm -rf gifsicle-$GIFSICLE_VERSION  \u0026\u0026 git clone -b $PNGQUANT_VERSION --single-branch https://github.com/pornel/pngquant  \u0026\u0026 cd pngquant  \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026 rm -rf pngquant  \u0026\u0026 cd /home/discourse/discourse  \u0026\u0026 git remote set-branches --add origin tests-passed  \u0026\u0026 sed -i 's/daemonize true/daemonize false/g' ./config/puma.rb  \u0026\u0026 bundle config build.nokogiri --use-system-libraries  \u0026\u0026 bundle install --deployment --without test --without development  \u0026\u0026 cd /tmp  \u0026\u0026 curl -O https://get.enterprisedb.com/postgresql/postgresql-9.5.9-1-linux-x64-binaries.tar.gz  \u0026\u0026 tar zxf postgresql-9.5.9-1-linux-x64-binaries.tar.gz  \u0026\u0026 mv ./pgsql/bin/* /usr/local/bin/  \u0026\u0026 rm postgresql-9.5.9-1-linux-x64-binaries.tar.gz  \u0026\u0026 rm -rf ./pgsql  \u0026\u0026 apt-get remove -y --purge ${BUILD_DEPS}  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/discourse/discourse"
        },
        {
          "Name": "user",
          "User": "discourse"
        },
        {
          "CmdLine": [
            "bundle",
            "exec",
            "rails",
            "server",
            "-b",
            "0.0.0.0"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}