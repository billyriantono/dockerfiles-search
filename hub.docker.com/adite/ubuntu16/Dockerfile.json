{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "tescom \u003ctescom@atdt01410.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "PYENV_URL",
          "Name": "arg",
          "Value": "https://github.com/yyuu/pyenv.git"
        },
        {
          "Key": "PYENV_VENV_URL",
          "Name": "arg",
          "Value": "https://github.com/yyuu/pyenv-virtualenv.git"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "$HOME/.pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PYENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "PYTHON",
          "Name": "arg",
          "Value": "$PYENV_ROOT/versions/numpy/bin/python"
        },
        {
          "Key": "PIP",
          "Name": "arg",
          "Value": "$PYENV_ROOT/versions/numpy/bin/pip"
        },
        {
          "CmdLine": [
            "rm -f /etc/localtime         \u0026\u0026 ln -s /usr/share/zoneinfo/Japan /etc/localtime         \u0026\u0026 echo 'export TERM=xterm' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ca-certificates                 openssh-server                 curl                 locales                 wget                 vim                 dnsutils                 less                 cron                 make                 gcc                 g++                 git                 build-essential                 zlib1g-dev                 libbz2-dev                 libreadline-dev                 libsqlite3-dev                 libssl-dev                 libxml2-dev                 libxslt1-dev                 libmysqlclient-dev                 libssl1.0.0                 tk-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "ja_JP:ja"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone $PYENV_URL $PYENV_ROOT         \u0026\u0026 git clone $PYENV_VENV_URL $PYENV_ROOT/plugins/pyenv-virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'eval \"$(pyenv init -)\"' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'eval \"$(pyenv virtualenv-init -)\"' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "env PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.6.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv virtualenv 3.6.2 numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$PIP install gunicorn         mysqlclient         sqlalchemy         aiohttp         aiomysql         uvloop         requests         luigi         numpy         pandas         scipy         matplotlib         scikit-learn         statsmodels         ipython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd -D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}