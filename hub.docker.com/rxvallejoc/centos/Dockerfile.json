{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum -y install openssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.ssh \u0026\u0026 chmod 700 /root/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "kitchen_rsa",
            "/root/.ssh/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "kitchen_rsa.pub",
            "/root/.ssh/"
          ]
        },
        {
          "CmdLine": [
            "cat /root/.ssh/kitchen_rsa.pub \u003e\u003e /root/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 600 /root/.ssh/kitchen_rsa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install openssh-server sudo \u0026\u0026     ssh-keygen -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/^session\\s+required\\s+pam_loginuid.so$/session optional pam_loginuid.so/' /etc/pam.d/sshd \u0026\u0026     sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/^#?PubkeyAuthentication\\s+.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/requiretty/!requiretty/' /etc/sudoers \u0026\u0026     echo 'root:docker.io' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/langs=en_US.UTF-8/langs=en_US.utf8/' /etc/yum.conf \u0026\u0026        yum reinstall -y glibc-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install nc net-tools iptables"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y update;     yum -y install systemd; yum clean all;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /lib/systemd/system/sysinit.target.wants/; ls -1 | grep -v systemd-tmpfiles-setup.service | xargs rm;       rm -f /etc/systemd/system/*.wants/*;      rm -f /lib/systemd/system/local-fs.target.wants/*;       rm -f /lib/systemd/system/sockets.target.wants/*udev*;       rm -f /lib/systemd/system/sockets.target.wants/*initctl*;       rm -f /lib/systemd/system/basic.target.wants/*;      rm -f /lib/systemd/system/anaconda.target.wants/*;      systemctl preset sshd;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}