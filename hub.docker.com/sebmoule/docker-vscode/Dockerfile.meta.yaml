MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Sebastien Allamand "sebastien@allamand.com"
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    - Key: VSCODE
      Value: https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable
    - Key: TINI_VERSION
      Value: v0.16.1
    - Key: GOVERSION
      Value: 1.9.1
    Name: env
  - Key: VCF_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: org.label-schema.license
      Value: '"MIT"'
    - Key: org.label-schema.name
      Value: '"e.g. VsCode"'
    - Key: org.label-schema.url
      Value: '"https://code.visualstudio.com/"'
    - Key: org.label-schema.vcs-type
      Value: '"e.g. Git"'
    - Key: org.label-schema.vcs-url
      Value: '"e.g.https://github.com/allamand/docker-vscode"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    Name: label
  - Key: MYUSERNAME
    Name: arg
    Value: developer
  - Key: MYUID
    Name: arg
    Value: "2000"
  - Key: MYGID
    Name: arg
    Value: "200"
  - Env:
    - Key: MYUSERNAME
      Value: ${MYUSERNAME}
    - Key: MYUID
      Value: ${MYUID}
    - Key: MYGID
      Value: ${MYGID}
    Name: env
  - CmdLine:
    - apt-get update -qq &&     echo 'Installing OS dependencies' &&     apt-get install
      -qq -y --fix-missing       sudo software-properties-common libxext-dev libxrender-dev
      libxslt1.1       libgconf-2-4 libnotify4 libnspr4 libnss3 libnss3-nssdb       libxtst-dev
      libgtk2.0-0 libcanberra-gtk-module       libxss1       libxkbfile1       git
      curl tree locate net-tools telnet       emacs ruby make bash-completion       bash-completion
      python python-pip meld       nodejs-legacy npm       libxkbfile1       libxss1       locales
      netcat     &&     npm install -g npm &&     pip install --upgrade pip &&     pip
      install mkdocs &&     echo 'Cleaning up' &&     apt-get clean -qq -y &&     apt-get
      autoclean -qq -y &&     apt-get autoremove -qq -y &&      rm -rf /var/lib/apt/lists/*
      &&     rm -rf /tmp/* &&     updatedb &&     locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''Creating user: ${MYUSERNAME} wit UID $UID'' &&     mkdir -p /home/${MYUSERNAME}
      &&     echo "${MYUSERNAME}:x:${MYUID}:${MYGID}:Developer,,,:/home/${MYUSERNAME}:/bin/bash"
      >> /etc/passwd &&     echo "${MYUSERNAME}:x:${MYGID}:" >> /etc/group &&     sudo
      echo "${MYUSERNAME} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${MYUSERNAME}
      &&     sudo chmod 0440 /etc/sudoers.d/${MYUSERNAME} &&     sudo chown ${MYUSERNAME}:${MYUSERNAME}
      -R /home/${MYUSERNAME} &&     sudo chown root:root /usr/bin/sudo &&     chmod
      4755 /usr/bin/sudo &&     echo "Downloading Go ${GOVERSION}" &&     echo curl
      -o /tmp/go.tar.gz -J -L "https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz"
      &&     curl -o /tmp/go.tar.gz -J -L "https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz"
      &&     echo "Installing Go ${GOVERSION}" &&     sudo tar -zxf /tmp/go.tar.gz
      -C /usr/local/ &&     rm -f /tmp/go.tar.gz &&     echo ''Installing VsCode''
      &&     curl -o vscode.deb -J -L "$VSCODE" &&     dpkg -i vscode.deb && rm -f
      vscode.deb &&     echo ''Installing Cloud Foundry Client'' &&     curl -o cf_cli.deb
      -J -L ''https://cli.run.pivotal.io/stable?release=debian64&source=github'' &&     dpkg
      -i cf_cli.deb  && rm cf_cli.deb &&     sudo gem install cf_completion &&     echo
      "complete -C cf_completion cf" >> ~/.bash_profile &&     echo "Install OK"'
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/${MYUSERNAME}
    Name: env
  - Env:
    - Key: GOPATH
      Value: /home/${MYUSERNAME}/go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/home/${MYUSERNAME}/go/bin:/usr/local/go/bin
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Name: workdir
    Path: /home/${MYUSERNAME}/go
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini && chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - vscode
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
