MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Pablo Winant
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash dynosaur
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/dynosaur/
  - Name: user
    User: root
  - CmdLine:
    - apt-get install --no-install-recommends -y git bzip2 unzip libzmq5 nano hdf5-tools
      build-essential make gfortran
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.14.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: dynosaur
  - Env:
    - Key: NBUSER
      Value: dynosaur
    Name: env
  - CmdLine:
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash Miniconda3-latest-Linux-x86_64.sh -b -p /home/dynosaur/.opt/miniconda
    Name: run
    PrependShell: true
  - CmdLine:
    - rm Miniconda3-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/dynosaur/.opt/miniconda/bin/conda install -y -c conda-forge jupyterlab
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/dynosaur/.opt/miniconda/bin:$PATH
    Name: env
  - CmdLine:
    - jupyter
    - lab
    - --ip=0.0.0.0
    Name: cmd
    PrependShell: false
  - Name: user
    User: $NBUSER
  - CmdLine:
    - touch /home/$NBUSER/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - chown $NBUSER /home/$NBUSER/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'cacert=/etc/ssl/certs/ca-certificates.crt' > $HOME/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-0.6.0-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HOME/.opt/julia
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf julia-0.6.0-linux-x86_64.tar.gz -C $HOME/.opt/julia --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - rm julia-0.6.0-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/dynosaur/.opt/julia/bin:$PATH
    Name: env
  - CmdLine:
    - julia -e 'Pkg.add("IJulia")'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.add("PyPlot");            Pkg.add("Gadfly");            Pkg.add("SymEngine");            Pkg.add("AxisArrays");            Pkg.add("YAML")'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.clone("https://github.com/EconForge/Dolang.git")'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.clone("https://github.com/EconForge/Dyno.git")'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.build("Dyno")'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get install --no-install-recommends -y libfftw3-double3 libfftw3-single3
    Name: run
    PrependShell: true
  - Name: user
    User: $NBUSER
  - CmdLine:
    - julia -e 'Pkg.clone("https://github.com/EconForge/Dolo.jl.git")'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'using Dolo'
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/EconForge/dolo_models.git /home/dynosaur/dolo_examples
    Name: run
    PrependShell: true
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
