MetaArgs:
- DefaultValue: latest
  Key: RUBY_VERSION
  ProvidedValue: null
  Value: latest
Stages:
- BaseName: ruby:${RUBY_VERSION}
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Michael Baudino <michael.baudino@alpine-lab.com>"'
    Name: label
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: '"3.0.2"'
    - Key: BUNDLER_VERSION
      Value: '"1.17.3"'
    - Key: GOSU_VERSION
      Value: '"1.11"'
    Name: env
  - Env:
    - Key: PORT
      Value: '"5000"'
    - Key: BUNDLE_PATH
      Value: '"/bundle"'
    - Key: BUNDLE_BIN
      Value: '"/bundle/bin"'
    - Key: BUNDLE_APP_CONFIG
      Value: '"/bundle"'
    - Key: GEM_HOME
      Value: '"/bundle/global"'
    - Key: PATH
      Value: '"/app/bin:/bundle/bin:/bundle/global/bin:${PATH}"'
    - Key: HISTFILE
      Value: '"/config/.bash_history"'
    - Key: GIT_COMMITTER_NAME
      Value: '"Just some fake name to be able to git-clone"'
    - Key: GIT_COMMITTER_EMAIL
      Value: '"whatever@this-user-is-not-supposed-to-git-push.anyway"'
    - Key: DISABLE_SPRING
      Value: '"true"'
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install --assume-yes --no-install-recommends --no-install-suggests       apt-transport-https       lsb-release  &&
      echo "deb https://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg
      main" > /etc/apt/sources.list.d/pgdg.list  && curl --silent https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add -  && echo "deb https://deb.nodesource.com/node_10.x $(lsb_release
      -cs) main" > /etc/apt/sources.list.d/nodesource.list  && curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      | apt-key add -  && echo "deb https://dl.yarnpkg.com/debian/ stable main" >
      /etc/apt/sources.list.d/yarn.list  && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -  && echo "deb https://cli-assets.heroku.com/branches/stable/apt
      ./" > /etc/apt/sources.list.d/heroku.list  && curl -sS https://cli-assets.heroku.com/apt/release.key
      | apt-key add -  && apt-get update  && apt-get install --assume-yes --no-install-recommends
      --no-install-suggests       heroku       nano       nodejs       postgresql-client-10       vim       yarn  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)" dpkgArch="$(dpkg --print-architecture | cut
      -d- -f1)"  && for keyserver in $(shuf -e keys.gnupg.net ha.pool.sks-keyservers.net
      hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com pgp.mit.edu); do       gpg
      --batch --no-tty --keyserver "$keyserver" --recv-keys "B42F6819007F00F88E364FD4036A9C25BF357DD4"
      && break || :;     done  && curl -sSL -o /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${dpkgArch}"  &&
      curl -sSL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${dpkgArch}.asc"
      | gpg --batch --verify - /usr/local/bin/gosu  && chmod +x /usr/local/bin/gosu  &&
      rm -rf "${GNUPGHOME}"
    Name: run
    PrependShell: true
  - CmdLine:
    - gem update --system ${RUBYGEMS_VERSION}  && gem install bundler:${BUNDLER_VERSION}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dotfiles/*
    - /etc/skel/
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - ${PORT}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/*
    - /usr/local/bin/
  - CmdLine:
    - ln -s /usr/local/bin/gosu-wrapper /usr/local/bin/bypass
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu-wrapper
    - bundler-wrapper
    - yarn-wrapper
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - foreman
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: ruby:${RUBY_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:${RUBY_VERSION}
