{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:19.04",
      "SourceCode": "FROM ubuntu:19.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:19.04"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "6000-6010"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2375"
          ]
        },
        {
          "CmdLine": [
            "apt -y update     \u0026\u0026 apt -y install         apt-transport-https         curl         software-properties-common     \u0026\u0026 (yes | unminimize )"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\" |     tee /etc/apt/sources.list.d/azure-cli.list \u0026\u0026     curl -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:git-core/ppa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt -y update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt -y install     azure-cli     dnsutils     docker-ce     emacs     git     iputils-ping     jq     kubectl     make     man-db     net-tools     python3-pip     software-properties-common     sudo     sudo     tzdata     wget     zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL \"https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location --fail https://manpages.ubuntu.com/dman \u003e /usr/bin/dman \u0026\u0026 chmod 555 /usr/bin/dman \u0026\u0026 echo '(setq manual-program \"dman\")' \u003e\u003e /etc/skel/.emacs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/python python /usr/bin/python3 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "developer",
              "Value": "\"developer\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo '%sudo  ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd  -ms /bin/bash $developer \u0026\u0026 usermod -aG sudo $developer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/$developer"
        },
        {
          "Name": "user",
          "User": "$developer"
        },
        {
          "CmdLine": [
            "DISPLAY=host.docker.internal:0 bash -l -c emacs"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/neilswinton/emacs-developer\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}