{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add unzip wget openssl ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "mkdir plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd plugins \u0026\u0026   wget --content-disposition https://github.com/eric-mathison/docker-wordpress-php/blob/master/files/advanced-custom-fields-pro.zip?raw=true \u0026\u0026   wget --content-disposition https://github.com/eric-mathison/docker-wordpress-php/blob/master/files/astra-addon-plugin-1.6.13.zip?raw=true \u0026\u0026   wget --content-disposition https://github.com/eric-mathison/docker-wordpress-php/blob/master/files/elementor-pro-2.4.4.zip?raw=true \u0026\u0026   wget https://downloads.wordpress.org/plugin/wp-mail-smtp.1.4.1.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/wordpress-seo.10.0.1.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/redirection.3.7.3.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/elementor.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/redis-cache.1.4.1.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/nginx-cache.1.0.4.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/limit-login-attempts-reloaded.2.7.3.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/autoptimize.2.4.4.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/updraftplus.1.16.8.zip \u0026\u0026   wget https://downloads.wordpress.org/plugin/custom-post-type-ui.1.6.1.zip \u0026\u0026   unzip -q \"*.zip\" \u0026\u0026   rm *.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir themes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd themes \u0026\u0026   wget --content-disposition https://github.com/eric-mathison/docker-wordpress-php/blob/master/files/astra.1.6.8.zip?raw=true \u0026\u0026   wget --content-disposition https://github.com/eric-mathison/docker-wordpress-php/blob/master/files/astra-child-theme.zip?raw=true \u0026\u0026   unzip -q \"*.zip\" \u0026\u0026   rm *.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex;   apt-get update;   apt-get install -y --no-install-recommends     mysql-client   ;     pecl install redis   \u0026\u0026 echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/redis.ini   \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibjpeg-dev \t\tlibpng-dev \t; \t\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-install gd mysqli opcache zip; \t\tapt-mark auto '.*' \u003e /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \t\t| awk '/=\u003e/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo 'pm.status_path = /status';     echo 'ping.path = /ping';   } \u003e /usr/local/etc/php-fpm.d/metrics.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wordpress.ini",
            "/usr/local/etc/php/conf.d/wordpress.ini"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_VERSION",
              "Value": "5.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_SHA1",
              "Value": "f1bff89cc360bf5ef7086594e8a9b68b4cbf2192"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\"; \techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \ttar -xzf wordpress.tar.gz -C /usr/src/; \trm wordpress.tar.gz; \tchown -R www-data:www-data /usr/src/wordpress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/plugins",
            "/usr/src/plugins/"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /usr/src/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/themes",
            "/usr/src/themes/"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /usr/src/themes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}