MetaArgs: null
Stages:
- BaseName: node:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"John Murch <john@tomesoftware.com>, Mike Swierenga <mike@tomesoftware.com>"'
    - Key: description
      Value: '"Canon/Tome Paddle-API Dockfile"'
    Name: label
  - Env:
    - Key: NODE_ENV
      Value: development
    Name: env
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - npm install nodemon -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install knex -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --no-optional
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - $PORT
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zbar-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-file
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends apt-utils software-properties-common
      python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         build-essential         curl         cmake         git         wget         unzip         yasm         pkg-config         libopenblas-dev         gfortran         libtbb2         libjpeg62-turbo-dev         libtiff5-dev         libjasper-dev         libpng12-dev         libgtk2.0-dev         libavcodec-dev         libavformat-dev         libswscale-dev         libv4l-dev         libxvidcore-dev         libx264-dev         libtbb-dev         libjpeg-dev         libpng-dev         libtiff-dev         libpq-dev         libatlas-base-dev         python-dev         python-pip         python3-pip         python-setuptools         python-wheel         python3-setuptools         python3-wheel         &&   apt-get
      clean &&   apt-get autoremove &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - python --version
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 --version
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install imutils
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir opencv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencv
  - Env:
    - Key: OPENCV_VERSION
      Value: '"3.4.0"'
    Name: env
  - CmdLine:
    - wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip ${OPENCV_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opencv/opencv-${OPENCV_VERSION}/cmake_binary
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencv/opencv-${OPENCV_VERSION}/cmake_binary
  - CmdLine:
    - cmake -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -DWITH_CUDA=OFF   -DENABLE_AVX=ON   -DWITH_OPENGL=ON   -DWITH_OPENCL=ON   -DWITH_IPP=ON   -DWITH_TBB=ON   -DWITH_EIGEN=ON   -DWITH_V4L=ON   -DBUILD_TESTS=OFF   -DBUILD_PERF_TESTS=OFF   -DCMAKE_BUILD_TYPE=RELEASE   -DCMAKE_INSTALL_PREFIX=$(python3.4
      -c "import sys; print(sys.prefix)")   -DPYTHON_EXECUTABLE=$(which python3.4)   -DPYTHON_INCLUDE_DIR=$(python3.4
      -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")   -DPYTHON_PACKAGES_PATH=$(python3.4
      -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
      ..
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm
    - start
    Name: entrypoint
    PrependShell: false
  From:
    Image: node:latest
  Name: ""
  Platform: ""
  SourceCode: FROM node:latest
