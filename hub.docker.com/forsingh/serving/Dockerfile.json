{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Anton Loss @avloss (originally Jeremiah Harmsen \u003cjeremiah@google.com\u003e)",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         build-essential         curl         git         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         python-numpy         python-pip         software-properties-common         swig         zip         zlib1g-dev         libcurl3-dev         vim         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python get-pip.py \u0026\u0026     rm get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install enum34 futures mock six \u0026\u0026     pip install --pre 'protobuf\u003e=3.0.0a3' \u0026\u0026     pip install -i https://testpypi.python.org/simple --pre grpcio \u0026\u0026     pip install flask \u0026\u0026     pip install jupyter \u0026\u0026     pip install scipy \u0026\u0026     pip install scikit-learn \u0026\u0026     pip install requests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:openjdk-r/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y openjdk-8-jdk openjdk-8-jre-headless \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"startup --batch\" \u003e\u003e/root/.bazelrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\"     \u003e\u003e/root/.bazelrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BAZELRC",
              "Value": "/root/.bazelrc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BAZEL_VERSION",
              "Value": "0.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "update-ca-certificates -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /bazel \u0026\u0026     cd /bazel \u0026\u0026     curl -fSsL -O  https://github.com/bazelbuild/bazel/releases/download/0.8.1/bazel-0.8.1-installer-linux-x86_64.sh \u0026\u0026     chmod +x bazel-*.sh \u0026\u0026     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \u0026\u0026     cd / \u0026\u0026     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /serving"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tensorflow",
            "/serving/tensorflow"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tensorflow_serving",
            "/serving/tensorflow_serving"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tf_models",
            "/serving/tf_models"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools",
            "/serving/tools"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "WORKSPACE",
            "/serving/WORKSPACE"
          ]
        },
        {
          "CmdLine": [
            "cd /serving/tensorflow \u0026\u0026     yes \"\" | ./configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install waitress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /serving/ \u0026\u0026     bazel build -c opt --local_resources 2048,.5,1.0 tensorflow_serving/..."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install tensorflow matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/models \u0026\u0026     mkdir -p /root/jupyter_notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "example_jupyter/setup.sh",
            "/root/setup.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "example_jupyter/tf_serving_rest_example.ipynb",
            "/root/jupyter_notebooks/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888",
            "8915",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/root/setup.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}