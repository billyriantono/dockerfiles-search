{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "“Alexey Osipov\u003cme@flcl.me\u003e”"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libblas-dev     liblapack-dev    libatlas-base-dev     mecab     mecab-naist-jdic     libmecab-dev     gfortran     libav-tools     python3-setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TENSORFLOW_VERSION",
              "Value": "1.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install     http://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install         keras         sklearn         jupyter         ipykernel         scipy         simpy         matplotlib         numpy         pandas         plotly         sympy         mecab-python3         librosa         Pillow         h5py         google-api-python-client         git+https://github.com/tflearn/tflearn.git         \u0026\u0026     python -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONFIG",
              "Value": "/root/.jupyter/jupyter_notebook_config.py"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFIG_IPYTHON",
              "Value": "/root/.ipython/profile_default/ipython_config.py"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config --allow-root \u0026\u0026     ipython profile create"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.ip = '*'\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.NotebookApp.open_browser = False\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.NotebookApp.iopub_data_rate_limit=10000000000\" \u003e\u003e${CONFIG} \u0026\u0026     echo \"c.MultiKernelManager.default_kernel_name = 'python3'\" \u003e\u003e${CONFIG}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.InteractiveShellApp.exec_lines = ['%matplotlib inline']\" \u003e\u003e${CONFIG_IPYTHON}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "notebooks",
            "/notebooks"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebooks"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/notebooks\""
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--allow-root"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}