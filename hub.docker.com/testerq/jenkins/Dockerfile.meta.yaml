MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:alpine
  Commands:
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - CmdLine:
    - install-plugins.sh robot ansible antisamy-markup-formatter build-timeout credentials-binding
      timestamper ws-cleanup      workflow-aggregator pipeline-stage-view git ssh-slaves
      matrix-auth pam-auth ldap email-ext mailer subversion     analysis-collector
      analysis-core copy-to-slave copyartifact copy-data-to-workspace-plugin blueocean
      performance plot covcomplplot parameterized-trigger     jdk-tool command-launcher
      bouncycastle-api zap allure-jenkins-plugin nodelabelparameter hubot-steps config-file-provider
      ssh-agent     sonar ant gradle github-branch-source android-emulator open-stf
      jslint toolenv cloudbees-folder mashup-portlets-plugin pipeline-github-lib     localization-support
      localization-zh-cn locale artifactory gitlab-plugin ruby-runtime gitlab-hook
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $JENKINS_HOME
  - Name: user
    User: root
  - Key: JMETER_VERSION
    Name: arg
    Value: "5.1"
  - Env:
    - Key: JMETER_HOME
      Value: /usr/local/jmeter
    Name: env
  - CmdLine:
    - "curl -fsSL -O https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz
      && \t   tar -xzf apache-jmeter-${JMETER_VERSION}.tgz && mv apache-jmeter-${JMETER_VERSION}
      ${JMETER_HOME} &&      rm -rf apache-jmeter-${JMETER_VERSION}.tgz \t\t\t${JMETER_HOME}/bin/examples
      \t\t\t${JMETER_HOME}/bin/templates \t\t\t${JMETER_HOME}/bin/*.cmd \t\t\t${JMETER_HOME}/bin/*.bat
      \t\t\t${JMETER_HOME}/docs \t\t\t${JMETER_HOME}/printable_docs &&     sed -i
      \"s/# RUN_IN_DOCKER/RUN_IN_DOCKER/g\" $JMETER_HOME/bin/jmeter"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -LO http://search.maven.org/remotecontent?filepath=kg/apc/cmdrunner/2.2/cmdrunner-2.2.jar
      && \tmv cmdrunner-2.2.jar $JMETER_HOME/lib && \tcurl -LO http://search.maven.org/remotecontent?filepath=kg/apc/jmeter-plugins-manager/1.3/jmeter-plugins-manager-1.3.jar
      && \tmv jmeter-plugins-manager-1.3.jar $JMETER_HOME/lib/ext && \tjava -cp $JMETER_HOME/lib/ext/jmeter-plugins-manager-1.3.jar
      org.jmeterplugins.repository.PluginManagerCMDInstaller"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.properties'
    - ${JMETER_HOME}/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rmi_keystore.jks
    - ${JMETER_HOME}/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - m2u.jar
    - $JAVA_HOME/lib/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - j2u
    - /usr/bin/
  - Key: ALLURE_VERSION
    Name: arg
    Value: 2.7.0
  - Env:
    - Key: ALLURE_HOME
      Value: /usr/local/allure-${ALLURE_VERSION}
    Name: env
  - Key: SHA_ALLURE
    Name: arg
    Value: 0ff4e7f913428e3d519e08edf597ade171922f8d71925eb4ae975eafb84929a0
  - CmdLine:
    - "curl -fsSL -O https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
      &&     echo \"${SHA_ALLURE}  allure-${ALLURE_VERSION}.tgz\" | sha256sum -c -
      && \ttar -xzf allure-${ALLURE_VERSION}.tgz -C /usr/local/ &&     rm -f allure-${ALLURE_VERSION}.tgz"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache python3 libxml2 libxslt vim &&     ln -s /usr/bin/pip3 /usr/bin/pip
      &&     apk add --no-cache gcc libxml2-dev libc-dev python3-dev libxslt-dev linux-headers
      &&     pip install --no-cache-dir -U pip &&     pip install --no-cache-dir bzt
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache libffi-dev openssl-dev make &&      pip install --no-cache-dir
      ansible pycrypto &&      curl -L https://storage.googleapis.com/kubernetes-release/release/`curl
      -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl           -o
      /usr/local/bin/kubectl &&      chmod +x /usr/local/bin/kubectl &&      apk del
      gcc libxml2-dev libc-dev python3-dev libxslt-dev linux-headers make libffi-dev
      openssl-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${ALLURE_HOME}/bin:${JMETER_HOME}/bin:${PATH}
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - Health:
      Interval: 300000000000
      Test:
      - CMD-SHELL
      - curl -f http://localhost:8080/login || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: jenkins/jenkins:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:alpine
