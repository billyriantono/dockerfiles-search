{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine",
      "SourceCode": "FROM gliderlabs/alpine",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine"
      },
      "Commands": [
        {
          "Maintainer": "kost - https://github.com/kost",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "RT_VERSION",
              "Value": "4.2.12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add openssl mysql-client postgresql-client fcgi lighttpd perl perl-lwp-protocol-https perl-dbd-pg perl-dbd-mysql perl-dbd-sqlite perl-cgi-psgi perl-cgi perl-fcgi perl-term-readkey perl-xml-rss perl-crypt-ssleay perl-crypt-eksblowfish perl-crypt-x509 perl-html-mason-psgihandler perl-fcgi-procmanager perl-mime-types perl-list-moreutils perl-json perl-html-quoted perl-html-scrubber perl-email-address perl-text-password-pronounceable perl-email-address-list perl-html-formattext-withlinks-andtables perl-html-rewriteattributes perl-text-wikiformat perl-text-quoted perl-datetime-format-natural perl-date-extract perl-data-guid perl-data-ical perl-string-shellquote perl-convert-color perl-dbix-searchbuilder perl-file-which perl-css-squish perl-tree-simple perl-plack perl-log-dispatch perl-module-versions-report perl-symbol-global-name perl-devel-globaldestruction perl-parallel-prefork perl-cgi-emulate-psgi perl-text-template perl-net-cidr perl-apache-session perl-locale-maketext-lexicon perl-locale-maketext-fuzzy perl-regexp-common-net-cidr perl-module-refresh perl-date-manip perl-regexp-ipv6 perl-text-wrapper perl-universal-require perl-role-basic perl-convert-binhex perl-test-sharedfork perl-test-tcp perl-server-starter perl-starlet make gnupg gcc perl-dev libc-dev \u0026\u0026     rm -f /var/cache/apk/* \u0026\u0026     wget -O /tmp/rt-$RT_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/rt-$RT_VERSION.tar.gz \u0026\u0026     tar -xvz -C /tmp -f /tmp/rt-$RT_VERSION.tar.gz \u0026\u0026     cd /tmp/rt-$RT_VERSION \u0026\u0026     (echo y;echo o conf prerequisites_policy follow;echo o conf commit)|cpan \u0026\u0026     cpan -f GnuPG::Interface \u0026\u0026     ./configure --with-web-user=lighttpd --with-web-group=lighttpd \u0026\u0026     make fixdeps \u0026\u0026     make install \u0026\u0026     cd / \u0026\u0026 rm -rf /tmp/rt-$RT_VERSION rt-$RT_VERSION.tar.gz \u0026\u0026     echo \"Success\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/run.sh",
            "/scripts/run.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/mod_fastcgi.conf",
            "/etc/lighttpd/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/lighttpd.conf",
            "/etc/lighttpd/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /scripts/pre-exec.d \u0026\u0026 mkdir /scripts/pre-init.d \u0026\u0026 mkdir /scripts/pre-initdb.d \u0026\u0026 mkdir /scripts/post-initdb.d \u0026\u0026 chmod -R 755 /scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/scripts/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}