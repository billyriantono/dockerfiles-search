{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "multiarch/ubuntu-debootstrap:amd64-wily",
      "SourceCode": "FROM multiarch/ubuntu-debootstrap:amd64-wily",
      "Platform": "",
      "From": {
        "Image": "multiarch/ubuntu-debootstrap:amd64-wily"
      },
      "Commands": [
        {
          "Key": "ARCH",
          "Name": "arg",
          "Value": "amd64"
        },
        {
          "Key": "DOWNLOAD_URL",
          "Name": "arg",
          "Value": "\"https://openhab.ci.cloudbees.com/job/openHAB-Distribution/lastSuccessfulBuild/artifact/distributions/openhab-online/target/openhab-online-2.0.0-SNAPSHOT.zip\""
        },
        {
          "Env": [
            {
              "Key": "APPDIR",
              "Value": "\"/openhab\""
            },
            {
              "Key": "OPENHAB_HTTP_PORT",
              "Value": "'8080'"
            },
            {
              "Key": "OPENHAB_HTTPS_PORT",
              "Value": "'8443'"
            },
            {
              "Key": "EXTRA_JAVA_OPTS",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "org.label-schema.license",
              "Value": "\"EPL\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"openHAB\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"http://www.openhab.com/\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-type",
              "Value": "\"Git\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/openhab/openhab-docker.git\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --no-install-recommends -y       software-properties-common       sudo       unzip       wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026   add-apt-repository -y ppa:webupd8team/java \u0026\u0026   apt-get update \u0026\u0026   apt-get install --no-install-recommends -y oracle-java8-installer \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   rm -rf /var/cache/oracle-jdk8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos '' --home ${APPDIR} openhab \u0026\u0026    adduser openhab sudo \u0026\u0026    groupadd -g 14 uucp2 \u0026\u0026    groupadd -g 16 dialout2 \u0026\u0026    groupadd -g 18 dialout3 \u0026\u0026    groupadd -g 32 uucp3 \u0026\u0026    adduser openhab dialout \u0026\u0026    adduser openhab uucp \u0026\u0026    adduser openhab uucp2 \u0026\u0026    adduser openhab dialout2 \u0026\u0026    adduser openhab dialout3 \u0026\u0026    adduser openhab uucp3 \u0026\u0026    echo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers.d/openhab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${APPDIR}"
        },
        {
          "CmdLine": [
            "wget -nv -O /tmp/openhab.zip ${DOWNLOAD_URL} \u0026\u0026    unzip -q /tmp/openhab.zip -d ${APPDIR} \u0026\u0026    rm /tmp/openhab.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${APPDIR}/userdata/logs \u0026\u0026 touch ${APPDIR}/userdata/logs/openhab.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -a /openhab/userdata /openhab/userdata.dist \u0026\u0026     cp -a /openhab/conf /openhab/conf.dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "chown -R openhab:openhab ${APPDIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "openhab"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${APPDIR}/conf",
            "${APPDIR}/userdata",
            "${APPDIR}/addons"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5555",
            "8080",
            "8443"
          ]
        },
        {
          "CmdLine": [
            "server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}