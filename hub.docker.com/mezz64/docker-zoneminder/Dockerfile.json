{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/ubuntu:xenial",
      "SourceCode": "FROM lsiobase/ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "lsiobase/ubuntu:xenial"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"sparklyballs\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "\"noninteractive\""
        },
        {
          "Env": [
            {
              "Key": "MYSQL_DIR",
              "Value": "\"/config/data\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DATADIR",
              "Value": "$MYSQL_DIR/database"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHMEM",
              "Value": "\"50%\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_DEPENDENCIES",
          "Name": "arg",
          "Value": "\"\tcmake \tdh-autoreconf \tdpatch \tg++ \tgcc \tgit \tlibavcodec-dev \tlibavdevice-dev \tlibavfilter-dev \tlibavformat-dev \tlibavresample-dev \tlibavutil-dev \tlibcurl4-openssl-dev \tlibjpeg-turbo8-dev \tlibmp4v2-dev \tlibmysqlclient-dev \tlibnetpbm10-dev \tlibpcre3-dev \tlibpolkit-gobject-1-dev \tlibpostproc-dev \tlibswscale-dev \tlibtheora-dev \tlibtool \tlibv4l-dev \tlibvlccore-dev \tlibvlc-dev \tlibvorbis-dev \tlibvpx-dev \tlibx264-dev \tmake \tphp-dev \tphp-pear \tyasm\""
        },
        {
          "Key": "RUNTIME_DEPENDENCIES",
          "Name": "arg",
          "Value": "\"\tapache2 \tffmpeg \tlibapache2-mod-php \tlibarchive-zip-perl \tlibav-tools \tlibbz2-dev \tlibclass-std-fast-perl \tlibcrypt-mysql-perl \tlibcurl3 \tlibdata-dump-perl \tlibdata-uuid-perl \tlibdate-manip-perl \tlibdbd-mysql-perl \tlibdbi-perl \tlibdevice-serialport-perl \tlibio-socket-multicast-perl \tlibjpeg-turbo8 \tlibjson-perl \tlibmime-lite-perl \tlibmime-perl \tlibmp4v2-2 \tlibpcre3 \tlibsoap-wsdl-perl \tlibssl-dev \tlibsys-cpu-perl \tlibsys-meminfo-perl \tlibsys-mmap-perl \tlibyaml-perl \tlibvlc5 \tlibvlccore8 \tlibwww-perl \tmariadb-client \tmariadb-server \tnet-tools \tphp \tphp-gd \tphp-cli \tphp-mysql \tunzip \tvlc-data \tzip\""
        },
        {
          "CmdLine": [
            "echo \"**** add repositories ****\" \u0026\u0026  apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 \u0026\u0026  echo \"deb [arch=amd64,i386] http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" \u003e\u003e \t/etc/apt/sources.list.d/mariadb.list \u0026\u0026  echo \"deb-src http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" \u003e\u003e \t/etc/apt/sources.list.d/mariadb.list \u0026\u0026  echo \"**** install packages ****\" \u0026\u0026  apt-get update \u0026\u0026  apt-get install -y \t--no-install-recommends \t$BUILD_DEPENDENCIES \t$RUNTIME_DEPENDENCIES"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"**** install php_apcu and php_apcu-bc ****\" \u0026\u0026  pecl install apcu \u0026\u0026  pecl install apcu_bc-beta \u0026\u0026  echo \"extension=apc.so\" \u003e\u003e /etc/php/7.0/mods-available/z_apc.ini \u0026\u0026  echo \"extension=apcu.so\" \u003e\u003e /etc/php/7.0/mods-available/apcu.ini \u0026\u0026  ln -sf \t/etc/php/7.0/mods-available/apcu.ini \t/etc/php/7.0/apache2/conf.d/20-apcu.ini \u0026\u0026  ln -sf \t/etc/php/7.0/mods-available/apcu.ini \t/etc/php/7.0/cli/conf.d/20-apcu.ini \u0026\u0026  ln -sf \t/etc/php/7.0/mods-available/z_apc.ini \t/etc/php/7.0/apache2/conf.d/40-apc.ini \u0026\u0026  ln -sf \t/etc/php/7.0/mods-available/z_apc.ini \t/etc/php/7.0/cli/conf.d/40-apc.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"**** build zoneminder ****\" \u0026\u0026  git clone https://github.com/ZoneMinder/ZoneMinder /tmp/zoneminder \u0026\u0026  cd /tmp/zoneminder \u0026\u0026  git submodule update --init --recursive \u0026\u0026  cmake \t-DCMAKE_INSTALL_PREFIX=/usr \t-DZM_CACHEDIR=/var/cache/zoneminder \t-DZM_CGIDIR=/usr/share/webapps/zoneminder/cgi-bin \t-DZM_CONFIG_DIR=/etc/zm \t-DZM_CONFIG_SUBDIR=/etc/zm/conf.d \t-DZM_DIR_EVENTS=/data/zoneminder/events \t-DZM_DIR_IMAGES=/data/zoneminder/images \t-DZM_DIR_SOUNDS=/data/zoneminder/sounds \t-DZM_LOGDIR=/config/log/zoneminder \t-DZM_PATH_ARP=/usr/sbin/arp \t-DZM_RUNDIR=/var/run/zoneminder \t-DZM_SOCKDIR=/var/run/zoneminder \t-DZM_WEBDIR=/usr/share/webapps/zoneminder/htdocs \t-DZM_WEB_GROUP=abc \t-DZM_WEB_USER=abc \t. \u0026\u0026  make \u0026\u0026  make install \u0026\u0026  echo \"**** configure zoneminder exports folder and add abc to video group ****\" \u0026\u0026  sed -i \t-e \"s#\\(ZM_DIR_EXPORTS.*=\\).*#\\1/data/zoneminder/exports#g\" \t/etc/zm/conf.d/01-system-paths.conf \u0026\u0026  adduser abc video"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"**** add zmeventserver ****\" \u0026\u0026  git clone https://github.com/pliablepixels/zmeventserver /tmp2/zmevents \u0026\u0026  cd /tmp2/zmevents \u0026\u0026  cp /tmp2/zmevents/zmeventnotification.pl /usr/bin/ \u0026\u0026  perl -MCPAN -e \"force install Net::WebSocket::Server\" \u0026\u0026  perl -MCPAN -e \"force install LWP::Protocol::https\" \u0026\u0026  perl -MCPAN -e \"force install Config::IniFiles\" \u0026\u0026  mkdir /etc/apache2/ssl/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"**** configure apache ****\" \u0026\u0026  cd /tmp/zoneminder \u0026\u0026  cp misc/apache.conf /defaults/default.conf \u0026\u0026  a2enmod cgi rewrite \u0026\u0026  sed -i \t-e \"s/\\(.*APACHE_RUN_USER=\\).*/\\1abc/g\" \t-e \"s/\\(.*APACHE_RUN_GROUP=\\).*/\\1abc/g\" \t\t/etc/apache2/envvars \u0026\u0026  echo \"**** configure my.cnf and mysqld_safe ****\" \u0026\u0026  sed \t-i -e 's/^#sql_mode/sql_mode/g' \t-i -e 's/NO_ENGINE_SUBSTITUTION.*/NO_ENGINE_SUBSTITUTION/g' \t-i -e 's/key_buffer\\b/key_buffer_size/g' \t-i -e 's#/var/log/mysql#/config/log/mysql#g' \t-i -e 's/\\(max_allowed_packet.*=\\).*/\\1 128M/g' \t-i -e 's/\\(user.*=\\).*/\\1 abc/g' \t-i -e 's/\\(wait_timeout.*=\\).*/\\1 1200/g' \t-i -e \"s#\\(datadir.*=\\).*#\\1 $DATADIR#g\" \t-ri -e 's/^(bind-address|skip-networking)/;\\1/' \t\t/etc/mysql/my.cnf \u0026\u0026  sed -i \t\"s/user='mysql'/user='abc'/g\" \t\t/usr/bin/mysqld_safe"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"**** uninstall build packages and reinstall runtime packages ****\" \u0026\u0026  apt-get purge -y --auto-remove \t$BUILD_DEPENDENCIES \u0026\u0026  apt-get install -y \t--no-install-recommends \t$RUNTIME_DEPENDENCIES \u0026\u0026  echo \"**** cleanup ****\" \u0026\u0026  rm -rf \t/tmp/* \t/var/lib/apt/lists/* \t/var/lib/mysql \t/var/tmp/* \u0026\u0026  mkdir -p \t/var/lib/mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/data"
          ]
        }
      ]
    }
  ]
}