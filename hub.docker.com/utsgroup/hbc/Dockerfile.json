{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Maintainer": "camohob \u003cv.samonov@mail.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HBC_ENV",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/vendor"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/tmp/.ssh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php-log.conf",
            "/usr/local/etc/php-fpm.d/zz-log.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php-$HBC_ENV.ini",
            "/usr/local/etc/php/conf.d/php.ini"
          ]
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends apt-utils git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y unzip libicu-dev libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o mailparse \u0026\u0026 docker-php-ext-enable mailparse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) iconv mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026 docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libssl-dev pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o mongodb-1.5.2 redis-4.0.0 \u0026\u0026 docker-php-ext-enable mongodb redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpq-dev \u0026\u0026 docker-php-ext-configure pgsql --with-pgsql=/usr/local/pgsql \u0026\u0026 docker-php-ext-install pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install intl bcmath sockets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libyaml-dev \u0026\u0026 pecl install -o yaml \u0026\u0026 docker-php-ext-enable yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y librabbitmq-dev \u0026\u0026 pecl install amqp \u0026\u0026 docker-php-ext-enable amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/xdebug.ini",
            "/usr/local/etc/php/conf.d/xdebug.ini"
          ]
        },
        {
          "CmdLine": [
            "pecl install -o xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "mkdir -p /app/var/cache /app/var/logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias sf='php bin/console'\" \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "cp -R /tmp/.ssh /var/www/.ssh \u0026\u0026 chown -R www-data:www-data /app /var/www/.ssh \u0026\u0026 chmod 600 /var/www/.ssh/id_rsa \u0026\u0026 php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}