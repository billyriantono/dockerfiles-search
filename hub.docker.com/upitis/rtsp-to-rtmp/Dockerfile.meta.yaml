MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Konstantin Upitis <upitis.k@gmail.com>
    Name: maintainer
  - Labels:
    - Key: version
      Value: '"1.1"'
    - Key: description
      Value: '"Retransmit rtsp to rtmp stream AS IS using ffmpeg"'
    Name: label
  - Name: workdir
    Path: /tmp/workdir
  - Env:
    - Key: FFMPEG_VERSION
      Value: 3.2.2
    - Key: FDKAAC_VERSION
      Value: 0.1.4
    - Key: LAME_VERSION
      Value: 3.99.5
    - Key: OGG_VERSION
      Value: 1.3.2
    - Key: OPUS_VERSION
      Value: 1.1.1
    - Key: THEORA_VERSION
      Value: 1.1.1
    - Key: YASM_VERSION
      Value: 1.3.0
    - Key: VORBIS_VERSION
      Value: 1.3.5
    - Key: VPX_VERSION
      Value: 1.6.0
    - Key: XVID_VERSION
      Value: 1.3.4
    - Key: X265_VERSION
      Value: "2.0"
    - Key: X264_VERSION
      Value: 20160826-2245-stable
    - Key: PKG_CONFIG_PATH
      Value: /usr/local/lib/pkgconfig
    - Key: SRC
      Value: /usr/local
    Name: env
  - CmdLine:
    - "buildDeps=\"autoconf                     automake                     cmake
      \                    curl                     bzip2                     g++
      \                    gcc                     git                     libtool
      \                    make                     nasm                     perl
      \                    pkg-config                     python                     libssl-dev
      \                    yasm                     zlib1g-dev\" &&         export
      MAKEFLAGS=\"-j$(($(nproc) + 1))\" &&         apt-get -yqq update &&         apt-get
      install -yq --no-install-recommends ${buildDeps} ca-certificates &&         DIR=$(mktemp
      -d) && cd ${DIR} &&         curl -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2
      |         tar -jx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli &&         make
      &&         make install &&         rm -rf ${DIR} &&         DIR=$(mktemp -d)
      && cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz
      \ |         tar -zx &&         cd x265_${X265_VERSION}/build/linux &&         ./multilib.sh
      &&         make -C 8bit install &&         rm -rf ${DIR} &&         DIR=$(mktemp
      -d) && cd ${DIR} &&         curl -sL http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} &&         make
      &&         make install &&         rm -rf ${DIR} &&         DIR=$(mktemp -d)
      && cd ${DIR} &&         curl -sL http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure
      --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" &&         make &&
      \        make install &&         rm -rf ${DIR} &&         DIR=$(mktemp -d) &&
      cd ${DIR} &&         curl -sL http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\"         --disable-static --datadir=\"${DIR}\"
      &&         make &&         make install &&         rm -rf ${DIR} &&         DIR=$(mktemp
      -d) && cd ${DIR} &&         curl -sL http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.bz2
      |         tar -jx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\"         --disable-static --datadir=\"${DIR}\"
      &&         make &&         make install &&         rm -rf ${DIR} &&         DIR=$(mktemp
      -d) && cd ${DIR} &&         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION}
      |         tar -zx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs
      --disable-install-bins --enable-shared &&         make &&         make install
      &&         rm -rf ${DIR} &&         DIR=$(mktemp -d) && cd ${DIR} &&         curl
      -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\"
      &&         make &&         make install &&         rm -rf ${DIR} &&         DIR=$(mktemp
      -d) && cd ${DIR} &&         curl -sL http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz
      |         tar -zx &&         cd xvidcore/build/generic &&         ./configure
      --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static
      --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
      &&         DIR=$(mktemp -d) && cd ${DIR} &&         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure
      --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" &&         make &&
      \        make install &&         make distclean &&         rm -rf ${DIR} &&
      \        DIR=$(mktemp -d) && cd ${DIR} &&         curl -sL http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix=\"${SRC}\"
      \        --extra-cflags=\"-I${SRC}/include\"         --extra-ldflags=\"-L${SRC}/lib\"
      \        --bindir=\"${SRC}/bin\"         --disable-doc \t--disable-static \t--enable-shared
      \t--disable-ffplay         --extra-libs=-ldl         --enable-version3         --enable-libfdk_aac
      \        --enable-libmp3lame         --enable-libopus         --enable-libtheora
      \        --enable-libvorbis         --enable-libvpx         --enable-libx264
      \        --enable-libx265         --enable-libxvid \t--enable-gpl         --enable-avresample
      \        --enable-postproc         --enable-nonfree         --disable-debug
      \        --enable-small         --enable-openssl &&         make &&         make
      install &&         make distclean &&         hash -r &&         cd tools &&
      \        make qt-faststart &&         cp qt-faststart ${SRC}/bin &&         rm
      -rf ${DIR} &&        cd &&        apt-get purge -y ${buildDeps} &&        apt-get
      autoremove -y &&        apt-get clean -y &&        rm -rf /var/lib/apt/lists
      &&        ffmpeg -buildconf"
    Name: run
    PrependShell: true
  - Env:
    - Key: CATALINA_HOME
      Value: /usr/local/tomcat
    Name: env
  - Env:
    - Key: PATH
      Value: $CATALINA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$CATALINA_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - Env:
    - Key: TOMCAT_NATIVE_LIBDIR
      Value: $CATALINA_HOME/native-jni-lib
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tlibapr1 \t\topenssl
      \t\twget \t\tsoftware-properties-common \t\topenjdk-8-jdk \t\t&& add-apt-repository
      ppa:openjdk-r/ppa \t\t&& apt-get update && apt-get install -y --no-install-recommends
      && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42
        47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7
        61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7
        79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE
        A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7
        DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE
        F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23
    Name: env
  - CmdLine:
    - "set -ex; \tfor key in $GPG_KEYS; do \t\tgpg --keyserver eu.pool.sks-keyservers.net
      --recv-keys \"$key\"; \tdone"
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 8.5.9
    Name: env
  - Env:
    - Key: TOMCAT_TGZ_URL
      Value: https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
    Name: env
  - Env:
    - Key: TOMCAT_ASC_URL
      Value: https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - CmdLine:
    - "set -x \t\t&& wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" \t&& wget -O tomcat.tar.gz.asc
      \"$TOMCAT_ASC_URL\" \t&& gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz
      \t&& tar -xvf tomcat.tar.gz --strip-components=1 \t&& rm bin/*.bat \t&& rm tomcat.tar.gz*
      \t\t&& nativeBuildDir=\"$(mktemp -d)\" \t&& tar -xvf bin/tomcat-native.tar.gz
      -C \"$nativeBuildDir\" --strip-components=1 \t&& nativeBuildDeps=\" \t\tgcc
      \t\tlibapr1-dev \t\tlibssl-dev \t\tmake \t\" \t&& apt-get update && apt-get
      install -y --no-install-recommends $nativeBuildDeps && rm -rf /var/lib/apt/lists/*
      \t&& ( \t\texport CATALINA_HOME=\"$PWD\" \t\t&& cd \"$nativeBuildDir/native\"
      \t\t&& ./configure \t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \t\t\t--prefix=\"$CATALINA_HOME\"
      \t\t\t--with-apr=\"$(which apr-1-config)\" \t\t\t--with-java-home=\"$(docker-java-home)\"
      \t\t\t--with-ssl=yes \t\t&& make -j$(nproc) \t\t&& make install \t) \t&& apt-get
      purge -y --auto-remove $nativeBuildDeps \t&& rm -rf \"$nativeBuildDir\" \t&&
      rm bin/tomcat-native.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \t&& nativeLines=\"$(echo
      \"$nativeLines\" | grep 'Apache Tomcat Native')\" \t&& nativeLines=\"$(echo
      \"$nativeLines\" | sort -u)\" \t&& if ! echo \"$nativeLines\" | grep 'INFO:
      Loaded APR based Apache Tomcat Native library' >&2; then \t\techo >&2 \"$nativeLines\";
      \t\texit 1; \tfi"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./target/rtsp2rtmp-1.0
    - $CATALINA_HOME/webapps/rtsp2rtmp-1.0
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - catalina.sh
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM        ubuntu:16.04
