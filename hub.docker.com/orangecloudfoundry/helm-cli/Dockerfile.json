{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "\"1.10.2\""
            },
            {
              "Key": "HELM_VERSION",
              "Value": "\"2.10.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_LOGIN",
              "Value": "\"bosh\""
            },
            {
              "Key": "CONTAINER_PASSWORD",
              "Value": "\"welcome\""
            },
            {
              "Key": "INIT_PACKAGES",
              "Value": "\"apt-utils ca-certificates sudo wget curl unzip openssh-server openssl apt-transport-https\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"=====================================================\" \u0026\u0026     echo \"=\u003e Install system tools packages\" \u0026\u0026     echo \"=====================================================\" \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ${INIT_PACKAGES} \u0026\u0026 apt-get upgrade -y \u0026\u0026     wget \"https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" -nv -O /usr/local/bin/kubectl \u0026\u0026     wget \"https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz\" -nv -O - | tar -xz -C /tmp linux-amd64/helm \u0026\u0026 mv /tmp/linux-amd64/helm /usr/local/bin/helm \u0026\u0026     echo \"=====================================================\" \u0026\u0026     echo \"=\u003e Cleanup docker image\" \u0026\u0026     echo \"=====================================================\" \u0026\u0026     rm -fr /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}