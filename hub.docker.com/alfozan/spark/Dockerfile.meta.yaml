MetaArgs: null
Stages:
- As: build
  BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Abdul Alfozan https://github.com/alfozan"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Build Spark 2.3 distribution with Hadoop 2.8 and S3 support"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y locales && localedef -i en_US -c -f UTF-8
      -A /usr/share/locale/locale.alias en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - apt-get install -y git python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common   && echo y | add-apt-repository
      ppa:webupd8team/java   && apt-get update   && echo "oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true" | debconf-set-selections   && apt-get install -y oracle-java8-installer
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Key: SPARK_VERSION
    Name: arg
    Value: 2.3.0
  - Key: HADOOP_VERSION
    Name: arg
    Value: 2.8.3
  - Key: SPARK_PACKAGE
    Name: arg
    Value: spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}
  - Env:
    - Key: SPARK_HOME
      Value: '"/spark"'
    Name: env
  - CmdLine:
    - git clone --branch "v${SPARK_VERSION}" --single-branch --depth=1 https://github.com/apache/spark.git
      ${SPARK_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install tzdata -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install r-base -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install texlive-latex-base texlive-fonts-recommended -y
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages(c('knitr', 'rmarkdown', 'testthat', 'e1071', 'survival'),
      repos='http://cran.us.r-project.org')"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${SPARK_HOME}/R
  - CmdLine:
    - ./install-dev.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${SPARK_HOME}
  - Key: MAVEN_OPTS
    Name: arg
    Value: '"-Xmx2g -XX:ReservedCodeCacheSize=512m"'
  - CmdLine:
    - ./dev/make-distribution.sh --name "hadoop${HADOOP_VERSION}" --tgz --pip --r
      -Psparkr -Phive -Phive-thriftserver -Phadoop-2.7 -Dhadoop.version=${HADOOP_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf "${SPARK_PACKAGE}.tgz"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -P ${SPARK_PACKAGE}/jars/ http://central.maven.org/maven2/org/apache/hadoop/hadoop-aws/${HADOOP_VERSION}/hadoop-aws-${HADOOP_VERSION}.jar   &&
      wget -P ${SPARK_PACKAGE}/jars/ http://central.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.11.313/aws-java-sdk-bundle-1.11.313.jar    &&
      wget -P ${SPARK_PACKAGE}/jars/ http://central.maven.org/maven2/org/postgresql/postgresql/42.2.2/postgresql-42.2.2.jar     &&
      wget -P ${SPARK_PACKAGE}/jars/ http://central.maven.org/maven2/mysql/mysql-connector-java/8.0.11/mysql-connector-java-8.0.11.jar
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: build
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as build
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y locales && localedef -i en_US -c -f UTF-8
      -A /usr/share/locale/locale.alias en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - apt-get install -y python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common   && echo y | add-apt-repository
      ppa:webupd8team/java   && apt-get update   && echo "oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true" | debconf-set-selections   && apt-get install -y oracle-java8-installer
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: SPARK_HOME
      Value: '"/spark"'
    Name: env
  - Key: SPARK_PACKAGE
    Name: arg
    Value: '"spark-2.3.0-bin-hadoop2.8.3"'
  - Name: workdir
    Path: ${SPARK_HOME}
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - '"${SPARK_HOME}/${SPARK_PACKAGE}"'
    - .
  - CmdLine:
    - chmod a+rw -R ${SPARK_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:${SPARK_HOME}/bin"'
    Name: env
  - Env:
    - Key: PYSPARK_PYTHON
      Value: python3
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Env:
    - Key: SPARK_NO_DAEMONIZE
      Value: "1"
    Name: env
  - CmdLine:
    - bin/spark-shell
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
