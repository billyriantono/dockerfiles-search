MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Dan Sheffner <Dan@Sheffner.com>
    Name: maintainer
  - Name: workdir
    Path: /root/
  - CmdLine:
    - echo `date` > /root/build_date.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get update && apt-get install -y locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: EDITOR
      Value: vim
    Name: env
  - Env:
    - Key: SHELL
      Value: bash
    Name: env
  - CmdLine:
    - apt-get install -yq     build-essential     cmake     curl     libatk1.0-dev     libbonoboui2-dev     libcairo2-dev     libgnome2-dev     libgnomeui-dev     libgtk2.0-dev     liblua5.1-dev     libmemcached-dev     libmysqlclient-dev     libncurses5-dev     libperl-dev
      git     libpq-dev     libx11-dev     libxpm-dev     libxt-dev     lua5.1     mysql-client     postgresql-client     postgresql-client-common     python-dev     python-pip     ruby-dev     tmux     wget
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/vim/vim.git &&     cd vim &&     ./configure --with-features=huge         --enable-multibyte         --enable-rubyinterp=yes         --enable-pythoninterp=yes         --with-python-config-dir=/usr/lib/python2.7/config         --enable-perlinterp=yes         --enable-luainterp=yes         --enable-gui=gtk2         --enable-cscope         --prefix=/usr/local
      &&         make VIMRUNTIMEDIR=/usr/local/share/vim/vim81 &&         make install
      &&         ln -s /usr/local/bin/vim /usr/local/bin/vi
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.vim/autoload ~/.vim/bundle ~/.vim/colors/ &&     curl -LSso ~/.vim/autoload/pathogen.vim
      https://tpo.pe/pathogen.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/.vim/bundle &&     git clone https://tpope.io/vim/sensible.git
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh
      > install.sh &&   sh ./install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/.vim/colors/ &&     wget https://raw.githubusercontent.com/shannonmoeller/vim-monokai256/master/colors/monokai256.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/.vim/bundle/ &&     git clone https://github.com/Valloric/YouCompleteMe.git
      &&     cd /root/.vim/bundle/YouCompleteMe &&     git submodule update --init
      --recursive &&     python install.py --clang-completer
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/scrooloose/nerdtree.git ~/.vim/bundle/nerdtree
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vimrc
    - /root/.vimrc
  - CmdLine:
    - pip2 install virtualenvwrapper virtualenv &&     cd /root/ &&     /bin/bash
      -c "source /usr/local/bin/virtualenvwrapper.sh &&     mkvirtualenv venv2 &&     mkvirtualenv
      website" &&     echo "source /usr/local/bin/virtualenvwrapper.sh" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "#!/bin/bash" > /root/.virtualenvs/preactivate &&     echo "# This hook
      is run before every virtualenv is activated." >> /root/.virtualenvs/preactivate
      &&     echo "# argument: environment name " >> /root/.virtualenvs/preactivate
      &&     echo "#!/bin/bash" > /root/.virtualenvs/venv2/bin/preactivate &&     echo
      "# This hook is run before this virtualenv is activated." >> /root/.virtualenvs/venv2/bin/preactivate'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "#!/bin/bash" > /root/.virtualenvs/website/bin/preactivate &&     echo
      "# This hook is run before this virtualenv is activated." >> /root/.virtualenvs/website/bin/preactivate
    Name: run
    PrependShell: true
  - CmdLine:
    - vim +NeoBundleInstall +qall
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c " source /root/.virtualenvs/venv2/bin/activate &&     pip install
      boto3     bpython     coverage     django     django-allauth     django-autoslug     django-axes     django-braces     django-compressor     django-crispy-forms     django-debug-toolbar     django-environ     django-floppyforms     django-model-utils     django-nose     django-redis     django-sass-processor     django-secure     django-test-plus     django_extensions     factory_boy     ipdb     jupyter     libsass     pillow     psycopg2
      unicode-slugify     pyflakes     pylibmc     pymysql     python-dateutil     pytz     redis     sphinx     sqlalchemy     werkzeug     whitenoise
      "
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c " source /root/.virtualenvs/venv2/bin/activate &&     pip install
      alembic     flask     flask-bcrypt     flask-login     flask-migrate     flask-script     flask-sqlalchemy     flask-testing     flask-wtf     gunicorn     itsdangerous     mako     markupsafe     py-bcrypt     wtforms
      "
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c " source /root/.virtualenvs/venv2/bin/activate &&     pip install
      backoff     backports.csv     blessings     boto3     boto     botocore     bpython     braintree     CacheControl     certifi     chardet     coreapi     coreschema     createsend     curtsies     decorator     diff-match-patch     django-cache-machine     django-ckeditor     django-easy-select2     django-elasticache     django-grappelli     django-js-asset     django-lockout     django-rest-swagger     django-solo     django-sslserver     django-storages     Django     djangorestframework     docutils     docutils     ecdsa     functools32     future     futures     google-api-python-client     greenlet     greenlet     hashids     httplib2     idna     iptools     itypes     Jinja2     jmespath     jsonpath-rw     jsonpickle     jsonschema     ldclient-py     LitleSdkPython     lxml     Markdown     MarkupSafe     model-mommy     msgpack-python     MySQL-python     MySQL-python     newrelic     oauth2client     openapi-codec     paramiko     Pillow     ply     pyasn1-modules     pyasn1     pycrypto     Pygments     Pygments     PyJWT     pylibmc     pyRFC3339     python-dateutil     pytz     PyXB     requests     rsa     s3transfer     semver     simplejson     six     sqlparse     typing     uritemplate     urllib3     wcwidth
      "
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /root/
  - CmdLine:
    - /bin/bash -c " source /root/.virtualenvs/website/bin/activate &&    pip install
      -r /root/requirements.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - tmux
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
