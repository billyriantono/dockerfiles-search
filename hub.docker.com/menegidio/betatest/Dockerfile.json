{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Fabiano Menegidio \u003cfabiano.menegidio@biology.bio.br\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"e.g. https://github.com/fabianomenegidio/dugong-bioinformatics/tree/master/DugongGUI/XFCE\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "base.image",
              "Value": "\"ubuntu:latest\""
            },
            {
              "Key": "version",
              "Value": "\"2017040\""
            },
            {
              "Key": "name",
              "Value": "\"DugongGUI\""
            },
            {
              "Key": "flavour",
              "Value": "\"Xfce4\""
            },
            {
              "Key": "base",
              "Value": "\"Ubuntu latest\""
            },
            {
              "Key": "description",
              "Value": "\"Scientific Linux Container\""
            },
            {
              "Key": "website",
              "Value": "\"https://fabianomenegidio.github.io/dugong-bioinformatics/\""
            },
            {
              "Key": "repository",
              "Value": "\"https://github.com/fabianomenegidio/dugong-bioinformatics\""
            },
            {
              "Key": "license",
              "Value": "\"MIT\""
            },
            {
              "Key": "tags",
              "Value": "\"Bioinformatics\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VNC_PORT",
              "Value": "5901"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NO_VNC_PORT",
              "Value": "6901"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NO_VNC_HOME",
              "Value": "$HOME/noVNC"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VNC_COL_DEPTH",
              "Value": "24"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VNC_PW",
              "Value": "vncpassword"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$NO_VNC_PORT",
            "$VNC_PORT"
          ]
        },
        {
          "Env": [
            {
              "Key": "VNC_RESOLUTION",
              "Value": "1366x768"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/headless"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STARTUPDIR",
              "Value": "/dockerstartup"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INST_SCRIPTS",
              "Value": "$HOME/install"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "dugong"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "dugong"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "$HOME/.conda2/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/GUI/xfce/",
            "$HOME/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/scripts",
            "$STARTUPDIR"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/scripts/.bashrc",
            "$HOME/.bashrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/install/",
            "$INST_SCRIPTS/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/scripts/xstartup",
            "$HOME/.vnc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/start.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/start-notebook.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/start-singleuser.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/jupyter_notebook_config.py",
            "$HOME/.jupyter/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "apt-key adv --recv-key --keyserver keyserver.ubuntu.com \"A6616109451BBBF2\"     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9     \u0026\u0026 echo \"deb http://packages.linuxmint.com sarah main upstream import backport\" \u003e\u003e /etc/apt/sources.list.d/mint.list     \u0026\u0026 echo 'deb http://nebc.nerc.ac.uk/bio-linux/ unstable bio-linux' \u003e\u003e /etc/apt/sources.list.d/biolinux.list     \u0026\u0026 echo 'deb http://ppa.launchpad.net/nebc/bio-linux/ubuntu precise main' \u003e\u003e /etc/apt/sources.list.d/biolinux.list     \u0026\u0026 echo 'deb-src http://ppa.launchpad.net/nebc/bio-linux/ubuntu precise main' \u003e\u003e /etc/apt/sources.list.d/biolinux.list     \u0026\u0026 echo 'deb http://cran.r-project.org/bin/linux/ubuntu precise/' \u003e\u003e /etc/apt/sources.list.d/biolinux.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --allow-unauthenticated --force-yes bio-linux-keyring     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --allow-unauthenticated make grep sed sudo dpkg git wget zip     build-essential python python-dev python-numpy bzip2 locales ca-certificates vim gdebi-core bash-completion apt-utils     openjdk-8-jre openssh-server unzip curl ruby net-tools icedtea-8-plugin zlib1g-dev libqt4-dbus libqt4-network     chromium-browser chromium-browser-l10n chromium-codecs-ffmpeg screen mlocate nano asciinema python-pip     \u0026\u0026 ln -s /usr/bin/chromium-browser /usr/bin/google-chrome     \u0026\u0026 echo \"CHROMIUM_FLAGS='--no-sandbox --start-maximized --user-data-dir'\" \u003e $HOME/.chromium-browser.init     \u0026\u0026 wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini     \u0026\u0026 echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c -     \u0026\u0026 mv tini /usr/local/bin/tini \u0026\u0026 chmod +x /usr/local/bin/tini     \u0026\u0026 wget https://mega.nz/linux/MEGAsync/xUbuntu_16.04/amd64/megasync-xUbuntu_16.04_amd64.deb     \u0026\u0026 wget https://mega.nz/linux/MEGAsync/xUbuntu_16.04/amd64/megacmd-xUbuntu_16.04_amd64.deb     \u0026\u0026 gdebi -n megasync-xUbuntu_16.04_amd64.deb \u0026\u0026 gdebi -n megacmd-xUbuntu_16.04_amd64.deb     \u0026\u0026 wget -qO- https://dl.bintray.com/tigervnc/stable/tigervnc-1.7.0.x86_64.tar.gz | tar xz --strip 1 -C /     \u0026\u0026 mkdir -p $NO_VNC_HOME/utils/websockify     \u0026\u0026 wget -qO- https://github.com/kanaka/noVNC/archive/v0.6.1.tar.gz | tar xz --strip 1 -C $NO_VNC_HOME     \u0026\u0026 wget -qO- https://github.com/kanaka/websockify/archive/v0.8.0.tar.gz | tar xz --strip 1 -C $NO_VNC_HOME/utils/websockify     \u0026\u0026 chmod +x -v $NO_VNC_HOME/utils/*.sh \u0026\u0026 ln -s $NO_VNC_HOME/vnc_auto.html $NO_VNC_HOME/index.html     \u0026\u0026 apt-get -f install \u0026\u0026 rm megasync-xUbuntu_16.04_amd64.deb megacmd-xUbuntu_16.04_amd64.deb     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --allow-unauthenticated --no-install-recommends libstdc++5 libvncserver1     libaio-dev sysstat ksh expat libelf-dev desktop-base exo-utils gtk2-engines-xfce libexo-1-0 libexo-common libgarcon-1-0     libgarcon-common libthunarx-2-0 libxfce4ui-1-0 libxfce4util-bin libxfce4util-common libxfconf-0-2 orage thunar gnupg-agent     thunar-data thunar-volman xfce-keyboard-shortcuts xfce4-appfinder xfce4-panel xfce4-session xfce4-settings xfconf     xfdesktop4 libxfce4ui-utils xfdesktop4-data xfwm4 xfwm4-themes xubuntu-icon-theme xfce4 supervisor xterm xfce4-terminal     xfonts-base xfonts-100dpi xfonts-75dpi xfonts-cyrillic     \u0026\u0026 apt-get purge --auto-remove xfce4-power-manager \u0026\u0026 apt-get autoremove -y \u0026\u0026 apt-get clean -y     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 locale-gen en_US.UTF-8     \u0026\u0026 git clone https://github.com/Linuxbrew/linuxbrew.git ~/.linuxbrew     \u0026\u0026 bash -c \"$(curl -L https://basemount.basespace.illumina.com/install)\"     \u0026\u0026 wget --quiet https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh     \u0026\u0026 /bin/bash Miniconda2-latest-Linux-x86_64.sh -b -p ~/.conda2     \u0026\u0026 rm Miniconda2-latest-Linux-x86_64.sh     \u0026\u0026 ~/.conda2/bin/conda config --add channels defaults     \u0026\u0026 ~/.conda2/bin/conda config --add channels conda-forge     \u0026\u0026 ~/.conda2/bin/conda config --add channels r     \u0026\u0026 ~/.conda2/bin/conda config --add channels bioconda     \u0026\u0026 ~/.conda2/bin/conda update --all     \u0026\u0026 ~/.conda2/bin/conda clean -tipsy     \u0026\u0026 chmod +X /dockerstartup/*.sh \u0026\u0026 chmod 755 /dockerstartup/*.sh     \u0026\u0026 /dockerstartup/generate_container_user.sh     \u0026\u0026 chmod 755 $HOME/.vnc/xstartup \u0026\u0026 chown dugong:dugong $HOME/.vnc/xstartup     \u0026\u0026 chmod +x /usr/local/bin/start.sh     \u0026\u0026 chmod +x /usr/local/bin/start-notebook.sh     \u0026\u0026 chmod +x /usr/local/bin/start-singleuser.sh     \u0026\u0026 mkdir -p /headless/.cache/sessions/ \u0026\u0026 echo \"\" \u003e /headless/.cache/sessions/xfce4-session-DugongGUI:1     \u0026\u0026 /bin/bash /headless/install/set_user_permission.sh /dockerstartup /headless"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dugong"
        },
        {
          "CmdLine": [
            "~/.conda2/bin/conda update --all     \u0026\u0026 ~/.conda2/bin/conda install spyder anaconda-navigator jupyter ipython nb_conda     \u0026\u0026 ~/.conda2/bin/conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$HOME/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/dockerstartup/vnc_startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "chmod 777 /var/tmp \u0026\u0026 chown -R root:root /var/tmp \u0026\u0026 chmod 777 /tmp \u0026\u0026 chown -R root:root /tmp     \u0026\u0026 chown -R $USER:$USER $HOME/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dugong"
        },
        {
          "Name": "workdir",
          "Path": "$HOME/data"
        }
      ]
    }
  ]
}