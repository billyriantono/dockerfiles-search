{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dugong/dugong",
      "SourceCode": "FROM dugong/dugong",
      "Platform": "",
      "From": {
        "Image": "dugong/dugong"
      },
      "Commands": [
        {
          "Maintainer": "Fabiano Menegidio",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "dugong"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".config/start.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".config/start-notebook.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".config/start-singleuser.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".config/jupyter_notebook_config.py",
            "$HOME/.jupyter/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --allow-unauthenticated fonts-liberation     \u0026\u0026 apt-get autoremove -y \u0026\u0026 apt-get clean -y     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 chmod +x /usr/local/bin/start.sh     \u0026\u0026 chmod +x /usr/local/bin/start-notebook.sh     \u0026\u0026 chmod +x /usr/local/bin/start-singleuser.sh     \u0026\u0026 chown -R dugong:dugong $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dugong"
        },
        {
          "CmdLine": [
            "echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" \u003e $HOME/.curlrc     \u0026\u0026 ~/.conda2/bin/conda config --system --prepend channels conda-forge     \u0026\u0026 ~/.conda2/bin/conda config --system --set auto_update_conda false     \u0026\u0026 ~/.conda2/bin/conda config --system --set show_channel_urls true     \u0026\u0026 ~/.conda2/bin/conda update --all     \u0026\u0026 ~/.conda2/bin/conda install --quiet --yes     'notebook'     'ipykernel'     \u0026\u0026 ~/.conda2/bin/conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/config"
          ]
        },
        {
          "CmdLine": [
            "chown -R dugong:dugong /data \u0026\u0026     chown -R dugong:dugong /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "dugong"
        }
      ]
    }
  ]
}