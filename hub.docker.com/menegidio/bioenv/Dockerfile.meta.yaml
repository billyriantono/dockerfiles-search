MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Fabiano Menegidio <fabiano.menegidio@biology.bio.br>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --allow-unauthenticated git build-essential
      locales ca-certificates vim     openssh-server curl python libssl-dev libreadline-dev
      zlib1g-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PASS
      Value: dugong
    Name: env
  - Env:
    - Key: USER
      Value: dugong
    Name: env
  - Env:
    - Key: HOME
      Value: /headless
    Name: env
  - CmdLine:
    - 'echo "User: $USER Pass: $PASS"     && useradd -d $HOME --shell /bin/bash --user-group
      --groups adm,sudo $USER     && echo "$USER:$PASS" | chpasswd     && echo "$USER
      ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers     && mkdir -p $HOME/data     && mkdir
      -p $HOME/.ve     && mkdir -p $HOME/.workspace     && ln -s $HOME/.ve $HOME/data/.ve
      && ln -s $HOME/.workspace $HOME/data/.workspace     && chown -R $USER:$USER
      $HOME'
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - Name: workdir
    Path: $HOME
  - Env:
    - Key: PYENV_ROOT
      Value: $HOME/.pyenv
    Name: env
  - Env:
    - Key: PLENV_ROOT
      Value: $HOME/.plenv
    Name: env
  - Env:
    - Key: RBENV_ROOT
      Value: $HOME/.rbenv
    Name: env
  - Env:
    - Key: NB_USER
      Value: $USER
    Name: env
  - Env:
    - Key: NB_PASS
      Value: $PASS
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: CONDA3_DIR
      Value: $PYENV_ROOT/versions/miniconda3-latest/
    Name: env
  - Env:
    - Key: CONDA2_DIR
      Value: $PYENV_ROOT/versions/miniconda2-latest/
    Name: env
  - Env:
    - Key: PATH
      Value: $HOME/.plenv:$HOME/.pyenv/shims:$HOME/.pyenv/bin:$HOME/.plenv:$HOME/.plenv/bin:$HOME/.plenv/shims:$HOME/.rbenv/bin:$HOME/.rbenv:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .config/scripts/.bashrc
    - $HOME/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .config/scripts/.bash_profile
    - $HOME/.bash_profile
  - CmdLine:
    - git clone git://github.com/yyuu/pyenv.git $PYENV_ROOT     && git clone https://github.com/yyuu/pyenv-virtualenv.git
      $PYENV_ROOT/plugins/pyenv-virtualenv     && git clone https://github.com/tokuhirom/plenv.git
      $PLENV_ROOT     && git clone https://github.com/tokuhirom/Perl-Build.git $PLENV_ROOT/plugins/perl-build/     &&
      git clone https://github.com/rbenv/rbenv.git $RBENV_ROOT     && git clone https://github.com/rbenv/ruby-build.git
      $RBENV_ROOT/plugins/ruby-build     && git clone --depth 1 git://github.com/jf/rbenv-gemset.git
      $RBENV_ROOT/plugins/rbenv-gemset     && cd $HOME     && /bin/bash -c "source
      $HOME/.bash_profile"     && /bin/bash -c "source $HOME/.bashrc"     && eval
      "$(pyenv init -)"     && eval "$(pyenv virtualenv-init -)"     && eval "$(rbenv
      init -)"     && pyenv install miniconda3-latest     && pyenv install miniconda2-latest     &&
      pyenv global miniconda3-latest miniconda2-latest     && pyenv activate miniconda3-latest     &&
      conda config --add channels defaults && conda config --add channels conda-forge     &&
      conda config --add channels r && conda config --add channels bioconda     &&
      conda update --all && conda clean -tipsy     && pyenv deactivate     && pyenv
      activate miniconda2-latest     && conda config --add channels defaults && conda
      config --add channels conda-forge     && conda config --add channels r && conda
      config --add channels bioconda     && conda update --all && conda clean -tipsy     &&
      conda install biopython     && pyenv deactivate     && pyenv global miniconda3-latest
      miniconda2-latest     && plenv install 5.27.2     && plenv global 5.27.2     &&
      rbenv install 2.4.1     && rbenv global 2.4.1     && pyenv rehash && plenv rehash
      && rbenv rehash
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "22"
  - Name: volume
    Volumes:
    - $HOME/data
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Name: user
    User: $USER
  - Name: workdir
    Path: $HOME/data
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
