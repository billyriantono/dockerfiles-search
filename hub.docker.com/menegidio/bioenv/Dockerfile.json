{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Fabiano Menegidio \u003cfabiano.menegidio@biology.bio.br\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --allow-unauthenticated git build-essential locales ca-certificates vim     openssh-server curl python libssl-dev libreadline-dev zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PASS",
              "Value": "dugong"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "dugong"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/headless"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"User: $USER Pass: $PASS\"     \u0026\u0026 useradd -d $HOME --shell /bin/bash --user-group --groups adm,sudo $USER     \u0026\u0026 echo \"$USER:$PASS\" | chpasswd     \u0026\u0026 echo \"$USER ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers     \u0026\u0026 mkdir -p $HOME/data     \u0026\u0026 mkdir -p $HOME/.ve     \u0026\u0026 mkdir -p $HOME/.workspace     \u0026\u0026 ln -s $HOME/.ve $HOME/data/.ve \u0026\u0026 ln -s $HOME/.workspace $HOME/data/.workspace     \u0026\u0026 chown -R $USER:$USER $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USER"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "$HOME/.pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PLENV_ROOT",
              "Value": "$HOME/.plenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RBENV_ROOT",
              "Value": "$HOME/.rbenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "$USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_PASS",
              "Value": "$PASS"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA3_DIR",
              "Value": "$PYENV_ROOT/versions/miniconda3-latest/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA2_DIR",
              "Value": "$PYENV_ROOT/versions/miniconda2-latest/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$HOME/.plenv:$HOME/.pyenv/shims:$HOME/.pyenv/bin:$HOME/.plenv:$HOME/.plenv/bin:$HOME/.plenv/shims:$HOME/.rbenv/bin:$HOME/.rbenv:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/scripts/.bashrc",
            "$HOME/.bashrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".config/scripts/.bash_profile",
            "$HOME/.bash_profile"
          ]
        },
        {
          "CmdLine": [
            "git clone git://github.com/yyuu/pyenv.git $PYENV_ROOT     \u0026\u0026 git clone https://github.com/yyuu/pyenv-virtualenv.git $PYENV_ROOT/plugins/pyenv-virtualenv     \u0026\u0026 git clone https://github.com/tokuhirom/plenv.git $PLENV_ROOT     \u0026\u0026 git clone https://github.com/tokuhirom/Perl-Build.git $PLENV_ROOT/plugins/perl-build/     \u0026\u0026 git clone https://github.com/rbenv/rbenv.git $RBENV_ROOT     \u0026\u0026 git clone https://github.com/rbenv/ruby-build.git $RBENV_ROOT/plugins/ruby-build     \u0026\u0026 git clone --depth 1 git://github.com/jf/rbenv-gemset.git $RBENV_ROOT/plugins/rbenv-gemset     \u0026\u0026 cd $HOME     \u0026\u0026 /bin/bash -c \"source $HOME/.bash_profile\"     \u0026\u0026 /bin/bash -c \"source $HOME/.bashrc\"     \u0026\u0026 eval \"$(pyenv init -)\"     \u0026\u0026 eval \"$(pyenv virtualenv-init -)\"     \u0026\u0026 eval \"$(rbenv init -)\"     \u0026\u0026 pyenv install miniconda3-latest     \u0026\u0026 pyenv install miniconda2-latest     \u0026\u0026 pyenv global miniconda3-latest miniconda2-latest     \u0026\u0026 pyenv activate miniconda3-latest     \u0026\u0026 conda config --add channels defaults \u0026\u0026 conda config --add channels conda-forge     \u0026\u0026 conda config --add channels r \u0026\u0026 conda config --add channels bioconda     \u0026\u0026 conda update --all \u0026\u0026 conda clean -tipsy     \u0026\u0026 pyenv deactivate     \u0026\u0026 pyenv activate miniconda2-latest     \u0026\u0026 conda config --add channels defaults \u0026\u0026 conda config --add channels conda-forge     \u0026\u0026 conda config --add channels r \u0026\u0026 conda config --add channels bioconda     \u0026\u0026 conda update --all \u0026\u0026 conda clean -tipsy     \u0026\u0026 conda install biopython     \u0026\u0026 pyenv deactivate     \u0026\u0026 pyenv global miniconda3-latest miniconda2-latest     \u0026\u0026 plenv install 5.27.2     \u0026\u0026 plenv global 5.27.2     \u0026\u0026 rbenv install 2.4.1     \u0026\u0026 rbenv global 2.4.1     \u0026\u0026 pyenv rehash \u0026\u0026 plenv rehash \u0026\u0026 rbenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$HOME/data"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "$USER"
        },
        {
          "Name": "workdir",
          "Path": "$HOME/data"
        }
      ]
    }
  ]
}