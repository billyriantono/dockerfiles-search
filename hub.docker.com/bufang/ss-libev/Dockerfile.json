{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "HyperApp \u003chyperappcloud@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "SS_VER",
          "Name": "arg",
          "Value": "3.3.1"
        },
        {
          "Key": "SS_OBFS_VER",
          "Name": "arg",
          "Value": "0.0.5"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache udns \u0026\u0026     apk add --no-cache --virtual .build-deps                                 git                                 autoconf                                 automake                                 make                                 build-base                                 curl                                 libev-dev                                 c-ares-dev                                 libtool                                 linux-headers                                 libsodium-dev                                 mbedtls-dev                                 pcre-dev                                 tar                                 udns-dev \u0026\u0026     cd /tmp/ \u0026\u0026     git clone https://github.com/shadowsocks/shadowsocks-libev.git \u0026\u0026     cd shadowsocks-libev \u0026\u0026     git checkout v$SS_VER \u0026\u0026     git submodule update --init --recursive \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure --prefix=/usr --disable-documentation \u0026\u0026     make install \u0026\u0026     cd /tmp/ \u0026\u0026     git clone https://github.com/shadowsocks/simple-obfs.git shadowsocks-obfs \u0026\u0026     cd shadowsocks-obfs \u0026\u0026     git checkout v$SS_OBFS_VER \u0026\u0026     git submodule update --init --recursive \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure --prefix=/usr --disable-documentation \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     runDeps=\"$(         scanelf --needed --nobanner /usr/bin/ss-*             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | xargs -r apk info --installed             | sort -u     )\" \u0026\u0026     apk add --no-cache --virtual .run-deps $runDeps \u0026\u0026     apk del .build-deps \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SERVER_ADDR",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "8838"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METHOD",
              "Value": "xchacha20-ietf-poly1305"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEOUT",
              "Value": "300"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR",
              "Value": "8.8.8.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR_2",
              "Value": "8.8.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PLUGIN",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PLUGIN_OPTS",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFIG",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/udp"
          ]
        },
        {
          "CmdLine": [
            "ss-server -s :: -s $SERVER_ADDR               -p $SERVER_PORT               -k \"$PASSWORD\"               -m \"$METHOD\"               -t $TIMEOUT               -d \"$DNS_ADDR\"               --fast-open               -u $OPTIONS"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}