{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"metowolf \u003ci@i-meto.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SNELL_VERSION",
              "Value": "1.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update   \u0026\u0026 apk add --no-cache     unzip     upx   \u0026\u0026 wget -O snell-server.zip https://github.com/surge-networks/snell/releases/download/v${SNELL_VERSION}/snell-server-v${SNELL_VERSION}-linux-amd64.zip   \u0026\u0026 unzip snell-server.zip   \u0026\u0026 upx --brute snell-server   \u0026\u0026 mv snell-server /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"metowolf \u003ci@i-meto.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.29-r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_HOST",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "8388"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PSK",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OBFS",
              "Value": "http"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARGS",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "${SERVER_PORT}/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "${SERVER_PORT}/udp"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub   \u0026\u0026 wget -O glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk   \u0026\u0026 wget -O glibc-bin.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk   \u0026\u0026 apk add glibc.apk glibc-bin.apk   \u0026\u0026 apk add --no-cache libstdc++   \u0026\u0026 rm -rf glibc.apk glibc-bin.apk /etc/apk/keys/sgerrand.rsa.pub /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}