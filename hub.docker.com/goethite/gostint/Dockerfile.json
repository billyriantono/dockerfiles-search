{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:latest",
      "SourceCode": "FROM golang:latest as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:latest"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/github.com/gbevan/gostint"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "main.go",
            "banner.go",
            "Gopkg*",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "v1",
            "./v1/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "approle",
            "./approle/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pingclean",
            "./pingclean/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jobqueues",
            "./jobqueues/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apierrors",
            "./apierrors/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "health",
            "./health/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cleanup",
            "./cleanup/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logmsg",
            "./logmsg/"
          ]
        },
        {
          "CmdLine": [
            "go get github.com/golang/dep/cmd/dep \u0026\u0026   dep ensure -v --vendor-only \u0026\u0026   CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' -o gostint ."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/gbevan/gostint/gostint",
            "/usr/bin"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-image.sh",
            "."
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache docker sudo curl \u0026\u0026   adduser -S -D -H -G docker -h /app gostint \u0026\u0026   mkdir -p /var/lib/gostint \u0026\u0026   chown gostint /var/lib/gostint \u0026\u0026   echo \"gostint\tALL=(ALL:ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "gostint"
        },
        {
          "CmdLine": [
            "/app/start-image.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}