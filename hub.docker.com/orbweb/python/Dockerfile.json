{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7.11-alpine",
      "SourceCode": "FROM            python:2.7.11-alpine",
      "Platform": "",
      "From": {
        "Image": "python:2.7.11-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Orbweb Inc. \u003cengineering@orbweb.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_SETUPTOOLS_VERSION",
              "Value": "21.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_WHEEL_VERSION",
              "Value": "0.29.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "True"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_NO_CACHE_DIR",
              "Value": "off"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_DISABLE_PIP_VERSION_CHECK",
              "Value": "on"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRARY_PATH",
              "Value": "/lib:/usr/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install setuptools==$PYTHON_SETUPTOOLS_VERSION wheel==$PYTHON_WHEEL_VERSION \u0026\u0026                 mkdir -p /usr/src/app/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app/"
        },
        {
          "Expression": "COPY    requirements.txt /usr/src/app/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN     apk --no-cache add --virtual .build-deps                     build-base                     openssl-dev                     libffi-dev                     zlib-dev \u0026\u0026                 cat requirements.txt | grep -oh -E \"builddeps:(\\w|,|-)*\" | awk '{split($0,a,\":\"); print a[2]}' | awk '{gsub(/,/, \"\\n\", $0); print $0}' | sort -u | xargs apk --no-cache add --virtual .build-deps \u0026\u0026                 cat requirements.txt | grep -oh -E \"rundeps:(\\w|,|-)*\" | awk '{split($0,a,\":\"); print a[2]}' | awk '{gsub(/,/, \"\\n\", $0); print $0}' | sort -u | xargs apk --no-cache add --virtual .run-deps \u0026\u0026                 apk --no-cache add --virtual .run-deps                     zlib \u0026\u0026                 pip install                     cython==0.24                     pyOpenSSL==16.0.0                     ndg-httpsclient==0.4.0                     pyasn1==0.1.9                     pyasn1-modules==0.0.8                     pycparser==2.14                     cryptography==1.3.1                     cffi==1.6.0                     certifi==2016.2.28 \u0026\u0026                 pip install -r requirements.txt \u0026\u0026                 pip uninstall -y cython \u0026\u0026                 apk del .build-deps \u0026\u0026                 find /usr/                     \\( -type d -a -name test -o -name tests \\)                     -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\)                     -exec rm -rf '{}' + \u0026\u0026                 find . -type d -name \"__pycache__\" -exec rm -rf '{}' +",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY    . /usr/src/app",
          "Name": "onbuild"
        }
      ]
    }
  ]
}