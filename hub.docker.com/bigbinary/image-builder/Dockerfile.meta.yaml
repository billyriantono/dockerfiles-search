MetaArgs: null
Stages:
- BaseName: circleci/ubuntu-server:trusty-latest
  Commands:
  - Env:
    - Key: VERBOSE
      Value: "true"
    Name: env
  - CmdLine:
    - "echo 'exit 101' > /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d
      \        && dpkg-divert --local --rename --add /sbin/initctl         && ln -s
      /bin/true /sbin/initctl"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-install
    - /usr/local/bin/circleci-install
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/base.sh
    - circleci-provision-scripts/circleci-specific.sh
    - /opt/circleci-provision-scripts/
  - CmdLine:
    - circleci-install base_requirements && circleci-install circleci_specific
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/java.sh
    - /opt/circleci-provision-scripts/java.sh
  - CmdLine:
    - circleci-install java oraclejdk8 && circleci-install java openjdk8
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/misc.sh
    - /opt/circleci-provision-scripts/misc.sh
  - CmdLine:
    - for package in sysadmin devtools jq; do circleci-install $package; done
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/firefox.sh
    - circleci-provision-scripts/chrome.sh
    - circleci-provision-scripts/phantomjs.sh
    - /opt/circleci-provision-scripts/
  - CmdLine:
    - circleci-install firefox_version 46.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - circleci-install chrome_latest
    Name: run
    PrependShell: true
  - CmdLine:
    - circleci-install phantomjs
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/qt.sh
    - /opt/circleci-provision-scripts/qt.sh
  - CmdLine:
    - circleci-install qt
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/awscli.sh
    - circleci-provision-scripts/gcloud.sh
    - circleci-provision-scripts/heroku.sh
    - /opt/circleci-provision-scripts/
  - CmdLine:
    - for package in awscli gcloud heroku; do circleci-install $package; done
    Name: run
    PrependShell: true
  - Key: use_precompile
    Name: arg
    Value: "true"
  - Env:
    - Key: USE_PRECOMPILE
      Value: $use_precompile
    - Key: RUN_APT_UPDATE
      Value: "true"
    Name: env
  - CmdLine:
    - curl -s https://packagecloud.io/install/repositories/circleci/trusty/script.deb.sh
      | sudo bash
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/python.sh
    - /opt/circleci-provision-scripts/python.sh
  - CmdLine:
    - circleci-install python 2.7.11
    Name: run
    PrependShell: true
  - CmdLine:
    - circleci-install python pypy-4.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo -H -i -u ubuntu pyenv global 2.7.11
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/nodejs.sh
    - /opt/circleci-provision-scripts/nodejs.sh
  - CmdLine:
    - circleci-install nodejs 6.1.0
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo -H -i -u ubuntu nvm alias default 4.2.6
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/ruby.sh
    - /opt/circleci-provision-scripts/ruby.sh
  - CmdLine:
    - circleci-install ruby 2.3.1
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo -H -i -u ubuntu rvm use 2.3.1 --default
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts/docker.sh
    - /opt/circleci-provision-scripts/docker.sh
  - CmdLine:
    - circleci-install docker && circleci-install docker_compose
    Name: run
    PrependShell: true
  - Key: TARGET_UNPRIVILEGED_LXC
    Name: arg
    Value: null
  - CmdLine:
    - if [ "$TARGET_UNPRIVILEGED_LXC" = "true" ]; then circleci-install circleci_docker;
      fi
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /usr/sbin/policy-rc.d && rm /sbin/initctl && dpkg-divert --rename --remove
      /sbin/initctl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - circleci-provision-scripts
    - /opt/circleci-provision-scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Dockerfile
    - /opt/circleci/Dockerfile
  - CmdLine:
    - sudo -H -i -u ubuntu pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo -H -i -u ubuntu pip install simplejson==3.8.1 requests==2.6.0 robotframework==2.9.2
      robotframework-selenium2library==1.7.4 robotframework-pabot==0.20 robotframework-selenium2screenshots==0.7.2
    Name: run
    PrependShell: true
  - Key: IMAGE_TAG
    Name: arg
    Value: null
  - CmdLine:
    - echo $IMAGE_TAG > /opt/circleci/image_version
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pkg-versions.sh
    - /opt/circleci/bin/pkg-versions.sh
  - Labels:
    - Key: circleci.user
      Value: '"ubuntu"'
    Name: label
  From:
    Image: circleci/ubuntu-server:trusty-latest
  Name: ""
  Platform: ""
  SourceCode: FROM circleci/ubuntu-server:trusty-latest
