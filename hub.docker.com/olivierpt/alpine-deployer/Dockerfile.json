{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Key": "user",
          "Name": "arg",
          "Value": "deployer"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "deployer"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "DEPLOYER_HOME",
          "Name": "arg",
          "Value": "/home/deployer"
        },
        {
          "Env": [
            {
              "Key": "SERVERLESS_VERSION",
              "Value": "\"1.58.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update     curl     python     python3     python-dev     py-pip     build-base     jq     nodejs     npm     terraform   \u0026\u0026 pip install virtualenv   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $DEPLOYER_HOME     \u0026\u0026 chown ${uid}:${gid} $DEPLOYER_HOME     \u0026\u0026 addgroup -g ${gid} ${group}     \u0026\u0026 adduser -h \"$DEPLOYER_HOME\" -u ${uid} -G ${group} -s /bin/bash -D ${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install serverless@$SERVERLESS_VERSION -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin",
            "$DEPLOYER_HOME/bin"
          ]
        },
        {
          "CmdLine": [
            "wget -O $DEPLOYER_HOME/bin/aws-ssm-env.zip     https://github.com/piotrb/aws-ssm-env/releases/download/v1.2.0/aws-ssm-env-v1.2.0-linux-amd64.zip \u0026\u0026     unzip -d $DEPLOYER_HOME/bin $DEPLOYER_HOME/bin/aws-ssm-env.zip \u0026\u0026     chmod 755 $DEPLOYER_HOME/bin/aws-ssm-env \u0026\u0026     rm $DEPLOYER_HOME/bin/aws-ssm-env.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://github.com/gliderlabs/sigil/releases/download/v0.4.0/sigil_0.4.0_$(uname -sm|tr \\  _).tgz\"     | tar -zxC $DEPLOYER_HOME/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export PATH=$PATH:$DEPLOYER_HOME/bin\" \u003e\u003e $DEPLOYER_HOME/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${uid}:${gid} $DEPLOYER_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${user}"
        },
        {
          "CmdLine": [
            "python --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "terraform --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "aws --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sls --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}