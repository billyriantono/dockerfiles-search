{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "billyteves/alpine:3.5.0",
      "SourceCode": "FROM billyteves/alpine:3.5.0",
      "Platform": "",
      "From": {
        "Image": "billyteves/alpine:3.5.0"
      },
      "Commands": [
        {
          "Maintainer": "Noriel Dimatulac \u003cnorieldimatulac@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "[ ! -e /etc/nsswitch.conf ] \u0026\u0026 echo 'hosts: files dns' \u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.9.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_SHA256",
              "Value": "582814fa45e8ecb0859a208e517b48aa0ad951e3b36c7fff203d834e0ef27722"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./run-ssh",
            "/usr/local/bin/run-ssh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./patch-files/*.patch",
            "/go-alpine-patches/"
          ]
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache ca-certificates     \u0026\u0026 apk update --no-cache     \u0026\u0026 apk upgrade --no-cache     \u0026\u0026 apk add --no-cache --virtual .build-deps     make     gcc     musl-dev     go     \u0026\u0026 export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\"     \u0026\u0026 export GOOS=\"$(go env GOOS)\"     \u0026\u0026 export GOARCH=\"$(go env GOARCH)\"     \u0026\u0026 export GOHOSTOS=\"$(go env GOHOSTOS)\"     \u0026\u0026 export GOHOSTARCH=\"$(go env GOHOSTARCH)\"     \u0026\u0026 curl -L \"$GOLANG_SRC_URL\" \u003e go.tar.gz \t\u0026\u0026 echo \"$GOLANG_SRC_SHA256  go.tar.gz\" | sha256sum -c - \t\u0026\u0026 tar -C /usr/local -xzf go.tar.gz \t\u0026\u0026 rm go.tar.gz \t\u0026\u0026 cd /usr/local/go/src \t\u0026\u0026 for p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone \t\u0026\u0026 ./make.bash \t\u0026\u0026 rm -rf /go-alpine-patches \t\u0026\u0026 apk del .build-deps     \u0026\u0026 apk add --no-cache --virtual --update     git     make     tzdata     \u0026\u0026 mkdir -p $GOPATH/bin     \u0026\u0026 mkdir -p $GOPATH/src     \u0026\u0026 chmod -R 777 $GOPATH     \u0026\u0026 chmod +x /usr/local/bin/run-ssh     \u0026\u0026 go get -u github.com/golang/dep/...     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        }
      ]
    }
  ]
}