MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Marco Bonomo
    Name: maintainer
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y locales     && locale-gen en_US.UTF-8     &&
      locale-gen it_IT.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y -q --no-install-recommends nginx curl
      zip unzip git software-properties-common supervisor sqlite3 openssh-client      libssl-dev     apt-transport-https     ca-certificates     curl     rsync     python     rsync     wget     iputils-ping     vim     &&
      add-apt-repository -y ppa:ondrej/php     && apt-get update     && apt-get install
      -y php7.1-fpm php7.1-cli php7.1-mcrypt php7.1-gd php7.1-mysql        php7.1-pgsql
      php7.1-imap php-memcached php7.1-mbstring php7.1-xml php7.1-curl        php7.1-sqlite3
      php7.1-xdebug php7.1-zip     && php -r "readfile('http://getcomposer.org/installer');"
      | php -- --install-dir=/usr/bin/ --filename=composer     && mkdir /run/php     &&
      apt-get remove -y --purge software-properties-common     && apt-get -y autoremove     &&
      apt-get clean     && apt-get autoclean     && echo "daemon off;" >> /etc/nginx/nginx.conf     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && ln -sf /dev/stdout /var/log/nginx/access.log     &&
      ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.6.0
    Name: env
  - CmdLine:
    - curl https://raw.githubusercontent.com/creationix/nvm/v0.20.0/install.sh | bash     &&
      . $NVM_DIR/nvm.sh     && mkdir -p $NVM_DIR/versions     && nvm install $NODE_VERSION     &&
      nvm alias default $NODE_VERSION     && nvm use default     && npm install -g
      yarn     && ls $NVM_DIR/versions/
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/versions/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/v$NODE_VERSION/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/vhost.conf
    - /etc/nginx/sites-available/default
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/php-fpm.conf
    - /etc/php/7.1/fpm/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start-container
    - /usr/local/bin/start-container
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - chmod +x /usr/local/bin/start-container
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - start-container
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
