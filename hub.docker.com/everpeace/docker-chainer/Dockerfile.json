{
  "MetaArgs": [
    {
      "Key": "BASE_CHAINER_IMAGE_TAG",
      "DefaultValue": "\"v4.0.0b3-python3\"",
      "ProvidedValue": null,
      "Value": "\"v4.0.0b3-python3\""
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "chainer/chainer:$BASE_CHAINER_IMAGE_TAG",
      "SourceCode": "FROM chainer/chainer:$BASE_CHAINER_IMAGE_TAG",
      "Platform": "",
      "From": {
        "Image": "chainer/chainer:$BASE_CHAINER_IMAGE_TAG"
      },
      "Commands": [
        {
          "Maintainer": "Shingo Omura \u003comura@preferred.jp\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "OPENMPI_MAIN_VERSION",
          "Name": "arg",
          "Value": "\"2.1\""
        },
        {
          "Key": "OPENMPI_PATCH_VERSION",
          "Name": "arg",
          "Value": "\"2\""
        },
        {
          "Key": "OPENMPI_VERSION",
          "Name": "arg",
          "Value": "\"${OPENMPI_MAIN_VERSION}.${OPENMPI_PATCH_VERSION}\""
        },
        {
          "Key": "NCCL_PACKAGE_VERSION",
          "Name": "arg",
          "Value": "\"2.1.4-1+cuda8.0\""
        },
        {
          "Key": "CHAINER_MN_VERSION",
          "Name": "arg",
          "Value": "\"1.2.0\""
        },
        {
          "Key": "S6_OVERLAY_VERSION",
          "Name": "arg",
          "Value": "\"1.19.1.1\""
        },
        {
          "Key": "SSH_USER",
          "Name": "arg",
          "Value": "\"chainer\""
        },
        {
          "Env": [
            {
              "Key": "BASE_CHAINER_IMAGE_TAG",
              "Value": "${BASE_CHAINER_IMAGE_TAG:-latest-python3}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASE_CHAINER_IMAGE",
              "Value": "\"chainer/chainer:$BASE_CHAINER_IMAGE_TAG\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "$SSH_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$USER"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends       locales wget sudo ca-certificates ssh build-essential \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     wget -O s6.tgz       https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz \u0026\u0026     wget -O s6.sig       https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz.sig \u0026\u0026     export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026     wget -O - https://keybase.io/justcontainers/key.asc | gpg --import \u0026\u0026     gpg --batch --verify s6.sig s6.tgz \u0026\u0026     tar -xzf s6.tgz -C / \u0026\u0026     rm -r \"$GNUPGHOME\" s6.sig s6.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   wget -q https://www.open-mpi.org/software/ompi/v$OPENMPI_MAIN_VERSION/downloads/openmpi-$OPENMPI_VERSION.tar.bz2 \u0026\u0026   tar -xjf openmpi-$OPENMPI_VERSION.tar.bz2 \u0026\u0026   cd /tmp/openmpi-$OPENMPI_VERSION \u0026\u0026   ./configure --prefix=/usr --with-cuda \u0026\u0026   make -j2 \u0026\u0026   make install \u0026\u0026   rm -r /tmp/openmpi-$OPENMPI_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb \u0026\u0026     dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb \u0026\u0026     rm nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb \u0026\u0026     apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends       libnccl-dev=${NCCL_PACKAGE_VERSION} libnccl2=${NCCL_PACKAGE_VERSION} \u0026\u0026   rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MV2_USE_CUDA",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "_pip=\"pip\" \u0026\u0026     echo $BASE_CHAINER_IMAGE_TAG \u0026\u0026     if echo \"$BASE_CHAINER_IMAGE_TAG\" | grep python3 2\u003e\u00261 \u003e/dev/null; then _pip=\"pip3\"; fi \u0026\u0026     $_pip install chainermn==$CHAINER_MN_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "NB_UID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "NB_GID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "addgroup --gid $NB_GID $USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -q --gecos \"\" --disabled-password --uid $NB_UID --gid $NB_GID $USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /ssh-key/$USER \u0026\u0026 chown -R $USER:$USER /ssh-key/$USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/ssh-key/$USER"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p $HOME \u0026\u0026 chown $USER:$USER $HOME \u0026\u0026 chmod 755 $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$HOME"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}