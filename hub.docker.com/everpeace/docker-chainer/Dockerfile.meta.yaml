MetaArgs:
- DefaultValue: '"v4.0.0b3-python3"'
  Key: BASE_CHAINER_IMAGE_TAG
  ProvidedValue: null
  Value: '"v4.0.0b3-python3"'
Stages:
- BaseName: chainer/chainer:$BASE_CHAINER_IMAGE_TAG
  Commands:
  - Maintainer: Shingo Omura <omura@preferred.jp>
    Name: maintainer
  - Key: OPENMPI_MAIN_VERSION
    Name: arg
    Value: '"2.1"'
  - Key: OPENMPI_PATCH_VERSION
    Name: arg
    Value: '"2"'
  - Key: OPENMPI_VERSION
    Name: arg
    Value: '"${OPENMPI_MAIN_VERSION}.${OPENMPI_PATCH_VERSION}"'
  - Key: NCCL_PACKAGE_VERSION
    Name: arg
    Value: '"2.1.4-1+cuda8.0"'
  - Key: CHAINER_MN_VERSION
    Name: arg
    Value: '"1.2.0"'
  - Key: S6_OVERLAY_VERSION
    Name: arg
    Value: '"1.19.1.1"'
  - Key: SSH_USER
    Name: arg
    Value: '"chainer"'
  - Env:
    - Key: BASE_CHAINER_IMAGE_TAG
      Value: ${BASE_CHAINER_IMAGE_TAG:-latest-python3}
    Name: env
  - Env:
    - Key: BASE_CHAINER_IMAGE
      Value: '"chainer/chainer:$BASE_CHAINER_IMAGE_TAG"'
    Name: env
  - Env:
    - Key: USER
      Value: $SSH_USER
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$USER
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -yq --no-install-recommends       locales
      wget sudo ca-certificates ssh build-essential &&     rm -rf /var/lib/apt/lists/*
      /var/cache/apt/archives/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&     wget -O s6.tgz       https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz
      &&     wget -O s6.sig       https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz.sig
      &&     export GNUPGHOME="$(mktemp -d)" &&     wget -O - https://keybase.io/justcontainers/key.asc
      | gpg --import &&     gpg --batch --verify s6.sig s6.tgz &&     tar -xzf s6.tgz
      -C / &&     rm -r "$GNUPGHOME" s6.sig s6.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&   wget -q https://www.open-mpi.org/software/ompi/v$OPENMPI_MAIN_VERSION/downloads/openmpi-$OPENMPI_VERSION.tar.bz2
      &&   tar -xjf openmpi-$OPENMPI_VERSION.tar.bz2 &&   cd /tmp/openmpi-$OPENMPI_VERSION
      &&   ./configure --prefix=/usr --with-cuda &&   make -j2 &&   make install &&   rm
      -r /tmp/openmpi-$OPENMPI_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb
      &&     dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb &&     rm
      nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb &&     apt-get update
      &&     apt-get install -yq --no-install-recommends       libnccl-dev=${NCCL_PACKAGE_VERSION}
      libnccl2=${NCCL_PACKAGE_VERSION} &&   rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*
    Name: run
    PrependShell: true
  - Env:
    - Key: MV2_USE_CUDA
      Value: "1"
    Name: env
  - CmdLine:
    - _pip="pip" &&     echo $BASE_CHAINER_IMAGE_TAG &&     if echo "$BASE_CHAINER_IMAGE_TAG"
      | grep python3 2>&1 >/dev/null; then _pip="pip3"; fi &&     $_pip install chainermn==$CHAINER_MN_VERSION
    Name: run
    PrependShell: true
  - Key: NB_UID
    Name: arg
    Value: "1000"
  - Key: NB_GID
    Name: arg
    Value: "1000"
  - CmdLine:
    - addgroup --gid $NB_GID $USER
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -q --gecos "" --disabled-password --uid $NB_UID --gid $NB_GID $USER
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /ssh-key/$USER && chown -R $USER:$USER /ssh-key/$USER
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /ssh-key/$USER
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs
    - /
  - CmdLine:
    - mkdir -p $HOME && chown $USER:$USER $HOME && chmod 755 $HOME
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $HOME
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /init
    Name: cmd
    PrependShell: false
  From:
    Image: chainer/chainer:$BASE_CHAINER_IMAGE_TAG
  Name: ""
  Platform: ""
  SourceCode: FROM chainer/chainer:$BASE_CHAINER_IMAGE_TAG
