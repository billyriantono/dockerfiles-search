MetaArgs: null
Stages:
- BaseName: nginx:1.13-alpine
  Commands:
  - CmdLine:
    - apk add --update nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/frontend/app &&    mkdir -p /opt/backend/app
    Name: run
    PrependShell: true
  - Key: PORT
    Name: arg
    Value: "3005"
  - Env:
    - Key: PORT
      Value: ${PORT}
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default-nginx.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Key: NODE_ENV
    Name: arg
    Value: production
  - Env:
    - Key: NODE_ENV
      Value: ${NODE_ENV}
    Name: env
  - Key: BACKEND_URL
    Name: arg
    Value: localhost:3001
  - Env:
    - Key: BACKEND_URL
      Value: ${BACKEND_URL}
    Name: env
  - Key: SOCKETIO_SERVER_PORT
    Name: arg
    Value: "3001"
  - Env:
    - Key: SOCKETIO_SERVER_PORT
      Value: ${SOCKETIO_SERVER_PORT}
    Name: env
  - Key: DB_USERNAME
    Name: arg
    Value: pingpong
  - Key: DB_PASSWORD
    Name: arg
    Value: pingpongpassword
  - Key: DB_NAME
    Name: arg
    Value: pingpong
  - Key: DB_HOSTNAME
    Name: arg
    Value: db:5432
  - Env:
    - Key: DB_USERNAME
      Value: ${DB_USERNAME}
    Name: env
  - Env:
    - Key: DB_PASSWORD
      Value: ${DB_PASSWORD}
    Name: env
  - Env:
    - Key: DB_NAME
      Value: ${DB_NAME}
    Name: env
  - Env:
    - Key: DB_HOSTNAME
      Value: ${DB_HOSTNAME}
    Name: env
  - Key: APP_HOST
    Name: arg
    Value: underskruv.com
  - Env:
    - Key: APP_HOST
      Value: ${APP_HOST}
    Name: env
  - Key: WS_HOST
    Name: arg
    Value: ws.underskruv.com
  - Env:
    - Key: WS_HOST
      Value: ${WS_HOST}
    Name: env
  - Name: workdir
    Path: /opt/frontend
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - frontend/package.json
    - frontend/package-lock.json*
    - ./
  - CmdLine:
    - npm install && npm cache clean --force
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/frontend/node_modules/.bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./frontend
    - /opt/frontend/app
  - Name: workdir
    Path: /opt/frontend/app
  - CmdLine:
    - npm run-script build
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -a /opt/frontend/app/build/. /usr/share/nginx/html/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/backend
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backend/package.json
    - backend/package-lock.json*
    - ./
  - CmdLine:
    - npm install && npm cache clean --force
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/backend/node_modules/.bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./backend
    - /opt/backend/app
  - Name: workdir
    Path: /opt/backend/app
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:1.13-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:1.13-alpine
