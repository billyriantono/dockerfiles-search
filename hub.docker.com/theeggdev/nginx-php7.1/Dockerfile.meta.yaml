MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Ludwring Liccien <ludwring.liccien@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt-get update  &&     apt-get install -y software-properties-common &&     apt-get
      install -y build-essential make
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     apt-get update &&     apt-get install -y
      language-pack-en-base &&    export LC_ALL=en_US.UTF-8 &&     export LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get upgrade --yes && \tapt-get install --yes nano wget
      curl git vim"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get upgrade --yes && \tapt-get install --yes nginx mcrypt"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get upgrade --yes &&  \tapt-get install -y  php7.1  \t\tphp7.1-cli
      \ \t\tphp7.1-common  \t\tphp7.1-curl  \t\tphp7.1-dba  \t\tphp7.1-dev  \t\tphp7.1-fpm
      \ \t\tphp7.1-mbstring  \t\tphp7.1-mcrypt  \t\tphp7.1-mysql  \t\tphp7.1-opcache
      \ \t\tphp7.1-soap  \t\tphp7.1-xml  \t\tphp7.1-json  \t\tphp7.1-zip \t\tphp-redis"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require "laravel/installer"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sL https://deb.nodesource.com/setup_6.x | bash - && \tapt-get update
      && \tapt-get install -y nodejs"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&     echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&     apt-get update && apt-get install yarn -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y ruby-full && \tgem install sass && \tgem
      install less"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower gulp yarn grunt-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget \"https://s3.amazonaws.com/simonetti-tests/oci8/instantclient-sdk-linux.x64-12.1.0.2.0.zip\"
      -P /tmp/ && \twget \"https://s3.amazonaws.com/simonetti-tests/oci8/instantclient-basic-linux.x64-12.1.0.2.0.zip\"
      -P /tmp/"
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /tmp/instantclient-basic-linux.x64-12.1.0.2.0.zip -d /usr/local/ &&     unzip
      /tmp/instantclient-sdk-linux.x64-12.1.0.2.0.zip -d /usr/local/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/instantclient_12_1 /usr/local/instantclient &&     ln -s /usr/local/instantclient/libclntsh.so.12.1
      /usr/local/instantclient/libclntsh.so &&     echo 'instantclient,/usr/local/instantclient'
      | pecl install oci8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libaio1 sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/root/.composer/vendor/bin
    Name: env
  - CmdLine:
    - echo "\n"'PATH="$PATH:/root/.composer/vendor/bin"' >> /root/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -ri 's/^;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/7.1/fpm/php.ini
      && \tsed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\"
      /etc/php/7.1/fpm/php.ini && \tsed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size
      = 100M/g\" /etc/php/7.1/fpm/php.ini && \tsed -i -e \"s/memory_limit\\s*=\\s*128M/memory_limit
      = 1024M/g\" /etc/php/7.1/fpm/php.ini && \tsed -i -e \"s/max_execution_time\\s*=\\s*30/max_execution_time
      = 3000/g\" /etc/php/7.1/fpm/php.ini && \tsed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize
      = no/g\" /etc/php/7.1/fpm/php-fpm.conf && \tsed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output
      = yes/g\" /etc/php/7.1/fpm/pool.d/www.conf && \tsed -i -e \"s/pm.max_children
      = 5/pm.max_children = 9/g\" /etc/php/7.1/fpm/pool.d/www.conf && \tsed -i -e
      \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/7.1/fpm/pool.d/www.conf
      && \tsed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/7.1/fpm/pool.d/www.conf
      && \tsed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/7.1/fpm/pool.d/www.conf
      && \tsed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.1/fpm/pool.d/www.conf
      && \tsed -i -e \"s/;request_terminate_timeout = 0/request_terminate_timeout
      = 3000/g\" /etc/php/7.1/fpm/php-fpm.conf && \tsed -i -e 's/apache/mceith/g'
      /etc/php/7.1/fpm/pool.d/www.conf && \tsed -i '$a extension=oci8.so' /etc/php/7.1/fpm/php.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.1/fpm/pool.d/www.conf
      && \tfind /etc/php/7.1/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g'
      {} \\; && \tmkdir /run/php"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '$a extension=oci8.so' /etc/php/7.1/cli/php.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default
    - /etc/nginx/sites-available/default
  - Chown: ""
    Name: add
    SourcesAndDest:
    - oci8.ini
    - /etc/php/versionPHP/mods-available/
  - CmdLine:
    - useradd -g 33 -m deployer && echo "deployer:deployer" | chpasswd && adduser
      deployer sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deployer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: deployer
  - Name: workdir
    Path: /home/deployer
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - "sudo service php7.1-fpm start && \tsudo nginx -g \"daemon off;\""
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
