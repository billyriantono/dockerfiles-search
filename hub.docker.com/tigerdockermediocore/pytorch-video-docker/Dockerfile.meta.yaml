MetaArgs: null
Stages:
- As: devel-base
  BaseName: nvcr.io/nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compat32,compute,video
    Name: env
  - Name: workdir
    Path: /tmp/workdir
  - CmdLine:
    - sed -i.bak -re "s/([a-z]{2}.)?archive.ubuntu.com|security.ubuntu.com/mirror.kakao.com/g"
      /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yqq update &&         apt-get install -yq --no-install-recommends apt-utils
      ca-certificates expat libgomp1 libxcb-shape0-dev &&         apt-get autoremove
      -y &&         apt-get clean -y
    Name: run
    PrependShell: true
  From:
    Image: nvcr.io/nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Name: devel-base
  Platform: ""
  SourceCode: FROM    nvcr.io/nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04 AS devel-base
- As: runtime-base
  BaseName: nvcr.io/nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04
  Commands:
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compat32,compute,video
    Name: env
  - Name: workdir
    Path: /tmp/workdir
  - CmdLine:
    - sed -i.bak -re "s/([a-z]{2}.)?archive.ubuntu.com|security.ubuntu.com/mirror.kakao.com/g"
      /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yqq update &&         apt-get install -yq --no-install-recommends apt-utils
      ca-certificates expat libgomp1 libxcb-shape0-dev &&         apt-get autoremove
      -y &&         apt-get clean -y
    Name: run
    PrependShell: true
  From:
    Image: nvcr.io/nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04
  Name: runtime-base
  Platform: ""
  SourceCode: FROM        nvcr.io/nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04 AS runtime-base
- As: build
  BaseName: devel-base
  Commands:
  - Env:
    - Key: NVIDIA_HEADERS_VERSION
      Value: 8.1.24.9
    Name: env
  - Key: PKG_CONFIG_PATH
    Name: arg
    Value: /opt/ffmpeg/lib/pkgconfig
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"$LD_LIBRARY_PATH:/opt/ffmpeg/lib"'
    Name: env
  - Key: PREFIX
    Name: arg
    Value: /opt/ffmpeg
  - Key: MAKEFLAGS
    Name: arg
    Value: '"-j12"'
  - Env:
    - Key: FFMPEG_VERSION
      Value: 4.1.4
    - Key: AOM_VERSION
      Value: v1.0.0
    - Key: FDKAAC_VERSION
      Value: 0.1.5
    - Key: FONTCONFIG_VERSION
      Value: 2.12.4
    - Key: FREETYPE_VERSION
      Value: 2.5.5
    - Key: FRIBIDI_VERSION
      Value: 0.19.7
    - Key: KVAZAAR_VERSION
      Value: 1.2.0
    - Key: LAME_VERSION
      Value: "3.100"
    - Key: LIBASS_VERSION
      Value: 0.13.7
    - Key: LIBVIDSTAB_VERSION
      Value: 1.1.0
    - Key: OGG_VERSION
      Value: 1.3.2
    - Key: OPENCOREAMR_VERSION
      Value: 0.1.5
    - Key: OPUS_VERSION
      Value: "1.2"
    - Key: OPENJPEG_VERSION
      Value: 2.1.2
    - Key: THEORA_VERSION
      Value: 1.1.1
    - Key: VORBIS_VERSION
      Value: 1.3.5
    - Key: VPX_VERSION
      Value: 1.8.0
    - Key: WEBP_VERSION
      Value: 1.0.2
    - Key: X264_VERSION
      Value: 20170226-2245-stable
    - Key: X265_VERSION
      Value: 3.1.1
    - Key: XVID_VERSION
      Value: 1.3.4
    - Key: SRC
      Value: /usr/local
    Name: env
  - Key: FREETYPE_SHA256SUM
    Name: arg
    Value: '"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8 freetype-2.5.5.tar.gz"'
  - Key: FRIBIDI_SHA256SUM
    Name: arg
    Value: '"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz"'
  - Key: LIBASS_SHA256SUM
    Name: arg
    Value: '"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7 0.13.7.tar.gz"'
  - Key: LIBVIDSTAB_SHA256SUM
    Name: arg
    Value: '"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz"'
  - Key: OGG_SHA256SUM
    Name: arg
    Value: '"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz"'
  - Key: OPUS_SHA256SUM
    Name: arg
    Value: '"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9 opus-1.2.tar.gz"'
  - Key: THEORA_SHA256SUM
    Name: arg
    Value: '"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz"'
  - Key: VORBIS_SHA256SUM
    Name: arg
    Value: '"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce libvorbis-1.3.5.tar.gz"'
  - Key: XVID_SHA256SUM
    Name: arg
    Value: '"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz"'
  - CmdLine:
    - buildDeps="autoconf                     automake                     cmake                     curl                     bzip2                     libexpat1-dev                     g++                     gcc                     git                     gperf                     libtool                     make                     nasm                     perl                     pkg-config                     python                     libssl-dev                     yasm                     zlib1g-dev"
      &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends
      ${buildDeps}
    Name: run
    PrependShell: true
  - CmdLine:
    - "DIR=/tmp/nv-codec-headers && \tgit clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git
      ${DIR} && \tcd ${DIR} && \tgit checkout n${NVIDIA_HEADERS_VERSION} && \tsed
      -i 's@/usr/local@'\"$PREFIX\"'@' Makefile && \tmake && \tmake install  &&     rm
      -rf ${DIR}"
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/opencore-amr &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}"
      --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/x264 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2
      |         tar -jx --strip-components=1 &&         ./configure --prefix="${PREFIX}"
      --enable-shared --enable-pic --disable-cli &&         make &&         make install
      &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/x265 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |         tar
      -zx &&         cd x265_${X265_VERSION}/build/linux &&         sed -i "/-DEXTRA_LIB/
      s/$/ -DCMAKE_INSTALL_PREFIX=\${PREFIX}/" multilib.sh &&         sed -i "/^cmake/
      s/$/ -DENABLE_CLI=OFF/" multilib.sh &&         ./multilib.sh &&         make
      -C 8bit install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/ogg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&         echo
      ${OGG_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1
      -f libogg-${OGG_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}"
      --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/opus &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&         echo
      ${OPUS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1
      -f opus-${OPUS_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure
      --prefix="${PREFIX}" --enable-shared &&         make &&         make install
      &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/vorbis &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz
      &&         echo ${VORBIS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1
      -f libvorbis-${VORBIS_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}"
      --with-ogg="${PREFIX}" --enable-shared &&         make &&         make install
      &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/theora &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz
      &&         echo ${THEORA_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1
      -f libtheora-${THEORA_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}"
      --with-ogg="${PREFIX}" --enable-shared &&         make &&         make install
      &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/vpx &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar
      -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}" --enable-vp8
      --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared         --disable-debug
      --disable-examples --disable-docs --disable-install-bins  &&         make &&         make
      install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/vebp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}"
      --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/lame &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION}
      | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}"
      --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --enable-pic --disable-frontend
      &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/xvid &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&         echo
      ${XVID_SHA256SUM} | sha256sum --check &&         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz
      &&         cd xvidcore/build/generic &&         ./configure --prefix="${PREFIX}"
      --bindir="${PREFIX}/bin" --datadir="${DIR}" --enable-shared --enable-shared
      &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/fdk-aac &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar
      -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure --prefix="${PREFIX}"
      --enable-shared --datadir="${DIR}" &&         make &&         make install &&         rm
      -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/openjpeg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz
      |         tar -zx --strip-components=1 &&         cmake -DBUILD_THIRDPARTY:BOOL=ON
      -DCMAKE_INSTALL_PREFIX="${PREFIX}" . &&         make &&         make install
      &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/freetype &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz
      &&         echo ${FREETYPE_SHA256SUM} | sha256sum --check &&         tar -zx
      --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&         ./configure
      --prefix="${PREFIX}" --disable-static --enable-shared &&         make &&         make
      install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/vid.stab &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz
      &&        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&         tar -zx
      --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}"
      . &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/fribidi &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&         echo
      ${FRIBIDI_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1
      -f ${FRIBIDI_VERSION}.tar.gz &&         sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab
      charset lib/' Makefile.am &&         ./bootstrap --no-config &&         ./configure
      -prefix="${PREFIX}" --disable-static --enable-shared &&         make -j 1 &&         make
      install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/fontconfig &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2
      &&        tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2
      &&         ./configure -prefix="${PREFIX}" --disable-static --enable-shared
      &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/libass &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&        echo
      ${LIBASS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1
      -f ${LIBASS_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure -prefix="${PREFIX}"
      --disable-static --enable-shared &&         make &&         make install &&         rm
      -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/kvazaar &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl
      -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz
      &&        tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&         ./autogen.sh
      &&         ./configure -prefix="${PREFIX}" --disable-static --enable-shared
      &&         make &&         make install &&         rm -rf ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/aom &&         git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom
      ${DIR} ;         cd ${DIR} ;         rm -rf CMakeCache.txt CMakeFiles ;         mkdir
      -p ./aom_build ;         cd ./aom_build ;         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}"
      -DBUILD_SHARED_LIBS=1 ..;         make ;         make install ;         rm -rf
      ${DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2
      &&         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - "DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         ./configure         --disable-debug
      \        --disable-doc         --disable-ffplay      \t--enable-cuda         --enable-nvenc
      \        --enable-cuvid         --enable-libnpp         --enable-shared         --enable-avresample
      \        --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl
      \        --enable-libass         --enable-libfreetype         --enable-libvidstab
      \        --enable-libmp3lame         --enable-libopenjpeg         --enable-libopus
      \        --enable-libtheora         --enable-libvorbis         --enable-libvpx
      \        --enable-libwebp         --enable-libx265         --enable-libxvid
      \        --enable-libx264         --enable-nonfree         --enable-openssl
      \        --enable-libfdk_aac         --enable-libkvazaar         --enable-libaom
      --extra-libs=-lpthread         --enable-postproc         --enable-small         --enable-version3
      \        --extra-cflags=\"-I${PREFIX}/include -I${PREFIX}/include/ffnvcodec
      -I/usr/local/cuda/include/\"         --extra-ldflags=\"-L${PREFIX}/lib -L/usr/local/cuda/lib64/
      -L/usr/local/cuda/lib32/\"         --extra-libs=-ldl         --prefix=\"${PREFIX}\"
      &&         make &&         make install &&         make distclean &&         hash
      -r &&         cd tools &&         make qt-faststart &&         cp qt-faststart
      ${PREFIX}/bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {}
      /usr/local/lib/ &&         cp ${PREFIX}/bin/* /usr/local/bin/ &&         cp
      -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&         LD_LIBRARY_PATH=/usr/local/lib
      ffmpeg -buildconf
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: devel-base
  Name: build
  Platform: ""
  SourceCode: FROM  devel-base as build
- As: release
  BaseName: runtime-base
  Commands:
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin
    - /usr/local/bin/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/local/share
    - /usr/local/share/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/local/lib
    - /usr/local/lib/
  - Env:
    - Key: OPENCV_VERSION
      Value: 3.4.7
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - apt-get -y update &&     apt-get -y install         python3         python3-dev         git         wget         unzip         cmake         build-essential         pkg-config         libatlas-base-dev         gfortran         libjasper-dev         libgtk2.0-dev         libavcodec-dev         libavformat-dev         libswscale-dev         libjpeg-dev         libpng-dev         libtiff-dev         libjasper-dev         libv4l-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm
      get-pip.py &&     pip3 install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip -O opencv3.zip
      &&     unzip -q opencv3.zip &&     mv /opencv-$OPENCV_VERSION /opencv &&     rm
      opencv3.zip &&     wget https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip
      -O opencv_contrib3.zip &&     unzip -q opencv_contrib3.zip &&     mv /opencv_contrib-$OPENCV_VERSION
      /opencv_contrib &&     rm opencv_contrib3.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opencv/build && cd /opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE       -D
      BUILD_PYTHON_SUPPORT=ON       -D CMAKE_INSTALL_PREFIX=/usr/local       -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules       -D
      BUILD_EXAMPLES=OFF       -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python3       -D
      BUILD_opencv_python3=ON       -D BUILD_opencv_python2=OFF       -D WITH_IPP=OFF       -D
      WITH_FFMPEG=ON       -D WITH_CUDA=ON       -D ENABLE_FAST_MATH=1       -D CUDA_FAST_MATH=1       -D
      CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda       -D WITH_CUBLAS=ON       -D WITH_V4L=ON
      ..
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opencv/build &&     make -j$(nproc) &&     make install &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&      rm -rf /opencv /opencv_contrib /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install torch==1.0.0 torchvision==0.2.0 -f https://download.pytorch.org/whl/cu90/torch_stable.html
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install cffi tensorboardX tqdm scikit-image colorama==0.3.7 setproctitle
      pytz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         rsync         htop         openssh-server         libpng-dev         software-properties-common         swig
      &&         apt-get autoremove -y &&         apt-get clean -y &&         rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install h5py munkres sklearn scikit-learn scikit-image visdom youtube_dl
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install matplotlib nibabel pypng moviepy Pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/bin/python && ln -s /usr/bin/python3.5 /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"$LD_LIBRARY_PATH:/usr/local/lib"'
    Name: env
  - Name: volume
    Volumes:
    - /workspace
  - Name: workdir
    Path: /workspace
  From:
    Stage:
      Index: 1
      Named: runtime-base
  Name: release
  Platform: ""
  SourceCode: FROM        runtime-base AS release
