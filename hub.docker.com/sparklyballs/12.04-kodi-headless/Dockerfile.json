{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:12.04",
      "SourceCode": "FROM ubuntu:12.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:12.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "usermod -u 99 nobody \u0026\u0026 usermod -g 100 nobody \u0026\u0026 usermod -d /home nobody \u0026\u0026 chown -R nobody:users /home \u0026\u0026 mkdir -p build-area/taglib-1.8 \u0026\u0026 mkdir -p /root/advancestore"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/kodi.sh",
            "/root/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/advancedsettings.xml",
            "/advancestore/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/taglib-1.8",
            "build-area/taglib-1.8/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/start.sh  \u0026\u0026 apt-get update \u0026\u0026 apt-get install supervisor software-properties-common python-software-properties ffmpeg automake autopoint bison build-essential ccache cmake curl cvs default-jre fp-compiler gawk gdc gettext git-core gperf libasound2-dev libass-dev libavcodec-dev libavfilter-dev libavformat-dev libavutil-dev libbluetooth-dev  libboost-dev libboost-thread-dev libbz2-dev libcap-dev libcdio-dev libcec-dev libcec1 libcrystalhd-dev libcrystalhd3 libcurl3 libcurl4-gnutls-dev libcwiid-dev libcwiid1 libdbus-1-dev libenca-dev libflac-dev libfontconfig-dev libfreetype6-dev libfribidi-dev libglew-dev libiso9660-dev libjasper-dev libjpeg-dev libltdl-dev liblzo2-dev libmad0-dev libmicrohttpd-dev libmodplug-dev libmp3lame-dev libmpeg2-4-dev libmpeg3-dev libmysqlclient-dev libnfs-dev libogg-dev libpcre3-dev libplist-dev libpng-dev libpostproc-dev libpulse-dev libsamplerate-dev libsdl-dev libsdl-gfx1.2-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libshairport-dev libsmbclient-dev libsqlite3-dev libssh-dev libssl-dev libswscale-dev libtiff-dev libtinyxml-dev libtool libudev-dev libusb-dev libva-dev libva-egl1 libva-tpi1 libvdpau-dev libvorbisenc2 libxml2-dev libxmu-dev libxrandr-dev libxrender-dev libxslt1-dev libxt-dev libyajl-dev mesa-utils nasm pmount python-dev python-imaging python-sqlite swig unzip yasm zip zlib1g-dev -y curl wget unzip \u0026\u0026 add-apt-repository ppa:team-xbmc/ppa \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y libbluray-dev libbluray1 kodi-eventclients-xbmc-send \u0026\u0026 add-apt-repository --remove ppa:team-xbmc/ppa \u0026\u0026 cd build-area/taglib-1.8 \u0026\u0026 cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_RELEASE_TYPE=Release . \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 git clone https://github.com/topfs2/xbmc.git \u0026\u0026 cd xbmc \u0026\u0026 git checkout helix_headless  \u0026\u0026  ./bootstrap \u0026\u0026 ./configure --prefix=/opt/kodi-server \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 apt-get install -y libtag1-dev \u0026\u0026 chown -R nobody:users /opt/kodi-server \u0026\u0026 cd / \u0026\u0026 rm -rf  build-area \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists /usr/share/man /usr/share/doc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080/tcp",
            "9777/udp"
          ]
        },
        {
          "CmdLine": [
            "/root/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}