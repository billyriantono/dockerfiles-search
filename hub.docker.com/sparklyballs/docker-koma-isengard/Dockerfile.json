{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "linuxserver/baseimage",
      "SourceCode": "FROM linuxserver/baseimage",
      "Platform": "",
      "From": {
        "Image": "linuxserver/baseimage"
      },
      "Commands": [
        {
          "CmdLine": [
            "rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Maintainer": "Mark Burford \u003csparklyballs@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "screen"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "9777/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/",
            "/root/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config"
          ]
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "kodiCheckout=15.0-Isengard \u0026\u0026 buildDeps=\"build-essential zip unzip yasm gawk cmake wget git-core autoconf libtool automake autopoint swig doxygen openjdk-7-jre-headless gperf libsqlite3-dev libpcre3-dev libtag1-dev libbluray-dev libjasper-dev libmicrohttpd-dev libavahi-client-dev libxrandr-dev libssh-dev libsmbclient-dev libnfs-dev libboost1.54-dev python-dev libmysqlclient-dev libgle3-dev libglew-dev libass-dev libmpeg2-4-dev libjpeg-dev libflac-dev libvorbis-dev libgnutls-dev libbz2-ocaml-dev libtiff5-dev libyajl-dev libssl-dev libxml2-dev libxslt-dev libiso9660-dev libtinyxml-dev liblzo2-dev\" \u0026\u0026 runtimeDeps=\"zip libpcrecpp0 libtag1-vanilla libtag1c2a libaacs0 libbluray1 libjasper1 libjpeg-turbo8 libjpeg8 libmicrohttpd10 libavahi-client3 libavahi-common-dev libdbus-1-dev libssh-4 libsmbclient libnfs1 libmysqlclient18 libgle3 libglew1.10 libass4 libmpeg2-4 libjpeg-turbo8 libflac8 libogg0 libvorbis0a libvorbisenc2 libvorbisfile3 libbz2-ocaml libtiff5 libtiffxx5 libyajl2 libxslt1.1 libiso9660-8 libtinyxml2.6.2 liblzo2-2 libxrandr2 unzip\" \u0026\u0026 mv /root/excludes /etc/dpkg/dpkg.cfg.d/excludes \u0026\u0026 apt-get update -qq \u0026\u0026 apt-get install $buildDeps -qy \u0026\u0026 cd /tmp/ \u0026\u0026 git clone https://github.com/xbmc/xbmc.git \u0026\u0026 wget http://curl.haxx.se/download/curl-7.43.0.tar.gz \u0026\u0026 cd /tmp \u0026\u0026 tar xvf curl-* \u0026\u0026 cd curl-* \u0026\u0026 ./configure --prefix=/usr --with-ssl --with-zlib \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd /tmp/xbmc \u0026\u0026 mv /root/headless.patch . \u0026\u0026 git checkout $kodiCheckout \u0026\u0026 git apply headless.patch \u0026\u0026 ./bootstrap \u0026\u0026 ./configure --enable-nfs --enable-upnp --enable-ssh --enable-libbluray --disable-debug --disable-vdpau --disable-vaapi --disable-crystalhd --disable-vdadecoder --disable-vtbdecoder --disable-openmax --disable-joystick --disable-rsxs --disable-projectm --disable-rtmp --disable-airplay --disable-airtunes --disable-dvdcss --disable-optical-drive --disable-libusb --disable-libcec --disable-libmp3lame --disable-libcap --disable-udev --disable-libvorbisenc --disable-asap-codec --disable-afpclient --disable-goom --disable-fishbmc --disable-spectrum --disable-waveform --disable-avahi --disable-non-free --disable-texturepacker --disable-pulse --disable-dbus --disable-alsa --disable-hal --prefix=/opt/kodi-server \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 apt-get purge -y --remove $buildDeps \u0026\u0026 apt-get -y autoremove \u0026\u0026 apt-get install $runtimeDeps -qy \u0026\u0026 add-apt-repository ppa:team-xbmc/ppa \u0026\u0026 apt-get update -qq \u0026\u0026 apt-get install mariadb-server kodi-eventclients-xbmc-send -qy \u0026\u0026 add-apt-repository --remove ppa:team-xbmc/ppa \u0026\u0026 cd / \u0026\u0026 apt-get clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's#\\(bind-address.*=\\).*#\\1 0.0.0.0#g' /etc/mysql/my.cnf \u0026\u0026 sed -i -e 's#\\(log_error.*=\\).*#\\1 /config/databases/mysql_safe.log#g' /etc/mysql/my.cnf \u0026\u0026 sed -i -e 's/\\(user.*=\\).*/\\1 abc/g' /etc/mysql/my.cnf \u0026\u0026 echo '[mysqld]' \u003e /etc/mysql/conf.d/innodb_file_per_table.cnf \u0026\u0026 echo 'innodb_file_per_table' \u003e\u003e /etc/mysql/conf.d/innodb_file_per_table.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 911 -U -s /bin/false abc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -G users abc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init/",
            "/etc/my_init.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "services/",
            "/etc/service/"
          ]
        },
        {
          "CmdLine": [
            "chmod -v +x /etc/service/*/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -v +x /etc/my_init.d/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}