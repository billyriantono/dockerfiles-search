MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Commands:
  - CmdLine:
    - apt-get -y update && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install apt-transport-https ca-certificates software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-cache policy git-all &&     apt-get update &&     apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://repos.mesosphere.io/ubuntu/ xenial main" > /etc/apt/sources.list.d/mesosphere.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF &&     echo
      "deb http://deb.nodesource.com/node_6.x xenial main" > /etc/apt/sources.list.d/nodesource.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv 68576280
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:jonathonf/python-3.6
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libffi-dev   libcurl4-openssl-dev   libssl-dev   wget   curl   openssh-server   mesos   nodejs   rsync   screen   vim  &&
      apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.ssh && chmod 700 /root/.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - waitForKey.sh
    - /usr/bin/waitForKey.sh
  - CmdLine:
    - chmod 777 /usr/bin/waitForKey.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &&     bash
      Miniconda3-latest-Linux-x86_64.sh -b &&     rm Miniconda3-latest-Linux-x86_64.sh
      &&     /root/miniconda3/bin/conda create -n py36 python==3.6.7 &&     echo ".
      /root/miniconda3/etc/profile.d/conda.sh && /root/miniconda3/bin/conda activate
      py36" > /root/.bashrc &&     echo ". /root/.bashrc && bash -c" > /root/miniconda3/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/miniconda3/envs/py36/bin:$PATH
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /root/miniconda3/envs/py36/lib/python3.6/site-packages
    Name: env
  - CmdLine:
    - pip install --upgrade pip setuptools virtualenv awscli protobuf ipython
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/miniconda3/bin/conda create -n s3am python=2.7.15 &&     /root/miniconda3/envs/s3am/bin/python
      -m pip install --upgrade pip &&     /root/miniconda3/envs/s3am/bin/pip install
      s3am==2.0 &&     ln -s /root/miniconda3/envs/s3am/bin/s3am /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/cuda/bin
    Name: env
  - Env:
    - Key: CUDA_HOME
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    Name: env
  - CmdLine:
    - /root/miniconda3/bin/conda install -n py36 pytorch-nightly cudatoolkit=9.0 -c
      pytorch
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/miniconda3/bin/conda install -n py36 google-sparsehash -c bioconda
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/miniconda3/bin/conda install -n py36 -c anaconda pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install torchnet torchviz
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/facebookresearch/SparseConvNet.git &&     sed -i
      "s%torch.cuda.is_available()%True%g" SparseConvNet/setup.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: SparseConvNet
  - CmdLine:
    - python setup.py install && python examples/hello-world.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - rm -r SparseConvNet
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://download.docker.com/linux/static/stable/x86_64/docker-18.06.1-ce.tgz          |
      tar -xvzf - --transform='s,[^/]*/,,g' -C /usr/local/bin/          && chmod u+x
      /usr/local/bin/docker
    Name: run
    PrependShell: true
  - Env:
    - Key: MESOS_LAUNCHER
      Value: posix
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - echo "defshell -bash" > ~/.screenrc
    Name: run
    PrependShell: true
  - Env:
    - Key: TOIL_APPLIANCE_SELF
      Value: edraizen/toil-gpu:latest
    Name: env
  - CmdLine:
    - mkdir /var/lib/toil
    Name: run
    PrependShell: true
  - Env:
    - Key: TOIL_WORKDIR
      Value: /var/lib/toil
    Name: env
  - CmdLine:
    - git clone https://github.com/edraizen/toil.git toilsrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: toilsrc
  - CmdLine:
    - pip install .[all]
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - rm -r toilsrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /root/miniconda3/envs/py36/bin/_toil_mesos_executor /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /root/miniconda3/envs/py36/bin/_toil_worker /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /root/miniconda3/envs/py36/bin/toil /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''[ ! -z "$TERM" -a -r /etc/motd ] && cat /etc/motd'' >> /etc/bash.bashrc         &&
      printf ''\nThis is the Toil appliance. You can run your Toil script directly
      on the appliance.\nRun toil <workflow>.py --help to see all options for running
      your workflow.\nFor more information see http://toil.readthedocs.io/en/latest/\n\nCopyright
      (C) 2015-2018 Regents of the University of California\n\nVersion: edraizen/toil-gpu:latest\n\n''
      > /etc/motd'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh
    - /root/miniconda3/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
