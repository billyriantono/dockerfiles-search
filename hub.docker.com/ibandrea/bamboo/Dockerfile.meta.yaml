MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Elmer Salazar
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C
    Name: env
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -qq -y     python-pip     python-dev     python-lxml     libldap2-dev     unoconv     libpq-dev     git     mercurial     npm     fish     freetds-dev
      libsasl2-dev     postgresql-client     build-essential     python-software-properties     software-properties-common     libjpeg-dev     libfreetype6     libfreetype6-dev     zlib1g-dev     postgresql-9.3
      postgresql-client-9.3     postgresql-contrib-9.3     default-jre-headless &&     apt-get
      clean &&     rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: postgres
  - CmdLine:
    - /etc/init.d/postgresql start     && psql --command "CREATE USER pguser WITH
      SUPERUSER PASSWORD 'pguser';"     && createdb -O pguser pgdb
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/9.3/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "listen_addresses='*'" >> /etc/postgresql/9.3/main/postgresql.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/postgresql
    - /var/log/postgresql
    - /var/lib/postgresql
  - Name: user
    User: postgres
  - CmdLine:
    - /usr/lib/postgresql/9.3/bin/postgres
    - -D
    - /var/lib/postgresql/9.3/main
    - -c
    - config_file=/etc/postgresql/9.3/main/postgresql.conf
    Name: cmd
    PrependShell: false
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p /var/lib/trytond
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/
  - CmdLine:
    - hg clone https://bitbucket.org/huntergps/tryton-tasks tasks
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r tasks/requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bootstrap.py
    - /app/tasks/bootstrap.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config
    - /app/config
  - CmdLine:
    - invoke bs
    Name: run
    PrependShell: true
  - CmdLine:
    - cd public_data/sao &&     npm install grunt bower &&     npm install &&     nodejs
      node_modules/.bin/grunt --force &&     nodejs node_modules/.bin/bower --allow-root          --config.interactive=false
      --production         --force-latest  install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - trytond.conf
    - /etc/trytond.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - trytond-logconf.conf
    - /etc/trytond-logconf.conf
  - CmdLine:
    - find /app -name .hg -type d -exec echo rm -r {} \;
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/trytond
  - Name: expose
    Ports:
    - "5432"
    - "8000"
    - "8002"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run.sh
    - /app/
  - CmdLine:
    - /app/run.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - chsh -s /usr/bin/fish
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
