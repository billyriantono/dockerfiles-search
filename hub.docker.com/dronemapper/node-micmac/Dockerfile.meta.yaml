MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Jon-Pierre Stoermer <jp@dronemapper.com>
    Name: maintainer
  - Name: expose
    Ports:
    - "3000"
  - Env:
    - Key: TZ
      Value: US/Mountain
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils x11proto-core-dev
      make cmake libx11-dev git ca-certificates imagemagick gcc g++ exiv2 libimage-exiftool-perl
      libgeo-proj4-perl mesa-common-dev libgl1-mesa-dev libglapi-mesa libglu1-mesa
      opencl-headers proj-bin gdal-bin python-gdal graphicsmagick php figlet vim curl
      libboost-all-dev less
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y --no-install-recommends openssl python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade --trusted-host pypi.org --trusted-host pypi.python.org
      --trusted-host files.pythonhosted.org pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host
      files.pythonhosted.org setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host
      files.pythonhosted.org appsettings
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host
      files.pythonhosted.org Shapely
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host
      files.pythonhosted.org utm
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host
      files.pythonhosted.org pyproj==2.2.0
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs python-gdal libboost-dev libboost-program-options-dev
      git cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g nodemon
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/staging"'
  - CmdLine:
    - "git clone https://github.com/pierotofy/LAStools /staging/LAStools && \tcd LAStools/LASzip
      && \tmkdir build && \tcd build && \tcmake -DCMAKE_BUILD_TYPE=Release .. && \tmake"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/pierotofy/PotreeConverter /staging/PotreeConverter
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /staging/PotreeConverter && \tmkdir build && \tcd build && \tcmake -DCMAKE_BUILD_TYPE=Release
      -DLASZIP_INCLUDE_DIRS=/staging/LAStools/LASzip/dll -DLASZIP_LIBRARY=/staging/LAStools/LASzip/build/src/liblaszip.a
      .. && \tmake && \tmake install"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/www
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/var/www"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/dronemapper-io/micmac.git
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd micmac && rm -rf build && mkdir build && cd build &&     cmake     \t-DBUILD_POISSON=0
      \    \t-DBUILD_RNX2RTKP=0     \t-DWITH_OPENCL=OFF      \t-DWITH_OPEN_MP=OFF
      \     \t-DWITH_ETALONPOLY=OFF     \t-DWERROR=OFF     \t../ &&       make clean
      &&       make -j$(cat /proc/cpuinfo | grep processor | wc -l) && make install
      &&       mkdir /code/micmac &&       cd .. &&       cp -Rdp bin binaire-aux
      lib include /code/micmac"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/code/micmac/bin"'
    Name: env
  - CmdLine:
    - figlet -f slant DRONEMAPPER
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code/opendm
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dm/opendm
    - /code/opendm
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dm/odm_options.json
    - /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dm/settings.yaml
    - /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dm/VERSION
    - /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dm/run.sh
    - /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dm/run.py
    - /code
  - Name: workdir
    Path: '"/var/www"'
  - CmdLine:
    - /usr/bin/nodejs
    - /var/www/index.js
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
