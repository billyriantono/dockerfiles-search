MetaArgs: null
Stages:
- As: hapttic
  BaseName: golang:stretch
  Commands:
  - CmdLine:
    - git clone https://github.com/jsoendermann/hapttic.git &&     cd hapttic/ &&     go
      build -o hapttic .
    Name: run
    PrependShell: true
  From:
    Image: golang:stretch
  Name: hapttic
  Platform: ""
  SourceCode: FROM golang:stretch AS hapttic
- As: docker-tc
  BaseName: debian:stretch-slim
  Commands:
  - Chown: ""
    From: hapttic
    Name: copy
    SourcesAndDest:
    - /go/hapttic/hapttic
    - /usr/bin/hapttic
  - CmdLine:
    - hapttic -version &&     apt-get update &&     apt-get install -y         iproute2
      iptables iperf iputils-ping         curl jq         &&     rm -rf /var/lib/apt/lists/*
      &&     apt-get clean &&     mkdir -p /var/docker-tc &&     chmod +x /usr/bin/hapttic
    Name: run
    PrependShell: true
  - Key: S6_OVERLAY_VERSION
    Name: arg
    Value: 1.21.4.0
  - CmdLine:
    - curl -sSfL https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz
      | tar zxvC / &&     rm -rf /etc/services.d /etc/cont-init.d /etc/cont-finish.d
      &&     ln -sf /docker-tc/etc/services.d /etc &&     ln -sf /docker-tc/etc/cont-init.d
      /etc &&     ln -sf /docker-tc/etc/cont-finish.d /etc
    Name: run
    PrependShell: true
  - Key: DOCKER_VERSION
    Name: arg
    Value: '""'
  - CmdLine:
    - ( curl -fsSL get.docker.com | VERSION=${DOCKER_VERSION} CHANNEL=edge sh ) &&     rm
      -rf /var/lib/apt/lists/* &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - 80/tcp
  - Name: volume
    Volumes:
    - /var/docker-tc
  - Key: VERSION
    Name: arg
    Value: dev
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: DOCKER_TC_VERSION
      Value: '"${VERSION:-dev}"'
    - Key: HTTP_BIND
      Value: 127.0.0.1
    - Key: HTTP_PORT
      Value: "4080"
    - Key: S6_KILL_GRACETIME
      Value: "0"
    - Key: S6_KILL_FINISH_MAXTIME
      Value: "0"
    - Key: S6_KEEP_ENV
      Value: "1"
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"Łukasz Lach <llach@llach.pl>"'
    - Key: org.opencontainers.image.title
      Value: '"docker-tc"'
    - Key: org.opencontainers.image.description
      Value: '"Docker Traffic Control"'
    - Key: org.opencontainers.image.authors
      Value: '"Łukasz Lach <llach@llach.pl>"'
    - Key: org.opencontainers.image.documentation
      Value: '"https://github.com/lukaszlach/docker-tc"'
    - Key: org.opencontainers.image.version
      Value: ${VERSION}
    - Key: org.opencontainers.image.revision
      Value: ${VCS_REF}
    - Key: org.opencontainers.image.created
      Value: ${BUILD_DATE}
    - Key: com.docker-tc.enabled
      Value: "0"
    - Key: com.docker-tc.self
      Value: "1"
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /docker-tc
  From:
    Image: debian:stretch-slim
  Name: docker-tc
  Platform: ""
  SourceCode: FROM debian:stretch-slim AS docker-tc
