MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Env:
    - Key: APP_DIR
      Value: /usr/src/app
    Name: env
  - Env:
    - Key: FONT_DIR
      Value: /usr/share/fonts
    Name: env
  - Env:
    - Key: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
      Value: "true"
    Name: env
  - Env:
    - Key: PUPPETEER_EXECUTABLE_PATH
      Value: /usr/bin/chromium-browser
    Name: env
  - Name: workdir
    Path: $APP_DIR
  - CmdLine:
    - apk update     && apk upgrade     && apk add --no-cache       chromium       nss       freetype       freetype-dev       harfbuzz       ca-certificates       ttf-freefont       nodejs       yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/noto     && wget https://noto-website.storage.googleapis.com/pkgs/NotoSansCJKjp-hinted.zip
      -O /tmp/noto/font.zip     && unzip /tmp/noto/font.zip -d /tmp/noto     && find
      /tmp/noto/ -type f -not -name '*otf' -and -not -name '*otc' | xargs rm -r     &&
      mkdir -p $FONT_DIR/opentype/NotoSansCJKjp     && cp /tmp/noto/* $FONT_DIR/opentype/NotoSansCJKjp     &&
      chmod 644 -R $FONT_DIR/opentype/NotoSansCJKjp
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add msttcorefonts-installer fontconfig     && update-ms-fonts
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/google-fonts   && wget https://github.com/google/fonts/archive/master.tar.gz
      -O /tmp/google-fonts/fonts.tar.gz   && cd /tmp/google-fonts   && tar -xf fonts.tar.gz   &&
      mkdir -p $FONT_DIR/truetype/google-fonts   && find $PWD/fonts-master/ -name
      "*.ttf" -exec install -m644 {} $FONT_DIR/truetype/google-fonts/ \; || return
      1   && rm -rf /tmp/google-fonts
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/ipa-fonts   && wget https://oscdl.ipa.go.jp/IPAexfont/IPAexfont00401.zip
      -O /tmp/ipa-fonts/font.zip   && unzip /tmp/ipa-fonts/font.zip -d /tmp/ipa-fonts   &&
      mkdir -p $FONT_DIR/truetype/ipa-fonts   && find /tmp/ipa-fonts/ -name "*.ttf"
      -exec install -m644 {} $FONT_DIR/truetype/ipa-fonts/ \; || return 1   && rm
      -rf /tmp/ipa-fonts
    Name: run
    PrependShell: true
  - CmdLine:
    - fc-cache -f && rm -rf /var/cache/*
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -S app && adduser -S -g app app     && mkdir -p /home/app/Downloads
      /app     && chown -R app:app /home/app     && chown -R app:app /app
    Name: run
    PrependShell: true
  - Chown: app:app
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - yarn install --frozen-lockfile --no-cache       && NODE_ENV=production yarn
      run build       && rm -rf node_modules src       && yarn install --frozen-lockfile
      --no-cache --production       && yarn cache clean
    Name: run
    PrependShell: true
  - Name: user
    User: app:app
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - yarn
    - run
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
