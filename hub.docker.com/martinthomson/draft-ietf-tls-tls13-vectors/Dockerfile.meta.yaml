MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Martin Thomson <martin.thomson@gmail.com>"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     ca-certificates
      coreutils curl git make mercurial ssh     python-minimal python-lxml python-pip
      python-setuptools python-wheel     mmark ruby     build-essential gyp ninja-build
      pkg-config zlib1g-dev  && apt-get autoremove -y && apt-get clean -y  && rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: idci
    Name: env
  - Env:
    - Key: LOGNAME
      Value: $USER
    Name: env
  - Env:
    - Key: HOSTNAME
      Value: $USER
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$USER
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - useradd -d "$HOME" -s "$SHELL" -m "$USER"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - Name: user
    User: $USER
  - Env:
    - Key: BINDIR
      Value: $HOME/bin
    Name: env
  - CmdLine:
    - mkdir -p $BINDIR
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $BINDIR:/usr/local/bin:/usr/bin:/bin
    Name: env
  - CmdLine:
    - set -e; tool_install() {       tool="$1";version="$2";sha="$3"; tmp=$(mktemp
      -t "${tool}XXXXX.tgz");       curl -sSLf "https://tools.ietf.org/tools/${tool}/${tool}-${version}".tgz
      -o "$tmp";       [ $(sha256sum -b "$tmp" | cut -d ' ' -f 1 -) = "$sha" ];       target="${BINDIR:-~/.local/bin}/${tool}";       tar
      xzfO "$tmp" "${tool}-${version}/${tool}" >"$target"; rm -f "$tmp";       chmod
      755 "$target"; };     tool_install idnits 2.15.00     f655d06e7d3b1c35d7ca55f91243115359ae4fdd17553ea58a301091a07ed7ac
      &&     tool_install rfcdiff 1.45     82e449b7ee887074302b2050e41fc60d4b3bbec8c20e05ce2d7fab81b332771e
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --user --compile xml2rfc &&     ln -s $HOME/.local/bin/xml2rfc $BINDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install --no-doc --user-install --bindir $BINDIR     certified kramdown-rfc2629
      &&     certified-update
    Name: run
    PrependShell: true
  - Env:
    - Key: KRAMDOWN_REFCACHEDIR
      Value: $HOME/.cache/xml2rfc
    Name: env
  - CmdLine:
    - mkdir -p $KRAMDOWN_REFCACHEDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --mirror https://github.com/martinthomson/i-d-template $HOME/i-d-template
    Name: run
    PrependShell: true
  - Env:
    - Key: NSS_BUNDLE
      Value: $HOME/nss.bundle
    Name: env
  - CmdLine:
    - hg clone https://hg.mozilla.org/projects/nss /tmp/nss  && hg -R /tmp/nss bundle
      -a $NSS_BUNDLE  && rm -rf /tmp/nss
    Name: run
    PrependShell: true
  - Env:
    - Key: NSPR_BUNDLE
      Value: $HOME/nspr.bundle
    Name: env
  - CmdLine:
    - hg clone https://hg.mozilla.org/projects/nspr /tmp/nspr  && hg -R /tmp/nspr
      bundle -a $NSPR_BUNDLE  && rm -rf /tmp/nspr
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
