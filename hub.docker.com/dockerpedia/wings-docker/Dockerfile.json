{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tomcat:8",
      "SourceCode": "FROM tomcat:8",
      "Platform": "",
      "From": {
        "Image": "tomcat:8"
      },
      "Commands": [
        {
          "CmdLine": [
            "sed -i 's/debian testing main/debian testing main contrib non-free/' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install --no-install-recommends         graphviz         libcurl4-openssl-dev         libxml2-dev         python-pip         git         cgroupfs-mount         maven         tcl         tk         apt-transport-https         software-properties-common         gnupg2         python-dev         python-setuptools         python-tk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")    $(lsb_release -cs)    stable\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/tomcat/tomcat-users.xml",
            "/usr/local/tomcat/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/tomcat/server.xml",
            "/usr/local/tomcat/conf/"
          ]
        },
        {
          "Env": [
            {
              "Key": "WINGS_MODE",
              "Value": "'dind'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/pom.xml",
            "/wings-src/pom.xml"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /wings-src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/wings-src"
        },
        {
          "CmdLine": [
            "mvn package"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/wings/storage/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/default/portal.properties",
            "/opt/wings/storage/default/portal.properties"
          ]
        },
        {
          "CmdLine": [
            "cp -R /wings-src/target/wings-portal-4.1-SNAPSHOT /usr/local/tomcat/webapps/wings-portal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/default/wings-portal.xml",
            "/usr/local/tomcat/webapps/wings-portal/META-INF/context.xml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/requirements.txt",
            "/wings-src/"
          ]
        },
        {
          "CmdLine": [
            "for p in $(cat /wings-src/requirements.txt); do pip install $p; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"backend : Agg\" ~/.config/matplotlib/matplotlibrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/tomcat"
        }
      ]
    }
  ]
}