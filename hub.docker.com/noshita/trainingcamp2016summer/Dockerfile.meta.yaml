MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Koji Noshita <noshita@morphometrics.jp>
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --force-yes build-essential cmake git
      libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev                     libtbb2
      libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
      python-pip                    python3-dev python3-tk python3-numpy &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*            /tmp/*            /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scikit-learn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install networkx
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install bokeh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install XlsxWriter
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Sphinx
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ipython
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/opencv
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/opencv && git clone https://github.com/Itseez/opencv_contrib.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/opencv && git clone https://github.com/Itseez/opencv.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/opencv/opencv && mkdir release && cd release &&           cmake -D CMAKE_BUILD_TYPE=RELEASE           -D
      CMAKE_INSTALL_PREFIX=/usr/local           -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules           -D
      INSTALL_C_EXAMPLES=ON           -D INSTALL_PYTHON_EXAMPLES=ON           -D BUILD_EXAMPLES=ON           -D
      WITH_OPENGL=ON           -D WITH_V4L=ON           -D WITH_XINE=ON           -D
      WITH_TBB=ON ..
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/opencv/opencv/release && make -j $(nproc) && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p -m 700 /root/.jupyter/ &&     echo "c.NotebookApp.ip = '*'" >> /root/.jupyter/jupyter_notebook_config.py
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /notebooks
  - Name: workdir
    Path: /notebooks
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - notebook
    - --no-browser
    - --allow-root
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: From ubuntu:xenial
