MetaArgs: null
Stages:
- BaseName: openjdk:8
  Commands:
  - Env:
    - Key: CATALINA_HOME
      Value: /usr/local/tomcat
    Name: env
  - Env:
    - Key: PATH
      Value: $CATALINA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$CATALINA_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - Env:
    - Key: TOMCAT_NATIVE_LIBDIR
      Value: $CATALINA_HOME/native-jni-lib
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR
    Name: env
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.1.0f-3
    Name: env
  - CmdLine:
    - '{         echo ''deb http://deb.debian.org/debian stretch main'';     } > /etc/apt/sources.list.d/stretch.list     &&
      {         echo ''Package: *'';         echo ''Pin: release n=stretch'';         echo
      ''Pin-Priority: -10'';         echo;         echo ''Package: openssl libssl*'';         echo
      "Pin: version $OPENSSL_VERSION";         echo ''Pin-Priority: 990'';     } >
      /etc/apt/preferences.d/stretch-openssl'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         g++         gcc         git         ipython         ipython-notebook         libapr1         libatlas-dev         libatlas3gf-base         libavformat-dev         libblas3         libfreetype6-dev         libjasper-dev         libjpeg-dev         liblapack-dev         liblapack3         libpng-dev         libpq-dev         libswscale-dev         libtbb-dev         libtbb2         libtiff-dev         make         openssl="$OPENSSL_VERSION"         pkg-config         python-dev         python-nose         python-pandas         python-sympy         python3         python3-dev         python3-matplotlib         python3-numpy         python3-pip         python3-scipy         python3-setuptools         python3-tk         tcl         tk         unzip         wget         yasm     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42
        47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7
        61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7
        79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE
        A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7
        DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE
        F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23
    Name: env
  - CmdLine:
    - set -ex;     for key in $GPG_KEYS; do         gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key";     done
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 8.5.15
    Name: env
  - Env:
    - Key: TOMCAT_TGZ_URL
      Value: https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
    Name: env
  - Env:
    - Key: TOMCAT_ASC_URL
      Value: https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
    Name: env
  - CmdLine:
    - set -x         && wget -O tomcat.tar.gz "$TOMCAT_TGZ_URL"     && wget -O tomcat.tar.gz.asc
      "$TOMCAT_ASC_URL"     && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz     &&
      tar -xvf tomcat.tar.gz --strip-components=1     && rm bin/*.bat     && rm tomcat.tar.gz*         &&
      nativeBuildDir="$(mktemp -d)"     && tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir"
      --strip-components=1     && nativeBuildDeps="         dpkg-dev         gcc         libapr1-dev         libssl-dev         make         openjdk-${JAVA_VERSION%%[-~bu]*}-jdk=$JAVA_DEBIAN_VERSION     "     &&
      apt-get update && apt-get install -y --no-install-recommends $nativeBuildDeps
      && rm -rf /var/lib/apt/lists/*     && (         export CATALINA_HOME="$PWD"         &&
      cd "$nativeBuildDir/native"         && gnuArch="$(dpkg-architecture --query
      DEB_BUILD_GNU_TYPE)"         && ./configure             --build="$gnuArch"             --libdir="$TOMCAT_NATIVE_LIBDIR"             --prefix="$CATALINA_HOME"             --with-apr="$(which
      apr-1-config)"             --with-java-home="$(docker-java-home)"             --with-ssl=yes         &&
      make -j$(nproc)         && make install     )     && rm -rf "$nativeBuildDir"     &&
      rm bin/tomcat-native.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -e     && nativeLines="$(catalina.sh configtest 2>&1)"     && nativeLines="$(echo
      "$nativeLines" | grep ''Apache Tomcat Native'')"     && nativeLines="$(echo
      "$nativeLines" | sort -u)"     && if ! echo "$nativeLines" | grep ''INFO: Loaded
      APR based Apache Tomcat Native library'' >&2; then         echo >&2 "$nativeLines";         exit
      1;     fi'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - catalina.sh
    - run
    Name: cmd
    PrependShell: false
  - CmdLine:
    - easy_install3 matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.1.0-cp34-cp34m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install3 Pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install numpy
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - wget https://github.com/Itseez/opencv/archive/3.2.0.zip && unzip 3.2.0.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opencv-3.2.0/cmake_binary && cd /opencv-3.2.0/cmake_binary && cmake -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -DWITH_CUDA=OFF   -DENABLE_AVX=OFF   -DENABLE_SSE3=OFF   -DENABLE_SSE4=OFF   -DWITH_OPENGL=ON   -DWITH_OPENCL=ON   -DWITH_IPP=ON   -DWITH_TBB=ON   -DWITH_EIGEN=ON   -DWITH_V4L=ON   -DBUILD_TESTS=OFF   -DBUILD_PERF_TESTS=OFF   -DCMAKE_BUILD_TYPE=RELEASE   -DCMAKE_INSTALL_PREFIX=$(python3.4
      -c "import sys; print(sys.prefix)")   -DPYTHON_EXECUTABLE=$(which python3.4)   -DPYTHON_INCLUDE_DIR=$(python3.4
      -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")   -DPYTHON_PACKAGES_PATH=$(python3.4
      -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
      .. && make install && rm /3.2.0.zip && rm -r /opencv-3.2.0
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install flake8 pep8 --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set libblas.so.3         /usr/lib/atlas-base/atlas/libblas.so.3
      &&     update-alternatives --set liblapack.so.3         /usr/lib/atlas-base/atlas/liblapack.so.3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install scikit-learn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install3 numpy
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8
