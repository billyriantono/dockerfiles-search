{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc:alpine-3.8_glibc-2.28",
      "SourceCode": "FROM frolvlad/alpine-glibc:alpine-3.8_glibc-2.28",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc:alpine-3.8_glibc-2.28"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "RDKIT_VERSION",
              "Value": "2019.03.1"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "'kubor'"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk --no-cache add bash ca-certificates wget libxext libxrender libstdc++ \u0026\u0026     update-ca-certificates \u0026\u0026     apk --update add tzdata \u0026\u0026     cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \u0026\u0026     apk del tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/anaconda/bin:$PATH' \u003e /etc/profile.d/anaconda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/anaconda.sh \u0026\u0026     /bin/bash ~/anaconda.sh -b -p /opt/anaconda \u0026\u0026     rm ~/anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/anaconda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda install -y -c rdkit rdkit=$RDKIT_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}