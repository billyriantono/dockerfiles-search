MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Samuel Fernando Mesa Giraldo <samuelmesa@gmail.com>
    Name: maintainer
  - Env:
    - Key: VERSION
      Value: "2019-01-09"
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: LANG
      Value: C
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: "10"
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_VERSION/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: postgres
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: postgres
    Name: env
  - Env:
    - Key: POSTGRES_DB
      Value: hsrs_micka6
    Name: env
  - CmdLine:
    - apt-get -y update     && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - buildDeps='cmake gnupg software-properties-common g++ make build-essential git'     &&
      set -x     && apt-get install -y -y $buildDeps --no-install-recommends     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ondrej/php     && apt -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && LC_ALL=C DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     nginx
      postgresql postgis postgresql-10-postgis-2.4 postgresql-10-postgis-scripts     php5.6-fpm
      php5.6-xsl php5.6-pgsql php5.6-curl     zip unzip php5.6-zip curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer     && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig     && php5.6
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"     && php5.6 /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin
      --filename=composer --snapshot     && rm -f /tmp/composer-setup.*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html/     && git clone https://github.com/hsrs-cz/Micka.git     &&
      cd Micka/php     && php5.6 /usr/local/bin/composer install     && chmod -Rfv
      a+rwx  log/ temp/
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - set -x     && apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/*     && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"     && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"     && export GNUPGHOME="$(mktemp -d)"     && gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     &&
      gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r
      "$GNUPGHOME" /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu     &&
      gosu nobody true     && apt-get purge -y ca-certificates wget     && apt-get
      clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu nobody true     && apt-get purge -y --auto-remove cmake gnupg     software-properties-common
      g++ make build-essential git     && apt-get clean autoclean     && apt-get autoremove
      --yes     && rm -rf /var/lib/{apt,dpkg,cache,log}/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d  && cd /docker-entrypoint-initdb.d     &&
      cp /var/www/html/Micka/php/install/1_create_database.sql .     && cp /var/www/html/Micka/php/install/2_create_table.sql  .     &&
      cp /var/www/html/Micka/php/install/3_insert_data_basic.sql  .     && cp /var/www/html/Micka/php/install/4_insert_standard_schema.sql  .     &&
      cp /var/www/html/Micka/php/install/5_insert_profiles.sql  .     && cp /var/www/html/Micka/php/install/6_00_label_esp.sql  .     &&
      cp /var/www/html/Micka/php/install/6_00_label_eng.sql .
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - confs/default
    - /etc/nginx/sites-available/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - confs/config.local.neon
    - /var/www/html/Micka/php/app/config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - ln -s /usr/local/bin/docker-entrypoint.sh /
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - Name: expose
    Ports:
    - "5432"
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - sh
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
