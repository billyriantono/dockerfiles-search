MetaArgs: null
Stages:
- BaseName: antonchernik/docker-image-ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update &&   DEBIAN_FRONTEND=noninteractive     apt-get -y install       openjdk-8-jre-headless       gosu       --no-install-recommends
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: JRE_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/jre
    Name: env
  - CmdLine:
    - "set -x \t&& echo 'deb https://artifacts.elastic.co/packages/6.x/apt stable
      main' > /etc/apt/sources.list.d/elasticsearch.list"
    Name: run
    PrependShell: true
  - Env:
    - Key: ELASTICSEARCH_VERSION
      Value: 6.4.2
    Name: env
  - Env:
    - Key: ELASTICSEARCH_DEB_VERSION
      Value: 6.4.2
    Name: env
  - CmdLine:
    - set -x     && wget -O GPG-KEY-elasticsearch https://artifacts.elastic.co/GPG-KEY-elasticsearch     &&
      apt-key add ./GPG-KEY-elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t\t&& dpkg-divert --rename /usr/lib/sysctl.d/elasticsearch.conf \t\t&&
      apt-get update \t&& apt-get install -y --no-install-recommends \"elasticsearch=$ELASTICSEARCH_DEB_VERSION\"
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Name: workdir
    Path: /usr/share/elasticsearch
  - CmdLine:
    - "set -ex \t&& for path in \t\t./data \t\t./logs \t\t./config \t\t./config/scripts
      \t; do \t\tmkdir -p \"$path\"; \t\tchown -R elasticsearch:elasticsearch \"$path\";
      \tdone"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config/elasticsearch.yml
    - /etc/elasticsearch/elasticsearch.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: antonchernik/docker-image-ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM antonchernik/docker-image-ubuntu:18.04
