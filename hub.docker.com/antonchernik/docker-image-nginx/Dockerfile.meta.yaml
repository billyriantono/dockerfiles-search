MetaArgs: null
Stages:
- BaseName: antonchernik/docker-image-ubuntu
  Commands:
  - Env:
    - Key: NGINX_VERSION
      Value: 1.14.2-1~bionic
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 1.14.2.0.2.6-1~bionic
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y gnupg1 apt-transport-https ca-certificates \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;
      \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80
      \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching
      GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\"
      --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes &&
      break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG
      key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge --auto-remove -y gnupg1
      && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\"
      \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION}
      \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION}
      \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386)
      \t\t\techo \"deb https://nginx.org/packages/ubuntu/ bionic nginx\" >> /etc/apt/sources.list.d/nginx.list
      \t\t\t&& apt-get update \t\t\t;; \t\t*) \t\t\techo \"deb-src https://nginx.org/packages/ubuntu/
      bionic nginx\" >> /etc/apt/sources.list.d/nginx.list \t\t\t\t\t\t&& tempDir=\"$(mktemp
      -d)\" \t\t\t&& chmod 777 \"$tempDir\" \t\t\t\t\t\t&& savedAptMark=\"$(apt-mark
      showmanual)\" \t\t\t\t\t\t&& apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages
      \t\t\t&& ( \t\t\t\tcd \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"
      \t\t\t\t\tapt-get source --compile $nginxPackages \t\t\t) \t\t\t\t\t\t&& apt-mark
      showmanual | xargs apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\"
      ] || apt-mark manual $savedAptMark; } \t\t\t\t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&&
      ( cd \"$tempDir\" && dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package:
      ' \"$tempDir/Packages\" \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir
      ./\" > /etc/apt/sources.list.d/temp.list \t\t\t&& apt-get -o Acquire::GzipIndexes=false
      update \t\t\t;; \tesac \t\t&& apt-get install --no-install-recommends --no-install-suggests
      -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge
      --auto-remove -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*
      /etc/apt/sources.list.d/nginx.list \t\t&& if [ -n \"$tempDir\" ]; then \t\tapt-get
      purge -y --auto-remove \t\t&& rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;
      \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c 'mkdir -p /etc/nginx/{sites-enabled,sites-available,certs}'
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/nginx/conf.d/default.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/nginx/sites-enabled/localhost.conf
    - /etc/nginx/sites-enabled/localhost.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/nginx/mime.types
    - /etc/nginx/mime.types
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/nginx/fastcgi_params
    - /etc/nginx/fastcgi_params
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/nginx/snippets/standart-service-params.conf
    - /etc/nginx/snippets/standart-service-params.conf
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: antonchernik/docker-image-ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM antonchernik/docker-image-ubuntu
