MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10.3-alpine3.7
  Commands:
  - Name: workdir
    Path: /go/src/github.com/thomasjpfan/docker-scaler
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - CGO_ENABLED=0 GOOS=linux go build -o docker-scaler -ldflags '-w' main.go
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10.3-alpine3.7
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10.3-alpine3.7 as build
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - apk add --no-cache tini ca-certificates
    Name: run
    PrependShell: true
  - Health:
      Interval: 5000000000
      Test:
      - CMD-SHELL
      - wget --quiet --tries=1 --spider http://localhost:8080/v1/ping || exit 1
    Name: healthcheck
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/thomasjpfan/docker-scaler/docker-scaler
    - /usr/local/bin/docker-scaler
  - CmdLine:
    - chmod +x /usr/local/bin/docker-scaler
    Name: run
    PrependShell: true
  - Env:
    - Key: SERVER_PREFIX
      Value: '"/"'
    - Key: MIN_SCALE_LABEL
      Value: '"com.df.scaleMin"'
    - Key: MAX_SCALE_LABEL
      Value: '"com.df.scaleMax"'
    - Key: SCALE_DOWN_BY_LABEL
      Value: '"com.df.scaleDownBy"'
    - Key: SCALE_UP_BY_LABEL
      Value: '"com.df.scaleUpBy"'
    - Key: ALERT_SCALE_MIN
      Value: '"false"'
    - Key: ALERT_SCALE_MAX
      Value: '"true"'
    - Key: DEFAULT_MIN_REPLICAS
      Value: '"1"'
    - Key: DEFAULT_MAX_REPLICAS
      Value: '"5"'
    - Key: DEFAULT_SCALE_SERVICE_DOWN_BY
      Value: '"1"'
    - Key: DEFAULT_SCALE_SERVICE_UP_BY
      Value: '"1"'
    - Key: ALERTMANAGER_ADDRESS
      Value: '""'
    - Key: ALERT_TIMEOUT
      Value: '"10"'
    - Key: RESCHEDULE_FILTER_LABEL
      Value: '"com.df.reschedule=true"'
    - Key: RESCHEDULE_TICKER_INTERVAL
      Value: '"60"'
    - Key: RESCHEDULE_TIMEOUT
      Value: '"1000"'
    - Key: RESCHEDULE_ENV_KEY
      Value: '"RESCHEDULE_DATE"'
    - Key: NODE_SCALER_BACKEND
      Value: '""'
    - Key: ALERT_NODE_MIN
      Value: '"false"'
    - Key: ALERT_NODE_MAX
      Value: '"true"'
    - Key: DEFAULT_MIN_MANAGER_NODES
      Value: '"3"'
    - Key: DEFAULT_MAX_MANAGER_NODES
      Value: '"7"'
    - Key: DEFAULT_MIN_WORKER_NODES
      Value: '"0"'
    - Key: DEFAULT_MAX_WORKER_NODES
      Value: '"5"'
    - Key: AWS_ENV_FILE
      Value: '"/run/secrets/aws"'
    - Key: AWS_DEFAULT_REGION
      Value: '"us-east-1"'
    - Key: MIN_SCALE_MANAGER_NODE_LABEL
      Value: '"com.df.scaleManagerNodeMin"'
    - Key: MAX_SCALE_MANAGER_NODE_LABEL
      Value: '"com.df.scaleManagerNodeMax"'
    - Key: SCALE_MANAGER_NODE_DOWN_BY_LABEL
      Value: '"com.df.scaleManagerNodeDownBy"'
    - Key: SCALE_MANAGER_NODE_UP_BY_LABEL
      Value: '"com.df.scaleManagerNodeUpBy"'
    - Key: MIN_SCALE_WORKER_NODE_LABEL
      Value: '"com.df.scaleWorkerNodeMin"'
    - Key: MAX_SCALE_WORKER_NODE_LABEL
      Value: '"com.df.scaleWorkerNodeMax"'
    - Key: SCALE_WORKER_NODE_DOWN_BY_LABEL
      Value: '"com.df.scaleWorkerNodeDownBy"'
    - Key: SCALE_WORKER_NODE_UP_BY_LABEL
      Value: '"com.df.scaleWorkerNodeUpBy"'
    - Key: DEFAULT_MIN_MANAGER_NODES
      Value: '"3"'
    - Key: DEFAULT_MAX_MANAGER_NODES
      Value: '"7"'
    - Key: DEFAULT_MIN_WORKER_NODES
      Value: '"0"'
    - Key: DEFAULT_MAX_WORKER_NODES
      Value: '"5"'
    - Key: DEFAULT_SCALE_MANAGER_NODE_DOWN_BY
      Value: '"1"'
    - Key: DEFAULT_SCALE_MANAGER_NODE_UP_BY
      Value: '"1"'
    - Key: DEFAULT_SCALE_WORKER_NODE_DOWN_BY
      Value: '"1"'
    - Key: DEFAULT_SCALE_WORKER_NODE_UP_BY
      Value: '"1"'
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - docker-scaler
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
