{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4",
      "SourceCode": "FROM php:7.4",
      "Platform": "",
      "From": {
        "Image": "php:7.4"
      },
      "Commands": [
        {
          "Maintainer": "Leandro Silva \u003cleandro.silva@zooxsmart.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         procps         libfreetype6-dev         libjpeg62-turbo-dev         libpng-dev         openssl         libssh-dev         libpcre3         libpcre3-dev         libnghttp2-dev         libhiredis-dev         libbz2-dev         libedit-dev         libxml2-dev \tlibsodium-dev \tlibzip-dev         libcurl4-openssl-dev         curl         wget         zip         unzip         vim \tlibonig-dev         libicu-dev         git \u0026\u0026         apt autoremove \u0026\u0026 apt clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     curl -L -o /tmp/icu.tgz https://github.com/unicode-org/icu/releases/download/release-65-1/icu4c-65_1-src.tgz \u0026\u0026     tar zxvf /tmp/icu.tgz \u0026\u0026 cd icu/source \u0026\u0026     ./configure --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype --with-jpeg \u0026\u0026     docker-php-ext-install     bcmath     bz2     ctype     gd     gettext     intl     mbstring     mysqli     opcache     pcntl     pdo_mysql     soap     sockets     zip \u0026\u0026     echo \"opcache.enable_cli=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis mongodb \u0026\u0026 docker-php-ext-enable redis mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     composer self-update --clean-backups"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026     curl -L -o /tmp/swoole.tar.gz https://github.com/swoole/swoole-src/archive/v4.4.12.tar.gz \u0026\u0026     tar zxvf /tmp/swoole.tar.gz \u0026\u0026 cd swoole-src* \u0026\u0026     phpize \u0026\u0026     ./configure     --enable-coroutine     --enable-openssl      --enable-http2      --enable-async-redis     --enable-mysqlnd \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     docker-php-ext-enable swoole \u0026\u0026     echo \"swoole.fast_serialize=On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-swoole-serialize.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'UTC' \u003e /etc/timezone \u0026\u0026     echo \"[Date]\\ndate.timezone=UTC\" \u003e /usr/local/etc/php/conf.d/timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}