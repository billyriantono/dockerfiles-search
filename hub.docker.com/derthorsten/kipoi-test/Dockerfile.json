{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-base-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:9.0-base-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-base-ubuntu16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "com.nvidia.volumes.needed",
              "Value": "\"nvidia_driver\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends          git          curl          bzip2          zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/nvidia/lib:/usr/local/nvidia/lib64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  \u0026\u0026      chmod +x ~/miniconda.sh \u0026\u0026      ~/miniconda.sh -b -p /opt/conda \u0026\u0026      rm ~/miniconda.sh \u0026\u0026     /opt/conda/bin/conda install conda-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/conda/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "enviroment.yaml",
            "/enviroment.yaml"
          ]
        },
        {
          "CmdLine": [
            "conda env create -f enviroment.yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source activate kipoi-dev\" \u003e ~/.bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/envs/kipoi-dev/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install mmsplice --no-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/DerThorsten/kipoi -b    docker kipoi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd kipoi \u0026\u0026 pip install --force-reinstall --no-deps -e . \u0026\u0026 cd"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}