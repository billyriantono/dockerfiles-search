MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-stretch
  Commands:
  - Key: USER_HOME_DIR
    Name: arg
    Value: '"/root"'
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get
      install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf
      /var/lib/apt/lists/*; \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit
      \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf
      \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick
      \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev
      \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibgeoip-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev
      \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev
      \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev
      \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev
      \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\txz-utils \t\tzlib1g-dev
      \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null
      | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse
      \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\ttk-dev \t\tuuid-dev
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.8.1
    Name: env
  - CmdLine:
    - "set -ex \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1
      -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip
      \t&& make -j \"$(nproc)\" \t&& make install \t&& ldconfig \t\t&& find /usr/local
      -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o
      \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec
      rm -rf '{}' + \t&& rm -rf /usr/src/python \t\t&& python3 --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s
      python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.3.1
    Name: env
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython
      get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name
      '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pipenv
    Name: run
    PrependShell: true
  - Env:
    - Key: POETRY_VERSION
      Value: 1.0.0
    Name: env
  - CmdLine:
    - pip3 install "poetry==$POETRY_VERSION"
    Name: run
    PrependShell: true
  - Key: CLOUD_SDK_VERSION
    Name: arg
    Value: 274.0.1
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-stretch"   && echo "deb https://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" > /etc/apt/sources.list.d/google-cloud-sdk.list   && curl
      https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -   && apt-get
      update   && apt-get install -y --no-install-recommends google-cloud-sdk=${CLOUD_SDK_VERSION}-0
      google-cloud-sdk-app-engine-java
    Name: run
    PrependShell: true
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.6.3
  - Key: BASE_URL
    Name: arg
    Value: http://mirror.its.dal.ca/apache/maven/maven-3/${MAVEN_VERSION}/binaries
  - Key: USER_HOME_DIR
    Name: arg
    Value: '"/root"'
  - CmdLine:
    - mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -o /tmp/apache-maven.tar.gz
      ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz   && tar -xzf /tmp/apache-maven.tar.gz
      -C /usr/share/maven --strip-components=1   && rm -f /tmp/apache-maven.tar.gz   &&
      ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: MAVEN_CONFIG
      Value: '"$USER_HOME_DIR/.m2"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mvn-entrypoint.sh
    - /usr/local/bin/mvn-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - settings-docker.xml
    - /usr/share/maven/ref/
  - Name: volume
    Volumes:
    - '"$USER_HOME_DIR/.m2"'
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends   openssh-client   git-crypt   git   postgresql-client-9.6
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://mirror.it.ubc.ca/debian/ stretch-backports main contrib non-free"
      >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends -t stretch-backports   libgit2-27   libgit2-dev
    Name: run
    PrependShell: true
  - Key: GIT_VERSION_VERSION
    Name: arg
    Value: 5.0.1
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends   mono-complete   libgit2-24   nuget
    Name: run
    PrependShell: true
  - CmdLine:
    - nuget install GitVersion.CommandLine -Version ${GIT_VERSION_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/lib\/linux\/x86_64\/libgit2-15e1193.so/\/usr\/lib\/x86_64-linux-gnu\/libgit2.so.24/g'
      GitVersion.CommandLine.${GIT_VERSION_VERSION}/tools/LibGit2Sharp.dll.config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gitversion
    - /usr/local/bin/gitversion
  - Key: GECKODRIVER_VERSION
    Name: arg
    Value: 0.26.0
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends   xvfb   xauth   firefox-esr
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/mozilla/geckodriver/releases/download/v${GECKODRIVER_VERSION}/geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxzf geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cp geckodriver /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf geckodriver
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-stretch
