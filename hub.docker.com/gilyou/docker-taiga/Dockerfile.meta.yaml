MetaArgs: null
Stages:
- BaseName: python:3.5
  Commands:
  - Maintainer: Renwu Gao <gilyou.public@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.9.7-1~jessie
    Name: env
  - CmdLine:
    - apt-key adv   --keyserver hkp://pgp.mit.edu:80   --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://nginx.org/packages/mainline/debian/ jessie nginx" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x;     apt-get update     && apt-get install -y --no-install-recommends         locales         gettext         ca-certificates         nginx=${NGINX_VERSION}     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen zh_CN.UTF-8 && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-back
    - /usr/src/taiga-back
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-front-dist/
    - /usr/src/taiga-front-dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-settings.py
    - /usr/src/taiga-back/settings/docker.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/locale.gen
    - /etc/locale.gen
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/taiga.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/ssl.conf
    - /etc/nginx/ssl.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/taiga-events.conf
    - /etc/nginx/taiga-events.conf
  - CmdLine:
    - mkdir -p /taiga
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/local.py
    - /taiga/local.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/conf.json
    - /taiga/conf.json
  - CmdLine:
    - ln -s /taiga/local.py /usr/src/taiga-back/settings/local.py
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/conf.json
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/taiga-front-dist/dist/js/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/js/conf.json
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/taiga-back
  - Env:
    - Key: LANG
      Value: C
    Name: env
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LANG=zh_CN.UTF-8" > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LC_TYPE=zh_CN.UTF-8" > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LC_MESSAGES=POSIX" >> /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LANGUAGE=en" >> /etc/default/locale
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: zh_CN.UTF-8
    Name: env
  - Env:
    - Key: LC_TYPE
      Value: zh_CN.UTF-8
    Name: env
  - Env:
    - Key: TAIGA_SSL
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_ENABLE_EMAIL
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_HOSTNAME
      Value: localhost
    Name: env
  - Env:
    - Key: TAIGA_SECRET_KEY
      Value: '"!!!REPLACE-ME-j1598u1J^U*(y251u98u51u5981urf98u2o5uvoiiuzhlit3)!!!"'
    Name: env
  - CmdLine:
    - python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - locale -a
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - /usr/src/taiga-back/media
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - checkdb.py
    - /checkdb.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - python
    - manage.py
    - runserver
    - 0.0.0.0:8000
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.5
