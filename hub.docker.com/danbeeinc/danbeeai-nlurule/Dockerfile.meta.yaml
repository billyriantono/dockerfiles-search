MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: Name
      Value: '"docker-nlurule-local Version=0.0.1"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"Donny Seo <jams7777@gmail.com>"'
    Name: label
  - CmdLine:
    - "apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y \t\t\t\t\t\tapt-utils ca-certificates ca-certificates-java bzip2 apt-transport-https
      \t\t\t\t\t\tcron supervisor automake autotools-dev build-essential \t\t\t\t\t\tgettext-base
      libelf1 \t\t\t\t\t\tvim curl ssh git wget \t\t\t\t\t\tlibmecab2 libmecab-dev
      \t\t\t\t\t\topenjdk-8-jdk \t\t\t\t\t\tpython3-pip python3-dev \t\t\t\t\t\tlibpq-dev
      \t\t\t\t\t\tunzip openjdk-8-jre-headless xvfb libxi6 libgconf-2-4 \t&& update-ca-certificates
      -f \t&& cd /usr/local/bin     && ln -s /usr/bin/python3 python \t&& rm -rf /var/lib/apt/lists/*
      \t&& rm -rf /var/cache/oracle-jdk8-installer"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - CmdLine:
    - export JAVA_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - export LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - export CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y \t                    google-chrome-stable \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - https://bitbucket.org/eunjeon/mecab-ko/downloads/mecab-0.996-ko-0.9.2.tar.gz
      | tar zxfv -
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mecab-0.996-ko-0.9.2; ./configure; make; make install; ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - https://bitbucket.org/eunjeon/mecab-ko-dic/downloads/mecab-ko-dic-2.0.3-20170922.tar.gz
      | tar zxfv -
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mecab-ko-dic-2.0.3-20170922; sh ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mecab-ko-dic-2.0.3-20170922; ./configure; make; make install; ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app && chmod 777 -R /app
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/nlu_rule && chmod 777 -R /app/nlu_rule
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files && chmod 777 -R /app/files
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/mecab-dic && chmod 777 -R /app/files/mecab-dic
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/mecab-dic/dic && chmod 777 -R /app/files/mecab-dic/dic
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/compared && chmod 777 -R /app/files/compared
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/compared/appattern && chmod 777 -R /app/files/compared/appattern
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/compared/similarity && chmod 777 -R /app/files/compared/similarity
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/compared/userdic && chmod 777 -R /app/files/compared/userdic
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/logbackup && chmod 777 -R /app/files/logbackup
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/files/logbackup/nlu && chmod 777 -R /app/files/logbackup/nlu
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /logs && chmod 777 -R /logs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /logs/Backup && chmod 777 -R /logs/Backup
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /logs/nlu_rule.log && chmod 777 /logs/nlu_rule.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - /root/requirements.txt
  - CmdLine:
    - chmod 777 /root/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -r /root/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install fuzzywuzzy[speedup]
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/nlu_rule
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./start.sh
    - /root/start.sh
  - CmdLine:
    - chmod 777 /root/start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias logview='tail -100f /logs/nlu_rule.log'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias app='cd /app/nlu_rule'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias start='/root/start.sh'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo " >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo " >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo ' ************     danbee.Ai nlu_rule Local [ local ]        *************
      ' " >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo ' *****                                                            *******
      ' " >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo ' ***** << Alias >>                                                *******
      ' " >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "echo '' *****      app  : nlu rule app                                   *******
      '' " >> /root/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "echo '' *****  logview  : nlu rule log                                   *******
      '' " >> /root/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "echo '' *****     start : start nlu                                      *******
      '' " >> /root/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo ' ************************************************************************
      ' " >> /root/.bashrc
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /app/nlu_rule
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
