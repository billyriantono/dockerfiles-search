MetaArgs:
- DefaultValue: "8.0"
  Key: CUDA_VERSION
  ProvidedValue: null
  Value: "8.0"
Stages:
- BaseName: nvidia/cuda:${CUDA_VERSION}-devel-ubuntu16.04
  Commands:
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Name: workdir
    Path: ${HOME}/src
  - Env:
    - Key: ROS_DISTRO
      Value: kinetic
    Name: env
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq &&     apt-get -qq install --no-install-recommends -y       apt-utils       wget       ca-certificates       sudo       build-essential       cmake       git       software-properties-common       pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver "hkp://ha.pool.sks-keyservers.net" --recv-key "0xB01FA116"     ||
      { wget "https://raw.githubusercontent.com/ros/rosdistro/master/ros.key" -O -
      | sudo apt-key add -; }
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "/^# deb.*multiverse/ s/^# //" /etc/apt/sources.list &&     apt-get update
      -qq &&     apt-get -qq install --no-install-recommends -y         ros-${ROS_DISTRO}-ros-base         build-essential         python-catkin-tools         python-pip         python-rosdep         python-wstool         ros-${ROS_DISTRO}-catkin
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         pkg-config         libxau-dev         libxdmcp-dev         libxcb1-dev         libxext-dev         libx11-dev
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/x86_64-linux-gnu
    - /usr/local/lib/x86_64-linux-gnu
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
  - CmdLine:
    - echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf &&     ldconfig
      &&     echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload &&     echo '/usr/local/$LIB/libEGL.so.1'
      >> /etc/ld.so.preload
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: ${NVIDIA_VISIBLE_DEVICES:-all}
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
    Name: env
  From:
    Image: nvidia/cuda:${CUDA_VERSION}-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu16.04
