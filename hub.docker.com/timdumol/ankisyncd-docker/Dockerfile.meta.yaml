MetaArgs: null
Stages:
- BaseName: python:3-stretch
  Commands:
  - CmdLine:
    - apt-get update   && apt-get install -y python3-dev portaudio19-dev python3-pyaudio   &&
      apt-get clean && apt-get autoremove && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - git clone https://github.com/TimDumol/anki-sync-server.git   && cd anki-sync-server
      && git submodule update --init   && cd anki-bundled && pip install -r requirements.txt   &&
      pip install webob
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ankisyncd.conf.tmpl
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Name: workdir
    Path: /app/anki-sync-server
  - Name: expose
    Ports:
    - "27100"
  - Name: volume
    Volumes:
    - /var/ankisyncd
  - CmdLine:
    - dockerize
    - -template
    - /app/ankisyncd.conf.tmpl:/app/anki-sync-server/ankisyncd.conf
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - python
    - -m
    - ankisyncd
    Name: cmd
    PrependShell: false
  From:
    Image: python:3-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-stretch
