{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mjmg/centos-mro-base:latest",
      "SourceCode": "FROM mjmg/centos-mro-base:latest",
      "Platform": "",
      "From": {
        "Image": "mjmg/centos-mro-base:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "METABOANALYST_VERSION",
              "Value": "3.98"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METABOANALYST_WAR_URL",
              "Value": "https://dl.dropboxusercontent.com/s/klbtvns5z0cr6mv/MetaboAnalyst-$METABOANALYST_VERSION.war"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum update -y  \u0026\u0026   yum upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y unzip netcdf-devel libxml2-devel ImageMagick graphviz cairo-devel libXt-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('xcms')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('globaltest')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('impute')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('pcaMethods')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('siggenes')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('globaltest')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('Rgraphviz')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('KEGGgraph')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('preprocessCore')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('genefilter')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('SSPA')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('GlobalAncova')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"source('https://bioconductor.org/biocLite.R'); biocLite('sva')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('Rserve')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('ellipse')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('scatterplot3d')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('pls')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('caret')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('lattice')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('Cairo')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('randomForest')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('e1071')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('gplots')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('som')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('xtable')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('RColorBrewer')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('pheatmap')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('igraph')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('RJSONIO')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('caTools')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('ROCR')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages('pROC')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLASSFISH_PKG",
              "Value": "http://download.java.net/glassfish/4.1.1/release/glassfish-4.1.1.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_FILE_NAME",
              "Value": "glassfish-4.1.1.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -b /opt -m -s /bin/bash glassfish \u0026\u0026 echo glassfish:glassfish | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/glassfish \u0026\u0026 curl -O $GLASSFISH_PKG \u0026\u0026 unzip $PKG_FILE_NAME \u0026\u0026 rm $PKG_FILE_NAME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/glassfish \u0026\u0026 curl -o MetaboAnalyst.war $METABOANALYST_WAR_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R glassfish:glassfish /opt/glassfish*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "glassfish"
        },
        {
          "Name": "workdir",
          "Path": "/opt/glassfish/glassfish4/bin"
        },
        {
          "CmdLine": [
            "echo \"admin;{SSHA256}80e0NeB6XBWXsIPa7pT54D9JZ5DR5hGQV1kN1OAsgJePNXY6Pl0EIw==;asadmin\" \u003e /opt/glassfish/glassfish4/glassfish/domains/domain1/config/admin-keyfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"AS_ADMIN_PASSWORD=glassfish\" \u003e pwdfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./asadmin start-domain \u0026\u0026   ./asadmin --user admin --passwordfile pwdfile deploy  /opt/glassfish/MetaboAnalyst.war \u0026\u0026   ./asadmin --user admin --passwordfile pwdfile enable-secure-admin \u0026\u0026   ./asadmin stop-domain"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "4848",
            "8009"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "8181"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9001"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Rserve.conf",
            "/etc/supervisor/conf.d/Rserve.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "glassfish.conf",
            "/etc/supervisor/conf.d/glassfish.conf"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}