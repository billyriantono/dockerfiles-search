MetaArgs: null
Stages:
- BaseName: mono:6.0
  Commands:
  - Env:
    - Key: PUID
      Value: "1000"
    - Key: PGID
      Value: "100"
    - Key: TargetFrameworkDirectory
      Value: /usr/lib/mono/
    Name: env
  - CmdLine:
    - apt-get install apt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y gnupg curl wget
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bintray.com/user/downloadSubjectPublicKey?username=bintray | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.bintray.com/cazzar/shoko-deps jesse main" | tee -a /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ftp.debian.org/debian stretch-backports main" | tee -a /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y apt-utils libmediainfo0v5 librhash0 sqlite.interop
      jq unzip libunwind-dev apt-transport-https && apt-get install -y -t stretch-backports
      gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel 2.2
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/source /usr/src/app/build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/app/source
  - Name: workdir
    Path: /usr/src/app/source
  - CmdLine:
    - nuget restore
    Name: run
    PrependShell: true
  - CmdLine:
    - msbuild /property:Configuration=CLI /property:OutDir=/usr/src/app/build/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /usr/src/app/build/System.Net.Http.dll
    Name: run
    PrependShell: true
  From:
    Image: mono:6.0
  Name: ""
  Platform: ""
  SourceCode: FROM mono:6.0
- BaseName: mono:6.0
  Commands:
  - Env:
    - Key: PUID
      Value: "1000"
    - Key: PGID
      Value: "100"
    Name: env
  - CmdLine:
    - apt-get install apt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y gnupg curl wget
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bintray.com/user/downloadSubjectPublicKey?username=bintray | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.bintray.com/cazzar/shoko-deps jesse main" | tee -a /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ftp.debian.org/debian stretch-backports main" | tee -a /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y apt-utils libmediainfo0v5 librhash0 sqlite.interop
      jq unzip libunwind-dev apt-transport-https && apt-get install -y -t stretch-backports
      gosu
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app/build
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /usr/src/app/build
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dockerentry.sh
    - /dockerentry.sh
  - Name: workdir
    Path: /usr/src/app/build/webui
  - CmdLine:
    - curl -L $(curl https://api.github.com/repos/ShokoAnime/ShokoServer-WebUI/releases
      | jq -r '.[0].assets[0].browser_download_url') -o latest.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip -o latest.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm latest.zip
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/shoko/.shoko/
  - Name: volume
    Volumes:
    - /usr/src/app/build/webui
  - Health:
      StartPeriod: 300000000000
      Test:
      - CMD-SHELL
      - 'curl -H "Content-Type: application/json" -H ''Accept: application/json''
        ''http://localhost:8111/v1/Server'' || exit 1'
    Name: healthcheck
  - Name: expose
    Ports:
    - "8111"
  - CmdLine:
    - /bin/bash /dockerentry.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: mono:6.0
  Name: ""
  Platform: ""
  SourceCode: FROM mono:6.0
