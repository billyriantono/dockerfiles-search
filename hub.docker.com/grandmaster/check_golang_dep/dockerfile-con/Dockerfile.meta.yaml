MetaArgs: null
Stages:
- BaseName: python:3.7-alpine
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /requirements.txt
  - CmdLine:
    - set -ex     && buildDeps="gcc make libc-dev musl-dev linux-headers pcre-dev
      postgresql-dev postgresql-client expat-dev"     && apk add --no-cache --virtual
      .build-deps $buildDeps     && python3.7 -m venv /venv     && /venv/bin/pip install
      -U pip     && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c "/venv/bin/pip install --no-cache-dir
      -r /requirements.txt"     && apk add --no-cache --update --virtual .python-rundeps
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /code/
  - CmdLine:
    - touch /code/salversion.log && chmod 777 /code/salversion.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Env:
    - Key: UWSGI_VIRTUALENV
      Value: /venv
    - Key: UWSGI_WSGI_FILE
      Value: salversion/wsgi.py
    - Key: UWSGI_HTTP
      Value: :8000
    - Key: UWSGI_MASTER
      Value: "1"
    - Key: UWSGI_WORKERS
      Value: "2"
    - Key: UWSGI_THREADS
      Value: "8"
    - Key: UWSGI_UID
      Value: "1000"
    - Key: UWSGI_GID
      Value: "2000"
    - Key: UWSGI_LAZY_APPS
      Value: "1"
    - Key: UWSGI_WSGI_ENV_BEHAVIOR
      Value: holy
    Name: env
  - Env:
    - Key: RUNNING_ENVIRONMENT
      Value: docker
    Name: env
  - CmdLine:
    - chmod +x /code/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /code/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /venv/bin/uwsgi
    - --http-auto-chunked
    - --http-keepalive
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7-alpine
