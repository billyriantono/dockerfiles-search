{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "CmdLine": [
            "yes | unminimize \u0026\u0026 apt-get update \u0026\u0026    DEBIAN_FRONTEND=noninteractive apt-get install -y man-db build-essential clang bison flex libreadline-dev      gawk tcl-dev libffi-dev git mercurial graphviz        xdot pkg-config python python3 libftdi-dev gperf      libboost-program-options-dev autoconf libgmp-dev      cmake curl \u0026\u0026    rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libfl2 \u0026\u0026 apt-get install libfl-dev || true ; rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "git clone http://git.veripool.org/git/verilator \u0026\u0026    cd verilator \u0026\u0026 autoconf \u0026\u0026 ./configure \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026    cd .. \u0026\u0026 rm -rf verilator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/YosysHQ/yosys.git yosys \u0026\u0026    cd yosys \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026    cd .. \u0026\u0026 rm -rf yosys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/YosysHQ/SymbiYosys.git SymbiYosys \u0026\u0026    cd SymbiYosys \u0026\u0026 make install \u0026\u0026    cd .. \u0026\u0026 rm -rf SymbiYosys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/SRI-CSL/yices2.git yices2 \u0026\u0026    cd yices2 \u0026\u0026 autoconf \u0026\u0026 ./configure \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026    cd .. \u0026\u0026 rm -rf yices2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/Z3Prover/z3.git z3 \u0026\u0026    cd z3 \u0026\u0026 python scripts/mk_make.py \u0026\u0026 cd build \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026    cd /root \u0026\u0026 rm -rf z3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/boolector/boolector \u0026\u0026    cd boolector \u0026\u0026 ./contrib/setup-btor2tools.sh \u0026\u0026 ./contrib/setup-lingeling.sh \u0026\u0026 ./configure.sh \u0026\u0026    make -C build -j$(nproc) \u0026\u0026 cp build/bin/boolector build/bin/btor* /usr/local/bin/ \u0026\u0026 cp deps/btor2tools/bin/btorsim /usr/local/bin/ \u0026\u0026    cd /root \u0026\u0026 rm -rf boolector"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}