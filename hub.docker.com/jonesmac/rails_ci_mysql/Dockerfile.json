{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3",
      "SourceCode": "FROM ruby:2.3",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get -qq install -y     curl ca-certificates bzip2 imagemagick jq libfontconfig     mysql-client xz-utils     --no-install-recommends \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.06.0-ce"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_ARCH",
              "Value": "x86_64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;     if ! curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${DOCKER_ARCH}/docker-${DOCKER_VERSION}.tgz\"; then       echo \u003e\u00262 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${DOCKER_ARCH}'\";       exit 1;     fi;     tar --extract \t\t  --file docker.tgz \t\t  --strip-components 1 \t\t  --directory /usr/local/bin/;     rm docker.tgz;     docker -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "error"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm set progress=false \u0026\u0026     npm install -g --progress=false yarn \u0026\u0026     npm cache clean --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2\"     \u0026\u0026 mkdir \"phantomjs-$PHANTOMJS_VERSION-linux-x86_64\"     \u0026\u0026 tar -jxvf \"phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2\" -C \"phantomjs-$PHANTOMJS_VERSION-linux-x86_64\" --strip-components=1     \u0026\u0026 mv \"phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin/phantomjs\" /usr/local/bin     \u0026\u0026 rm -rf \"phantomjs-$PHANTOMJS_VERSION-linux-x86_64\" \"phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bundle config disable_exec_load true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bundle config github.https true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "test"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RACK_ENV",
              "Value": "test"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}