MetaArgs: null
Stages:
- BaseName: bigm/base-deb-tools
  Commands:
  - CmdLine:
    - /xt/tools/_apt_install git-flow
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install python-magic s3cmd
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install python-pip jq
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install docker.io
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /goroot && curl https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz
      | tar xvzf - -C /goroot --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /gopath
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /goroot
    Name: env
  - Env:
    - Key: GOPATH
      Value: /gopath
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin:$GOPATH/bin
    Name: env
  - CmdLine:
    - go get github.com/tools/godep
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install dialog autossh
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install php5-cli php-pear libyaml-dev php5-dev build-essential     &&
      yes "" | pecl install yaml     && echo "extension=yaml.so" > /etc/php5/mods-available/yaml.ini     &&
      php5enmod yaml     && /xt/tools/_apt_remove php5-dev php-pear build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install rsync
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install crudini
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION_FLEET
      Value: 0.11.5
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget -nv https://github.com/coreos/fleet/releases/download/v${VERSION_FLEET}/fleet-v${VERSION_FLEET}-linux-amd64.tar.gz
      &&   tar -xvf fleet-v${VERSION_FLEET}-linux-amd64.tar.gz &&   mv /tmp/fleet-v${VERSION_FLEET}-linux-amd64/fleetctl
      /usr/local/bin/fleetctl &&   rm -rf /tmp/fleet-v${VERSION_FLEET}-linux-amd64
      /tmp/fleet-v${VERSION_FLEET}-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION_ETCD
      Value: 2.2.4
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget -nv https://github.com/coreos/etcd/releases/download/v${VERSION_ETCD}/etcd-v${VERSION_ETCD}-linux-amd64.tar.gz
      &&   tar -xvf etcd-v${VERSION_ETCD}-linux-amd64.tar.gz &&   mv /tmp/etcd-v${VERSION_ETCD}-linux-amd64/etcdctl
      /usr/local/bin/etcdctl &&   rm -rf /tmp/etcd-v${VERSION_ETCD}-linux-amd64 /tmp/etcd-v${VERSION_ETCD}-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_ppa_install ppa:ansible/ansible ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - ansible-galaxy install defunctzombie.coreos-bootstrap
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install nfs-common portmap
    Name: run
    PrependShell: true
  - CmdLine:
    - /xt/tools/_apt_install mosh sshfs
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/xt/hosting/bin
    Name: env
  - CmdLine:
    - echo "set-option -g default-shell /bin/zsh" > /root/.tmux.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export TERM=xterm-color" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /prj
  - CmdLine:
    - zsh
    Name: cmd
    PrependShell: false
  From:
    Image: bigm/base-deb-tools
  Name: ""
  Platform: ""
  SourceCode: FROM bigm/base-deb-tools
