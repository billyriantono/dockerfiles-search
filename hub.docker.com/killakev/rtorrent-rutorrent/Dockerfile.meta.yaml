MetaArgs: null
Stages:
- BaseName: nginx:stable-alpine
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: maintainer
      Value: '"CrazyMax"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"rtorrent-rutorrent"'
    - Key: org.label-schema.description
      Value: '"rTorrent and ruTorrent"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.url
      Value: '"https://github.com/crazy-max/docker-rtorrent-rutorrent"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/crazy-max/docker-rtorrent-rutorrent"'
    - Key: org.label-schema.vendor
      Value: '"CrazyMax"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: RTORRENT_VERSION
      Value: 0.9.7
    - Key: LIBTORRENT_VERSION
      Value: 0.13.7
    - Key: XMLRPC_VERSION
      Value: 01.54.00
    - Key: LIBSIG_VERSION
      Value: 2.10.1
    - Key: CARES_VERSION
      Value: 1.14.0
    - Key: CURL_VERSION
      Value: 7.63.0
    - Key: MKTORRENT_VERSION
      Value: "1.1"
    - Key: NGINX_DAV_VERSION
      Value: 3.0.0
    Name: env
  - CmdLine:
    - mkdir -p /usr/src
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update --no-cache add -t build-dependencies     autoconf     automake     binutils     build-base     cppunit-dev     git     libtool     libressl-dev     linux-headers     ncurses-dev     subversion     tar     wget     xz     zlib-dev   &&
      cd /tmp   && svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/release_number/${XMLRPC_VERSION}/
      xmlrpc-c   && cd xmlrpc-c   && ./configure   && make   && make install   &&
      cd /tmp   && wget http://ftp.gnome.org/pub/GNOME/sources/libsigc++/2.10/libsigc++-${LIBSIG_VERSION}.tar.xz   &&
      unxz libsigc++-${LIBSIG_VERSION}.tar.xz   && tar -xf libsigc++-${LIBSIG_VERSION}.tar   &&
      cd libsigc++-${LIBSIG_VERSION}   && ./configure   && make   && make install   &&
      cd /tmp   && wget https://c-ares.haxx.se/download/c-ares-${CARES_VERSION}.tar.gz   &&
      tar zxf c-ares-${CARES_VERSION}.tar.gz   && cd c-ares-${CARES_VERSION}   &&
      ./configure   && make   && make install   && cd /tmp   && wget https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz   &&
      tar zxf curl-${CURL_VERSION}.tar.gz   && cd curl-${CURL_VERSION}   && ./configure
      --enable-ares --enable-tls-srp --enable-gnu-tls --with-ssl --with-zlib   &&
      make   && make install   && cd /tmp   && git clone https://github.com/rakshasa/libtorrent.git   &&
      cd libtorrent   && git checkout tags/v${LIBTORRENT_VERSION}   && ./autogen.sh   &&
      ./configure --with-posix-fallocate   && make   && make install   && cd /tmp   &&
      git clone https://github.com/rakshasa/rtorrent.git   && cd rtorrent   && git
      checkout tags/v${RTORRENT_VERSION}   && ./autogen.sh   && ./configure --with-xmlrpc-c
      --with-ncurses   && make   && make install   && git clone https://github.com/esmil/mktorrent.git   &&
      cd mktorrent   && git checkout tags/v${MKTORRENT_VERSION}   && make   && make
      install   && apk del build-dependencies   && rm -rf /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: RUTORRENT_VERSION
      Value: '"3.9"'
    - Key: RUTORRENT_REVISION
      Value: '"702afd3"'
    Name: env
  - CmdLine:
    - apk --update --no-cache add     apache2-utils     bind-tools     binutils     ca-certificates     coreutils     dhclient     ffmpeg     geoip     grep     gzip     libressl     libstdc++     mediainfo     ncurses     pcre     php7     php7-cli     php7-ctype     php7-curl     php7-fpm     php7-json     php7-mbstring     php7-openssl     php7-phar     php7-session     php7-sockets     php7-xml     php7-zip     php7-zlib     shadow     sox     supervisor     tar     tzdata     unrar     unzip     util-linux     wget     zip     zlib   &&
      apk --update --no-cache add -t build-dependencies     build-base     libxslt-dev     libxml2-dev     git     linux-headers     libressl-dev     pcre-dev     zlib-dev   &&
      cd /usr/src   && wget http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz   &&
      tar zxvf nginx-$NGINX_VERSION.tar.gz   && git clone -b v${NGINX_DAV_VERSION}
      --single-branch --depth 1 https://github.com/arut/nginx-dav-ext-module.git   &&
      cd nginx-$NGINX_VERSION   && ./configure --with-compat --add-dynamic-module=../nginx-dav-ext-module   &&
      make modules   && cp objs/ngx_http_dav_ext_module.so /etc/nginx/modules   &&
      mkdir -p /data /var/log/supervisord /var/www   && cd /var/www   && git clone
      https://github.com/Novik/ruTorrent.git rutorrent   && cd rutorrent   && git
      checkout ${RUTORRENT_REVISION}   && git clone https://github.com/Micdu70/geoip2-rutorrent
      /var/www/rutorrent/plugins/geoip2   && cd /var/www/rutorrent/plugins/geoip2/database   &&
      wget -q http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz   &&
      wget -q http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz   &&
      tar -xvzf GeoLite2-City.tar.gz --strip-components=1   && tar -xvzf GeoLite2-Country.tar.gz
      --strip-components=1   && rm -f *.gz   && addgroup -g 1000 rtorrent   && adduser
      -u 1000 -G rtorrent -h /home/rtorrent -s /sbin/nologin -D rtorrent   && usermod
      -a -G rtorrent nginx   && chown -R rtorrent. /data /var/log/php7 /var/www/rutorrent   &&
      apk del build-dependencies   && rm -rf /etc/nginx/conf.d/*     /usr/src/nginx*     /tmp/*     /var/cache/apk/*     /var/www/rutorrent/.git*     /var/www/rutorrent/conf/users     /var/www/rutorrent/plugins/geoip     /var/www/rutorrent/plugins/geoip2/.git     /var/www/rutorrent/share
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets
    - /
  - CmdLine:
    - chmod a+x /entrypoint.sh   && chown -R nginx. /etc/nginx/conf.d /var/log/nginx
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "50000"
    - 6881/udp
    - "8000"
    - "8080"
    - "9000"
  - Name: volume
    Volumes:
    - /data
    - /passwd
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/supervisord
    - -c
    - /etc/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:stable-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:stable-alpine
