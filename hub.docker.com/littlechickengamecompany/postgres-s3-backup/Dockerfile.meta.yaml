MetaArgs: null
Stages:
- BaseName: alpine:3.3
  Commands:
  - Env:
    - Key: SCHEDULE
      Value: '"@daily"'
    - Key: PGUSER
      Value: '"postgres"'
    - Key: COMPRESSION_LEVEL
      Value: "9"
    - Key: NAME_PREFIX
      Value: '''database-archive'''
    - Key: AWS_ENDPOINT
      Value: '''s3.amazonaws.com'''
    Name: env
  - CmdLine:
    - echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
      &&     apk update &&     apk --no-cache add --virtual build-dependencies tar
      ca-certificates &&     apk --no-cache add libpq postgresql@edge &&     wget
      -qO- https://github.com/rlmcpherson/s3gof3r/releases/download/v0.5.0/gof3r_0.5.0_linux_amd64.tar.gz
      | tar xvz --strip 1 -C /usr/local/bin/ &&     wget -qO- https://github.com/odise/go-cron/releases/download/v0.0.7/go-cron-linux.gz
      | zcat > /usr/local/bin/go-cron &&     cp /usr/bin/pg_dump* /usr/local/bin/
      &&     chmod u+x /usr/local/bin/pg_dump* /usr/local/bin/go-cron /usr/local/bin/gof3r
      &&     apk del postgresql &&     apk del build-dependencies
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup.sh
    - /app/backup.sh
  - CmdLine:
    - chmod +x /app/backup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sh
    - -c
    - go-cron -s "${SCHEDULE}" -- sh /app/backup.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.3
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.3
