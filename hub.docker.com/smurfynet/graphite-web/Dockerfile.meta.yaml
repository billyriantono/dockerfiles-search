MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: WHISPER_VERSION
      Value: 1.1.5
    Name: env
  - Env:
    - Key: GRAPHITE_WEB_VERSION
      Value: 1.1.5
    Name: env
  - CmdLine:
    - apk add --no-cache curl python2 py2-pip &&     apk add --no-cache libffi cairo
      &&     apk add --no-cache --virtual .build-deps libffi-dev musl-dev cairo-dev
      build-base python2-dev &&     pip install gunicorn django python-memcached  &&     pip
      install whisper==$WHISPER_VERSION &&     pip install --install-option="--prefix=/var/lib/graphite"
      --install-option="--install-lib=/var/lib/graphite/webapp" graphite-web==$GRAPHITE_WEB_VERSION
      &&     apk del .build-deps curl &&     rm -rf /root/.cache/pip
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run.sh
    - /run.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - local_settings.py
    - /var/lib/graphite/webapp/graphite/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - graphite_wsgi.py
    - /var/lib/graphite/conf
  - CmdLine:
    - mkdir -p /data/graphite/conf &&     mkdir -p /data/graphite/storage/whisper
      &&     mkdir -p /data/graphite/storage/log/webapp &&     mkdir -p /var/log/graphite
      &&     touch /data/graphite/storage/index &&     chmod 0775 /data/graphite/storage
      /data/graphite/storage/whisper &&     chmod +x /run.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Name: volume
    Volumes:
    - /data/graphite
  - Env:
    - Key: PYTHONPATH
      Value: /var/lib/graphite/webapp
    Name: env
  - Env:
    - Key: GRAPHITE_STORAGE_DIR
      Value: /data/graphite/storage
    Name: env
  - Env:
    - Key: GRAPHITE_CONF_DIR
      Value: /data/graphite/conf
    Name: env
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
