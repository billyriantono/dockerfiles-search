{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "drupalci/base",
      "SourceCode": "FROM       drupalci/base",
      "Platform": "",
      "From": {
        "Image": "drupalci/base"
      },
      "Commands": [
        {
          "Maintainer": "drupalci",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUPALCI",
              "Value": "TRUE"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026     apt-get install -y     build-essential     bison     ccache     curl     daemon     freetds-dev     git     libaspell-dev     libbz2-dev     libc-client-dev     libcurl3-dev     libcurl4-openssl-dev     libdb5.1-dev     libfreetype6-dev     libgmp3-dev     libicu-dev     libjpeg-dev     libldap2-dev     libmcrypt-dev     libmhash-dev     libmysqlclient-dev     libmysqlclient15-dev     libpcre3-dev     libpng-dev     libpq-dev     libreadline6-dev     librecode-dev     libsnmp-dev     libsqlite-dev     libt1-dev     libtidy-dev     libxml2-dev     libssl-dev     libxpm-dev     libxslt-dev     libyaml-dev     libz-dev     make     mysql-client     ncurses-dev     php5-dev     postgresql-client     postgresql-client-common     re2c     software-properties-common     sqlite3     sudo     supervisor     unixODBC-dev     unzip     sqlite3     libicu52     libjpeg8     libfontconfig     libwebp5     unzip \u0026\u0026     apt-get clean \u0026\u0026 apt-get autoremove -y \u0026\u0026     rm /etc/cron.d/php5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 -o ~/phantomjs-2.1.1.tar.bz2 \u0026\u0026     tar jxvf ~/phantomjs-2.1.1.tar.bz2 -C ~ \u0026\u0026     mv ~/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs \u0026\u0026     rm -f ~/phantomjs-2.1.1.tar.bz2 \u0026\u0026     rm -rf ~/phantomjs-2.1.1-linux-x86_64 \u0026\u0026     chmod 755 /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/CHH/phpenv.git /tmp/phpenv \u0026\u0026     PHPENV_ROOT=\"/opt/phpenv\" /tmp/phpenv/bin/phpenv-install.sh \u0026\u0026     scp /tmp/phpenv/extensions/* /opt/phpenv/libexec/ \u0026\u0026     echo 'eval \"$(phpenv init -)\"' \u003e\u003e /root/.bashrc \u0026\u0026     git clone https://github.com/php-build/php-build.git /opt/phpenv/plugins/php-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/phpenv/plugins/php-build"
        },
        {
          "CmdLine": [
            "git reset --hard 2b1928b7ef7b3def9966db12eaf56d7966f834cd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/phpenv/shims:/opt/phpenv/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"--with-gettext=shared\" \u003e\u003e /opt/phpenv/plugins/php-build/share/php-build/default_configure_options \u0026\u0026    echo \"--with-freetype-dir=/usr/lib/x86_64-linux-gnu\" \u003e\u003e /opt/phpenv/plugins/php-build/share/php-build/default_configure_options \u0026\u0026    echo \"--with-pdo-pgsql\" \u003e\u003e /opt/phpenv/plugins/php-build/share/php-build/default_configure_options \u0026\u0026    /opt/phpenv/plugins/php-build/install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"wget http://getcomposer.org/composer.phar \u0026\u0026 chmod 775 composer.phar \u0026\u0026 sudo mv composer.phar /usr/local/bin/composer\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "HOME=/ /usr/local/bin/composer global require drush/drush:9.0.0-alpha1 \u0026\u0026     /.composer/vendor/drush/drush/drush --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf/start.sh",
            "/usr/local/bin/start.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf/supervisor-phantomjs.conf",
            "/etc/supervisor/conf.d/phantomjs.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod 775 /usr/local/bin/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}