MetaArgs: null
Stages:
- BaseName: ros:kinetic-perception
  Commands:
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Env:
    - Key: TENSORFLOW_VARIANT
      Value: cpu/tensorflow-0.11.0rc0-cp27-none
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -q -y         wget         pkg-config         git-core         python         python-dev         vim         htop         git     &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py     &&     pip --no-cache-dir install         scipy         numpy         matplotlib         pandas         ipykernel         jupyter         pyyaml     &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install     http://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_VARIANT}-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install     keras==1.1.0     pytest==3.0.3     flake8==3.0.4
    Name: run
    PrependShell: true
  - Expression: COPY requirements.txt /usr/src/app/
    Name: onbuild
  - Expression: RUN pip install --no-cache-dir -r requirements.txt
    Name: onbuild
  - Expression: COPY . /usr/src/app/
    Name: onbuild
  - Expression: RUN pip install --no-deps --no-cache-dir -e /usr/src/app/
    Name: onbuild
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - notebook
    Name: cmd
    PrependShell: false
  From:
    Image: ros:kinetic-perception
  Name: ""
  Platform: ""
  SourceCode: FROM ros:kinetic-perception
