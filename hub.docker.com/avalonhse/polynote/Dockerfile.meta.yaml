MetaArgs: null
Stages:
- BaseName: rocker/r-ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive   && apt-get update   && apt-get install
      -y --no-install-recommends gdebi-core openjdk-8-jdk git        libapparmor1
      sudo libcurl4-openssl-dev libssl1.0.0 libclang-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: SPARK_VERSION
      Value: 2.4.4
    Name: env
  - Env:
    - Key: HADOOP_VERSION
      Value: "2.7"
    Name: env
  - Env:
    - Key: SCALA_VERSION
      Value: 2.11.12
    Name: env
  - Env:
    - Key: POLYNOTE_VERSION
      Value: 0.2.11
    Name: env
  - Env:
    - Key: SPARK_HOME
      Value: /opt/spark
    Name: env
  - Env:
    - Key: PATH
      Value: '"/opt/conda/bin:/usr/lib/rstudio-server/bin:$JAVA_HOME/bin:$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin"'
    Name: env
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive   && wget https://download2.rstudio.org/server/bionic/amd64/rstudio-server-1.2.5019-amd64.deb   &&
      gdebi -n rstudio-server-1.2.5019-amd64.deb   && rm /etc/environment && touch
      /etc/environment   && echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >>
      /etc/environment   && /bin/bash -c "source /etc/environment"   && R CMD javareconf   &&
      Rscript -e "install.packages('rJava')"   && rm rstudio-server-1.2.5019-amd64.deb   &&
      echo "PATH=${PATH}" >> /etc/environment   && echo "PATH=${PATH}" >> /etc/R/Renviron   &&
      echo "SPARK_HOME=${SPARK_HOME}" >> /etc/R/Renviron   && echo "JAVA_HOME=${JAVA_HOM}"
      >> /etc/R/Renviron
    Name: run
    PrependShell: true
  - CmdLine:
    - "export DEBIAN_FRONTEND=noninteractive   && useradd rstudio   && echo \"rstudio:rstudio\"
      | chpasswd \t&& mkdir /home/rstudio \t&& chown rstudio:rstudio /home/rstudio
      \t&& addgroup rstudio staff"
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive   && apt-get update   && apt-get install
      -y --no-install-recommends libxml2-dev libssl-dev   && Rscript -e "install.packages('devtools')"   &&
      Rscript -e "install.packages('tidyverse')"   && Rscript -e "install.packages('data.table')"
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-divert --local --rename --add /sbin/initctl   && ln -sf /bin/true /sbin/initctl
    Name: run
    PrependShell: true
  - Env:
    - Key: INITRD
      Value: "no"
    Name: env
  - CmdLine:
    - mkdir -p /etc/container_environment && echo -n no > /etc/container_environment/INITRD
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - my_init
    - /sbin/my_init
  - CmdLine:
    - chmod 750 /sbin/my_init     && mkdir -p /etc/my_init.d && mkdir -p /etc/container_environment    &&
      touch /etc/container_environment.sh && touch /etc/container_environment.json    &&
      chmod 700 /etc/container_environment
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8   && update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8
      LANGUAGE=en_US:en LC_ALL=en_US.UTF-8   && echo -n en_US.UTF-8 > /etc/container_environment/LANG    &&
      echo -n en_US.UTF-8 > /etc/container_environment/LC_CTYPE   && echo -n en_US:en
      > /etc/container_environment/LANGUAGE    && echo -n en_US.UTF-8 > /etc/container_environment/LC_ALL
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 8377 docker_env   && chown :docker_env /etc/container_environment.sh
      /etc/container_environment.json   && chmod 640 /etc/container_environment.sh
      /etc/container_environment.json   && ln -s /etc/container_environment.sh /etc/profile.d/   &&
      echo ". /etc/container_environment.sh" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive   && apt-get update   && apt-get install
      -y --no-install-recommends runit cron
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/service/cron && mkdir -p /var/log/cron   && chmod 600 /etc/crontab
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runit/cron
    - /etc/service/cron/run
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cron_config/cron_log_config
    - /var/log/cron/config
  - CmdLine:
    - chown -R nobody  /var/log/cron && chmod +x /etc/service/cron/run
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /etc/my_init.d/startup.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/rserver /var/log/rserver ; sync
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rserver.sh
    - /etc/service/rserver/run
  - CmdLine:
    - chmod +x /etc/service/rserver/run     && cp /var/log/cron/config /var/log/rserver/     &&
      chown -R rstudio-server /var/log/rserver
    Name: run
    PrependShell: true
  - CmdLine:
    - (adduser --disabled-password --gecos "" guest && echo "guest:guest"|chpasswd)
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz   &&
      tar -zxvf spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz   && mv spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}
      spark   && mv spark /opt/spark   && rm spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O- "https://www.scala-lang.org/files/archive/scala-${SCALA_VERSION}.tgz"     |
      tar xzf - -C /usr/local --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh
      -O ~/miniconda.sh   && /bin/bash ~/miniconda.sh -b -p /opt/conda && rm ~/miniconda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh   && echo "source
      /etc/environment" >> /etc/my_init.d/startup.sh   && echo ". /opt/conda/etc/profile.d/conda.sh"
      >> /etc/my_init.d/startup.sh   && echo "conda activate base" >> /etc/my_init.d/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive   && apt-get clean   && rm -rf /tmp/*   &&
      rm -rf /var/lib/apt/lists/*   && apt-get autoremove -y   && apt-get autoclean
      -y   && apt-get update
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8787"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: rocker/r-ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM rocker/r-ubuntu:18.04
