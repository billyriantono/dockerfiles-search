MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - echo "Europe/Paris" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-utils nodejs build-essential yarn && wget https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/4.1.2/flyway-commandline-4.1.2-linux-x64.tar.gz
      && tar -xvf flyway-commandline-4.1.2-linux-x64.tar.gz && rm flyway-commandline-4.1.2-linux-x64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg
      | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release;
      echo "$ID") $(lsb_release -cs) stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python libssl-dev libffi-dev python-dev build-essential
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/azure-cli-script
    - /tmp/azure-cli-script
  - CmdLine:
    - chmod +x /tmp/azure-cli-script
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/azure-cli-script
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /flyway
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/4.2.0/flyway-commandline-4.2.0-linux-x64.tar.gz"
      > /flyway/install.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /flyway && tar zxfv install.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /flyway/flyway-4.2.0/flyway
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /flyway/flyway-4.2.0/flyway /bin/flyway
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y asciidoctor && gem install --no-document rake rouge coderay
      thread_safe slim haml tilt
    Name: run
    PrependShell: true
  - CmdLine:
    - npm init -y && npm install mjml
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export PATH="$PATH:/node_modules/.bin" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export PATH="$PATH:/node_modules/.bin" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
