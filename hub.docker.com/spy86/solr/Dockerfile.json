{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "anapsix/alpine-java:jre8",
      "SourceCode": "FROM anapsix/alpine-java:jre8",
      "Platform": "",
      "From": {
        "Image": "anapsix/alpine-java:jre8"
      },
      "Commands": [
        {
          "Maintainer": "Maciej Michalski \"maciej.michalsk@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SOLR_VERSION",
              "Value": "7.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOLR",
              "Value": "solr-$SOLR_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JDBC_MYSQL_VERSION",
              "Value": "5.1.38"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JDBC_PSQL_VERSION",
              "Value": "9.4.1207"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "[ -e /sbin/apk ] \u0026\u0026 ( [ -e /bin/bash ] || apk add --update bash ) ||     ( [ -e /usr/bin/apt-get ] \u0026\u0026 ( apt-get update \u0026\u0026 apt-get dist-upgrade -y \u0026\u0026 apt-get install -y ca-certificates patch unzip \u0026\u0026 apt-get clean all \u0026\u0026 which unzip \u0026\u0026 which patch ) || ( echo \"no \\\"apk\\\", no \\\"apt-get\\\", what are you running, Gentoo?\" \u003e\u00262 \u0026\u0026 exit 1 ) ) \u0026\u0026     ( which curl || apk add --update curl ) \u0026\u0026     cd /tmp \u0026\u0026     echo \"getting solr $SOLR_VERSION\" \u003e\u00262 \u0026\u0026     curl -sSL http://mirrors.gigenet.com/apache/lucene/solr/$SOLR_VERSION/$SOLR.tgz -o /tmp/$SOLR.tgz \u0026\u0026     mkdir -p /opt \u0026\u0026     gzip -dc /tmp/$SOLR.tgz | tar -C /opt -x \u0026\u0026     ln -sf /opt/$SOLR /opt/solr \u0026\u0026     echo \"getting PSQL JDBC\" \u003e\u00262 \u0026\u0026     curl -sSL http://jdbc.postgresql.org/download/postgresql-$JDBC_PSQL_VERSION.jar -o /opt/solr/dist/postgresql-$JDBC_PSQL_VERSION.jar \u0026\u0026     echo \"getting MYSQL JDBC\" \u003e\u00262 \u0026\u0026     curl -sSL http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-$JDBC_MYSQL_VERSION.tar.gz -o /tmp/mysql-connector-java-$JDBC_MYSQL_VERSION.tar.gz \u0026\u0026     echo mysql-connector-java-$JDBC_MYSQL_VERSION/mysql-connector-java-$JDBC_MYSQL_VERSION-bin.jar \u003e /tmp/include \u0026\u0026     gzip -dc /tmp/mysql-connector-java-$JDBC_MYSQL_VERSION.tar.gz | tar -x -T /tmp/include \u003e /opt/solr/dist/mysql-connector-java-$JDBC_MYSQL_VERSION-bin.jar \u0026\u0026     echo \"cleaning up..\" \u003e\u00262 \u0026\u0026     apk del curl || true \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8983"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/solr"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}