{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Key": "KONG_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "KONG_VERSION",
              "Value": "${KONG_VERSION:-0.9.1}"
            },
            {
              "Key": "KONG_NGINX_DAEMON",
              "Value": "off"
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/openresty/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"==\u003e Setting variables\"     \u0026\u0026 OPENRESTY_PREFIX=/usr/local/openresty     \u0026\u0026 OPENRESTY_VERSION=1.9.15.1     \u0026\u0026 LUAROCKS_VERSION=2.3.0     \u0026\u0026 LUAJIT_VERSION=2.1.0-beta2     \u0026\u0026 SERF_VERSION=0.7.0         \u0026\u0026 echo \"==\u003e Installing dependencies...\"     \u0026\u0026 apk add --no-cache --virtual=build-dependencies        make gcc musl-dev        pcre-dev openssl-dev zlib-dev ncurses-dev readline-dev        curl perl e2fsprogs-dev wget git     \u0026\u0026 mkdir -p /tmp/ngx_openresty     \u0026\u0026 cd /tmp/ngx_openresty     \u0026\u0026 echo \"==\u003e Downloading OpenResty...\"     \u0026\u0026 curl -sSL http://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz | tar -xz     \u0026\u0026 cd openresty-*     \u0026\u0026 echo \"==\u003e Configuring OpenResty...\"     \u0026\u0026 readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1)     \u0026\u0026 echo \"using upto $NPROC threads\"     \u0026\u0026 ./configure        --with-luajit        --with-pcre-jit        --with-ipv6        --with-http_realip_module        --with-http_ssl_module        --with-http_stub_status_module        -j${NPROC}     \u0026\u0026 echo \"==\u003e Building OpenResty...\"     \u0026\u0026 make -j${NPROC}     \u0026\u0026 echo \"==\u003e Installing OpenResty...\"     \u0026\u0026 make install     \u0026\u0026 echo \"==\u003e Configuring LuaRocks...\"     \u0026\u0026 mkdir -p /tmp/luarocks     \u0026\u0026 cd /tmp/luarocks     \u0026\u0026 curl -sSL http://keplerproject.github.io/luarocks/releases/luarocks-${LUAROCKS_VERSION}.tar.gz | tar -xz     \u0026\u0026 cd luarocks*     \u0026\u0026 ./configure        --with-lua=$OPENRESTY_PREFIX/luajit        --lua-suffix=jit-${LUAJIT_VERSION}        --with-lua-include=$OPENRESTY_PREFIX/luajit/include/luajit-2.1     \u0026\u0026 echo \"==\u003e Building\u0026Installing OpenResty...\"     \u0026\u0026 make build \u0026\u0026 make install         \u0026\u0026 echo \"==\u003e Installing kong dependencies...\"     \u0026\u0026 apk add --no-cache libpcrecpp perl openssl dnsmasq     \u0026\u0026 echo \"user=root\" \u003e\u003e /etc/dnsmasq.conf         \u0026\u0026 cd /tmp     \u0026\u0026 wget https://releases.hashicorp.com/serf/${SERF_VERSION}/serf_${SERF_VERSION}_linux_amd64.zip     \u0026\u0026 unzip serf*.zip \u0026\u0026 mv serf /usr/local/bin/ \u0026\u0026 rm serf*.zip         \u0026\u0026 LUAROCKS_INSTALL=\"luarocks install\"     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/leafo/pgmoon-1.6.0-1.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/leafo/loadkit-1.1.0-1.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/luarocks/luasocket-3.0rc1-2.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/luarocks/lua-cjson-2.1.0-1.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://raw.githubusercontent.com/leafo/etlua/master/etlua-dev-1.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/leafo/lapis-1.5.1-1.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/luarocks/lualogging-1.3.0-1.rockspec     \u0026\u0026 ${LUAROCKS_INSTALL} https://luarocks.org/manifests/daurnimator/luatz-0.3-1.rockspec         \u0026\u0026 echo \"==\u003e Installing kong...\"     \u0026\u0026 cd /tmp \u0026\u0026 git clone https://github.com/Mashape/kong.git     \u0026\u0026 cd /tmp/kong     \u0026\u0026 git checkout $KONG_VERSION     \u0026\u0026 luarocks install kong-*.rockspec     \u0026\u0026 cp bin/kong /usr/local/bin         \u0026\u0026 apk del build-dependencies     \u0026\u0026 rm -rf \"/tmp/\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "7373",
            "7946",
            "8000",
            "8001",
            "8443"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/kong"
          ]
        },
        {
          "CmdLine": [
            "kong"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}