{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "sneck/goofys",
      "SourceCode": "FROM sneck/goofys",
      "Platform": "",
      "From": {
        "Image": "sneck/goofys"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOOFYS_MOUNT_PATH",
              "Value": "${GOOFYS_MOUNT_PATH:-/s3}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache openrc nfs-utils     \u0026\u0026 rm -rf \"/tmp/\"*     \u0026\u0026 sed -i 's/#rc_sys=\"\"/rc_sys=\"lxc\"/g' /etc/rc.conf     \u0026\u0026 echo 'rc_provide=\"loopback net\"' \u003e\u003e /etc/rc.conf     \u0026\u0026 sed -i 's/^#\\(rc_logger=\"YES\"\\)$/\\1/' /etc/rc.conf     \u0026\u0026 sed -i '/tty/d' /etc/inittab     \u0026\u0026 sed -i 's/hostname $opts/# hostname $opts/g' /etc/init.d/hostname     \u0026\u0026 sed -i 's/mount -t tmpfs/# mount -t tmpfs/g' /lib/rc/sh/init.sh     \u0026\u0026 sed -i 's/cgroup_add_service /# cgroup_add_service /g' /lib/rc/sh/openrc-run.sh         \u0026\u0026 rc-update add nfs         \u0026\u0026 cp /etc/inittab /etc/inittab.bak         \u0026\u0026 cat /etc/inittab.bak | sed 's|::sysinit:/sbin/openrc sysinit|::sysinit:/nfsd-entrypoint.sh\\n\u0026|' \u003e /etc/inittab     \u0026\u0026 rm -rf /etc/inittab.bak"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/nfsd-entrypoint.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "111/tcp",
            "111/udp",
            "20048",
            "2049"
          ]
        },
        {
          "CmdLine": [
            "/sbin/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}