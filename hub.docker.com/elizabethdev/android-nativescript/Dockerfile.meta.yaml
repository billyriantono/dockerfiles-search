MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Elizabeth Mart√≠n Campos <eli@zabeth.es>"'
    Name: label
  - CmdLine:
    - useradd -ms /bin/bash nativescript
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - apt-get update &&     apt-get -y install apt-transport-https curl unzip usbutils
      --no-install-recommends &&     rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get update
      &&     apt-get -y install nodejs npm --no-install-recommends &&     rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386 &&     apt-get update &&     apt-get -y install
      lib32z1 lib32ncurses5 libbz2-1.0:i386 libstdc++6:i386 g++ --no-install-recommends
      &&     rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get update &&     apt-get -y install software-properties-common &&     add-apt-repository
      ppa:webupd8team/java &&     apt-get update &&     echo debconf shared/accepted-oracle-license-v1-1
      select true | debconf-set-selections &&     echo debconf shared/accepted-oracle-license-v1-1
      seen true | debconf-set-selections &&     apt-get -y install oracle-java8-installer
      --no-install-recommends &&     export JAVA_HOME=$(update-alternatives --query
      javac | sed -n -e ''s/Best: *\(.*\)\/bin\/javac/\1/p'') &&     rm -r /var/lib/apt/lists/*'
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g nativescript --unsafe-perm &&     tns error-reporting disable
    Name: run
    PrependShell: true
  - Key: ANDROID_SDK_URL
    Name: arg
    Value: '"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"'
  - Key: ANDROID_SYSTEM_PACKAGE
    Name: arg
    Value: '"platforms;android-28"'
  - Key: ANDROID_BUILD_TOOLS_PACKAGE
    Name: arg
    Value: '"build-tools;28.0.3"'
  - Key: ANDROID_PACKAGES
    Name: arg
    Value: '"tools platform-tools $ANDROID_SYSTEM_PACKAGE $ANDROID_BUILD_TOOLS_PACKAGE
      extras;android;m2repository extras;google;m2repository"'
  - Chown: ""
    Name: add
    SourcesAndDest:
    - $ANDROID_SDK_URL
    - /tmp/android-sdk.zip
  - CmdLine:
    - mkdir /opt/android-sdk /app /dist &&     chown nativescript:nativescript /tmp/android-sdk.zip
      /opt/android-sdk /app /dist
    Name: run
    PrependShell: true
  - Name: user
    User: nativescript
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin
    Name: env
  - CmdLine:
    - tns error-reporting disable &&     unzip -q /tmp/android-sdk.zip -d /opt/android-sdk
      &&     rm /tmp/android-sdk.zip &&     mkdir /home/nativescript/.android &&     touch
      /home/nativescript/.android/repositories.cfg &&     yes | /opt/android-sdk/tools/bin/sdkmanager
      --licenses &&     /opt/android-sdk/tools/bin/sdkmanager --update &&     echo
      "y" | /opt/android-sdk/tools/bin/sdkmanager $ANDROID_PACKAGES
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /app
    - /dist
  - Name: workdir
    Path: /app
  - CmdLine:
    - /docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
