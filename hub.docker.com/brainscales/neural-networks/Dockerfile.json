{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jchavas/saucy-sshd",
      "SourceCode": "FROM jchavas/saucy-sshd",
      "Platform": "",
      "From": {
        "Image": "jchavas/saucy-sshd"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y install freeglut3 freeglut3-dev binutils-gold"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install automake libtool build-essential subversion openmpi-bin libopenmpi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root; svn co --non-interactive --username Anonymous --password Anonymous http://svn.incf.org/svn/music/branches/multiconn music"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/music \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install wget  python libpython-dev libncurses5-dev libreadline-dev python-matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install libgsl0-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root; wget http://www.nest-simulator.org/download/gplreleases/nest-2.2.2.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root; tar xvzf nest-2.2.2.tar.gz; rm nest-2.2.2.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/nest-2.2.2 \u0026\u0026 ./configure --with-mpi --prefix=/opt/nest --with-pynest-prefix=/usr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/nest-2.2.2 \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$PATH:/opt/nest/bin' \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install python-pip python-scipy ipython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install sympy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install brian"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install libx11-dev libxext-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root; wget http://www.neuron.yale.edu/ftp/neuron/versions/v7.3/nrn-7.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root; wget http://www.neuron.yale.edu/ftp/neuron/versions/v7.3/iv-18.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt; mkdir neuron; mv /root/nrn-7.3.tar.gz /root/iv-18.tar.gz neuron/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/neuron; tar xzf iv-18.tar.gz; rm iv-18.tar.gz; mv iv-18 iv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/neuron/iv; ./configure --prefix=`pwd` \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/neuron; tar xzf nrn-7.3.tar.gz; rm nrn-7.3.tar.gz; mv nrn-7.3 nrn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/neuron/nrn; ./configure --prefix=`pwd` --with-nrnpython --with-mpi --with-music=/usr/local \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$PATH:/opt/neuron/iv/x86_64/bin:/opt/neuron/nrn/x86_64/bin' \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/neuron/nrn/src/nrnpython; python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install mpi4py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jinja2 Cheetah csa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PATH=$PATH:/opt/neuron/iv/x86_64/bin:/opt/neuron/nrn/x86_64/bin:/opt/nest/bin pip install pyNN"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install nose mock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root; wget https://pypi.python.org/packages/source/P/PyNN/PyNN-0.7.5.tar.gz; tar xzf PyNN-0.7.5.tar.gz; rm PyNN-0.7.5.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PATH=$PATH:/opt/neuron/iv/x86_64/bin:/opt/neuron/nrn/x86_64/bin:/opt/nest/bin; cd /root/PyNN-0.7.5/test/unittests \u0026\u0026 nosetests -I test_neuron -I test_nest \u0026\u0026 nosetests test_nest.py \u0026\u0026 nosetests test_neuron.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/music/test; mpirun -np 4 music /root/music/test/events.music"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PATH=$PATH:/opt/nest/bin; cd /root; files=$(ls /root/nest-2.2.2/testsuite/unittests/*.sli); for f in $files; do nest $f; if [ $? != 0 ]; then echo \"ERROR in nest unittests: function $f\"; exit 1; fi; done; rm *.dat *.gdf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "README",
            "/root/README"
          ]
        },
        {
          "CmdLine": [
            "unset DEBIAN_FRONTEND"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}