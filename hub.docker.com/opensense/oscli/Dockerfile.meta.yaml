MetaArgs: null
Stages:
- BaseName: python:3-slim
  Commands:
  - Key: OSCLI_HOME
    Name: arg
    Value: /oscli
  - Env:
    - Key: PATH
      Value: $PATH:${OSCLI_HOME}/bin
    - Key: CLOUDSDK_CONFIG
      Value: ${OSCLI_HOME}/gcloud/.config
    - Key: CLOUDSDK_CORE_PROJECT
      Value: opensense-1
    - Key: GCLOUD_CLUSTER
      Value: cluster-1
    - Key: GCLOUD_REGION
      Value: europe-west1
    - Key: GCLOUD_ZONE
      Value: europe-west1-d
    - Key: GCLOUD_REGISTRY
      Value: eu.gcr.io
    - Key: GCLOUD_API_KEYFILE
      Value: ""
    - Key: KUSTOMIZE_VERSION
      Value: 3.1.0
    Name: env
  - Name: workdir
    Path: ${OSCLI_HOME}
  - CmdLine:
    - mkdir ./bin &&     echo 'deb http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list
      && apt-get update &&     apt-get update &&     apt-get install -y --no-install-recommends
      lsb-release curl gnupg apt-transport-https jq &&     apt-get install -y --no-install-recommends
      git &&     export DOCKER_REPO="$(lsb_release -c -s)" &&     echo "deb [arch=amd64]
      https://download.docker.com/linux/debian $DOCKER_REPO stable" | tee -a /etc/apt/sources.list.d/docker.list
      &&     curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add
      - && apt-get update -y &&     apt-get install -y --no-install-recommends docker-ce
      &&     export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb
      http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key
      add - && apt-get update -y &&     apt-get install -y --no-install-recommends
      google-cloud-sdk kubectl &&     curl -O -L https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
      &&     mv kustomize_*_linux_amd64 ./bin/kustomize && chmod 755 ./bin/kustomize
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - oscli/
    - ${OSCLI_HOME}/oscli
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - setup.*
    - ${OSCLI_HOME}/
  - CmdLine:
    - pip3 install --no-cache-dir -r requirements.txt &&     pip3 install --upgrade
      --no-cache-dir . &&     rm -rf ./oscli &&     apt-get remove -y --purge lsb-release
      gnupg apt-transport-https &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Image: python:3-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-slim
