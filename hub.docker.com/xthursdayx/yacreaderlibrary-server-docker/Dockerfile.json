{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Key": "YACR_COMMIT",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"xthursdayx\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Name": "workdir",
          "Path": "git"
        },
        {
          "CmdLine": [
            "echo \"**** install runtime packages ****\" \u0026\u0026  apt-get update \u0026\u0026  apt-get install -y     curl     git     qt5-default     libpoppler-qt5-dev     libpoppler-qt5-1     wget     unzip     libqt5sql5-sqlite     libqt5sql5     sqlite3     libqt5network5     libqt5gui5     libqt5core5a     build-essential \u0026\u0026  echo \"**** install YACReader ****\" \u0026\u0026  if [ -z ${YACR_COMMIT+x} ]; then \tYACR_COMMIT=$(curl -sX GET https://api.github.com/repos/YACReader/yacreader/commits/develop \t| awk '/sha/{print $4;exit}' FS='[\"\"]');  fi \u0026\u0026  git clone -b develop --single-branch https://github.com/YACReader/yacreader.git . \u0026\u0026  git checkout ${YACR_COMMIT} \u0026\u0026  cd compressed_archive/unarr/ \u0026\u0026  wget github.com/selmf/unarr/archive/master.zip \u0026\u0026  unzip master.zip  \u0026\u0026  rm master.zip \u0026\u0026  cd unarr-master/lzmasdk \u0026\u0026  ln -s 7zTypes.h Types.h \u0026\u0026  cd /src/git/YACReaderLibraryServer \u0026\u0026  qmake YACReaderLibraryServer.pro \u0026\u0026  make  \u0026\u0026  make install \u0026\u0026  echo \"**** cleanup ****\" \u0026\u0026  cd / \u0026\u0026  apt-get clean \u0026\u0026  apt-get purge -y git wget build-essential \u0026\u0026  apt-get -y autoremove \u0026\u0026  rm -rf         /src         /var/cache/apt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "YACReaderLibrary.ini",
            "/root/.local/share/YACReader/YACReaderLibrary/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/comics"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "YACReaderLibraryServer",
            "start"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}