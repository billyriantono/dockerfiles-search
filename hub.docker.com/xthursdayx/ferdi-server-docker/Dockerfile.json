{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/alpine:3.10",
      "SourceCode": "FROM lsiobase/alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "lsiobase/alpine:3.10"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Ferdi-server-docker Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"xthursdayx\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "FERDI_RELEASE",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.16.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "S6_BEHAVIOUR_IF_STAGE2_FAILS",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"**** installing build packages ****\" \u0026\u0026   apk add --no-cache    libcap    libstdc++    nano \u0026\u0026   apk add --no-cache --virtual .build-deps    binutils-gold    curl    gnupg    gcc    g++    linux-headers    make    memcached    python \u0026\u0026   echo \"**** downloading keys ****\" \u0026\u0026   for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ; do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;   done \u0026\u0026   echo \"**** installing node ****\" \u0026\u0026   curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \u0026\u0026   curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \u0026\u0026   gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \u0026\u0026   grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \u0026\u0026   tar -xf \"node-v$NODE_VERSION.tar.xz\" \u0026\u0026   cd \"node-v$NODE_VERSION\" \u0026\u0026   ./configure --prefix=/usr \u0026\u0026   make -j$(getconf _NPROCESSORS_ONLN) V= \u0026\u0026   make install \u0026\u0026   apk del .build-deps \u0026\u0026   cd / \u0026\u0026   rm -Rf \"node-v$NODE_VERSION\" \u0026\u0026   rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps-ferdi   curl   gnupg   tar \u0026\u0026   echo \"**** installing npm ****\" \u0026\u0026   npm config set unsafe-perm true \u0026\u0026   npm install -g npm@latest \u0026\u0026   find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf \u0026\u0026   echo \"**** install ferdi server ****\" \u0026\u0026   mkdir -p /ferdi \u0026\u0026   curl -o /ferdi/ferdi.tar.gz -L \"https://github.com/getferdi/server/archive/master.tar.gz\" \u0026\u0026   echo \"**** cleanup ****\" \u0026\u0026   apk del .build-deps-ferdi \u0026\u0026   rm -rf    ${RM_DIRS}    /SHASUMS256.txt    /tmp/*    /var/cache/apk/*    /usr/share/man/*    /usr/share/doc    /root/.node-gyp    /root/.config    /usr/lib/node_modules/npm/man    /usr/lib/node_modules/npm/doc    /usr/lib/node_modules/npm/html    /usr/lib/node_modules/npm/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/database",
            "/app/recipes",
            "/config"
          ]
        }
      ]
    }
  ]
}