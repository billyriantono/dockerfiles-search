MetaArgs:
- DefaultValue: 1.12.7
  Key: GOLANG_VERSION
  ProvidedValue: null
  Value: 1.12.7
- DefaultValue: 3.7.4
  Key: PYTHON_VERSION
  ProvidedValue: null
  Value: 3.7.4
- DefaultValue: "19.3"
  Key: OIC_VERSION
  ProvidedValue: null
  Value: "19.3"
- DefaultValue: 1.1156-vsc1.33.1
  Key: CODE_SERVER_VERSION
  ProvidedValue: null
  Value: 1.1156-vsc1.33.1
Stages:
- As: golang
  BaseName: golang:${GOLANG_VERSION}
  Commands: null
  From:
    Image: golang:${GOLANG_VERSION}
  Name: golang
  Platform: ""
  SourceCode: FROM golang:${GOLANG_VERSION} as golang
- As: code-server
  BaseName: codercom/code-server:${CODE_SERVER_VERSION}
  Commands: null
  From:
    Image: codercom/code-server:${CODE_SERVER_VERSION}
  Name: code-server
  Platform: ""
  SourceCode: FROM codercom/code-server:${CODE_SERVER_VERSION} as code-server
- As: oracle-instant-client
  BaseName: oraclelinux:7-slim
  Commands:
  - Key: OIC_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: OIC_VERSION
      Value: ${OIC_VERSION}
    Name: env
  - CmdLine:
    - "curl -o /etc/yum.repos.d/public-yum-ol7.repo https://yum.oracle.com/public-yum-ol7.repo
      &&      yum-config-manager --enable ol7_oracle_instantclient &&      yum -y
      install \t oracle-instantclient$OIC_VERSION-basic \t oracle-instantclient$OIC_VERSION-devel
      \t oracle-instantclient$OIC_VERSION-sqlplus &&      rm -rf /var/cache/yum"
    Name: run
    PrependShell: true
  From:
    Image: oraclelinux:7-slim
  Name: oracle-instant-client
  Platform: ""
  SourceCode: FROM oraclelinux:7-slim as oracle-instant-client
- As: final
  BaseName: python:${PYTHON_VERSION}
  Commands:
  - Key: OIC_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: OIC_VERSION
      Value: ${OIC_VERSION}
    Name: env
  - Env:
    - Key: TZ
      Value: UTC
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Name: user
    User: root
  - Key: GOLANG_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: GOLANG_VERSION
      Value: ${GOLANG_VERSION}
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc
      \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: golang
    Name: copy
    SourcesAndDest:
    - /usr/local/go
    - /usr/local/go
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/lib/oracle/$OIC_VERSION/client64/lib:/usr/include/oracle/$OIC_VERSION/client64/
    Name: env
  - Env:
    - Key: OCI_LIB
      Value: /usr/lib/oracle/$OIC_VERSION/client64/lib
    Name: env
  - Env:
    - Key: OCI_INC
      Value: /usr/include/oracle/$OIC_VERSION/client64
    Name: env
  - Chown: ""
    From: oracle-instant-client
    Name: copy
    SourcesAndDest:
    - /usr/lib/oracle
    - /usr/lib/oracle
  - Chown: ""
    From: oracle-instant-client
    Name: copy
    SourcesAndDest:
    - /usr/share/oracle
    - /usr/share/oracle
  - Chown: ""
    From: oracle-instant-client
    Name: copy
    SourcesAndDest:
    - /usr/include/oracle
    - /usr/include/oracle
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./oci8.pc
    - /usr/lib/pkgconfig/oci8.pc
  - CmdLine:
    - sed -i 's/OIC_VERSION/'"$OIC_VERSION"'/' /usr/lib/pkgconfig/oci8.pc &&      apt
      update && apt install -y      libaio1      unixodbc      unixodbc-dev      tdsodbc      odbc-postgresql      libsqliteodbc      mariadb-client      curl      net-tools
    Name: run
    PrependShell: true
  - Key: CODE_SERVER_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: CODE_SERVER_VERSION
      Value: ${CODE_SERVER_VERSION}
    Name: env
  - Chown: ""
    From: code-server
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/code-server
    - /usr/local/bin/code-server
  - CmdLine:
    - "apt-get update && apt-get install -y \topenssl \tgit \tlocales \tsudo \tdumb-init
      \tvim \tcurl \twget \tnano"
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - "adduser --gecos '' --disabled-password coder && \techo \"coder ALL=(ALL) NOPASSWD:ALL\"
      >> /etc/sudoers.d/nopasswd"
    Name: run
    PrependShell: true
  - Name: user
    User: coder
  - CmdLine:
    - mkdir -p /home/coder/project
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/coder/project
  - Name: user
    User: root
  - Name: volume
    Volumes:
    - /home/coder/project
  - Name: expose
    Ports:
    - "8443"
  - CmdLine:
    - dumb-init
    - code-server
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:${PYTHON_VERSION}
  Name: final
  Platform: ""
  SourceCode: FROM python:${PYTHON_VERSION} as final
