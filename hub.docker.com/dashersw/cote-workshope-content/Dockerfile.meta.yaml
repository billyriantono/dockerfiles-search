MetaArgs: null
Stages:
- BaseName: nginx:1.13.11-alpine
  Commands:
  - Maintainer: darron1217 <darron1217@gmail.com>
    Name: maintainer
  - Env:
    - Key: php_conf
      Value: /etc/php7/php.ini
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php7/php-fpm.d/www.conf
    Name: env
  - CmdLine:
    - echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
      &&     echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories
      &&     apk update &&     apk add --no-cache bash     openssh-client     wget     nginx     supervisor     curl     git     tzdata     php7-fpm     php7-pdo     php7-pdo_mysql     php7-mysqlnd     php7-mysqli     php7-mcrypt     php7-mbstring     php7-ctype     php7-zlib     php7-gd     php7-exif     php7-intl     php7-sqlite3     php7-pdo_pgsql     php7-pgsql     php7-xml     php7-xmlwriter     php7-xsl     php7-curl     php7-openssl     php7-iconv     php7-json     php7-phar     php7-soap     php7-dom     php7-zip     php7-session     php7-fileinfo     php7-tokenizer     php7-simplexml     php7-imagick     php7-bcmath     python     python-dev     py2-pip     augeas-dev     openssl-dev     ca-certificates     dialog     gcc     musl-dev     nodejs     nodejs-npm     linux-headers     cairo-dev     ttf-droid     ttf-droid-nonlatin     imagemagick     chromium@edge     libffi-dev
      &&    mkdir -p /etc/nginx &&     mkdir -p /var/www/app &&     mkdir -p /run/nginx
      &&     mkdir -p /var/log/supervisor &&     pip install -U pip &&     pip install
      -U certbot &&     mkdir -p /etc/letsencrypt/webrootauth &&     apk del gcc musl-dev
      linux-headers libffi-dev augeas-dev python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache       xfce4 xrdp xvfb xauth       faenza-icon-theme paper-gtk-theme
      paper-icon-theme slim xf86-input-synaptics xf86-input-mouse xf86-input-keyboard       setxkbmap       x11vnc@edge
      &&       echo "setxkbmap dvorak" >> /root/.xinitrc &&       echo "exec startxfce4"
      >> /root/.xinitrc &&       echo root:root | chpasswd &&       xrdp-keygen xrdp
      auto
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/root/
    - /root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/etc/xrdp
    - /etc/xrdp
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - rm -Rf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - mkdir -p /etc/nginx/sites-available/ && mkdir -p /etc/nginx/sites-enabled/ &&
      mkdir -p /etc/nginx/ssl/ && rm -Rf /var/www/* && mkdir /var/www/html/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/sites-available/default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site-ssl.conf
    - /etc/nginx/sites-available/default-ssl.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i         -e "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g"         -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize
      = 100M/g"         -e "s/post_max_size\s*=\s*8M/post_max_size = 100M/g"         -e
      "s/variables_order = \"GPCS\"/variables_order = \"EGPCS\"/g"         ${php_conf}
      &&     sed -i         -e "s/;daemonize\s*=\s*yes/daemonize = no/g"         -e
      "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g"         -e
      "s/pm.max_children = 4/pm.max_children = 4/g"         -e "s/pm.start_servers
      = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g"         -e
      "s/pm.max_requests = 500/pm.max_requests = 200/g"         -e "s/user = nobody/user
      = nginx/g"         -e "s/group = nobody/group = nginx/g"         -e "s/;listen.mode
      = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = nobody/listen.owner
      = nginx/g"         -e "s/;listen.group = nobody/listen.group = nginx/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${fpm_conf} &&     ln -s /etc/php7/php.ini /etc/php7/conf.d/php.ini
      &&     find /etc/php7/conf.d/ -name "*.ini" -exec sed -i -re 's/^(\s*)#(.*)/\1;\2/g'
      {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requests
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x wp-cli.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - mv wp-cli.phar /usr/local/bin/wp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && curl -sS --tlsv1 https://getcomposer.org/installer | php && mv composer.phar
      /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/start.sh
    - /start.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/pull
    - /usr/bin/pull
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/push
    - /usr/bin/push
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/letsencrypt-setup
    - /usr/bin/letsencrypt-setup
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/letsencrypt-renew
    - /usr/bin/letsencrypt-renew
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/docker-hook
    - /usr/bin/docker-hook
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/hook-listener
    - /usr/bin/hook-listener
  - CmdLine:
    - chmod 755 /usr/bin/pull && chmod 755 /usr/bin/push && chmod 755 /usr/bin/letsencrypt-setup
      && chmod 755 /usr/bin/letsencrypt-renew && chmod 755 /start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/bin/docker-hook
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/bin/hook-listener
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src/
    - /var/www/html/
  - Env:
    - Key: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
      Value: "true"
    Name: env
  - CmdLine:
    - sed -i "s#/var/cache/nginx:/sbin/nologin#/var/cache/nginx:/bin/sh#g" /etc/passwd
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3389"
    - "443"
    - "80"
    - "8555"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:1.13.11-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:1.13.11-alpine
