{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "acarrusca/register-go",
      "SourceCode": "FROM acarrusca/register-go",
      "Platform": "",
      "From": {
        "Image": "acarrusca/register-go"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "rabbitmq:alpine",
      "SourceCode": "FROM rabbitmq:alpine",
      "Platform": "",
      "From": {
        "Image": "rabbitmq:alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GLIBC_REPO",
              "Value": "https://github.com/sgerrand/alpine-pkg-glibc"
            },
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.27-r0"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk -U upgrade \u0026\u0026     apk add libstdc++ curl ca-certificates bash \u0026\u0026     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done \u0026\u0026     apk add --allow-untrusted /tmp/*.apk \u0026\u0026     rm -v /tmp/*.apk \u0026\u0026     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) \u0026\u0026     echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \u0026\u0026     apk del curl glibc-i18n \u0026\u0026     rm -rf /tmp/* /var/cache/apk/* \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/register",
            "./register"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-init.sh",
            "./docker-init.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod",
            "+x",
            "docker-init.sh"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "./docker-init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "127.0.0.1:8761",
            "5672",
            "5672",
            "127.0.0.1"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}