MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: toshi <toshi@toshi.click>
    Name: maintainer
  - Env:
    - Key: HTTPD_VERSION
      Value: 2.4.33
    - Key: APR_VERSION
      Value: 1.6.3
    - Key: APR_UTIL_VERSION
      Value: 1.6.1
    - Key: PHP_VERSION
      Value: 7.2.3
    Name: env
  - CmdLine:
    - echo "include_only=.jp" >> /etc/yum/pluginconf.d/fastestmirror.conf &&     yum
      -q clean all &&     yum -y -q install epel-release &&     yum -y -q update &&     rm
      -f /etc/rpm/macros.image-language-conf &&     sed -i '/^override_install_langs=/d'
      /etc/yum.conf &&     yum reinstall -y -q glibc-common &&     yum -y -q groupinstall
      "Development Tools" &&     yum install -y -q vim kbd ibus-kkc vlgothic-* &&     yum
      -q clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"ja_JP.UTF-8"'
    - Key: LANGUAGE
      Value: '"ja_JP:ja"'
    - Key: LC_ALL
      Value: '"ja_JP.UTF-8"'
    Name: env
  - CmdLine:
    - localedef -f UTF-8 -i ja_JP ja_JP.UTF-8 &&     echo 'LANG="ja_JP.UTF-8"' >  /etc/locale.conf
      &&     echo 'ZONE="Asia/Tokyo"' > /etc/sysconfig/clock &&     unlink /etc/localtime
      &&     ln -s /usr/share/zoneinfo/Japan /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y -q pcre     pcre-devel     make     openssl     openssl-devel     wget     git     expat-devel     re2c     php-devel     zip     unzip     libxml2     libxml2-devel     openssl     openssl-devel     libjpeg     libjpeg-devel     libpng     libpng-devel     curl     curl-devel     libmcrypt     libmcrypt-devel     libjpeg-devel     libpng10-devel     libXpm-devel     freetype     freetype-devel     php-pgsql     postgresql-devel     php-mysql     mariadb-server     gcc
      &&     yum -q clean all &&     mkdir -p /usr/local/src/apache
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/src/apache
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - httpd-${HTTPD_VERSION}.tar.gz
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apr-util-${APR_UTIL_VERSION}.tar.gz
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apr-${APR_VERSION}.tar.gz
    - ./
  - CmdLine:
    - wget -nv -q http://ftp.tsukuba.wide.ad.jp/software/apache//httpd/httpd-${HTTPD_VERSION}.tar.gz
      &&     wget -nv -q http://ftp.riken.jp/net/apache//apr/apr-${APR_VERSION}.tar.gz
      &&     wget -nv -q http://ftp.riken.jp/net/apache//apr/apr-util-${APR_UTIL_VERSION}.tar.gz
      &&     tar xzf httpd-${HTTPD_VERSION}.tar.gz &&     rm -fr httpd-${HTTPD_VERSION}.tar.gz
      &&     tar xzf apr-${APR_VERSION}.tar.gz &&     rm -fr apr-${APR_VERSION}.tar.gz
      &&     tar xzf apr-util-${APR_UTIL_VERSION}.tar.gz &&     rm -fr apr-util-${APR_UTIL_VERSION}.tar.gz
      &&     mkdir -p /usr/local/httpd
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/src/apache/apr-${APR_VERSION}
  - CmdLine:
    - ./configure     --silent     --prefix=/usr/local/apr-${APR_VERSION} &&     make
      --silent &&     make install --silent &&     rm -fr /usr/local/src/apache/apr-${APR_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/src/apache/apr-util-${APR_UTIL_VERSION}
  - CmdLine:
    - ./configure     --silent     --prefix=/usr/local/apr-util-${APR_UTIL_VERSION}     --with-apr=/usr/local/apr-${APR_VERSION}
      &&     make --silent &&     make install --silent &&     rm -fr /usr/local/src/apache/apr-util-${APR_UTIL_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/src/apache/httpd-${HTTPD_VERSION}/
  - CmdLine:
    - ./configure     --silent     --prefix=/usr/local/httpd     --with-apr=/usr/local/apr-${APR_VERSION}     --with-apr-util=/usr/local/apr-util-${APR_UTIL_VERSION}     --enable-so     --enable-proxy     --enable-rewrite     --with-mpm=prefork     --enable-ssl
      &&     make --silent &&     make install --silent &&     echo "application/x-httpd-php
      php html" >> /usr/local/httpd/conf/mime.types &&     chown -R apache:dev /usr/local/apr-${APR_VERSION}
      &&     chown -R apache:dev /usr/local/apr-util-${APR_UTIL_VERSION} &&     chown
      -R apache:dev /usr/local/httpd &&     rm -fr /usr/local/src/apache/httpd-${HTTPD_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/src/
  - CmdLine:
    - wget -nv -q -O php-${PHP_VERSION}.tar.gz http://jp2.php.net/get/php-${PHP_VERSION}.tar.gz/from/this/mirror
      &&     tar xzf php-${PHP_VERSION}.tar.gz &&     rm -fr php-${PHP_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/src/php-${PHP_VERSION}
  - CmdLine:
    - ./configure     --silent     --with-apxs2=/usr/local/httpd/bin/apxs     --with-pgsql=/usr/local/pgsql     --with-mysqli=mysqlnd     --enable-sockets     --enable-mbstring     --enable-mbregex     --enable-cli     --with-zlib     --with-gd     --with-jpeg-dir=/usr/local/src/php-${PHP_VERSION}/ext/gd/libgd     --with-png-dir=/usr/local/src/php-${PHP_VERSION}/ext/gd/libgd     --with-libxml-dir=/usr/local/libxml2     --with-openssl     --with-freetype-dir=/usr/local/freetype-2     --with-xpm-dir     --enable-gd-native-ttf     --enable-gd-jis-conv     --with-curl     --with-libdir=lib64     --enable-exif
      &&     make --silent &&     make install --silent &&     pecl install --nocompress
      mailparse &&     pecl install redis &&     rm -fr /usr/local/src/php-${PHP_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/httpd/bin
  - Chown: ""
    Name: add
    SourcesAndDest:
    - httpd.conf
    - /usr/local/httpd/conf/httpd.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - httpd-vhosts.conf
    - /usr/local/httpd/conf/extra/httpd-vhosts.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - php.ini
    - /usr/local/lib/php.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run
    - /usr/local/bin/run
  - CmdLine:
    - chmod +x /usr/local/bin/run
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /usr/local/bin/run
    Name: entrypoint
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
