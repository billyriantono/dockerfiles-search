MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Name: workdir
    Path: /alexa
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
      ; echo "http://dl-cdn.alpinelinux.org/alpine/v3.9/community" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add bash git build-base cmake make openssl gstreamer-dev gst-plugins-base-dev
      gst-plugins-good gst-plugins-bad gst-plugins-ugly sqlite-dev alsa-lib-dev curl-dev
      python perl portaudio-dev bluez-alsa nodejs npm asio-dev=1.12.2-r0
    Name: run
    PrependShell: true
  - CmdLine:
    - cd source ; git clone --depth 1 https://github.com/aanon4/avs-device-sdk.git
      ; git clone --depth 1 https://github.com/aanon4/alexa-smart-screen-sdk.git ;
      git clone --depth 1 https://github.com/alexa/apl-core-library.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd third-party ; git clone --depth 1 https://github.com/xianyi/OpenBLAS.git
      ; git clone --depth 1 https://github.com/Kitt-AI/snowboy.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd third-party/OpenBLAS ; make -j4 ONLY_CBLAS=1 NOFORTRAN=1 NO_LAPACK=1 NUM_THREADS=4
      ; ls -al ; make NUM_THREADS=4 install
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd source/sdk-build ; cmake ../avs-device-sdk \t-DGSTREAMER_MEDIA_PLAYER=ON
      \t-DPORTAUDIO=ON \t-DPORTAUDIO_LIB_PATH=/usr/lib/libportaudio.so \t-DPORTAUDIO_INCLUDE_DIR=/usr/include
      \t-DKITTAI_KEY_WORD_DETECTOR=ON \t-DKITTAI_KEY_WORD_DETECTOR_LIB_PATH=/alexa/third-party/snowboy/lib/ubuntu64/libsnowboy-detect.a
      \t-DKITTAI_KEY_WORD_DETECTOR_INCLUDE_DIR=/alexa/third-party/snowboy/include
      \t-DBUILD_TESTING=NO -DBUILD_GMOCK=NO \t-DACSDK_EMIT_SENSITIVE_LOGS=ON \t-DCMAKE_BUILD_TYPE=DEBUG
      \t-DCMAKE_INSTALL_PREFIX=/alexa/install ; make -j4 ; make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd source/apl-build ; cmake ../apl-core-library ; make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd source/ss-build; cmake ../alexa-smart-screen-sdk \t-DCMAKE_PREFIX_PATH=/alexa/install
      \t-DWEBSOCKETPP_INCLUDE_DIR=/alexa/third-party/websocketpp-0.8.1 \t-DDISABLE_WEBSOCKET_SSL=ON
      \t-DGSTREAMER_MEDIA_PLAYER=ON \t-DPORTAUDIO=ON -DPORTAUDIO_LIB_PATH=/usr/lib/libportaudio.so
      \t-DPORTAUDIO_INCLUDE_DIR=/usr/include \t-DAPL_CORE=ON \t-DAPLCORE_INCLUDE_DIR=/alexa/source/apl-core-library/aplcore/include
      \t-DAPLCORE_LIB_DIR=/alexa/source/apl-build/aplcore \t-DYOGA_INCLUDE_DIR=/alexa/source/apl-build/yoga-prefix/src/yoga
      \t-DYOGA_LIB_DIR=/alexa/source/apl-build/lib \t-DKITTAI_KEY_WORD_DETECTOR=ON
      \t-DKITTAI_KEY_WORD_DETECTOR_LIB_PATH=/alexa/third-party/snowboy/lib/ubuntu64/libsnowboy-detect.a
      \t-DKITTAI_KEY_WORD_DETECTOR_INCLUDE_DIR=/alexa/third-party/snowboy/include
      \t-DACSDK_EMIT_SENSITIVE_LOGS=ON \t-DBUILD_TESTING=NO -DBUILD_GMOCK=NO \t-DCMAKE_BUILD_TYPE=DEBUG
      ; make -j4"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp third-party/snowboy/resources/alexa/alexa_02092017.umdl third-party/snowboy/resources/alexa.umdl
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 8933/tcp
  - Name: volume
    Volumes:
    - /alexa/database
  - Name: volume
    Volumes:
    - /alexa/GUI
  - Name: volume
    Volumes:
    - /alexa/config
  - Name: volume
    Volumes:
    - /dev/snd
  - CmdLine:
    - /alexa/run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
