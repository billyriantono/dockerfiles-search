{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf \t\tre2c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .persistent-deps \t\tnginx \t\tca-certificates \t\tbash \t\tsed \t\tcurl \t\ttar \t\txz \t\tgit \t\tlibressl \t\topenssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 adduser -u 82 -D -h /DATA -S -G www-data www-data -s /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; \t[ ! -d /var/www/html ]; \tmkdir -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"$PHP_CFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.2.25"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_URL",
              "Value": "\"https://secure.php.net/get/php-7.2.25.tar.xz/from/this/mirror\""
            },
            {
              "Key": "PHP_ASC_URL",
              "Value": "\"https://secure.php.net/get/php-7.2.25.tar.xz.asc/from/this/mirror\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_SHA256",
              "Value": "\"746efeedc38e6ff7b1ec1432440f5fa801537adf6cd21e4afb3f040e5b0760a9\""
            },
            {
              "Key": "PHP_MD5",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t\twget \t\topenssl \t; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\"; \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\tcommand -v gpgconf \u003e /dev/null \u0026\u0026 gpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network .fetch-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/docker-php-source",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -eux; \tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS                 argon2-dev \t\tcoreutils \t\tcurl-dev \t\tlibedit-dev \t\tlibressl-dev \t\tlibsodium-dev \t\tlibxml2-dev \t\tsqlite-dev \t\tlibpng-dev \t\tlibjpeg-turbo-dev \t; \texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--enable-option-checking=fatal \t\t\t\t--with-mhash \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t--with-password-argon2 \t\t--with-sodium=shared                 --with-pdo-sqlite=/usr \t\t--with-sqlite3=/usr \t\t--enable-zip \t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t--with-mysqli \t\t--with-pdo-mysql \t\t--with-gd \t\t--with-png-dir \t\t--with-jpeg-dir \t\t--enable-opcache \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-gnu' \u0026\u0026 echo '--without-pcre-jit') \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t; \tmake -j \"$(nproc)\";         find -type f -name '*.a' -delete; \tmake install; \tfind /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; \tmake clean; \t\tcp -v php.ini-* \"$PHP_INI_DIR/\"; \t\tcd /; \tdocker-php-source delete; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps; \t\tapk del --no-network .build-deps; \t\tpecl update-channels; \trm -rf /tmp/pear ~/.pearrc; \tphp --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Riga"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache tzdata; \tcp /usr/share/zoneinfo/$TZ /etc/localtime; \techo \"$TZ\" \u003e\u003e /etc/timezone; \techo \"$TZ\" \u003e\u003e /etc/TZ; \tdate; \tapk del tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/docker-php-ext-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-php-ext-enable sodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "\"xterm\""
            },
            {
              "Key": "PAGER",
              "Value": "\"more\""
            },
            {
              "Key": "DB_HOST",
              "Value": "\"mysql\""
            },
            {
              "Key": "DB_NAME",
              "Value": "\"\""
            },
            {
              "Key": "DB_USER",
              "Value": "\"\""
            },
            {
              "Key": "DB_PASS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/DATA/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux; \tcd /usr/local/etc; \tif [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf \u003e /dev/null; \t\tcp php-fpm.d/www.conf.default php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf'; \t\t} | tee php-fpm.conf; \tfi; \t{ \t\techo '[global]'; \t\techo 'error_log = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2'; \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout and stderr are sent to the main error log.'; \t\techo 'catch_workers_output = yes'; \t} | tee php-fpm.d/docker.conf; \t{ \t\techo '[global]'; \t\techo 'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = 9000'; \t} | tee php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/php-fpm.conf",
            "/usr/local/etc/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/run.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \u0026\u0026 chmod +x wp-cli.phar \u0026\u0026 mv wp-cli.phar /usr/bin/wp-cli \u0026\u0026 chown www-data:www-data /usr/bin/wp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/DATA"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}