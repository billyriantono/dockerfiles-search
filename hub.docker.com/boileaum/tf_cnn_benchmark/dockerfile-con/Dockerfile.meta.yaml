MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Name: expose
    Ports:
    - "22222"
    - "8080"
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: BUILD_VERSION
    Name: arg
    Value: null
  - Key: TOMCAT_VERSION
    Name: arg
    Value: null
  - Key: JOLOKIA_VERSION
    Name: arg
    Value: null
  - Key: HAWTIO_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: TERM
      Value: xterm
    - Key: APACHE_MIRROR
      Value: archive.apache.org
    - Key: CATALINA_HOME
      Value: /opt/tomcat
    - Key: OPENJDK_VERSION
      Value: '"8.151.12"'
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/default-jvm
    - Key: PATH
      Value: ${PATH}:/opt/jdk/bin:${CATALINA_HOME}/bin
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Labels:
    - Key: version
      Value: ${BUILD_VERSION}
    - Key: maintainer
      Value: '"Bodo Schulz <bodo@boone-schulz.de>"'
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    - Key: org.label-schema.name
      Value: '"Jolokia Docker Image"'
    - Key: org.label-schema.description
      Value: '"Inofficial Jolokia Docker Image"'
    - Key: org.label-schema.url
      Value: '"https://jolokia.org"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/bodsch/docker-jolokia"'
    - Key: org.label-schema.vendor
      Value: '"Bodo Schulz"'
    - Key: org.label-schema.version
      Value: $JOLOKIA_VERSION
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: com.microscaling.license
      Value: '"GNU General Public License v3.0"'
    Name: label
  - CmdLine:
    - 'apk update --quiet --no-cache &&   apk upgrade --quiet --no-cache &&   apk
      add --quiet --no-cache     curl     openjdk8-jre-base     tomcat-native &&   echo
      "export LANG=${LANG}" > /etc/profile.d/locale.sh &&   echo ''hosts: files mdns4_minimal
      [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf &&   sed -i ''s,#networkaddress.cache.ttl=-1,networkaddress.cache.ttl=30,''
      ${JAVA_HOME}/jre/lib/security/java.security &&   mkdir /opt &&   echo "download
      tomcat version $TOMCAT_VERSION (https://$APACHE_MIRROR/dist/tomcat/tomcat-9)"
      &&   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     https://$APACHE_MIRROR/dist/tomcat/tomcat-9/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     |
      gunzip     | tar x -C /opt/ &&   ln -s /opt/apache-tomcat-$TOMCAT_VERSION ${CATALINA_HOME}
      &&   ln -s ${CATALINA_HOME}/logs /var/log/jolokia &&   rm -rf ${CATALINA_HOME}/webapps/*
      &&   echo "download jolokia version $JOLOKIA_VERSION (https://repo1.maven.org/maven2/org/jolokia/jolokia-war)"
      &&   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     --output
      ${CATALINA_HOME}/webapps/jolokia.war   https://repo1.maven.org/maven2/org/jolokia/jolokia-war/$JOLOKIA_VERSION/jolokia-war-$JOLOKIA_VERSION.war
      &&   echo "download hawtio version $HAWTIO_VERSION (https://github.com/hawtio/hawtio/tags)"
      &&   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     --output
      ${CATALINA_HOME}/webapps/hawtio.war     https://oss.sonatype.org/content/repositories/public/io/hawt/hawtio-default/$HAWTIO_VERSION/hawtio-default-$HAWTIO_VERSION.war
      &&   cd ${CATALINA_HOME}/webapps/ &&   mkdir     jolokia hawtio &&   unzip jolokia.war
      -d jolokia > /dev/null &&   unzip hawtio.war -d hawtio > /dev/null &&   rm -f
      *.war &&   rm -f ${CATALINA_HOME}/LICENSE &&   rm -f ${CATALINA_HOME}/NOTICE
      &&   rm -f ${CATALINA_HOME}/RELEASE-NOTES &&   rm -f ${CATALINA_HOME}/RUNNING.txt
      &&   rm -f ${CATALINA_HOME}/bin/*.bat &&   rm -rf     /tmp/*     /var/cache/apk/*'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${CATALINA_HOME}/webapps/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - Health:
      Interval: 5000000000
      Retries: 12
      Test:
      - CMD-SHELL
      - curl --silent --fail http://localhost:8080/jolokia || exit 1
      Timeout: 2000000000
    Name: healthcheck
  - CmdLine:
    - /init/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
