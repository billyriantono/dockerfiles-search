MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Key: GIT_COMMIT
    Name: arg
    Value: master
  - Key: GH_PR
    Name: arg
    Value: null
  - Key: GH_SLUG
    Name: arg
    Value: pocl/pocl
  - Key: LLVM_VERSION
    Name: arg
    Value: "6.0"
  - Labels:
    - Key: maintainer
      Value: '"Matthieu Boileau <matthieu.boileau@math.unistra.fr>"'
    Name: label
  - Labels:
    - Key: git-commit
      Value: $GIT_COMMIT
    - Key: vendor
      Value: pocl
    - Key: distro
      Value: Ubuntu
    - Key: version
      Value: "1.0"
    Name: label
  - Name: user
    User: root
  - Env:
    - Key: TERM
      Value: dumb
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get -yq dist-upgrade &&     apt-get install -y software-properties-common
      wget &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-${LLVM_VERSION}
      main" && apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt install -y build-essential                    cmake                    git                    pkg-config                    libclang-${LLVM_VERSION}-dev                    clang-${LLVM_VERSION}                    llvm-${LLVM_VERSION}                    make                    ninja-build                    ocl-icd-libopencl1                    ocl-icd-dev                    ocl-icd-opencl-dev                    python3-pip                    libhwloc-dev                    zlib1g                    zlib1g-dev                    clinfo                    dialog                    apt-utils
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home &&     git clone https://github.com/$GH_SLUG.git &&     cd /home/pocl
      &&     git checkout $GIT_COMMIT &&     test -z "$GH_PR" || (git fetch origin
      +refs/pull/$GH_PR/merge && git checkout -qf FETCH_HEAD) &&     mkdir build &&     cd
      build &&     cmake -G Ninja -DWITH_LLVM_CONFIG=/usr/bin/llvm-config-${LLVM_VERSION}
      -DCMAKE_INSTALL_PREFIX=/usr .. &&     ninja install &&     cd .. &&     rm -rf
      build
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /tmp
  - CmdLine:
    - pip3 install --no-cache-dir -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
