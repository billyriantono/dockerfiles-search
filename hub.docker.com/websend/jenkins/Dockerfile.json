{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "thedutchselection/java:8",
      "SourceCode": "FROM thedutchselection/java:8",
      "Platform": "",
      "From": {
        "Image": "thedutchselection/java:8"
      },
      "Commands": [
        {
          "Maintainer": "Ilja Krijger \u003cilja@quittheprogram.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd --gid 900 --system docker \u0026\u0026   useradd -g docker -m -u 900 docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -yq apt-transport-https \u0026\u0026   echo \"deb http://http.debian.net/debian jessie-backports main\" \u003e /etc/apt/sources.list.d/backports.list \u0026\u0026   apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \u0026\u0026   echo \"deb https://apt.dockerproject.org/repo debian-jessie main\" \u003e /etc/apt/sources.list.d/docker.list \u0026\u0026   apt-get update \u0026\u0026   apt-get install -yq curl \u0026\u0026   apt-get install -yq redis-tools \u0026\u0026   apt-get install -yq docker-engine=1.10.3-0~jessie \u0026\u0026   apt-get install -yq zlib1g-dev \u0026\u0026   apt-get install -yq libssl-dev \u0026\u0026   apt-get install -yq libreadline6-dev \u0026\u0026   apt-get install -yq libyaml-dev \u0026\u0026   apt-get install -yq libffi-dev \u0026\u0026   apt-get install -yq libmysqlclient-dev \u0026\u0026   apt-get install -yq libsqlite3-dev \u0026\u0026   apt-get install -yq sqlite3 \u0026\u0026   apt-get install -yq libfreetype6 \u0026\u0026   apt-get install -yq libfontconfig1 \u0026\u0026   apt-get install -yq libjpeg-dev \u0026\u0026   apt-get install -yq libcurl4-openssl-dev \u0026\u0026   apt-get install -yq libxml2-dev \u0026\u0026   apt-get install -yq libxslt1-dev \u0026\u0026   apt-get install -yq qt5-default \u0026\u0026   apt-get install -yq libqt5webkit5-dev \u0026\u0026   apt-get install -yq imagemagick \u0026\u0026   apt-get install -yq mariadb-client \u0026\u0026   apt-get install -yq xfonts-base \u0026\u0026   apt-get install -yq xfonts-75dpi \u0026\u0026   apt-get install -yq xvfb \u0026\u0026   apt-get install -yq chromedriver \u0026\u0026   curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026   apt-get install -yq nodejs \u0026\u0026   curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026   echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026   apt-get update \u0026\u0026   apt-get install -yq yarn \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026   ln -snf /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/scripts/chruby.sh",
            "/etc/profile.d/chruby.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/scripts",
            "/usr/local/bin"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/jenkins \u0026\u0026   curl -sL -o /opt/jenkins/jenkins.war http://mirrors.jenkins-ci.org/war-stable/2.107.3/jenkins.war"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL -o /tmp/chruby-0.3.9.tar.gz https://github.com/postmodern/chruby/archive/v0.3.9.tar.gz \u0026\u0026   tar -xzvf chruby-0.3.9.tar.gz \u0026\u0026   cd chruby-0.3.9/ \u0026\u0026   make install \u0026\u0026   cd /tmp \u0026\u0026   rm -rf chruby-0.3.9 \u0026\u0026   rm -f chruby-0.3.9.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL -o /tmp/phantomjs-2.1.1-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 \u0026\u0026   tar -xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 --directory /usr/local/share \u0026\u0026   rm phantomjs-2.1.1-linux-x86_64.tar.bz2 \u0026\u0026   ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs \u0026\u0026   ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL -o /tmp/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz https://downloads.wkhtmltopdf.org/0.12/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \u0026\u0026   tar -xJf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \u0026\u0026   mv wkhtmltox/bin/* /usr/local/bin \u0026\u0026   rm wkhtmltox-0.12.4_linux-generic-amd64.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL -o /tmp/parallel-20150922.tar.bz2 http://ftpmirror.gnu.org/parallel/parallel-20150922.tar.bz2 \u0026\u0026   bzip2 -dc parallel-20150922.tar.bz2 | tar xvf - \u0026\u0026   cd parallel-20150922 \u0026\u0026   ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   mkdir -p ~/.parallel \u0026\u0026   touch ~/.parallel/will-cite \u0026\u0026   cd /tmp \u0026\u0026   rm -rf parallel-20150922"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL -o /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/1.17.1/docker-compose-Linux-x86_64 \u0026\u0026   chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL -o /tmp/ruby-2.2.2.tar.gz http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.2.tar.gz \u0026\u0026   curl -sL -o /tmp/ruby-2.3.3.tar.gz http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.3.tar.gz \u0026\u0026   curl -sL -o /tmp/ruby-2.4.0.tar.gz http://cache.ruby-lang.org/pub/ruby/2.4/ruby-2.4.0.tar.gz \u0026\u0026   tar -xzf ruby-2.2.2.tar.gz \u0026\u0026   cd ruby-2.2.2 \u0026\u0026   ./configure --prefix=/opt/rubies/ruby-2.2.2 --with-readline-dir=/usr/lib/x86_64-linux-gnu \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   cd /tmp \u0026\u0026   rm -rf ruby-2.2.2 \u0026\u0026   rm -f ruby-2.2.2.tar.gz \u0026\u0026   tar -xzf ruby-2.3.3.tar.gz \u0026\u0026   cd ruby-2.3.3 \u0026\u0026   ./configure --prefix=/opt/rubies/ruby-2.3.3 --with-readline-dir=/usr/lib/x86_64-linux-gnu \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   cd /tmp \u0026\u0026   rm -rf ruby-2.3.3 \u0026\u0026   rm -f ruby-2.3.3.tar.gz \u0026\u0026   tar -xzf ruby-2.4.0.tar.gz \u0026\u0026   cd ruby-2.4.0 \u0026\u0026   ./configure --prefix=/opt/rubies/ruby-2.4.0 --with-readline-dir=/usr/lib/x86_64-linux-gnu \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   cd /tmp \u0026\u0026   rm -rf ruby-2.4.0 \u0026\u0026   rm -f ruby-2.4.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". /usr/local/share/chruby/chruby.sh \u0026\u0026   chruby 2.2.2 \u0026\u0026   gem install bundler --no-ri --no-rdoc \u0026\u0026   bundle config --global jobs $(cat /proc/cpuinfo | grep -c processor) \u0026\u0026   chruby 2.3.3 \u0026\u0026   gem install -N bundler \u0026\u0026   bundle config --global jobs $(cat /proc/cpuinfo | grep -c processor) \u0026\u0026   chruby 2.4.0 \u0026\u0026   gem install -N bundler \u0026\u0026   bundle config --global jobs $(cat /proc/cpuinfo | grep -c processor) \u0026\u0026   echo 'gem: --no-document' \u003e\u003e ~/.gemrc \u0026\u0026   cp ~/.gemrc /etc/gemrc \u0026\u0026   chmod uog+r /etc/gemrc \u0026\u0026   useradd -m -u 8080 jenkins \u0026\u0026   usermod -a -G docker jenkins \u0026\u0026   usermod -a -G staff jenkins \u0026\u0026   chmod +x /usr/local/bin/run.sh \u0026\u0026   chown -R jenkins:jenkins /usr/local/bin/* \u0026\u0026   chown -R jenkins:jenkins /opt/jenkins/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -yq liblua5.1-0-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/usr/local/bin/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}