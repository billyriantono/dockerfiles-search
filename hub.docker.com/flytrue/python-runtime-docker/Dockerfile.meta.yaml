MetaArgs: null
Stages:
- BaseName: scratch
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - alpine3.8.tar.gz
    - /
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  - Env:
    - Key: RELEASE
      Value: '"v3.8"'
    Name: env
  - Env:
    - Key: MIRROR
      Value: '"http://dl-cdn.alpinelinux.org/alpine"'
    Name: env
  - Env:
    - Key: PACKAGES
      Value: '"alpine-baselayout,busybox,alpine-keys,apk-tools,libc-utils"'
    Name: env
  - Env:
    - Key: TAGS
      Value: (alpine:3.8)
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.6
    Name: env
  - CmdLine:
    - "set -ex     && apk add --no-cache --virtual .fetch-deps \tgnupg \tlibressl
      \ttar \txz         && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \    && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \    && export GNUPGHOME=\"$(mktemp -d)\"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\"     && gpg --batch --verify python.tar.xz.asc python.tar.xz
      \    && rm -rf \"$GNUPGHOME\" python.tar.xz.asc     && mkdir -p /usr/src/python
      \    && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz     &&
      rm python.tar.xz         && apk add --no-cache --virtual .build-deps  \tbzip2-dev
      \tcoreutils \tdpkg-dev dpkg \texpat-dev \tgcc \tgdbm-dev \tlibc-dev \tlibffi-dev
      \tlibnsl-dev \tlibressl \tlibressl-dev \tlibtirpc-dev \tlinux-headers \tmake
      \tncurses-dev \tpax-utils \treadline-dev \tsqlite-dev \ttcl-dev \ttk \ttk-dev
      \txz-dev \tzlib-dev     && apk del .fetch-deps         && cd /usr/src/python
      \    && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"     && ./configure
      \t--build=\"$gnuArch\" \t--enable-loadable-sqlite-extensions \t--enable-shared
      \t--with-system-expat \t--with-system-ffi \t--without-ensurepip     && make
      -j \"$(nproc)\" \tEXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\"     && make
      install         && runDeps=\"$( \tscanelf --needed --nobanner --format '%n#p'
      --recursive /usr/local \t    | tr ',' '\\n' \t    | sort -u \t    | awk 'system(\"[
      -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     )\"
      \    && apk add --virtual .python-rundeps $runDeps     && apk del .build-deps
      \        && find /usr/local -depth \t\\( \t    \\( -type d -a \\( -name test
      -o -name tests \\) \\) \t    -o \t    \\( -type f -a \\( -name '*.pyc' -o -name
      '*.pyo' \\) \\) \t\\) -exec rm -rf '{}' +     && rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin     && ln -s idle3 idle     && ln -s pydoc3 pydoc     && ln
      -s python3 python     && ln -s python3-config python-config
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 10.0.1
    Name: env
  - CmdLine:
    - "set -ex;         apk add --no-cache --virtual .fetch-deps libressl;         wget
      -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';         apk del .fetch-deps;
      \        python get-pip.py \t--disable-pip-version-check \t--no-cache-dir \t\"pip==$PYTHON_PIP_VERSION\"
      \    ;     pip --version;         find /usr/local -depth \t\\( \t    \\( -type
      d -a \\( -name test -o -name tests \\) \\) \t    -o \t    \\( -type f -a \\(
      -name '*.pyc' -o -name '*.pyo' \\) \\) \t\\) -exec rm -rf '{}' +;     rm -f
      get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps                  gfortran                 build-base                 openblas-dev                 bzip2-dev                 coreutils                 dpkg-dev
      dpkg                 expat-dev                 gcc                 gdbm-dev                 libc-dev                 libffi-dev                 libnsl-dev                 libressl                 libressl-dev                 libtirpc-dev                 linux-headers                 make                 ncurses-dev                 pax-utils                 readline-dev                 sqlite-dev                 tcl-dev                 tk                 tk-dev                 xz-dev                 zlib-dev                 libxml2-dev                 libxslt-dev                 musl-dev                 libgcc                 curl                 jpeg-dev                 zlib-dev                 freetype-dev                 lcms2-dev                 openjpeg-dev                 tiff-dev                 tk-dev                 tcl-dev         &&
      ln -s /usr/include/locale.h /usr/include/xlocale.h         && pip install cython
      tornado websocket-client pytest numpy pandas scipy bokeh pillow         && apk
      del .build-deps         && apk add --no-cache  libstdc++ openblas zlib jpeg
      openjpeg tiff tk tcl musl libxml2 libxslt xz zlib libstdc++ openblas         &&
      pip list
    Name: run
    PrependShell: true
  - CmdLine:
    - python3
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
