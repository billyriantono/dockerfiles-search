MetaArgs: null
Stages:
- BaseName: php:alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Dmitrii Afanasev <dimarzio1986@gmail.com>"'
    Name: label
  - CmdLine:
    - apk update && apk upgrade && apk add bash
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache libpq freetds freetype icu libintl libldap libjpeg libmcrypt
      libpng libwebp \tpostgresql-dev curl-dev freetds-dev freetype-dev gettext-dev
      icu-dev jpeg-dev libmcrypt-dev \tlibpng-dev libwebp-dev libxml2-dev openldap-dev
      \t&& docker-php-ext-configure gd --with-jpeg-dir=usr/ --with-freetype-dir=usr/
      --with-webp-dir=usr/ \t&& docker-php-ext-configure ldap --with-libdir=lib/ \t&&
      docker-php-ext-configure pdo_dblib --with-libdir=lib/ \t&& /usr/local/bin/pecl
      download mongodb \t&& tar -C /usr/src/php/ext -xf mongo*.tgz \t&& rm mongo*.tgz
      \t&& mv /usr/src/php/ext/mongo* /usr/src/php/ext/mongodb \t&& docker-php-ext-install
      curl exif gd gettext intl ldap mongodb pdo_dblib pdo_mysql pdo_pgsql xmlrpc
      zip \t&& php -r \"readfile('https://getcomposer.org/installer');\" | php \t&&
      mv composer.phar /usr/bin/composer \t&& chmod +x /usr/bin/composer \t&& apk
      del curl-dev freetds-dev freetype-dev gettext-dev icu-dev jpeg-dev libmcrypt-dev
      \t  libpng-dev libwebp-dev libxml2-dev openldap-dev postgresql-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "export NODE_VERSION=10.4.1 \t&& apk add --no-cache curl git make gcc g++ python
      linux-headers paxctl gnupg libgcc libstdc++   && cd /tmp || exit 1   && curl
      -o node-v${NODE_VERSION}.tar.xz -sSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.xz
      \  && xz -d node-v${NODE_VERSION}.tar.xz \t&& tar -xf node-v${NODE_VERSION}.tar
      \t&& cd node-v${NODE_VERSION} || exit 1 \t&& export GYP_DEFINES=\"linux_use_gold_flags=0\"
      \t&& ./configure --prefix=/usr ${CONFIG_FLAGS} \t&& NPROC=$(grep -c ^processor
      /proc/cpuinfo 2>/dev/null || 1) \t&& make -j${NPROC} -C out mksnapshot BUILDTYPE=Release
      \t&& paxctl -cm out/Release/mksnapshot \t&& make -j${NPROC} \t&& make install
      \t&& paxctl -cm /usr/bin/node \t&& cd / || exit 1   && git config --global http.sslverify
      \"false\"   && git clone https://github.com/sass/sassc /sassc   && cd /sassc
      \  && git clone https://github.com/sass/libsass   && SASS_LIBSASS_PATH=/sassc/libsass
      make \t&& mv /sassc/bin/sassc /usr/bin/sass \t&& if [ -x /usr/bin/npm ]; then
      npm install -g npm@${NPM_VERSION}; find /usr/lib/node_modules/npm -name test
      -o -name .bin -type d | xargs rm -rf; fi \t&& rm -rf /etc/ssl /node-${VERSION}.tar.gz
      /SHASUMS256.txt.asc /node-${VERSION}     /usr/share/man /tmp/* /root/.npm /root/.node-gyp
      /root/.gnupg     /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc
      /usr/lib/node_modules/npm/html     /sassc /usr/include /var/cache/apk/*   &&
      apk del git make gcc g++ python linux-headers paxctl gnupg"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --ignore-optional -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache ca-certificates wget openssl openssh-client git \t&& mkdir
      -p /etc/ssl/certs \t&& update-ca-certificates \t&& export DOCKERIZE_VERSION=v0.6.1
      \t&& git config --global http.sslverify \"false\" \t&& wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      \t&& tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      \t&& rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \t&& apk del
      ca-certificates wget openssl openssh-client git"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - php ./artisan serve --port=80 --host=0.0.0.0
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Health:
      Interval: 60000000000
      Test:
      - CMD-SHELL
      - curl -f http://localhost/ || exit 1
    Name: healthcheck
  From:
    Image: php:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:alpine
