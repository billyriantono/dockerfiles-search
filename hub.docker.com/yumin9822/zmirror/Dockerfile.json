{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Min Yu \u003cyumin9822@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DOMAIN",
              "Value": "**None**"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MIRROR_NAME",
              "Value": "google"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \\cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \u0026\u0026     apt-get install -y build-essential patch binutils make devscripts nano libtool libssl-dev libxml2                        libxml2-dev software-properties-common python-software-properties dnsutils                        git wget curl python3 python3-dev iftop cron \u0026\u0026     wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py -O - | python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -r https://raw.githubusercontent.com/aploium/zmirror/master/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/apache2 \u0026\u0026     apt-key update \u0026\u0026 apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026     apt-get install -y apache2 \u0026\u0026     a2enmod rewrite mime include headers filter expires deflate autoindex setenvif ssl http2 \u0026\u0026     apt-get install -y libapache2-mod-wsgi-py3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/www \u0026\u0026     git clone https://github.com/aploium/zmirror ${MIRROR_NAME} \u0026\u0026 chown -R www-data.www-data ${MIRROR_NAME} \u0026\u0026     cp /var/www/${MIRROR_NAME}/more_configs/config_google_and_zhwikipedia.py /var/www/${MIRROR_NAME}/config.py \u0026\u0026     sed -i \"s/^my_host_scheme.*$/my_host_scheme = \\'https:\\/\\/\\'/g\" /var/www/${MIRROR_NAME}/config.py \u0026\u0026     echo \"verbose_level = 2\" \u003e\u003e /var/www/${MIRROR_NAME}/config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /etc/apache2/sites-enabled/000-default.conf \u0026\u0026     rm -rf /etc/apache2/conf-enabled/apache2-doc.conf \u0026\u0026     rm -rf /etc/apache2/conf-enabled/security.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "zmirror-apache-boilerplate.conf",
            "/etc/apache2/conf-enabled/zmirror-apache-boilerplate.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "apache2-https.conf",
            "/etc/apache2/sites-enabled/apache2-https.conf.sample"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "apache2-http.conf",
            "/etc/apache2/sites-enabled/zmirror-http-redirection.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ENTRY.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /ENTRY.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/letsencrypt"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/ENTRY.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}