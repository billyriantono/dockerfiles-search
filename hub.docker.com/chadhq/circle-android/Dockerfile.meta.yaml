MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"marc@circleci.com"'
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/circleci/circleci-images/master/android/bin/circle-android
    - /bin/circle-android
  - CmdLine:
    - chmod +rx /bin/circle-android
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90circleci   && echo
      'DPkg::Options "--force-confnew";' >> /etc/apt/apt.conf.d/90circleci
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update   && mkdir -p /usr/share/man/man1   && apt-get install -y     git
      mercurial xvfb     locales sudo openssh-client ca-certificates tar gzip parallel     net-tools
      netcat unzip zip bzip2 gnupg curl wget
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen C.UTF-8 || true
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - JQ_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest"   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq
      $JQ_URL   && chmod +x /usr/bin/jq   && jq --version
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex   && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/
      | grep -o -e ''docker-[.0-9]*-ce\.tgz'' | sort -r | head -n 1)   && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}"   &&
      echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail
      --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}"   && ls -lha /tmp/docker.tgz   &&
      tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf
      /tmp/docker /tmp/docker.tgz   && which docker   && (docker version || true)'
    Name: run
    PrependShell: true
  - CmdLine:
    - COMPOSE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest"   &&
      curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose
      $COMPOSE_URL   && chmod +x /usr/bin/docker-compose   && docker-compose version
    Name: run
    PrependShell: true
  - CmdLine:
    - DOCKERIZE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz"   &&
      curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz
      $DOCKERIZE_URL   && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   &&
      rm -rf /tmp/dockerize-linux-amd64.tar.gz   && dockerize --version
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell
      /bin/bash --create-home circleci   && echo ''circleci ALL=NOPASSWD: ALL'' >>
      /etc/sudoers.d/50-circleci   && echo ''Defaults    env_keep += "DEBIAN_FRONTEND"''
      >> /etc/sudoers.d/env_keep'
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  - Env:
    - Key: HOME
      Value: /home/circleci
    Name: env
  - CmdLine:
    - sudo apt-get update -qqy && sudo apt-get install -qqy         python-dev         python-setuptools         apt-transport-https         lsb-release
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install gcc-multilib &&     sudo easy_install -U pip &&     sudo
      pip uninstall crcmod &&     sudo pip install -U crcmod
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update && sudo apt-get install -y google-cloud-sdk &&     gcloud
      config set core/disable_usage_reporting true &&     gcloud config set component_manager/disable_update_check
      true
    Name: run
    PrependShell: true
  - Key: sdk_version
    Name: arg
    Value: sdk-tools-linux-3859397.zip
  - Key: ndk_version
    Name: arg
    Value: android-ndk-r17b-linux-x86_64.zip
  - Key: android_home
    Name: arg
    Value: /opt/android/sdk
  - Key: android_ndk_home
    Name: arg
    Value: /opt/android/ndk
  - CmdLine:
    - sudo apt-get update &&     sudo apt-get install --yes         xvfb lib32z1 lib32stdc++6
      build-essential         libcurl4-openssl-dev libglu1-mesa libxi-dev libxmu-dev         libglu1-mesa-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && wget -O ruby-install-0.6.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz
      &&     tar -xzvf ruby-install-0.6.1.tar.gz &&     cd ruby-install-0.6.1 &&     sudo
      make install &&     ruby-install --cleanup ruby 2.4.3 &&     rm -r /tmp/ruby-install-*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${HOME}/.rubies/ruby-2.4.3/bin:${PATH}
    Name: env
  - CmdLine:
    - 'echo ''gem: --env-shebang --no-rdoc --no-ri'' >> ~/.gemrc && gem install bundler'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mkdir -p ${android_home} &&     sudo chown -R circleci:circleci ${android_home}
      &&     curl --silent --show-error --location --fail --retry 3 --output /tmp/${sdk_version}
      https://dl.google.com/android/repository/${sdk_version} &&     unzip -q /tmp/${sdk_version}
      -d ${android_home} &&     rm /tmp/${sdk_version}
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mkdir -p ${android_ndk_home} &&     sudo chown -R circleci:circleci ${android_ndk_home}
      &&     curl --silent --show-error --location --fail --retry 3 --output  /tmp/${ndk_version}
      https://dl.google.com/android/repository/${ndk_version} &&     unzip -q /tmp/${ndk_version}
      -d ${android_ndk_home} &&     rm /tmp/${ndk_version}
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: ${android_home}
    Name: env
  - Env:
    - Key: ANDROID_NDK_HOME
      Value: ${android_ndk_home}
    Name: env
  - Env:
    - Key: ADB_INSTALL_TIMEOUT
      Value: "120"
    Name: env
  - Env:
    - Key: PATH
      Value: ${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
    Name: env
  - CmdLine:
    - mkdir ~/.android && echo '### User Sources for Android SDK Manager' > ~/.android/repositories.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager --licenses && sdkmanager --update
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager   "tools"   "platform-tools"   "emulator"   "extras;android;m2repository"   "extras;google;m2repository"   "extras;google;google_play_services"
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager   "build-tools;25.0.0"   "build-tools;25.0.1"   "build-tools;25.0.2"   "build-tools;25.0.3"   "build-tools;26.0.1"   "build-tools;26.0.2"   "build-tools;27.0.0"   "build-tools;27.0.1"   "build-tools;27.0.2"   "build-tools;27.0.3"   "build-tools;28.0.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager "platforms;android-27"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600   ;
      do     gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key"
      ||     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 8.11.3
    Name: env
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64)
      ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo
      "unsupported architecture"; exit 1 ;;   esac   && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1
      --no-same-owner   && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
      SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.6.0
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" ||     gpg
      --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" ||     gpg
      --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;   done   && curl -fsSLO
      --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - node --version
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  From:
    Image: openjdk:8-jdk-slim
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-slim
