MetaArgs:
- DefaultValue: null
  Key: alpine_version
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: golang_version
  ProvidedValue: null
  Value: null
Stages:
- BaseName: golang:${golang_version:-1.13.4}-alpine${alpine_version:-3.10}
  Commands:
  - Key: ansible_version
    Name: arg
    Value: null
  - Key: awscli_version
    Name: arg
    Value: null
  - Key: terraform_version
    Name: arg
    Value: null
  - Env:
    - Key: TERRAFORM_VERSION
      Value: ${terraform_version:-0.12.16}
    Name: env
  - Env:
    - Key: ANSIBLE_VERSION
      Value: ${ansible_version:-2.9.1}
    Name: env
  - Env:
    - Key: AWSCLI_VERSION
      Value: ${awscli_version:-1.16.291}
    Name: env
  - Env:
    - Key: SCRIPT_MAIN
      Value: '''/tmp/main_script.sh'''
    Name: env
  - Env:
    - Key: SCRIPT_LOCATION
      Value: '''/tmp/script/script.sh'''
    Name: env
  - Env:
    - Key: EC2_INI_PATH
      Value: '"/etc/ansible/ec2.ini"'
    Name: env
  - Env:
    - Key: AWS_DEFAULT_REGION
      Value: '"eu-central-1"'
    Name: env
  - Env:
    - Key: EC2_REGION
      Value: '"${AWS_DEFAULT_REGION}"'
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"salvatore181@gmail.com"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script/
    - /tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ec2/
    - /etc/ansible/ec2
  - CmdLine:
    - set -xe &&     apk update &&     apk add --no-cache --purge -uU sudo curl ca-certificates
      openssh-client unzip            python3-dev python3 libffi-dev openssl-dev git
      vim build-base bash docker &&     python3 -m ensurepip &&     rm -r /usr/lib/python*/ensurepip
      &&     pip3 install --upgrade boto boto3 pip setuptools &&     if [ ! -e /usr/bin/pip
      ]; then ln -s pip3 /usr/bin/pip ; fi &&     if [[ ! -e /usr/bin/python ]]; then
      ln -sf /usr/bin/python3 /usr/bin/python; fi &&     pip install --no-cache --upgrade
      ansible==${ANSIBLE_VERSION} awscli==${AWSCLI_VERSION} molecule molecule[docker]
      &&     wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip &&     rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     mv terraform /usr/local/bin &&     rm -r /root/.cache &&     chmod +x
      ${SCRIPT_MAIN}
    Name: run
    PrependShell: true
  - CmdLine:
    - sh +x ${SCRIPT_MAIN}; /bin/sh
    Name: cmd
    PrependShell: true
  From:
    Image: golang:${golang_version:-1.13.4}-alpine${alpine_version:-3.10}
  Name: ""
  Platform: ""
  SourceCode: FROM golang:${golang_version:-1.13.4}-alpine${alpine_version:-3.10}
