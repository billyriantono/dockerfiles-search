MetaArgs:
- DefaultValue: null
  Key: PHP_TAG
  ProvidedValue: null
  Value: null
Stages:
- BaseName: bitnami/php-fpm:${PHP_TAG:-latest}
  Commands:
  - CmdLine:
    - install_packages         rsync         vim     ;
    Name: run
    PrependShell: true
  - Key: ENV
    Name: arg
    Value: null
  - CmdLine:
    - "set -ex;     {         echo '';         echo 'env[ENV] = $ENV';     } >> /opt/bitnami/php/etc/environment.conf;
      \        if [ \"${ENV}\" = \"develop\" ]; then \t    { \t        echo 'user_ini.filename
      = \".user-'\"${ENV}\"'.ini\"'; \t        echo 'user_ini.cache_ttl = 0'; \t    }
      >> /opt/bitnami/php/etc/php.ini; \tfi; \t    echo 'extension=memcached.so' |
      tee -a /opt/bitnami/php/etc/php.ini;         echo 'extension=apcu.so' | tee
      -a /opt/bitnami/php/etc/php.ini;"
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${ENV}" != "develop" ]; then         set -eux;         install_packages             sendmail         ;         echo
      'sendmail_path = "env -i /usr/sbin/sendmail -t -i"' > /opt/bitnami/php/etc/conf.d/sendmail.ini;     fi
    Name: run
    PrependShell: true
  - Key: MAILHOG_VERSION
    Name: arg
    Value: null
  - CmdLine:
    - if [ "${ENV}" = "develop" ]; then         set -eux;         install_packages             ca-certificates             curl         ;         curl
      --location --output /usr/local/bin/mhsendmail https://github.com/mailhog/mhsendmail/releases/download/v${MAILHOG_VERSION}/mhsendmail_linux_amd64;         chmod
      +x /usr/local/bin/mhsendmail;         echo 'sendmail_path="/usr/local/bin/mhsendmail
      --smtp-addr=mailhog:1025 -f noreply@localhost"' > /opt/bitnami/php/etc/conf.d/mailhog.ini;     fi
    Name: run
    PrependShell: true
  - Key: PHP_COMPOSER_PATH
    Name: arg
    Value: null
  - CmdLine:
    - "if [ ! -z \"${PHP_COMPOSER_PATH}\" ]; then         set -ex;         install_packages
      \t        ca-certificates \t        curl \t        git             unzip         ;
      \        curl -sS https://getcomposer.org/installer | php --             --install-dir=/usr/local/bin
      \            --filename=composer         ;     fi"
    Name: run
    PrependShell: true
  - Key: PHP_WP_CLI_ENABLED
    Name: arg
    Value: null
  - CmdLine:
    - if [ ! -z "${PHP_WP_CLI_ENABLED}" ]; then         set -ex;         curl -o /usr/local/bin/wp
      https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar;         chmod
      +x /usr/local/bin/wp;     fi
    Name: run
    PrependShell: true
  - Key: NEWRELIC_VERSION
    Name: arg
    Value: null
  - Key: NEWRELIC_LICENSE_KEY
    Name: arg
    Value: null
  - Key: NEWRELIC_APPLICATION_NAME
    Name: arg
    Value: null
  - CmdLine:
    - "if [ ! -z \"${NEWRELIC_LICENSE_KEY}\" ]; then \t    curl -L https://download.newrelic.com/php_agent/release/newrelic-php5-${NEWRELIC_VERSION}-linux.tar.gz
      | tar -C /tmp -zx && \t    export NR_INSTALL_USE_CP_NOT_LN=1 && \t    export
      NR_INSTALL_SILENT=1 && \t    /tmp/newrelic-php5-*/newrelic-install install &&
      \t    rm -rf /tmp/newrelic-php5-* /tmp/nrinstall* && \t    sed -i -e 's/\"REPLACE_WITH_REAL_KEY\"/\"'\"${NEWRELIC_LICENSE_KEY}\"'\"/'
      \t    -e 's/newrelic.appname = \"PHP Application\"/newrelic.appname = \"'\"${NEWRELIC_APPLICATION_NAME}\"'\"/'
      \t    /opt/bitnami/php/etc/conf.d/newrelic.ini; \tfi"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - app-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /app-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /app-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php-fpm
    - -F
    - --pid
    - /opt/bitnami/php/tmp/php-fpm.pid
    - -y
    - /opt/bitnami/php/etc/php-fpm.conf
    Name: cmd
    PrependShell: false
  From:
    Image: bitnami/php-fpm:${PHP_TAG:-latest}
  Name: ""
  Platform: ""
  SourceCode: FROM bitnami/php-fpm:${PHP_TAG:-latest}
