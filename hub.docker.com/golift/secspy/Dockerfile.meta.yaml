MetaArgs:
- DefaultValue: amd64
  Key: ARCH
  ProvidedValue: null
  Value: amd64
- DefaultValue: linux
  Key: OS
  ProvidedValue: null
  Value: linux
- DefaultValue: "0"
  Key: BUILD_DATE
  ProvidedValue: null
  Value: "0"
- DefaultValue: "0"
  Key: COMMIT
  ProvidedValue: null
  Value: "0"
- DefaultValue: unknown
  Key: VERSION
  ProvidedValue: null
  Value: unknown
- DefaultValue: application-builder
  Key: BINARY
  ProvidedValue: null
  Value: application-builder
- DefaultValue: github.com/golift/application-builder
  Key: IMPORT_PATH
  ProvidedValue: null
  Value: github.com/golift/application-builder
Stages:
- As: builder
  BaseName: golang:stretch
  Commands:
  - Key: ARCH
    Name: arg
    Value: null
  - Key: OS
    Name: arg
    Value: null
  - Key: BINARY
    Name: arg
    Value: null
  - Key: IMPORT_PATH
    Name: arg
    Value: null
  - CmdLine:
    - mkdir -p $GOPATH/pkg/mod $GOPATH/bin $GOPATH/src/${IMPORT_PATH}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y curl    && curl https://raw.githubusercontent.com/golang/dep/master/install.sh
      | sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $GOPATH/src/${IMPORT_PATH}
  - Name: workdir
    Path: $GOPATH/src/${IMPORT_PATH}
  - CmdLine:
    - dep ensure --vendor-only   && CGO_ENABLED=0 make ${BINARY}.${ARCH}.${OS}
    Name: run
    PrependShell: true
  From:
    Image: golang:stretch
  Name: builder
  Platform: ""
  SourceCode: FROM golang:stretch as builder
- BaseName: scratch
  Commands:
  - Key: ARCH
    Name: arg
    Value: null
  - Key: OS
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: COMMIT
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: LICENSE
    Name: arg
    Value: MIT
  - Key: BINARY
    Name: arg
    Value: null
  - Key: IMPORT_PATH
    Name: arg
    Value: null
  - Key: SOURCE_URL
    Name: arg
    Value: http://github.com/golift/application-builder
  - Key: URL
    Name: arg
    Value: http://github.com/golift/application-builder
  - Key: DESC
    Name: arg
    Value: application-builder
  - Key: VENDOR
    Name: arg
    Value: golift
  - Key: AUTHOR
    Name: arg
    Value: golift
  - Key: CONFIG_FILE
    Name: arg
    Value: config.conf
  - Labels:
    - Key: org.opencontainers.image.created
      Value: '"${BUILD_DATE}"'
    - Key: org.opencontainers.image.title
      Value: '"${BINARY}"'
    - Key: org.opencontainers.image.documentation
      Value: '"${SOURCE_URL}/wiki/Docker"'
    - Key: org.opencontainers.image.description
      Value: '"${DESC}"'
    - Key: org.opencontainers.image.url
      Value: '"${URL}"'
    - Key: org.opencontainers.image.revision
      Value: '"${COMMIT}"'
    - Key: org.opencontainers.image.source
      Value: '"${SOURCE_URL}"'
    - Key: org.opencontainers.image.vendor
      Value: '"${VENDOR}"'
    - Key: org.opencontainers.image.authors
      Value: '"${AUTHOR}"'
    - Key: org.opencontainers.image.architecture
      Value: '"${OS} ${ARCH}"'
    - Key: org.opencontainers.image.licenses
      Value: '"${LICENSE}"'
    - Key: org.opencontainers.image.version
      Value: '"${VERSION}"'
    Name: label
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/${IMPORT_PATH}/${BINARY}.${ARCH}.${OS}
    - /image
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/${IMPORT_PATH}/examples/${CONFIG_FILE}.example
    - /etc/${BINARY}/${CONFIG_FILE}
  - Name: volume
    Volumes:
    - /etc/${BINARY}
  - CmdLine:
    - /image
    Name: entrypoint
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
