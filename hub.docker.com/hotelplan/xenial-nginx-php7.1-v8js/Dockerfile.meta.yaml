MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.10.1
  Commands:
  - Maintainer: Pavels Fjodorovs (pavels.fjodorovs@hotelplan.com)
    Name: maintainer
  - Env:
    - Key: BUILD
      Value: 10.08.2018
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: TIMEZONE
      Value: Europe/Berlin
    Name: env
  - Env:
    - Key: APP_ROOT
      Value: app
    Name: env
  - CmdLine:
    - /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - "touch /etc/apt/apt.conf.d/99fixbadproxy   && echo \"Acquire::http::Pipeline-Depth
      0;\" >> /etc/apt/apt.conf.d/99fixbadproxy   && echo \"Acquire::http::No-Cache
      true;\" >> /etc/apt/apt.conf.d/99fixbadproxy   && echo \"Acquire::BrokenProxy
      true;\" >> /etc/apt/apt.conf.d/99fixbadproxy   && add-apt-repository -y ppa:ondrej/php
      \  && add-apt-repository -y ppa:nginx/stable   && add-apt-repository -y ppa:stesie/libv8
      \  && apt-get update -o Acquire::CompressionTypes::Order::=gz   && apt-get install
      -y --force-yes --fix-missing git vim curl wget ssl-cert libcurl4-gnutls-dev
      php7.1-cli php7.1-fpm php7.1-mysql               php7.1-gd php7.1-mcrypt php7.1-intl
      php7.1-pgsql php7.1-sqlite php7.1-curl               php7.1-imap php7.1-tidy
      php-pear php7.1-dev php7.1-xsl php7.1-mbstring               libxml2-dev unzip
      libz-dev libicu-dev nano libmagickwand-dev imagemagick               php7.1-soap
      php7.1-opcache nginx                libv8-7.5 libv8-7.5-dev \t\t\t   libhiredis-dev
      \  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s|;date.timezone =.*|date.timezone = $TIMEZONE|" /etc/php/7.1/fpm/php.ini     &&
      sed -i "s|;date.timezone =.*|date.timezone = $TIMEZONE|" /etc/php/7.1/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://getcomposer.org/installer | php   && mv composer.phar /usr/local/bin/composer   &&
      chmod +x /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /var/www
    Name: env
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/;daemonize\s*=\s*yes/daemonize = no/g" /etc/php/7.1/fpm/php-fpm.conf   &&
      sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/7.1/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keyscan -t rsa github.com 2>&1 >> /root/.ssh/known_hosts  && ssh-keyscan
      -t rsa bitbucket.org 2>&1 >> /root/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl channel-update pecl.php.net   && pecl install imagick   && echo extension=imagick.so
      > /etc/php/7.1/mods-available/imagick.ini   && ln -s /etc/php/7.1/mods-available/imagick.ini
      /etc/php/7.1/fpm/conf.d/20-imagick.ini   && ln -s /etc/php/7.1/mods-available/imagick.ini
      /etc/php/7.1/cli/conf.d/20-imagick.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug   && echo "zend_extension=/usr/lib/php/20160303/xdebug.so"
      > /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.remote_mode=req'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.remote_handler=dbgp'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.max_nesting_level=1200'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.remote_port=9000'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.remote_enable=1'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.remote_host=host.docker.internal'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.profiler_enable_trigger=1'
      /etc/php/7.1/mods-available/xdebug.ini   && sed -i '1 a xdebug.profiler_output_dir=/app/var'
      /etc/php/7.1/mods-available/xdebug.ini   && ln -s /etc/php/7.1/mods-available/xdebug.ini
      /etc/php/7.1/fpm/conf.d/20-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install igbinary   && echo extension=igbinary.so > /etc/php/7.1/mods-available/igbinary.ini   &&
      ln -s /etc/php/7.1/mods-available/igbinary.ini /etc/php/7.1/fpm/conf.d/50-igbinary.ini   &&
      ln -s /etc/php/7.1/mods-available/igbinary.ini /etc/php/7.1/cli/conf.d/50-igbinary.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/Danack/phpiredis.git      && cd phpiredis     &&
      phpize && ./configure --enable-phpiredis     && make     && make install \t&&
      echo \"extension=phpiredis.so\" > /etc/php/7.1/mods-available/phpiredis.ini
      \t&& ln -s /etc/php/7.1/mods-available/phpiredis.ini /etc/php/7.1/fpm/conf.d/60-phpiredis.ini
      \    && ln -s /etc/php/7.1/mods-available/phpiredis.ini /etc/php/7.1/cli/conf.d/60-phpiredis.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s|upload_max_filesize =.*|upload_max_filesize = 100M|" /etc/php/7.1/fpm/php.ini   &&
      sed -i "s|post_max_size =.*|post_max_size = 101M|" /etc/php/7.1/cli/php.ini   &&
      sed -i "s|memory_limit =.*|memory_limit = 3000M|" /etc/php/7.1/fpm/php.ini   &&
      sed -i "s|memory_limit =.*|memory_limit = 3000M|" /etc/php/7.1/cli/php.ini   &&
      sed -i "s|max_execution_time =.*|max_execution_time = 0|" /etc/php/7.1/fpm/php.ini    &&
      sed -i "s|max_execution_time =.*|max_execution_time = 0|" /etc/php/7.1/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $TIMEZONE | tee /etc/timezone   && dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - Env:
    - Key: RELATIVE_APP_ROOT
      Value: web
    Name: env
  - Env:
    - Key: PHP_INDEX_FILE
      Value: app.php
    Name: env
  - Env:
    - Key: V8_MODULE_VERSION
      Value: 2.1.1
    Name: env
  - CmdLine:
    - cd /tmp   && git clone https://github.com/phpv8/v8js.git   && cd v8js   && git
      checkout tags/$V8_MODULE_VERSION   && phpize   && ./configure --with-v8js=/opt/libv8-7.5   &&
      make   && make test   && make install   && echo extension=v8js.so > /etc/php/7.1/mods-available/v8js.ini   &&
      ln -s /etc/php/7.1/mods-available/v8js.ini /etc/php/7.1/fpm/conf.d/99-v8js.ini   &&
      ln -s /etc/php/7.1/mods-available/v8js.ini /etc/php/7.1/cli/conf.d/99-v8js.ini   &&
      rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup/nginx/setup.sh
    - /etc/my_init.d/setup.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/setup.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup/nginx/default
    - /etc/nginx/sites-available/default
  - CmdLine:
    - mkdir           /etc/service/nginx
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup/nginx/nginx.sh
    - /etc/service/nginx/run
  - CmdLine:
    - chmod +x        /etc/service/nginx/run
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir           /etc/service/phpfpm
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup/nginx/phpfpm.sh
    - /etc/service/phpfpm/run
  - CmdLine:
    - chmod +x        /etc/service/phpfpm/run
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /run/php/
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /uploads
  - Name: volume
    Volumes:
    - /var
  - Env:
    - Key: HOME
      Value: /var/www
    Name: env
  - CmdLine:
    - usermod -s /bin/bash www-data   && usermod -d /var/www/ www-data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_ROOT
  From:
    Image: phusion/baseimage:0.10.1
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.10.1
