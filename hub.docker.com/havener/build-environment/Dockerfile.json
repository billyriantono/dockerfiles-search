{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:1.12",
      "SourceCode": "FROM golang:1.12 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:1.12"
      },
      "Commands": [
        {
          "CmdLine": [
            "go get -u github.com/mvdan/sh/cmd/shfmt \u0026\u0026     git clone https://github.com/direnv/direnv $GOPATH/src/github.com/direnv/direnv \u0026\u0026     cd $GOPATH/src/github.com/direnv/direnv \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -d github.com/SUSE/stampy \u0026\u0026     cd $GOPATH/src/github.com/SUSE/stampy \u0026\u0026     find . -type f -print0 | xargs -0 perl -pi -e 's:github.com/golang/lint/golint:golang.org/x/lint/golint:g' \u0026\u0026     make tools \u0026\u0026     make all \u0026\u0026     mv $GOPATH/src/github.com/SUSE/stampy/build/linux-amd64/stampy /usr/local/bin/stampy"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/bin/shfmt",
            "/usr/local/bin/shfmt"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/stampy",
            "/usr/local/bin/stampy"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/direnv",
            "/usr/local/bin/direnv"
          ]
        },
        {
          "CmdLine": [
            "echo 'eval \"$(direnv hook bash)\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u003e /dev/null \u0026\u0026     apt-get upgrade -y \u003e /dev/null \u0026\u0026     apt-get install -y     build-essential     curl     git-core     jq     vim     wget     \u003e/dev/null \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u003e /dev/null \u0026\u0026     apt-get install -y     apt-transport-https     ca-certificates     curl     software-properties-common     \u003e/dev/null \u0026\u0026     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \u0026\u0026     apt-get update \u003e /dev/null \u0026\u0026     apt-get install -y docker-ce=17.09.1~ce-0~ubuntu \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --progress-bar --location https://storage.googleapis.com/golang/go1.12.linux-amd64.tar.gz | tar -xzf - -C /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin:$GOPATH/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --silent --location \"https://github.com/geofffranks/spruce/releases/download/$(curl --silent --location \"https://api.github.com/repos/geofffranks/spruce/releases/latest\" | jq -r .tag_name)/spruce-linux-amd64\" \u003e /usr/bin/spruce \u0026\u0026 chmod a+rx /usr/bin/spruce"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}