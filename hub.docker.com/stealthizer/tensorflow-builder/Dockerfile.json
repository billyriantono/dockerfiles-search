{
  "MetaArgs": [
    {
      "Key": "UBUNTU_VERSION",
      "DefaultValue": "18.04",
      "ProvidedValue": null,
      "Value": "18.04"
    }
  ],
  "Stages": [
    {
      "Name": "base",
      "BaseName": "nvidia/cuda:10.0-base-ubuntu${UBUNTU_VERSION}",
      "SourceCode": "FROM nvidia/cuda:10.0-base-ubuntu${UBUNTU_VERSION} as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "nvidia/cuda:10.0-base-ubuntu${UBUNTU_VERSION}"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-10-0         cuda-cublas-10-0         cuda-cufft-10-0         cuda-curand-10-0         cuda-cusolver-10-0         cuda-cusparse-10-0         cuda-cufft-dev-10-0         cuda-cublas-dev-10-0         cuda-curand-dev-10-0         cuda-cusolver-dev-10-0         cuda-cusparse-dev-10-0         nvidia-headless-no-dkms-418         libcudnn7=7.4.1.5-1+cuda10.0         libcudnn7-dev=7.4.1.5-1+cuda10.0         libfreetype6-dev         libhdf5-serial-dev         libpng-dev         libzmq3-dev         pkg-config         software-properties-common         unzip \twget \tsoftware-properties-common \tswig \topenjdk-8-jdk \tgit \tnvinfer-runtime-trt-repo-ubuntu1804-5.0.2-ga-cuda10.0 \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends libnvinfer5=5.0.2-1+cuda10.0 \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "PYTHON",
          "Name": "arg",
          "Value": "python3"
        },
        {
          "Key": "PIP",
          "Name": "arg",
          "Value": "pip3"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     ${PYTHON}     ${PYTHON}-pip     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $(which ${PYTHON}) /usr/local/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${PIP} --no-cache-dir install --upgrade     pip     setuptools     numpy     six     wheel     mock     scipy     h5py     enum34"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${PIP} install keras_applications==1.0.5 --no-deps         \u0026\u0026 ${PIP} install  keras_preprocessing==1.0.3 --no-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/bazelbuild/bazel/releases/download/0.19.2/bazel-0.19.2-installer-linux-x86_64.sh \t\u0026\u0026 chmod +x ./bazel-0.19.2-installer-linux-x86_64.sh \t\u0026\u0026 ./bazel-0.19.2-installer-linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/tensorflow/tensorflow \t\u0026\u0026 cd tensorflow \t\u0026\u0026 git checkout r1.13"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tensorflow"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build-tensorflow.sh",
            "/tensorflow"
          ]
        },
        {
          "CmdLine": [
            "chmod +x build-tensorflow.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tensorflow/build-tensorflow.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}