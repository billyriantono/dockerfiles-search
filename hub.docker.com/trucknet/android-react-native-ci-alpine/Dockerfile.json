{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-alpine",
      "SourceCode": "FROM openjdk:8-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Goooseman \u003cgoooseman@me.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SDK_TOOLS",
              "Value": "\"4333796\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_TOOLS",
              "Value": "\"21.1.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TARGET_SDK",
              "Value": "\"21\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/opt/sdk\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_VERSION",
              "Value": "\"2.28-r0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "\"v10.14.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_VERSION",
              "Value": "\"6.4.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_CONFIG_FLAGS",
              "Value": "\"--fully-static\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_DEL_PKGS",
              "Value": "\"libstdc++\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_RM_DIRS",
              "Value": "/usr/include"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ \u0026\u0026   for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do     gpg --keyserver $server --recv-keys       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       B9AE9905FFD7803F25714661B63B535A4C206CA9       77984A986EBC2AA786BC0F66B01FBB92821C587A       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       FD3A5288F042B6850C66B31F09FE44734EB7990E       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       DD8F2338BAE7501E3DD5AC78C273792F7D83545D \u0026\u0026 break;   done \u0026\u0026   curl -sfSLO https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.xz \u0026\u0026   curl -sfSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt |     grep \" node-${NODE_VERSION}.tar.xz\\$\" | sha256sum -c | grep ': OK$' \u0026\u0026   tar -xf node-${NODE_VERSION}.tar.xz \u0026\u0026   cd node-${NODE_VERSION} \u0026\u0026   ./configure --prefix=/usr ${NODE_CONFIG_FLAGS} \u0026\u0026   make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026   make install \u0026\u0026   cd / \u0026\u0026   if [ -z \"$NODE_CONFIG_FLAGS\" ]; then     if [ -n \"$NPM_VERSION\" ]; then       npm install -g npm@${NPM_VERSION};     fi;     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;   fi \u0026\u0026   apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${NODE_DEL_PKGS} \u0026\u0026   rm -rf ${NODE_RM_DIRS} /node-${NODE_VERSION}* /usr/share/man /tmp/* /var/cache/apk/*     /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man \t/usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache git ruby ruby-rdoc ruby-dev ruby-irb g++ make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=.build-dependencies wget unzip ca-certificates bash \u0026\u0026 \twget https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -O /etc/apk/keys/sgerrand.rsa.pub \u0026\u0026 \twget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk -O /tmp/glibc.apk \u0026\u0026 \twget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk -O /tmp/glibc-bin.apk \u0026\u0026 \tapk add --no-cache /tmp/glibc.apk /tmp/glibc-bin.apk \u0026\u0026 \trm -rf /tmp/* \u0026\u0026 \trm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://dl.google.com/android/repository/sdk-tools-linux-${SDK_TOOLS}.zip -O /tmp/tools.zip \u0026\u0026 \tmkdir -p ${ANDROID_HOME} \u0026\u0026 \tunzip /tmp/tools.zip -d ${ANDROID_HOME} \u0026\u0026 \trm -v /tmp/tools.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.android/ \u0026\u0026 touch /root/.android/repositories.cfg \u0026\u0026 \tyes | ${ANDROID_HOME}/tools/bin/sdkmanager \"--licenses\" \u0026\u0026 \t${ANDROID_HOME}/tools/bin/sdkmanager \"--update\" \u0026\u0026 \t${ANDROID_HOME}/tools/bin/sdkmanager \"build-tools;${BUILD_TOOLS}\" \"platform-tools\" \"platforms;android-${TARGET_SDK}\" \"extras;android;m2repository\" \"extras;google;google_play_services\" \"extras;google;m2repository\" \"emulator\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundle fastlane"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}