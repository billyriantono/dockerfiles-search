MetaArgs: null
Stages:
- BaseName: node:0.12-slim
  Commands:
  - Env:
    - Key: TINI_VERSION
      Value: 0.5.0
    Name: env
  - CmdLine:
    - set -x         && apt-get update && apt-get install -y ca-certificates curl
      git vim                 --no-install-recommends         && rm -rf /var/lib/apt/lists/*         &&
      curl -fSL "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini"
      -o /usr/local/bin/tini         && chmod +x /usr/local/bin/tini         && tini
      -h         && apt-get purge --auto-remove -y ca-certificates curl
    Name: run
    PrependShell: true
  - Env:
    - Key: MONGO_EXPRESS
      Value: 0.21.0
    Name: env
  - CmdLine:
    - npm install mongo-express@$MONGO_EXPRESS
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /node_modules/mongo-express
  - Env:
    - Key: WEB_USER
      Value: '"user"'
    Name: env
  - Env:
    - Key: WEB_PASS
      Value: '"pass"'
    Name: env
  - Env:
    - Key: ADMIN_USER
      Value: '""'
    Name: env
  - Env:
    - Key: ADMIN_PASS
      Value: '""'
    Name: env
  - Env:
    - Key: MONGO_PORT
      Value: '"27017"'
    Name: env
  - Env:
    - Key: EDITOR_THEME
      Value: '"default"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - ./
  - CmdLine:
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8081"
  - CmdLine:
    - tini
    - --
    - node
    - app
    Name: cmd
    PrependShell: false
  From:
    Image: node:0.12-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:0.12-slim
