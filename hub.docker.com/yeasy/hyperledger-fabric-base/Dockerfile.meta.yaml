MetaArgs: null
Stages:
- BaseName: golang:1.13
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Baohua Yang <yeasy.github.com>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: FABRIC_ROOT
      Value: $GOPATH/src/github.com/hyperledger/fabric
    Name: env
  - Env:
    - Key: CHAINTOOL_RELEASE
      Value: 1.1.3
    Name: env
  - Env:
    - Key: BASEIMAGE_RELEASE
      Value: 0.4.18
    Name: env
  - Env:
    - Key: BASE_VERSION
      Value: 2.0.0
    Name: env
  - Env:
    - Key: PROJECT_VERSION
      Value: 2.0.0
    Name: env
  - Env:
    - Key: DOCKER_NS
      Value: hyperledger
    Name: env
  - Env:
    - Key: BASE_DOCKER_NS
      Value: hyperledger
    Name: env
  - Env:
    - Key: LD_FLAGS
      Value: '"-X github.com/hyperledger/fabric/common/metadata.Version=${PROJECT_VERSION}               -X
        github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric               -X
        github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger               -X
        github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger"'
    Name: env
  - Env:
    - Key: FABRIC_CFG_PATH
      Value: /etc/hyperledger/fabric
    Name: env
  - CmdLine:
    - mkdir -p /var/hyperledger/production         $GOPATH/src/github.com/hyperledger         $FABRIC_CFG_PATH         /chaincode/input         /chaincode/output
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update         && apt-get install -y apt-utils python-dev         &&
      apt-get install -y libsnappy-dev zlib1g-dev libbz2-dev libyaml-dev libltdl-dev
      libtool         && apt-get install -y python-pip         && apt-get install
      -y vim tree jq unzip         && rm -rf /var/cache/apt
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/chaintool-${CHAINTOOL_RELEASE}/hyperledger-fabric-chaintool-${CHAINTOOL_RELEASE}.jar
      > /usr/local/bin/chaintool         && chmod a+x /usr/local/bin/chaintool
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/golang/protobuf/protoc-gen-go         && go get github.com/maxbrunsfeld/counterfeiter         &&
      go get github.com/axw/gocov/...         && go get github.com/AlekSi/gocov-xml         &&
      go get golang.org/x/tools/cmd/goimports         && go get golang.org/x/lint/golint         &&
      go get github.com/estesp/manifest-tool         && go get github.com/client9/misspell/cmd/misspell         &&
      go get github.com/estesp/manifest-tool         && go get github.com/onsi/ginkgo/ginkgo
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOPATH/src/github.com/hyperledger         && git clone --single-branch -b
      master --depth 1 http://gerrit.hyperledger.org/r/fabric         && echo "*                hard    nofile          65536"
      >> /etc/security/limits.conf         && echo "*                soft    nofile          65536"
      >> /etc/security/limits.conf         && cp -r $FABRIC_ROOT/sampleconfig/* $FABRIC_CFG_PATH/
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/hyperledger/fabric-chaincode-go/shim         && go get github.com/hyperledger/fabric-protos-go/peer
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $FABRIC_ROOT/         && CGO_CFLAGS=" " go install -tags "" github.com/hyperledger/fabric/cmd/configtxgen         &&
      CGO_CFLAGS=" " go install -tags "" github.com/hyperledger/fabric/cmd/cryptogen         &&
      CGO_CFLAGS=" " go install -tags "" github.com/hyperledger/fabric/cmd/configtxlator         &&
      CGO_CFLAGS=" " go install -tags "" -ldflags "-X github.com/hyperledger/fabric/cmd/discover/metadata.Version=2.0.0"
      github.com/hyperledger/fabric/cmd/discover         && CGO_CFLAGS=" " go install
      -tags "" github.com/hyperledger/fabric/cmd/idemixgen
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/hyperledger
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Name: workdir
    Path: $FABRIC_ROOT
  - CmdLine:
    - ln -s $GOPATH /opt/gopath
    Name: run
    PrependShell: true
  - Labels:
    - Key: org.hyperledger.fabric.version
      Value: ${PROJECT_VERSION}
    - Key: org.hyperledger.fabric.base.version
      Value: ${BASEIMAGE_RELEASE}
    Name: label
  From:
    Image: golang:1.13
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.13
