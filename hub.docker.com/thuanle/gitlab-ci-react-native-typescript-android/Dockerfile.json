{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"thuanle@hcmut.edu.vn\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.2.6\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"Android SDK 26.1.1\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VERSION_SDK_TOOLS",
              "Value": "\"3859397\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/sdk\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:${ANDROID_HOME}/tools\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends       bzip2       curl wget        git git-core       html2text       openjdk-8-jdk       libc6-i386       lib32stdc++6       lib32gcc1       lib32ncurses5       lib32z1       unzip       nodejs npm       gnupg       build-essential imagemagick librsvg2-bin       ruby ruby-dev       php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/ssl/certs/java/cacerts;     /var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://dl.google.com/android/repository/sdk-tools-linux-${VERSION_SDK_TOOLS}.zip \u003e /sdk.zip \u0026\u0026     unzip /sdk.zip -d /sdk \u0026\u0026     rm -v /sdk.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $ANDROID_HOME/licenses/   \u0026\u0026 echo \"8933bad161af4178b1185d1a37fbf41ea5269c55\\nd56f5187479451eabf01fb78af6dfcb131a6481e\" \u003e $ANDROID_HOME/licenses/android-sdk-license   \u0026\u0026 echo \"84831b9409646a918e30573bab4c9c91346d8abd\" \u003e $ANDROID_HOME/licenses/android-sdk-preview-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "packages.txt",
            "/sdk"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /root/.android \u0026\u0026   touch /root/.android/repositories.cfg \u0026\u0026   ${ANDROID_HOME}/tools/bin/sdkmanager --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "while read -r package; do PACKAGES=\"${PACKAGES}${package} \"; done \u003c /sdk/packages.txt \u0026\u0026     ${ANDROID_HOME}/tools/bin/sdkmanager ${PACKAGES}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Yarn Deb Source\" \t\u0026\u0026 curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \t\u0026\u0026 echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Additional Libraries\" \t \u0026\u0026 rm -rf /var/lib/gems \t \u0026\u0026 apt-get update \u0026\u0026 apt-get install yarn -qqy --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Downloading Gradle\" \t\u0026\u0026 wget --no-verbose --output-document=gradle.zip \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Gradle\" \t\u0026\u0026 unzip gradle.zip \t\u0026\u0026 rm gradle.zip \t\u0026\u0026 mv \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}/\" \t\u0026\u0026 ln --symbolic \"${GRADLE_HOME}/bin/gradle\" /usr/bin/gradle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Install typescript\"   \u0026\u0026 npm install -g typescript   \u0026\u0026 npm install -g tslint   \u0026\u0026 npm install -g npx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Install gulp\"   \u0026\u0026 npm install gulp-cli -g   \u0026\u0026 npm install gulp -D"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Clean up\"   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}