MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Key: MYSQL_SERVER_ADDRESS
    Name: arg
    Value: null
  - Key: MSSQL_SERVER_ADDRESS
    Name: arg
    Value: null
  - Key: DOCKERHUB_USER
    Name: arg
    Value: null
  - Key: DOCKERHUB_PASSWORD
    Name: arg
    Value: null
  - Env:
    - Key: MYSQL_SERVER_ADDRESS
      Value: ${MYSQL_SERVER_ADDRESS}
    Name: env
  - Env:
    - Key: MSSQL_SERVER_ADDRESS
      Value: ${MSSQL_SERVER_ADDRESS}
    Name: env
  - Env:
    - Key: DOCKERHUB_USER
      Value: ${DOCKERHUB_USER}
    Name: env
  - Env:
    - Key: DOCKERHUB_PASSWORD
      Value: ${DOCKERHUB_PASSWORD}
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove docker docker-engine docker.io
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y linux-image-extra-virtual
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy     curl     apt-transport-https     ca-certificates     lxc     iptables     dmsetup     software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      xenial stable" | tee /etc/apt/sources.list.d/docker.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-cache policy docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker-ce
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./ninedb_build.sh
    - /usr/local/bin/ninedb_build.sh
  - Name: workdir
    Path: /data
  - CmdLine:
    - mkdir -p /data
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /data/
  - CmdLine:
    - chmod +x /usr/local/bin/ninedb_build.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: expose
    Ports:
    - "1433"
    - "3306"
  - CmdLine:
    - ninedb_build.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
