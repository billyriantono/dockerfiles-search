MetaArgs: null
Stages:
- As: ipython_stage
  BaseName: ubuntu:17.10
  Commands:
  - CmdLine:
    - apt-get -q update && apt-get install -qy python-dev python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pipenv
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /jupyter
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /jupyter
  - CmdLine:
    - PIPENV_VENV_IN_PROJECT=1 pipenv install  jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - /jupyter/.venv/bin/pip install jupyterlab notebook>=5.5.0 sh psutil
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:17.10
  Name: ipython_stage
  Platform: ""
  SourceCode: FROM ubuntu:17.10 as ipython_stage
- As: emane_stage
  BaseName: ubuntu:17.10
  Commands:
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --no-install-recommends -y install wget gcc g++ autoconf automake libtool
      libxml2-dev     libprotobuf-dev python-protobuf libpcap-dev libpcre3-dev uuid-dev
      debhelper pkg-config     build-essential python-setuptools protobuf-compiler
      git dh-python python-lxml ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - patches/gccfix.diff
    - /root/
  - CmdLine:
    - cd /root/ && wget https://github.com/adjacentlink/emane/archive/v1.0.1.tar.gz
      && tar -xvf v1.0.1.tar.gz && cp gccfix.diff emane-1.0.1 && cd emane-1.0.1 &&
      patch -p1 <gccfix.diff && ./autogen.sh && ./configure && make deb WITHOUT_PYTHON3=1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /emane_install_debs
    Name: run
    PrependShell: true
  - CmdLine:
    - find /root/emane-1.0.1/.debbuild/ -iname "*.deb" -exec cp {} /emane_install_debs
      \;
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:17.10
  Name: emane_stage
  Platform: ""
  SourceCode: FROM ubuntu:17.10 as emane_stage
- BaseName: ubuntu:17.10
  Commands:
  - Env:
    - Key: SCREEN_WIDTH
      Value: "1280"
    Name: env
  - Env:
    - Key: SCREEN_HEIGHT
      Value: "800"
    Name: env
  - Env:
    - Key: SCREEN_DEPTH
      Value: "16"
    Name: env
  - Env:
    - Key: PASSWORD
      Value: coreemu
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -qq &&     apt-get install --no-install-recommends -y openbox
      obconf git x11vnc xvfb  wget python unzip         bridge-utils ebtables iproute2
      iproute2 iproute libev4 libreadline6         libtk-img tk8.5 dirmngr net-tools
      tcpdump xterm        feh tint2 python-numpy logrotate ca-certificates libprotobuf10         socat
      netcat iptables         graphicsmagick-imagemagick-compat &&         rm -rf
      /var/lib/apt/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - packages/quagga-mr_0.99.21mr2.2_amd64.deb
    - /tmp
  - CmdLine:
    - dpkg -i /tmp/quagga-mr_0.99.21mr2.2_amd64.deb && rm /tmp/quagga-mr_0.99.21mr2.2_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.vnc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && git clone https://github.com/kanaka/noVNC.git &&     cd noVNC/utils
      && git clone https://github.com/kanaka/websockify websockify
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://eriberto.pro.br/core/ stretch main\ndeb-src http://eriberto.pro.br/core/
      stretch main" >> /etc/apt/sources.list.d/core.list &&     apt-key adv --keyserver
      pgp.surfnet.nl --recv-keys 04ebe9ef &&     apt-get -q update && apt-get -q -y
      install --no-install-recommends         core-network core-network-daemon &&
      apt-get -q -y install tshark         net-tools rox-filer         xorp bird openssh-client
      openssh-server isc-dhcp-server vsftpd apache2 tcpdump         radvd at ucarp
      openvpn ipsec-tools racoon traceroute mgen wireshark-gtk         supervisor
      python-lxml python-protobuf &&         rm -rf /var/lib/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/wireshark-gtk /usr/bin/wireshark
    Name: run
    PrependShell: true
  - Chown: ""
    From: emane_stage
    Name: copy
    SourcesAndDest:
    - /emane_install_debs/
    - /tmp/emane_install_debs
  - CmdLine:
    - dpkg -i /tmp/emane_install_debs/*.deb && rm -rf /tmp/emane_install_debs
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/noVNC && ln -sf vnc.html index.html
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bg/bg.jpg
    - /root/.config/bg.jpg
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/
    - /root/.config/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/supervisor/conf.d
    - /etc/supervisor/conf.d
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/shared
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "5900"
  - Chown: ""
    From: ipython_stage
    Name: copy
    SourcesAndDest:
    - /jupyter/.venv
    - /jupyter/.venv
  - Name: expose
    Ports:
    - "9999"
  - CmdLine:
    - '"/entrypoint.sh"'
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:17.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.10
