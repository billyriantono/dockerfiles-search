MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Jak Spalding <jak@jak.io>
    Name: maintainer
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - CmdLine:
    - apt update && apt install -y curl wget zip git
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb   &&
      dpkg -i erlang-solutions_1.0_all.deb   && apt update   && apt install -y esl-erlang
      elixir nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/thoughtbot/constable/archive/master.zip   && unzip master.zip
      && mv -T constable-master /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.rebar --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix deps.get --only-prod
    Name: run
    PrependShell: true
  - CmdLine:
    - mix deps.compile
    Name: run
    PrependShell: true
  - CmdLine:
    - mix compile
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - mix compile.protocols
    Name: run
    PrependShell: true
  - CmdLine:
    - elixir
    - -pa
    - _build/prod/consolidated
    - -S
    - mix
    - phoenix.server
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
