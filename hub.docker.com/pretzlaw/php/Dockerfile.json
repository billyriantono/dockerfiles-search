{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli",
      "SourceCode": "FROM php:7.1-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli"
      },
      "Commands": [
        {
          "Maintainer": "Mike Pretzlaw \u003cmail@mike-pretzlaw.de\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         libgmp-dev         libxml2-dev         zlib1g-dev         libncurses5-dev         libldb-dev         libldap2-dev         libicu-dev         libmemcached-dev         libcurl4-openssl-dev         libssl-dev         libsqlite3-dev         php-pear         curl         ssmtp         mysql-client         git         subversion         wget \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     wget https://getcomposer.org/download/1.2.4/composer.phar -O /usr/local/bin/composer \u0026\u0026     chmod a+rx /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \u0026\u0026     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \u0026\u0026     docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \u0026\u0026     docker-php-ext-configure mysqli --with-mysqli=mysqlnd \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/lib \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install mysqli \u0026\u0026     docker-php-ext-install pdo_sqlite \u0026\u0026     docker-php-ext-install ldap \u0026\u0026     docker-php-ext-install soap \u0026\u0026     docker-php-ext-install intl \u0026\u0026     docker-php-ext-install mcrypt \u0026\u0026     docker-php-ext-install gd \u0026\u0026     docker-php-ext-install gmp \u0026\u0026     docker-php-ext-install bcmath \u0026\u0026     docker-php-ext-install mbstring \u0026\u0026     docker-php-ext-install zip \u0026\u0026     docker-php-ext-install pcntl \u0026\u0026     docker-php-ext-install ftp \u0026\u0026     docker-php-ext-install sockets \u0026\u0026     pecl install mongodb \u0026\u0026     pecl install memcached \u0026\u0026     pecl install redis \u0026\u0026     pecl install xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://www.zlib.net/zlib-1.2.11.tar.gz",
            "/tmp/zlib.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "tar zxpf /tmp/zlib.tar.gz -C /tmp \u0026\u0026     cd /tmp/zlib-1.2.11 \u0026\u0026     ./configure --prefix=/usr/local/zlib \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     rm -Rf /tmp/zlib-1.2.11 \u0026\u0026     rm /tmp/zlib.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOCALTIME",
              "Value": "Europe/Paris"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'sendmail_path = /usr/sbin/ssmtp -t' \u003e\u003e $PHP_INI_DIR/conf.d/00-default.ini \u0026\u0026     chmod a+w -R $PHP_INI_DIR/conf.d/ /etc/ssmtp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "groupadd -og 999 docker \u0026\u0026 usermod -a -G docker www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\\#umask 022/umask 002/' /etc/skel/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -d /home/www-data -s /bin/bash www-data     \u0026\u0026 cp -av /etc/skel /home/www-data     \u0026\u0026 mv /var/www /home/www-data/www     \u0026\u0026 ln -s /home/www-data/www /var/www     \u0026\u0026 chown -R www-data:www-data /home/www-data"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}