MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Key: CLOUD_SDK_VERSION
    Name: arg
    Value: 254.0.0
  - Env:
    - Key: CLOUD_SDK_VERSION
      Value: $CLOUD_SDK_VERSION
    Name: env
  - CmdLine:
    - apk add --no-cache curl python python3 py-crcmod py-pip python-dev libffi-dev
      bash libc6-compat openssh-client openssl-dev git gnupg rsync coreutils gcc libc-dev
      make
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /google-cloud-sdk/bin:$PATH
    Name: env
  - CmdLine:
    - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz
      &&     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz &&     rm
      google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz &&     ln -s /lib
      /lib64 &&     gcloud config set core/disable_usage_reporting true &&     gcloud
      config set component_manager/disable_update_check true &&     gcloud config
      set metrics/environment github_docker_image &&     gcloud --version
    Name: run
    PrependShell: true
  - CmdLine:
    - export KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)   &&
      curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl   &&
      chmod u+x kubectl && mv kubectl /usr/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/
      | grep -o -e 'docker-[.0-9]*-ce\.tgz' | sort -r | head -n 1)   && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}"   &&
      curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz
      "${DOCKER_URL}"   && tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/*
      /usr/bin   && rm -rf /tmp/docker /tmp/docker.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m ensurepip --default-pip && pip install docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --output /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-git-crypt/master/sgerrand.rsa.pub
      &&   curl -LO https://github.com/sgerrand/alpine-pkg-git-crypt/releases/download/0.6.0-r1/git-crypt-0.6.0-r1.apk
      &&   apk add --no-cache git-crypt-0.6.0-r1.apk &&   rm git-crypt-0.6.0-r1.apk
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
