{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4",
      "SourceCode": "FROM ruby:2.4",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4"
      },
      "Commands": [
        {
          "Maintainer": "yamaguchi@vic.co.jp",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "GEOS_VER",
              "Value": "3.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROJ_VER",
              "Value": "4.9.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GDAL_VER",
              "Value": "2.1.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl http://download.osgeo.org/geos/geos-${GEOS_VER}.tar.bz2 | tar jxf -  \u0026\u0026 cd geos-${GEOS_VER}  \u0026\u0026 ./configure  \u0026\u0026 make -j $(nproc)  \u0026\u0026 make install  \u0026\u0026 cd ..  \u0026\u0026 rm -rf geos-${GEOS_VER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://download.osgeo.org/proj/proj-${PROJ_VER}.tar.gz | tar zxf -  \u0026\u0026 cd proj-${PROJ_VER}  \u0026\u0026 ./configure  \u0026\u0026 make -j $(nproc)  \u0026\u0026 make install  \u0026\u0026 cd ..  \u0026\u0026 rm -rf proj-${PROJ_VER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://download.osgeo.org/gdal/${GDAL_VER}/gdal-${GDAL_VER}.tar.gz | tar zxf -  \u0026\u0026 cd gdal-${GDAL_VER}  \u0026\u0026 ./configure  \u0026\u0026 make -j $(nproc)  \u0026\u0026 make install  \u0026\u0026 cd ..  \u0026\u0026 rm -rf gdal-${GDAL_VER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://deb.debian.org/debian unstable main contrib non-free\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get upgrade -y  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install         -y --no-install-recommends         postgresql-client         nodejs         npm         gfortran         unzip  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10  \u0026\u0026 npm install -g bower uglify-es  \u0026\u0026 npm cache clean  \u0026\u0026 echo '{ \"allow_root\": true }' \u003e /root/.bowerrc  \u0026\u0026 gem update --system"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}