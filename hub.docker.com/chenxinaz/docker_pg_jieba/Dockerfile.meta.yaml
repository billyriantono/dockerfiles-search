MetaArgs: null
Stages:
- BaseName: postgres:alpine
  Commands:
  - Key: CN_MIRROR
    Name: arg
    Value: "0"
  - CmdLine:
    - if [ $CN_MIRROR = 1 ] ; then OS_VER=$(grep main /etc/apk/repositories | sed
      's#/#\n#g' | grep "v[0-9]\.[0-9]")   && echo "using mirrors for $OS_VER"   &&
      echo https://mirrors.ustc.edu.cn/alpine/$OS_VER/main/ > /etc/apk/repositories;
      fi
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tca-certificates     cmake
      \    git \t\topenssl \t\ttar   && git clone https://github.com/jaiminpan/pg_jieba
      \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tg++ \t\tlibc-dev \t\tmake
      \    postgresql-dev \t&& apk add --no-cache --virtual .rundeps \t\tlibstdc++
      \  && cd /   && cd pg_jieba   && git submodule update --init --recursive   &&
      mkdir build   && cd build   && cmake ..   && make   && make install   && echo
      -e \"  \\n  echo \\\"shared_preload_libraries = 'pg_jieba.so'\\\" >> /var/lib/postgresql/data/postgresql.conf\"
      \  > /docker-entrypoint-initdb.d/init-dict.sh   && echo -e \"CREATE EXTENSION
      pg_jieba;\" > /docker-entrypoint-initdb.d/init-jieba.sql     && apk del .build-deps
      .fetch-deps \t&& rm -rf \t\t/usr/src/postgresql \t\t/pg_jieba \t&& find /usr/local
      -name '*.a' -delete"
    Name: run
    PrependShell: true
  From:
    Image: postgres:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM postgres:alpine
