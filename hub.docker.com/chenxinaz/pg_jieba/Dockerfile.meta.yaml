MetaArgs: null
Stages:
- BaseName: postgres
  Commands:
  - Key: CN_MIRROR
    Name: arg
    Value: "0"
  - CmdLine:
    - if [ $CN_MIRROR = 1 ] ; then DEBIAN_VERSION=$(dpkg --status tzdata|grep Provides|cut
      -f2 -d'-') && echo "using mirrors for $DEBIAN_VERSION" && echo "deb http://ftp.cn.debian.org/debian/
      $DEBIAN_VERSION main non-free contrib \ndeb http://ftp.cn.debian.org/debian/
      $DEBIAN_VERSION-updates main non-free contrib \ndeb http://ftp.cn.debian.org/debian/
      $DEBIAN_VERSION-backports main non-free contrib \ndeb http://ftp.cn.debian.org/debian-security/
      $DEBIAN_VERSION/updates main non-free contrib \ndeb-src http://ftp.cn.debian.org/debian/
      $DEBIAN_VERSION main non-free contrib \ndeb-src http://ftp.cn.debian.org/debian/
      $DEBIAN_VERSION-updates main non-free contrib \ndeb-src http://ftp.cn.debian.org/debian/
      $DEBIAN_VERSION-backports main non-free contrib \ndeb-src http://ftp.cn.debian.org/debian-security/
      $DEBIAN_VERSION/updates main non-free contrib" > /etc/apt/sources.list; else
      echo "No mirror"; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update   && apt-get install -y --no-install-recommends       postgresql-server-dev-$PG_MAJOR
      \      gcc       make       libc-dev       g++       git       cmake       curl
      \      ca-certificates       openssl \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/jaiminpan/pg_jieba   && cd /pg_jieba   && git submodule
      update --init --recursive
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /pg_jieba   && mkdir -p build   && cd build   && curl -L https://raw.githubusercontent.com/Kitware/CMake/ce629c5ddeb7d4a87ac287c293fb164099812ca2/Modules/FindPostgreSQL.cmake
      > $(find /usr -name "FindPostgreSQL.cmake")   && cmake ..   && make   && make
      install   && echo "  \n  echo \"shared_preload_libraries = 'pg_jieba.so'\" >>
      /var/lib/postgresql/data/postgresql.conf"   > /docker-entrypoint-initdb.d/init-dict.sh   &&
      echo "CREATE EXTENSION pg_jieba;" > /docker-entrypoint-initdb.d/init-jieba.sql   &&
      apt-get purge -y gcc make libc-dev postgresql-server-dev-$PG_MAJOR g++ git cmake
      curl  && apt-get autoremove -y   && rm -rf     /pg_jieba
    Name: run
    PrependShell: true
  From:
    Image: postgres
  Name: ""
  Platform: ""
  SourceCode: FROM postgres
