MetaArgs: null
Stages:
- As: build
  BaseName: fscm/debian:buster
  Commands:
  - Key: BIND_VERSION
    Name: arg
    Value: '"9.14.7"'
  - Key: BUSYBOX_VERSION
    Name: arg
    Value: '"1.31.0"'
  - Key: OPENSSL_VERSION
    Name: arg
    Value: '"1.1.1d"'
  - Key: UNBOUND_VERSION
    Name: arg
    Value: '"1.9.4"'
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/
    - /root/
  - Name: workdir
    Path: /root
  - CmdLine:
    - apt-get -qq update &&   apt-get -qq -y -o=Dpkg::Use-Pty=0 --no-install-recommends
      install     ca-certificates     curl     dpkg-dev     file     gcc     libc-dev     libcap-dev     libevent-dev     libexpat1-dev     libfstrm-dev     libprotobuf-c-dev     make     nettle-dev     protobuf-c-compiler     tar     >
      /dev/null 2>&1 &&   __GNU_TYPE__=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)
      &&   __NPROC__=$(getconf _NPROCESSORS_ONLN) &&   for folder in bin sbin lib
      lib64; do install --directory --owner=root --group=root --mode=0755 /build/usr/${folder};
      ln -s usr/${folder} /build/${folder}; done &&   for folder in tmp data; do install
      --directory --owner=root --group=root --mode=1777 /build/${folder}; done &&   install
      --owner=root --group=root --mode=0755 --target-directory=/build/usr/bin /root/tests/*
      &&   install --owner=root --group=root --mode=0755 --target-directory=/build/usr/bin
      /root/scripts/* &&   curl --silent --location --retry 3 "https://busybox.net/downloads/binaries/${BUSYBOX_VERSION}-i686-uclibc/busybox"     -o
      /build/usr/bin/busybox &&   chmod +x /build/usr/bin/busybox &&   for p in [
      awk basename bc cat chroot chmod cp date diff du env getopt grep gzip hostname
      id kill killall ln ls mkdir mknod mktemp more mv nproc ping printf ps pwd rm
      sed sh stty; do ln /build/usr/bin/busybox /build/usr/bin/${p}; done &&   for
      p in arp ip ipaddr nameif; do ln /build/usr/bin/busybox /build/usr/sbin/${p};
      done &&   install --directory /src/openssl &&   curl --silent --location --retry
      3 "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz"     | tar
      xz --no-same-owner --strip-components=1 -C /src/openssl &&   cd /src/openssl
      &&   ./config -Wl,-rpath=/usr/lib/${__GNU_TYPE__}     --prefix="/usr"     --openssldir="/etc/ssl"     --libdir="/usr/lib/${__GNU_TYPE__}"     no-idea     no-mdc2     no-rc5     no-zlib     no-ssl3     no-ssl3-method     enable-rfc3779     enable-cms     enable-ec_nistp_64_gcc_128
      &&   make --silent -j "${__NPROC__}" &&   make --silent install_sw install_ssldirs
      DESTDIR=/build INSTALL='install -p' &&   find /build -depth -type f -name c_rehash
      -delete &&   cd - &&   rm -f /usr/lib/x86_64-linux-gnu/libssl.* /usr/lib/x86_64-linux-gnu/libcrypto.*
      /usr/bin/openssl &&   ln -s /build/usr/lib/x86_64-linux-gnu/libssl.* /usr/lib/x86_64-linux-gnu/
      &&   ln -s /build/usr/lib/x86_64-linux-gnu/libcrypto.* /usr/lib/x86_64-linux-gnu/
      &&   ln -s /build/usr/bin/openssl /usr/bin/openssl &&   ln -s /build/usr/include/openssl
      /usr/include/openssl &&   install --directory /src/bind &&   curl --silent --location
      --retry 3 "https://downloads.isc.org/isc/bind${BIND_VERSION%%.*}/${BIND_VERSION}/bind-${BIND_VERSION}.tar.gz"     |
      tar xz --no-same-owner --strip-components=1 -C /src/bind/ &&   cd /src/bind
      &&   ./configure LDFLAGS="-Wl,-rpath,/usr/lib/${__GNU_TYPE__}"     --quiet     --prefix="/usr"     --libdir="/usr/lib/${__GNU_TYPE__}"     --with-gssapi=no     --with-libtool     --with-openssl="/usr"     --without-libxml2     --without-libjson     --without-lmdb     --without-python     --disable-epoll     --disable-kqueue     --disable-devpoll     --disable-linux-caps     --disable-symtable     --enable-shared     --enable-dnstap
      &&   make --silent -j "${__NPROC__}" --directory=lib/isc &&   make --silent
      -j "${__NPROC__}" --directory=lib/dns &&   make --silent -j "${__NPROC__}" --directory=lib/isccfg
      &&   make --silent -j "${__NPROC__}" --directory=lib/irs &&   make --silent
      -j "${__NPROC__}" --directory=lib/ns &&   make --silent -j "${__NPROC__}" --directory=lib/bind9
      &&   make --silent -j "${__NPROC__}" --directory=bin/dig &&   make --silent
      --directory=lib/isc install DESTDIR=/build INSTALL='install -p' &&   make --silent
      --directory=lib/dns install DESTDIR=/build INSTALL='install -p' &&   make --silent
      --directory=lib/isccfg install DESTDIR=/build INSTALL='install -p' &&   make
      --silent --directory=lib/irs install DESTDIR=/build INSTALL='install -p' &&   make
      --silent --directory=lib/ns install DESTDIR=/build INSTALL='install -p' &&   make
      --silent --directory=lib/bind9 install DESTDIR=/build INSTALL='install -p' &&   make
      --silent --directory=bin/dig install DESTDIR=/build INSTALL='install -p' &&   cd
      - &&   install --directory /src/unbound &&   curl --silent --location --retry
      3 "https://nlnetlabs.nl/downloads/unbound/unbound-${UNBOUND_VERSION}.tar.gz"     |
      tar xz --no-same-owner --strip-components=1 -C /src/unbound/ &&   cd /src/unbound
      &&   ./configure LDFLAGS="-Wl,-rpath,/usr/lib/${__GNU_TYPE__}"     --quiet     --prefix="/usr"     --libdir="/usr/lib/${__GNU_TYPE__}"     --sysconfdir="/data"     --with-pidfile="/tmp/unbound.pid"     --with-rootkey-file="/data/unbound/root.key"     --with-libevent     --with-pthreads     --with-chroot-dir=""     --with-dnstap-socket-path="/tmp/dnstap.sock"     --without-pyunbound     --without-pythonmodule     --enable-subnet     --enable-dnstap     --enable-event-api     --enable-static=no
      &&   make --silent -j "${__NPROC__}" &&   make --silent install DESTDIR=/build
      INSTALL='install -p' &&   find /build/data -depth -type d -name unbound -exec
      rm -rf '{}' + &&   find /build -depth \( \( -type d -a \( -name include -o -name
      pkgconfig -o -name share \) \) -o \( -type f -a \( -name '*.a' -o -name '*.la'
      -o -name '*.dist' \) \) \) -exec rm -rf '{}' + &&   cd - &&   install --directory
      --owner=root --group=root --mode=0755 /build/run/systemd &&   echo 'docker'
      > /build/run/systemd/container &&   curl --silent --location --retry 3 "https://raw.githubusercontent.com/fscm/tools/master/lddcp/lddcp"
      -o ./lddcp &&   chmod +x ./lddcp &&   ./lddcp $(for f in `find /build/ -type
      f -executable`; do echo "-p $f "; done) $(for f in `find /lib/x86_64-linux-gnu/
      \( -name 'libnss*' -o -name 'libresolv*' \)`; do echo "-l $f "; done) -d /build
      &&   install --owner=root --group=root --mode=0644 --target-directory=/build/etc/ssl/certs
      /etc/ssl/certs/*.pem &&   chroot /build openssl rehash /etc/ssl/certs &&   install
      --owner=root --group=root --mode=0644 /etc/ssl/certs/ca-certificates.crt /build/etc/ssl/certs
    Name: run
    PrependShell: true
  From:
    Image: fscm/debian:buster
  Name: build
  Platform: ""
  SourceCode: FROM fscm/debian:buster as build
- BaseName: scratch
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Frederico Martins <https://hub.docker.com/u/fscm/>"'
    Name: label
  - Name: expose
    Ports:
    - 53/udp
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build
    - .
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - /usr/bin/run
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - help
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
