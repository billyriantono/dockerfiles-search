MetaArgs: null
Stages:
- BaseName: golang:latest
  Commands:
  - CmdLine:
    - apt-get update && apt-get -y install p7zip-full mingw-w64      &&  go get -u
      github.com/fogleman/serve     && go get -u "github.com/fatih/color"     && go
      get -u "github.com/Ne0nd0g/merlin/pkg/banner"     && go get -u "github.com/Ne0nd0g/merlin/pkg/servers/http2"     &&
      go get -u "github.com/Ne0nd0g/merlin/pkg/logging"     && go get -u "github.com/Ne0nd0g/merlin/pkg/core"     &&
      go get -u "github.com/Ne0nd0g/merlin/pkg/cli"     && go get -u "github.com/Ne0nd0g/merlin/pkg"     &&
      git clone https://github.com/Ne0nd0g/merlin.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: merlin
  - CmdLine:
    - mkdir -p /go/merlin/data/x509/     && openssl req -subj '/C=US/ST=New York/L=Brooklyn/O=example/CN=example.com'
      -new -newkey rsa:4096 -days 3650 -nodes -x509 -keyout /go/merlin/data/x509/server.key
      -out /go/merlin/data/x509/server.crt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - make all && find . -type f -name "*-Linux-x64" -exec cp {} /go/merlin/ \;
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - serve -dir /go/merlin/data/temp/
    Name: cmd
    PrependShell: false
  From:
    Image: golang:latest
  Name: ""
  Platform: ""
  SourceCode: FROM golang:latest
