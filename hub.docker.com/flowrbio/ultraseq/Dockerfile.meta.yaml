MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: '"Samir B. Amin" <tweet:sbamin; sbamin.com/contact>'
    Name: maintainer
  - Labels:
    - Key: version
      Value: '"1.0-b2"'
    - Key: mode
      Value: '"devp version for GLASS"'
    - Key: description
      Value: '"docker image to run GLASS consortium WGS SNV and SV pipeline"'
    - Key: contributor1
      Value: '"flowr and ultraseq variant caller pipeline by Sahil Seth, tweet: sethsa"'
    - Key: contributor2
      Value: '"variant calling pipeline code by Hoon Kim, tweet: wisekh6"'
    - Key: website
      Value: '"http://glass-consortium.org"'
    - Key: code
      Value: '"http://odin.mdacc.tmc.edu/~rverhaak/resources"'
    - Key: contact
      Value: '"Dr. Roel GW Verhaak http://odin.mdacc.tmc.edu/~rverhaak/contact/ tweet:roelverhaak"'
    - Key: NOTICE
      Value: '"Third party license: Use of GATK and Mutect tools are subject to approval
        by GATK team at the Broad Institute, Cambridge, MA, USA. This docker image
        can not be deployed in public prior to getting appropriate licenses from the
        Broad Institute to use GATK and mutect for use with GLASS consortium related
        analysis pipelines."'
    Name: label
  - CmdLine:
    - "apt-get update && \tapt-get install --yes --no-install-recommends build-essential
      python-software-properties \tpython-setuptools sudo locales ca-certificates
      \tsoftware-properties-common cmake libcurl4-openssl-dev wget curl \tgdebi tar
      zip unzip rsync screen nano vim dos2unix bc  \tlibxml2-dev libssl-dev  \tdpkg-dev
      libx11-dev libxpm-dev libxft-dev libxext-dev libpng-dev libjpeg-dev binutils
      \ \tlibncurses-dev zlib1g-dev  \truby libarchive-zip-perl libdbd-mysql-perl
      libjson-perl && \tadd-apt-repository --yes ppa:git-core/ppa && \tapt-get update
      && \tapt-get install --yes --no-install-recommends git && \tapt-get clean &&
      \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/profile
    - /etc/
  - CmdLine:
    - "echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \tlocale-gen en_US.utf8 &&
      \t/usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - "useradd -m -d /home/glass -s /bin/bash -c \"GLASS User\" -U glass && \tusermod
      -a -G staff,sudo glass && \techo \"%sudo  ALL=(ALL) NOPASSWD:ALL\" | (EDITOR=\"tee
      -a\" visudo) && \tid -a glass"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /opt && \twget --no-check-certificate https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
      -O /opt/miniconda.sh && \tbash /opt/miniconda.sh -b -p /opt/miniconda -f &&
      \trm -f /opt/miniconda.sh && \techo 'pathmunge /opt/miniconda/bin' >> /etc/profile.d/3_ngspaths.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "add-apt-repository --yes ppa:webupd8team/java && \tapt-get update && \techo
      oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      && \tapt-get install --yes --no-install-recommends oracle-java7-installer &&
      \techo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | /usr/bin/debconf-set-selections && \tapt-get install --yes --no-install-recommends
      oracle-java8-installer && \tmkdir -p /opt/java && cd /opt/java && \tln -s /usr/lib/jvm/java-8-oracle/jre
      jre8 && \tln -s /usr/lib/jvm/java-7-oracle/jre jre7 && \tapt-get install --yes
      --no-install-recommends oracle-java8-set-default && \tapt-get clean && \trm
      -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/miniconda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    - Key: J2SDKDIR
      Value: /usr/lib/jvm/java-8-oracle
    - Key: J2REDIR
      Value: /usr/lib/jvm/java-8-oracle/jre
    Name: env
  - CmdLine:
    - "echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/\" >> /etc/apt/sources.list
      && \tgpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 && \tgpg -a --export
      E084DAB9 | apt-key add - && \tapt-get update && \tapt-get install --yes --no-install-recommends
      r-base r-base-dev && \tapt-get clean && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /opt && \tmkdir -p /scratch && \tcd /opt && \tmkdir -p /usr/share/doc/R-3.3.0/html
      && \tRscript -e 'install.packages(c(\"httr\", \"git2r\", \"stringr\", \"dplyr\",
      \"tidyr\", \"devtools\", \"params\", \"flowr\", \"funr\"), repos = c(CRAN=\"http://cran.rstudio.com\"))'
      && \tRscript -e 'devtools::install_github(\"glass-consortium/ultraseq\", subdir
      = \"ultraseq\", ref=\"master\")' && \tmkdir -p /root/bin && \tRscript -e 'library(flowr);setup()'
      && \trm -f /opt/Rplots.pdf && \t/usr/local/lib/R/site-library/flowr/scripts/flowr
      run x=sleep_pipe platform=local execute=TRUE && \trm -f /root/Rplots.pdf &&
      \tln -s /usr/local/lib/R/site-library/flowr/scripts/flowr /usr/local/bin/flowr"
    Name: run
    PrependShell: true
  - Name: user
    User: glass
  - CmdLine:
    - "mkdir -p /home/glass/bin && \tRscript -e 'library(flowr);setup()' && \t/usr/local/bin/flowr
      run x=sleep_pipe platform=local execute=TRUE && \trm -f /home/glass/Rplots.pdf"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - "mkdir -p /opt/samtools && cd /opt/samtools && \twget --no-check-certificate
      https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2
      && \ttar xvjf samtools-1.3.1.tar.bz2 && \tcd samtools-1.3.1 && make && make
      prefix=/opt/samtools/samtools install && \techo 'pathmunge /opt/samtools/samtools/bin
      after' >> /etc/profile.d/3_ngspaths.sh && \trm -rf /opt/samtools/samtools-1.3.1
      /opt/samtools/samtools-1.3.1.tar.bz2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt/samtools && \twget --no-check-certificate https://github.com/samtools/bcftools/releases/download/1.3.1/bcftools-1.3.1.tar.bz2
      && \ttar xvjf bcftools-1.3.1.tar.bz2 && \tcd bcftools-1.3.1 && make && make
      prefix=/opt/samtools/bcftools install && \techo 'pathmunge /opt/samtools/bcftools/bin
      after' >> /etc/profile.d/3_ngspaths.sh && \trm -rf /opt/samtools/bcftools-1.3.1
      /opt/samtools/bcftools-1.3.1.tar.bz2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt/samtools && \twget --no-check-certificate https://github.com/samtools/htslib/releases/download/1.3.1/htslib-1.3.1.tar.bz2
      && \ttar xvjf htslib-1.3.1.tar.bz2 && \tcd htslib-1.3.1 && make && make prefix=/opt/samtools/htslib
      install && \techo 'pathmunge /opt/samtools/htslib/bin after' >> /etc/profile.d/3_ngspaths.sh
      && \trm -rf /opt/samtools/htslib-1.3.1 /opt/samtools/htslib-1.3.1.tar.bz2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt && \twget --no-check-certificate https://github.com/lh3/bwa/releases/download/v0.7.15/bwakit-0.7.15_x64-linux.tar.bz2
      -O bwakit.tar.bz2 && \ttar xvjf bwakit.tar.bz2 && \tmv bwa.kit bwa && \techo
      'pathmunge /opt/bwa after' >> /etc/profile.d/3_ngspaths.sh && \trm -rf /opt/bwakit.tar.bz2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt && \twget --no-check-certificate https://github.com/arq5x/bedtools2/releases/download/v2.26.0/bedtools-2.26.0.tar.gz
      -O /opt/bedtools.tar.gz && \ttar xvzf bedtools.tar.gz && cd /opt/bedtools2 &&
      \tmake && \techo 'pathmunge /opt/bedtools2/bin after' >> /etc/profile.d/3_ngspaths.sh
      && \trm -rf /opt/bedtools.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /opt/picard && \twget --no-check-certificate https://github.com/broadinstitute/picard/releases/download/2.5.0/picard-tools-2.5.0.zip
      -O /opt/picard2.zip && \tunzip /opt/picard2.zip -d /opt/picard && cd /opt/picard
      && \tln -s picard-tools-2.5.0 default && \techo 'pathmunge /opt/picard/default
      after' >> /etc/profile.d/3_ngspaths.sh && \trm -rf /opt/picard2.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "R CMD javareconf && \tRscript -e 'install.packages(\"rJava\", repos = c(CRAN=\"http://cran.rstudio.com\"))'"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt && \tgit clone git://github.com/pezmaster31/bamtools.git && \tcd bamtools
      && \tgit checkout tags/v2.4.0 -b v2.4.0 && \tmkdir -p build && cd build && \tcmake
      .. && make && cd .. && \techo 'pathmunge /opt/bamtools/bin after' >> /etc/profile.d/3_ngspaths.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "Rscript -e \"source('http://bioconductor.org/biocLite.R');biocLite('copynumber',
      suppressUpdates=TRUE)\" && \tRscript -e 'install.packages(\"sequenza\", repos
      = c(CRAN=\"http://cran.rstudio.com\"))' && \tmkdir -p /opt/bin && \twget --no-check-certificate
      https://raw.githubusercontent.com/cran/sequenza/master/exec/sequenza-utils.py
      -O /opt/bin/sequenza-utils.py && \tchmod 755 /opt/bin/sequenza-utils.py && \techo
      'pathmunge /opt/bin after' >> /etc/profile.d/3_ngspaths.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && \tapt-get install --yes gcc-4.8 g++-4.8 && \tupdate-alternatives
      --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 10 && \tupdate-alternatives --install
      /usr/bin/gcc gcc /usr/bin/gcc-5 20 && \tupdate-alternatives --install /usr/bin/g++
      g++ /usr/bin/g++-4.8 10 && \tupdate-alternatives --install /usr/bin/g++ g++
      /usr/bin/g++-5 20 && \tupdate-alternatives --install /usr/bin/cc cc /usr/bin/gcc
      30 && \tupdate-alternatives --set cc /usr/bin/gcc && \tupdate-alternatives --install
      /usr/bin/c++ c++ /usr/bin/g++ 30 && \tupdate-alternatives --set c++ /usr/bin/g++
      && \tupdate-alternatives --display gcc && \tupdate-alternatives --display g++
      && \tupdate-alternatives --set gcc \"/usr/bin/gcc-4.8\" && \tupdate-alternatives
      --set g++ \"/usr/bin/g++-4.8\" && \tupdate-alternatives --display gcc && \tupdate-alternatives
      --display g++"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /opt/root6 && \tcd /opt/root6 && \twget --no-check-certificate https://root.cern.ch/download/root_v6.06.06.source.tar.gz
      && \twget --no-check-certificate https://root.cern.ch/download/root_v6.06.06.Linux-ubuntu14-x86_64-gcc4.8.tar.gz
      && \ttar xvzf root_v6.06.06.source.tar.gz && \trm -f root_v6.06.06.source.tar.gz
      && \tcd root-6.06.06 && \t./configure && \tmake -j2 && \techo 'pathmunge /opt/root6/root-6.06.06/bin
      after' >> /etc/profile.d/3_ngspaths.sh"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/1_thisroot.sh
    - /etc/profile.d/
  - Env:
    - Key: PATH
      Value: /opt/root6/root-6.06.06/bin:$PATH
    - Key: ROOTSYS
      Value: /opt/root6/root-6.06.06
    - Key: LD_LIBRARY_PATH
      Value: /opt/root6/root-6.06.06/lib"${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
    - Key: DYLD_LIBRARY_PATH
      Value: /opt/root6/root-6.06.06/lib"${DYLD_LIBRARY_PATH:+:$DYLD_LIBRARY_PATH}"
    - Key: LIBPATH
      Value: /opt/root6/root-6.06.06/lib"${LIBPATH:+:$LIBPATH}"
    - Key: SHLIB_PATH
      Value: /opt/root6/root-6.06.06/lib"${SHLIB_PATH:+:$SHLIB_PATH}"
    - Key: PYTHONPATH
      Value: /opt/root6/root-6.06.06/lib"${PYTHONPATH:+:$PYTHONPATH}"
    - Key: CMAKE_PREFIX_PATH
      Value: /opt/root6/root-6.06.06"${CMAKE_PREFIX_PATH:+:$CMAKE_PREFIX_PATH}"
    Name: env
  - CmdLine:
    - "conda install --yes -c bioconda pysam=0.9.1 gawk && \tconda install --yes numpy
      scipy && \tcd /opt && \tgit clone --recursive https://github.com/hall-lab/speedseq
      && \tcd speedseq && \trm -f Makefile"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/speedseq_mkfile
    - /opt/speedseq/Makefile
  - CmdLine:
    - "cd /opt/speedseq && \tmake && \tcat install.log && \techo 'pathmunge /opt/speedseq/bin
      after' >> /etc/profile.d/3_ngspaths.sh && \tmkdir -p /scratch/annotations/cnvnator_chroms
      && \trm -f /opt/speedseq/bin/speedseq.config"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/speedseq.config
    - /opt/speedseq/bin/
  - CmdLine:
    - "mkdir /opt/cnvnator && \tcd /opt/cnvnator && \twget --no-check-certificate
      https://github.com/abyzovlab/CNVnator/releases/download/v0.3.2/CNVnator_v0.3.2.zip
      && \tunzip CNVnator_v0.3.2.zip && \tcd CNVnator_v0.3.2 && \tcd src/samtools
      && \tmake && \tcd .. && \tmake && \tln -s cnvnator cnvnator-multi && \techo
      'pathmunge /opt/cnvnator/CNVnator_v0.3.2 after' >> /etc/profile.d/3_ngspaths.sh
      && \techo 'pathmunge /opt/cnvnator/CNVnator_v0.3.2/src after' >> /etc/profile.d/3_ngspaths.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /opt && \tgit clone https://github.com/Linuxbrew/brew.git /opt/linuxbrew"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/2_brewconf.sh
    - /etc/profile.d/
  - Env:
    - Key: PATH
      Value: /opt/linuxbrew/bin:$PATH
    - Key: MANPATH
      Value: /opt/linuxbrew/share/man"${MANPATH:+:$MANPATH}"
    - Key: INFOPATH
      Value: /opt/linuxbrew/share/info"${INFOPATH:+:$INFOPATH}"
    Name: env
  - CmdLine:
    - "/opt/linuxbrew/bin/brew tap homebrew/science && \t/opt/linuxbrew/bin/brew install
      htslib && \t/opt/linuxbrew/bin/brew tap chapmanb/homebrew-cbl && \twget --no-check-certificate
      -O - http://cpanmin.us | perl - --self-upgrade && \t/usr/local/bin/cpanm Archive::Extract
      CGI DBI Time::HiRes Archive::Tar Archive::Zip File::Copy::Recursive"
    Name: run
    PrependShell: true
  - CmdLine:
    - "/opt/linuxbrew/bin/brew install vep && \tmkdir -p /scratch/annotations/vep_cache"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /opt/gatk && \tmkdir -p /opt/mutect && \tmkdir -p /scratch/bundle
      && \tchgrp -R glass /scratch && \tchmod -R 775 /scratch"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get clean && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /scratch
  - Env:
    - Key: PATH
      Value: /opt/root6/root-6.06.06/bin:/opt/miniconda/bin:/opt/linuxbrew/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin:/opt/samtools/samtools/bin:/opt/samtools/bcftools/bin:/opt/samtools/htslib/bin:/opt/bwa:/opt/bedtools2/bin:/opt/picard/default:/opt/bamtools/bin:/opt/bin:/opt/speedseq/bin:/opt/cnvnator/CNVnator_v0.3.2:/opt/cnvnator/CNVnator_v0.3.2/src:/usr/local/gemini/bin
    Name: env
  - CmdLine: null
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
