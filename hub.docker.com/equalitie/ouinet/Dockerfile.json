{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     autoconf     automake     autopoint     build-essential     cmake     gettext     git     libgcrypt-dev     libidn11-dev     libssl-dev     libtool     libunistring-dev     pkg-config     rsync     texinfo     wget     zlib1g-dev  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget -q \"https://downloads.sourceforge.net/project/boost/boost/1.67.0/boost_1_67_0.tar.bz2\"  \u0026\u0026 tar -xf boost_1_67_0.tar.bz2  \u0026\u0026 cd boost_1_67_0  \u0026\u0026 ./bootstrap.sh  \u0026\u0026 ./b2 -j `nproc` -d+0 --link=shared          --with-system          --with-program_options          --with-test          --with-coroutine          --with-filesystem          --with-date_time          --with-regex          --with-iostreams          --prefix=/usr/local install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OUINET_VERSION",
          "Name": "arg",
          "Value": "v0.0.35"
        },
        {
          "CmdLine": [
            "git clone --recursive -b \"$OUINET_VERSION\" https://github.com/equalitie/ouinet.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/ouinet"
        },
        {
          "CmdLine": [
            "cmake /usr/local/src/ouinet  \u0026\u0026 env LANG=C.UTF-8 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r /usr/local/src/ouinet/repos/ repo-templates/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OUINET_DEBUG",
          "Name": "arg",
          "Value": "no"
        },
        {
          "CmdLine": [
            "if [ $OUINET_DEBUG != yes ]; then     strip injector client modules/obfs4proxy/obfs4proxy test/test-*         \u0026\u0026 find . -name '*.so' -exec strip '{}' +         \u0026\u0026 find . -wholename '*/libexec/*' -executable -type f -exec strip '{}' + ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OUINET_DOCKER_VERSION",
          "Name": "arg",
          "Value": "$OUINET_VERSION"
        },
        {
          "CmdLine": [
            "cd /usr/local/src/ouinet  \u0026\u0026 git fetch -t  \u0026\u0026 git checkout \"$OUINET_DOCKER_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/src/boost_1_67_0 /usr/local/src/boost  \u0026\u0026 /usr/local/src/ouinet/scripts/add-licenses-dir.sh /usr/local/src/ouinet ."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Key": "OUINET_DEBUG",
          "Name": "arg",
          "Value": "no"
        },
        {
          "Env": [
            {
              "Key": "OUINET_DEBUG",
              "Value": "$OUINET_DEBUG"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libc6     libgcc1     libssl1.1     libstdc++6     zlib1g         ca-certificates     $(echo $OUINET_DEBUG | sed -n 's/^yes$/gdb/p')         lsb-release     wget  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "I2PD_VERSION",
          "Name": "arg",
          "Value": "2.23.0"
        },
        {
          "CmdLine": [
            "wget -q -P /tmp \"https://github.com/PurpleI2P/i2pd/releases/download/${I2PD_VERSION}/i2pd_${I2PD_VERSION}-1$(lsb_release -sc)1_$(dpkg --print-architecture).deb\"  \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y     cron     logrotate     $(dpkg --info /tmp/i2pd_*.deb | sed -nE 's/^.*Depends: (.*)/\\1/p' | sed -E 's/( \\([^)]+\\))?,//g')  \u0026\u0026 dpkg -i /tmp/i2pd_*.deb  \u0026\u0026 rm -f /tmp/i2pd_*.deb  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/libboost_*",
            "/usr/local/lib/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/ouinet"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/ouinet/gcrypt/src/gcrypt/src/.libs/libgcrypt.so.20",
            "/opt/ouinet/gpg_error/out/lib/libgpg-error.so.0",
            "/opt/ouinet/modules/asio-ipfs/ipfs_bindings/libipfs_bindings.so",
            "/opt/ouinet/src/ouiservice/lampshade/lampshade_bindings/liblampshade_bindings.so",
            "/usr/local/lib/"
          ]
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/ouinet/injector",
            "/opt/ouinet/client",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/ouinet/modules/obfs4proxy/obfs4proxy",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/ouinet/test/test-*",
            "test/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/ouinet/repo-templates/",
            "repo-templates/"
          ]
        },
        {
          "CmdLine": [
            "echo \"$OUINET_DOCKER_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/src/ouinet/scripts/ouinet-wrapper.sh",
            "ouinet"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/ouinet/licenses/",
            "licenses/"
          ]
        },
        {
          "CmdLine": [
            "/opt/ouinet/ouinet"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}