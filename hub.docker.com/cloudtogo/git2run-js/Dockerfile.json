{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:9-alpine",
      "SourceCode": "FROM node:9-alpine",
      "Platform": "",
      "From": {
        "Image": "node:9-alpine"
      },
      "Commands": [
        {
          "Maintainer": "\u003cCloudToGo\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add git g++ gcc libgcc libstdc++ linux-headers make python nginx \u0026\u0026     apk update \u0026\u0026     mkdir -p /run/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/sass/sassc \u0026\u0026 cd sassc \u0026\u0026     git clone https://github.com/sass/libsass \u0026\u0026     SASS_LIBSASS_PATH=/sassc/libsass make \u0026\u0026     mv bin/sassc /usr/bin/sassc \u0026\u0026     cd ../ \u0026\u0026 rm -rf /sassc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SASS_BINARY_PATH",
              "Value": "/usr/lib/node_modules/node-sass/build/Release/binding.node"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/sass/node-sass.git \u0026\u0026     cd node-sass \u0026\u0026     git submodule update --init --recursive \u0026\u0026     npm install \u0026\u0026     node scripts/build -f \u0026\u0026     cd ../ \u0026\u0026 rm -rf node-sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch $HOME/.npmrc \u0026\u0026 echo \"sass_binary_cache=${SASS_BINARY_PATH}\" \u003e\u003e $HOME/.npmrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SKIP_SASS_BINARY_DOWNLOAD_FOR_CI",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SKIP_NODE_SASS_TESTS",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "80"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "demo/",
            "/home/demo/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "error/",
            "/home/error/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startup.sh",
            "/home/startup.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /home/startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "sh startup.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}