MetaArgs: null
Stages:
- BaseName: node:10.15.3
  Commands:
  - Maintainer: loveloper44@gmail.com
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y wget
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.0
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y openjdk-8-jdk &&     apt-get install
      -y ant &&     apt-get clean;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install ca-certificates-java &&     apt-get clean
      &&     update-ca-certificates -f;
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - CmdLine:
    - export JAVA_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/apis
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/content
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package*.json
    - /app/
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - index.js
    - /app
  - Name: expose
    Ports:
    - "1080"
  - CmdLine:
    - npm
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: node:10.15.3
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.15.3
