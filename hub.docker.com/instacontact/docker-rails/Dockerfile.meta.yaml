MetaArgs: null
Stages:
- BaseName: ubuntu:14.04.5
  Commands:
  - Env:
    - Key: DOCKER_BUCKET
      Value: '"download.docker.com"'
    - Key: DOCKER_VERSION
      Value: '"17.09.0-ce"'
    - Key: DOCKER_CHANNEL
      Value: '"stable"'
    - Key: DOCKER_SHA256
      Value: '"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647"'
    - Key: DIND_COMMIT
      Value: '"3b5fac462d21ca164b3778647420016315289034"'
    - Key: DOCKER_COMPOSE_VERSION
      Value: '"1.16.1"'
    - Key: GITVERSION_VERSION
      Value: '"3.6.5"'
    Name: env
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install software-properties-common
      -y --no-install-recommends    && apt-add-repository ppa:git-core/ppa     &&
      apt-get update     && apt-get install git=1:2.* -y --no-install-recommends    &&
      git version
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex     && echo ''Acquire::CompressionTypes::Order:: "gz";'' > /etc/apt/apt.conf.d/99use-gzip-compression     &&
      apt-get update     && apt-get install -y --no-install-recommends        wget=1.15-*
      python=2.7.* python2.7-dev=2.7.* fakeroot=1.20-* ca-certificates        tar=1.27.*
      gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.*        bzip2=1.0.* file=1:5.14-*
      g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.*        libbz2-dev=1.0.* libc6-dev=2.19-*
      libcurl4-openssl-dev=7.35.* libdb-dev=1:5.3.*        libevent-dev=2.0.* libffi-dev=3.1~*
      libgeoip-dev=1.6.* libglib2.0-dev=2.40.*        libjpeg-dev=8c-* libkrb5-dev=1.12+*
      liblzma-dev=5.1.*        libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.*
      libmysqlclient-dev=5.5.*        libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.*
      libreadline-dev=6.3-*        libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.*
      libwebp-dev=0.4.*        libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.*
      make=3.81-*        patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* unzip=6.0-*
      curl=7.35.*        e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.*        mono-mcs=3.2.*
      less=458-* groff=1.22.* libcurl4-openssl-dev=7.35.* liberror-perl=0.17-*    &&
      rm -rf /var/lib/apt/lists/*     && apt-get clean'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && wget "https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip"
      -O /tmp/GitVersion_${GITVERSION_VERSION}.zip     && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION}     &&
      unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION}     &&
      rm /tmp/GitVersion_${GITVERSION_VERSION}.zip     && echo "mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe
      /output json /showvariable \$1" >> /usr/local/bin/gitversion     && chmod +x
      /usr/local/bin/gitversion
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && curl -fSL "https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz"
      -o docker.tgz     && echo "${DOCKER_SHA256} *docker.tgz" | sha256sum -c -     &&
      tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     &&
      rm docker.tgz     && docker -v     && addgroup dockremap     && useradd -g dockremap
      dockremap     && echo 'dockremap:165536:65536' >> /etc/subuid     && echo 'dockremap:165536:65536'
      >> /etc/subgid     && wget "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"
      -O /usr/local/bin/dind     && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64
      > /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     &&
      docker-compose version
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && wget "https://bootstrap.pypa.io/2.6/get-pip.py" -O /tmp/get-pip.py     &&
      python /tmp/get-pip.py     && pip install awscli==1.*     && rm -fr /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerd-entrypoint.sh
    - /usr/local/bin/
  - Env:
    - Key: RUBY_MAJOR
      Value: '"2.5"'
    - Key: RUBY_VERSION
      Value: '"2.5.1"'
    - Key: RUBY_DOWNLOAD_SHA256
      Value: '"dac81822325b79c3ba9532b048c2123357d3310b2b40024202f360251d9829b1"'
    - Key: RUBYGEMS_VERSION
      Value: '"2.7.2"'
    - Key: BUNDLER_VERSION
      Value: '"1.16.1"'
    - Key: GEM_HOME
      Value: '"/usr/local/bundle"'
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    - Key: BUNDLE_BIN
      Value: '"$GEM_HOME/bin"'
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $BUNDLE_BIN:$PATH
    Name: env
  - CmdLine:
    - 'mkdir -p /usr/local/etc   && {         echo ''install: --no-document'';         echo
      ''update: --no-document'';     } >> /usr/local/etc/gemrc     && apt-get update
      && apt-get install -y --no-install-recommends        bison libgdbm-dev ruby     &&
      wget "https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz"
      -O /tmp/ruby.tar.gz     && echo "$RUBY_DOWNLOAD_SHA256 /tmp/ruby.tar.gz" | sha256sum
      -c -     && mkdir -p /usr/src/ruby     && tar -xzf /tmp/ruby.tar.gz -C /usr/src/ruby
      --strip-components=1     && cd /usr/src/ruby   && {              echo ''#define
      ENABLE_PATH_CHECK 0'';              echo;              cat file.c;      } >
      file.c.new     && mv file.c.new file.c     && autoconf     && ./configure --disable-install-doc     &&
      make -j"$(nproc)"     && make install     && apt-get purge -y --auto-remove
      bison libgdbm-dev ruby     && cd /     && rm -r /usr/src/ruby     && gem update
      --system "$RUBYGEMS_VERSION"   && gem install bundler --version "$BUNDLER_VERSION"     &&
      mkdir -p "$GEM_HOME" "$BUNDLE_BIN"     && chmod 777 "$GEM_HOME" "$BUNDLE_BIN"     &&
      rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*'
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: '"8.11.0"'
    Name: env
  - CmdLine:
    - set -ex     && for key in       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       B9AE9905FFD7803F25714661B63B535A4C206CA9       77984A986EBC2AA786BC0F66B01FBB92821C587A       56730D5401028683275BD23C23EFEFE93C4CFFFE       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       FD3A5288F042B6850C66B31F09FE44734EB7990E       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       DD8F2338BAE7501E3DD5AC78C273792F7D83545D       9554F04D7259F04124DE6B476D5A82AC7E37093B       93C7E9E91B49E432C2F75674B0A78B0A6C481CF6       114F43EE0176B71C7BC219DD50A3051F888C628D       7937DFD2AB06298B2293C3187D33FF9D0246406D     ;
      do       gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||       gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key"
      ||       gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;     done
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && wget "https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"
      -O node-v$NODE_VERSION-linux-x64.tar.gz   && wget "https://nodejs.org/download/release/v$NODE_VERSION/SHASUMS256.txt.asc"
      -O SHASUMS256.txt.asc   && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   &&
      grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt | sha256sum -c
      -     && tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1     &&
      rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc SHASUMS256.txt     &&
      ln -s /usr/local/bin/node /usr/local/bin/nodejs     && rm -fr /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm set unsafe-perm true
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install postgresql postgresql-contrib
      -y --no-install-recommends     && service postgresql start     && sudo -u postgres
      psql -c "CREATE USER instacontact WITH SUPERUSER PASSWORD 'docker';"     &&
      sudo -u postgres createdb --owner=instacontact instacontact_test
    Name: run
    PrependShell: true
  - CmdLine:
    - irb
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04.5
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04.5
