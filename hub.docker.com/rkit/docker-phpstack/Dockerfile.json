{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.5.25-fpm",
      "SourceCode": "FROM php:5.5.25-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.5.25-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     tzdata     openssh-client     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     zlib1g-dev     libssl-dev     libreadline-dev     g++     libmemcached-dev     imagemagick     libmagickwand-6.q16-dev --no-install-recommends     wget     bzip2     sendmail     git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/x86_64-linux-gnu/ImageMagick-6.8.9/bin-Q16/MagickWand-config /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/root/.rbenv/bin:/root/.rbenv/shims:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash \u0026\u0026 rbenv install 2.3.0 \u0026\u0026 rbenv global 2.3.0 \u0026\u0026 echo 'eval \"$(rbenv init -)\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/tmp \u0026\u0026 cd /opt/tmp \u0026\u0026     wget http://download.icu-project.org/files/icu4c/58.2/icu4c-58_2-src.tgz \u0026\u0026     tar zxvf icu4c-58_2-src.tgz \u0026\u0026     cd icu/source \u0026\u0026     ./configure --prefix=/opt/icu582 \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     rm -rf /opt/tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install gd \u0026\u0026     docker-php-ext-install opcache \u0026\u0026     docker-php-ext-install zip \u0026\u0026     docker-php-ext-install mysql \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install mysqli \u0026\u0026     docker-php-ext-install mbstring \u0026\u0026     docker-php-ext-configure intl --with-icu-dir=/opt/icu582 \u0026\u0026     docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl channel-update pecl.php.net \u0026\u0026     pecl install redis-2.2.8 \u0026\u0026     pecl install mongo \u0026\u0026     pecl install memcache \u0026\u0026     pecl install memcached-2.2.0 \u0026\u0026     pecl install imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=mongo.so\" \u003e /usr/local/etc/php/conf.d/ext-mongo.ini \u0026\u0026     echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/ext-redis.ini \u0026\u0026     echo \"extension=memcache.so\" \u003e /usr/local/etc/php/conf.d/ext-memcache.ini \u0026\u0026     echo \"extension=memcached.so\" \u003e /usr/local/etc/php/conf.d/ext-memcached.ini \u0026\u0026     echo \"extension=imagick.so\" \u003e /usr/local/etc/php/conf.d/ext-imagick.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm",
            "--allow-to-run-as-root"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}