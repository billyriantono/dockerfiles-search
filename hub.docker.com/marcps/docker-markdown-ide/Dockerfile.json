{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:latest",
      "SourceCode": "FROM debian:latest",
      "Platform": "",
      "From": {
        "Image": "debian:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Marc Schlienger \u003cmarc@schlienger.net\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     build-essential     cmake     cm-super     curl     fontconfig     fonts-powerline     git     locales     locales-all     mosh     openssh-server     pandoc     pandoc-citeproc     python     python-dev     python3     python3-dev     texlive     texlive-bibtex-extra     texlive-fonts-extra     texlive-lang-german     texlive-latex-extra     texlive-math-extra     tmux     vim-nox     zsh     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "de_DE.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "de_DE:de"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "de_DE.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -ms /usr/bin/zsh doc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'doc:screencast' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "doc"
        },
        {
          "CmdLine": [
            "bash -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"     \u0026\u0026 git clone https://github.com/marcschlienger/dotfiles.git /home/doc/dotfiles     \u0026\u0026 /home/doc/dotfiles/symlink.sh     \u0026\u0026 git clone https://github.com/VundleVim/Vundle.vim.git /home/doc/.vim/bundle/Vundle.vim     \u0026\u0026 vim +PluginInstall +qall     \u0026\u0026 /home/doc/.vim/bundle/YouCompleteMe/install.py --clang-completer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -y curl grep sed dpkg \u0026\u0026     TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \u0026\u0026     curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" \u003e tini.deb \u0026\u0026     dpkg -i tini.deb \u0026\u0026     rm tini.deb \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22/tcp",
            "60001/udp"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}