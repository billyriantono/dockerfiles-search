{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:1.10-alpine3.7",
      "SourceCode": "FROM golang:1.10-alpine3.7 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:1.10-alpine3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "RCLONE_VERSION",
              "Value": "\"v1.45\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RCLONE_BASEPATH",
              "Value": "\"/go/src/github.com/ncw\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${RCLONE_BASEPATH}"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/ncw/rclone/releases/download/${RCLONE_VERSION}/rclone-${RCLONE_VERSION}.tar.gz",
            "."
          ]
        },
        {
          "CmdLine": [
            "tar xvf rclone-${RCLONE_VERSION}.tar.gz \u0026\u0026     mv rclone-${RCLONE_VERSION} ${RCLONE_BASEPATH}/rclone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patches",
            "${RCLONE_BASEPATH}/rclone/patches"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"${RCLONE_BASEPATH}/rclone\""
        },
        {
          "CmdLine": [
            "for file in patches/*.diff ; do         patch -p1 \u003c \"$file\" || exit 1 ;     done \u0026\u0026     CGO_ENABLED=0 go build -a -installsuffix cgo \u0026\u0026     mv rclone /bin/rclone"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "dev",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine AS dev",
      "Platform": "",
      "As": "dev",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "MOUNT_PATH",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/rclone",
            "/bin"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${MOUNT_PATH}"
        },
        {
          "CmdLine": [
            "tail -f /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "busybox",
      "SourceCode": "FROM busybox",
      "Platform": "",
      "From": {
        "Image": "busybox"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "MOUNT_PATH",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/rclone",
            "/bin"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/ssl/certs",
            "/etc/ssl/certs"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${MOUNT_PATH}"
        },
        {
          "CmdLine": [
            "rclone"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}