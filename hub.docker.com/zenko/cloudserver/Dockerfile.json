{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:10-slim",
      "SourceCode": "FROM node:10-slim",
      "Platform": "",
      "From": {
        "Image": "node:10-slim"
      },
      "Commands": [
        {
          "Maintainer": "Giorgio Regni \u003cgr@scality.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NO_PROXY",
              "Value": "localhost,127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "no_proxy",
              "Value": "localhost,127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./package.json",
            "/usr/src/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./yarn.lock",
            "/usr/src/app/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "CmdLine": [
            "curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y jq python git build-essential ssh --no-install-recommends yarn     \u0026\u0026 mkdir -p /root/ssh     \u0026\u0026 ssh-keyscan -H github.com \u003e /root/ssh/known_hosts     \u0026\u0026 yarn cache clean     \u0026\u0026 yarn install --frozen-lockfile --production --ignore-optional     \u0026\u0026 apt-get autoremove --purge -y python git build-essential     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 yarn cache clean     \u0026\u0026 rm -rf ~/.node-gyp     \u0026\u0026 rm -rf /tmp/yarn-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/app"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/src/app/localData",
            "/usr/src/app/localMetadata"
          ]
        },
        {
          "CmdLine": [
            "/usr/src/app/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "yarn",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}