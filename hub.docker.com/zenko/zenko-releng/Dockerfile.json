{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:17.09.0-ce-git",
      "SourceCode": "FROM docker:17.09.0-ce-git",
      "Platform": "",
      "From": {
        "Image": "docker:17.09.0-ce-git"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HELM_VER",
              "Value": "2.11.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VER",
              "Value": "1.11.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_VER",
              "Value": "2.4.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILDBOT_VER",
              "Value": "0.9.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk -U add --no-cache nodejs nodejs-npm make jq wget ca-certificates alpine-sdk python-dev libffi-dev openssl-dev py2-pip go curl curl-dev gettext \u0026\u0026     npm install -g @commitlint/cli @commitlint/config-conventional conventional-commits-parser semver \u0026\u0026     go get -u github.com/aktau/github-release \u0026\u0026     wget -q https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VER}-linux-amd64.tar.gz \u0026\u0026     tar -xvf helm-v${HELM_VER}-linux-amd64.tar.gz \u0026\u0026     mv linux-amd64/helm /usr/local/bin/ \u0026\u0026     wget -q https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VER}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl \u0026\u0026     chmod +x /usr/local/bin/kubectl \u0026\u0026     pip install ansible==${ANSIBLE_VER} \u0026\u0026     pip install buildbot-worker==${BUILDBOT_VER} \u0026\u0026     apk del alpine-sdk python-dev libffi-dev openssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUN_DOCKER",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "WORKDIR",
          "Name": "arg",
          "Value": "/workdir"
        },
        {
          "CmdLine": [
            "mkdir -p \"${WORKDIR}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workdir"
        }
      ]
    }
  ]
}