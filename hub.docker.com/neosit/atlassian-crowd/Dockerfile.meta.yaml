MetaArgs: null
Stages:
- BaseName: openjdk:8-alpine
  Commands:
  - Env:
    - Key: CROWD_HOME
      Value: /var/atlassian/crowd
    Name: env
  - Env:
    - Key: CROWD_INSTALL
      Value: /opt/atlassian/crowd
    Name: env
  - Env:
    - Key: CROWD_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: POSTGRES_JDBC_VERSION
      Value: 42.2.5
    Name: env
  - Env:
    - Key: MYSQL_JDBC_VERSION
      Value: 8.0.13
    Name: env
  - CmdLine:
    - set -x     && apk add --no-cache curl xmlstarlet bash ttf-dejavu libc6-compat     &&
      mkdir -p                "${CROWD_HOME}"     && chmod -R 700            "${CROWD_HOME}"     &&
      chown -R daemon:daemon  "${CROWD_HOME}"     && mkdir -p                "${CROWD_INSTALL}/apache-tomcat/conf/Catalina"     &&
      curl -Ls                "https://www.atlassian.com/software/crowd/downloads/binary/atlassian-crowd-${CROWD_VERSION}.tar.gz"
      | tar -xz --directory "${CROWD_INSTALL}" --strip-components=1 --no-same-owner     &&
      rm -f                   "${CROWD_INSTALL}/apache-tomcat/lib/mysql-connector*.jar"     &&
      rm -f                   "${CROWD_INSTALL}/apache-tomcat/lib/postgresql-*.jar"     &&
      curl -Ls                "https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_JDBC_VERSION}.tar.gz"
      | tar -xz --directory "${CROWD_INSTALL}/apache-tomcat/lib" --strip-components=1
      --no-same-owner "mysql-connector-java-${MYSQL_JDBC_VERSION}/mysql-connector-java-${MYSQL_JDBC_VERSION}.jar"     &&
      curl -Ls                "https://jdbc.postgresql.org/download/postgresql-${POSTGRES_JDBC_VERSION}.jar"
      -o "${CROWD_INSTALL}/apache-tomcat/lib/postgresql-${POSTGRES_JDBC_VERSION}.jar"     &&
      chmod -R 700            "${CROWD_INSTALL}/apache-tomcat/conf"     && chmod -R
      700            "${CROWD_INSTALL}/apache-tomcat/logs"     && chmod -R 700            "${CROWD_INSTALL}/apache-tomcat/temp"     &&
      chmod -R 700            "${CROWD_INSTALL}/apache-tomcat/work"     && chown -R
      daemon:daemon  "${CROWD_INSTALL}/apache-tomcat/conf"     && chown -R daemon:daemon  "${CROWD_INSTALL}/apache-tomcat/logs"     &&
      chown -R daemon:daemon  "${CROWD_INSTALL}/apache-tomcat/temp"     && chown -R
      daemon:daemon  "${CROWD_INSTALL}/apache-tomcat/work"     && echo -e                 "\ncrowd.home=$CROWD_HOME"
      >> "${CROWD_INSTALL}/crowd-webapp/WEB-INF/classes/crowd-init.properties"     &&
      touch -d "@0"           "${CROWD_INSTALL}/apache-tomcat/conf/server.xml"     &&
      chmod 777               "${CROWD_INSTALL}/start_crowd.sh"     && chmod 777               "${CROWD_INSTALL}/stop_crowd.sh"     &&
      chmod 777               "${CROWD_INSTALL}/apache-tomcat/bin/catalina.sh"     &&
      rm -rf                  "${CROWD_INSTALL}/crowd-openidclient-webapp"     &&
      rm -rf                  "${CROWD_INSTALL}/crowd-openidserver-webapp"     &&
      rm -rf                  "${CROWD_INSTALL}/apache-tomcat/conf/Catalina/localhost/openidclient.xml"     &&
      rm -rf                  "${CROWD_INSTALL}/apache-tomcat/conf/Catalina/localhost/openidserver.xml"
    Name: run
    PrependShell: true
  - Name: user
    User: daemon:daemon
  - Name: expose
    Ports:
    - "8095"
  - Name: volume
    Volumes:
    - /var/atlassian/crowd
    - /opt/atlassian/crowd/apache-tomcat/logs
  - Name: workdir
    Path: /var/atlassian/crowd
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"docker-entrypoint.sh"'
    - '"/"'
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /opt/atlassian/crowd/start_crowd.sh
    - -fg
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-alpine
