{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "isuper/java-oracle:jdk_8",
      "SourceCode": "FROM isuper/java-oracle:jdk_8",
      "Platform": "",
      "From": {
        "Image": "isuper/java-oracle:jdk_8"
      },
      "Commands": [
        {
          "Maintainer": "Segence \u003csegence@segence.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y openssh-server wget vim iputils-ping telnet dnsutils bzip2 ntp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-rc.d ntp defaults"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd hadoop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d /home/hadoop -g hadoop -m hadoop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/hadoop/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -t rsa -f /home/hadoop/.ssh/id_rsa -P '' \u0026\u0026     cat /home/hadoop/.ssh/id_rsa.pub \u003e\u003e /home/hadoop/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://apache.mirror.anlx.net/hadoop/common/hadoop-2.8.0/hadoop-2.8.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf hadoop-2.8.0.tar.gz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/hadoop-2.8.0 /usr/local/hadoop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HADOOP_HOME",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_CONF_DIR",
              "Value": "$HADOOP_HOME/etc/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_CONF_DIR",
              "Value": "$HADOOP_HOME/etc/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf scala-2.11.8.tgz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/scala-2.11.8 /usr/local/scala"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R root:root /usr/local/scala"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCALA_HOME",
              "Value": "/usr/local/scala"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget http://d3kbcqa49mib13.cloudfront.net/spark-2.1.0-bin-without-hadoop.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf spark-2.1.0-bin-without-hadoop.tgz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/spark-2.1.0-bin-without-hadoop /usr/local/spark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$HADOOP_HOME/lib/native/:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export SPARK_DIST_CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath)\" \u003e /usr/local/spark/conf/spark-env.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libssl-dev libssh2-1-dev libcurl4-openssl-dev libssl-dev r-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('devtools', repos = 'http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('knitr', repos = 'http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('ggplot2', repos = 'http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages(c('devtools','mplot', 'googleVis'), repos = 'http://cran.us.r-project.org'); require(devtools); install_github('ramnathv/rCharts')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://mirrors.ukfast.co.uk/sites/ftp.apache.org/zeppelin/zeppelin-0.7.1/zeppelin-0.7.1-bin-netinst.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf zeppelin-0.7.1-bin-netinst.tgz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/zeppelin-0.7.1-bin-netinst /usr/local/zeppelin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ZEPPELIN_HOME",
              "Value": "/usr/local/zeppelin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/zeppelin-env.sh",
            "$ZEPPELIN_HOME/conf/zeppelin-env.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/zeppelin-site.xml",
            "$ZEPPELIN_HOME/conf/zeppelin-site.xml"
          ]
        },
        {
          "CmdLine": [
            "chown -R hadoop:hadoop $ZEPPELIN_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin:/usr/local/hadoop/bin:/usr/local/hadoop/sbin:$SCALA_HOME/bin:$SPARK_HOME/bin:$ZEPPELIN_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"PATH=$PATH:$JAVA_HOME/bin:/usr/local/hadoop/bin:/usr/local/hadoop/sbin:$SCALA_HOME/bin:$SPARK_HOME/bin\" \u003e\u003e /home/hadoop/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/sshd_config",
            "/etc/ssh/sshd_config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/ssh_config",
            "/home/hadoop/.ssh/config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/hadoop-env.sh",
            "config/hdfs-site.xml",
            "config/hdfs-site.xml",
            "config/core-site.xml",
            "config/core-site.xml",
            "config/mapred-site.xml",
            "config/yarn-site.xml",
            "config/yarn-site.xml",
            "$HADOOP_CONF_DIR/"
          ]
        },
        {
          "CmdLine": [
            "mkdir $HADOOP_HOME/bin/init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init-scripts/init-hadoop.sh",
            "$HADOOP_HOME/bin/init/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init-scripts/start-hadoop.sh",
            "init-scripts/stop-hadoop.sh",
            "$HADOOP_HOME/bin/init/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init-scripts/hadoop",
            "/etc/init.d/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/hadoop/utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "utils/run-wordcount.sh",
            "utils/format-namenode.sh",
            "/home/hadoop/utils/"
          ]
        },
        {
          "CmdLine": [
            "rm $HADOOP_CONF_DIR/slaves"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /config/slaves $HADOOP_CONF_DIR/slaves"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /data/logs/hadoop $HADOOP_HOME/logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $HADOOP_HOME/logs /var/log/hadoop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $ZEPPELIN_HOME/logs /var/log/zeppelin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R hadoop:hadoop $HADOOP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R hadoop:hadoop /home/hadoop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "4040",
            "50010",
            "50020",
            "50070",
            "50075",
            "50090",
            "50100",
            "8020",
            "8030",
            "8031",
            "8032",
            "8033",
            "8042",
            "8088",
            "9001"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/deployments"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "service ntp start; $HADOOP_HOME/bin/init/init-hadoop.sh; service ssh start; bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}