MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Maintainer: sistemas@emergya.com
    Name: maintainer
  - Env:
    - Key: BUILD_TIMESTAMP
      Value: "201906141200"
    Name: env
  - Env:
    - Key: LOCALE
      Value: en_US.UTF-8
    Name: env
  - Name: user
    User: root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - assets/etc/apt
    - /assets/etc/apt
  - CmdLine:
    - /bin/bash -c 'ln -fs /assets/etc/apt/sources.list /etc/apt/sources.list' &&
      /bin/bash -c 'ln -fs /assets/etc/apt/apt.conf.d/99recommends /etc/apt/apt.conf.d/99recommends'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -qqy     apt-transport-https
      ca-certificates curl lxc iptables locales net-tools iputils-ping iproute2 sysstat
      iotop tcpdump tcpick bwm-ng tree strace screen rsync inotify-tools socat wget
      curl         openssh-server openssh-client build-essential automake make autoconf
      libpcre3-dev software-properties-common supervisor sudo git vim emacs python-minimal
      fontconfig ssmtp mailutils         bash-completion less zfsutils-linux apt-utils
      jq python3-pip python3-dev python3-setuptools python3-wheel
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.docker.com/ | sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - assets/bin/wrapdocker
    - /usr/local/bin/wrapdocker
  - CmdLine:
    - chmod +x /usr/local/bin/wrapdocker
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen $LOCALE && /bin/bash -c 'ln -fs /assets/etc/default/locale /etc/default/locale'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: '"1.13.0"'
    Name: env
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser jenkins docker && adduser jenkins sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e '/Defaults\s\+env_reset/a Defaults\texempt_group=sudo' /etc/sudoers
      &&     sed -i -e 's/%sudo\s*ALL=(ALL:ALL) ALL/%sudo\tALL=(ALL) NOPASSWD:ALL/g'
      /etc/sudoers
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/etc/jenkins/executors.groovy
    - /usr/share/jenkins/ref/init.groovy.d/executors.groovy
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/etc/jenkins/plugins.txt
    - /usr/share/jenkins/ref/plugins.txt
  - CmdLine:
    - /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/etc/pip/requirements.txt
    - /requirements.txt
  - CmdLine:
    - pip3 install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -r /requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - assets/
    - /assets
  - Name: workdir
    Path: $JENKINS_HOME
  - Name: volume
    Volumes:
    - /var/log/supervisor
  - CmdLine:
    - /assets/bin/entrypoint
    Name: entrypoint
    PrependShell: false
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
