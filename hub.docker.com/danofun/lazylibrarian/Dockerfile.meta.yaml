MetaArgs: null
Stages:
- BaseName: lsiobase/alpine.python:3.9
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: LAZYLIBRARIAN_COMMIT
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"chbmb"'
    Name: label
  - CmdLine:
    - "echo \"**** install build packages ****\" &&  apk add --no-cache --virtual=build-dependencies
      \tg++ \tgcc \tmake &&  echo \"**** install runtime packages ****\" &&  apk add
      --no-cache         mesa-gl \tghostscript &&  echo \"***** build unrarlib ****\"
      &&  rar_ver=$(apk info unrar | grep unrar- | cut -d \"-\" -f2 | head -1) &&
      \ mkdir -p \t/tmp/unrar &&  curl -o  /tmp/unrar-src.tar.gz -L \t\"http://www.rarlab.com/rar/unrarsrc-${rar_ver}.tar.gz\"
      &&  tar xf  /tmp/unrar-src.tar.gz -C \t/tmp/unrar --strip-components=1 &&  cd
      /tmp/unrar &&  make lib &&  make install-lib &&  echo \"**** install app ****\"
      &&  mkdir -p \t/app/lazylibrarian &&  if [ -z ${LAZYLIBRARIAN_COMMIT+x} ]; then
      \ \tLAZYLIBRARIAN_COMMIT=$(curl -sX GET \"https://gitlab.com/api/v4/projects/9317860/repository/commits/master\"
      \    \t| awk '/id/{print $4;exit}' FS='[\"\"]');  fi &&  echo \"Building from
      commit ${LAZYLIBRARIAN_COMMIT}\" &&  echo \"${LAZYLIBRARIAN_COMMIT}\" > /defaults/version.txt
      &&  curl -o  /tmp/lazylibrarian.tar.gz -L \t\"https://gitlab.com/LazyLibrarian/LazyLibrarian/repository/archive.tar.gz?sha={$LAZYLIBRARIAN_COMMIT}\"
      &&  tar xf  /tmp/lazylibrarian.tar.gz -C \t/app/lazylibrarian --strip-components=1
      &&  echo \"**** install GNU libc (aka glibc) ****\" &&  ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\"
      &&  ALPINE_GLIBC_PACKAGE_VERSION=$(curl -s https://api.github.com/repos/sgerrand/alpine-pkg-glibc/releases/latest
      | grep 'tag_name' | cut -d\\\" -f4) &&  ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\"
      &&  ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\"
      &&  ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\"
      &&  mkdir -p /var/cache/apk &&  apk add --no-cache --virtual=.build-dependencies
      &&  apk add --no-cache parallel &&     wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\"
      \         -O \"/etc/apk/keys/sgerrand.rsa.pub\" &&     wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"
      \         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"
      \         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"
      &&     apk add --no-cache         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"
      \        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" &&     cat /init/LOCALE.md
      | parallel \"echo generate locale {}; /usr/glibc-compat/bin/localedef --force
      --inputfile {} --charmap UTF-8 {}.UTF-8;\" &&     apk del .build-dependencies
      &&     rm \"/etc/apk/keys/sgerrand.rsa.pub\" &&     rm \"/root/.wget-hsts\"
      &&     rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"
      \       \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \trm -rf /var/cache/apk/*
      &&  echo \"**** install calibre binary ****\" &&  LD_LIBRARY_PATH=\"/usr/lib:/opt/calibre/lib\"
      &&  PATH=\"$PATH:/opt/calibre\" &&  wget -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py
      |       python -c       \"import sys;        main=lambda:sys.stderr.write('Download
      failed\\n');        exec(sys.stdin.read());        main(install_dir='/opt',
      isolated=True)\" &&     rm -rf /tmp/calibre-installer-cache &&  echo \"****
      cleanup ****\" &&  apk del --purge \tbuild-dependencies &&  rm -rf \t/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: expose
    Ports:
    - "5299"
  - Name: volume
    Volumes:
    - /config
    - /books
    - /downloads
  From:
    Image: lsiobase/alpine.python:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine.python:3.9
