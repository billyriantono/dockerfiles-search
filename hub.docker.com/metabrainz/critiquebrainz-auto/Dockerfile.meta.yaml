MetaArgs: null
Stages:
- BaseName: metabrainz/python:3.6
  Commands:
  - Key: DEPLOY_ENV
    Name: arg
    Value: null
  - CmdLine:
    - apt-get update      && apt-get install -y --no-install-recommends                         build-essential                         ca-certificates                         cron                         git                         libpq-dev                         libffi-dev                         libssl-dev                         libxml2-dev                         libxslt1-dev                         rsync     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.5"
    Name: env
  - CmdLine:
    - echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y postgresql-client-$PG_MAJOR     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PGPASSWORD
      Value: '"critiquebrainz"'
    Name: env
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install uWSGI==2.0.13.1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - /code/
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./package.json
    - /code/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./npm-shrinkwrap.json
    - /code/
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /code/
  - CmdLine:
    - ./node_modules/.bin/gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - pybabel compile -d critiquebrainz/frontend/translations
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --shell /bin/bash critiquebrainz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/prod/consul-template.conf
    - /etc/consul-template.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/$DEPLOY_ENV/uwsgi/uwsgi.service
    - /etc/service/uwsgi/run
  - CmdLine:
    - chmod 755 /etc/service/uwsgi/run
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/$DEPLOY_ENV/uwsgi/uwsgi.ini
    - /etc/uwsgi/uwsgi.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker/prod/cron/jobs
    - /tmp/crontab
  - CmdLine:
    - chmod 0644 /tmp/crontab && crontab -u critiquebrainz /tmp/crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/log/dump_backup.log /var/log/public_dump_create.log /var/log/json_dump_create.log     &&
      chown critiquebrainz:critiquebrainz /var/log/dump_backup.log /var/log/public_dump_create.log
      /var/log/json_dump_create.log
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /etc/service/cron/down
    Name: run
    PrependShell: true
  - Key: GIT_COMMIT_SHA
    Name: arg
    Value: null
  - Env:
    - Key: GIT_SHA
      Value: ${GIT_COMMIT_SHA}
    Name: env
  - Name: expose
    Ports:
    - "13032"
  From:
    Image: metabrainz/python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM metabrainz/python:3.6
