{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "metabrainz/python:3.7",
      "SourceCode": "FROM metabrainz/python:3.7",
      "Platform": "",
      "From": {
        "Image": "metabrainz/python:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends                        build-essential                        redis-tools                        git                        libpq-dev                        libffi-dev                        pxz     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends postgresql-client-$PG_MAJOR     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     apt-get install -y nodejs \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "CmdLine": [
            "git clone https://github.com/metabrainz/messybrainz-server.git messybrainz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/code/messybrainz"
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /code/listenbrainz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/code/listenbrainz"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/code/listenbrainz/"
          ]
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/code/listenbrainz/"
          ]
        },
        {
          "CmdLine": [
            "useradd --create-home --shell /bin/bash listenbrainz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R daemon:daemon /logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/crontab",
            "/etc/cron.d/lb-crontab"
          ]
        },
        {
          "CmdLine": [
            "chmod 0644 /etc/cron.d/lb-crontab \u0026\u0026 crontab -u listenbrainz /etc/cron.d/lb-crontab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/log/stats.log /var/log/dump_create.log \u0026\u0026 chown listenbrainz:listenbrainz /var/log/stats.log /var/log/dump_create.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /etc/service/cron/down"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}