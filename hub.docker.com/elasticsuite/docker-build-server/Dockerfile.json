{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Dan Levy \u003cdan@danlevy.net\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "io.elph.meta.author",
              "Value": "dan.levy"
            },
            {
              "Key": "io.elph.meta.base_image",
              "Value": "elasticsuite/docker-build-server"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d   \u0026\u0026 echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d   \u0026\u0026 chmod +x /usr/sbin/policy-rc.d     \u0026\u0026 dpkg-divert --local --rename --add /sbin/initctl   \u0026\u0026 cp -a /usr/sbin/policy-rc.d /sbin/initctl   \u0026\u0026 sed -i 's/^exit.*/exit 0/' /sbin/initctl     \u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup     \u0026\u0026 echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean   \u0026\u0026 echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean   \u0026\u0026 echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean     \u0026\u0026 echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages     \u0026\u0026 echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes     \u0026\u0026 echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \u003e /etc/apt/apt.conf.d/docker-autoremove-suggests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y iputils-ping"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/vendor/bundle/ruby/2.1.3/bin:/app/vendor/bundle/ruby/2.1.3/bin:/root/.rvm/bin:/root/.yarn/bin:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/sbin:$PATH\""
            },
            {
              "Key": "DOCKER_OPTS",
              "Value": "\"--mtu 1400\""
            },
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1 \u0026\u0026 mkdir -p /usr/share/man/man7 \u0026\u0026     apt update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive     apt install -y --no-install-recommends     build-essential apt-utils lsof sudo ca-certificates dialog gettext imagemagick gnupg2     aufs-tools iptables libmagickwand-dev libc6-dev libffi-dev gnutls-bin sqlite3 libsqlite3-dev     curl rsync git-core apt-transport-https openssh-client libcurl3-openssl-dev libyaml-dev     python-software-properties software-properties-common postgresql-9.5 libpq-dev gawk     libreadline6-dev autoconf libgmp-dev libgdbm-dev libncurses5-dev automake libtool bison"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gemfile*",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "printf 'export PATH=\"/vendor/bundle/ruby/2.1.3/bin:/app/vendor/bundle/ruby/2.1.3/bin:/root/.rvm/bin:/root/.yarn/bin:/usr/local/bin:$PATH\"\\n \\n[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"\\n ' \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \u0026\u0026     /bin/bash -c \"curl -L https://get.rvm.io | bash \u0026\u0026     source /etc/profile.d/rvm.sh \u0026\u0026     rvm get head \u0026\u0026 rvm install 2.1.3 \u0026\u0026 rvm use 2.1.3 \u0026\u0026     gem install bundler --no-ri --no-rdoc \u0026\u0026     printf '\\n#################\\nGEM DEBUG INFO\\n##############\\n\\n' \u0026\u0026     gem environment\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.13.1.tgz \u0026\u0026     tar --strip-components=1 -xvzf docker-1.13.1.tgz -C /usr/local/bin \u0026\u0026     chmod +x /usr/local/bin/docker \u0026\u0026     curl -L \"https://github.com/docker/compose/releases/download/1.11.1/docker-compose-$(uname -s)-$(uname -m)\" \u003e /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose \u0026\u0026     /bin/bash -c \"curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash \u0026\u0026     source $NVM_DIR/nvm.sh \u0026\u0026 nvm install 6 \u0026\u0026 nvm alias default 6 \u0026\u0026 nvm use 6\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo curl -L \"https://github.com/rancher/rancher-compose/releases/download/v0.12.2/rancher-compose-linux-amd64-v0.12.2.tar.gz\" \u003e /tmp/rancher-compose.tar.gz \u0026\u0026     sudo tar -xzf /tmp/rancher-compose.tar.gz -C /tmp/ \u0026\u0026     sudo mv /tmp/rancher-compose-v0.12.2/rancher-compose /usr/local/bin \u0026\u0026     sudo chmod +x /usr/local/bin/rancher-compose \u0026\u0026     echo \"Downloaded: $(rancher-compose --version)\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}