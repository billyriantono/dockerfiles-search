MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Dan Levy <dan@danlevy.net>
    Name: maintainer
  - Labels:
    - Key: io.elph.meta.author
      Value: dan.levy
    - Key: io.elph.meta.base_image
      Value: elasticsuite/docker-build-server
    Name: label
  - CmdLine:
    - 'set -xe     && echo ''#!/bin/sh'' > /usr/sbin/policy-rc.d   && echo ''exit
      101'' >> /usr/sbin/policy-rc.d   && chmod +x /usr/sbin/policy-rc.d     && dpkg-divert
      --local --rename --add /sbin/initctl   && cp -a /usr/sbin/policy-rc.d /sbin/initctl   &&
      sed -i ''s/^exit.*/exit 0/'' /sbin/initctl     && echo ''force-unsafe-io'' >
      /etc/dpkg/dpkg.cfg.d/docker-apt-speedup     && echo ''DPkg::Post-Invoke { "rm
      -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
      || true"; };'' > /etc/apt/apt.conf.d/docker-clean   && echo ''APT::Update::Post-Invoke
      { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };'' >> /etc/apt/apt.conf.d/docker-clean   &&
      echo ''Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";'' >> /etc/apt/apt.conf.d/docker-clean     &&
      echo ''Acquire::Languages "none";'' > /etc/apt/apt.conf.d/docker-no-languages     &&
      echo ''Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";''
      > /etc/apt/apt.conf.d/docker-gzip-indexes     && echo ''Apt::AutoRemove::SuggestsImportant
      "false";'' > /etc/apt/apt.conf.d/docker-autoremove-suggests'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y iputils-ping
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/vendor/bundle/ruby/2.1.3/bin:/app/vendor/bundle/ruby/2.1.3/bin:/root/.rvm/bin:/root/.yarn/bin:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/sbin:$PATH"'
    - Key: DOCKER_OPTS
      Value: '"--mtu 1400"'
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - CmdLine:
    - mkdir -p /usr/share/man/man1 && mkdir -p /usr/share/man/man7 &&     apt update
      -qq &&     DEBIAN_FRONTEND=noninteractive     apt install -y --no-install-recommends     build-essential
      apt-utils lsof sudo ca-certificates dialog gettext imagemagick gnupg2     aufs-tools
      iptables libmagickwand-dev libc6-dev libffi-dev gnutls-bin sqlite3 libsqlite3-dev     curl
      rsync git-core apt-transport-https openssh-client libcurl3-openssl-dev libyaml-dev     python-software-properties
      software-properties-common postgresql-9.5 libpq-dev gawk     libreadline6-dev
      autoconf libgmp-dev libgdbm-dev libncurses5-dev automake libtool bison
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile*
    - /tmp/
  - CmdLine:
    - printf 'export PATH="/vendor/bundle/ruby/2.1.3/bin:/app/vendor/bundle/ruby/2.1.3/bin:/root/.rvm/bin:/root/.yarn/bin:/usr/local/bin:$PATH"\n
      \n[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"\n ' >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      &&     /bin/bash -c "curl -L https://get.rvm.io | bash &&     source /etc/profile.d/rvm.sh
      &&     rvm get head && rvm install 2.1.3 && rvm use 2.1.3 &&     gem install
      bundler --no-ri --no-rdoc &&     printf '\n#################\nGEM DEBUG INFO\n##############\n\n'
      &&     gem environment"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.13.1.tgz &&     tar
      --strip-components=1 -xvzf docker-1.13.1.tgz -C /usr/local/bin &&     chmod
      +x /usr/local/bin/docker &&     curl -L "https://github.com/docker/compose/releases/download/1.11.1/docker-compose-$(uname
      -s)-$(uname -m)" > /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
      &&     /bin/bash -c "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh
      | bash &&     source $NVM_DIR/nvm.sh && nvm install 6 && nvm alias default 6
      && nvm use 6"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sudo curl -L "https://github.com/rancher/rancher-compose/releases/download/v0.12.2/rancher-compose-linux-amd64-v0.12.2.tar.gz"
      > /tmp/rancher-compose.tar.gz &&     sudo tar -xzf /tmp/rancher-compose.tar.gz
      -C /tmp/ &&     sudo mv /tmp/rancher-compose-v0.12.2/rancher-compose /usr/local/bin
      &&     sudo chmod +x /usr/local/bin/rancher-compose &&     echo "Downloaded:
      $(rancher-compose --version)"'
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
