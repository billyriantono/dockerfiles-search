{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "juanjo \u003cjuanjo.lopez@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCALE",
              "Value": "es_ES.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.de.debian.org/debian/ jessie main non-free contrib\\n\" \u003e /etc/apt/sources.list \u0026\u0026   echo \"deb-src http://ftp.de.debian.org/debian/ jessie main non-free contrib\\n\" \u003e\u003e /etc/apt/sources.list \u0026\u0026   echo \"deb http://security.debian.org/ jessie/updates main contrib non-free\\n\" \u003e\u003e /etc/apt/sources.list \u0026\u0026   echo \"deb-src http://security.debian.org/ jessie/updates main contrib non-free\" \u003e\u003e /etc/apt/sources.list \u0026\u0026   apt-get -qq update \u0026\u0026 apt-get -qqy upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -yqq install   apt-utils   build-essential   debconf-utils   debconf   mysql-client   locales   curl   wget   unzip   patch   rsync   vim   openssh-client   git   bash-completion   libssh2-php   locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/# $LOCALE/$LOCALE/\" /etc/locale.gen \u0026\u0026   echo \"LANG=$LOCALE\"\u003e/etc/default/locale \u0026\u0026   dpkg-reconfigure --frontend=noninteractive locales \u0026\u0026   update-locale LANG=$LOCALE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -yqq install apt-transport-https lsb-release ca-certificates \u0026\u0026   wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \u0026\u0026   echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/php.list \u0026\u0026   apt-get -qq update \u0026\u0026 apt-get -qqy upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -yqq install   php7.1 \t\t  php7.1-curl \t\t  php7.1-dev \t\t  php7.1-gd \t\t  php7.1-imagick \t\t  php7.1-dom\t\t  php7.1-intl \t\t  php7.1-json \t\t  php7.1-soap \t\t  php7.1-mbstring\t  php7.1-mcrypt \t  php7.1-bcmath       php7.1-mysql\t\t  php7.1-ssh2\t\t  php7.1-xml\t\t  php7.1-zip\t\t  php7.1-apcu\t\t  php7.1-opcache\t  php7.1-memcached \t  php7.1-redis\t\t  php7.1-xdebug\t\t  libapache2-mod-php7.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Madrid"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo $TZ | tee /etc/timezone \u0026\u0026   dpkg-reconfigure --frontend noninteractive tzdata \u0026\u0026   echo \"date.timezone = \\\"$TZ\\\";\" \u003e /etc/php/7.1/apache2/conf.d/timezone.ini \u0026\u0026   echo \"date.timezone = \\\"$TZ\\\";\" \u003e /etc/php/7.1/cli/conf.d/timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   wget https://github.com/Yaoguais/phpng-xhprof/archive/master.zip \u0026\u0026   unzip master.zip \u0026\u0026   cd phpng-xhprof-master \u0026\u0026   phpize7.1 \u0026\u0026   ./configure --with-php-config=/usr/bin/php-config7.1 \u0026\u0026   make \u0026\u0026 make install \u0026\u0026   mv /usr/lib/php/20160303/phpng_xhprof.so /usr/lib/php/20160303/xhprof.so  \u0026\u0026   echo \"extension=xhprof.so\" \u003e /etc/php/7.1/mods-available/xhprof.ini \u0026\u0026   echo \"xhprof.output_dir=/var/www/xhprof\" \u003e\u003e /etc/php/7.1/mods-available/xhprof.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ssmtp \u0026\u0026   echo \"FromLineOverride=YES\" \u003e\u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -yqq install apache2-mpm-prefork"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpdismod xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/apache2/sites-enabled/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod\t\t  access_compat\t\t  actions\t\t  alias\t\t\t  auth_basic\t\t  authn_core\t\t  authn_file\t\t  authz_core\t\t  authz_groupfile\t  authz_host \t\t  authz_user\t\t  autoindex\t\t  dir\t\t\t  env \t\t\t  expires \t\t  filter \t\t  headers\t\t  mime \t\t\t  negotiation \t\t  php7.1 \t\t  mpm_prefork \t\t  reqtimeout \t\t  rewrite \t\t  setenvif \t\t  status \t\t  ssl   \u0026\u0026 a2dismod cgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026   mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/etc/php/conf.d.disabled/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'function composer() { COMPOSER=\"$(which composer)\" || { echo \"Could not find composer in path\" \u003e\u00262 ; return 1 ; } \u0026\u0026 sudo mv /usr/local/etc/php/conf.d/xdebug.ini /usr/local/etc/php/conf.d.disabled/ ; $COMPOSER \"$@\" ; STATUS=$? ; sudo mv /usr/local/etc/php/conf.d.disabled/xdebug.ini /usr/local/etc/php/conf.d/ ; return $STATUS ; }' \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"hirak/prestissimo:^0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O drush.phar https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x drush.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv drush.phar /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \". /usr/share/bash-completion/bash_completion\" \u003e\u003e ~/.bashrc \u0026\u0026 echo \"alias ll='ls -lahs'\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q autoclean \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd me \u0026\u0026 usermod -G www-data -a me"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -a -G adm www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/apache2-foreground",
            "/usr/bin/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}