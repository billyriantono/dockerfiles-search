MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Guilherme Salazar <gmesalazar@gmail.com>
    Name: maintainer
  - Key: RESTY_V
    Name: arg
    Value: '"1.11.2.2"'
  - Key: RESTY_SSL_V
    Name: arg
    Value: '"2.4.5"'
  - Key: RESTY_PCRE_V
    Name: arg
    Value: '"8.40"'
  - Key: RESTY_MODS
    Name: arg
    Value: '""'
  - Key: RESTY_J
    Name: arg
    Value: '"8"'
  - Key: ROCKS_V
    Name: arg
    Value: '"2.4.2"'
  - Key: ROCKS
    Name: arg
    Value: '""'
  - Key: RESTY_HOME
    Name: arg
    Value: '"/usr/local/openresty"'
  - Env:
    - Key: PATH
      Value: '"${PATH}:${RESTY_HOME}/bin:${RESTY_HOME}/nginx/sbin"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:${RESTY_HOME}/luajit/bin"'
    Name: env
  - CmdLine:
    - "mkdir /tmp/resty_build_area \t&& cd /tmp/resty_build_area \t&& apk add --no-cache
      --virtual .build \t\tbuild-base \t\tperl-dev \t\tzlib-dev \t\tlinux-headers
      \t\tca-certificates \t&& apk add --no-cache \t\tlibgcc \t\tzlib \t\twget \t&&
      wget https://openresty.org/download/openresty-${RESTY_V}.tar.gz \t&& wget https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${RESTY_SSL_V}.tar.gz
      \t&& wget https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_V}.tar.gz \t&& wget
      https://luarocks.org/releases/luarocks-${ROCKS_V}.tar.gz \t&& tar -xf openresty-${RESTY_V}.tar.gz
      \t&& tar -xf libressl-${RESTY_SSL_V}.tar.gz \t&& tar -xf pcre-${RESTY_PCRE_V}.tar.gz
      \t&& tar -xf luarocks-${ROCKS_V}.tar.gz \t&& cd openresty-${RESTY_V} \t&& ./configure
      -j${RESTY_J} ${RESTY_MODS} \t\t--with-openssl=/tmp/resty_build_area/libressl-${RESTY_SSL_V}
      \t\t--with-pcre=/tmp/resty_build_area/pcre-${RESTY_PCRE_V} \t&& make -j${RESTY_J}
      install \t&& cd ../ \t&& cd luarocks-${ROCKS_V} \t&& ./configure \t\t--prefix=/usr/local/openresty/luajit
      \t\t--with-lua=/usr/local/openresty/luajit \t\t--lua-suffix=jit-2.1.0-beta2
      \t\t--with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \t&& make
      build && make install \t&& cd ../ \t&& for rock in ${ROCKS}; do \t\tluarocks
      install ${rock}; \tdone \t&& rm -rf /tmp/resty_build_area \t&& apk del .build"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - sh
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
