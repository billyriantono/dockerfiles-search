MetaArgs: null
Stages:
- As: cli-build
  BaseName: dockercore/golang-cross:1.12.9@sha256:3ea9dcef4dd2c46d80445c0b22d6177817f4cfce22c523cc12a5a1091cb37705
  Commands:
  - Env:
    - Key: DISABLE_WARN_OUTSIDE_CONTAINER
      Value: "1"
    Name: env
  - Key: CLI_CHANNEL
    Name: arg
    Value: stable
  - Key: CLI_VERSION
    Name: arg
    Value: 19.03.5
  - CmdLine:
    - apt-get install -y -q --no-install-recommends   coreutils   util-linux   uuid-runtime
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/docker/cli
  - CmdLine:
    - git clone https://github.com/docker/cli . && git checkout v${CLI_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir build
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://download.docker.com/linux/static/${CLI_CHANNEL}/x86_64/docker-${CLI_VERSION}.tgz
      | tar xzO docker/docker > build/docker-linux-amd64 && chmod +x build/docker-linux-amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://download.docker.com/linux/static/${CLI_CHANNEL}/aarch64/docker-${CLI_VERSION}.tgz
      | tar xzO docker/docker > build/docker-linux-arm64 && chmod +x build/docker-linux-arm64
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://download.docker.com/linux/static/${CLI_CHANNEL}/armhf/docker-${CLI_VERSION}.tgz
      | tar xzO docker/docker > build/docker-linux-arm && chmod +x build/docker-linux-arm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://download.docker.com/mac/static/${CLI_CHANNEL}/x86_64/docker-${CLI_VERSION}.tgz
      | tar xzO docker/docker > build/docker-darwin-amd64
    Name: run
    PrependShell: true
  - Key: GOPROXY
    Name: arg
    Value: null
  - CmdLine:
    - make binary-windows
    Name: run
    PrependShell: true
  From:
    Image: dockercore/golang-cross:1.12.9@sha256:3ea9dcef4dd2c46d80445c0b22d6177817f4cfce22c523cc12a5a1091cb37705
  Name: cli-build
  Platform: ""
  SourceCode: FROM dockercore/golang-cross:1.12.9@sha256:3ea9dcef4dd2c46d80445c0b22d6177817f4cfce22c523cc12a5a1091cb37705
    AS cli-build
- As: dev
  BaseName: golang:1.13.3
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y -q --no-install-recommends   coreutils   util-linux   uuid-runtime
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/docker/app/
  - Chown: ""
    From: cli-build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/docker/cli/build/docker-linux-amd64
    - /usr/bin/docker
  - Env:
    - Key: PATH
      Value: ${PATH}:/go/src/github.com/docker/app/bin/
    Name: env
  - Key: DEP_VERSION
    Name: arg
    Value: v0.5.4
  - CmdLine:
    - curl -o /usr/bin/dep -L https://github.com/golang/dep/releases/download/${DEP_VERSION}/dep-linux-amd64
      &&   chmod +x /usr/bin/dep
    Name: run
    PrependShell: true
  - Key: GOTESTSUM_VERSION
    Name: arg
    Value: v0.3.4
  - Key: GOPROXY
    Name: arg
    Value: null
  - CmdLine:
    - mkdir $GOPATH/src/gotest.tools &&   git clone -q https://github.com/gotestyourself/gotestsum
      $GOPATH/src/gotest.tools/gotestsum &&   cd $GOPATH/src/gotest.tools/gotestsum
      &&   git -C $GOPATH/src/gotest.tools/gotestsum checkout -q $GOTESTSUM_VERSION
      &&   GO111MODULE=on GOOS=linux   go build -o /usr/local/bin/gotestsum-linux       gotest.tools/gotestsum
      &&   GO111MODULE=on GOOS=darwin  go build -o /usr/local/bin/gotestsum-darwin      gotest.tools/gotestsum
      &&   GO111MODULE=on GOOS=windows go build -o /usr/local/bin/gotestsum-windows.exe
      gotest.tools/gotestsum &&   ln -s gotestsum-linux /usr/local/bin/gotestsum
    Name: run
    PrependShell: true
  - CmdLine:
    - GOOS=linux go build -o /usr/local/bin/test2json-linux       cmd/test2json &&   GOOS=darwin  go
      build -o /usr/local/bin/test2json-darwin      cmd/test2json &&   GOOS=windows
      go build -o /usr/local/bin/test2json-windows.exe cmd/test2json
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -d gopkg.in/mjibson/esc.v0 &&   cd /go/src/github.com/mjibson/esc &&   go
      build -v -o /usr/bin/esc . &&   rm -rf /go/src/* /go/pkg/* /go/bin/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  From:
    Image: golang:1.13.3
  Name: dev
  Platform: ""
  SourceCode: FROM golang:1.13.3 AS dev
- As: cli
  BaseName: scratch
  Commands:
  - Chown: ""
    From: cli-build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/docker/cli/build/docker-linux-amd64
    - docker-linux
  - Chown: ""
    From: cli-build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/docker/cli/build/docker-darwin-amd64
    - docker-darwin
  - Chown: ""
    From: cli-build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/docker/cli/build/docker-windows-amd64
    - docker-windows.exe
  From:
    Scratch: true
  Name: cli
  Platform: ""
  SourceCode: FROM scratch AS cli
- As: cross-build
  BaseName: dev
  Commands:
  - Key: TAG
    Name: arg
    Value: '"unknown"'
  - CmdLine:
    - make TAG=${TAG} cross
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 1
      Named: dev
  Name: cross-build
  Platform: ""
  SourceCode: FROM dev AS cross-build
- As: cross
  BaseName: scratch
  Commands:
  - Key: PROJECT_PATH
    Name: arg
    Value: /go/src/github.com/docker/app
  - Chown: ""
    From: cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-linux
    - docker-app-linux
  - Chown: ""
    From: cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-linux-arm64
    - docker-app-linux-arm64
  - Chown: ""
    From: cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-linux-arm
    - docker-app-linux-arm
  - Chown: ""
    From: cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-darwin
    - docker-app-darwin
  - Chown: ""
    From: cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-windows.exe
    - docker-app-windows.exe
  From:
    Scratch: true
  Name: cross
  Platform: ""
  SourceCode: FROM scratch AS cross
- As: e2e-cross-build
  BaseName: cross-build
  Commands:
  - Key: TAG
    Name: arg
    Value: '"unknown"'
  - CmdLine:
    - make TAG=${TAG} e2e-cross
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 3
      Named: cross-build
  Name: e2e-cross-build
  Platform: ""
  SourceCode: FROM cross-build AS e2e-cross-build
- As: e2e-cross
  BaseName: scratch
  Commands:
  - Key: PROJECT_PATH
    Name: arg
    Value: /go/src/github.com/docker/app
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-e2e-linux
    - docker-app-e2e-linux
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-e2e-darwin
    - docker-app-e2e-darwin
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - ${PROJECT_PATH}/bin/docker-app-e2e-windows.exe
    - docker-app-e2e-windows.exe
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/gotestsum-linux
    - gotestsum-linux
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/gotestsum-darwin
    - gotestsum-darwin
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/gotestsum-windows.exe
    - gotestsum-windows.exe
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/test2json-linux
    - test2json-linux
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/test2json-darwin
    - test2json-darwin
  - Chown: ""
    From: e2e-cross-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/test2json-windows.exe
    - test2json-windows.exe
  From:
    Scratch: true
  Name: e2e-cross
  Platform: ""
  SourceCode: FROM scratch AS e2e-cross
