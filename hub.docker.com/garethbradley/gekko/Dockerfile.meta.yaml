MetaArgs: null
Stages:
- BaseName: node:8
  Commands:
  - Env:
    - Key: HOST
      Value: localhost
    Name: env
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - npm install -g --production node-gyp &&     npm cache clean --force
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - .
  - CmdLine:
    - npm install --production &&     npm install --production redis@0.10.0 talib@1.0.2
      tulind@0.8.7 pg &&     npm cache clean --force
    Name: run
    PrependShell: true
  - Name: workdir
    Path: exchange
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - exchange/package.json
    - .
  - CmdLine:
    - npm install --production &&     npm cache clean --force
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/app
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - chmod +x /usr/src/app/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/src/app/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --config
    - config.js
    - --ui
    Name: cmd
    PrependShell: false
  From:
    Image: node:8
  Name: ""
  Platform: ""
  SourceCode: FROM node:8
