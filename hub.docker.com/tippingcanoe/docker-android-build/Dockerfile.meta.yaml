MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Iain Connor <i.connor@tippingcanoe.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: VERSION_SDK_TOOLS
      Value: '"25.1.7"'
    Name: env
  - Env:
    - Key: VERSION_BUILD_TOOLS
      Value: '"24.0.2"'
    Name: env
  - Env:
    - Key: VERSION_TARGET_SDK
      Value: '"24"'
    Name: env
  - Env:
    - Key: VERSION_EMULATOR_GOOGLE_APIS_TARGET_SDK
      Value: '"23"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: '"/sdk"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"$PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools"'
    Name: env
  - CmdLine:
    - apt-get -qq update &&     apt-get install -qqy --no-install-recommends         curl         html2text         openjdk-8-jdk         libc6-i386         lib32stdc++6         lib32gcc1         lib32ncurses5         lib32z1         unzip         wget         build-essential         expect         file         libmagic1     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/ssl/certs/java/cacerts;     /var/lib/dpkg/info/ca-certificates-java.postinst
      configure
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - http://dl.google.com/android/repository/tools_r${VERSION_SDK_TOOLS}-linux.zip
    - /tools.zip
  - CmdLine:
    - unzip /tools.zip -d /${ANDROID_HOME} &&     rm -v /tools.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools
    - /usr/local/bin/tools
  - CmdLine:
    - chmod +x /usr/local/bin/tools/agree-to-licenses.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/tools/wait-for-emulator.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/tools/agree-to-licenses.sh   "android update sdk --all --no-ui
      --filter platform-tools,android-${VERSION_TARGET_SDK},android-${VERSION_EMULATOR_GOOGLE_APIS_TARGET_SDK},build-tools-${VERSION_BUILD_TOOLS},sys-img-armeabi-v7a-android-${VERSION_TARGET_SDK},sys-img-armeabi-v7a-google_apis-${VERSION_EMULATOR_GOOGLE_APIS_TARGET_SDK},extra-android-support,extra-android-m2repository,extra-google-m2repository,extra-google-google_play_services"
    Name: run
    PrependShell: true
  - CmdLine:
    - android list targets
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "no" | android create avd                 --force                 --device
      "Nexus 5"                 --name nexus5_${VERSION_TARGET_SDK}                 --target
      android-${VERSION_TARGET_SDK}                 --abi default/armeabi-v7a                 --skin
      WVGA800                 --sdcard 512M
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "no" | android create avd                 --force                 --device
      "Nexus 5"                 --name nexus5_${VERSION_EMULATOR_GOOGLE_APIS_TARGET_SDK}                 --target
      android-${VERSION_EMULATOR_GOOGLE_APIS_TARGET_SDK}                 --abi google_apis/armeabi-v7a                 --skin
      WVGA800                 --sdcard 512M
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "SHELL=/bin/bash emulator -avd nexus5_${VERSION_TARGET_SDK} -no-skin
      -no-audio -no-window &     adb wait-for-device &&     /usr/local/bin/tools/wait-for-emulator.sh"
      &&     adb -s emulator-5554 emu kill
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "SHELL=/bin/bash emulator -avd nexus5_${VERSION_EMULATOR_GOOGLE_APIS_TARGET_SDK}
      -no-skin -no-audio -no-window &     adb wait-for-device &&     /usr/local/bin/tools/wait-for-emulator.sh"
      &&     adb -s emulator-5554 emu kill
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
