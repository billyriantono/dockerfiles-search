{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "centos:6",
      "SourceCode": "FROM centos:6 AS base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "centos:6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"dennis.brendel@sharpreflections.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "gmp",
          "Name": "arg",
          "Value": "gmp-4.3.2"
        },
        {
          "Key": "mpfr",
          "Name": "arg",
          "Value": "mpfr-2.4.2"
        },
        {
          "Key": "mpc",
          "Name": "arg",
          "Value": "mpc-1.0.1"
        },
        {
          "Key": "isl",
          "Name": "arg",
          "Value": "isl-0.14.1"
        },
        {
          "Key": "cloog",
          "Name": "arg",
          "Value": "cloog-0.18.4"
        },
        {
          "Key": "gcc",
          "Name": "arg",
          "Value": "gcc-4.8.5"
        },
        {
          "Key": "prefix",
          "Name": "arg",
          "Value": "/opt"
        },
        {
          "Name": "workdir",
          "Path": "/build/"
        }
      ]
    },
    {
      "Name": "build",
      "BaseName": "base",
      "SourceCode": "FROM base AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "yum -y upgrade \u0026\u0026     yum -y install @development \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build-gcc",
      "BaseName": "build",
      "SourceCode": "FROM build AS build-gcc",
      "Platform": "",
      "As": "build-gcc",
      "From": {
        "Stage": {
          "Named": "build",
          "Index": 1
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"Downloading $gcc:   \" \u0026\u0026 curl --remote-name --progress-bar https://ftp.gnu.org/gnu/gcc/$gcc/$gcc.tar.bz2 \u0026\u0026     echo \"Downloading $gmp:   \" \u0026\u0026 curl --remote-name --progress-bar https://ftp.gnu.org/gnu/gmp/$gmp.tar.bz2      \u0026\u0026     echo \"Downloading $mpfr:  \" \u0026\u0026 curl --remote-name --progress-bar https://ftp.gnu.org/gnu/mpfr/$mpfr.tar.xz     \u0026\u0026     echo \"Downloading $mpc:   \" \u0026\u0026 curl --remote-name --progress-bar https://ftp.gnu.org/gnu/mpc/$mpc.tar.gz       \u0026\u0026     echo \"Downloading $isl:   \" \u0026\u0026 curl --remote-name --progress-bar http://isl.gforge.inria.fr/$isl.tar.xz        \u0026\u0026     echo \"Downloading $cloog: \" \u0026\u0026 curl --remote-name --progress-bar http://www.bastoul.net/cloog/pages/download/$cloog.tar.gz \u0026\u0026     echo -n \"Extracting $gcc..   \" \u0026\u0026 tar xf $gcc.tar.bz2  \u0026\u0026 echo \" done\" \u0026\u0026     echo -n \"Extracting $gmp..   \" \u0026\u0026 tar xf $gmp.tar.bz2  \u0026\u0026 mv $gmp   $gcc/gmp   \u0026\u0026 echo \" done\" \u0026\u0026     echo -n \"Extracting $mpfr..  \" \u0026\u0026 tar xf $mpfr.tar.xz  \u0026\u0026 mv $mpfr  $gcc/mpfr  \u0026\u0026 echo \" done\" \u0026\u0026     echo -n \"Extracting $mpc..   \" \u0026\u0026 tar xf $mpc.tar.gz   \u0026\u0026 mv $mpc   $gcc/mpc   \u0026\u0026 echo \" done\" \u0026\u0026     echo -n \"Extracting $isl..   \" \u0026\u0026 tar xf $isl.tar.xz   \u0026\u0026 mv $isl   $gcc/isl   \u0026\u0026 echo \" done\" \u0026\u0026     echo -n \"Extracting $cloog.. \" \u0026\u0026 tar xf $cloog.tar.gz \u0026\u0026 mv $cloog $gcc/cloog \u0026\u0026 echo \" done\" \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026     ../$gcc/configure --prefix=$prefix/$gcc                       --disable-multilib                       --enable-languages=c,c++,fortran \u0026\u0026     make --quiet --jobs=$(nproc --all) \u0026\u0026     make install \u0026\u0026     rm -rf /build/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build-cmake",
      "BaseName": "base",
      "SourceCode": "FROM base AS build-cmake",
      "Platform": "",
      "As": "build-cmake",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"Downloading cmake 3.1.3: \" \u0026\u0026 curl --remote-name --progress-bar https://cmake.org/files/v3.1/cmake-3.1.3-Linux-x86_64.tar.gz \u0026\u0026     echo \"Downloading cmake 3.5.2: \" \u0026\u0026 curl --remote-name --progress-bar https://cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz \u0026\u0026     echo \"Downloading cmake 3.6.3: \" \u0026\u0026 curl --remote-name --progress-bar https://cmake.org/files/v3.6/cmake-3.6.3-Linux-x86_64.tar.gz \u0026\u0026     echo \"Downloading cmake 3.10.3:\" \u0026\u0026 curl --remote-name --progress-bar https://cmake.org/files/v3.10/cmake-3.10.3-Linux-x86_64.tar.gz \u0026\u0026     echo \"Downloading cmake 3.14.7:\" \u0026\u0026 curl --remote-name --progress-bar https://cmake.org/files/v3.14/cmake-3.14.7-Linux-x86_64.tar.gz \u0026\u0026     for file in *; do echo -n \"Extracting $file: \" \u0026\u0026 tar --directory=$prefix/ -xf $file \u0026\u0026 echo \"done\"; done \u0026\u0026     for dir in $prefix/*; do mv $dir ${dir%-Linux-x86_64}; done \u0026\u0026     rm -rf /build/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "production",
      "BaseName": "build",
      "SourceCode": "FROM build AS production",
      "Platform": "",
      "As": "production",
      "From": {
        "Stage": {
          "Named": "build",
          "Index": 1
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build-gcc",
          "Name": "copy",
          "SourcesAndDest": [
            "$prefix",
            "$prefix"
          ]
        },
        {
          "Chown": "",
          "From": "build-cmake",
          "Name": "copy",
          "SourcesAndDest": [
            "$prefix",
            "$prefix"
          ]
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$prefix/$gcc/bin:"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y install libX11-devel libSM-devel libxml2-devel libGL-devel libGLU-devel libibverbs-devel freetype-devel \u0026\u0026     yum -y install urw-fonts man \u0026\u0026     yum -y install yum-utils centos-release-scl.noarch epel-release.noarch \u0026\u0026     yum -y install git19 sclo-git25 rh-git29 sclo-git212 sclo-subversion19 devtoolset-8 \u0026\u0026     yum -y install strace valgrind bc joe vim nano mc \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}