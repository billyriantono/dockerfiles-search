{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM     ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Claudiu Chiticariu Constatin \u003cchiticariu@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            },
            {
              "Key": "ANDROID_SDK_ROOT",
              "Value": "/opt/android-sdk-linux"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "10.16.3"
            },
            {
              "Key": "IONIC_VERSION",
              "Value": "5.2.7"
            },
            {
              "Key": "CORDOVA_VERSION",
              "Value": "9.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026      apt-get install -y git wget curl unzip ruby-full build-essential rubygems \u0026\u0026     curl --retry 3 -SLO \"http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \u0026\u0026     tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \u0026\u0026     rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" \u0026\u0026     npm install -g cordova@\"$CORDOVA_VERSION\" ionic@\"$IONIC_VERSION\" \u0026\u0026     npm cache verify \u0026\u0026     gem install sass \u0026\u0026     ionic start myApp sidemenu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y -q software-properties-common  \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     echo openjdk-8-jdk shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get update \u0026\u0026 apt-get -y install openjdk-8-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ANDROID_HOME=\"${ANDROID_HOME}\" \u003e\u003e /etc/environment \u0026\u0026     dpkg --add-architecture i386 \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y expect ant wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 \tmkdir -p android-sdk-linux \u0026\u0026     curl -k https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o sdk-tools-linux-3859397.zip \u0026\u0026     unzip -q sdk-tools-linux-3859397.zip -d android-sdk-linux \u0026\u0026     rm sdk-tools-linux-3859397.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:/opt/tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools",
            "/opt/tools"
          ]
        },
        {
          "CmdLine": [
            "yes | ${ANDROID_HOME}/tools/bin/sdkmanager --licenses \u0026\u0026     ${ANDROID_HOME}/tools/bin/sdkmanager 'build-tools;27.0.3' 'build-tools;28.0.3' platform-tools 'platforms;android-28' 'platforms;android-27' 'platforms;android-26' 'ndk-bundle'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y -q gradle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "myApp"
        }
      ]
    }
  ]
}