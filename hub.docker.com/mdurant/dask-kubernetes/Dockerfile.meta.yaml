MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Martin Durant <martin.durant@utoronto.ca>
    Name: maintainer
  - CmdLine:
    - apt-get update -yqq && apt-get install -yqq bzip2 git wget graphviz && rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - mkdir -p /work/bin
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    - miniconda.sh
  - CmdLine:
    - bash miniconda.sh -b -p /work/miniconda && rm miniconda.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/work/bin:/work/miniconda/bin:$PATH"'
    Name: env
  - CmdLine:
    - conda config --set always_yes yes --set changeps1 no --set auto_update_conda
      no
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install notebook psutil numpy pandas scikit-learn statsmodels pip numba         scikit-image
      datashader holoviews nomkl matplotlib lz4 tornado
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge fastparquet s3fs zict python-blosc cytoolz dask
      distributed dask-searchcv gcsfs  && conda clean -tipsy  && pip install git+https://github.com/dask/dask-glm.git
      --no-deps && pip install graphviz
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge jupyterlab jupyter_dashboards ipywidgets  && jupyter
      labextension install @jupyter-widgets/jupyterlab-manager  && jupyter nbextension
      enable jupyter_dashboards --py --sys-prefix  && jupyter nbextension enable widgetsnbextension
      --py --sys-prefix  && conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c bokeh bokeh  && jupyter labextension install jupyterlab_bokeh  &&
      conda clean -tipsy  && npm cache clean --force
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/dask/dask --upgrade --no-deps  && pip install
      git+https://github.com/dask/distributed --upgrade --no-deps  && pip install
      git+https://github.com/dask/gcsfs --upgrade  && pip install git+https://github.com/pydata/xarray
      --upgrade  && pip install git+https://github.com/zarr-developers/zarr --upgrade
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/bin/tini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://storage.googleapis.com/kubernetes-release/release/v1.5.4/bin/linux/amd64/kubectl
    - /usr/sbin/kubectl
  - CmdLine:
    - chmod +x /usr/bin/tini && chmod 0500 /usr/sbin/kubectl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - /work/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - examples
    - /work/examples
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: BASICUSER
      Value: basicuser
    Name: env
  - Env:
    - Key: BASICUSER_UID
      Value: "1000"
    Name: env
  - CmdLine:
    - useradd -m -d /work -s /bin/bash -N -u $BASICUSER_UID $BASICUSER  && chown $BASICUSER
      /work  && chown $BASICUSER:users -R /work
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
