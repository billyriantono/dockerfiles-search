{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"docker@elementia.me\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "3000-3999/tcp",
            "3000-3999/udp",
            "52924/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/ubuntu"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "theia",
            "/theia"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "dbaeumer.vscode-eslint-1.9.1.vsix",
            "/theia/plugins"
          ]
        },
        {
          "CmdLine": [
            "groupadd -g 1000 ubuntu   \u0026\u0026   useradd --uid 1000 --shell /bin/bash -m --home-dir /home/ubuntu -g ubuntu -G sudo ubuntu   \u0026\u0026   rm /etc/dpkg/dpkg.cfg.d/excludes   \u0026\u0026   apt-get update --fix-missing   \u0026\u0026   echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections   \u0026\u0026   dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-get install -y --reinstall   \u0026\u0026   apt-get -y dist-upgrade   \u0026\u0026   apt-get install -y     apt-transport-https     bash     bash-completion     build-essential     ca-certificates     curl     curl     dnsutils     fakeroot     git     gnupg-agent     iputils-ping     jq     man-db     nano     netcat-openbsd     parallel     python     python-pip     python-virtualenv     python3     python3-pip     python3-virtualenv     software-properties-common     sudo     postgresql-client-common     time     tmux     tree     wget     xxd     zip   \u0026\u0026   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -   \u0026\u0026   add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"   \u0026\u0026   apt-get update   \u0026\u0026   apt-get install -y docker-ce docker-ce-cli containerd.io   \u0026\u0026   gpasswd -a ubuntu docker   \u0026\u0026   chmod 777 /tmp   \u0026\u0026   sed -i 's/%sudo\\s.*/%sudo ALL=NOPASSWD:ALL/' /etc/sudoers   \u0026\u0026   chown -R ubuntu:ubuntu /theia   \u0026\u0026   curl -sL https://deb.nodesource.com/setup_10.x | bash -   \u0026\u0026   apt-get install -y nodejs   \u0026\u0026   npm install -g yarn   \u0026\u0026   npm install -g eslint   \u0026\u0026   chown -R ubuntu:ubuntu /home/ubuntu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "ubuntu"
        },
        {
          "Name": "workdir",
          "Path": "/theia"
        },
        {
          "CmdLine": [
            "yarn   \u0026\u0026   yarn theia build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "THEIA_DEFAULT_PLUGINS",
              "Value": "local-dir:/theia/plugins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yarn",
            "theia",
            "start",
            "/home/ubuntu",
            "--hostname",
            "0.0.0.0",
            "--port",
            "52924"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost:52924 \u003e/dev/null"
            ]
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}