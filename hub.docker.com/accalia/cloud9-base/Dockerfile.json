{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"docker@elementia.me\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g 1000 ubuntu   \u0026\u0026   useradd --uid 1000 --shell /bin/bash -m --home-dir /home/ubuntu -g ubuntu -G sudo ubuntu   \u0026\u0026   rm /etc/dpkg/dpkg.cfg.d/excludes   \u0026\u0026   apt-get update --fix-missing   \u0026\u0026   echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections   \u0026\u0026   dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-get install -y --reinstall   \u0026\u0026   apt-get -y dist-upgrade   \u0026\u0026   apt-get install -y     bash     bash-completion     build-essential     curl     dnsutils     fakeroot     git     iputils-ping     jq     man-db     nano     netcat-openbsd     parallel     python     python3     python3-pip     python3-virtualenv     sudo     postgresql-client-common     time     tmux     tree     wget     zip   \u0026\u0026   chmod 777 /tmp   \u0026\u0026   sed -i 's/%sudo\\s.*/%sudo ALL=NOPASSWD:ALL/' /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cloud9sdk.tar.bz2",
            "/cloud9sdk"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cloud9.tar.bz2",
            "/cloud9"
          ]
        },
        {
          "CmdLine": [
            "chown -R ubuntu:ubuntu /cloud9 /cloud9sdk   \u0026\u0026   chmod -R ug+rwX /cloud9 /cloud9sdk   \u0026\u0026   sed -i -e 's_127.0.0.1_0.0.0.0_g' /cloud9sdk/configs/standalone.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000-3999/tcp",
            "3000-3999/udp",
            "52924/tcp",
            "8080/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/ubuntu"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "user",
          "User": "ubuntu"
        },
        {
          "CmdLine": [
            "/cloud9/node/bin/node",
            "/cloud9sdk/server.js",
            "--listen",
            "0.0.0.0",
            "-a",
            ":",
            "--port",
            "52924",
            "-w",
            "/home/ubuntu"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost:52924/ide.html \u003e/dev/null"
            ]
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}