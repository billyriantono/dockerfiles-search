MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Richard George "richard@phase.org"
    Name: maintainer
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y php
      ant git php-xml php-dom php-xmlwriter php-zip php-sqlite3 php-mbstring nodejs
      npm sqlite3
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      -r "copy('https://composer.github.io/installer.sig', 'composer-setup.sig');"
      &&     php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('composer-setup.sig')))
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');  die(-1);
      } echo PHP_EOL;"  &&     php composer-setup.php  &&     php -r "unlink('composer-setup.php');"
      &&     cp composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - ln -s /usr/bin/nodejs /usr/local/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app
  - Name: workdir
    Path: /app
  - CmdLine:
    - 'mkdir -p var/db #excluded in .dockerfile - see http://stackoverflow.com/questions/34198591/'
    Name: run
    PrependShell: true
  - CmdLine:
    - cp app/config/parameters-docker.yml app/config/parameters.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/composer --ansi install &&     npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - sqlite3 var/db/app.sqlite < sql/db-sqlite.sql
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p web/docs &&     ln -s ../components web/components &&     ln -s ../../docs/images
      web/docs/images
    Name: run
    PrependShell: true
  - CmdLine:
    - php bin/console doctrine:schema:update --force &&     php bin/console fos:user:create
      admin admin@localhost admin --super-admin
    Name: run
    PrependShell: true
  - CmdLine:
    - vendor/bin/phing -f phing.xml test-all
    Name: run
    PrependShell: true
  - CmdLine:
    - sqlite3 var/db/app.sqlite < sql/sampleSongs.sql
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf var/cache/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - php bin/console server:run -e prod 0.0.0.0:8000
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
