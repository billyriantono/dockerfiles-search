MetaArgs: null
Stages:
- BaseName: quantumobject/docker-rstudio
  Commands:
  - Maintainer: '"Asghar Ghorbani" ghorbani59@gmail.com'
    Name: maintainer
  - Env:
    - Key: cran_repo
      Value: '"http://cran.wu.ac.at/"'
    Name: env
  - CmdLine:
    - echo 'DPkg::Post-Invoke {"/bin/rm -f /var/cache/apt/archives/*.deb || true";};'
      | tee /etc/apt/apt.conf.d/no-cache &&   apt-get update -q -y &&   apt-get dist-upgrade
      -y &&   apt-get clean  &&   rm -rf /var/cache/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y   libxml2-dev  python-matplotlib  python-numpy  python-pip  python-pandas  python-sklearn  python-software-properties  software-properties-common  unzip  wget
      &&  apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:webupd8team/java &&     apt-get update -q &&     echo
      debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
      &&     echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
      &&     DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java7-installer
      &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "if (! ('methods'  %in% rownames(installed.packages()))) { install.packages('methods',  repos='$cran_repo'
      ) }" &&     Rscript -e "if (! ('statmod'  %in% rownames(installed.packages())))
      { install.packages('statmod',  repos='$cran_repo' ) }" &&     Rscript -e "if
      (! ('stats'    %in% rownames(installed.packages()))) { install.packages('stats',    repos='$cran_repo'
      ) }" &&     Rscript -e "if (! ('graphics' %in% rownames(installed.packages())))
      { install.packages('graphics', repos='$cran_repo' ) }" &&     Rscript -e "if
      (! ('RCurl'    %in% rownames(installed.packages()))) { install.packages('RCurl',    repos='$cran_repo'
      ) }" &&     Rscript -e "if (! ('jsonlite' %in% rownames(installed.packages())))
      { install.packages('jsonlite', repos='$cran_repo' ) }" &&     Rscript -e "if
      (! ('tools'    %in% rownames(installed.packages()))) { install.packages('tools',    repos='$cran_repo'
      ) }" &&     Rscript -e "if (! ('tools'    %in% rownames(installed.packages())))
      { install.packages('ggplot2',  repos='$cran_repo' ) }" &&     Rscript -e "if
      (! ('utils'    %in% rownames(installed.packages()))) { install.packages('utils',    repos='$cran_repo'
      ) }"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&   wget --no-check-certificate http://h2o-release.s3.amazonaws.com/h2o/master/3717/h2o-3.11.0.3717.zip
      -O h2o.zip &&   unzip -d /tmp /tmp/h2o.zip &&   rm /tmp/h2o.zip &&   Rscript
      -e "install.packages('`find /tmp/ -name h2o*tar.gz`', repos=NULL, type = 'source')"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgtk2.0-dev && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages(c('base64enc'   , 'tibble'  , 'rmarkdown', 'markdown'
      , 'caTools'),   repos='$cran_repo') " &&     Rscript -e "install.packages(c('evaluate'    ,
      'digest'  , 'formatR'  , 'highr'    , 'knitr'  ),   repos='$cran_repo') " &&     Rscript
      -e "install.packages(c('stringr'     , 'yaml'    , 'Rcpp'     , 'htmltools',
      'rattle' ),   repos='$cran_repo') " &&     Rscript -e "install.packages(c('rpart.plot'  ,
      'partykit', 'caret'    , 'party'    , 'pROC'   ),   repos='$cran_repo') " &&     Rscript
      -e "install.packages(c('RColorBrewer', 'rBayesianOptimization' ),   repos='$cran_repo')
      "
    Name: run
    PrependShell: true
  - Name: user
    User: guest
  - CmdLine:
    - cd /home/guest &&     wget https://codeload.github.com/a-ghorbani/h2o_examples/zip/master
      -O h2o_examples.zip &&     unzip h2o_examples.zip &&     rm h2o_examples.zip
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "8787"
  - Name: expose
    Ports:
    - "54321"
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: quantumobject/docker-rstudio
  Name: ""
  Platform: ""
  SourceCode: FROM quantumobject/docker-rstudio
