{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "quantumobject/docker-rstudio",
      "SourceCode": "FROM quantumobject/docker-rstudio",
      "Platform": "",
      "From": {
        "Image": "quantumobject/docker-rstudio"
      },
      "Commands": [
        {
          "Maintainer": "\"Asghar Ghorbani\" ghorbani59@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "cran_repo",
              "Value": "\"http://cran.wu.ac.at/\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' | tee /etc/apt/apt.conf.d/no-cache \u0026\u0026   apt-get update -q -y \u0026\u0026   apt-get dist-upgrade -y \u0026\u0026   apt-get clean  \u0026\u0026   rm -rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y   libxml2-dev  python-matplotlib  python-numpy  python-pip  python-pandas  python-sklearn  python-software-properties  software-properties-common  unzip  wget \u0026\u0026  apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:webupd8team/java \u0026\u0026     apt-get update -q \u0026\u0026     echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026     echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java7-installer \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"if (! ('methods'  %in% rownames(installed.packages()))) { install.packages('methods',  repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('statmod'  %in% rownames(installed.packages()))) { install.packages('statmod',  repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('stats'    %in% rownames(installed.packages()))) { install.packages('stats',    repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('graphics' %in% rownames(installed.packages()))) { install.packages('graphics', repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('RCurl'    %in% rownames(installed.packages()))) { install.packages('RCurl',    repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('jsonlite' %in% rownames(installed.packages()))) { install.packages('jsonlite', repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('tools'    %in% rownames(installed.packages()))) { install.packages('tools',    repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('tools'    %in% rownames(installed.packages()))) { install.packages('ggplot2',  repos='$cran_repo' ) }\" \u0026\u0026     Rscript -e \"if (! ('utils'    %in% rownames(installed.packages()))) { install.packages('utils',    repos='$cran_repo' ) }\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   wget --no-check-certificate http://h2o-release.s3.amazonaws.com/h2o/master/3717/h2o-3.11.0.3717.zip -O h2o.zip \u0026\u0026   unzip -d /tmp /tmp/h2o.zip \u0026\u0026   rm /tmp/h2o.zip \u0026\u0026   Rscript -e \"install.packages('`find /tmp/ -name h2o*tar.gz`', repos=NULL, type = 'source')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libgtk2.0-dev \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages(c('base64enc'   , 'tibble'  , 'rmarkdown', 'markdown' , 'caTools'),   repos='$cran_repo') \" \u0026\u0026     Rscript -e \"install.packages(c('evaluate'    , 'digest'  , 'formatR'  , 'highr'    , 'knitr'  ),   repos='$cran_repo') \" \u0026\u0026     Rscript -e \"install.packages(c('stringr'     , 'yaml'    , 'Rcpp'     , 'htmltools', 'rattle' ),   repos='$cran_repo') \" \u0026\u0026     Rscript -e \"install.packages(c('rpart.plot'  , 'partykit', 'caret'    , 'party'    , 'pROC'   ),   repos='$cran_repo') \" \u0026\u0026     Rscript -e \"install.packages(c('RColorBrewer', 'rBayesianOptimization' ),   repos='$cran_repo') \""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "guest"
        },
        {
          "CmdLine": [
            "cd /home/guest \u0026\u0026     wget https://codeload.github.com/a-ghorbani/h2o_examples/zip/master -O h2o_examples.zip \u0026\u0026     unzip h2o_examples.zip \u0026\u0026     rm h2o_examples.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "8787"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "54321"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        }
      ]
    }
  ]
}