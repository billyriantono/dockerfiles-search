MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-devel-ubuntu14.04
  Commands:
  - Maintainer: Asghar Ghorbani [https://de.linkedin.com/in/aghorbani]
    Name: maintainer
  - Key: CONDA_VER
    Name: arg
    Value: '"4.3.21"'
  - Key: NUMBA_VERSION
    Name: arg
    Value: '"0.34"'
  - Key: MAPD_FILE
    Name: arg
    Value: '"mapd-os-3.2.1dev-20170816-fd5eaf9-Linux-x86_64"'
  - Key: PYGDF_COMMIT
    Name: arg
    Value: '"d5fcdec"'
  - Key: LIBGDF_COMMIT
    Name: arg
    Value: '"21d35dc"'
  - Key: PYMAPD_COMMIT
    Name: arg
    Value: '"422ee09"'
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: MAPD_DIR
      Value: /opt/mapd
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository
      -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get install -y wget git
      vim openjdk-8-jre libopenblas-dev curl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     curl -s https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VER}-Linux-x86_64.sh
      -o miniconda.sh &&     /bin/bash miniconda.sh -f -b -p $CONDA_DIR &&     rm
      miniconda.sh &&     conda install --quiet --yes conda=${CONDA_VER} &&     conda
      install --quiet --yes conda-build=2.1.10 &&     conda config --system --add
      channels conda-forge &&     conda config --system --set auto_update_conda false
      &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y jupyter=1.* notebook=5.* &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c numba cudatoolkit=8 numba=$NUMBA_VERSION &&     conda clean
      -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://jenkins-os.mapd.com/job/core-os/81/immerse=on,processor=cuda,sanitizer=off/artifact/build/${MAPD_FILE}.tar.gz
      &&     mkdir -p $MAPD_DIR &&     tar -xvf ${MAPD_FILE}.tar.gz -C $MAPD_DIR --strip-components=1
      &&     rm ${MAPD_FILE}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash appuser
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R appuser $MAPD_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - chgrp -R appuser $MAPD_DIR
    Name: run
    PrependShell: true
  - Name: user
    User: appuser
  - Name: workdir
    Path: /home/appuser
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64/server/:/usr/local/nvidia/lib64/:/usr/local/cuda/lib64/
    Name: env
  - CmdLine:
    - echo $LD_LIBRARY_PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/gpuopenanalytics/pygdf && cd pygdf && git checkout
      $PYGDF_COMMIT
    Name: run
    PrependShell: true
  - CmdLine:
    - conda env create -f=pygdf/conda_environments/notebook_py35.yml &&     conda
      clean -iltpsy
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p notebooks &&     cp -R ./pygdf/notebooks ./notebooks/pygdf
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source activate pycudf_notebook_py35 &&     pip install https://s3.amazonaws.com/h2o-beta-release/goai/h2oaiglm-0.0.1-py2.py3-none-any.whl
      &&     pip install pandas seaborn psutil &&     pip install -e git+https://github.com/fbcotter/py3nvml#egg=py3nvml
      &&     conda clean -iltpsy "
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/gpuopenanalytics/libgdf.git && cd libgdf && git
      checkout $LIBGDF_COMMIT &&     cd thirdparty/cub/ &&     git clone https://github.com/NVlabs/cub.git
      . &&     git checkout 1.7.0 &&     cd ../moderngpu/ &&     git clone https://github.com/moderngpu/moderngpu.git
      . &&     git checkout c1fd31d &&     cd ../../ &&     /bin/bash -c "source activate
      pycudf_notebook_py35 &&     conda build --py 3.5 conda-recipes/libgdf &&     conda
      install -y --use-local libgdf &&     conda build --py 3.5 conda-recipes/libgdf_cffi
      &&     conda install -y --use-local libgdf_cffi &&     conda clean -iltpsy "
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/mapd/pymapd.git && cd pymapd && git checkout $PYMAPD_COMMIT
      &&     /bin/bash -c "source activate pycudf_notebook_py35 &&     conda install
      -y pyarrow arrow-cpp setuptools_scm cython &&     python setup.py install &&     conda
      clean -iltpsy "
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts
    - scripts
  - Name: expose
    Ports:
    - "9090"
    - "9091"
    - "9092"
    - "9093"
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - ./scripts/start.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --jupyter-args='--ip=*'
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:8.0-devel-ubuntu14.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-devel-ubuntu14.04
