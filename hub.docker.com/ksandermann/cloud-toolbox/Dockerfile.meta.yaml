MetaArgs:
- DefaultValue: "18.04"
  Key: UBUNTU_VERSION
  ProvidedValue: null
  Value: "18.04"
- DefaultValue: '"https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz"'
  Key: OC_CLI_SOURCE
  ProvidedValue: null
  Value: '"https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz"'
- DefaultValue: '"3.0.1"'
  Key: HELM_VERSION
  ProvidedValue: null
  Value: '"3.0.1"'
- DefaultValue: '"0.12.17"'
  Key: TERRAFORM_VERSION
  ProvidedValue: null
  Value: '"0.12.17"'
- DefaultValue: '"8.1p1"'
  Key: OPENSSH_VERSION
  ProvidedValue: null
  Value: '"8.1p1"'
- DefaultValue: '"1.16.3"'
  Key: KUBECTL_VERSION
  ProvidedValue: null
  Value: '"1.16.3"'
- DefaultValue: '"2.9.2"'
  Key: ANSIBLE_VERSION
  ProvidedValue: null
  Value: '"2.9.2"'
- DefaultValue: '"2.10.3"'
  Key: JINJA_VERSION
  ProvidedValue: null
  Value: '"2.10.3"'
- DefaultValue: '"2.0.77-1~bionic"'
  Key: AZ_CLI_VERSION
  ProvidedValue: null
  Value: '"2.0.77-1~bionic"'
- DefaultValue: '"1.16.297"'
  Key: AWS_CLI_VERSION
  ProvidedValue: null
  Value: '"1.16.297"'
- DefaultValue: '"19.03.5"'
  Key: DOCKER_VERSION
  ProvidedValue: null
  Value: '"19.03.5"'
- DefaultValue: '"1.15.0"'
  Key: KOPS_VERSION
  ProvidedValue: null
  Value: '"1.15.0"'
- DefaultValue: '"5.4.2-3ubuntu3.1"'
  Key: ZSH_VERSION
  ProvidedValue: null
  Value: '"5.4.2-3ubuntu3.1"'
- DefaultValue: kubetools
  Key: TILLER_NAMESPACE
  ProvidedValue: null
  Value: kubetools
Stages:
- As: builder
  BaseName: ksandermann/multistage-builder:2019-09-17
  Commands:
  - Maintainer: Kevin Sandermann <kevin.sandermann@gmail.com>
    Name: maintainer
  - Labels:
    - Key: maintainer
      Value: '"kevin.sandermann@gmail.com"'
    Name: label
  - Key: OC_CLI_SOURCE
    Name: arg
    Value: null
  - Key: HELM_VERSION
    Name: arg
    Value: null
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: null
  - Key: DOCKER_VERSION
    Name: arg
    Value: null
  - Key: KUBECTL_VERSION
    Name: arg
    Value: null
  - Key: KOPS_VERSION
    Name: arg
    Value: null
  - Name: workdir
    Path: /root/download
  - CmdLine:
    - touch oc_cli.tar.gz &&     mkdir -p oc_cli &&     curl -SsL --retry 5 -o oc_cli.tar.gz
      $OC_CLI_SOURCE &&     tar xf oc_cli.tar.gz -C oc_cli &&     cp oc_cli/*/* oc_cli
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -SsL --retry 5 "https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz"
      | tar xz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/download
  - CmdLine:
    - wget https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform\_$TERRAFORM_VERSION\_linux_amd64.zip
      &&     unzip ./terraform\_$TERRAFORM_VERSION\_linux_amd64.zip -d terraform_cli
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir -p /root/download/docker/bin &&     set -eux;     arch="$(uname -m)";     if
      ! wget -O docker.tgz "https://download.docker.com/linux/static/stable/${arch}/docker-${DOCKER_VERSION}.tgz";
      then         echo >&2 "error: failed to download ''docker-${DOCKER_VERSION}''
      from ''stable'' for ''${arch}''";         exit 1;     fi;     tar --extract         --file
      docker.tgz         --strip-components 1         --directory /root/download/docker/bin'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl
      -O /root/download/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo kops https://github.com/kubernetes/kops/releases/download/$KOPS_VERSION/kops-linux-amd64
    Name: run
    PrependShell: true
  From:
    Image: ksandermann/multistage-builder:2019-09-17
  Name: builder
  Platform: ""
  SourceCode: FROM ksandermann/multistage-builder:2019-09-17 as builder
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Kevin Sandermann <kevin.sandermann@gmail.com>
    Name: maintainer
  - Labels:
    - Key: maintainer
      Value: '"kevin.sandermann@gmail.com"'
    Name: label
  - Key: OPENSSH_VERSION
    Name: arg
    Value: null
  - Key: KUBECTL_VERSION
    Name: arg
    Value: null
  - Key: ANSIBLE_VERSION
    Name: arg
    Value: null
  - Key: JINJA_VERSION
    Name: arg
    Value: null
  - Key: AZ_CLI_VERSION
    Name: arg
    Value: null
  - Key: AWS_CLI_VERSION
    Name: arg
    Value: null
  - Key: ZSH_VERSION
    Name: arg
    Value: null
  - Key: TILLER_NAMESPACE
    Name: arg
    Value: null
  - Env:
    - Key: TILLER_NAMESPACE
      Value: $TILLER_NAMESPACE
    Name: env
  - Name: user
    User: root
  - Name: workdir
    Path: /root
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install -y     apt-utils     apt-transport-https     bash-completion     build-essential     ca-certificates     curl     dnsutils     fping     git     gnupg     gnupg2     groff     iputils-ping     jq     less     libssl-dev     locales     lsb-release     nano     net-tools     netcat     python3     python3-dev     python3-pip     software-properties-common     sudo     telnet     unzip     uuid-runtime     vim     wget     zlib1g-dev
      &&    apt-get clean -y &&     apt-get autoclean -y &&     apt-get autoremove
      -y &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /var/cache/apt/archives/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y     fonts-powerline     powerline     zsh=$ZSH_VERSION
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: ZSH_THEME
      Value: agnoster
    Name: env
  - CmdLine:
    - wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O
      - | zsh || true
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://mirror.exonetric.net/pub/OpenBSD/OpenSSH/portable/openssh-${OPENSSH_VERSION}.tar.gz"
      &&     tar xfz openssh-${OPENSSH_VERSION}.tar.gz &&     cd openssh-${OPENSSH_VERSION}
      &&     ./configure &&     make &&     make install &&     ssh -V
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pip --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install cryptography==2.3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install     ansible==${ANSIBLE_VERSION}     ansible-lint     hvac     jinja2==${JINJA_VERSION}     jmespath     netaddr     openshift     passlib     pbr==5.1.1     pip     pyOpenSSL     pyvmomi
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli==$AWS_CLI_VERSION --upgrade &&     aws --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://packages.microsoft.com/keys/microsoft.asc |     gpg --dearmor
      |     tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null &&     AZ_REPO=$(lsb_release
      -cs) &&     echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/
      $AZ_REPO main" |     tee /etc/apt/sources.list.d/azure-cli.list &&     apt-get
      update &&     apt-get install -y azure-cli=$AZ_CLI_VERSION &&     az --version
      &&     az extension add --name azure-devops
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/root/download/linux-amd64/helm"'
    - '"/usr/local/bin/helm"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/root/download/oc_cli/oc"'
    - '"/usr/local/bin/oc"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/root/download/terraform_cli/terraform"'
    - '"/usr/local/bin/terraform"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/root/download/docker/bin/*"'
    - '"/usr/local/bin/"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/root/download/kubectl"'
    - '"/usr/local/bin/kubectl"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/root/download/kops"'
    - '"/usr/local/bin/kops"'
  - CmdLine:
    - chmod +x     "/usr/local/bin/helm"     "/usr/local/bin/oc"     "/usr/local/bin/terraform"     "/usr/local/bin/kubectl"     "/usr/local/bin/containerd"     "/usr/local/bin/containerd-shim"     "/usr/local/bin/docker"     "/usr/local/bin/docker-init"     "/usr/local/bin/docker-proxy"     "/usr/local/bin/dockerd"     "/usr/local/bin/kops"
      &&     helm version --client &&     kubectl version --client=true &&     terraform
      version &&     docker --version &&     kops version
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .bashrc
    - /root/.bashrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .zshrc
    - /root/.zshrc
  - Name: workdir
    Path: /root/project
  - CmdLine:
    - /bin/zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
