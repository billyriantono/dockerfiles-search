{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.10.2",
      "SourceCode": "FROM phusion/baseimage:0.10.2",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.10.2"
      },
      "Commands": [
        {
          "Maintainer": "Michael Fong \u003cmcfong.open@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "mkdir /workspace \u0026\u0026 chmod -R 0777 /workspace ;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/workspace"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dbgsym.list",
            "/etc/apt/sources.list.d/dbgsym.list"
          ]
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C8CAB6595FDFF622"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y linux-headers-`uname -r`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y linux-tools-common linux-tools-generic linux-tools-`uname -r`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'kernel.perf_event_paranoid = -1' \u003e /etc/sysctl.d/perf.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gcc systemtap systemtap-sdt-dev elfutils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p stap-scripts/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "stap-scripts/*",
            "/workspace/stap-scripts/"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y sysbench"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y vim git unzip tar wget curl cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/brendangregg/FlameGraph /workspace/FlameGraph"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/brendangregg/perf-tools.git /workspace/perf-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/iovisor/bcc.git /workspace/bcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/tobert/pcstat.git /workspace/pcstat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/hoytech/vmtouch.git /workspace/vmtouch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /workspace/vmtouch \u0026\u0026 \tmake \u0026\u0026 \tmake install;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/service/sshd/down"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/my_init.d/00_regen_ssh_host_keys.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/enable_insecure_key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:docker' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/workspace/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /workspace/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/workspace/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y       autoconf       automake       autotools-dev       bison       build-essential       curl       flex       git       iptables-dev       libcurl4-gnutls-dev       libdbi0-dev       libesmtp-dev       libganglia1-dev       libgcrypt11-dev       libglib2.0-dev       libhiredis-dev       libltdl-dev       liblvm2-dev       libmemcached-dev       libmnl-dev       libmodbus-dev       libmysqlclient-dev       libopenipmi-dev       liboping-dev       libow-dev       libpcap-dev       libperl-dev       libpq-dev       libprotobuf-c-dev       librabbitmq-dev       librrd-dev       libsensors4-dev       libsnmp-dev       libtokyocabinet-dev       libtokyotyrant-dev       libtool       libupsclient-dev       libvirt-dev       libxml2-dev       libyajl-dev       linux-libc-dev       pkg-config       protobuf-c-compiler       python-dev \u0026\u0026       rm -rf /usr/share/doc/* \u0026\u0026       rm -rf /usr/share/info/* \u0026\u0026       rm -rf /tmp/* \u0026\u0026       rm -rf /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "COLLECTD_VERSION",
          "Name": "arg",
          "Value": "collectd-5.8"
        },
        {
          "Name": "workdir",
          "Path": "/usr/src"
        },
        {
          "CmdLine": [
            "git clone https://github.com/collectd/collectd.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/collectd"
        },
        {
          "CmdLine": [
            "git checkout $COLLECTD_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./configure     --prefix=/usr     --sysconfdir=/etc/collectd     --without-libstatgrab     --without-included-ltdl     --disable-static     --disable-lvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "collectd.conf",
            "/etc/collectd/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "types.db",
            "/usr/share/collectd/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/service/collectd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "collectd-docker-entrypoint.sh",
            "/etc/service/collectd/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/service/collectd/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}