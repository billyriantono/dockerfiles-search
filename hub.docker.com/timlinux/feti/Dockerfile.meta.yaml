MetaArgs: null
Stages:
- BaseName: python:3.4
  Commands:
  - Maintainer: Dimas Ciputra<dimas@kartoza.com>
    Name: maintainer
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - dpkg-divert --local --rename --add /sbin/initctl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y; apt-get -y --force-yes install yui-compressor
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-gdal
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-geoip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y rpl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y  --force-yes install yui-compressor
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -g install yuglify
    Name: run
    PrependShell: true
  - CmdLine:
    - rpl "env node" "env nodejs" /usr/local/lib/node_modules/yuglify/bin/yuglify
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - deployment/docker/REQUIREMENTS.txt
    - /REQUIREMENTS.txt
  - CmdLine:
    - pip install -r /REQUIREMENTS.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install uwsgi
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://dl.eff.org/certbot-auto
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x certbot-auto
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash nodesource_setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y --force-yes install nodejs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/web/django_project
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - django_project
    - /home/web/django_project
  - CmdLine:
    - npm install -g grunt-cli
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deployment/docker/package.json
    - /home/web/django_project/package.json
  - CmdLine:
    - cd /home/web/django_project && npm install --save-dev grunt grunt-contrib-concat
      grunt-contrib-uglify
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/web/django_project && npm install --save-dev grunt-contrib-requirejs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deployment/sites-enabled
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deployment/setup_data
    - /home/setup/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - deployment/docker/uwsgi.conf
    - /uwsgi.conf
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - uwsgi
    - --ini
    - /uwsgi.conf
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.4
