{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Temesghen Kahsai \u003clememta@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SEAHORN",
              "Value": "/home/seahorn/seahorn_bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/home/seahorn/seahorn/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo apt-get update -qq \u0026\u0026   sudo apt-get upgrade -qq \u0026\u0026   sudo apt-get install bridge-utils \u0026\u0026   apt-get install -qq build-essential clang-3.6 \u0026\u0026   apt-get install -qq software-properties-common \u0026\u0026   apt-get install -qq curl git ninja-build man subversion vim wget cmake \u0026\u0026   apt-get install -qq libboost-program-options-dev \u0026\u0026   apt-get install python2.7 python2.7-dev -y \u0026\u0026   apt-get install -y libboost1.55-all-dev \u0026\u0026   apt-get install --yes libgmp-dev \u0026\u0026   apt-get install --yes python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export LZ=\"$TRAVIS_BUILD_DIR/../lz\" \u0026\u0026   mkdir -p $LZ \u0026\u0026   wget --output-document=llvm-z3.tar.gz https://www.dropbox.com/s/cipjz38k3boyd1v/llvm-3.6-z3.tar.gz?dl=1 \u0026\u0026   tar xvf llvm-z3.tar.gz -C $LZ \u0026\u0026   ls $LZ \u0026\u0026   sudo pip install lit \u0026\u0026   sudo pip install OutputCheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/seahorn/seahorn \u0026\u0026   cd seahorn \u0026\u0026   ls \u0026\u0026   mkdir -p build \u0026\u0026   cd build \u0026\u0026   mv $LZ/run run \u0026\u0026   /usr/bin/cmake -DBOOST_ROOT=$BOOST_ROOT -DZ3_ROOT=run -DLLVM_DIR=$(pwd)/run/share/llvm/cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PROGRAM_PATH=/usr/bin  -DCMAKE_INSTALL_PREFIX=run ../ \u0026\u0026   /usr/bin/cmake --build . --target extra \u0026\u0026   ls ../ \u0026\u0026   /usr/bin/cmake --build . \u0026\u0026   /usr/bin/cmake --build . \u0026\u0026   /usr/bin/cmake --build . --target install \u0026\u0026   ls run/bin/ \u0026\u0026   run/bin/sea -h \u0026\u0026   /usr/bin/cmake --build . --target test-simple"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "C_INCLUDE_PATH",
              "Value": "\"/home/seahorn/include/seahorn:$C_INCLUDE_PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/home/seahorn/build/run/bin:$PATH\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}