MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Env:
    - Key: TZ
      Value: Australia/Sydney
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/workspace
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/workspace
  - CmdLine:
    - yum update -y && yum install -y wget curl grep sed unzip git bash make ca-certificates
      telnet which tree bzip2 yum-utils device-mapper-persistent-data lvm2
    Name: run
    PrependShell: true
  - CmdLine:
    - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - systemctl enable docker
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip awscli-bundle.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O /usr/local/bin/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /usr/local/bin/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export JAVA_HOME=$(dirname $(dirname $(readlink $(readlink $(which javac)))))"
      > /etc/profile.d/java8.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export PATH=\$PATH:\$JAVA_HOME/bin" >> /etc/profile.d/java8.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export CLASSPATH=.:\$JAVA_HOME/jre/lib:\$JAVA_HOME/lib:\$JAVA_HOME/lib/tools.jar"
      >> /etc/profile.d/java8.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - source /etc/profile.d/java8.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - alternatives --install /usr/bin/java java $JAVA_HOME/bin/java 1
    Name: run
    PrependShell: true
  - CmdLine:
    - alternatives --install /usr/bin/javac javac $JAVA_HOME/bin/javac 1
    Name: run
    PrependShell: true
  - Env:
    - Key: SONAR_SCANNER_VERSION
      Value: 3.0.3.778
    Name: env
  - CmdLine:
    - curl --insecure -o /usr/workspace/sonarscanner.zip -L https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip sonarscanner.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm sonarscanner.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sonar-runner.properties
    - /usr/workspace/sonar-scanner-$SONAR_SCANNER_VERSION-linux/conf/sonar-scanner.properties
  - CmdLine:
    - sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' /usr/workspace/sonar-scanner-$SONAR_SCANNER_VERSION-linux/bin/sonar-scanner
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/sonar
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./sonar-scanner-$SONAR_SCANNER_VERSION-linux /opt/sonar/
    Name: run
    PrependShell: true
  - Env:
    - Key: SONAR_RUNNER_HOME
      Value: /opt/sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/opt/sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux/bin
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.5.2
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/lib/mvn
    Name: env
  - Env:
    - Key: PATH
      Value: $MAVEN_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - yum install -y wget && wget http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
      &&   tar -zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz &&   rm apache-maven-$MAVEN_VERSION-bin.tar.gz
      &&   mv apache-maven-$MAVEN_VERSION /usr/lib/mvn
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/gradle
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_VERSION
      Value: "4.6"
    Name: env
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle/gradle-${GRADLE_VERSION}
    Name: env
  - Key: GRADLE_DOWNLOAD_SHA256
    Name: arg
    Value: 98bd5fd2b30e070517e03c51cbb32beee3e2ee1a84003a5a5d748996d4b1b915
  - CmdLine:
    - "set -o errexit -o nounset \t&& echo \"Downloading Gradle\" \t&& wget --no-verbose
      --output-document=gradle.zip \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\"
      \t\t&& echo \"Checking download hash\" \t&& echo \"${GRADLE_DOWNLOAD_SHA256}
      *gradle.zip\" | sha256sum -c - \t\t&& echo \"Installing Gradle\" \t&& unzip
      gradle.zip \t&& rm gradle.zip \t&& mv \"gradle-${GRADLE_VERSION}\" \"/opt/gradle/\"
      \t&& ln -s \"${GRADLE_HOME}/bin/gradle\" /usr/bin/gradle"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh
      | bash     && export NVM_DIR="$HOME/.nvm"     && . "$NVM_DIR/nvm.sh"     &&
      nvm install 8.11.1
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.nvm/versions/node/v8.11.1/bin:$PATH
    Name: env
  - CmdLine:
    - export PATH=/root/.nvm/versions/node/v8.11.1/bin:$PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && chmod 755 ./get-pip.py     &&
      ./get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g typescript
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: /root/.nvm/versions/node/v8.11.1/lib/node_modules
    Name: env
  - CmdLine:
    - npm install -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -q -n ""
    Name: run
    PrependShell: true
  - CmdLine:
    - eval $(ssh-agent -s) && ssh-add /root/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "eval \$(ssh-agent -s)" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - workspace
    - /usr/workspace
  - CmdLine:
    - chmod 755 /usr/workspace/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: true
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
