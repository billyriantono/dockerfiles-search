MetaArgs:
- DefaultValue: "3.10"
  Key: ALPINE_VERSION
  ProvidedValue: null
  Value: "3.10"
Stages:
- BaseName: alpine:${ALPINE_VERSION}
  Commands:
  - Key: ANSIBLE_VERSION
    Name: arg
    Value: '"2.8.5"'
  - CmdLine:
    - set -ex     && apk add --no-cache --update             python3 ca-certificates
      openssh-client sshpass bash su-exec rsync     && apk add --no-cache --update
      --virtual            .build-deps python3-dev build-base libffi-dev openssl-dev         &&
      pip3 install --no-cache --upgrade             pip     && pip3 install --no-cache
      --upgrade             setuptools ansible==${ANSIBLE_VERSION}         && apk
      del --no-cache --purge .build-deps     && rm -rf /var/cache/apk/* /root/.cache         &&
      ln -s /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && mkdir -p /etc/ansible/     && /bin/echo -e "[local]\nlocalhost
      ansible_connection=local" > /etc/ansible/hosts ;        adduser -s /bin/bash
      -u 1000 -D -h /ansible ansible     && mkdir -p /ansible/.ssh     && ssh-keygen
      -q -t ed25519 -N '' -f /ansible/.ssh/id_ed25519     && echo "Host *" > /ansible/.ssh/config
      && echo " StrictHostKeyChecking no" >> /ansible/.ssh/config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /ansible/playbooks
  - CmdLine:
    - '["ansbile" "--version"]'
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:${ALPINE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:${ALPINE_VERSION}
