MetaArgs: null
Stages:
- BaseName: docker:latest
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: '"Alexis Vincent <mail@alexisvincent.io>"'
    Name: label
  - Env:
    - Key: DOCKER_DRIVER
      Value: overlay
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "set -x \t&& apk update \t&& apk add --no-cache \tcurl \tgit \tmake \tpython
      \tbash"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "9"
    - Key: JAVA_VERSION_MINOR
      Value: "0"
    - Key: JAVA_VERSION_BUILD
      Value: "0"
    - Key: JAVA_PACKAGE
      Value: jdk9
    - Key: JAVA_JCE
      Value: standard
    - Key: JAVA_HOME
      Value: /opt/jdk
    - Key: PATH
      Value: ${PATH}:/opt/jdk/bin
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - 'set -ex &&     apk upgrade --update &&     apk add --no-cache bash ca-certificates
      curl &&     echo "export LANG=C.UTF-8" > /etc/profile.d/locale.sh &&     echo
      ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf
      &&     mkdir -p /opt/jdk &&     curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"
      http://download.java.net/java/jdk9-alpine/archive/181/binaries/jdk-9-ea+181_linux-x64-musl_bin.tar.gz
      -o /tmp/jdk.tar.gz &&     JAVA_PACKAGE_SHA256=$(curl -sSL http://download.java.net/java/jdk9-alpine/archive/181/binaries/jdk-9-ea+181_linux-x64-musl_bin.sha256
      | awk ''{print $NF}'') &&     echo "${JAVA_PACKAGE_SHA256}  /tmp/jdk.tar.gz"
      > /tmp/jdk.tar.gz.sha256 &&     sha256sum -c /tmp/jdk.tar.gz.sha256 &&     tar
      zxvf /tmp/jdk.tar.gz -C /opt/jdk --strip-components=1 &&     rm /tmp/jdk.tar.gz'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L "https://github.com/gliderlabs/sigil/releases/download/v0.4.0/sigil_0.4.0_$(uname
      -sm|tr \  _).tgz" | tar -zxC /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sSL https://download.clojure.org/install/linux-install-1.9.0.302.sh -o
      clojure-install.sh &&     bash ./clojure-install.sh && \t\trm ./clojure-install.sh
      && \t\tclojure -e \"(println \\\"downloaded deps...\\\")\""
    Name: run
    PrependShell: true
  - Env:
    - Key: BOOT_VERSION
      Value: 2.7.2
    Name: env
  - Env:
    - Key: BOOT_AS_ROOT
      Value: "yes"
    Name: env
  - Env:
    - Key: BOOT_CLOJURE_VERSION
      Value: 1.9.0
    Name: env
  - Env:
    - Key: BOOT_JVM_OPTIONS
      Value: "\" \t-client \t-XX:+TieredCompilation \t-XX:TieredStopAtLevel=1 \t-Xmx2g
        \t-XX:+CMSClassUnloadingEnabled \t-Xverify:none\""
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools.clj
    - /usr/local/bin/tools
  - CmdLine:
    - "cd /usr/local/bin &&     curl -fsSLo boot https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh
      && \t\tchmod 755 boot && \t\ttools"
    Name: run
    PrependShell: true
  - Env:
    - Key: GCLOUD_SDK_VERSION
      Value: 184.0.0
    Name: env
  - Env:
    - Key: GCLOUD_SDK_URL
      Value: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz
    Name: env
  - CmdLine:
    - "mkdir -p /opt && \tcd /opt && \tcurl -q ${GCLOUD_SDK_URL} | tar zxf - && \techo
      Y | /opt/google-cloud-sdk/install.sh && \t/opt/google-cloud-sdk/bin/gcloud --quiet
      components update kubectl --version=${GCLOUD_SDK_VERSION}"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/google-cloud-sdk/bin:$PATH"'
    Name: env
  From:
    Image: docker:latest
  Name: ""
  Platform: ""
  SourceCode: FROM docker:latest
