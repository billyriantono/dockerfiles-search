MetaArgs: null
Stages:
- BaseName: centos
  Commands:
  - Env:
    - Key: VERSION
      Value: "0"
    - Key: RELEASE
      Value: "1"
    - Key: ARCH
      Value: x86_64
    Name: env
  - Labels:
    - Key: com.redhat.component
      Value: '"cri-o"'
    - Key: name
      Value: '"$FGC/cri-o"'
    - Key: version
      Value: '"$VERSION"'
    - Key: release
      Value: '"$RELEASE.$DISTTAG"'
    - Key: architecture
      Value: '"$ARCH"'
    - Key: usage
      Value: '"atomic install --system --system-package=no crio && systemctl start
        crio"'
    - Key: summary
      Value: '"The cri-o daemon as a system container."'
    - Key: maintainer
      Value: '"Yu Qi Zhang <jzehrarnyg@gmail.com>"'
    - Key: atomic.type
      Value: '"system"'
    Name: label
  - CmdLine:
    - yum-config-manager --nogpgcheck --add-repo https://cbs.centos.org/repos/virt7-container-common-candidate/x86_64/os/
      &&     yum install --disablerepo=extras --nogpgcheck --setopt=tsflags=nodocs
      -y     btrfs-progs-devel     device-mapper-devel     git     glib2-devel     glibc-devel     glibc-static     go     golang-github-cpuguy83-go-md2man     gpgme-devel     libassuan-devel     libgpg-error-devel     libseccomp-devel     libselinux-devel     ostree-devel     pkgconfig     make     skopeo-containers     runc     socat     iproute     iptables
      &&     yum clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: CRIO_PR
      Value: '""'
    Name: env
  - Env:
    - Key: CRIO_COMMIT
      Value: release-1.8
    Name: env
  - CmdLine:
    - set -x        && export GOPATH="$(mktemp -d)"        && git clone https://github.com/kubernetes-incubator/cri-o.git
      "$GOPATH/src/github.com/kubernetes-incubator/cri-o"        && cd "$GOPATH/src/github.com/kubernetes-incubator/cri-o"        &&
      if [[ -n "$CRIO_PR" ]]; then git fetch origin "pull/$CRIO_PR/head:pr$CRIO_PR"
      && git checkout "pr$CRIO_PR"; else git checkout -q "$CRIO_COMMIT"; fi        &&
      make binaries docs        && ./bin/crio --selinux=true --storage-driver=overlay
      --conmon /usr/libexec/crio/conmon --cni-plugin-dir /usr/libexec/cni --default-mounts
      /usr/share/rhel/secrets:/run/secrets --cgroup-manager=systemd config > crio.conf        &&
      make install.config install.systemd PREFIX=/usr        && make install PREFIX=/usr        &&
      rm -rf "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /exports/hostfs/etc/crio /exports/hostfs/opt/cni/bin/ /exports/hostfs/var/lib/containers/storage/
      &&     cp /etc/crio/* /exports/hostfs/etc/crio &&     if test -e /usr/libexec/cni;
      then cp -Lr /usr/libexec/cni/* /exports/hostfs/opt/cni/bin/; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/storage_option =/s/.*/&\n"overlay.override_kernel_check=1",/' /exports/hostfs/etc/crio/crio.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - manifest.json
    - tmpfiles.template
    - config.json.template
    - service.template
    - /exports/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - set_mounts.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /usr/bin/
  - CmdLine:
    - /usr/bin/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: centos
  Name: ""
  Platform: ""
  SourceCode: FROM centos
