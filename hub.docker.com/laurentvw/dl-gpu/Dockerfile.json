{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel"
      },
      "Commands": [
        {
          "CmdLine": [
            "APT_INSTALL=\"apt-get install -y --no-install-recommends\" \u0026\u0026     PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \u0026\u0026     GIT_CLONE=\"git clone --depth 10\" \u0026\u0026     rm -rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         build-essential         ca-certificates         cmake         wget         git         vim         \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         software-properties-common         \u0026\u0026     add-apt-repository ppa:jonathonf/python-3.6 \u0026\u0026     apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         \u0026\u0026     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python3.6 ~/get-pip.py \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python3 \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python \u0026\u0026     $PIP_INSTALL         setuptools         \u0026\u0026     $PIP_INSTALL         numpy         scipy         pandas         pandas-summary         scikit-learn         matplotlib         fastai         Cython         \u0026\u0026     $PIP_INSTALL         jupyter         \u0026\u0026     $PIP_INSTALL         http://download.pytorch.org/whl/cu90/torch-0.4.0-cp36-cp36m-linux_x86_64.whl         torchvision         \u0026\u0026     $PIP_INSTALL         tensorflow-gpu         \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         libblas-dev         \u0026\u0026     wget -qO- https://github.com/Theano/Theano/archive/rel-1.0.1.tar.gz | tar xz -C ~ \u0026\u0026     cd ~/Theano* \u0026\u0026     $PIP_INSTALL         . \u0026\u0026     $GIT_CLONE https://github.com/Theano/libgpuarray ~/gpuarray \u0026\u0026     mkdir -p ~/gpuarray/build \u0026\u0026 cd ~/gpuarray/build \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. \u0026\u0026     make -j\"$(nproc)\" install \u0026\u0026     cd ~/gpuarray \u0026\u0026     python setup.py build \u0026\u0026     python setup.py install \u0026\u0026     printf '[global]\\nfloatX = float32\\ndevice = cuda0\\n\\n[dnn]\\ninclude_path = /usr/local/cuda/targets/x86_64-linux/include\\n' \u003e ~/.theanorc \u0026\u0026     $PIP_INSTALL         h5py         keras \u0026\u0026     ldconfig \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* ~/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        }
      ]
    }
  ]
}