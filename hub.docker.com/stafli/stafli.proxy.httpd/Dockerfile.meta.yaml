MetaArgs: null
Stages:
- BaseName: stafli/stafli.init.supervisor:supervisor30_debian7
  Commands:
  - Labels:
    - Key: description
      Value: '"Stafli HTTP Proxy Server (stafli/stafli.proxy.httpd), Based on Stafli
        Supervisor Init (stafli/stafli.init.supervisor)"'
    - Key: maintainer
      Value: '"lp@algarvio.org"'
    - Key: org.label-schema.schema-version
      Value: '"1.0.0-rc.1"'
    - Key: org.label-schema.name
      Value: '"Stafli HTTP Proxy Server (stafli/stafli.proxy.httpd)"'
    - Key: org.label-schema.description
      Value: '"Based on Stafli Supervisor Init (stafli/stafli.init.supervisor)"'
    - Key: org.label-schema.keywords
      Value: '"stafli, httpd, proxy, debian, centos"'
    - Key: org.label-schema.url
      Value: '"https://stafli.org/"'
    - Key: org.label-schema.license
      Value: '"GPLv3"'
    - Key: org.label-schema.vendor-name
      Value: '"Stafli"'
    - Key: org.label-schema.vendor-email
      Value: '"info@stafli.org"'
    - Key: org.label-schema.vendor-website
      Value: '"https://www.stafli.org"'
    - Key: org.label-schema.authors.lpalgarvio.name
      Value: '"Luis Pedro Algarvio"'
    - Key: org.label-schema.authors.lpalgarvio.email
      Value: '"lp@algarvio.org"'
    - Key: org.label-schema.authors.lpalgarvio.homepage
      Value: '"https://lp.algarvio.org"'
    - Key: org.label-schema.authors.lpalgarvio.role
      Value: '"Maintainer"'
    - Key: org.label-schema.registry-url
      Value: '"https://hub.docker.com/r/stafli/stafli.proxy.httpd"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/stafli-org/stafli.proxy.httpd"'
    - Key: org.label-schema.vcs-branch
      Value: '"master"'
    - Key: org.label-schema.os-id
      Value: '"debian"'
    - Key: org.label-schema.os-version-id
      Value: '"7"'
    - Key: org.label-schema.os-architecture
      Value: '"amd64"'
    - Key: org.label-schema.version
      Value: '"1.0"'
    Name: label
  - Key: app_httpd_global_mods_core_dis
    Name: arg
    Value: '"asis auth_digest authn_anon authn_dbd authn_dbm authnz_ldap authz_dbm
      authz_owner cache cern_meta cgi cgid charset_lite dav_fs dav dav_lock dbd disk_cache
      dump_io ext_filter file_cache filter ident imagemap include ldap log_forensic
      mem_cache mime_magic negotiation proxy_ajp proxy_balancer proxy_connect proxy_ftp
      proxy_scgi reqtimeout speling substitute suexec unique_id userdir usertrack
      vhost_alias"'
  - Key: app_httpd_global_mods_core_en
    Name: arg
    Value: '"alias dir autoindex mime setenvif env expires headers deflate rewrite
      actions authn_default authn_alias authn_file authz_default authz_groupfile authz_host
      authz_user auth_basic ssl proxy proxy_http info status"'
  - Key: app_httpd_global_mods_extra_dis
    Name: arg
    Value: '"authnz_external"'
  - Key: app_httpd_global_mods_extra_en
    Name: arg
    Value: '"upload_progress xsendfile"'
  - Key: app_httpd_global_user
    Name: arg
    Value: '"www-data"'
  - Key: app_httpd_global_group
    Name: arg
    Value: '"www-data"'
  - Key: app_httpd_global_home
    Name: arg
    Value: '"/var/www"'
  - Key: app_httpd_global_loglevel
    Name: arg
    Value: '"warn"'
  - Key: app_httpd_global_listen_addr
    Name: arg
    Value: '"0.0.0.0"'
  - Key: app_httpd_global_listen_port_http
    Name: arg
    Value: '"80"'
  - Key: app_httpd_global_listen_port_https
    Name: arg
    Value: '"443"'
  - Key: app_httpd_global_listen_timeout
    Name: arg
    Value: '"140"'
  - Key: app_httpd_global_listen_keepalive_status
    Name: arg
    Value: '"On"'
  - Key: app_httpd_global_listen_keepalive_requests
    Name: arg
    Value: '"100"'
  - Key: app_httpd_global_listen_keepalive_timeout
    Name: arg
    Value: '"5"'
  - Key: app_httpd_vhost_id
    Name: arg
    Value: '"default"'
  - Key: app_httpd_vhost_user
    Name: arg
    Value: '"www-data"'
  - Key: app_httpd_vhost_group
    Name: arg
    Value: '"www-data"'
  - Key: app_httpd_vhost_listen_addr
    Name: arg
    Value: '"0.0.0.0"'
  - Key: app_httpd_vhost_listen_port_http
    Name: arg
    Value: '"80"'
  - Key: app_httpd_vhost_listen_port_https
    Name: arg
    Value: '"443"'
  - Key: app_httpd_vhost_httpd_wlist
    Name: arg
    Value: '"127.0.0.1 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16"'
  - CmdLine:
    - printf "Installing repositories and packages...\n" &&         printf "Refresh
      the package manager...\n" &&     apt-get update &&         printf "Install the
      httpd packages...\n" &&     apt-get install -qy       apache2 apache2-utils
      apachetop       apache2-mpm-worker       libapache2-mod-authnz-external pwauth       libapache2-mod-xsendfile
      libapache2-mod-upload-progress       ssl-cert &&         printf "Cleanup the
      package manager...\n" &&     apt-get clean && rm -rf /var/lib/apt/lists/* &&
      rm -Rf /var/cache/apt/* &&         printf "Finished installing repositories
      and packages...\n";
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "Start installing modules...\n" &&         printf "Enabling/disabling
      modules...\n" &&     $(which a2dismod) -f ${app_httpd_global_mods_core_dis}
      &&     $(which a2enmod) -f ${app_httpd_global_mods_core_en} &&     $(which a2dismod)
      -f ${app_httpd_global_mods_extra_dis} &&     $(which a2enmod) -f ${app_httpd_global_mods_extra_en}
      &&     printf "Done enabling/disabling modules...\n" &&         printf "\nChecking
      modules...\n" &&     $(which apache2ctl) -l; $(which apache2ctl) -M &&     printf
      "Done checking modules...\n" &&         printf "Finished installing modules...\n";
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "Adding users and groups...\n" &&         printf "Add httpd user and
      group...\n" &&     id -g ${app_httpd_global_user}     ||     groupadd       --system
      ${app_httpd_global_group} &&     id -u ${app_httpd_global_user} &&     usermod       --gid
      ${app_httpd_global_group}       --home ${app_httpd_global_home}       --shell
      /usr/sbin/nologin       ${app_httpd_global_user}     ||     useradd       --system
      --gid ${app_httpd_global_group}       --no-create-home --home-dir ${app_httpd_global_home}       --shell
      /usr/sbin/nologin       ${app_httpd_global_user} &&         printf "Add vhost
      user and group...\n" &&     app_httpd_vhost_home="${app_httpd_global_home}/${app_httpd_vhost_id}"
      &&     id -g ${app_httpd_vhost_user}     ||     groupadd       --system ${app_httpd_vhost_group}
      &&     id -u ${app_httpd_vhost_user} &&     usermod       --gid ${app_httpd_global_group}       --home
      ${app_httpd_vhost_home}       --shell /usr/sbin/nologin       ${app_httpd_global_user}     ||     useradd       --system
      --gid ${app_httpd_vhost_group}       --create-home --home-dir ${app_httpd_vhost_home}       --shell
      /usr/sbin/nologin       ${app_httpd_vhost_user} &&         printf "Setting vhost
      ownership and permissions...\n" &&     mkdir -p ${app_httpd_vhost_home}/bin
      ${app_httpd_vhost_home}/log ${app_httpd_vhost_home}/html ${app_httpd_vhost_home}/tmp
      &&     chown -R ${app_httpd_global_user}:${app_httpd_global_group} ${app_httpd_vhost_home}
      &&     chmod -R ug=rwX,o=rX ${app_httpd_vhost_home} &&         printf "Finished
      adding users and groups...\n";
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "Updading Supervisor configuration...\n" &&         file="/etc/supervisor/conf.d/init.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     perl -0p
      -i -e "s>supervisorctl start rclocal;>supervisorctl start rclocal; supervisorctl
      start httpd;>" ${file} &&     printf "Done patching ${file}...\n" &&         file="/etc/supervisor/conf.d/httpd.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     printf "#
      HTTPd\n[program:httpd]\ncommand=/bin/bash -c \"\$(which apache2ctl) -d /etc/apache2
      -f /etc/apache2/apache2.conf -D FOREGROUND\"\nautostart=false\nautorestart=true\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0\nstdout_events_enabled=true\nstderr_events_enabled=true\n\n"
      > ${file} &&     printf "Done patching ${file}...\n" &&         printf "Finished
      updading Supervisor configuration...\n";
    Name: run
    PrependShell: true
  - CmdLine:
    - 'printf "Updading HTTPd configuration...\n" &&         file="/etc/apache2/envvars"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     perl -0p
      -i -e "s>APACHE_RUN_USER=.*>APACHE_RUN_USER=${app_httpd_global_user}>" ${file}
      &&     perl -0p -i -e "s>APACHE_RUN_GROUP=.*>APACHE_RUN_GROUP=${app_httpd_global_group}>"
      ${file} &&     printf "Done patching ${file}...\n" &&         file="/etc/apache2/apache2.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     perl -0p
      -i -e "s># container, that host''s errors will be logged there and not here.\n#\nErrorLog
      .*>ErrorLog /proc/self/fd/2>" ${file} &&     perl -0p -i -e "s># alert, emerg.\n#\nLogLevel
      .*># alert, emerg.\n#\nLogLevel ${app_httpd_global_loglevel}>" ${file} &&     perl
      -0p -i -e "s># Do NOT add a slash at the end of the directory path.\n#\nServerRoot
      .*># Do NOT add a slash at the end of the directory path.\n#\nServerRoot \"/etc/apache2\">"
      ${file} &&     perl -0p -i -e "s># Include generic snippets of statements\nInclude
      conf.d/># Include generic snippets of statements\nInclude conf.d/\*.conf>" ${file}
      &&     perl -0p -i -e "s># Include the virtual host configurations:\nInclude
      sites-enabled/># Include the virtual host configurations:\nInclude sites-enabled/\*.conf\n>"
      ${file} &&     perl -0p -i -e "s># Timeout: The number of seconds before receives
      and sends time out.\n#\nTimeout .*># Timeout: The number of seconds before receives
      and sends time out.\n#\nTimeout ${app_httpd_global_listen_timeout}>" ${file}
      &&     perl -0p -i -e "s># one request per connection\). Set to \"Off\" to deactivate.\n#\nKeepAlive
      .*># one request per connection\). Set to \"Off\" to deactivate.\n#\nKeepAlive
      ${app_httpd_global_listen_keepalive_status}>" ${file} &&     perl -0p -i -e
      "s># We recommend you leave this number high, for maximum performance.\n#\nMaxKeepAliveRequests
      .*># We recommend you leave this number high, for maximum performance.\n#\nMaxKeepAliveRequests
      ${app_httpd_global_listen_keepalive_requests}>" ${file} &&     perl -0p -i -e
      "s># same client on the same connection.\n#\nKeepAliveTimeout .*># same client
      on the same connection.\n#\nKeepAliveTimeout ${app_httpd_global_listen_keepalive_timeout}>"
      ${file} &&     perl -0p -i -e "s>Include ports.conf>Include ports.conf\n\n\#
      Sets the default security model of the Apache2 HTTPD server. It does\n\# not
      allow access to the root filesystem outside of /usr/share and /var/www.\n\#
      The former is used by web applications packaged in Debian,\n\# the latter may
      be used for local directories served by the web server. If\n\# your system is
      serving content from a sub-directory in /srv you must allow\n\# access here,
      or in any related virtual host.\n\<Directory /\>\n        Options FollowSymLinks\n        AllowOverride
      None\n        Allow from All\n\</Directory\>\n\n\<Directory /usr/share\>\n        AllowOverride
      None\n        Allow from All\n\</Directory\>\n\n\<Directory /var/www/\>\n        Options
      Indexes FollowSymLinks\n        AllowOverride None\n        Allow from All\n\</Directory\>\n\n\#\<Directory
      /srv/\>\n\#       Options Indexes FollowSymLinks\n\#       AllowOverride None\n\#       Allow
      from All\n\#\</Directory\>\n>" ${file} &&     printf "Done patching ${file}...\n"
      &&         file="/etc/apache2/ports.conf" &&     printf "\n# Applying configuration
      for ${file}...\n" &&     perl -0p -i -e "s>NameVirtualHost \*:80>NameVirtualHost
      ${app_httpd_global_listen_addr}:${app_httpd_global_listen_port_http}>g" ${file}
      &&     perl -0p -i -e "s>Listen 80>Listen ${app_httpd_global_listen_addr}:${app_httpd_global_listen_port_http}>g"
      ${file} &&     perl -0p -i -e "s>    Listen 443>    NameVirtualHost ${app_httpd_global_listen_addr}:${app_httpd_global_listen_port_http}\n    Listen
      ${app_httpd_global_listen_addr}:${app_httpd_global_listen_port_https}>g" ${file}
      &&     printf "Done patching ${file}...\n" &&         mv /etc/apache2/conf.d/charset
      /etc/apache2/conf.d/charset.conf &&     mv /etc/apache2/conf.d/localized-error-pages
      /etc/apache2/conf.d/localized-error-pages.conf &&     mv /etc/apache2/conf.d/other-vhosts-access-log
      /etc/apache2/conf.d/other-vhosts-access-log.conf &&     mv /etc/apache2/conf.d/security
      /etc/apache2/conf.d/security.conf &&         file="/etc/apache2/conf.d/serve-cgi-bin.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     printf "<IfModule
      alias_module>\n    ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/\n    <Directory \"/usr/lib/cgi-bin\">\n        AllowOverride
      None\n        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch\n        Order
      Allow,Deny\n        Allow from All\n    </Directory>\n</IfModule>\n\n" > ${file}
      &&     printf "Done patching ${file}...\n" &&         file="/etc/apache2/conf.d/security.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     perl -0p
      -i -e "s>#ServerTokens Minimal\nServerTokens OS\n#ServerTokens Full>ServerTokens
      Minor>" ${file} &&     perl -0p -i -e "s>#ServerSignature Off\nServerSignature
      On>ServerSignature On>" ${file} &&     printf "Done patching ${file}...\n" &&         file="/etc/apache2/mods-available/ssl.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     perl -0p
      -i -e "s>.*SSLProtocol all .*>SSLProtocol all -SSLv2 -SSLv3>" ${file} &&     perl
      -0p -i -e "s>.*SSLCipherSuite RC4.*>SSLCipherSuite ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS>"
      ${file} &&     perl -0p -i -e "s>.*SSLHonorCipherOrder on>SSLHonorCipherOrder
      On>" ${file} &&     perl -0p -i -e "s>\n\</IfModule\>>\n\# See more information
      at:\n\# https://mozilla.github.io/server-side-tls/ssl-config-generator/\?server=apache-2.2.22\&openssl=1.0.1p\&hsts=no\&profile=intermediate\n\n\</IfModule\>>"
      ${file} &&     printf "Done patching ${file}...\n" &&         file="/etc/apache2/conf.d/other-vhosts-access-log.conf"
      &&     printf "\n# Applying configuration for ${file}...\n" &&     perl -0p
      -i -e "s>CustomLog .*>CustomLog /proc/self/fd/1 vhost_combined>" ${file} &&     printf
      "Done patching ${file}...\n" &&         mkdir -p /etc/apache2/incl.d &&         app_httpd_vhost_home="${app_httpd_global_home}/${app_httpd_vhost_id}"
      &&         file="/etc/apache2/incl.d/${app_httpd_vhost_id}-httpd.conf" &&     printf
      "\n# Applying configuration for ${file}...\n" &&     printf "# HTTPd info and
      status\n<IfModule info_module>\n  <Location /server-info>\n    SetHandler server-info\n    Allow
      from ${app_httpd_vhost_httpd_wlist}\n  </Location>\n</IfModule>\n<IfModule status_module>\n  <Location
      /server-status>\n    SetHandler server-status\n    Allow from ${app_httpd_vhost_httpd_wlist}\n  </Location>\n</IfModule>\n\n"
      > ${file} &&     printf "Done patching ${file}...\n" &&         mv /etc/apache2/sites-available/default
      /etc/apache2/sites-available/000-default.conf.orig &&     mv /etc/apache2/sites-available/default-ssl
      /etc/apache2/sites-available/000-default-ssl.conf.orig &&         file="/etc/apache2/sites-available/${app_httpd_vhost_id}-http.conf"
      &&     cp "/etc/apache2/sites-available/000-default.conf.orig" $file &&     printf
      "\n# Applying configuration for ${file}...\n" &&     printf "Done patching ${file}...\n"
      &&         file="/etc/apache2/sites-available/${app_httpd_vhost_id}-https.conf"
      &&     cp "/etc/apache2/sites-available/000-default-ssl.conf.orig" $file &&     printf
      "\n# Applying configuration for ${file}...\n" &&     printf "Done patching ${file}...\n"
      &&         printf "\n# Generating certificates...\n" &&     make-ssl-cert generate-default-snakeoil
      --force-overwrite &&     printf "\n# Done generating certificates...\n" &&         printf
      "\n# Enabling/disabling vhosts...\n" &&     a2dissite 000-default &&     a2ensite
      ${app_httpd_vhost_id}-http.conf ${app_httpd_vhost_id}-https.conf &&     printf
      "\n# Done enabling/disabling vhosts...\n" &&         printf "\n# Testing configuration...\n"
      &&     echo "Testing $(which apache2ctl):"; $(which apache2ctl) -V; $(which
      apache2ctl) configtest; $(which apache2ctl) -S &&     printf "Done testing configuration...\n"
      &&         printf "Finished updading HTTPd configuration...\n";'
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/supervisord
    - -c
    - /etc/supervisor/supervisord.conf
    - --nodaemon
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - ${app_httpd_global_listen_port_http}
  - Name: expose
    Ports:
    - ${app_httpd_global_listen_port_https}
  From:
    Image: stafli/stafli.init.supervisor:supervisor30_debian7
  Name: ""
  Platform: ""
  SourceCode: FROM stafli/stafli.init.supervisor:supervisor30_debian7
