MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Reza Ranjkesh Shoorkaii <shoorkaii@gmail.com>
    Name: maintainer
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "5037"
  - Name: expose
    Ports:
    - "5554"
  - Name: expose
    Ports:
    - "5555"
  - Name: expose
    Ports:
    - "5900"
  - CmdLine:
    - echo "Android SDK 28.0.3"
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION_SDK_TOOLS
      Value: '"3859397"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: '"/sdk"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: KOTLIN_VERSION
    Name: arg
    Value: 1.3.21
  - CmdLine:
    - apt-get -qq update &&     apt-get install -qqy --no-install-recommends       apt-utils       bzip2       curl       git-core       html2text       openjdk-8-jdk       libc6-i386       lib32stdc++6       lib32gcc1       lib32ncurses5       lib32z1       gnupg       zlib1g       unzip       wget       qt5-default     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/ssl/certs/java/cacerts;     /var/lib/dpkg/info/ca-certificates-java.postinst
      configure
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://dl.google.com/android/repository/sdk-tools-linux-${VERSION_SDK_TOOLS}.zip
      > /sdk.zip &&     unzip /sdk.zip -d /sdk &&     rm -v /sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $ANDROID_HOME/licenses/   && echo "d56f5187479451eabf01fb78af6dfcb131a6481e\n24333f8a63b6825ea9c5514f83c2829b004d1fee"
      > $ANDROID_HOME/licenses/android-sdk-license   && echo "84831b9409646a918e30573bab4c9c91346d8abd"
      > $ANDROID_HOME/licenses/android-sdk-preview-license
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - packages.txt
    - /sdk
  - CmdLine:
    - mkdir -p /root/.android &&   touch /root/.android/repositories.cfg &&   ${ANDROID_HOME}/tools/bin/sdkmanager
      --update
    Name: run
    PrependShell: true
  - CmdLine:
    - while read -r package; do PACKAGES="${PACKAGES}${package} "; done < /sdk/packages.txt
      &&     ${ANDROID_HOME}/tools/bin/sdkmanager ${PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Yarn Deb Source\" \t&& curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add - \t&& echo \"deb http://dl.yarnpkg.com/debian/ stable main\"
      | tee /etc/apt/sources.list.d/yarn.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Node.JS\" \t&& curl -sL https://deb.nodesource.com/setup_10.x
      | bash -"
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_PACKAGES
      Value: git yarn nodejs build-essential imagemagick librsvg2-bin ruby ruby-dev
        wget libcurl4-openssl-dev
    Name: env
  - CmdLine:
    - "echo \"Installing Additional Libraries\" \t && rm -rf /var/lib/gems \t && apt-get
      update && apt-get install $BUILD_PACKAGES -qqy --no-install-recommends"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Fastlane 2.116.0\" \t&& gem install fastlane badge -N \t&&
      gem cleanup"
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle
    Name: env
  - Env:
    - Key: GRADLE_VERSION
      Value: "4.6"
    Name: env
  - CmdLine:
    - "echo \"Downloading Gradle\" \t&& wget --no-verbose --output-document=gradle.zip
      \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Gradle\" \t&& unzip gradle.zip \t&& rm gradle.zip \t&& mv
      \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}/\" \t&& ln --symbolic \"${GRADLE_HOME}/bin/gradle\"
      /usr/bin/gradle"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget -q https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip
      &&     unzip *kotlin*.zip &&     rm *kotlin*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ABI
      Value: '"x86_64"'
    - Key: TARGET
      Value: '"android-28"'
    - Key: TAG
      Value: '"google_apis"'
    Name: env
  - CmdLine:
    - mkdir -p ~/.android  && touch ~/.android/repositories.cfg  && $ANDROID_HOME/tools/bin/sdkmanager
      --verbose         "tools"         "platforms;${TARGET}"         "system-images;${TARGET};${TAG};${ABI}"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: KOTLIN_HOME
      Value: /opt/kotlinc
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GRADLE_HOME}/bin:${KOTLIN_HOME}/bin:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin
    Name: env
  - Env:
    - Key: _JAVA_OPTIONS
      Value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
    Name: env
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
