{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "addgroup oauth2_proxy \u0026\u0026 adduser -G oauth2_proxy  -D -H oauth2_proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache su-exec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OAUTH2_PROXY_VERSION",
              "Value": "\"2.1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk add --no-cache --virtual .run-deps         bash         ca-certificates         curl     \u0026\u0026 apk add --no-cache --virtual .build-deps         tar         \u0026\u0026 curl -O -fSL \"https://github.com/bitly/oauth2_proxy/releases/download/v${OAUTH2_PROXY_VERSION}/oauth2_proxy-${OAUTH2_PROXY_VERSION}.linux-amd64.go1.6.tar.gz\"     \u0026\u0026 mkdir /oauth2_proxy     \u0026\u0026 tar -xf oauth2_proxy-${OAUTH2_PROXY_VERSION}.linux-amd64.go1.6.tar.gz -C /oauth2_proxy --strip-components=1 --no-same-owner     \u0026\u0026 rm oauth2_proxy-${OAUTH2_PROXY_VERSION}.linux-amd64.go1.6.tar.gz         \u0026\u0026 curl -O -fSL \"https://raw.githubusercontent.com/bitly/oauth2_proxy/v${OAUTH2_PROXY_VERSION}/contrib/oauth2_proxy.cfg.example\"     \u0026\u0026 mkdir /conf     \u0026\u0026 mv oauth2_proxy.cfg.example /conf/oauth2_proxy.cfg.dist         \u0026\u0026 mkdir /templates         \u0026\u0026 chown -R oauth2_proxy:oauth2_proxy /conf /templates /oauth2_proxy         \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/oauth2_proxy:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/templates"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "4180"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 3,
            "Test": [
              "CMD-SHELL",
              "curl --silent --fail http://localhost:4180/ping || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "oauth2_proxy",
            "--config",
            "/conf/oauth2_proxy.cfg"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}