{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd postgres --gid=999   \u0026\u0026 useradd --gid postgres --uid=999 postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update   \u0026\u0026 apt-get -qq install --yes --no-install-recommends ca-certificates wget locales   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 wget --quiet -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"   \u0026\u0026 chmod +x /usr/local/bin/gosu   \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef --inputfile ru_RU --force --charmap UTF-8 --alias-file /usr/share/locale/locale.alias ru_RU.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ru_RU.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_VERSION",
              "Value": "9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/postgresql/$SERVER_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo deb http://1c.postgrespro.ru/deb/ xenial main \u003e /etc/apt/sources.list.d/postgrespro-1c.list   \u0026\u0026 wget --quiet -O- http://1c.postgrespro.ru/keys/GPG-KEY-POSTGRESPRO-1C | apt-key add -   \u0026\u0026 apt-get -qq update   \u0026\u0026 apt-get -qq install --yes --no-install-recommends postgresql-common-pro-1c   \u0026\u0026 sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf   \u0026\u0026 apt-get -qq install --yes --no-install-recommends postgresql-pro-1c-$SERVER_VERSION   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir --parent /var/run/postgresql \"$PGDATA\" /docker-entrypoint-initdb.d   \u0026\u0026 chown --recursive postgres:postgres /var/run/postgresql \"$PGDATA\"   \u0026\u0026 chmod g+s /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container/postgresql.conf.sh",
            "/docker-entrypoint-initdb.d"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "$PGDATA"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}