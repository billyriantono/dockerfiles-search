MetaArgs: null
Stages:
- BaseName: debian@sha256:a9c958be96d7d40df920e7041608f2f017af81800ca5ad23e327bc402626b58e
  Commands:
  - Maintainer: Alexander Booth <alexander.c.booth@gmail.com>
    Name: maintainer
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends --fix-missing     git     vim     jed     wget     curl     build-essential     python-dev     ca-certificates     bzip2     unzip     libsm6     pandoc     texlive-latex-base     sudo     locales     libxrender1     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://get.docker.com/ | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.9.0/tini &&     echo
      "faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872 *tini" | sha256sum
      -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: NB_USER
      Value: unh
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     mkdir -p /opt/conda &&     chown
      unh /opt/conda
    Name: run
    PrependShell: true
  - Name: user
    User: unh
  - CmdLine:
    - mkdir /home/$NB_USER/work &&     mkdir /home/$NB_USER/.jupyter &&     mkdir
      /home/$NB_USER/.local &&     echo "cacert=/etc/ssl/certs/ca-certificates.crt"
      > /home/$NB_USER/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-3.19.0-Linux-x86_64.sh
      &&     echo "9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0
      *Miniconda3-3.19.0-Linux-x86_64.sh" | sha256sum -c - &&     /bin/bash Miniconda3-3.19.0-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-3.19.0-Linux-x86_64.sh &&     $CONDA_DIR/bin/conda
      install --quiet --yes conda==3.19.1 &&     $CONDA_DIR/bin/conda config --system
      --add channels conda-forge &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=4.2*'     terminado     && conda clean
      -tipsy
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: /home/$NB_USER/work
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /home/$NB_USER/.jupyter/
  - CmdLine:
    - chown -R $NB_USER:users /home/$NB_USER/.jupyter
    Name: run
    PrependShell: true
  - Name: user
    User: unh
  - CmdLine:
    - conda install -y python=2.7 anaconda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c r r-essentials     && conda clean -tipsy
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     julia     libnettle4
      && apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: unh
  - CmdLine:
    - julia -e 'Pkg.add("IJulia")' &&     mv /home/$NB_USER/.local/share/jupyter/kernels/*
      $CONDA_DIR/share/jupyter/kernels/ &&     chmod -R go+rx $CONDA_DIR/share/jupyter
      &&     rm -rf /home/$NB_USER/.local/share
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'push!(Sys.DL_LOAD_PATH, "/opt/conda/lib")' > /home/$NB_USER/.juliarc.jl
      &&     julia -e 'Pkg.add("Gadfly")' && julia -e 'Pkg.add("RDatasets")' && julia
      -F -e 'Pkg.add("HDF5")' &&     julia -e 'Pkg.add("BinDeps")' && julia -e 'Pkg.add("Cairo")'
      && julia -F -e 'Pkg.add("Calculus")' &&     julia -e 'Pkg.add("Clustering")'
      && julia -e 'Pkg.add("Compose")' && julia -F -e 'Pkg.add("DataArrays")' &&     julia
      -e 'Pkg.add("DataFrames")' && julia -e 'Pkg.add("DataFramesMeta")' && julia
      -F -e 'Pkg.add("Dates")' &&     julia -e 'Pkg.add("DecisionTree")' && julia
      -e 'Pkg.add("Distributions")' && julia -F -e 'Pkg.add("Distances")' &&     julia
      -e 'Pkg.add("GLM")' && julia -e 'Pkg.add("HypothesisTests")' && julia -F -e
      'Pkg.add("JSON")' &&     julia -e 'Pkg.add("KernelDensity")' && julia -e 'Pkg.add("Loess")'
      && julia -F -e 'Pkg.add("Lora")' &&     julia -e 'Pkg.add("MLBase")' && julia
      -e 'Pkg.add("MultivariateStats")' && julia -F -e 'Pkg.add("MachineLearning")'
      &&     julia -e 'Pkg.add("NMF")' && julia -e 'Pkg.add("Optim")' && julia -F
      -e 'Pkg.add("PDMats")' &&     julia -e 'Pkg.add("SQLite")' && julia -e 'Pkg.add("StatsBase")'
      && julia -F -e 'Pkg.add("TextAnalysis")' &&     julia -e 'Pkg.add("TimeSeries")'
      && julia -e 'Pkg.add("ZipFile")' && julia -F -e 'Pkg.add("PDMats")' &&     julia
      -e 'Pkg.add("XGBoost")'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -yq sqlite3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install mrjob &&     conda install dask
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_SPARK_VERSION
      Value: 1.6.0
    Name: env
  - CmdLine:
    - apt-get -y update &&     apt-get install -y --no-install-recommends openjdk-7-jre-headless
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&         wget -q http://d3kbcqa49mib13.cloudfront.net/spark-${APACHE_SPARK_VERSION}-bin-hadoop2.6.tgz
      &&         echo "439fe7793e0725492d3d36448adcd1db38f438dd1392bffd556b58bb9a3a2601
      *spark-${APACHE_SPARK_VERSION}-bin-hadoop2.6.tgz" | sha256sum -c - &&         tar
      xzf spark-${APACHE_SPARK_VERSION}-bin-hadoop2.6.tgz -C /usr/local &&         rm
      spark-${APACHE_SPARK_VERSION}-bin-hadoop2.6.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local && ln -s spark-${APACHE_SPARK_VERSION}-bin-hadoop2.6 spark
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF &&     DISTRO=debian
      &&     CODENAME=wheezy &&     echo "deb http://repos.mesosphere.io/${DISTRO}
      ${CODENAME} main" > /etc/apt/sources.list.d/mesosphere.list &&     apt-get -y
      update &&     apt-get --no-install-recommends -y --force-yes install mesos=0.22.1-1.0.debian78
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: SPARK_HOME
      Value: /usr/local/spark
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.9-src.zip
    Name: env
  - Env:
    - Key: MESOS_NATIVE_LIBRARY
      Value: /usr/local/lib/libmesos.so
    Name: env
  - Env:
    - Key: SPARK_OPTS
      Value: --driver-java-options=-Xms1024M --driver-java-options=-Xmx4096M --driver-java-options=-Dlog4j.logLevel=info
    Name: env
  - CmdLine:
    - pip install --pre toree &&     jupyter toree install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/minrk/findspark.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src && mkdir xgboost && cd xgboost &&     git clone --recursive
      https://github.com/dmlc/xgboost.git && cd xgboost &&     make && cd python-package
      && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install keras &&     pip install git+https://github.com/dnouri/nolearn.git@master#egg=nolearn==0.7.git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install gensim
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install lifelines
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install hiveplot
    Name: run
    PrependShell: true
  - Name: user
    User: unh
  - CmdLine:
    - pip install bash_kernel &&     python -m bash_kernel.install
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -y -n py3 python=3.5 anaconda jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels conda-forge &&     conda install tensorflow &&     conda
      install pyshp &&     conda install geopandas
    Name: run
    PrependShell: true
  From:
    Image: debian@sha256:a9c958be96d7d40df920e7041608f2f017af81800ca5ad23e327bc402626b58e
  Name: ""
  Platform: ""
  SourceCode: FROM debian@sha256:a9c958be96d7d40df920e7041608f2f017af81800ca5ad23e327bc402626b58e
