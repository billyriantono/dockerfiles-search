MetaArgs: null
Stages:
- BaseName: jupyter/base-notebook:latest
  Commands:
  - Maintainer: Fernando Aguilar <aguilarf@ifca.unican.es>
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&   apt-get install -y --reinstall build-essential &&   apt-get
      install -y unixodbc-dev  unixodbc-bin &&   apt-get install -y python-dev &&   apt-get
      install -y freetds-dev &&   apt-get install -y curl python3-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get -y upgrade &&   apt-get install -y ftp
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install opencv-python Faker
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev
      tk-dev libgdbm-dev libc6-dev libbz2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python python-pip python-tk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y libreadline-dev &&     apt update &&     apt
      upgrade &&     apt-get install -y g++  &&     apt-get install -y build-essential
      &&     apt-get install -y libxml2-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/bin:${PATH}"'
    Name: env
  - CmdLine:
    - /opt/conda/bin/pip install numpy scipy matplotlib scikit-learn pandas pillow
      seaborn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y  libxml2-dev libxslt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y iputils-ping net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install gcc git build-essential mysql-client python3-setuptools libmysqlclient-dev
      python3-dev python3-numpy python3-pip libhdf5-serial-dev netcdf-bin libnetcdf-dev
      wget m4 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.0.tar.gz &&     tar -zxvf
      netcdf-4.4.0.tar.gz &&     rm netcdf-4.4.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd netcdf-4.4.0 && ./configure --disable-netcdf-4 --prefix=/usr/local && make
      && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: NETCDF_LIBS
      Value: -I/usr/local/lib
    Name: env
  - Env:
    - Key: NETCDF_CFLAGS
      Value: -I/usr/local/include
    Name: env
  - CmdLine:
    - apt-get install software-properties-common -y
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ubuntugis/ubuntugis-unstable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libpnetcdf-dev gdal-bin python3-gdal libgdal20 rabbitmq-server
      -y
    Name: run
    PrependShell: true
  - Env:
    - Key: WQ_REGION
      Value: CdP
    Name: env
  - Env:
    - Key: WQ_START_DATE
      Value: 01-01-2018
    Name: env
  - Env:
    - Key: WQ_END_DATE
      Value: 18-01-2018
    Name: env
  - Env:
    - Key: WQ_ACTION
      Value: cloud_coverage
    Name: env
  - Env:
    - Key: ONEDATA_TOKEN
      Value: '''MDAxNWxvY2F00aW9uIG9uZXpvbmUKMDAzMGlkZW500aWZpZXIgMDRmMGQxODRmMTBmODAxN2ZkNTNkNGJlYWIyNjc3NTkKMDAxYWNpZCB00aW1lIDwgMTU2MzM00NDg00MQowMDJmc2lnbmF00dXJlIGy97Y8H4rGIxCMYsJSHQg1v6BpLGAwnDL01EE6AFAs1BCg'''
    Name: env
  - Env:
    - Key: ONEDATA_URL
      Value: '''https://oneprovider-cnaf.cloud.cnaf.infn.it'''
    Name: env
  - Env:
    - Key: ONEDATA_API
      Value: '''/api/v3/oneprovider/'''
    Name: env
  - Env:
    - Key: ONEDATA_SPACE
      Value: LifeWatch
    Name: env
  - Env:
    - Key: ONEDATA_ZONE
      Value: '''https://onezone.cloud.cnaf.infn.it'''
    Name: env
  - Env:
    - Key: DOWNLOAD_FOLDER
      Value: datasets
    Name: env
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Cloning'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - exec 3<> /etc/apt/sources.list.d/onedata.list &&     echo "deb [arch=amd64]
      http://packages.onedata.org/apt/ubuntu/xenial xenial main" >&3 &&     echo "deb-src
      [arch=amd64] http://packages.onedata.org/apt/ubuntu/xenial xenial main" >&3
      &&     exec 3>&-
    Name: run
    PrependShell: true
  - CmdLine:
    - curl http://packages.onedata.org/onedata.gpg.key | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && curl http://packages.onedata.org/onedata.gpg.key | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install request
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "test"
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install xmltodict scikit-image imageio netCDF4 tqdm numpy utm matplotlib
      pandas ipywidgets tornado=5.1.1 gdal -y
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py --sys-prefix widgetsnbextension
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Let's demo review or second"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/IFCA/xdc_lfw_data.git
    Name: run
    PrependShell: true
  - CmdLine:
    - 'exec 3<> ./xdc_lfw_data/wq_modules/config.py &&     echo "#imports apis" >&3
      &&     echo "import os" >&3 &&     echo "" >&3 &&     echo "" >&3 &&     echo
      "celery_db_user = \"root"\" >&3 &&     echo "celery_db_pass = \"Yorick$$355"\"
      >&3 &&     echo "" >&3 &&     echo "#onedata mode" >&3 &&     echo "onedata_mode
      = 1" >&3 &&     echo "if onedata_mode == 1:" >&3 &&     echo "" >&3 &&     echo
      "    #onedata path and info" >&3 &&     echo "    onedata_token = \"$ONEDATA_TOKEN\""
      >&3 &&     echo "    onedata_url = \"https://cloud-90-147-75-163.cloud.ba.infn.it\""
      >&3 &&     echo "    onedata_api = \"$ONEDATA_API\"" >&3 &&     echo "    onedata_user
      = \"user\"" >&3 &&     echo "    onedata_space = \"$ONEDATA_SPACE\"" >&3 &&     echo
      "" >&3 &&     echo "    #onedata path" >&3 &&     echo "    datasets_path =
      \"/home/jovyan/datasets/LifeWatch\"" >&3 &&     echo "" >&3 &&     echo "#local
      path and info" >&3 &&     echo "local_path = \"/home/jovyan/lfw_datasets\""
      >&3 &&     echo "" >&3 &&     echo "#AEMET credentials" >&3 &&     echo "METEO_API_TOKEN=''eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ2aWxsYXJyakB1bmljYW4uZXMiLCJqdGkiOiJkZDc5ZjVmNy1hODQwLTRiYWQtYmMzZi1jNjI3Y2ZkYmUxNmYiLCJpc3MiOiJBRU1FVCIsImlhdCI6MTUyMDg0NzgyOSwidXNlcklkIjoiZGQ3OWY1ZjctYTg0MC00YmFkLWJjM2YtYzYyN2NmZGJlMTZmIiwicm9sZSI6IiJ9.LMl_cKCtYi3RPwLwO7fJYZMes-bdMVR91lRFZbUSv84''"
      >&3 &&     echo "" >&3 &&     echo "METEO_API_URL=''opendata.aemet.es''" >&3
      &&     echo "" >&3 &&     echo "#Sentinel credentials" >&3 &&     echo "sentinel_pass
      = {''username'':\"lifewatch\", ''password'':\"xdc_lfw_data\"}" >&3 &&     echo
      "" >&3 &&     echo "#Landsat credentials" >&3 &&     echo "landsat_pass = {''username'':\"lifewatch\",
      ''password'':\"xdc_lfw_data2018\"}" >&3 &&     echo "" >&3 &&     echo "#available
      regions" >&3 &&     echo "regions = {''CdP'': {\"id\": 210788, \"coordinates\":
      {\"W\":-2.830, \"S\":41.820, \"E\":-2.690, \"N\":41.910}}, ''Cogotas'': {\"id\":
      214571, \"coordinates\": {\"W\":-4.728, \"S\":40.657, \"E\":-4.672, \"N\":40.731}},
      ''Sanabria'': {\"id\": 211645, \"coordinates\": {\"W\":-6.739, \"S\":42.107,
      \"E\":-6.689, \"N\":42.136}}}"  >&3 &&     echo "" >&3 &&     echo "#available
      actions" >&3 &&     echo "keywords = [\"cloud_mask\", \"cloud_coverage\", \"water_mask\",
      \"water_surface\", \"None\"]" >&3 &&     exec 3>&-'
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jovyan:users ./xdc_lfw_data
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ./xdc_lfw_data &&     /opt/conda/bin/python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install sudo oneclient -y
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser jovyan sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Frontend installing...'
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/IFCA/xdc_lfw_frontend
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jovyan:users ./xdc_lfw_frontend/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./xdc_lfw_frontend/* /home/jovyan/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./xdc_lfw_frontend/.HY_MODEL.yml /home/jovyan/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./xdc_lfw_frontend/.SAT_DATA.yml /home/jovyan/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir datasets
    Name: run
    PrependShell: true
  - Env:
    - Key: ONECLIENT_PROVIDER_HOSTNAME
      Value: '''cloud-90-147-75-163.cloud.ba.infn.it'''
    Name: env
  - CmdLine:
    - rm -rf work xdc_lfw_data netcdf-4.4.0 xdc_lfw_frontend
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jovyan:users ./test.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 test.sh
    Name: run
    PrependShell: true
  From:
    Image: jupyter/base-notebook:latest
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/base-notebook:latest
