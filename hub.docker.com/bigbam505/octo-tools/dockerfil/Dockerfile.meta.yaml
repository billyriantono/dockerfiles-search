MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Lukas Pessl <lukas.pessl@medunigraz.at>
    Name: maintainer
  - CmdLine:
    - useradd --system -U -u 500 plone  && mkdir -p /plone /data/filestorage /data/blobstorage  &&
      chown -R plone:plone /plone /data
    Name: run
    PrependShell: true
  - Env:
    - Key: PLONE_MAJOR
      Value: "4.3"
    Name: env
  - Env:
    - Key: PLONE_VERSION
      Value: 4.3.9
    Name: env
  - Env:
    - Key: RELEASE_VERSION
      Value: '"-r1"'
    Name: env
  - Env:
    - Key: PLONE_MD5
      Value: '"ac256fc1b388aea43ea799326d92ab23"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -q -y     apt-utils     wget     nano     sudo     supervisor     curl     git     build-essential     python-pip     python-dev     python-yaml     python-paramiko     python-six     python-httplib2     python-jinja2  &&
      apt-get autoremove  && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -q -y     build-essential     gcc     python-setuptools     python-dev     git-core     libffi-dev     libpcre3     libpcre3-dev     autoconf     libtool     pkg-config     zlib1g-dev     libssl-dev     libexpat1-dev     libxslt1.1     libxml2-dev     libxslt1-dev     libbz2-dev     libjpeg62-dev     gnuplot     libcairo2     libpango1.0-0     libgdk-pixbuf2.0-0     libxslt1.1     libxml2     libjpeg62
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o Plone.tgz -SL https://launchpad.net/plone/$PLONE_MAJOR/$PLONE_VERSION/+download/Plone-$PLONE_VERSION$RELEASE_VERSION-UnifiedInstaller.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$PLONE_MD5 Plone.tgz" | md5sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf Plone.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - ./Plone-$PLONE_VERSION$RELEASE_VERSION-UnifiedInstaller/install.sh       --password=admin       --daemon-user=plone       --owner=plone       --group=plone       --target=/plone       --instance=instance       --var=/data       none
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /plone/instance  && sed -i 's/parts =/parts =\n    zeoserver/g' buildout.cfg  &&
      sed -i 's/eggs =/eggs =\n    plone.jsonapi.core/g' buildout.cfg  && sed -i 's/eggs
      =/eggs =\n    bika.lims/g' buildout.cfg  && echo '\n[zeoserver]\nrecipe = plone.recipe.zeoserver\nfile-storage
      = /data/filestorage/Data.fs\nblob-storage = /data/blobstorage' >> buildout.cfg  &&
      sudo -u plone bin/buildout  && chown -R plone:plone /plone /data  && rm -rf
      /Plone*  && rm -rf /var/lib/apt/lists/*  && rm -rf /plone/buildout-cache/downloads/*  &&
      find /plone \( -type f -a -name '*.pyc' -o -name '*.pyo' \) -exec rm -rf '{}'
      +  && apt-get autoremove  && apt-get clean
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data/filestorage
    - /data/blobstorage
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-initialize.py
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod a+x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: user
    User: plone
  - Name: workdir
    Path: /plone/instance
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
