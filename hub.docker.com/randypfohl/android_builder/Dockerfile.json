{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y libncurses5:i386 libc6:i386 libstdc++6:i386 lib32gcc1 lib32ncurses5 lib32z1 zlib1g:i386 \u0026\u0026     apt-get install -y --no-install-recommends openjdk-8-jdk \u0026\u0026     apt-get install -y git wget zip \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-add-repository ppa:brightbox/ruby-ng \u0026\u0026     apt-get update \u0026\u0026 apt-get install --no-install-recommends -y build-essential git ruby2.4 ruby2.4-dev \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get autoremove -y \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "5.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \u0026\u0026     unzip gradle*.zip \u0026\u0026     ls -d */ | sed 's/\\/*$//g' | xargs -I{} mv {} gradle \u0026\u0026     rm gradle*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KOTLIN_VERSION",
              "Value": "1.3.50"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget -q https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip \u0026\u0026     unzip *kotlin*.zip \u0026\u0026     rm *kotlin*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_VERSION",
              "Value": "4333796"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/android-sdk \u0026\u0026 cd /opt/android-sdk \u0026\u0026     wget -q https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip \u0026\u0026     unzip *tools*linux*.zip \u0026\u0026     rm *tools*linux*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KOTLIN_HOME",
              "Value": "/opt/kotlinc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${GRADLE_HOME}/bin:${KOTLIN_HOME}/bin:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yes | sdkmanager --licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager --install --channel=1     \"tools\"     \"platform-tools\"     \"build-tools;29.0.2\"     \"emulator\"     \"system-images;android-21;google_apis;x86\"     \"system-images;android-29;google_apis;x86\"     \"platforms;android-21\"     \"platforms;android-29\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "build_deps=\"curl\" \u0026\u0026     apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ${build_deps} ca-certificates \u0026\u0026     curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git-lfs \u0026\u0026     git lfs install \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get purge -y --auto-remove ${build_deps} \u0026\u0026     rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FASTLANE_VERSION",
              "Value": "2.113.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUNDLER_VERSION",
              "Value": "2.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'en_US.UTF-8'"
            },
            {
              "Key": "LANGUAGE",
              "Value": "'en_US:en'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'en_US.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install fastlane:${FASTLANE_VERSION} bundler:${BUNDLER_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "initialize.sh",
            "/initialize.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /initialize.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/initialize.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}