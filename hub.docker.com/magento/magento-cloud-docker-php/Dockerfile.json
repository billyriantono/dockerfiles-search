{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli-stretch",
      "SourceCode": "FROM php:7.1-cli-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli-stretch"
      },
      "Commands": [
        {
          "Key": "GOSU_VERSION",
          "Name": "arg",
          "Value": "1.11"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "2G"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAGENTO_ROOT",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBUG",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAGENTO_RUN_MODE",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UPDATE_UID_GID",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTENSIONS",
              "Value": "bcmath bz2 calendar exif gd gettext intl mcrypt mysqli opcache pdo_mysql redis soap sockets sysvmsg sysvsem sysvshm xsl zip pcntl"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get upgrade -y   \u0026\u0026 apt-get install -y --no-install-recommends   apt-utils   cron   git   mariadb-client   nano   nodejs   python3   python3-pip   redis-tools   rsyslog   sendmail   sendmail-bin   sudo   unzip   vim   libbz2-dev   libjpeg62-turbo-dev   libpng-dev   libfreetype6-dev   libgeoip-dev   wget   libgmp-dev   libmagickwand-dev   libmagickcore-dev   libc-client-dev   libkrb5-dev   libicu-dev   libldap2-dev   libmcrypt-dev   libpspell-dev   librecode0   librecode-dev   libssh2-1   libssh2-1-dev   libtidy-dev   libxslt1-dev   libyaml-dev   libzip-dev   zip   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade setuptools     \u0026\u0026 pip3 install pyyaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure   gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure   imap --with-kerberos --with-imap-ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure   ldap --with-libdir=lib/x86_64-linux-gnu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure   opcache --enable-opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure   zip --with-libzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc)   bcmath   bz2   calendar   exif   gd   gettext   gmp   imap   intl   ldap   mcrypt   mysqli   opcache   pdo_mysql   pspell   recode   shmop   soap   sockets   sysvmsg   sysvsem   sysvshm   tidy   xmlrpc   xsl   zip   pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f   geoip-1.1.1   igbinary   imagick   mailparse   msgpack   oauth   propro   raphf   redis   ssh2-1.1.2   xdebug-2.6.1   yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/libsodium    \u0026\u0026 curl -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium   \u0026\u0026 cd /tmp/libsodium/libsodium-1.0.18-RELEASE/   \u0026\u0026 ./configure   \u0026\u0026 make \u0026\u0026 make check   \u0026\u0026 make install    \u0026\u0026 cd /   \u0026\u0026 rm -rf /tmp/libsodium    \u0026\u0026 pecl install -o -f libsodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp   \u0026\u0026 curl -O https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz   \u0026\u0026 tar zxvf ioncube_loaders_lin_x86-64.tar.gz   \u0026\u0026 export PHP_VERSION=$(php -r \"echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;\")   \u0026\u0026 export PHP_EXT_DIR=$(php-config --extension-dir)   \u0026\u0026 cp \"./ioncube/ioncube_loader_lin_${PHP_VERSION}.so\" \"${PHP_EXT_DIR}/ioncube.so\"   \u0026\u0026 rm -rf ./ioncube   \u0026\u0026 rm ioncube_loaders_lin_x86-64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-enable   bcmath   bz2   calendar   exif   gd   geoip   gettext   gmp   igbinary   imagick   imap   intl   ldap   mailparse   mcrypt   msgpack   mysqli   oauth   opcache   pdo_mysql   propro   pspell   raphf   recode   redis   shmop   soap   sockets   sodium   ssh2   sysvmsg   sysvsem   sysvshm   tidy   xdebug   xmlrpc   xsl   yaml   zip   pcntl   ioncube"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/php-cli.ini",
            "/usr/local/etc/php/conf.d/zz-magento.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/php-xdebug.ini",
            "/usr/local/etc/php/conf.d/zz-xdebug-settings.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/mail.ini",
            "/usr/local/etc/php/conf.d/zz-mail.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "groupadd -g 1000 www \u0026\u0026 useradd -g 1000 -u 1000 -d ${MAGENTO_ROOT} -s /bin/bash www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod",
            "+x",
            "/docker-entrypoint.sh",
            "/usr/local/bin/magento-installer",
            "/usr/local/bin/magento-command",
            "/usr/local/bin/mftf-command",
            "/usr/local/bin/ece-command",
            "/usr/local/bin/cloud-build",
            "/usr/local/bin/cloud-deploy",
            "/usr/local/bin/cloud-post-deploy",
            "/usr/local/bin/run-cron",
            "/usr/local/bin/run-hooks"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p ${MAGENTO_ROOT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.composer/cache"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${MAGENTO_ROOT}"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "${MAGENTO_ROOT}"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}