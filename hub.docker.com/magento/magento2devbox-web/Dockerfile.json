{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0.16-fpm",
      "SourceCode": "FROM php:7.0.16-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.0.16-fpm"
      },
      "Commands": [
        {
          "Maintainer": "\"Magento\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "\"--enable-fpm --with-fpm-user=magento2 --with-fpm-group=magento2\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     apt-utils     sudo     wget     unzip     cron     curl     libmcrypt-dev     libicu-dev     libxml2-dev libxslt1-dev     libfreetype6-dev     libjpeg62-turbo-dev     libpng12-dev     git     vim     openssh-server     supervisor     mysql-client     ocaml     expect     \u0026\u0026 curl -L https://github.com/bcpierce00/unison/archive/2.48.4.tar.gz | tar zxv -C /tmp \u0026\u0026              cd /tmp/unison-2.48.4 \u0026\u0026              sed -i -e 's/GLIBC_SUPPORT_INOTIFY 0/GLIBC_SUPPORT_INOTIFY 1/' src/fsmonitor/linux/inotify_stubs.c \u0026\u0026              make \u0026\u0026              cp src/unison src/unison-fsmonitor /usr/local/bin \u0026\u0026              cd /root \u0026\u0026 rm -rf /tmp/unison-2.48.4     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure hash --with-mhash     \u0026\u0026 docker-php-ext-install -j$(nproc) mcrypt intl xsl gd zip pdo_mysql opcache soap bcmath json iconv     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 pecl install xdebug \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_port=9000\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back=0\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_host=127.0.0.1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.idekey=PHPSTORM\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.max_nesting_level=1000\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 chmod 666 /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 mkdir /var/run/sshd     \u0026\u0026 apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 ln -s /usr/bin/nodejs /usr/bin/node     \u0026\u0026 apt-get install -y npm     \u0026\u0026 npm update -g npm \u0026\u0026 npm install -g grunt-cli \u0026\u0026 npm install -g gulp     \u0026\u0026 echo \"StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config     \u0026\u0026 apt-get install -y apache2     \u0026\u0026 a2enmod rewrite     \u0026\u0026 a2enmod proxy     \u0026\u0026 a2enmod proxy_fcgi     \u0026\u0026 rm -f /etc/apache2/sites-enabled/000-default.conf     \u0026\u0026 useradd -m -d /home/magento2 -s /bin/bash magento2 \u0026\u0026 adduser magento2 sudo     \u0026\u0026 echo \"magento2 ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers     \u0026\u0026 touch /etc/sudoers.d/privacy     \u0026\u0026 echo \"Defaults        lecture = never\" \u003e\u003e /etc/sudoers.d/privacy     \u0026\u0026 mkdir /home/magento2/magento2 \u0026\u0026 mkdir /var/www/magento2     \u0026\u0026 mkdir /home/magento2/state     \u0026\u0026 curl -sS https://accounts.magento.cloud/cli/installer -o /home/magento2/installer     \u0026\u0026 rm -r /usr/local/etc/php-fpm.d/*     \u0026\u0026 sed -i 's/www-data/magento2/g' /etc/apache2/envvars"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/php.ini",
            "/usr/local/etc/php"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/sshd_config",
            "/etc/ssh/sshd_config"
          ]
        },
        {
          "CmdLine": [
            "chown magento2:magento2 /etc/ssh/ssh_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/php-fpm-magento2.conf",
            "/usr/local/etc/php-fpm.d/php-fpm-magento2.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/apache-default.conf",
            "/etc/apache2/sites-enabled/apache-default.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/.unison/magento2.prf",
            "/home/magento2/.unison/magento2.prf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/unison.sh",
            "/usr/local/bin/unison.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/check-unison.sh",
            "/usr/local/bin/check-unison.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/unison.sh \u0026\u0026 chmod +x /usr/local/bin/entrypoint.sh     \u0026\u0026 chmod +x /usr/local/bin/check-unison.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/home/magento2/scripts/:/home/magento2/.magento-cloud/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/var/www/magento2/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USE_SHARED_WEBROOT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHARED_CODE_PATH",
              "Value": "/var/www/magento2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBROOT_PATH",
              "Value": "/var/www/magento2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAGENTO_ENABLE_SYNC_MARKER",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /windows  \u0026\u0026 cd /windows  \u0026\u0026 curl -L -o unison-windows.zip https://www.irif.fr/~vouillon/unison/unison%202.48.3.zip  \u0026\u0026 unzip unison-windows.zip  \u0026\u0026 rm unison-windows.zip  \u0026\u0026 mv 'unison 2.48.3 text.exe' unison.exe  \u0026\u0026 rm 'unison 2.48.3 GTK.exe'  \u0026\u0026 chown -R magento2:magento2 ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /mac-osx  \u0026\u0026 cd /mac-osx  \u0026\u0026 curl -L -o unison-mac-osx.zip http://unison-binaries.inria.fr/files/Unison-OS-X-2.48.15.zip  \u0026\u0026 unzip unison-mac-osx.zip  \u0026\u0026 rm unison-mac-osx.zip  \u0026\u0026 chown -R magento2:magento2 ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/",
            "/home/magento2/scripts/"
          ]
        },
        {
          "CmdLine": [
            "sed -i 's/^/;/' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 cd /home/magento2/scripts \u0026\u0026 composer install \u0026\u0026 chmod +x /home/magento2/scripts/m2init     \u0026\u0026 sed -i 's/^;;*//' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R magento2:magento2 /home/magento2 \u0026\u0026     chown -R magento2:magento2 /var/www/magento2 \u0026\u0026     chmod 755 /home/magento2/scripts/bin/magento-cloud-login"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "passwd magento2 -d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "44100",
            "5000",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/magento2"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}