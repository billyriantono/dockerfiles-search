MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Maintainer: Sebastien LANGOUREAUX <linuxworkgroup@hotmail.com>
    Name: maintainer
  - Env:
    - Key: CONFD_PREFIX_KEY
      Value: '"/backup"'
    - Key: CONFD_BACKEND
      Value: '"env"'
    - Key: CONFD_INTERVAL
      Value: '"60"'
    - Key: CONFD_NODES
      Value: '""'
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    - Key: APP_HOME
      Value: '"/opt/backup"'
    - Key: APP_DATA
      Value: '"/backup"'
    - Key: USER
      Value: backup
    - Key: LANG
      Value: C.UTF-8
    - Key: CONTAINER_NAME
      Value: '"rancher-backup"'
    - Key: CONTAINER_AUHTOR
      Value: '"Sebastien LANGOUREAUX <linuxworkgroup@hotmail.com>"'
    - Key: CONTAINER_SUPPORT
      Value: '"https://github.com/disaster37/rancher-backup/issues"'
    - Key: APP_WEB
      Value: '"https://github.com/disaster37/rancher-backup"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup/requirements.txt
    - /${APP_HOME}/
  - CmdLine:
    - apk update &&     apk add python2 py-pip bash tar curl docker duplicity lftp
      ncftp py-paramiko py-gobject py-boto py-lockfile ca-certificates librsync py-cryptography
      py-cffi build-base python-dev &&    pip install --upgrade pip &&    pip install
      -r "${APP_HOME}/requirements.txt" &&    rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/michaloo/go-cron/releases/download/v0.0.2/go-cron.tar.gz     |
      tar -x -C /usr/local/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: CONFD_VERSION
      Value: '"v0.13.7"'
    - Key: CONFD_HOME
      Value: '"/opt/confd"'
    Name: env
  - CmdLine:
    - mkdir -p "${CONFD_HOME}/etc/conf.d" "${CONFD_HOME}/etc/templates" "${CONFD_HOME}/log"
      "${CONFD_HOME}/bin" &&    curl -sL https://github.com/yunify/confd/releases/download/${CONFD_VERSION}/confd-alpine-amd64.tar.gz     |
      tar -zx -C "${CONFD_HOME}/bin/"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/just-containers/s6-overlay/releases/download/v1.19.1.1/s6-overlay-amd64.tar.gz     |
      tar -zx -C /
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup/src/
    - /${APP_HOME}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup/config
    - /${APP_HOME}/config
  - CmdLine:
    - mkdir -p /var/log/backup ${APP_DATA} &&    adduser -D -h ${APP_HOME} -G docker
      -s /bin/sh ${USER} &&    chown -R ${USER} ${APP_HOME} &&    chown -R ${USER}
      ${APP_DATA} &&    chown -R ${USER} /var/log/backup
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${APP_DATA}
  - Name: workdir
    Path: '"${APP_HOME}"'
  - CmdLine:
    - /init
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
