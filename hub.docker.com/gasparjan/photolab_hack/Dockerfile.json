{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive     APT_INSTALL=\"apt-get install -y --no-install-recommends\" \u0026\u0026     PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \u0026\u0026     GIT_CLONE=\"git clone --depth 10\" \u0026\u0026     apt-get update  \u0026\u0026     $APT_INSTALL         build-essential         ca-certificates         cmake         wget         git         vim         unzip         \u0026\u0026         $APT_INSTALL         software-properties-common         \u0026\u0026     add-apt-repository ppa:deadsnakes/ppa \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL         python3.6         python3.6-dev         \u0026\u0026     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python3.6 ~/get-pip.py \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python3 \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python \u0026\u0026     $PIP_INSTALL         setuptools         \u0026\u0026     $PIP_INSTALL         numpy         scipy         pandas         scikit-learn         Cython         pillow==5.1.0         flask==1.0.2         gunicorn==19.9.0         boto3         \u0026\u0026         wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \u0026\u0026         tar -zxf ~/boost.tar.gz -C ~ \u0026\u0026         cd ~/boost_* \u0026\u0026         ./bootstrap.sh --with-python=python3.6 \u0026\u0026         ./b2 install --prefix=/usr/local \u0026\u0026     $APT_INSTALL         libatlas-base-dev     libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         \u0026\u0026     $GIT_CLONE --branch 3.4.1 https://github.com/opencv/opencv ~/opencv \u0026\u0026     mkdir -p ~/opencv/build \u0026\u0026 cd ~/opencv/build \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           .. \u0026\u0026     make -j\"$(nproc)\" install \u0026\u0026     $GIT_CLONE --branch v19.16 https://github.com/davisking/dlib.git ~/dlib \u0026\u0026     cd ~/dlib \u0026\u0026     python setup.py install --no DLIB_USE_CUDA                             --yes USE_AVX_INSTRUCTIONS \u0026\u0026     cd ~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* ~/* \u0026\u0026     mkdir ~/photolab_hack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install requests                 awscli \u0026\u0026     mkdir /root/.aws"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/photolab_hack/static \u0026\u0026     export AWS_PROFILE=photo-hack-gene"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./static/js/*",
            "/root/photolab_hack/static/js/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./static/css/*",
            "/root/photolab_hack/static/css/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./static/img/*",
            "/root/photolab_hack/static/img/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./static/crowd/*",
            "/root/photolab_hack/static/crowd/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./static/fonts/*",
            "/root/photolab_hack/static/fonts/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./models/*",
            "/root/photolab_hack/models/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/*",
            "/root/photolab_hack/templates/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./Dockerfile",
            "/root/photolab_hack/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./app.py",
            "/root/photolab_hack/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./build_docker.sh",
            "/root/photolab_hack/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./face_swap.py",
            "/root/photolab_hack/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./run_docker.sh",
            "/root/photolab_hack/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "/root/photolab_hack/"
          ]
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/root/photolab_hack/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        }
      ]
    }
  ]
}