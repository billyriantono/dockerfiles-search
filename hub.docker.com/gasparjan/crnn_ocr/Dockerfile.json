{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends     libcudnn7=7.0.5.15-1+cuda9.0     libcudnn7-dev=7.0.5.15-1+cuda9.0 \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive     APT_INSTALL=\"apt-get install -y --no-install-recommends\" \u0026\u0026     PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \u0026\u0026     GIT_CLONE=\"git clone --depth 10\" \u0026\u0026     rm -rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get update  \u0026\u0026     $APT_INSTALL         build-essential         ca-certificates         cmake         wget         git         vim         unzip         \u0026\u0026         $APT_INSTALL         software-properties-common         \u0026\u0026     add-apt-repository ppa:deadsnakes/ppa \u0026\u0026     apt-get update \u0026\u0026     $APT_INSTALL         python3.6         python3.6-dev         \u0026\u0026     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python3.6 ~/get-pip.py \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python3 \u0026\u0026     ln -s /usr/bin/python3.6 /usr/local/bin/python \u0026\u0026     $PIP_INSTALL         setuptools         \u0026\u0026     $PIP_INSTALL         numpy         scipy         pandas         scikit-learn         matplotlib         Cython         tqdm==4.14.0         pillow==4.1.1         \u0026\u0026         wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \u0026\u0026         tar -zxf ~/boost.tar.gz -C ~ \u0026\u0026         cd ~/boost_* \u0026\u0026         ./bootstrap.sh --with-python=python3.6 \u0026\u0026         ./b2 install --prefix=/usr/local \u0026\u0026     $PIP_INSTALL         tensorflow-gpu==1.8.0         \u0026\u0026     $PIP_INSTALL         h5py         keras==2.2.2         \u0026\u0026     $APT_INSTALL         libatlas-base-dev     libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         \u0026\u0026     $GIT_CLONE --branch 3.4.2 https://github.com/opencv/opencv ~/opencv \u0026\u0026     mkdir -p ~/opencv/build \u0026\u0026 cd ~/opencv/build \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           .. \u0026\u0026     make -j\"$(nproc)\" install \u0026\u0026     cd ~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* ~/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./models/*",
            "models/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./train.py",
            "train.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./utils.py",
            "utils.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./predict.py",
            "predict.py"
          ]
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        }
      ]
    }
  ]
}