MetaArgs: null
Stages:
- BaseName: jpazdyga/centos7-base
  Commands:
  - Maintainer: Jakub Pazdyga <jakub.pazdyga@ft.com>
    Name: maintainer
  - Env:
    - Key: AWS_ACCESS_KEY
      Value: XXXX
    Name: env
  - Env:
    - Key: AWS_SECRET_ACCESS_KEY
      Value: XXXXXXXX
    Name: env
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: DATE_TIMEZONE
      Value: UTC
    Name: env
  - CmdLine:
    - "rpmdb --rebuilddb &&     rpmdb --initdb &&     yum clean all &&     yum -y
      update &&     yum -y install wget \t\t   curl \t\t   bind-utils \t\t   screen
      \t\t   python \t\t   python-devel \t\t   python-psycopg2 \t\t   python-crypto
      \t\t   nginx \t\t   postgresql-server \t\t   libffi-devel \t\t   openssl-devel
      \t\t   libpqxx-devel \t\t   gcc \t\t   postgresql \t\t   libpqxx-devel \t\t
      \  openssh                    openssl                    openssl-libs                    psmisc
      \                   openssh-server                    PyYAML                    git
      \t\t   httpd \t\t   swig \t\t   unzip \t\t   python-setuptools                    python-pip"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip &&       pip install --upgrade setuptools &&       easy_install
      PyYAML
    Name: run
    PrependShell: true
  - CmdLine:
    - "useradd -d /home/monkey -G wheel -m -s /bin/bash monkey && \tsu monkey -c \"ssh-keygen
      -t rsa -N '' -f ~/.ssh/id_rsa\" && \tssh-keygen -A && \techo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAxLPLjUQf35uzbNGiCiVkOpeXOaO4JdC0GGkRTRhgSeKdu4Nz2iADET5bYBps27OCnk7JmWp3PiNbs6inMazHMylxB8BeV1Q9p+yMZLpuGdziokt4Z8sVDjgMkJPS0Ob74GE2aIfqx/gxTgf2WGQTNlCWP53nb3ccjQXW2b8jK39VCLw5VPE3YMojfGdM9BMhMOUdut3xnIJNnjivuZw9SZM746/PCvxvB/h+nE6u/3QP7D2xhEAXusxnctvOz2LWBf5rXrndAf4ENqOe6JK7LWGVTax2NgXc0pVJ53/+Ghhi2zYBuEaQGiOc7qeblJEUqrMXPij50LcE0ya10cmdAw==\"
      > /home/monkey/.ssh/authorized_keys && \techo \"Defaults:postgres !requiretty\"
      >> /etc/sudoers"
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -i \t-e 's/^PasswordAuthentication yes/PasswordAuthentication no/g' \t-e
      's/^#PermitRootLogin yes/PermitRootLogin yes/g' \t-e 's/^#UseDNS yes/UseDNS
      no/g' \t/etc/ssh/sshd_config"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i         -e 's/^%wheel\tALL=(ALL)\tALL/#%wheel\tALL=(ALL)\tALL/g'         /etc/sudoers
      &&         echo -e "%wheel\tALL=(ALL)\tNOPASSWD:\tALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /var/log/security_monkey && \tchown apache:apache /var/log/security_monkey
      && \tmkdir -p /var/www && \tchown apache /var/www && \ttouch /var/log/security_monkey/security_monkey.error.log
      && \ttouch /var/log/security_monkey/security_monkey.access.log && \ttouch /var/log/security_monkey/security_monkey-deploy.log
      && \tchown apache /var/log/security_monkey/security_monkey-deploy.log && \trunuser
      -l postgres -c '/usr/bin/initdb --pgdata=/var/lib/pgsql/data --auth=ident'"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pgsetup.sh
    - /usr/sbin/pgsetup.sh
  - CmdLine:
    - "runuser -l postgres -c '/usr/bin/postgres -D /var/lib/pgsql/data -p 5432 &'
      && \tsleep 10; ps ax | grep postgres && \tchmod +x /usr/sbin/pgsetup.sh && \tbash
      -x /usr/sbin/pgsetup.sh"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - smsetup.sh
    - /usr/sbin/smsetup.sh
  - CmdLine:
    - "chmod +x /usr/sbin/smsetup.sh && \tbash -x /usr/sbin/smsetup.sh"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dartsetup.sh
    - /usr/sbin/dartsetup.sh
  - CmdLine:
    - "chmod +x /usr/sbin/dartsetup.sh && \tmkdir -p /usr/local/src/security_monkey/security_monkey/static/
      && \tbash -x /usr/sbin/dartsetup.sh"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - secmonkey_config.sh
    - /usr/sbin/secmonkey_config.sh
  - CmdLine:
    - chmod +x /usr/sbin/secmonkey_config.sh &&         bash -x /usr/sbin/secmonkey_config.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginxsetup.sh
    - /usr/sbin/nginxsetup.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - securitymonkey.conf
    - /etc/nginx/sites-available/securitymonkey.conf
  - CmdLine:
    - "mkdir -p /etc/ssl/private && \tchmod +x /usr/sbin/nginxsetup.sh &&         bash
      -x /usr/sbin/nginxsetup.sh"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sm_scheduler.sh
    - /usr/sbin/sm_scheduler.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sm_api_server.sh
    - /usr/sbin/sm_api_server.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - botocfg.sh
    - /usr/sbin/botocfg.sh
  - CmdLine:
    - chmod +x /usr/sbin/sm_scheduler.sh && chmod +x /usr/sbin/sm_api_server.sh &&
      chmod +x /usr/sbin/botocfg.sh && bash -x /usr/sbin/botocfg.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "export PYTHONPATH=\"/usr/local/src/security_monkey\"\nexport SECURITY_MONKEY_SETTINGS=\"/usr/local/src/security_monkey/env-config/config-deploy.py\""
      > /usr/sbin/sm_environment.env
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor.d/supervisord.conf
  - CmdLine:
    - /usr/bin/supervisord
    - -n
    - -c/etc/supervisor.d/supervisord.conf
    Name: cmd
    PrependShell: false
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: DATE_TIMEZONE
      Value: UTC
    Name: env
  - Name: volume
    Volumes:
    - /var/log
    - /etc
  - Name: expose
    Ports:
    - "22"
    - "443"
    - "5432"
    - "80"
  - Name: user
    User: root
  From:
    Image: jpazdyga/centos7-base
  Name: ""
  Platform: ""
  SourceCode: FROM jpazdyga/centos7-base
