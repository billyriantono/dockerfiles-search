MetaArgs: null
Stages:
- BaseName: python:2
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"MinimalCompact"'
    Name: label
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - awk '$1 ~ "^deb" { $3 = $3 "-backports"; print; exit }' /etc/apt/sources.list
      > /etc/apt/sources.list.d/backports.list &&     apt-get update &&     apt-get
      -y upgrade &&     apt-get -y autoremove &&     apt-get install -y -q         git         curl         libjpeg-turbo-progs         graphicsmagick         libgraphicsmagick++3         libgraphicsmagick++1-dev         libgraphicsmagick-q16-3         zlib1g-dev         libboost-python-dev         libmemcached-dev         gifsicle         ffmpeg
      &&     apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /app
    Name: env
  - Env:
    - Key: SHELL
      Value: bash
    Name: env
  - Env:
    - Key: WORKON_HOME
      Value: /app
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /app/requirements.txt
  - CmdLine:
    - pip install --trusted-host None --no-cache-dir    -r /app/requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/thumbor.conf.tpl
    - /app/thumbor.conf.tpl
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/circus.ini.tpl
    - /etc/
  - CmdLine:
    - mkdir  /etc/circus.d /etc/setup.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/thumbor-circus.ini.tpl
    - /etc/circus.d/
  - Key: SIMD_LEVEL
    Name: arg
    Value: null
  - CmdLine:
    - 'PILLOW_VERSION=$(python -c ''import PIL; print(PIL.__version__)'') ;     if
      [ -z "$SIMD_LEVEL" ]; then       CC="cc" && PILLOW_PACKET="pillow" && PILLOW_VERSION_SUFFIX=""
      ;    else       CC="cc -m$SIMD_LEVEL" && PILLOW_PACKET="pillow-SIMD" && PILLOW_VERSION_SUFFIX=".post99"
      ;      PILLOW_VERSION="5.2.0" ;     fi ;     pip uninstall -y pillow || true
      &&     CC=$CC     LIB=/usr/lib/x86_64-linux-gnu/     INCLUDE=/usr/include/x86_64-linux-gnu/     pip
      install --no-cache-dir -U --force-reinstall --no-binary=:all: "${PILLOW_PACKET}<=${PILLOW_VERSION}${PILLOW_VERSION_SUFFIX}"     --global-option="build_ext"
      --global-option="--enable-lcms"     --global-option="build_ext" --global-option="--enable-zlib"     --global-option="build_ext"
      --global-option="--enable-jpeg"     --global-option="build_ext" --global-option="--enable-tiff"'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - circus
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
    - "8888"
  From:
    Image: python:2
  Name: ""
  Platform: ""
  SourceCode: FROM python:2
