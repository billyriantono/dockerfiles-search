{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9.4",
      "SourceCode": "FROM alpine:3.9.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9.4"
      },
      "Commands": [
        {
          "Maintainer": "Paul Smith \u003cpa.ulsmith.net\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026 apk add \tbash apache2 php7-apache2 curl ca-certificates openssl openssh git php7 php7-phar php7-json php7-iconv php7-openssl tzdata openntpd nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add \tphp7-ftp \tphp7-xdebug \tphp7-mcrypt \tphp7-mbstring \tphp7-soap \tphp7-gmp \tphp7-pdo_odbc \tphp7-dom \tphp7-pdo \tphp7-zip \tphp7-mysqli \tphp7-sqlite3 \tphp7-pdo_pgsql \tphp7-bcmath \tphp7-gd \tphp7-odbc \tphp7-pdo_mysql \tphp7-pdo_sqlite \tphp7-gettext \tphp7-xml \tphp7-xmlreader \tphp7-xmlwriter \tphp7-tokenizer \tphp7-xmlrpc \tphp7-bz2 \tphp7-pdo_dblib \tphp7-curl \tphp7-ctype \tphp7-session \tphp7-redis \tphp7-exif \tphp7-intl \tphp7-fileinfo \tphp7-ldap \tphp7-apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add -U         libmemcached         php7-dev         libmemcached-libs         php7-pecl-memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update         autoconf         file         g++         gcc         libc-dev         make         pkgconf         re2c         zlib-dev         libmemcached-dev \u0026\u0026     cd /tmp \u0026\u0026     wget https://github.com/php-memcached-dev/php-memcached/archive/v3.1.3.zip \u0026\u0026     unzip v3.1.3.zip \u0026\u0026     cd php-memcached-3.1.3 \u0026\u0026     phpize7 || return 1 \u0026\u0026     ./configure --prefix=/usr --disable-memcached-sasl --with-php-config=php-config7 || return 1 \u0026\u0026     make || return 1 \u0026\u0026     make INSTALL_ROOT=\"\" install || return 1 \u0026\u0026     install -d \"/etc/php7/conf.d\" || return 1 \u0026\u0026     echo \"extension=memcached.so\" \u003e /etc/php7/conf.d/20_memcached.ini \u0026\u0026     cd /tmp \u0026\u0026 rm -rf php-memcached-3.1.3 \u0026\u0026 rm v3.1.3.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /proc/self/fd/1 /var/log/apache2/access.log \u0026\u0026     ln -sf /proc/self/fd/1 /var/log/apache2/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add php7-simplexml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/bin/php7 /usr/bin/php     \u0026\u0026 rm -f /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "httpd.conf",
            "/etc/apache2/httpd.conf"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf     \u0026\u0026 sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf     \u0026\u0026 sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf     \u0026\u0026 sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf     \u0026\u0026 sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf     \u0026\u0026 sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/app/public\\\"#g\" /etc/apache2/httpd.conf     \u0026\u0026 sed -i \"s#/var/www/localhost/htdocs#/app/public#\" /etc/apache2/httpd.conf     \u0026\u0026 printf \"\\n\u003cDirectory \\\"/app/public\\\"\u003e\\n\\tAllowOverride All\\n\u003c/Directory\u003e\\n\" \u003e\u003e /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026 mkdir /app/public \u0026\u0026 chown -R apache:apache /app \u0026\u0026 chmod -R 755 /app \u0026\u0026 mkdir bootstrap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/bootstrap/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /bootstrap/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bootstrap/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}