{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/ground-server"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026     sudo apt-get -y upgrade \u0026\u0026     sudo apt-get -qq install -y software-properties-common \u0026\u0026     sudo add-apt-repository ppa:webupd8team/java \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get -qq install -y         build-essential         curl         htop         tcl8.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections) \u0026\u0026     sudo apt-get -qq install -y         oracle-java8-installer         oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo apt-get -qq install -y         git         nodejs         npm         postgresql         postgresql-client-common         postgresql-common         postgresql-contrib         scala         unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/nodejs /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "/usr/local/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGHOST",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/db-start.sh",
            "docker/db-start.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/db-setup.sh",
            "docker/db-setup.sh"
          ]
        },
        {
          "CmdLine": [
            "docker/db-start.sh \u0026\u0026 docker/db-setup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://dl.bintray.com/sbt/debian/sbt-0.13.8.deb \u0026\u0026     sudo dpkg -i sbt-0.13.8.deb \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get -qq install -y sbt \u0026\u0026     rm sbt-0.13.8.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://downloads.typesafe.com/typesafe-activator/1.3.2/typesafe-activator-1.3.2.zip \u0026\u0026     unzip typesafe-activator-1.3.2.zip \u0026\u0026     rm typesafe-activator-1.3.2.zip \u0026\u0026     mv activator-1.3.2/activator . \u0026\u0026     mv activator-1.3.2/activator-launch-1.3.2.jar ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app",
            "app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf",
            "conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "project",
            "project"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build.sbt",
            "build.sbt"
          ]
        },
        {
          "CmdLine": [
            "sbt run \u0026\u0026 kill $(pgrep -f '.*sbt.*')"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "public",
            "public"
          ]
        },
        {
          "CmdLine": [
            "docker/db-start.sh \u0026\u0026 sbt run"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}