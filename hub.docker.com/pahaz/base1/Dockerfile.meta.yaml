MetaArgs: null
Stages:
- BaseName: buildpack-deps:stretch
  Commands:
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tca-certificates
      curl wget \t\tgnupg2 dirmngr \t\tgit openssh-client \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE     B42F6819007F00F88E364FD4036A9C25BF357DD4     6A010C5166006599AA17F08146C2130DFD2497F5     0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D   ;
      do     gpg --keyserver keyserver.ubuntu.com --recv-keys "$key" ||     gpg --keyserver
      pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com --recv-keys
      "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"
      ;   done
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r unprivileged --gid=999 && useradd -m -r -g unprivileged --uid=999
      unprivileged
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& gpg --batch --verify /usr/local/bin/gosu.asc
      /usr/local/bin/gosu \t&& rm -rf /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 6.11.3
    Name: env
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64)
      ARCH='arm64';;     armhf) ARCH='armv7l';;     *) echo "unsupported architecture";
      exit 1 ;;   esac   && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1   &&
      rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt   &&
      ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 0.27.5
    Name: env
  - CmdLine:
    - set -ex   && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt/yarn   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   &&
      ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\ttcl \t\ttk
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.2
    Name: env
  - CmdLine:
    - "set -ex \t&& buildDeps=' \t\tdpkg-dev \t\ttcl-dev \t\ttk-dev \t' \t&& apt-get
      update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*
      \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf python.tar.xz.asc
      \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1
      -f python.tar.xz \t&& rm python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip
      \t&& make -j \"$(nproc)\" \t&& make install \t&& ldconfig \t\t&& apt-get purge
      -y --auto-remove $buildDeps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\(
      -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f
      -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' + \t&&
      rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s
      python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 9.0.1
    Name: env
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython
      get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name
      '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         gcc gettext         mysql-client         sqlite3         postgresql-client
      libpq-dev binutils libproj-dev gdal-bin         libtiff5-dev libjpeg62-turbo-dev
      zlib1g-dev libfreetype6-dev         liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev         libxml2-dev
      libxslt-dev libffi-dev         libcairo2-dev     --no-install-recommends &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir --upgrade gunicorn uwsgi psycopg2 mysqlclient virtualenv
      invoke Jinja2 ipython
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOM_VERSION
      Value: phantomjs-2.1.1
    Name: env
  - CmdLine:
    - set -x   && apt-get update  && cd /tmp  && wget -q https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOM_VERSION-linux-$(uname
      -m).tar.bz2 -O $PHANTOM_VERSION-linux-$(uname -m).tar.bz2  && tar xvjf $PHANTOM_VERSION-linux-$(uname
      -m).tar.bz2  && mv /tmp/$PHANTOM_VERSION-linux-$(uname -m)/bin/phantomjs /usr/local/bin/phantomjs  &&
      rm -rf /tmp/* /var/lib/apt/lists/*  && useradd --system --uid 7374 -m --shell
      /usr/sbin/nologin phantomjs  && su phantomjs -s /bin/sh -c "phantomjs --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower && npm install -g gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get upgrade -y
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:stretch
