MetaArgs: null
Stages:
- BaseName: java:8-jre-alpine
  Commands:
  - CmdLine:
    - apk --no-cache update
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update bash snappy unzip wget curl docker jq coreutils openssh procps
      nginx
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: HADOOP_VERSION
      Value: '"2.7.3"'
    Name: env
  - Env:
    - Key: ZOOKEEPER_VERSION
      Value: '"3.4.9"'
    Name: env
  - Env:
    - Key: FLINK_VERSION
      Value: '"1.1.4"'
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - download-hadoop.sh
    - /tmp/download-hadoop.sh
  - CmdLine:
    - chmod a+x /tmp/download-hadoop.sh && sync && /tmp/download-hadoop.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xfz /tmp/hadoop-${HADOOP_VERSION}.tar.gz -C /usr/local && rm /tmp/hadoop-${HADOOP_VERSION}.tar.gz
      &&     cd /usr/local && ln -s ./hadoop-${HADOOP_VERSION} hadoop
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xfz /tmp/zookeeper-${ZOOKEEPER_VERSION}.tar.gz -C /usr/local && rm /tmp/zookeeper-${ZOOKEEPER_VERSION}.tar.gz
      &&     cd /usr/local && ln -s ./zookeeper-${ZOOKEEPER_VERSION} zookeeper
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xfz /tmp/flink-${FLINK_VERSION}.tar.gz -C /usr/local && rm /tmp/flink-${FLINK_VERSION}.tar.gz
      &&     cd /usr/local && ln -s ./flink-${FLINK_VERSION} flink
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /usr/local/zookeeper/conf/zoo_sample.cfg /usr/local/zookeeper/conf/zoo.cfg
    Name: run
    PrependShell: true
  - Env:
    - Key: ZK_HOME
      Value: /usr/local/zookeeper
    Name: env
  - CmdLine:
    - sed  -i "s|/tmp/zookeeper|$ZK_HOME/data|g" $ZK_HOME/conf/zoo.cfg; mkdir $ZK_HOME/data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/zookeeper
  - Name: volume
    Volumes:
    - /usr/local/zookeeper/conf
    - /usr/local/zookeeper/data
    - /usr/local/hadoop/dfs
    - /usr/local/hadoop/journal/data
  - Env:
    - Key: HADOOP_PREFIX
      Value: /usr/local/hadoop
    Name: env
  - Env:
    - Key: HADOOP_COMMON_HOME
      Value: /usr/local/hadoop
    Name: env
  - Env:
    - Key: HADOOP_HDFS_HOME
      Value: /usr/local/hadoop
    Name: env
  - Env:
    - Key: HADOOP_MAPRED_HOME
      Value: /usr/local/hadoop
    Name: env
  - Env:
    - Key: HADOOP_YARN_HOME
      Value: /usr/local/hadoop
    Name: env
  - Env:
    - Key: HADOOP_CONF_DIR
      Value: /usr/local/hadoop/etc/hadoop
    Name: env
  - Env:
    - Key: YARN_CONF_DIR
      Value: $HADOOP_PREFIX/etc/hadoop
    Name: env
  - Env:
    - Key: FLINK_PREFIX
      Value: /usr/local/flink
    Name: env
  - CmdLine:
    - ls $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr\nexport HADOOP_PREFIX=/usr/local/hadoop\nexport
      HADOOP_HOME=/usr/local/hadoop\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:'
      $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $HADOOP_PREFIX/input
    Name: run
    PrependShell: true
  - CmdLine:
    - cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - core-site.xml
    - $HADOOP_PREFIX/etc/hadoop/core-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - hdfs-site.xml
    - $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mapred-site.xml
    - $HADOOP_PREFIX/etc/hadoop/mapred-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - yarn-site.xml
    - $HADOOP_PREFIX/etc/hadoop/yarn-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - flink-conf.yaml
    - $FLINK_PREFIX/conf/flink-conf.yaml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - libstub.so
    - /usr/lib
  - CmdLine:
    - echo "export LD_PRELOAD=/usr/lib/libstub.so" >> /usr/local/hadoop/libexec/hadoop-config.sh
      &&     echo "export LD_PRELOAD=/usr/lib/libstub.so" >> /usr/local/hadoop/libexec/hdfs-config.sh
      &&     ln -s /usr/lib/libcrypto.so.1.0.0 /usr/lib/libcrypto.so
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh_config
    - /root/.ssh/config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bootstrap.sh
    - /etc/bootstrap.sh
  - CmdLine:
    - chown root:root /etc/bootstrap.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /etc/bootstrap.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start-zk-bmx.sh
    - /usr/bin/start-zk.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fence.sh
    - /etc/fence.sh
  - CmdLine:
    - chown root:root /etc/fence.sh && chmod a+x /etc/fence.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: BOOTSTRAP
      Value: /etc/bootstrap.sh
    Name: env
  - CmdLine:
    - ls -la /usr/local/hadoop/etc/hadoop/*-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -la /usr/local/hadoop/etc/hadoop/*-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd &&     echo 'root:wurstmeister' | chpasswd &&     sed -i
      's/#PermitRootLogin/PermitRootLogin/' /etc/ssh/sshd_config &&     sed -i 's/PermitRootLogin
      prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config &&     ssh-keygen
      -q -N "" -t dsa -f /etc/ssh/ssh_host_dsa_key &&     ssh-keygen -q -N "" -t rsa
      -f /etc/ssh/ssh_host_rsa_key &&     ssh-keygen -q -N "" -t rsa -f /root/.ssh/id_rsa
      &&     cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/sshd && ssh root@localhost ls -l
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - addtoresolv
    - /sbin/addtoresolv
  - Chown: ""
    Name: add
    SourcesAndDest:
    - a8sidecar
    - /usr/bin/a8sidecar
  - Name: expose
    Ports:
    - "50010"
    - "50020"
    - "50070"
    - "50075"
    - "50090"
    - "8020"
    - "9000"
  - Name: expose
    Ports:
    - "8485"
  - Name: expose
    Ports:
    - "10020"
    - "19888"
  - Name: expose
    Ports:
    - "8030"
    - "8031"
    - "8032"
    - "8033"
    - "8040"
    - "8042"
    - "8088"
  - Name: expose
    Ports:
    - "2181"
    - "2888"
    - "3888"
  - Name: expose
    Ports:
    - "6123"
    - "8081"
  - Name: expose
    Ports:
    - "2122"
    - "22"
    - "49707"
  - Env:
    - Key: A8_SERVICE
      Value: zookeeper:flink
    Name: env
  - Env:
    - Key: A8_ENDPOINT_PORT
      Value: "2181"
    Name: env
  - Env:
    - Key: A8_ENDPOINT_TYPE
      Value: tcp
    Name: env
  - Env:
    - Key: A8_REGISTRY_URL
      Value: http://flink-a8-registry.eu-gb.mybluemix.net
    Name: env
  - Env:
    - Key: A8_CONTROLLER_URL
      Value: http://flink-a8-controller.eu-gb.mybluemix.net
    Name: env
  - Env:
    - Key: A8_CONTROLLER_POLL
      Value: 60s
    Name: env
  - Env:
    - Key: A8_LOG
      Value: "true"
    Name: env
  - CmdLine:
    - /usr/bin/a8sidecar
    - --register
    - --dns
    - --dns_domain
    - local
    - --dns_port
    - "53"
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --service test
    Name: cmd
    PrependShell: false
  From:
    Image: java:8-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM java:8-jre-alpine
