{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Elias Alves \u003celias.alves@ufvjm.edu.br\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_BRANCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "Name",
              "Value": "\"Development Web Server Stack\""
            },
            {
              "Key": "Version",
              "Value": "${VCS_BRANCH}"
            },
            {
              "Key": "Architecture",
              "Value": "\"x86_64\""
            },
            {
              "Key": "License",
              "Value": "\"Apache License 2.0\""
            },
            {
              "Key": "Dockerfile_location",
              "Value": "\"/root/buildinfo\""
            },
            {
              "Key": "Usage",
              "Value": "\"docker run -d -p [HOST WWW PORT NUMBER]:80 -v [HOST WWW DOCUMENT ROOT]:/var/www/html -v [HOST DB DOCUMENT ROOT]:/var/lib/mysql unixelias/lamp\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Development Web Server Stack\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Cutting-edge Web stack, based on Ubuntu 16.04 LTS. Includes .htaccess support and popular PHP7 features, including composer and mail() function.\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/unixelias/docker-lamp\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Elias Alves at UFVJM\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${VCS_BRANCH}"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "\"0.1\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "\"dev\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "\"docker run -d -p [HOST WWW PORT NUMBER]:80 -v [HOST WWW DOCUMENT ROOT]:/var/www/html -v [HOST DB DOCUMENT ROOT]:/var/lib/mysql unixelias/lamp\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Dockerfile",
            "/root/buildinfo"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts/debconf.selections",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "debconf-set-selections /tmp/debconf.selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends     bzip2     curl     git     locales \topenssl \tperl     tzdata     unzip     vim     xz-utils     \u0026\u0026 locale-gen pt     \u0026\u0026 echo \"pt_BR pt_BR.UTF-8\" \u003e\u003e /etc/locale.alias     \u0026\u0026 unlink /etc/localtime     \u0026\u0026 ln -s /usr/share/zoneinfo/Brazil/East /etc/localtime     \u0026\u0026 dpkg-reconfigure -f noninteractive tzdata     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'pt_BR.UTF-8'"
            },
            {
              "Key": "LANGUAGE",
              "Value": "'pt_BR:pt:en'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'pt_BR.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get upgrade -y \t\u0026\u0026 apt-get install -y --no-install-recommends \tapache2 \tcomposer \tftp \tphp7.0 \tlibapache2-mod-php7.0 \tnpm \tpostfix \tphp7.0-bz2 \tphp7.0-cgi \tphp7.0-cli \tphp7.0-common \tphp7.0-curl \tphp7.0-dev \tphp7.0-enchant \tphp7.0-fpm \tphp7.0-gd \tphp7.0-gmp \tphp7.0-imap \tphp7.0-interbase \tphp7.0-intl \tphp7.0-json \tphp7.0-ldap \tphp7.0-mcrypt \tphp7.0-mbstring \tphp7.0-mysql \tphp7.0-odbc \tphp7.0-opcache \tphp7.0-pgsql \tphp7.0-phpdbg \tphp7.0-pspell \tphp7.0-readline \tphp7.0-recode \tphp7.0-snmp \tphp7.0-sqlite3 \tphp7.0-sybase \tphp7.0-tidy \tphp7.0-xmlrpc \tphp7.0-xsl \ttree   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yarn grunt-cli gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOG_STDOUT",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOG_STDERR",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOG_LEVEL",
              "Value": "warn"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ALLOW_OVERRIDE",
              "Value": "All"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DATE_TIMEZONE",
              "Value": "'America/Sao_Paulo'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "dumb"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts/index.php",
            "/var/www/html/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scripts/run-lamp.sh",
            "/usr/sbin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./root/",
            "~/"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/nodejs /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/sbin/run-lamp.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/httpd"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/run-lamp.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}