{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Arthur Edamov \u003cedamov@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo https://dl-cdn.alpinelinux.org/alpine/edge/testing \u003e\u003e/etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CURL_VERSION",
              "Value": "7.50.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache openssl openssl-dev nghttp2-dev ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache         php7         php7-curl         php7-dom         php7-gmp         php7-intl         php7-json         php7-mbstring         php7-openssl         php7-phar         php7-xdebug         php7-xml         php7-xmlwriter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache --virtual curldeps g++ make perl \u0026\u0026     wget https://curl.haxx.se/download/curl-$CURL_VERSION.tar.bz2 \u0026\u0026     tar xjvf curl-$CURL_VERSION.tar.bz2 \u0026\u0026     rm curl-$CURL_VERSION.tar.bz2 \u0026\u0026     cd curl-$CURL_VERSION \u0026\u0026     ./configure         --with-nghttp2=/usr         --prefix=/usr         --with-ssl         --enable-ipv6         --enable-unix-sockets         --without-libidn         --disable-static         --disable-ldap         --with-pic \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache         apache-ant         autoconf         gcc         php7-dev         php7-pear         openssh         supervisor         wget         zip \u0026\u0026     cd /tmp \u0026\u0026     wget http://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz \u0026\u0026     tar -zxvf xdebug-$XDEBUG_VERSION.tgz \u0026\u0026     rm xdebug-$XDEBUG_VERSION.tgz \u0026\u0026     cd xdebug-$XDEBUG_VERSION/ \u0026\u0026     phpize \u0026\u0026     ./configure --enable-xdebug \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     HOST_IP=\"$(/sbin/ip route|awk '/default/ { print $3 }')\" \u0026\u0026     sed -i \"$ a\\xdebug.remote_host=${HOST_IP}\" /etc/php7/conf.d/xdebug.ini \u0026\u0026     sed -i \"$ a\\zend_extension=xdebug.so\" /etc/php7/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026     php -r \"copy('http://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php -r \"if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \u0026\u0026     php composer-setup.php \u0026\u0026     php -r \"unlink('composer-setup.php');\" \u0026\u0026     rm -r curl-$CURL_VERSION \u0026\u0026     rm -r /var/cache/apk \u0026\u0026     rm -r /usr/share/man \u0026\u0026     apk del curldeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php",
            "-a"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}