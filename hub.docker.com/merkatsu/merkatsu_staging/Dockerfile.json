{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mhart/alpine-node:4",
      "SourceCode": "FROM mhart/alpine-node:4",
      "Platform": "",
      "From": {
        "Image": "mhart/alpine-node:4"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.9.5"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "chmod +x docker_staging_init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add make gcc g++ python openssl-dev pcre-dev zlib-dev wget build-base \t\u0026\u0026 wget http://nginx.org/download/${NGINX_VERSION}.tar.gz     \u0026\u0026 tar -zxvf ${NGINX_VERSION}.tar.gz     \u0026\u0026 cd ${NGINX_VERSION}     \u0026\u0026 ./configure         --with-http_ssl_module         --with-http_v2_module         --with-http_gzip_static_module         --prefix=/etc/nginx         --conf-path=/etc/nginx/nginx.conf         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --sbin-path=/usr/local/sbin/nginx     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd /src     \u0026\u0026 rm -rf ${NGINX_VERSION} \u0026\u0026 rm ${NGINX_VERSION}.tar.gz     \u0026\u0026 rm -rf /etc/nginx/nginx.conf \t\u0026\u0026 npm install --production \t\u0026\u0026 apk del make gcc g++ python wget build-base \t\u0026\u0026 rm -rf /tmp/* /root/.npm /root/.node-gyp /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp nginx_staging.conf /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "./docker_staging_init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}