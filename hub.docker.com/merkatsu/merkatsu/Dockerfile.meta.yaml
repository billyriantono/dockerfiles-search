MetaArgs: null
Stages:
- BaseName: mhart/alpine-node:4
  Commands:
  - Env:
    - Key: NGINX_VERSION
      Value: nginx-1.9.5
    Name: env
  - Name: workdir
    Path: /src
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - chmod +x docker_init.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk --update add make gcc g++ python openssl-dev pcre-dev zlib-dev wget build-base
      \t&& wget http://nginx.org/download/${NGINX_VERSION}.tar.gz     && tar -zxvf
      ${NGINX_VERSION}.tar.gz     && cd ${NGINX_VERSION}     && ./configure         --with-http_ssl_module
      \        --with-http_v2_module         --with-http_gzip_static_module         --prefix=/etc/nginx
      \        --conf-path=/etc/nginx/nginx.conf         --http-log-path=/var/log/nginx/access.log
      \        --error-log-path=/var/log/nginx/error.log         --sbin-path=/usr/local/sbin/nginx
      \    && make     && make install     && cd /src     && rm -rf ${NGINX_VERSION}
      && rm ${NGINX_VERSION}.tar.gz     && rm -rf /etc/nginx/nginx.conf \t&& npm install
      --production \t&& apk del make gcc g++ python wget build-base \t&& rm -rf /tmp/*
      /root/.npm /root/.node-gyp /var/cache/apk/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - cp nginx.conf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - ./docker_init.sh
    Name: cmd
    PrependShell: false
  From:
    Image: mhart/alpine-node:4
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:4
