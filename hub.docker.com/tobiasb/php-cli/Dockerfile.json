{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-cli-alpine",
      "SourceCode": "FROM php:7.3-cli-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-cli-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -xe;   apk update   \u0026\u0026 apk upgrade   \u0026\u0026 rm -rf /var/cache/*   \u0026\u0026 mkdir -p /var/cache/apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe;   apk add --update --no-cache tzdata;  cp /usr/share/zoneinfo/Europe/Berlin /etc/localtime   \u0026\u0026 echo \"Europe/Berlin\" \u003e /etc/timezone;   apk del --no-cache tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "/etc/localtime"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe;   apk add --update --no-cache     tar     patch     coreutils     less     sed     bash     curl     mysql-client     git     screen     openssh-client     freetype-dev     libjpeg-turbo-dev     libpng-dev     exim     jq     wget     html2text     git-lfs     openjdk8-jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe;   apk add --no-cache --virtual .build-dependencies     $PHPIZE_DEPS   \u0026\u0026 docker-php-source extract   \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   \u0026\u0026 docker-php-ext-install -j$(nproc) gd pdo_mysql   \u0026\u0026 pecl install apcu   \u0026\u0026 docker-php-ext-enable opcache apcu   \u0026\u0026 docker-php-source delete   \u0026\u0026 apk del --no-cache .build-dependencies   \u0026\u0026 cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./degov.ini",
            "/usr/local/etc/php/conf.d/degov.ini"
          ]
        },
        {
          "CmdLine": [
            "set -xe;   cd /tmp \u0026\u0026 curl -sSL https://getcomposer.org/installer \u003e composer-setup.php   \u0026\u0026 echo \"7aa79073bc48a1d215730ba5b0866424d4c0942a83946c10609c1225f328585f4b3f0e0e1e84de37c691ab74abccc0b6b1f0bf2f051e3eab66b8dfd67f2f4201  composer-setup.php\" | sha512sum -c -   \u0026\u0026 php composer-setup.php --check   \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin/ --filename=composer   \u0026\u0026 chmod +x /usr/local/bin/composer   \u0026\u0026 set +x   \u0026\u0026 printf \"$(composer --ansi --version)\\n\\n\"  \u0026\u0026 composer --ansi diagnose   \u0026\u0026 rm -rf /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe;   cd /tmp   \u0026\u0026 curl -sSL https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar -o /usr/local/bin/drush   \u0026\u0026 chmod +x /usr/local/bin/drush   \u0026\u0026 echo \"820f5428ac5fa41072717123020a5aebc92400a2d58445c8aae639a73faad479aeeb17847f1c0ce9fd73255204ae68a2134d7dc1619727fc216c890ef7fb9089  /usr/local/bin/drush\"  | sha512sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}