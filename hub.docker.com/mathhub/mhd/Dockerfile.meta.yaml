MetaArgs: null
Stages:
- As: frontend
  BaseName: node:12
  Commands:
  - Name: workdir
    Path: /app/frontend/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - frontend
    - .
  - CmdLine:
    - yarn && yarn build
    Name: run
    PrependShell: true
  From:
    Image: node:12
  Name: frontend
  Platform: ""
  SourceCode: FROM node:12 as frontend
- BaseName: python:3.7-alpine
  Commands:
  - Name: workdir
    Path: /app/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /app/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements-prod.txt
    - /app/
  - CmdLine:
    - mkdir -p /var/www/admin/static/     && apk add --no-cache bash postgresql-libs
      postgresql-client pcre-dev libffi-dev mailcap     && apk add --no-cache --virtual
      .build-deps gcc musl-dev postgresql-dev linux-headers python3-dev     && pip
      install -r requirements.txt -r requirements-prod.txt --no-cache-dir     && apk
      --purge del .build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - manage.py
    - /app/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mhd/
    - /app/mhd/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mhd_data/
    - /app/mhd_data/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mhd_provenance/
    - /app/mhd_provenance/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mhd_schema/
    - /app/mhd_schema/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mhd_tests/
    - /app/mhd_tests/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mddl_catalog/
    - /app/mddl_catalog/
  - Env:
    - Key: DJANGO_SETTINGS_MODULE
      Value: '"mhd.docker_settings"'
    Name: env
  - Env:
    - Key: DJANGO_SECRET_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: DJANGO_ALLOWED_HOSTS
      Value: '"localhost"'
    Name: env
  - Env:
    - Key: DJANGO_DB_ENGINE
      Value: '"django.db.backends.sqlite3"'
    Name: env
  - Env:
    - Key: DJANGO_DB_NAME
      Value: '"/data/mhd.db"'
    Name: env
  - Env:
    - Key: DJANGO_DB_USER
      Value: '""'
    Name: env
  - Env:
    - Key: DJANGO_DB_PASSWORD
      Value: '""'
    Name: env
  - Env:
    - Key: DJANGO_DB_HOST
      Value: '""'
    Name: env
  - Env:
    - Key: DJANGO_DB_PORT
      Value: '""'
    Name: env
  - CmdLine:
    - DJANGO_SECRET_KEY=setup python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - Chown: ""
    From: frontend
    Name: copy
    SourcesAndDest:
    - /app/frontend/build
    - /var/www/frontend/build
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/uwsgi.ini
    - /uwsgi.ini
  - Name: volume
    Volumes:
    - /data/
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - uwsgi
    - --ini
    - /uwsgi.ini
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7-alpine
