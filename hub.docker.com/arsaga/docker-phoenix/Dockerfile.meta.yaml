MetaArgs: null
Stages:
- BaseName: elixir:1.5.3-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"hattori045"'
    Name: label
  - Env:
    - Key: TZ
      Value: Asia/Tokyo
    Name: env
  - CmdLine:
    - set -x &&   apt-get update &&   apt-get install -y --no-install-recommends   curl
      &&   curl -sL https://deb.nodesource.com/setup_10.x | bash - &&   apt-get install
      -y --no-install-recommends   nodejs   build-essential   mysql-client   inotify-tools   git   make   imagemagick   tar   ssh   gzip   g++   vim   ca-certificates
      &&   rm -rf /var/lib/apt/lists/* &&   ln -sf /usr/local/bin/node /usr/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${TZ}" > /etc/timezone &&     dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y python2.7-dev python-setuptools && easy_install
      pip && pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -q https://github.com/ferd/erlang-history.git &&     cd erlang-history
      &&     make install &&     cd - &&     rm -fR erlang-history
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:node_modules/.bin:/opt/elixir-1.5.3/bin
    Name: env
  - CmdLine:
    - mix local.hex --force &&     mix local.rebar --force &&     mix hex.info
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4000"
  - CmdLine:
    - sh
    - -c
    - mix deps.get && mix ecto.migrate && elixir --sname vitalgear-node --cookie vitalgear
      -S mix phx.server
    Name: cmd
    PrependShell: false
  From:
    Image: elixir:1.5.3-slim
  Name: ""
  Platform: ""
  SourceCode: FROM elixir:1.5.3-slim
