{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:1.10.3-alpine3.8",
      "SourceCode": "FROM golang:1.10.3-alpine3.8 AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:1.10.3-alpine3.8"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk upgrade --update     \u0026\u0026 apk add git     \u0026\u0026 go get github.com/shadowsocks/go-shadowsocks2"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"FRANK \u003chttps://github.com/frankpen\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "TZ",
          "Name": "arg",
          "Value": "\"Asia/Shanghai\""
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "${TZ}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade --update     \u0026\u0026 apk add bash tzdata     \u0026\u0026 ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime     \u0026\u0026 echo ${TZ} \u003e /etc/timezone     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/bin/go-shadowsocks2",
            "/usr/bin/ss-go"
          ]
        },
        {
          "Env": [
            {
              "Key": "ARGS",
              "Value": "\"ss://AES-128-CFB:password@1.2.3.4:10400\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "4080/tcp",
            "4080/udp"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/ss-go -c ${ARGS} -verbose -socks :4080"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}