{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "liangsuilong/docker-java:8u151-b12",
      "SourceCode": "FROM liangsuilong/docker-java:8u151-b12",
      "Platform": "",
      "From": {
        "Image": "liangsuilong/docker-java:8u151-b12"
      },
      "Commands": [
        {
          "Maintainer": "Suilong Liang \u003csuilong.liang@worktogether.io\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd -r elasticsearch \u0026\u0026 useradd -r -g elasticsearch elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_VERSION",
              "Value": "6.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends wget \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true \t\u0026\u0026 apt-get purge -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends  wget \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 wget -O /opt/elasticsearch.tar.gz \"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz\" \t\u0026\u0026 cd /opt/ \t\u0026\u0026 tar xvf elasticsearch.tar.gz \t\u0026\u0026 mv elasticsearch-${ELASTICSEARCH_VERSION} elasticsearch \t\u0026\u0026 rm -f elasticsearch.tar.gz \t\u0026\u0026 chown -R elasticsearch:elasticsearch /opt/elasticsearch/ \t\u0026\u0026 apt-get purge -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/elasticsearch/data/",
            "/etc/elasticsearch/",
            "/opt/elasticsearch/logs/",
            "/opt/elasticsearch/plugins/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9200",
            "9300"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "elasticsearch"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}