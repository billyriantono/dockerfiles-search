{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Suilong Liang \u003csuilong.liang@worktogether.io\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -ex; \tif ! command -v gpg \u003e /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r postgres --gid=999 \u0026\u0026 useradd -r -g postgres --uid=999 postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tfetchDeps=' \t\tca-certificates \t\twget \t'; \tapt-get update; \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \t\tchmod +x /usr/local/bin/gosu; \tgosu nobody true; \t\tapt-get purge -y --auto-remove $fetchDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \tkey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --export \"$key\" \u003e /etc/apt/trusted.gpg.d/postgres.gpg; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION",
              "Value": "10.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION_MINOR",
              "Value": "1.pgdg16.04+1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\techo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list; \tapt-get update; \tapt-get install -y postgresql-common; \tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf; \tapt-get install -y \t\t\"postgresql-$PG_MAJOR=$PG_VERSION-$PG_VERSION_MINOR\" \t; \t\trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \t\u0026\u0026 ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \t\u0026\u0026 sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/postgresql \u0026\u0026 chown -R postgres:postgres /var/run/postgresql \u0026\u0026 chmod 2777 /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/postgresql/$PG_MAJOR/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$PGDATA\" \u0026\u0026 chown -R postgres:postgres \"$PGDATA\" \u0026\u0026 chmod 777 \"$PGDATA\" # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}