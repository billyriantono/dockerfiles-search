MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Peter Evans <mail@peterevans.dev>"'
    - Key: org.opencontainers.image.title
      Value: '"osrm-backend"'
    - Key: org.opencontainers.image.description
      Value: '"Docker image for the Open Source Routing Machine (OSRM) osrm-backend."'
    - Key: org.opencontainers.image.authors
      Value: '"Peter Evans <mail@peterevans.dev>"'
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/peter-evans/osrm-backend-docker"'
    - Key: org.opencontainers.image.vendor
      Value: '"https://peterevans.dev"'
    - Key: org.opencontainers.image.licenses
      Value: '"MIT"'
    Name: label
  - Env:
    - Key: OSRM_VERSION
      Value: 5.22.0
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get -y update  && apt-get install -y -qq --no-install-recommends     build-essential     cmake     curl     ca-certificates     libbz2-dev     libstxxl-dev     libstxxl1v5     libxml2-dev     libzip-dev     libboost-all-dev     lua5.2     liblua5.2-dev     libtbb-dev     libluabind-dev     pkg-config     gcc     python-dev     python-setuptools  &&
      apt-get clean  && easy_install -U pip  && pip install -U crcmod  && rm -rf /var/lib/apt/lists/*  &&
      rm -rf /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /osrm-src  && cd /osrm-src  && curl --silent -L https://github.com/Project-OSRM/osrm-backend/archive/v$OSRM_VERSION.tar.gz
      -o v$OSRM_VERSION.tar.gz  && tar xzf v$OSRM_VERSION.tar.gz  && cd osrm-backend-$OSRM_VERSION  &&
      mkdir build  && cd build  && cmake .. -DCMAKE_BUILD_TYPE=Release  && cmake --build
      .  && cmake --build . --target install  && mkdir /osrm-data  && mkdir /osrm-profiles  &&
      cp -r /osrm-src/osrm-backend-$OSRM_VERSION/profiles/* /osrm-profiles  && rm
      -rf /osrm-src
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5000"
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
