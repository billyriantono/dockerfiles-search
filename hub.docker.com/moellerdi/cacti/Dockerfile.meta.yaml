MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: nobody <nobody@nowhere.com>
    Name: maintainer
  - Env:
    - Key: CACTI_VERSION
      Value: 1.2.8
    - Key: DB_NAME
      Value: cacti
    - Key: DB_USER
      Value: cactiuser
    - Key: DB_PASS
      Value: cactipassword
    - Key: DB_HOST
      Value: localhost
    - Key: DB_PORT
      Value: "3306"
    - Key: RDB_NAME
      Value: cacti
    - Key: RDB_USER
      Value: cactiuser
    - Key: RDB_PASS
      Value: cactipassword
    - Key: RDB_HOST
      Value: localhost
    - Key: RDB_PORT
      Value: "3306"
    - Key: BACKUP_RETENTION
      Value: "7"
    - Key: BACKUP_TIME
      Value: "0"
    - Key: SNMP_COMMUNITY
      Value: public
    - Key: REMOTE_POLLER
      Value: "0"
    - Key: INITIALIZE_DB
      Value: "0"
    - Key: TZ
      Value: Europe/Berlin
    - Key: PHP_MEMORY_LIMIT
      Value: 800M
    - Key: PHP_MAX_EXECUTION_TIME
      Value: "60"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - container-files
    - /
  - CmdLine:
    - chmod +x /upgrade.sh &&     chmod +x /restore.sh &&     chmod +x /backup.sh  &&     mkdir
      /backups &&         echo "-------------------------------------------" &&     echo
      "yum - install & update all needed packages." &&     echo "-------------------------------------------"
      &&     rpm -Uvh         https://rpms.remirepo.net/enterprise/remi-release-7.rpm         https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      &&     rpm --rebuilddb && yum clean all &&     yum install yum-utils &&     yum-config-manager
      --enable remi-php74 &&     yum update -y &&     yum install -y         rrdtool
      net-snmp net-snmp-utils cronie php-ldap php-devel mysql php         ntp bison
      php-cli php-mysql php-common php-mbstring php-snmp curl         php-gd openssl
      openldap mod_ssl php-pear net-snmp-libs php-pdo php-gmp         autoconf automake
      gcc gzip help2man libtool make net-snmp-devel         m4 libmysqlclient-devel
      libmysqlclient openssl-devel dos2unix wget         sendmail mariadb-devel which
      python-pip &&     yum clean all &&         echo "----------------------------------------------"
      &&     echo "python - install & update all needed packages." &&     echo "----------------------------------------------"
      &&     pip install simplejson &&         echo "----------------------------------------------------------"
      &&     echo "Download, extracting and installing Cacti files to /cacti." &&     echo
      "----------------------------------------------------------" &&     curl -L
      -o /tmp/cacti-${CACTI_VERSION}.tgz https://github.com/Cacti/cacti/archive/release/${CACTI_VERSION}.tar.gz
      &&     mkdir -p /cacti &&     tar zxvf /tmp/cacti-${CACTI_VERSION}.tgz -C /cacti
      --strip-components=1 &&     rm -f /tmp/cacti-${CACTI_VERSION}.tgz &&         echo
      "----------------------------------------------------------" &&     echo "Download,
      extracting and installing Spine files to /spine." &&     echo "----------------------------------------------------------"
      &&     curl -L -o /tmp/spine-${CACTI_VERSION}.tgz https://github.com/Cacti/spine/archive/release/${CACTI_VERSION}.tar.gz
      &&     mkdir -p /tmp/spine &&     mkdir -p /spine   &&     tar zxvf /tmp/spine-${CACTI_VERSION}.tgz
      -C /tmp/spine --strip-components=1 &&     rm -f /tmp/spine-${CACTI_VERSION}.tgz
      &&     cd /tmp/spine && ./bootstrap && ./configure --prefix=/spine && make &&
      make install &&     chown root:root /spine/bin/spine &&     chmod +s /spine/bin/spine
      &&     rm -rf /tmp/spine &&         echo "------------------------------------------------------------------------"
      &&     echo "Fix cron issues - https://github.com/CentOS/CentOS-Dockerfiles/issues/31"
      &&     echo "------------------------------------------------------------------------"
      &&     sed -i '/session required pam_loginuid.so/d' /etc/pam.d/crond &&         echo
      "----------" &&     echo "misc setup" &&     echo "----------" &&     echo "ServerName
      localhost" > /etc/httpd/conf.d/fqdn.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "443"
    - "80"
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
