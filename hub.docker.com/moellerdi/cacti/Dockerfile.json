{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "nobody \u003cnobody@nowhere.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CACTI_VERSION",
              "Value": "1.2.8"
            },
            {
              "Key": "DB_NAME",
              "Value": "cacti"
            },
            {
              "Key": "DB_USER",
              "Value": "cactiuser"
            },
            {
              "Key": "DB_PASS",
              "Value": "cactipassword"
            },
            {
              "Key": "DB_HOST",
              "Value": "localhost"
            },
            {
              "Key": "DB_PORT",
              "Value": "3306"
            },
            {
              "Key": "RDB_NAME",
              "Value": "cacti"
            },
            {
              "Key": "RDB_USER",
              "Value": "cactiuser"
            },
            {
              "Key": "RDB_PASS",
              "Value": "cactipassword"
            },
            {
              "Key": "RDB_HOST",
              "Value": "localhost"
            },
            {
              "Key": "RDB_PORT",
              "Value": "3306"
            },
            {
              "Key": "BACKUP_RETENTION",
              "Value": "7"
            },
            {
              "Key": "BACKUP_TIME",
              "Value": "0"
            },
            {
              "Key": "SNMP_COMMUNITY",
              "Value": "public"
            },
            {
              "Key": "REMOTE_POLLER",
              "Value": "0"
            },
            {
              "Key": "INITIALIZE_DB",
              "Value": "0"
            },
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            },
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "800M"
            },
            {
              "Key": "PHP_MAX_EXECUTION_TIME",
              "Value": "60"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /upgrade.sh \u0026\u0026     chmod +x /restore.sh \u0026\u0026     chmod +x /backup.sh  \u0026\u0026     mkdir /backups \u0026\u0026         echo \"-------------------------------------------\" \u0026\u0026     echo \"yum - install \u0026 update all needed packages.\" \u0026\u0026     echo \"-------------------------------------------\" \u0026\u0026     rpm -Uvh         https://rpms.remirepo.net/enterprise/remi-release-7.rpm         https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \u0026\u0026     rpm --rebuilddb \u0026\u0026 yum clean all \u0026\u0026     yum install yum-utils \u0026\u0026     yum-config-manager --enable remi-php74 \u0026\u0026     yum update -y \u0026\u0026     yum install -y         rrdtool net-snmp net-snmp-utils cronie php-ldap php-devel mysql php         ntp bison php-cli php-mysql php-common php-mbstring php-snmp curl         php-gd openssl openldap mod_ssl php-pear net-snmp-libs php-pdo php-gmp         autoconf automake gcc gzip help2man libtool make net-snmp-devel         m4 libmysqlclient-devel libmysqlclient openssl-devel dos2unix wget         sendmail mariadb-devel which python-pip \u0026\u0026     yum clean all \u0026\u0026         echo \"----------------------------------------------\" \u0026\u0026     echo \"python - install \u0026 update all needed packages.\" \u0026\u0026     echo \"----------------------------------------------\" \u0026\u0026     pip install simplejson \u0026\u0026         echo \"----------------------------------------------------------\" \u0026\u0026     echo \"Download, extracting and installing Cacti files to /cacti.\" \u0026\u0026     echo \"----------------------------------------------------------\" \u0026\u0026     curl -L -o /tmp/cacti-${CACTI_VERSION}.tgz https://github.com/Cacti/cacti/archive/release/${CACTI_VERSION}.tar.gz \u0026\u0026     mkdir -p /cacti \u0026\u0026     tar zxvf /tmp/cacti-${CACTI_VERSION}.tgz -C /cacti --strip-components=1 \u0026\u0026     rm -f /tmp/cacti-${CACTI_VERSION}.tgz \u0026\u0026         echo \"----------------------------------------------------------\" \u0026\u0026     echo \"Download, extracting and installing Spine files to /spine.\" \u0026\u0026     echo \"----------------------------------------------------------\" \u0026\u0026     curl -L -o /tmp/spine-${CACTI_VERSION}.tgz https://github.com/Cacti/spine/archive/release/${CACTI_VERSION}.tar.gz \u0026\u0026     mkdir -p /tmp/spine \u0026\u0026     mkdir -p /spine   \u0026\u0026     tar zxvf /tmp/spine-${CACTI_VERSION}.tgz -C /tmp/spine --strip-components=1 \u0026\u0026     rm -f /tmp/spine-${CACTI_VERSION}.tgz \u0026\u0026     cd /tmp/spine \u0026\u0026 ./bootstrap \u0026\u0026 ./configure --prefix=/spine \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     chown root:root /spine/bin/spine \u0026\u0026     chmod +s /spine/bin/spine \u0026\u0026     rm -rf /tmp/spine \u0026\u0026         echo \"------------------------------------------------------------------------\" \u0026\u0026     echo \"Fix cron issues - https://github.com/CentOS/CentOS-Dockerfiles/issues/31\" \u0026\u0026     echo \"------------------------------------------------------------------------\" \u0026\u0026     sed -i '/session required pam_loginuid.so/d' /etc/pam.d/crond \u0026\u0026         echo \"----------\" \u0026\u0026     echo \"misc setup\" \u0026\u0026     echo \"----------\" \u0026\u0026     echo \"ServerName localhost\" \u003e /etc/httpd/conf.d/fqdn.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}