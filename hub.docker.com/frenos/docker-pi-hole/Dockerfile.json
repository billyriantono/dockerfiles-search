{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "adam@diginc.us \u003cadam@diginc.us\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "IMAGE",
              "Value": "alpine"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/pihole:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install.sh",
            "/usr/local/bin/docker-install.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "setupVars",
              "Value": "/etc/pihole/setupVars.conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIHOLE_INSTALL",
              "Value": "/tmp/ph_install.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "S6OVERLAY_RELEASE",
              "Value": "https://github.com/just-containers/s6-overlay/releases/download/v1.19.1.1/s6-overlay-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade --update \u0026\u0026     apk add bind-tools wget curl bash libcap \u0026\u0026     curl -L -s $S6OVERLAY_RELEASE         | tar xvzf - -C / \u0026\u0026     docker-install.sh \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "s6/alpine-root",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "s6/service",
            "/usr/local/bin/service"
          ]
        },
        {
          "Env": [
            {
              "Key": "WEBLOGDIR",
              "Value": "/var/log/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CONFIG",
              "Value": "'/etc/php5/php-fpm.conf'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /etc/pihole/ \u0026\u0026     mkdir -p /var/www/html/pihole \u0026\u0026     mkdir -p /var/www/html/admin/ \u0026\u0026     chown nginx:nginx /var/www/html \u0026\u0026     touch ${WEBLOGDIR}/access.log ${WEBLOGDIR}/error.log \u0026\u0026     chown -R nginx:nginx ${WEBLOGDIR} \u0026\u0026     sed -i 's|^user\\s*=.*$|user = nginx|' $PHP_CONFIG \u0026\u0026     sed -i '/^;pid/ s|^;||' $PHP_CONFIG \u0026\u0026     chmod 775 /var/www/html \u0026\u0026     touch /var/log/pihole.log \u0026\u0026     chmod 644 /var/log/pihole.log \u0026\u0026     chown dnsmasq:root /var/log/pihole.log \u0026\u0026     sed -i \"s/@INT@/eth0/\" /etc/dnsmasq.d/01-pihole.conf \u0026\u0026     setcap CAP_NET_BIND_SERVICE=+eip `which dnsmasq` \u0026\u0026     cp -f /usr/bin/list.sh /opt/pihole/list.sh \u0026\u0026     echo 'Done!'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_ENV_CONFIG",
              "Value": "'/etc/php5/fpm.d/envs.conf'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_ERROR_LOG",
              "Value": "'/var/log/nginx/error.log'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bash_functions.sh",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "IPv6",
              "Value": "True"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "53",
            "53/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "88"
          ]
        },
        {
          "Env": [
            {
              "Key": "S6_LOGGING",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "S6_KEEP_ENV",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "S6_BEHAVIOUR_IF_STAGE2_FAILS",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        }
      ]
    }
  ]
}