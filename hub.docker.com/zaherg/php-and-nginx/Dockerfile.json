{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "zaherg/php-xdebug-alpine:latest",
      "SourceCode": "FROM zaherg/php-xdebug-alpine:latest",
      "Platform": "",
      "From": {
        "Image": "zaherg/php-xdebug-alpine:latest"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "IMAGE_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DOCKER_REPO",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Zaher Ghaibeh \u003cz@zah.me\u003e\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "$DOCKER_REPO"
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Lightweight container with Nginx 1.12 \u0026 PHP-FPM 7.x based on Alpine Linux.\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://www.zah.me\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/linuxjuggler/php-and-nginx.git\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/.",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex     echo \"@community http://dl-4.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026 apk upgrade \u0026\u0026     apk add --no-cache nginx git curl openssh-client ca-certificates icu rsyslog logrotate runit libzip-dev curl \u0026\u0026     apk add --no-cache --virtual build-dependencies icu-dev g++ make autoconf \u0026\u0026     cd /tmp \u0026\u0026     curl -Ls https://github.com/nimmis/docker-utils/archive/master.tar.gz | tar xfz - \u0026\u0026     ./docker-utils-master/install.sh \u0026\u0026     rm -Rf ./docker-utils-master \u0026\u0026     docker-php-ext-install -j$(nproc) intl opcache bcmath \u0026\u0026     sed -i \"s|\\*.emerg|\\#\\*.emerg|\" /etc/rsyslog.conf \u0026\u0026     sed -i 's/module(load=\"imklog\")/#module(load=\"imklog\")/' /etc/rsyslog.conf \u0026\u0026     sed -i 's/$KLogPermitNonKernelFacility on/#$KLogPermitNonKernelFacility on/' /etc/rsyslog.conf \u0026\u0026     sed -i 's/user = www-data/user = nginx/' /usr/local/etc/php-fpm.d/www.conf \u0026\u0026     sed -i 's/group = www-data/group = nginx/' /usr/local/etc/php-fpm.d/www.conf \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     composer global require hirak/prestissimo \u0026\u0026     mkdir /web \u0026\u0026 mkdir /run/nginx \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     apk del build-dependencies \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/boot.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}