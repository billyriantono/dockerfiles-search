{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli-alpine",
      "SourceCode": "FROM php:7.1-cli-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "docker-php-ext-install -j$(cat /proc/cpuinfo | grep processor | wc -l) bcmath         \u0026\u0026 apk --no-cache add wget git autoconf cmake build-base openssl-dev         \u0026\u0026 git clone git://github.com/alanxz/rabbitmq-c.git -b master /usr/src/rabbitmq-c         \u0026\u0026 ls -l /usr/src/         \u0026\u0026 cd /usr/src/rabbitmq-c         \u0026\u0026 git submodule init         \u0026\u0026 git submodule update         \u0026\u0026 mkdir build         \u0026\u0026 cd build         \u0026\u0026 cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib ..         \u0026\u0026 cmake --build /usr/src/rabbitmq-c/build --config Release          \u0026\u0026 make install         \u0026\u0026 pecl install amqp         \u0026\u0026 docker-php-ext-enable amqp         \u0026\u0026 apk del cmake build-base autoconf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/usr/share/symfony-app"
          ]
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 if [ $(wget -q -O - https://composer.github.io/installer.sig) != $(php -r \"echo hash_file('SHA384', 'composer-setup.php');\") ];        then            \u003e\u00262 echo 'ERROR: Invalid installer signature';            rm composer-setup.php;            exit 1;        fi     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin     \u0026\u0026 php -r \"unlink('composer-setup.php');\"     \u0026\u0026 chmod +x /usr/local/bin/composer.phar     \u0026\u0026 cd /usr/share/symfony-app     \u0026\u0026 composer.phar install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/symfony-app"
          ]
        }
      ]
    }
  ]
}