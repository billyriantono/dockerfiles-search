MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"webispy@gmail.com"'
    - Key: version
      Value: '"0.5"'
    - Key: description
      Value: '"ARTIK Development environment"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: USER
      Value: work
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: $LC_ALL
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends sed apt-utils
      \t\t&& sed -i 's/archive.ubuntu.com/kr.archive.ubuntu.com/' /etc/apt/sources.list
      \t\t&& apt-get update \t\t&& apt-get install -y ca-certificates language-pack-en
      \t\t&& locale-gen $LC_ALL \t\t&& dpkg-reconfigure locales \t\t&& apt-get install
      -y --no-install-recommends \t\tbinfmt-support \t\tbison \t\tbuild-essential
      \t\tchrpath \t\tcmake \t\tcreaterepo \t\tcscope \t\tcurl \t\tdebhelper \t\tdebootstrap
      \t\tdevscripts \t\tdh-autoreconf dh-systemd \t\tdnsutils \t\texuberant-ctags
      \t\tfakeroot \t\tflex \t\tg++ \t\tgcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      \t\tgcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \t\tgcc-arm-none-eabi \t\tgdb-arm-none-eabi
      \t\tgettext \t\tgit \t\tgperf \t\tiputils-ping \t\tkpartx \t\tlibncurses5-dev
      \t\tlibguestfs-tools \t\tman \t\tminicom \t\tmoreutils \t\tnet-tools \t\tpkg-config
      \t\tqemu-user-static \t\tquilt \t\trpm \t\tsbuild \t\tschroot \t\tscons \t\tsudo
      \t\tubuntu-dev-tools \t\tvim \t\twget \t\tzlib1g-dev \t\tzsh \t\t&& apt-get
      clean \t\t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - certs/*
    - /usr/local/share/ca-certificates/
  - CmdLine:
    - update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - "useradd -ms /bin/bash $USER \t\t&& echo \"$USER ALL=(ALL) NOPASSWD: ALL\" >
      /etc/sudoers.d/$USER \t\t&& chmod 0440 /etc/sudoers.d/$USER \t\t&& echo 'Defaults
      env_keep=\"http_proxy https_proxy ftp_proxy no_proxy\"' >> /etc/sudoers \t\t&&
      adduser $USER dialout \t\t&& adduser $USER sbuild"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget http://ymorin.is-a-geek.org/download/kconfig-frontends/kconfig-frontends-4.11.0.1.tar.bz2
      \t\t&& tar xvf kconfig-frontends-4.11.0.1.tar.bz2 \t\t&& cd kconfig-frontends-4.11.0.1
      \t\t&& ./configure --prefix=/usr --enable-mconf --disable-gconf --disable-qconf
      \t\t&& make \t\t&& make install \t\t&& rm -rf /kconfig-frontends-4.11.0.1*"
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s /bin/zsh $USER
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - Env:
    - Key: HOME
      Value: /home/$USER
    Name: env
  - Name: workdir
    Path: /home/$USER
  - CmdLine:
    - "git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh \t\t&&
      cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc \t\t&& echo \"DISABLE_AUTO_UPDATE=true\"
      >> ~/.zshrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/SamsungARTIK/fed-artik-tools.git tools/fed-artik-tools
      \t\t&& cd tools/fed-artik-tools \t\t&& debuild -us -uc \t\t&& sudo dpkg -i ../*.deb
      \t\t&& cd \t\t&& rm -rf tools"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sbuild/.sbuildrc
    - sbuild/.mk-sbuild.rc
    - /home/$USER/
  - CmdLine:
    - "mkdir -p ubuntu/scratch && mkdir -p ubuntu/build && mkdir -p ubuntu/logs \t\t&&
      echo \"/home/$USER/ubuntu/scratch    /scratch    none    rw,bind    0    0\"
      | sudo tee -a /etc/schroot/sbuild/fstab \t\t&& sudo chown $USER.$USER .sbuildrc
      && sudo chown $USER.$USER .mk-sbuild.rc"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sbuild/04tmpfs
    - /etc/schroot/setup.d/
  - CmdLine:
    - "sudo chmod 755 /etc/schroot/setup.d/04tmpfs \t\t&& echo \"none /var/lib/schroot/union/overlay
      tmpfs uid=root,gid=root,mode=0750 0 0\" | sudo tee -a /etc/fstab"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vim/.vimrc
    - /home/$USER/
  - CmdLine:
    - "git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
      \t\t&& vim +PluginInstall +qall \t\t&& sudo chown $USER.$USER .vimrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
