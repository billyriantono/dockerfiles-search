MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Maintainer: oldpussy
    Name: maintainer
  - Key: SS_VER
    Name: arg
    Value: 3.1.0
  - Key: SS_URL
    Name: arg
    Value: https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$SS_VER/shadowsocks-libev-$SS_VER.tar.gz
  - Key: NGINX_VERSION
    Name: arg
    Value: 1.13.6
  - Key: OBFS
    Name: arg
    Value: www.ibm.com
  - Env:
    - Key: SERVER_PORT
      Value: "8388"
    Name: env
  - Env:
    - Key: PASSWD
      Value: ""
    Name: env
  - Env:
    - Key: METHOD
      Value: chacha20-ietf-poly1305
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev
      \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tgnupg \t\tlibxslt-dev \t\tgd-dev
      \t\tgeoip-dev  \t\tautoconf \t\tbuild-base \t\tcurl \t\tlibev-dev \t\tlibtool
      \t\tlibsodium-dev \t\tmbedtls-dev \t\ttar \t\tc-ares-dev \t\tautomake \t\tasciidoc
      \t\txmlto \t\tgit &&\tcd /tmp &&\tcurl -sSL $SS_URL | tar xz --strip 1 && \t./configure
      --prefix=/usr --disable-documentation && \tmake install && \tCONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--with-http_ssl_module \t\t--pid-path=/var/run/nginx.pid\" &&\tcurl -fSL
      http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz &&\tmkdir
      -p /usr/src &&\ttar -zxC /usr/src -f nginx.tar.gz &&\tcd /usr/src/nginx-$NGINX_VERSION
      &&\t./configure $CONFIG &&\tmake -j$(getconf _NPROCESSORS_ONLN) &&\tmake install
      &&\tgit clone https://github.com/shadowsocks/simple-obfs.git &&\tcd simple-obfs
      &&\tgit submodule update --init --recursive &&\t./autogen.sh &&\t./configure
      && make &&\tmake install &&\trm -rf /usr/src/nginx-$NGINX_VERSION /tmp &&\trunDeps=\"$(
      \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /usr/local/bin/obfs-server /usr/bin/ss-* /tmp/envsubst \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| xargs -r apk info --installed \t\t\t|
      sort -u \t)\" &&\tapk add --no-cache --virtual .rundeps $runDeps &&\tapk del
      .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ss-obfs.sh
    - /usr/bin/ss-obfs.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - $OBFS.crt
    - /etc/nginx/$OBFS.crt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - $OBFS.key
    - /etc/nginx/$OBFS.key
  - CmdLine:
    - chmod 755 /usr/bin/ss-obfs.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - $SERVER_PORT/tcp
    - $SERVER_PORT/udp
  - CmdLine:
    - ss-obfs.sh $SERVER_PORT $PASSWD $METHOD
    Name: cmd
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
