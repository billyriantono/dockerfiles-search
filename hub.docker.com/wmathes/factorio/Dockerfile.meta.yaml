MetaArgs: null
Stages:
- BaseName: frolvlad/alpine-glibc:alpine-3.9
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/factoriotools/factorio-docker"'
    Name: label
  - Key: USER
    Name: arg
    Value: factorio
  - Key: GROUP
    Name: arg
    Value: factorio
  - Key: PUID
    Name: arg
    Value: "845"
  - Key: PGID
    Name: arg
    Value: "845"
  - Env:
    - Key: PORT
      Value: "34197"
    - Key: RCON_PORT
      Value: "27015"
    - Key: VERSION
      Value: 0.17.66
    - Key: SHA1
      Value: b99753945ec944a8ad8c9d5d2135830517e10bd8
    - Key: SAVES
      Value: /factorio/saves
    - Key: CONFIG
      Value: /factorio/config
    - Key: MODS
      Value: /factorio/mods
    - Key: SCENARIOS
      Value: /factorio/scenarios
    - Key: SCRIPTOUTPUT
      Value: /factorio/script-output
    - Key: PUID
      Value: '"$PUID"'
    - Key: PGID
      Value: '"$PGID"'
    - Key: RCLONE_VERSION
      Value: v1.49.1
    Name: env
  - CmdLine:
    - set -ox pipefail     && archive="/tmp/factorio_headless_x64_$VERSION.tar.xz"     &&
      mkdir -p /opt /factorio     && apk add --update --no-cache --no-progress bash
      binutils curl file gettext jq libintl pwgen shadow su-exec     && curl -sSL
      "https://www.factorio.com/get-download/$VERSION/headless/linux64" -o "$archive"     &&
      echo "$SHA1  $archive" | sha1sum -c     || (sha1sum "$archive" && file "$archive"
      && exit 1)     && tar xf "$archive" --directory /opt     && chmod ugo=rwx /opt/factorio     &&
      rm "$archive"     && ln -s "$SAVES" /opt/factorio/saves     && ln -s "$MODS"
      /opt/factorio/mods     && ln -s "$SCENARIOS" /opt/factorio/scenarios     &&
      ln -s "$SCRIPTOUTPUT" /opt/factorio/script-output     && addgroup -g "$PGID"
      -S "$GROUP"     && adduser -u "$PUID" -G "$GROUP" -s /bin/sh -SDH "$USER"     &&
      chown -R "$USER":"$GROUP" /opt/factorio /factorio
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache     ca-certificates     wget
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp   && wget -qO ./rclone.zip http://downloads.rclone.org/${RCLONE_VERSION}/rclone-${RCLONE_VERSION}-linux-amd64.zip   &&
      unzip ./rclone.zip   && mv ./rclone-*/rclone /usr/bin   && (rm -rf "/tmp/"*
      2>/dev/null || true)
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /factorio
  - Name: expose
    Ports:
    - $PORT/udp
    - $RCON_PORT/tcp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: frolvlad/alpine-glibc:alpine-3.9
  Name: ""
  Platform: ""
  SourceCode: FROM frolvlad/alpine-glibc:alpine-3.9
