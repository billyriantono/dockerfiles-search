{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "\"bnosac\" info@bnosac.be",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "useradd scheduler     \u0026\u0026 mkdir /home/scheduler     \u0026\u0026 chown scheduler:scheduler /home/scheduler     \u0026\u0026 addgroup scheduler staff"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/home/scheduler\""
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927      \u0026\u0026 echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y mongodb-org      \u0026\u0026 mkdir -p /data/db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/scheduler     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y software-properties-common     \u0026\u0026 add-apt-repository 'deb http://cran.rstudio.com/bin/linux/ubuntu trusty/'     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y r-base r-base-dev r-recommended"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/scheduler     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y git curl     \u0026\u0026 apt-get install -y --no-install-recommends nodejs npm nodejs-legacy     \u0026\u0026 apt-get install -y --no-install-recommends liberror-perl     \u0026\u0026 apt-get install -y pandoc     \u0026\u0026 Rscript -e \"install.packages(c('knitr', 'rmarkdown'), repos='http://cran.rstudio.com/')\"     \u0026\u0026 git clone https://github.com/jwijffels/scheduleR.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/scheduler     \u0026\u0026 mkdir scripts     \u0026\u0026 npm install --global scheduleR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/scheduler     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y software-properties-common     \u0026\u0026 add-apt-repository -y ppa:opencpu/opencpu-1.5     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y libapache2-mod-r-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages(c('brew', 'jsonlite'), repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www/html/brew"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\u003cDirectory /var/www/html/brew\u003e\" \u003e\u003e /etc/apache2/apache2.conf     \u0026\u0026 echo \"SetHandler r-script\" \u003e\u003e /etc/apache2/apache2.conf      \u0026\u0026 echo \"RHandler brew::brew\" \u003e\u003e /etc/apache2/apache2.conf      \u0026\u0026 echo \"\u003c/Directory\u003e\" \u003e\u003e /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\u003c%\"  \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"destination \u003c- file.path('/home/scheduler/scripts', FILES[['rscriptfile']][['name']])\" \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"invisible(file.copy(FILES[['rscriptfile']][['tmp_name']], destination, overwrite=TRUE))\" \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"x \u003c- file.info(destination)\" \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"x[['mode']] \u003c- as.integer(x[['mode']])\" \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"cat(jsonlite::toJSON(x))\" \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"invisible(setStatus(status=200L))\" \u003e\u003e /var/www/html/brew/upload.R     \u0026\u0026 echo \"%\u003e\" \u003e\u003e /var/www/html/brew/upload.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "mailer_auth_user",
              "Value": "please.changeme@google.be"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "mailer_auth_pass",
              "Value": "fillinyourgooglepwd"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y libcurl4-openssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"install.packages(c('rmongodb', 'jsonlite', 'httr'), repos='http://cran.rstudio.com/')\"     \u0026\u0026 Rscript -e \"install.packages('RscheduleR', repos = 'http://www.datatailor.be/rcube', type = 'source')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e \"print(RscheduleR::scheduleR_config(uploadDir = '/home/scheduler/scripts', mailer.from = 'scheduleR \u003cnoreply@bnosac.be\u003e', mailer.auth.user = Sys.getenv('mailer_auth_user'), mailer.auth.pass = Sys.getenv('mailer_auth_pass'), db.host = 'localhost'), toJSON=TRUE, file = '/usr/local/lib/node_modules/scheduler-for-r/user.config.json')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /usr/local/lib/node_modules/scheduler-for-r/user.config.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "27017"
          ]
        },
        {
          "CmdLine": [
            "cat /usr/local/lib/node_modules/scheduler-for-r/user.config.json     \u0026\u0026 chown -R www-data:www-data /home/scheduler/scripts     \u0026\u0026 chmod -R u+rX /home/scheduler/scripts     \u0026\u0026 mongod --fork --logpath /var/log/mongod.log     \u0026\u0026 service apache2 restart     \u0026\u0026 mkdir -p /home/scheduler/scripts     \u0026\u0026 Rscript -e \"print(RscheduleR::scheduleR_config(uploadDir = '/home/scheduler/scripts', mailer.from = 'scheduleR \u003cnoreply@bnosac.be\u003e', mailer.auth.user = Sys.getenv('mailer_auth_user'), mailer.auth.pass = Sys.getenv('mailer_auth_pass'), db.host = 'localhost'), toJSON=TRUE, file = '/usr/local/lib/node_modules/scheduler-for-r/user.config.json')\"     \u0026\u0026 cd /usr/local/lib     \u0026\u0026 Rscript -e \"try(RscheduleR:::scheduleR_users_add_guest(email = Sys.getenv('mailer_auth_user')))\"     \u0026\u0026 exec npm start scheduler-for-r"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}