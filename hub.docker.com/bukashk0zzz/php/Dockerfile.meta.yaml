MetaArgs: null
Stages:
- BaseName: php:7.2-cli
  Commands:
  - Env:
    - Key: IGBINARY_VERSION
      Value: 2.0.5
    Name: env
  - Env:
    - Key: XDEBUG_VERSION
      Value: 2.6.0
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install         curl         git         zip         unzip         build-essential         jpegoptim         librsvg2-dev         libmagickwand-dev         libreadline-dev         libedit-dev         libcurl3-dev         libicu-dev         libxml2-dev         libsqlite3-dev         libtidy-dev         vim         zsh     --no-install-recommends
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~     && git clone git://github.com/bwithem/oh-my-zsh.git ~/.oh-my-zsh     &&
      cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc     && sed -e 's~ZSH_THEME~#ZSH_THEME~'
      -i ~/.zshrc     && curl https://codeload.github.com/Bukashk0zzz/vimrc/zip/master
      > vim.zip     && unzip vim.zip     && cp -r vimrc-master/.vim* .     && rm vim.zip     &&
      rm -rf vimrc-master
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install     pdo readline zip opcache soap curl intl json sockets
      gd     pdo_mysql pdo_sqlite mbstring bcmath tidy xml 2>&1 > /dev/null
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/awslabs/aws-elasticache-cluster-client-libmemcached/archive/master.zip
    - /tmp
  - CmdLine:
    - cd /tmp     && unzip master.zip     && cd /tmp/aws-elasticache-cluster-client-libmemcached-master     &&
      mkdir BUILD     && touch configure.ac aclocal.m4 configure Makefile.am Makefile.in     &&
      cd BUILD     && ../configure --prefix=/usr/include/ --with-pic     && make     &&
      make install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/igbinary/igbinary/archive/${IGBINARY_VERSION}.zip
    - /tmp
  - CmdLine:
    - cd /tmp     && unzip ${IGBINARY_VERSION}.zip     && cd /tmp/igbinary-${IGBINARY_VERSION}     &&
      phpize     && ./configure     && make     && make test     && make install     &&
      docker-php-ext-enable igbinary
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/awslabs/aws-elasticache-cluster-client-memcached-for-php/archive/php7.zip
    - /tmp
  - CmdLine:
    - cd /tmp     && unzip php7.zip     && cd /tmp/aws-elasticache-cluster-client-memcached-for-php-php7     &&
      phpize     && ./configure --with-libmemcached-dir=/usr/include/ --disable-memcached-sasl
      --enable-memcached-igbinary     && make     && make install     && docker-php-ext-enable
      memcached
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/xdebug/xdebug/archive/${XDEBUG_VERSION}.zip
    - /tmp
  - CmdLine:
    - cd /tmp     && unzip ${XDEBUG_VERSION}.zip     && cd /tmp/xdebug-${XDEBUG_VERSION}     &&
      phpize     && ./configure     && make     && make test     && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"     &&
      php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061')
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;"     && php composer-setup.php     && php -r "unlink('composer-setup.php');"     &&
      mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - CmdLine:
    - apt-get clean     && rm -rf /var/lib/apt/lists/*  /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php.ini
    - /usr/local/etc/php/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/xdebug.ini
    - /usr/local/etc/php/conf.d/xdebug.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /usr/local/bin/composer /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app/var
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.2-cli
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-cli
