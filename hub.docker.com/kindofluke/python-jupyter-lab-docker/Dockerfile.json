{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs gdal-bin libspatialindex-dev python3-rtree"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_VERSION",
          "Name": "arg",
          "Value": "\"google-chrome-stable\""
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   \u0026\u0026 echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 apt-get update -qqy   \u0026\u0026 apt-get -qqy install     ${CHROME_VERSION:-google-chrome-stable}   \u0026\u0026 rm /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_DRIVER_VERSION",
          "Name": "arg",
          "Value": "\"latest\""
        },
        {
          "CmdLine": [
            "CD_VERSION=$(if [ ${CHROME_DRIVER_VERSION:-latest} = \"latest\" ]; then echo $(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE); else echo $CHROME_DRIVER_VERSION; fi)   \u0026\u0026 echo \"Using chromedriver version: \"$CD_VERSION   \u0026\u0026 wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip   \u0026\u0026 rm -rf /opt/selenium/chromedriver   \u0026\u0026 unzip /tmp/chromedriver_linux64.zip -d /opt/selenium   \u0026\u0026 rm /tmp/chromedriver_linux64.zip   \u0026\u0026 mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CD_VERSION   \u0026\u0026 chmod 755 /opt/selenium/chromedriver-$CD_VERSION \u0026\u0026  ln -fs /opt/selenium/chromedriver-$CD_VERSION /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "./"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @ijmbarr/jupyterlab_spellchecker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbconvert --generate-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_nbconvert_config.py",
            "/root/.jupyter/jupyter_nbconvert_config.py"
          ]
        },
        {
          "CmdLine": [
            "pip install jupytext nb_black"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter lab build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --user https://github.com/rogerbinns/apsw/releases/download/3.28.0-r1/apsw-3.28.0-r1.zip --global-option=fetch --global-option=--version --global-option=3.28.0 --global-option=--all --global-option=build --global-option=--enable-all-extensions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GDAL_DATA",
              "Value": "/usr/local/lib/python3.6/site-packages/fiona/gdal_data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROJ_DATA",
              "Value": "/usr/local/lib/python3.6/site-packages/fiona/proj_data"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}