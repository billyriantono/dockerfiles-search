MetaArgs: null
Stages:
- BaseName: kippchicago/idea2-cron
  Commands:
  - Maintainer: Chris Haid <chaid@kippchicago.org>
    Name: maintainer
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends  \t\tca-certificates
      \ \t\tlibexpat1  \t\tlibffi6  \t\tlibgdbm3  \t\tlibreadline7  \t\tlibsqlite3-0
      \ \t\tlibssl1.0.0  \t\tnetbase  \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.5
    Name: env
  - CmdLine:
    - "set -ex  \t&& buildDeps=\"  \t\tdpkg-dev  \t\tgcc  \t\tlibbz2-dev  \t\tlibc6-dev
      \ \t\tlibexpat1-dev  \t\tlibffi-dev  \t\tlibgdbm-dev  \t\tliblzma-dev  \t\tlibncursesw5-dev
      \ \t\tlibreadline-dev  \t\tlibsqlite3-dev  \t\tlibssl-dev  \t\tmake  \t\ttcl-dev
      \ \t\ttk-dev  \t\twget  \t\txz-utils  \t\tzlib1g-dev  \t\t$(command -v gpg >
      /dev/null || echo 'gnupg dirmngr')  \t\"  \t&& apt-get update && apt-get install
      -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*  \t \t&&
      wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \ \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \ \t&& mkdir -p /usr/src/python  \t&& tar -xJC /usr/src/python --strip-components=1
      -f python.tar.xz  \t&& rm python.tar.xz  \t \t&& cd /usr/src/python  \t&& gnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"  \t&& ./configure  \t\t--build=\"$gnuArch\"  \t\t--enable-loadable-sqlite-extensions
      \ \t\t--enable-shared  \t\t--with-system-expat  \t\t--with-system-ffi  \t\t--without-ensurepip
      \ \t&& make -j \"$(nproc)\"  \t&& make install  \t&& ldconfig  \t \t&& apt-get
      purge -y --auto-remove $buildDeps  \t \t&& find /usr/local -depth  \t\t\\(  \t\t\t\\(
      -type d -a \\( -name test -o -name tests \\) \\)  \t\t\t-o  \t\t\t\\( -type
      f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\)  \t\t\\) -exec rm -rf '{}' +
      \ \t&& rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin  \t&& ln -s idle3 idle  \t&& ln -s pydoc3 pydoc  \t&& ln
      -s python3 python  \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 10.0.1
    Name: env
  - CmdLine:
    - "set -ex;  \t \tapt-get update;  \tapt-get install -y --no-install-recommends
      wget;  \trm -rf /var/lib/apt/lists/*;  \t \twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';
      \ \t \tapt-get purge -y --auto-remove wget;  \t \tpython get-pip.py  \t\t--disable-pip-version-check
      \ \t\t--no-cache-dir  \t\t\"pip==$PYTHON_PIP_VERSION\"  \t;  \tpip --version;
      \ \t \tfind /usr/local -depth  \t\t\\(  \t\t\t\\( -type d -a \\( -name test
      -o -name tests \\) \\)  \t\t\t-o  \t\t\t\\( -type f -a \\( -name '*.pyc' -o
      -name '*.pyo' \\) \\)  \t\t\\) -exec rm -rf '{}' +;  \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - Key: AIRFLOW_VERSION
    Name: arg
    Value: 1.9.0
  - Key: AIRFLOW_HOME
    Name: arg
    Value: /etc/airflow
  - Env:
    - Key: POSTGRES_HOST
      Value: postgres
    Name: env
  - Env:
    - Key: POSTGRES_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: POSTGRES_USER
      Value: airflow
    Name: env
  - Env:
    - Key: POSTGRES_PASSWORD
      Value: airflow
    Name: env
  - Env:
    - Key: POSTGRES_DB
      Value: airflow
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_MESSAGES
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - set -ex     && buildDeps='         python3-dev         libkrb5-dev         libsasl2-dev         libssl-dev         libffi-dev         build-essential         libblas-dev         liblapack-dev         libpq-dev         git     '     &&
      apt-get update -yqq     && apt-get upgrade -yqq     && apt-get install -yqq
      --no-install-recommends         $buildDeps         python3-pip         python3-requests         python3-setuptools         apt-utils         curl         rsync         netcat         locales         vim
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen     &&
      locale-gen     && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8     && useradd
      -ms /bin/bash -d ${AIRFLOW_HOME} airflow     && pip install -U pip setuptools
      wheel    && pip install Cython     && pip install pytz     && pip install pyOpenSSL     &&
      pip install ndg-httpsclient     && pip install pyasn1     && pip install apache-airflow[crypto,celery,postgres,hdfs,jdbc]==$AIRFLOW_VERSION     &&
      pip install 'sqlalchemy>=1.1.15, <1.2.0'     && pip install oauth2client gcloud
      retrying python-dateutil ConfigParser     && pip install celery[redis]==4.0.2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge --auto-remove -yqq $buildDeps     && apt-get autoremove -yqq --purge     &&
      apt-get clean     && rm -rf         /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /usr/share/man         /usr/share/doc         /usr/share/doc-base
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/airflow.cfg
    - ${AIRFLOW_HOME}/airflow.cfg
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./jobs
    - /jobs
  - CmdLine:
    - mv /jobs/silo/powerschool/datarobot_helpers /usr/local/lib/python3.6/site-packages/datarobot_helpers
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/log/airflow
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/airflow/dags
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dags
    - /etc/airflow/dags
  - CmdLine:
    - 'chown -R airflow: ${AIRFLOW_HOME}'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'chown -R airflow: /etc/supervisor/'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'chown -R airflow: /var/log/'
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R a+rw /jobs
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''airflow ALL=(ALL) NOPASSWD: ALL'' > /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: user
    User: airflow
  - Name: workdir
    Path: ${AIRFLOW_HOME}
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: kippchicago/idea2-cron
  Name: ""
  Platform: ""
  SourceCode: FROM kippchicago/idea2-cron
