{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "dpkg-divert --local --rename --add /sbin/initctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /bin/true /sbin/initctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y software-properties-common \u0026\u0026 \tnginx=stable \u0026\u0026 \tadd-apt-repository ppa:nginx/$nginx \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get upgrade -y \u0026\u0026 \tBUILD_PACKAGES=\"wget vim supervisor nginx php7.0-fpm git php7.0-mysql php7.0-curl php7.0-gd php7.0-intl php7.0-mcrypt php7.0-sqlite php7.0-tidy php7.0-xmlrpc php7.0-xsl php7.0-pgsql php7.0-ldap pwgen unzip php7.0-zip curl php-mbstring php-mongodb cron\" \u0026\u0026 \tapt-get -y install $BUILD_PACKAGES \u0026\u0026 \tcurl -sS https://getcomposer.org/installer -o composer-setup.php \u0026\u0026 \tphp composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026 \tcomposer global require hirak/prestissimo \u0026\u0026 \tapt-get remove --purge -y software-properties-common \u0026\u0026 \tapt-get autoremove -y \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoclean \u0026\u0026 \techo -n \u003e /var/lib/apt/extended_states \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \trm -rf /usr/share/man/?? \u0026\u0026 \trm -rf /usr/share/man/??_*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/max_input_time\\s*=\\s*60/max_input_time = 300/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/max_execution_time\\s*=\\s*30/max_execution_time = 300/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/memory_limit\\s*=\\s*128M/memory_limit = 256M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.0/fpm/php-fpm.conf \u0026\u0026 \tsed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_children = 5/pm.max_children = 30/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.start_servers = 2/pm.start_servers = 14/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 10/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 18/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tsed -e 's/;clear_env = no/clear_env = no/' -i /etc/php/7.0/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026 \tfind /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpenmod mcrypt \u0026\u0026 \trm -Rf /etc/nginx/conf.d/* \u0026\u0026 \trm -Rf /etc/nginx/sites-available/default \u0026\u0026 \trm -Rf /etc/nginx/sites-enabled/default \u0026\u0026 \tmkdir -p /etc/nginx/ssl/ \u0026\u0026 \tmkdir -p /run/php/ \u0026\u0026 chown -Rf www-data.www-data /run/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx-site.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default \u0026\u0026 \tln -sf /dev/stdout /var/log/php7.0-fpm.log \u0026\u0026 \tln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}