{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "janzi/vsts-build-agents:ubuntu-16.04",
      "SourceCode": "FROM janzi/vsts-build-agents:ubuntu-16.04",
      "Platform": "",
      "From": {
        "Image": "janzi/vsts-build-agents:ubuntu-16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     curl     dnsutils     file     ftp     iproute2     iputils-ping     locales     openssh-client     rsync    shellcheck     sudo     telnet     time     unzip     wget     zip     tzdata  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "$LANG"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen $LANG  \u0026\u0026 update-locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ACCEPT_EULA",
              "Value": "Y"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     build-essential  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     ansible  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\"   | tee /etc/apt/sources.list.d/azure-cli.list  \u0026\u0026 curl -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add -  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     apt-transport-https     azure-cli  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*  \u0026\u0026 az --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh -o cmake.sh  \u0026\u0026 chmod +x cmake.sh  \u0026\u0026 ./cmake.sh --prefix=/usr/local --exclude-subdir  \u0026\u0026 rm cmake.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://cli-assets.heroku.com/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository -y ppa:openjdk-r/ppa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends openjdk-8-jdk  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends openjdk-11-jdk  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME_8_X64",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            },
            {
              "Key": "JAVA_HOME_11_X64",
              "Value": "/usr/lib/jvm/java-11-openjdk-amd64"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            },
            {
              "Key": "JAVA_TOOL_OPTIONS",
              "Value": "-Dfile.encoding=UTF8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     ant     ant-optional  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://services.gradle.org/distributions/gradle-4.6-bin.zip -o gradle-4.6.zip  \u0026\u0026 unzip -d /usr/share gradle-4.6.zip  \u0026\u0026 ln -s /usr/share/gradle-4.6/bin/gradle /usr/bin/gradle  \u0026\u0026 rm gradle-4.6.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     maven  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANT_HOME",
              "Value": "/usr/share/ant"
            },
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/share/gradle"
            },
            {
              "Key": "M2_HOME",
              "Value": "/usr/share/maven"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl  \u0026\u0026 chmod +x ./kubectl  \u0026\u0026 mv ./kubectl /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh  \u0026\u0026 chmod +x miniconda.sh  \u0026\u0026 ./miniconda.sh -b -p /usr/share/miniconda  \u0026\u0026 rm miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA",
              "Value": "/usr/share/miniconda"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF  \u0026\u0026 echo \"deb https://download.mono-project.com/repo/ubuntu stable-xenial main\" | tee /etc/apt/sources.list.d/mono-official-stable.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends apt-transport-https mono-complete  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "[ \"xenial\" = \"xenial\" ]   \u0026\u0026 curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -   \u0026\u0026 curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/msprod.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y mssql-tools unixodbc-dev   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 rm -rf /etc/apt/sources.list.d/*   || echo -n"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/mssql-tools/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y mysql-client   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "mysql",
              "Value": "/usr/bin/mysql"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash -c 'debconf-set-selections \u003c\u003c\u003c \"mysql-server mysql-server/root_password password $MYSQL_ROOT_PASSWORD\"'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'debconf-set-selections \u003c\u003c\u003c \"mysql-server mysql-server/root_password_again password $MYSQL_ROOT_PASSWORD\"'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y mysql-server   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb \u003e packages-microsoft-prod.deb  \u0026\u0026 dpkg -i packages-microsoft-prod.deb  \u0026\u0026 rm packages-microsoft-prod.deb  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     apt-transport-https     dotnet-sdk-2.2  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dotnet help"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "dotnet",
              "Value": "/usr/bin/dotnet"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_CLI_TELEMETRY_OPTOUT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF  \u0026\u0026 echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod/ xenial main\" | tee /etc/apt/sources.list.d/azure.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends azcopy  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://git.io/n-install | bash -s -- -ny -  \u0026\u0026 ~/n/bin/n lts  \u0026\u0026 npm install -g bower  \u0026\u0026 npm install -g grunt  \u0026\u0026 npm install -g gulp  \u0026\u0026 npm install -g n  \u0026\u0026 npm install -g webpack webpack-cli --save-dev  \u0026\u0026 npm install -g parcel-bundler  \u0026\u0026 npm i -g npm  \u0026\u0026 rm -rf ~/n"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "bower",
              "Value": "/usr/local/bin/bower"
            },
            {
              "Key": "grunt",
              "Value": "/usr/local/bin/grunt"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -  \u0026\u0026 curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/microsoft.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     powershell  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -P /tmp https://bitbucket.org/pypy/pypy/downloads/pypy2-v6.0.0-linux64.tar.bz2  \u0026\u0026 tar -x -C /opt -f /tmp/pypy2-v6.0.0-linux64.tar.bz2  \u0026\u0026 rm /tmp/pypy2-v6.0.0-linux64.tar.bz2  \u0026\u0026 mv /opt/pypy2-v6.0.0-linux64 /opt/pypy2  \u0026\u0026 ln -s /opt/pypy2/bin/pypy /usr/local/bin/pypy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -P /tmp https://bitbucket.org/pypy/pypy/downloads/pypy3-v6.0.0-linux64.tar.bz2  \u0026\u0026 tar -x -C /opt -f /tmp/pypy3-v6.0.0-linux64.tar.bz2  \u0026\u0026 rm /tmp/pypy3-v6.0.0-linux64.tar.bz2  \u0026\u0026 mv /opt/pypy3-v6.0.0-linux64 /opt/pypy3  \u0026\u0026 ln -s /opt/pypy3/bin/pypy3 /usr/local/bin/pypy3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     python     python-pip     python3     python3-pip  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://raw.githubusercontent.com/paulp/sbt-extras/master/sbt \u003e /usr/local/bin/sbt  \u0026\u0026 chmod 0755 /usr/local/bin/sbt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "TERRAFORM_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)  \u0026\u0026 curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip  \u0026\u0026 unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin  \u0026\u0026 rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends     xsltproc     xalan  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -  \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends yarn  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y xvfb  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AGENT_TOOLSDIRECTORY",
              "Value": "/opt/hostedtoolcache"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "azcopy --recursive --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux --destination $AGENT_TOOLSDIRECTORY"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "original_directory=$PWD  \u0026\u0026 setups=$(find $AGENT_TOOLSDIRECTORY -name setup.sh)  \u0026\u0026 for setup in $setups; do         chmod +x $setup;         cd $(dirname $setup);         ./$(basename $setup);         cd $original_directory;     done;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /etc/apt/sources.list.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}