{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:10-alpine",
      "SourceCode": "FROM node:10-alpine",
      "Platform": "",
      "From": {
        "Image": "node:10-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.16.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade     \u0026\u0026 apk add --update --no-cache curl bash git openssh ca-certificates groff less python3     \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"     \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/     \u0026\u0026 ln -snf /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn     \u0026\u0026 ln -snf /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg     \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz     \u0026\u0026 python3 -m ensurepip     \u0026\u0026 rm -r /usr/lib/python*/ensurepip     \u0026\u0026 pip3 install --upgrade pip setuptools     \u0026\u0026 if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi     \u0026\u0026 if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi     \u0026\u0026 pip3 install --upgrade pip setuptools     \u0026\u0026 pip3 --no-cache-dir install awscli --upgrade     \u0026\u0026 apk del curl     \u0026\u0026 npm cache clean --force     \u0026\u0026 yarn cache clean     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /root/.cache     \u0026\u0026 echo \"------------ DONE -------------\"     \u0026\u0026 yarn --version     \u0026\u0026 aws --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}