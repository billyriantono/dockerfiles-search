{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.12.10-alpine",
      "SourceCode": "FROM golang:1.12.10-alpine",
      "Platform": "",
      "From": {
        "Image": "golang:1.12.10-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache gcc g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/github.com/grafana/grafana"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "go.mod",
            "go.sum",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor",
            "vendor"
          ]
        },
        {
          "CmdLine": [
            "go mod verify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pkg",
            "pkg"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build.go",
            "build.go"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "package.json"
          ]
        },
        {
          "CmdLine": [
            "go run build.go build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "node:10.14.2-alpine",
      "SourceCode": "FROM node:10.14.2-alpine",
      "Platform": "",
      "From": {
        "Image": "node:10.14.2-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache curl \u0026\u0026    cd /tmp \u0026\u0026 curl -Ls https://github.com/dustinblackman/phantomized/releases/download/2.1.1/dockerized-phantomjs.tar.gz | tar xz \u0026\u0026    cp -R lib lib64 / \u0026\u0026    cp -R usr/lib/x86_64-linux-gnu /usr/lib \u0026\u0026    cp -R usr/share /usr/share \u0026\u0026    cp -R etc/fonts /etc \u0026\u0026    curl -k -Ls https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 | tar -jxf - \u0026\u0026    cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "yarn.lock",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "packages",
            "packages"
          ]
        },
        {
          "CmdLine": [
            "yarn install --pure-lockfile --no-progress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gruntfile.js",
            "tsconfig.json",
            "tslint.json",
            ".browserslistrc",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "public",
            "public"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "scripts"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "emails",
            "emails"
          ]
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "./node_modules/.bin/grunt build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Grafana team \u003chello@grafana.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "GF_UID",
          "Name": "arg",
          "Value": "\"472\""
        },
        {
          "Key": "GF_GID",
          "Name": "arg",
          "Value": "\"472\""
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            },
            {
              "Key": "GF_PATHS_CONFIG",
              "Value": "\"/etc/grafana/grafana.ini\""
            },
            {
              "Key": "GF_PATHS_DATA",
              "Value": "\"/var/lib/grafana\""
            },
            {
              "Key": "GF_PATHS_HOME",
              "Value": "\"/usr/share/grafana\""
            },
            {
              "Key": "GF_PATHS_LOGS",
              "Value": "\"/var/log/grafana\""
            },
            {
              "Key": "GF_PATHS_PLUGINS",
              "Value": "\"/var/lib/grafana/plugins\""
            },
            {
              "Key": "GF_PATHS_PROVISIONING",
              "Value": "\"/etc/grafana/provisioning\""
            },
            {
              "Key": "HTTP_PROXY",
              "Value": "cs.pr-proxy.service.sd.diod.tech:3128"
            },
            {
              "Key": "HTTPS_PROXY",
              "Value": "cs.pr-proxy.service.sd.diod.tech:3128"
            },
            {
              "Key": "NO_PROXY",
              "Value": "localhost,di-ose-master,openshift-master-cluster,node.consul,service.consul,cluster.local,.cluster.local,.default.svc,.default.svc.cluster.local,.svc,hawkular-metrics,169.254.169.254,172.30.0.1,172.24.136.209,172.24.136.107,172.24.136.30,172.24.136.214,172.24.136.219,172.24.136.64,172.24.136.21,172.24.136.71,172.24.136.69,172.24.136.34,172.24.136.181,172.24.136.33,di-ose-master-a-01,di-ose-master-a-02,di-ose-master-a-03,di-ose-node-blue-a-01,di-ose-node-blue-a-02,di-ose-node-blue-a-03,di-ose-node-blue-a-04,di-ose-node-blue-a-05,di-ose-infra-int-a-01,di-ose-infra-int-a-02,di-ose-infra-gin-a-01,di-ose-infra-gin-a-02"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$GF_PATHS_HOME"
        },
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates bash \u0026\u0026     apk add --no-cache --upgrade --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main openssl musl-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf",
            "./conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p \"$GF_PATHS_HOME/.aws\" \u0026\u0026     addgroup -S -g $GF_GID grafana \u0026\u0026     adduser -S -u $GF_UID -G grafana grafana \u0026\u0026     mkdir -p \"$GF_PATHS_PROVISIONING/datasources\"              \"$GF_PATHS_PROVISIONING/dashboards\"              \"$GF_PATHS_PROVISIONING/notifiers\"              \"$GF_PATHS_LOGS\"              \"$GF_PATHS_PLUGINS\"              \"$GF_PATHS_DATA\" \u0026\u0026     cp \"$GF_PATHS_HOME/conf/sample.ini\" \"$GF_PATHS_CONFIG\" \u0026\u0026     cp \"$GF_PATHS_HOME/conf/ldap.toml\" /etc/grafana/ldap.toml \u0026\u0026     chown -R grafana:grafana \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\" \u0026\u0026     chmod -R 777 \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/lib",
            "/lib"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/lib64",
            "/lib64"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/usr/lib/x86_64-linux-gnu",
            "/usr/lib/x86_64-linux-gnu"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/usr/share",
            "/usr/share"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/etc/fonts",
            "/etc/fonts"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/phantomjs",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-server",
            "/go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-cli",
            "./bin/"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/src/app/public",
            "./public"
          ]
        },
        {
          "Chown": "",
          "From": "1",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/src/app/tools",
            "./tools"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools/phantomjs/render.js",
            "./tools/phantomjs/render.js"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./packaging/docker/run.sh",
            "/run.sh"
          ]
        },
        {
          "Name": "user",
          "User": "grafana"
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}