MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: David Spencer <dspencer@wustl.edu>
    Name: maintainer
  - Labels:
    - Key: Image
      Value: for basic ad-hoc bioinformatic analyses
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends locales &&     echo
      "en_US.UTF-8 UTF-8" >> /etc/locale.gen &&     locale-gen en_US.UTF-8 &&     LC_ALL=en_US.UTF-8
      &&     LANG=en_US.UTF-8 &&     /usr/sbin/update-locale LANG=en_US.UTF-8 &&     TERM=xterm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y --no-install-recommends     build-essential     bzip2     curl     default-jdk     default-jre     emacs     emacs-goodies-el     g++     git     less     libcurl4-openssl-dev     libpng-dev     libssl-dev     libxml2-dev     make     ncurses-dev     nodejs     pkg-config     python     rsync     unzip     wget     zip     libbz2-dev     bash-completion     ca-certificates     file     fonts-texgyre     g++     gfortran     gsfonts     libbz2-1.0     libcurl3     libicu55     libjpeg-turbo8     libopenblas-dev     libpangocairo-1.0-0     libpcre3     libpng12-0     libtiff5     liblzma5     locales     zlib1g     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     perl     tcl8.5-dev     tk8.5-dev     texinfo     texlive-extra-utils     texlive-fonts-recommended     texlive-fonts-extra     texlive-latex-recommended     x11proto-core-dev     xauth     xfonts-base     xvfb     zlib1g-dev     bc
    Name: run
    PrependShell: true
  - Env:
    - Key: HTSLIB_INSTALL_DIR
      Value: /opt/htslib
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/samtools/htslib/releases/download/1.5/htslib-1.5.tar.bz2
      &&     tar --bzip2 -xvf htslib-1.5.tar.bz2 &&     cd /tmp/htslib-1.5 &&     ./configure  --enable-plugins
      --prefix=$HTSLIB_INSTALL_DIR &&     make &&     make install &&     cp $HTSLIB_INSTALL_DIR/lib/libhts.so*
      /usr/lib/ &&     ln -s $HTSLIB_INSTALL_DIR/bin/tabix /usr/bin/tabix
    Name: run
    PrependShell: true
  - Env:
    - Key: SAMTOOLS_INSTALL_DIR
      Value: /opt/samtools
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/samtools/samtools/releases/download/1.5/samtools-1.5.tar.bz2
      &&     tar --bzip2 -xf samtools-1.5.tar.bz2 &&     cd /tmp/samtools-1.5 &&     ./configure
      --with-htslib=$HTSLIB_INSTALL_DIR --prefix=$SAMTOOLS_INSTALL_DIR &&     make
      &&     make install &&     ln -s /opt/samtools/bin/* /usr/local/bin/ &&     cd
      / &&     rm -rf /tmp/samtools-1.5
    Name: run
    PrependShell: true
  - Env:
    - Key: BCFTOOLS_INSTALL_DIR
      Value: /opt/bcftools
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget https://github.com/samtools/bcftools/releases/download/1.5/bcftools-1.5.tar.bz2
      &&     tar --bzip2 -xf bcftools-1.5.tar.bz2 &&     cd /tmp/bcftools-1.5 &&     make
      prefix=$BCFTOOLS_INSTALL_DIR &&     make prefix=$BCFTOOLS_INSTALL_DIR install
      &&     ln -s /opt/bcftools/bin/* /usr/local/bin/ &&     cd / &&     rm -rf /tmp/bcftools-1.5
    Name: run
    PrependShell: true
  - Env:
    - Key: picard_version
      Value: 2.18.9
    Name: env
  - CmdLine:
    - apt-get update && apt-get install ant --no-install-recommends -y &&     cd /usr/
      &&     git config --global http.sslVerify false &&     git clone --recursive
      https://github.com/broadinstitute/picard.git &&     cd /usr/picard &&     git
      checkout tags/${picard_version} &&     ./gradlew shadowJar &&     cp ./build/libs/picard.jar
      . &&     echo -e '#!/bin/bash'"\n"'java -Xmx16g -jar /usr/picard/picard.jar
      $@' > /usr/local/bin/picard &&     chmod a+x /usr/local/bin/picard
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local
  - CmdLine:
    - git clone https://github.com/arq5x/bedtools2.git &&     cd /usr/local/bedtools2
      &&     git checkout v2.27.0 &&     make &&     ln -s /usr/local/bedtools2/bin/*
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: ZIP
      Value: vcftools-0.1.14.tar.gz
    Name: env
  - Env:
    - Key: URL
      Value: https://github.com/vcftools/vcftools/releases/download/v0.1.14/
    Name: env
  - Env:
    - Key: FOLDER
      Value: vcftools-0.1.14
    Name: env
  - Env:
    - Key: DST
      Value: /tmp
    Name: env
  - CmdLine:
    - wget $URL/$ZIP -O $DST/$ZIP &&     tar xvf $DST/$ZIP -C $DST &&     rm $DST/$ZIP
      &&     cd $DST/$FOLDER &&     ./configure &&     make &&     make install &&     cd
      / &&     rm -rf $DST/$FOLDER
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/ucsc &&     cd /tmp/ucsc &&     wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig
      http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bigBedToBed
      http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bigWigAverageOverBed http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bigWigToBedGraph
      http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/wigToBigWig &&     chmod
      ugo+x * &&     mv * /usr/bin/
    Name: run
    PrependShell: true
  - Key: R_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: BUILD_DATE
      Value: "2017-06-20"
    Name: env
  - Env:
    - Key: R_VERSION
      Value: ${R_VERSION:-3.6.0}
    Name: env
  - CmdLine:
    - cd /tmp/ &&     curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz
      &&     tar -xf R-${R_VERSION}.tar.gz &&     cd R-${R_VERSION} &&     R_PAPERSIZE=letter
      &&     R_BATCHSAVE="--no-save --no-restore" &&     R_BROWSER=xdg-open &&     PAGER=/usr/bin/pager
      &&     PERL=/usr/bin/perl &&     R_UNZIPCMD=/usr/bin/unzip &&     R_ZIPCMD=/usr/bin/zip
      &&     R_PRINTCMD=/usr/bin/lpr &&     LIBnn=lib &&     AWK=/usr/bin/awk &&     CFLAGS="-g
      -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2
      -g" &&     CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security
      -Wdate-time -D_FORTIFY_SOURCE=2 -g" &&     ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas="-lopenblas"                --disable-nls                --without-recommended-packages
      &&     make &&     make install &&     echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'),
      download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site &&     mkdir
      -p /usr/local/lib/R/site-library &&     chown root:staff /usr/local/lib/R/site-library
      &&     chmod g+wx /usr/local/lib/R/site-library &&     echo "R_LIBS_USER='/usr/local/lib/R/site-library'"
      >> /usr/local/lib/R/etc/Renviron &&     echo "R_LIBS=\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}"
      >> /usr/local/lib/R/etc/Renviron &&     Rscript -e "install.packages(c('littler',
      'docopt'))" &&     ln -s /usr/local/lib/R/site-library/littler/examples/install2.r
      /usr/local/bin/install2.r &&     ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r &&     ln -s /usr/local/lib/R/site-library/littler/bin/r
      /usr/local/bin/r
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - rpackages.R
    - /tmp/
  - CmdLine:
    - R -f /tmp/rpackages.R
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / &&    rm -rf /tmp/* &&    apt-get autoremove -y &&    apt-get autoclean
      -y &&    rm -rf /var/lib/apt/lists/* &&    apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     curl -s https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh
      -o miniconda.sh &&     /bin/bash miniconda.sh -f -b -p $CONDA_DIR &&     rm
      miniconda.sh &&     $CONDA_DIR/bin/conda config --system --add channels conda-forge
      &&     $CONDA_DIR/bin/conda config --system --set auto_update_conda false &&     conda
      clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --yes 'pip' &&     conda clean -tipsy &&     pip install numpy
      &&     pip install cruzdb &&     pip install cython &&     pip install pyensembl
      &&     pip install pyfaidx &&     pip install pybedtools &&     pip install
      cyvcf2 &&     pip install intervaltree_bio &&     pip install pandas &&     pip
      install scipy &&     pip install seaborn &&     pip install scikit-learn &&     pip
      install pysam==0.12.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create --quiet --yes -p $CONDA_DIR/envs/python2 python=2.7 'pip' &&     conda
      clean -tipsy &&     /bin/bash -c "source activate python2 &&     pip install
      numpy &&     pip install cruzdb &&     pip install cython &&     pip install
      pyensembl &&     pip install pyfaidx &&     pip install pybedtools &&     pip
      install cyvcf2 &&     pip install intervaltree_bio &&     pip install pandas
      &&     pip install scipy &&     pip install seaborn &&     pip install scikit-learn
      &&     source deactivate"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --single-branch --branch cram-pileup-fix https://github.com/jmarshall/pysam.git
      &&     cd pysam &&     /opt/conda/bin/python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libnss-sss && apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "America/Chicago" > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends gawk openssh-client
      grep evince && apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - cpan install Statistics::Basic && cpan install JSON && cpan install List::Util
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install hic2cool && pip install cooler
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /bin:/usr/bin:/usr/local/bin:/opt/conda/bin/:${PATH}
    Name: env
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
