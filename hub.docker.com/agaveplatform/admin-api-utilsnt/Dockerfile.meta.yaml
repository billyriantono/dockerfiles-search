MetaArgs: null
Stages:
- BaseName: node:latest
  Commands:
  - CmdLine:
    - "dpkg --add-architecture i386 &&     apt-get update -y &&     apt-get install
      -y libncurses5:i386 libc6:i386 libstdc++6:i386 lib32gcc1 lib32ncurses5 lib32z1
      zlib1g:i386 &&     apt-get install -y git wget zip && \tapt-get install sudo
      &&\tapt-get install -y --no-install-recommends apt-utils &&\tsudo apt-get update
      &&\tsudo apt-get install -y wine &&\tsudo apt-get install -y wine-development"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \tbzip2 \tunzip
      \txz-utils \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u121
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u121-b13-1~bpo8+1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: 20161107~bpo8+1
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y \t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t&& rm -rf /var/lib/apt/lists/*
      \t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_VERSION
      Value: "3.5"
    Name: env
  - CmdLine:
    - cd /opt &&     wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
      &&     unzip gradle*.zip &&     ls -d */ | sed 's/\/*$//g' | xargs -I{} mv {}
      gradle &&     rm gradle*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_SDK_URL
      Value: '"https://dl.google.com/android/repository/tools_r25.2.3-linux.zip"'
    - Key: ANDROID_BUILD_TOOLS_VERSION
      Value: 25.0.2
    - Key: ANDROID_APIS
      Value: '"android-10,android-15,android-16,android-17,android-18,android-19,android-20,android-21,android-22,android-23,android-24,android-25"'
    - Key: ANT_HOME
      Value: '"/usr/share/ant"'
    - Key: MAVEN_HOME
      Value: '"/usr/share/maven"'
    - Key: GRADLE_HOME
      Value: '"/opt/gradle"'
    - Key: ANDROID_HOME
      Value: '"/opt/android"'
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/$ANDROID_BUILD_TOOLS_VERSION:$ANT_HOME/bin:$MAVEN_HOME/bin:$GRADLE_HOME/bin
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - "dpkg --add-architecture i386 &&     apt-get -qq update &&     apt-get -qq install
      -y wget curl maven ant &&     mkdir android && cd android &&     wget -O tools.zip
      ${ANDROID_SDK_URL} &&     unzip tools.zip && rm tools.zip &&     echo y | android
      update sdk -a -u -t platform-tools,${ANDROID_APIS},build-tools-${ANDROID_BUILD_TOOLS_VERSION}
      &&     chmod a+x -R $ANDROID_HOME && \tchown -R root:root $ANDROID_HOME"
    Name: run
    PrependShell: true
  - CmdLine:
    - "sudo apt-get update -y && \tapt-get install -y apt-transport-https &&    curl
      -L https://packagecloud.io/github/git-lfs/gpgkey | apt-key add - &&    curl
      -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | sudo bash &&\tapt-get install -y debian-archive-keyring git-lfs libxml2-utils
      &&\tapt-get install -y lftp &&\tsudo npm install cordova -g &&\tnpm install
      electron-packager -g &&\tnpm install uglify-js -g &&\tnpm install uglifyify
      -g &&\tsudo apt-get update -y &&    apt-get -qq install git-ftp &&\tnpm install
      -g browserify &&\tnpm install -g babel-cli &&\tsudo apt-get update -y &&\tsudo
      apt-get install cpio &&\tsudo apt-get install xsltproc &&\tapt-get purge -y
      software-properties-common &&\trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  From:
    Image: node:latest
  Name: ""
  Platform: ""
  SourceCode: FROM node:latest
