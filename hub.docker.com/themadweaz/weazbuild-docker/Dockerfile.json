{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y apt-transport-https ca-certificates software-properties-common sudo xdg-utils xvfb libxi6 libgconf-2-4 \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_RELEASE_VERSION",
              "Value": "1.15.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends curl \u0026\u0026     curl -fsSL https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_RELEASE_VERSION}/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose \u0026\u0026     apt-get remove -y curl \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \u0026\u0026     add-apt-repository -y ppa:webupd8team/java \u0026\u0026     apt-get update -qqy \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     update-alternatives --config java \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_VERSION",
          "Name": "arg",
          "Value": "\"google-chrome-stable\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends curl \u0026\u0026     curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026     apt-get update -qqy \u0026\u0026     apt-get -qqy install ${CHROME_VERSION:-google-chrome-stable} \u0026\u0026     apt-get remove -y curl \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xvfb",
            "/etc/init.d/xvfb"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/init.d/xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -ms /bin/bash cirunner -G sudo \u0026\u0026     echo \"cirunner ALL=(ALL:ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/cirunner \u0026\u0026     mkdir /builds \u0026\u0026 chown cirunner:cirunner /builds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "cirunner"
        },
        {
          "Name": "workdir",
          "Path": "/home/cirunner"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${JAVA_HOME}/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}