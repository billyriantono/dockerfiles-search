{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.5-slim",
      "SourceCode": "FROM python:3.5-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.5-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   build-essential   wget   sudo   apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/lib/apt \u0026\u0026   sudo mv lists lists.old \u0026\u0026   sudo mkdir -p lists/partial \u0026\u0026   sudo apt-get update \u0026\u0026   cd ~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get --assume-yes install vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get --assume-yes install nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends apt-utils autoconf bzip2 ca-certificates clang cmake curl git libblas-dev libfreetype6 libfreetype6-dev libgl1-mesa-dev libglu1-mesa libglu1-mesa-dev freeglut3-dev mesa-common-dev libosmesa6-dev libpng12-dev libtool libxcursor-dev libxi6 libxinerama-dev libxrandr-dev libxrender1 libzmq3-dev module-init-tools openssh-server pkg-config python3 python3-dev python3-pip rsync screen software-properties-common unzip x11-xserver-utils         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo pip3 --no-cache-dir install --upgrade      pip      ipykernel      jupyter      matplotlib      numpy      scipy      sklearn      Pillow      h5py      keras      virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m pip install ipykernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m ipykernel install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/bin/python3 /usr/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --recursive -b DockerAccess https://github.com/jiangzhongshi/libigl.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "libigl/python"
        },
        {
          "CmdLine": [
            "mkdir build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "./build"
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "/usr/bin/clang"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "/usr/bin/clang++"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cmake ../ \u0026\u0026 make -j2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BLENDER_MAJOR",
              "Value": "2.78"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BLENDER_VERSION",
              "Value": "2.78"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BLENDER_BZ2_URL",
              "Value": "http://download.blender.org/release/Blender$BLENDER_MAJOR/blender-$BLENDER_VERSION-linux-glibc219-x86_64.tar.bz2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /usr/local/blender \t\u0026\u0026 curl -SL \"$BLENDER_BZ2_URL\" -o blender.tar.bz2 \t\u0026\u0026 tar -jxvf blender.tar.bz2 -C /usr/local/blender --strip-components=1 \t\u0026\u0026 rm blender.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6666"
          ]
        },
        {
          "Env": [
            {
              "Key": "NAME",
              "Value": "World"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}