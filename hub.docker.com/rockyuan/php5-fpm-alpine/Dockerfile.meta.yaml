MetaArgs: null
Stages:
- BaseName: php:5.6-fpm-alpine
  Commands:
  - Env:
    - Key: RABBITMQ_VERSION
      Value: v0.8.0
    Name: env
  - Env:
    - Key: PHP_AMQP_VERSION
      Value: v1.9.3
    Name: env
  - Env:
    - Key: PHP_REDIS_VERSION
      Value: 3.1.4
    Name: env
  - Env:
    - Key: PHP_MONGO_VERSION
      Value: 1.3.4
    Name: env
  - Env:
    - Key: PHP_MEMCACHED_VERSION
      Value: 2.2.0
    Name: env
  - Env:
    - Key: PHP_SWOOLE_VERSION
      Value: v2.0.11
    Name: env
  - Env:
    - Key: PHP_IMAGICK_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: PHP_XDEBUG_VERSION
      Value: XDEBUG_2_5_5
    Name: env
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf     cmake     file     g++     gcc     libc-dev     pcre-dev     make     git     pkgconf     re2c
    Name: env
  - CmdLine:
    - set -ex;         apk add --no-cache --virtual .build-deps         $PHPIZE_DEPS         freetype-dev         libjpeg-turbo-dev         libpng-dev         icu-dev         libmcrypt-dev         libmemcached-dev         zlib-dev         cyrus-sasl-dev         linux-headers         openssl-dev         libtool         tzdata     ;     apk
      add imagemagick-dev --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main
      --allow-untrusted     ;         docker-php-ext-configure gd --with-freetype-dir=/usr
      --with-png-dir=/usr --with-jpeg-dir=/usr;     docker-php-ext-configure pdo_mysql
      --with-pdo-mysql;     docker-php-ext-configure bcmath --enable-bcmath;     docker-php-ext-configure
      intl --enable-intl;         docker-php-ext-install gd pdo_mysql mysqli zip bcmath
      intl mcrypt opcache sockets iconv;         runDeps="$(         scanelf --needed
      --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions             |
      tr ',' '\n'             | sort -u             | awk 'system("[ -e /usr/local/lib/"
      $1 " ]") == 0 { next } { print "so:" $1 }'     )";     apk add --virtual .phpexts-rundeps
      $runDeps libmemcached-libs libssl1.0 vim imagemagick;         git clone --branch
      ${RABBITMQ_VERSION} https://github.com/alanxz/rabbitmq-c.git /tmp/rabbitmq;     cd
      /tmp/rabbitmq;     mkdir build;     cd build;     cmake ..;     cmake --build
      . --target install;     cp -r /usr/local/lib64/* /usr/lib/;         git clone
      --branch ${PHP_AMQP_VERSION} https://github.com/pdezwart/php-amqp.git /tmp/php-amqp;     cd
      /tmp/php-amqp;     phpize;      ./configure;      make;      make install;     make
      test;         git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis
      /tmp/phpredis;     cd /tmp/phpredis;     phpize;      ./configure;      make;      make
      install;     make test;         git clone --branch ${PHP_MONGO_VERSION} https://github.com/mongodb/mongo-php-driver
      /tmp/php-mongo;     cd /tmp/php-mongo;     git submodule sync;     git submodule
      update --init;     phpize;      ./configure;      make;      make install;     make
      test;         git clone --branch ${PHP_MEMCACHED_VERSION} https://github.com/php-memcached-dev/php-memcached.git
      /tmp/php-memcached;     docker-php-ext-configure /tmp/php-memcached;     docker-php-ext-install
      /tmp/php-memcached;         git clone --branch ${PHP_IMAGICK_VERSION} https://github.com/mkoppanen/imagick.git
      /tmp/php-imagick;     docker-php-ext-configure /tmp/php-imagick;     docker-php-ext-install
      /tmp/php-imagick;         git clone --branch ${PHP_SWOOLE_VERSION} https://github.com/swoole/swoole-src.git
      /tmp/php-swoole;     docker-php-ext-configure /tmp/php-swoole;     docker-php-ext-install
      /tmp/php-swoole;         cp /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime;     echo
      "Asia/Hong_Kong" >  /etc/timezone;         apk del .build-deps;     rm -rf /tmp/*;     mkdir
      -p /data
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add gnu-libiconv --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/
      --allow-untrusted
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so php
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/fpm/php-fpm.conf
    - /usr/local/etc/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/fpm/pool.d
    - /usr/local/etc/pool.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php.ini
    - $PHP_INI_DIR
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/amqp.ini
    - $PHP_INI_DIR/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/redis.ini
    - $PHP_INI_DIR/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/mongodb.ini
    - $PHP_INI_DIR/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/opcache.ini
    - $PHP_INI_DIR/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/env_prompt.sh
    - /etc/profile.d/env_prompt.sh
  - Env:
    - Key: ENV
      Value: '"/etc/profile"'
    Name: env
  - CmdLine:
    - curl --tlsv1 -sS https://getcomposer.org/installer | php -- --filename=composer
      --install-dir=/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.composer/vendor/bin:$PATH
    Name: env
  - Name: workdir
    Path: /data
  From:
    Image: php:5.6-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:5.6-fpm-alpine
