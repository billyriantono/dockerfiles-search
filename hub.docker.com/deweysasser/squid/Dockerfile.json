{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jwilder/dockerize",
      "SourceCode": "FROM jwilder/dockerize",
      "Platform": "",
      "From": {
        "Image": "jwilder/dockerize"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache squid ca-certificates openssl \u0026\u0026     mkdir -p /var/spool/squid /var/cache/squid /var/log/squid /etc/squid/ssl; touch /etc/squid/whitelist.txt \u0026\u0026     openssl req -newkey rsa:2048 -nodes -keyout /etc/squid/ssl/key.pem     -x509 -days 3650     -subj \"/C=US/ST=Massachusetts/L=Boston/O=Squid Proxy/OU=/CN=squid\"     -out /etc/squid/ssl/certificate.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run-squid.sh",
            "/usr/bin/run-squid"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "squid.conf",
            "/etc/squid/squid.conf.templ"
          ]
        },
        {
          "Env": [
            {
              "Key": "ALLOW_ALL_TRAFFIC",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dockerize -template  /etc/squid/squid.conf.templ:/etc/squid/squid.conf -stdout /var/log/squid/access.log -poll /usr/bin/run-squid"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}