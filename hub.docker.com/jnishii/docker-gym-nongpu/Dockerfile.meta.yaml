MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Name: workdir
    Path: /home
  - CmdLine:
    - mkdir src
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - VERSION
    - .
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update      && apt-get install -y --no-install-recommends         apt-utils         build-essential         sudo         less         jed         g++          git          curl          cmake         zlib1g-dev         libjpeg-dev         xvfb         libav-tools         xorg-dev         libboost-all-dev         libsdl2-dev         dbus         swig         python3          python3-dev          python3-future          python3-pip          python3-setuptools          python3-wheel          python3-tk         python3-opengl         libopenblas-base          libatlas-dev       &&
      apt-get upgrade -y      && apt-get clean      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/python python /usr/bin/python3.5 1
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --config python
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements_py.txt
    - /tmp/
  - CmdLine:
    - python3 -m pip install -r /tmp/requirements_py.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements_gym.txt
    - /tmp/
  - CmdLine:
    - python3 -m pip install -r /tmp/requirements_gym.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: GYMDIR
      Value: /usr/local/lib/python3.5/dist-packages/gym/envs/
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gridworld-gym/env_register.txt
    - /tmp/
  - CmdLine:
    - cat /tmp/env_register.txt >> ${GYMDIR}/__init__.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gridworld-gym/envs/mdp_gridworld.py
    - ${GYMDIR}/toy_text/
  - CmdLine:
    - echo "from gym.envs.toy_text.mdp_gridworld import MDPGridworldEnv" >> ${GYMDIR}/toy_text/__init__.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install dfply
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgl1-mesa-dri libgl1-mesa-glx --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - dbus-uuidgen > /etc/machine-id
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: jovyan
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - CmdLine:
    - 'export uid=1000 gid=1000 &&    echo "${USER}:x:${uid}:${gid}:Developer,,,:${HOME}:/bin/bash"
      >> /etc/passwd &&    echo "${USER}:x:${uid}:" >> /etc/group &&    echo "${USER}
      ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers &&    install -d -m 0755 -o ${uid}
      -g ${gid} ${HOME}'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter.sh
    - /usr/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - aliases.sh
    - /etc/profile.d
  - CmdLine:
    - sudo python3 -m pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo python3 -m pip install nbgrader
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo python3 -m pip install nose
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo jupyter nbextension install --sys-prefix --py nbgrader --overwrite
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo jupyter nbextension disable --sys-prefix --py nbgrader
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo jupyter serverextension disable --sys-prefix --py nbgrader
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo python3 -m pip install plotchecker
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install jupyter-emacskeys
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install jupyter_contrib_nbextensions
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter contrib nbextension install --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install RISE
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter-nbextension install rise --py --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable highlighter/highlighter --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable toggle_all_line_numbers/main --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable hide_header/main --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable toc2/main --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension install https://github.com/drillan/jupyter-black/archive/master.zip
      --sys-prefix
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: teletype
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :0.0
    Name: env
  - Name: volume
    Volumes:
    - /tmp/.X11-unix
  - Name: volume
    Volumes:
    - ${HOME}
  - Name: user
    User: ${USER}
  - CmdLine:
    - cd ${HOME}     && xvfb-run -s "-screen 0 1024x768x24"     /usr/local/bin/jupyter
      notebook     --port=8888 --ip=0.0.0.0 --allow-root
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
