MetaArgs: null
Stages:
- BaseName: python:3.6-alpine3.7
  Commands:
  - Env:
    - Key: LANG
      Value: C     LANG en_US.UTF-8     LC_TYPE en_US.UTF-8
    Name: env
  - CmdLine:
    - apk add --update --no-cache     git     gettext     ca-certificates     nginx     postgresql-dev     libffi-dev     gcc     musl-dev     libxml2-dev     libxslt-dev     jpeg-dev     curl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-back
    - /usr/src/taiga-back
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-front-dist/
    - /usr/src/taiga-front-dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/locale.gen
    - /etc/locale.gen
  - CmdLine:
    - mkdir /run/nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/user www-data/user root/g" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/worker_connections 768/worker_connections 1024/g" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/ssl_session_cache shared:SSL:2m;/ssl_session_cache shared:SSL:10m;/g"
      /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm  /etc/nginx/conf.d/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/include \/etc\/nginx\/conf\.d\/\*\.conf;/a         include /etc/nginx/sites-enabled/*;'         /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/sites-available/*
    - /etc/nginx/sites-available/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/snippets/*
    - /etc/nginx/snippets/
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /taiga
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/local.py
    - /taiga/local.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/docker.py
    - /taiga/docker.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/conf.json
    - /taiga/conf.json
  - CmdLine:
    - ln -s /taiga/local.py /usr/src/taiga-back/settings/local.py
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /taiga/docker.py /usr/src/taiga-back/settings/docker.py
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/conf.json
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/taiga-front-dist/dist/js/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/js/conf.json
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/taiga-back
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: TAIGA_SSL
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_SSL_BY_REVERSE_PROXY
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_ENABLE_EMAIL
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_HOSTNAME
      Value: localhost
    Name: env
  - Env:
    - Key: TAIGA_SECRET_KEY
      Value: '"!!!REPLACE-ME-j1598u1J^U*(y251u98u51u5981urf98u2o5uvoiiuzhlit3)!!!"'
    Name: env
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - /usr/src/taiga-back/media
  - Health:
      Test:
      - CMD-SHELL
      - curl --fail http://localhost/conf.json || exit 1
    Name: healthcheck
  - Health:
      Test:
      - CMD-SHELL
      - curl --fail http://localhost/api/v1/ || exit 1
    Name: healthcheck
  - Health:
      Test:
      - CMD-SHELL
      - curl --fail http://localhost || exit 1
    Name: healthcheck
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - /scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gunicorn
    - -w 3
    - -t 60
    - --pythonpath=.
    - -b 127.0.0.1:8000
    - taiga.wsgi
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-alpine3.7
