{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bytesized/base",
      "SourceCode": "FROM bytesized/base",
      "Platform": "",
      "From": {
        "Image": "bytesized/base"
      },
      "Commands": [
        {
          "Maintainer": "maran@bytesized-hosting.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "v0.14.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RELEASE",
              "Value": "syncthing-linux-amd64-$VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update ca-certificates wget \u0026\u0026 wget --no-check-certificate -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \u0026\u0026  wget --no-check-certificate https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add glibc-2.23-r3.apk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate -O /$RELEASE.tar.gz https://github.com/syncthing/syncthing/releases/download/$VERSION/$RELEASE.tar.gz \u0026\u0026       tar zxf /$RELEASE.tar.gz -C /usr/local \u0026\u0026       ln -s /usr/local/$RELEASE/syncthing /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R bytesized /usr/local/$RELEASE/ \u0026\u0026 chown -R bytesized /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /$RELEASE.tar.gz \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "static/",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/data",
            "/media"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "21025/udp",
            "22000",
            "8384"
          ]
        }
      ]
    }
  ]
}