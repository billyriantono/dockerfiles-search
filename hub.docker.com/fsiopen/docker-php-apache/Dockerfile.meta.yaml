MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: docker-php-apache.image
      Value: runtime
    Name: label
  - Env:
    - Key: LANG
      Value: pl_PL.utf8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: pl_PL.UTF-8
    Name: env
  - Env:
    - Key: PROJECTROOT
      Value: /var/www
    Name: env
  - Env:
    - Key: APPROOT
      Value: '"$PROJECTROOT/application"'
    Name: env
  - Env:
    - Key: DOCROOT
      Value: '"$APPROOT/web"'
    Name: env
  - Env:
    - Key: PHP_PACKAGES
      Value: php7     php7-common     php7-apache2     php7-json     php7-intl     php7-mbstring     php7-iconv     php7-opcache     php7-xml     php7-simplexml     php7-phar     php7-openssl     php7-sockets     php7-pdo     php7-pdo_sqlite     php7-pdo_mysql     php7-mysqlnd     php7-session     php7-soap     php7-curl     php7-gd     php7-zip     php7-ctype     php7-dom     php7-bcmath     php7-calendar     php7-xmlreader     php7-xmlwriter     php7-tokenizer     php7-exif     php7-fileinfo     php7-pecl-xdebug     argon2-libs     openssl     mailcap     curl     git
    Name: env
  - Env:
    - Key: HTTP_PACKAGES
      Value: '"apache2 apache2-ssl"'
    Name: env
  - Env:
    - Key: DB_PACKAGES
      Value: '"mysql-client"'
    Name: env
  - Env:
    - Key: NODE_PACKAGES
      Value: '"nodejs yarn"'
    Name: env
  - Env:
    - Key: UTILS
      Value: '"shadow mc bash"'
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: /etc/php7
    Name: env
  - Env:
    - Key: HOST_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOST_GID
      Value: "1000"
    Name: env
  - CmdLine:
    - set -xe && apk add --no-cache $UTILS &&     addgroup -g $HOST_GID -S www-data
      &&     adduser -u $HOST_UID -D -S -G www-data www-data -s /bin/bash &&     apk
      add --no-cache $PHP_PACKAGES &&     apk add --no-cache $DB_PACKAGES &&     apk
      add --no-cache $NODE_PACKAGES &&     mkdir -p "$DOCROOT"  &&     mkdir -p /run/apache2
      &&     chown -R www-data:www-data "$PROJECTROOT" &&     apk add --no-cache $HTTP_PACKAGES
      &&     ln -sf /dev/stdout /var/log/apache2/access.log &&     ln -sf /dev/stderr
      /var/log/apache2/error.log &&     sed -ri         -e 's!^#\s*ServerName.*!ServerName
      localhost!g'         -e 's!^User.*!User www-data!g'         -e 's!^Group.*!Group
      www-data!g'         -e 's!^#\s*(LoadModule rewrite_module modules/mod_rewrite.so)!\1!g'         /etc/apache2/httpd.conf;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./application-vhost.conf
    - /etc/apache2/conf.d/application-vhost.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php_custom.ini
    - '"$PHP_INI_DIR/conf.d/01_php_custom.ini"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php_xdebug.ini
    - '"$PHP_INI_DIR/conf.d/01_php_xdebug.ini"'
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      composer-setup.php --install-dir=/usr/local/bin &&     php -r "unlink('composer-setup.php');"
      &&     chown www-data:www-data /usr/local/bin/composer.phar
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - $APPROOT
  - Name: workdir
    Path: $APPROOT
  - CmdLine:
    - mkdir -p $DOCROOT &&     usermod -u $HOST_UID www-data &&     groupmod -g $HOST_GID
      www-data &&     rm -f /run/apache2/httpd.pid &&     httpd -DFOREGROUND
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
