MetaArgs: null
Stages:
- BaseName: node:lts
  Commands:
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle
    - Key: GRADLE_VERSION
      Value: 5.6.2
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8.0-openjdk-amd64
    - Key: SDK_URL
      Value: '"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"'
    - Key: ANDROID_HOME
      Value: '"/usr/local/android-sdk"'
    - Key: ANDROID_VERSION
      Value: "29"
    - Key: ANDROID_BUILD_TOOLS_VERSION
      Value: 29.0.2
    Name: env
  - CmdLine:
    - apt-get update -y &&     apt-get full-upgrade -y &&     apt-get -y install locales
      locales-all vim &&     apt-get install -y openjdk-8-jdk openjdk-8-jre &&     apt-get
      install -y python3 python3-pip &&     echo "set locale settings" &&     locale-gen
      de_DE.UTF-8 &&     update-locale LANG=de_DE.UTF-8 LANGUAGE LC_ALL &&     pip3
      install inquirer colorama &&     rm -rf /lib/apt/listspt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /docker_tools:${GRADLE_HOME}/bin:${JAVA_HOME}/bin:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools:${ANDROID_HOME}/emulator:${PATH}
    - Key: HOME
      Value: /home/node
    - Key: LANG
      Value: de_DE.UTF8
    - Key: LANGUAGE
      Value: de
    - Key: LC_ALL
      Value: de_DE.UTF8
    Name: env
  - CmdLine:
    - npm install -g ionic cordova &&     chown -R node:node /home/node/.config &&     chown
      -R node:node /home/node/.npm
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${GRADLE_HOME} &&     curl -L https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
      > /tmp/gradle.zip &&     unzip /tmp/gradle.zip -d ${GRADLE_HOME} &&     mv ${GRADLE_HOME}/gradle-${GRADLE_VERSION}/*
      ${GRADLE_HOME} &&     rm -r ${GRADLE_HOME}/gradle-${GRADLE_VERSION}/ &&     rm
      /tmp/gradle.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ${ANDROID_HOME} /root/.android     && touch /root/.android/repositories.cfg     &&
      cd ${ANDROID_HOME}     && curl -o sdk.zip $SDK_URL     && unzip sdk.zip     &&
      rm sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - ${ANDROID_HOME}/tools/bin/sdkmanager --update &&     yes | ${ANDROID_HOME}/tools/bin/sdkmanager
      --licenses &&     ${ANDROID_HOME}/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"     "platforms;android-${ANDROID_VERSION}"     "platform-tools"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./docker_tools/runner.py
    - /docker_tools/
  - Name: expose
    Ports:
    - "35729"
    - "8100"
  - CmdLine:
    - /docker_tools/runner.py
    Name: cmd
    PrependShell: false
  From:
    Image: node:lts
  Name: ""
  Platform: ""
  SourceCode: FROM node:lts
