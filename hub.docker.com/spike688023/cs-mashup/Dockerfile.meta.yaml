MetaArgs: null
Stages:
- BaseName: cs50/cli
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - echo "FLASK_APP='application.py'" >> /etc/environment
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8081"
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y         libcurl4-openssl-dev
      `# required by passenger-config`         libpcre3-dev `# required by passenger-config`         php7.1-fpm         php7.1-memcached         php7.1-mysql         php7.1-xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install Django Flask Flask-JSGlue Flask-Session raven[flask] SQLAlchemy
      virtualenv feedparser
    Name: run
    PrependShell: true
  - Env:
    - Key: API_KEY
      Value: AIzaSyDJDJnf9U5ptessbyJB2RcfigzB8XWwKnE
    Name: env
  - CmdLine:
    - gem install passenger -v 5.1.11
    Name: run
    PrependShell: true
  - CmdLine:
    - passenger-config install-standalone-runtime &&     passenger-config build-native-support
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./bin/*
    - /usr/local/bin/
  - CmdLine:
    - chmod a+rx /usr/local/bin/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/*
    - /usr/local/etc/
  - CmdLine:
    - chmod a+r /usr/local/etc/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "This is CS50 Server." > /etc/motd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./examples/flask/
    - /var/www/
  - CmdLine:
    - chown -R www-data:www-data /var/www
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - passenger
    - start
    - -p
    - "8081"
    - --app-type
    - wsgi
    - --startup-file
    - passenger_wsgi.py
    Name: cmd
    PrependShell: false
  From:
    Image: cs50/cli
  Name: ""
  Platform: ""
  SourceCode: FROM cs50/cli
