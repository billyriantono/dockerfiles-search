MetaArgs: null
Stages:
- BaseName: debian:9-slim
  Commands:
  - Maintainer: Renan Gomes <email@renangomes.com>
    Name: maintainer
  - CmdLine:
    - apt-get update   && apt-get install -y gnupg1 apt-transport-https ca-certificates
      wget git zip unzip  wkhtmltopdf   && wget -q https://packages.sury.org/php/apt.gpg
      -O- | apt-key add -   && echo "deb https://packages.sury.org/php/ stretch main"
      > /etc/apt/sources.list.d/php.list   && apt-get update   && apt-get install
      -y wget   && wget -O /etc/ssl/certs/curl-ca-bundle.crt https://curl.haxx.se/ca/cacert.pem   &&
      chmod 777 /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/curl-ca-bundle.crt   &&
      chown www-data:www-data /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/curl-ca-bundle.crt   &&
      apt-get install -y -qq nano curl tesseract-ocr tesseract-ocr-eng nginx php7.3
      php7.3-curl php7.3-soap php7.3-json php7.3-mbstring php7.3-mysql php7.3-simplexml
      php7.3-odbc php7.3-fpm php7.3-mongodb php7.3-gd   && phpenmod curl json mbstring
      mysql odbc mongodb gd simplexml soap   && openssl dhparam -out /etc/ssl/certs/ssl-cert-snakeoil.pem
      2048 && chmod -R 600 /etc/ssl/certs/*   && sed -i "s|;*clear_env\s*=\s*.*|clear_env
      = no|g" /etc/php/7.3/fpm/pool.d/www.conf   && rm -Rf /var/www/* && mkdir /run/php/   &&
      curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer   && apt-get clean -qq   && apt-get autoremove -y   && rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default
    - /etc/nginx/sites-enabled/
  - CmdLine:
    - mkdir /root/phantomjs   && curl -kLS https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
      -o /root/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2   && tar xvjf /root/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
      -C /root/phantomjs/   && chmod a+x /root/phantomjs/phantomjs-2.1.1-linux-x86_64/bin/phantomjs   &&
      ln -s /root/phantomjs/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_USER_ID
      Value: "501"
    Name: env
  - Env:
    - Key: DOCKER_USER_GID
      Value: "20"
    Name: env
  - Env:
    - Key: DOCKER_MACHINE_ID
      Value: "1000"
    Name: env
  - Env:
    - Key: DOCKER_MACHINE_GID
      Value: "50"
    Name: env
  - CmdLine:
    - usermod -u ${DOCKER_MACHINE_ID} www-data &&     usermod -G staff www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupmod -g $(($DOCKER_MACHINE_GID + 10000)) $(getent group $DOCKER_MACHINE_GID
      | cut -d: -f1)'
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod -g ${DOCKER_MACHINE_GID} staff
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "#\!/bin/sh\n cd /var/www; composer --no-plugins --no-scripts install;
      chown www-data:www-data /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/curl-ca-bundle.crt;
      chmod 777 /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/curl-ca-bundle.crt;
      php-fpm7.3; nginx -g 'daemon off;'" > /run/startup.sh && chmod a+x /run/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/curl-ca-bundle.crt
    Name: run
    PrependShell: true
  - CmdLine:
    - chown www-data:www-data /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/curl-ca-bundle.crt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Name: volume
    Volumes:
    - /var/www
    - /var/log/nginx
    - /etc/nginx/conf.d/
  - Name: stopsignal
    Signal: SIGTERM
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /bin/sh
    - -c
    - /run/startup.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /bin/sh
    - -c
    - /run/startup.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:9-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:9-slim
