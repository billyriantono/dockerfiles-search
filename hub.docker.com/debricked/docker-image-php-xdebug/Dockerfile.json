{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4-fpm",
      "SourceCode": "FROM php:7.4-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.4-fpm"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PUPPETEER_SKIP_CHROMIUM_DOWNLOAD",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install gnupg -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install software-properties-common dirmngr -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     curl -sS https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" | tee /etc/apt/sources.list.d/google-chrome.list \u0026\u0026     echo 'deb http://deb.debian.org/debian stretch-backports main' \u003e /etc/apt/sources.list.d/backports.list \u0026\u0026     mkdir -p /usr/share/man/man1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt upgrade -y \u0026\u0026 apt install unzip mariadb-client git zlibc zlib1g zlib1g-dev libzip-dev libicu-dev     libpng-dev nodejs yarn libpcre3-dev optipng libxslt1-dev libxslt1.1 openjdk-11-jdk ca-certificates p11-kit     libonig-dev libgcrypt20-dev -y     \u0026\u0026 yarn global add bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone https://github.com/opsengine/cpulimit.git \u0026\u0026 cd cpulimit \u0026\u0026 make \u0026\u0026     cp src/cpulimit /usr/bin \u0026\u0026 chmod +x /usr/bin/cpulimit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -O https://download.java.net/openjdk/jdk7u75/ri/jdk_ri-7u75-b13-linux-x64-18_dec_2014.tar.gz \u0026\u0026     tar -xvf jdk_ri-7u75-b13-linux-x64-18_dec_2014.tar.gz \u0026\u0026     mkdir -p /usr/lib/jvm \u0026\u0026     mv java-se-7u75-ri /usr/lib/jvm \u0026\u0026     rm jdk_ri-7u75-b13-linux-x64-18_dec_2014.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -O https://download.java.net/openjdk/jdk8u40/ri/jdk_ri-8u40-b25-linux-x64-10_feb_2015.tar.gz \u0026\u0026     tar -xvf jdk_ri-8u40-b25-linux-x64-10_feb_2015.tar.gz \u0026\u0026     mv java-se-8u40-ri /usr/lib/jvm \u0026\u0026     rm jdk_ri-8u40-b25-linux-x64-10_feb_2015.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -O https://download.java.net/java/GA/jdk9/9.0.4/binaries/openjdk-9.0.4_linux-x64_bin.tar.gz \u0026\u0026     tar -xvf openjdk-9.0.4_linux-x64_bin.tar.gz \u0026\u0026     mv jdk-9.0.4 /usr/lib/jvm \u0026\u0026     rm openjdk-9.0.4_linux-x64_bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -O https://download.java.net/java/GA/jdk10/10.0.2/19aef61b38124481863b1413dce1855f/13/openjdk-10.0.2_linux-x64_bin.tar.gz \u0026\u0026     tar -xvf openjdk-10.0.2_linux-x64_bin.tar.gz \u0026\u0026     mv jdk-10.0.2 /usr/lib/jvm \u0026\u0026     rm openjdk-10.0.2_linux-x64_bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/java-se-7u75-ri/bin/java\" 1 \u0026\u0026      update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/java-se-8u40-ri/bin/java\" 1 \u0026\u0026      update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk-9.0.4/bin/java\" 1 \u0026\u0026      update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk-10.0.2/bin/java\" 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/jdk-9.0.4\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME7",
              "Value": "\"/usr/lib/jvm/java-se-7u75-ri\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME8",
              "Value": "\"/usr/lib/jvm/java-se-8u40-ri\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME9",
              "Value": "\"/usr/lib/jvm/jdk-9.0.4\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME10",
              "Value": "\"/usr/lib/jvm/jdk-10.0.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME11",
              "Value": "\"/usr/lib/jvm/java-11-openjdk-amd64\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"JAVA_HOME is set to: $JAVA_HOME\" \u0026\u0026 set -eux;     {     \t\techo '#!/usr/bin/env bash';     \t\techo 'set -Eeuo pipefail';     \t\techo 'if [ -z \"${JAVA_HOME}\" ]; then echo \u003e\u00262 \"error: missing JAVA_HOME environment variable\"; exit 1; fi';     \t\techo 'cacertsFile=; for f in \"$JAVA_HOME/lib/security/cacerts\" \"$JAVA_HOME/jre/lib/security/cacerts\"; do if [ -e \"$f\" ]; then cacertsFile=\"$f\"; break; fi; done';     \t\techo 'if [ -z \"$cacertsFile\" ] || ! [ -f \"$cacertsFile\" ]; then echo \u003e\u00262 \"error: failed to find cacerts file in $JAVA_HOME\"; exit 1; fi';     \t\techo 'trust extract --overwrite --format=java-cacerts --filter=ca-anchors --purpose=server-auth \"$cacertsFile\"';     } \u003e /etc/ca-certificates/update.d/docker-openjdk;     chmod +x /etc/ca-certificates/update.d/docker-openjdk;     /etc/ca-certificates/update.d/docker-openjdk;     openssl s_client -showcerts -connect repo.jfrog.org:443 \u003c/dev/null 2\u003e/dev/null|openssl x509 -outform PEM \u003ejfrog.PEM;     yes | keytool -import -alias jfrogCert -keystore /usr/lib/jvm/jdk-10.0.2/lib/security/cacerts -file jfrog.PEM -storepass changeit;     openssl s_client -showcerts -connect dl.google.com:443 \u003c/dev/null 2\u003e/dev/null|openssl x509 -outform PEM \u003edlGoogle.PEM;     yes | keytool -import -alias dlGoogleCert -keystore /usr/lib/jvm/jdk-10.0.2/lib/security/cacerts -file dlGoogle.PEM -storepass changeit;     openssl s_client -showcerts -connect maven.fabric.io:443 \u003c/dev/null 2\u003e/dev/null|openssl x509 -outform PEM \u003emavenFabricIo.PEM;     yes | keytool -import -alias mavenFabricIoCert -keystore /usr/lib/jvm/jdk-10.0.2/lib/security/cacerts -file mavenFabricIo.PEM -storepass changeit;     rm mavenFabricIo.PEM;     rm dlGoogle.PEM;     rm jfrog.PEM;     find \"$JAVA_HOME/lib\" -name '*.so' -exec dirname '{}' ';' | sort -u \u003e /etc/ld.so.conf.d/docker-openjdk.conf;     ldconfig;     javac --version;     java --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.6.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -O http://www-eu.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \u0026\u0026     tar xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz \u0026\u0026     ln -s apache-maven-${MAVEN_VERSION} apache-maven \u0026\u0026     mv apache-maven-${MAVEN_VERSION} /usr/lib \u0026\u0026     rm apache-maven-${MAVEN_VERSION}-bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/usr/lib/mvn"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/lib/apache-maven-${MAVEN_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$MAVEN_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "5.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /     \u0026\u0026 curl -L -O https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip     \u0026\u0026 unzip -d /opt/gradle gradle-${GRADLE_VERSION}-bin.zip     \u0026\u0026 rm /gradle-${GRADLE_VERSION}-bin.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle/gradle-${GRADLE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${GRADLE_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -O https://github.com/dougborg/gdub/zipball/master \u0026\u0026 unzip master \u0026\u0026 rm master   \u0026\u0026 dougborg-gdub-ebe14f1/install \u0026\u0026 rm -r dougborg-gdub-ebe14f1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "'-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SDK_URL",
              "Value": "\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\""
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/usr/local/android-sdk\""
            },
            {
              "Key": "ANDROID_VERSION",
              "Value": "29"
            },
            {
              "Key": "ANRDROID_BUILD_TOOLS_VESION",
              "Value": "29.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir \"$ANDROID_HOME\" .android     \u0026\u0026 cd \"$ANDROID_HOME\"     \u0026\u0026 curl -o sdk.zip $SDK_URL     \u0026\u0026 unzip sdk.zip     \u0026\u0026 rm sdk.zip     \u0026\u0026 yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"### User Sources for Android SDK Manager\" \u003e ~/.android/repositories.cfg \u0026\u0026 echo \"#Fri Nov 03 10:11:27 CET 2017 count=0\" \u003e\u003e ~/.android/repositories.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install google-chrome-stable     libgtk2.0-0     libnotify-dev     libgconf-2-4     libnss3     libxss1     libasound2     xvfb     dbus-x11 -yqq \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu     \u0026\u0026 pecl install xdebug-2.9.0     \u0026\u0026 docker-php-ext-enable apcu xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis   \u0026\u0026  rm -rf /tmp/pear   \u0026\u0026  docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install exif fileinfo gd intl mbstring pdo_mysql mysqli opcache sockets zip xsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer     \u0026\u0026 chmod +x /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone = UTC\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"opcache.enable = 1\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"opcache.enable_cli = 1\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"opcache.memory_consumption = 256\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"opcache.max_accelerated_files = 100000\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"opcache.interned_strings_buffer = 16\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"realpath_cache_size = 50M\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"apc.entries_hint = 256000\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"apc.shm_size = 512M\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"apc.enabled = 1\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo \"apc.enable_cli = 1\" \u003e\u003e /usr/local/etc/php/php.ini     \u0026\u0026 echo /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install automake nasm libtool -y \u0026\u0026 git clone git://github.com/mozilla/mozjpeg.git \u0026\u0026 cd mozjpeg     \u0026\u0026 git checkout v3.3.1 \u0026\u0026 autoreconf -fiv \u0026\u0026 ./configure --prefix=/opt/mozjpeg \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/pornel/pngquant.git     \u0026\u0026 cd pngquant     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026 apt clean"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}