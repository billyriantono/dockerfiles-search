{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-apache",
      "SourceCode": "FROM php:5.6-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.6-apache"
      },
      "Commands": [
        {
          "Maintainer": "pierre@piwik.org",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y       libjpeg-dev       libfreetype6-dev       libgeoip-dev       libpng12-dev       libldap2-dev       zip  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr \t\u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/  \t\u0026\u0026 docker-php-ext-install -j$(nproc) gd mbstring mysql pdo_mysql zip ldap opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install APCu geoip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PIWIK_VERSION",
              "Value": "3.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL -o piwik.tar.gz       \"https://builds.piwik.org/piwik-${PIWIK_VERSION}.tar.gz\"  \u0026\u0026 curl -fsSL -o piwik.tar.gz.asc       \"https://builds.piwik.org/piwik-${PIWIK_VERSION}.tar.gz.asc\"  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237  \u0026\u0026 gpg --batch --verify piwik.tar.gz.asc piwik.tar.gz  \u0026\u0026 rm -r \"$GNUPGHOME\" piwik.tar.gz.asc  \u0026\u0026 tar -xzf piwik.tar.gz -C /usr/src/  \u0026\u0026 rm piwik.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -fsSL -o /usr/src/piwik/misc/GeoIPCity.dat.gz http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz  \u0026\u0026 gunzip /usr/src/piwik/misc/GeoIPCity.dat.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s/Listen 80/Listen 8080/g\" /etc/apache2/ports.conf \u0026\u0026 sed -i \"s/\u003cVirtualHost \\*:80\u003e/\u003cVirtualHost \\*:8080\u003e/g\" /etc/apache2/sites-enabled/000-default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/apache2 \u0026\u0026 chmod 777 -R /var/run/apache2 \u0026\u0026  mkdir -p /var/log/apache2 \u0026\u0026 chmod 777 -R /var/log/apache2 \u0026\u0026  mkdir -p /var/lock/apache2 \u0026\u0026 chmod 777 -R /var/lock/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}