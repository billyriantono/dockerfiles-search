{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie-slim",
      "SourceCode": "FROM debian:jessie-slim",
      "Platform": "",
      "From": {
        "Image": "debian:jessie-slim"
      },
      "Commands": [
        {
          "Maintainer": "Ceaser Larry",
          "Name": "maintainer"
        },
        {
          "Key": "DEB_PROXY",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEB_PROXY",
              "Value": "${DEB_PROXY}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "[ -z \"$DEB_PROXY\" ] ||   echo \"Acquire::http::Proxy \\\"$DEB_PROXY\\\";\" \u003e /etc/apt/apt.conf.d/01proxy \u0026\u0026   echo \"Acquire::https::Proxy false;\" \u003e\u003e /etc/apt/apt.conf.d/01proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y     apt-transport-https     gnupg     ca-certificates     netcat     wget \t\u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true   \u0026\u0026 wget -qO - https://apt.z.cash/zcash.asc | apt-key add -   \u0026\u0026 echo \"deb [arch=amd64] https://apt.z.cash/ jessie main\" \u003e\u003e /etc/apt/sources.list.d/zcash.list \t\u0026\u0026 apt-get update -y \t\u0026\u0026 apt-get install -y --no-install-recommends \t\tzcash \t\u0026\u0026 apt-get purge -y apt-transport-https \t\u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /etc/apt/apt.conf.d/01proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 mkdir -p /data/.zcash \t\u0026\u0026 useradd -s /usr/sbin/nologin -r -M -d /data zcash \t\u0026\u0026 chown zcash:zcash -R /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Retries": 3,
            "Test": [
              "CMD-SHELL",
              "nc -z 127.0.0.1 8233"
            ],
            "Timeout": 30000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "8233/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "usr/bin/zcashd",
            "-printtoconsole"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}