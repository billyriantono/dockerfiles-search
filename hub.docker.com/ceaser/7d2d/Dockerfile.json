{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dstacademy/steamcmd:latest",
      "SourceCode": "FROM dstacademy/steamcmd:latest",
      "Platform": "",
      "From": {
        "Image": "dstacademy/steamcmd:latest"
      },
      "Commands": [
        {
          "Maintainer": "Ceaser Larry \u003cceaser.larry@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "DEB_PROXY",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEB_PROXY",
              "Value": "${DEB_PROXY}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "SD2D_HOME",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "SD2D_HOME",
              "Value": "${SD2d_HOME:-\"/opt/7d2d\"}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "SD2D_BRANCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "SD2D_BRANCH",
              "Value": "${SD2D_BRANCH}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "SD2D_BRANCH_PASSWORD",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "SD2D_BRANCH_PASSWORD",
              "Value": "${SD2D_BRANCH_PASSWORD}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "[ -z \"$DEB_PROXY\" ] ||   echo \"Acquire::http::Proxy \\\"$DEB_PROXY\\\";\" \u003e /etc/apt/apt.conf.d/01proxy \u0026\u0026   echo \"Acquire::https::Proxy false;\" \u003e\u003e /etc/apt/apt.conf.d/01proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 dpkg --add-architecture i386 \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends \t\tlib32stdc++6 \t\tlibcurl4-gnutls-dev:i386     netcat \t\u0026\u0026 apt-get clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /etc/apt/apt.conf.d/01proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mkdir -p $SD2D_HOME \t\u0026\u0026 chown $STEAM_USER:$STEAM_USER $SD2D_HOME \t\u0026\u0026 sync \t\u0026\u0026 gosu $STEAM_USER steamcmd \t\t+@ShutdownOnFailedCommand 1 \t\t+login anonymous \t\t+force_install_dir $SD2D_HOME \t\t+app_update 294420 \t\t\t$([ -n \"$SD2D_BRANCH\" ] \u0026\u0026 printf %s \"-beta $SD2D_BRANCH\") \t\t\t$([ -n \"$SD2D_BRANCH_PASSWORD\" ] \u0026\u0026 printf %s \"-betapassword $SD2D_BRANCH_PASSWORD\") \t\t\tvalidate \t\t+quit \t\u0026\u0026 rm -rf $STEAM_HOME/Steam/logs $STEAM_HOME/Steam/appcache/httpcache \t\u0026\u0026 find $STEAM_HOME/package -type f ! -name \"steam_cmd_linux.installed\" ! -name \"steam_cmd_linux.manifest\" -delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Retries": 3,
            "Test": [
              "CMD-SHELL",
              "nc -z 127.0.0.1 26900"
            ],
            "Timeout": 30000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "26900/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "26900-26902/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080-8082/tcp"
          ]
        },
        {
          "CmdLine": [
            "mkdir /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "startserver.sh",
            "-configfile=/data/serverconfig.xml"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}