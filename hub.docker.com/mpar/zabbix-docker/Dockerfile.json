{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Alexey Pustovalov \u003calexey.pustovalov@zabbix.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "APK_FLAGS_COMMON",
          "Name": "arg",
          "Value": "\"-q\""
        },
        {
          "Key": "APK_FLAGS_PERSISTANT",
          "Name": "arg",
          "Value": "\"${APK_FLAGS_COMMON} --clean-protected --no-cache\""
        },
        {
          "Key": "APK_FLAGS_DEV",
          "Name": "arg",
          "Value": "\"${APK_FLAGS_COMMON} --no-cache\""
        },
        {
          "Key": "DB_TYPE",
          "Name": "arg",
          "Value": "mysql"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MIBDIRS",
              "Value": "/usr/share/snmp/mibs:/var/lib/zabbix/mibs"
            },
            {
              "Key": "MIBS",
              "Value": "+ALL"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CURL_VERSION",
              "Value": "7.55.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup zabbix \u0026\u0026     adduser -S             -D -G zabbix             -h /var/lib/zabbix/         zabbix \u0026\u0026     mkdir -p /etc/zabbix/ \u0026\u0026     mkdir -p /var/lib/zabbix \u0026\u0026     mkdir -p /var/lib/zabbix/enc \u0026\u0026     mkdir -p /var/lib/zabbix/modules \u0026\u0026     mkdir -p /var/lib/zabbix/ssh_keys \u0026\u0026     mkdir -p /var/lib/zabbix/ssl \u0026\u0026     mkdir -p /var/lib/zabbix/ssl/certs \u0026\u0026     mkdir -p /var/lib/zabbix/ssl/keys \u0026\u0026     mkdir -p /var/lib/zabbix/ssl/ssl_ca \u0026\u0026     mkdir -p /usr/lib/zabbix/externalscripts \u0026\u0026     mkdir -p /var/lib/zabbix/mibs \u0026\u0026     mkdir -p /var/lib/zabbix/snmptraps \u0026\u0026     chown --quiet -R zabbix:root /var/lib/zabbix \u0026\u0026     mkdir -p /usr/share/doc/zabbix-proxy-${DB_TYPE} \u0026\u0026     apk update \u0026\u0026     apk update \u0026\u0026     apk add --update --no-cache openssl openssl-dev ca-certificates \u0026\u0026     apk add --update --no-cache --virtual curldeps g++ make perl \u0026\u0026     wget https://curl.haxx.se/download/curl-$CURL_VERSION.tar.bz2 \u0026\u0026     tar xjvf curl-$CURL_VERSION.tar.bz2 \u0026\u0026     rm curl-$CURL_VERSION.tar.bz2 \u0026\u0026     cd curl-$CURL_VERSION \u0026\u0026     ./configure         --prefix=/usr         --with-ssl         --enable-ipv6         --enable-unix-sockets         --without-libidn         --disable-static         --disable-ldap         --with-pic \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd / \u0026\u0026     rm -r curl-$CURL_VERSION \u0026\u0026     rm -r /usr/share/man \u0026\u0026     apk del curldeps \u0026\u0026     apk add ${APK_FLAGS_PERSISTANT}             iputils             supervisor             bash             mariadb-client-libs             mariadb-client             fping             libxml2             unixodbc             net-snmp-agent-libs             libldap             openipmi-libs             libevent             pcre             libssh2 \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MAJOR_VERSION",
          "Name": "arg",
          "Value": "3.4"
        },
        {
          "Key": "ZBX_VERSION",
          "Name": "arg",
          "Value": "${MAJOR_VERSION}.3"
        },
        {
          "Key": "ZBX_SOURCES",
          "Name": "arg",
          "Value": "svn://svn.zabbix.com/tags/${ZBX_VERSION}/"
        },
        {
          "Env": [
            {
              "Key": "ZBX_VERSION",
              "Value": "${ZBX_VERSION}"
            },
            {
              "Key": "ZBX_SOURCES",
              "Value": "${ZBX_SOURCES}"
            },
            {
              "Key": "DB_TYPE",
              "Value": "${DB_TYPE}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add ${APK_FLAGS_DEV} --virtual build-dependencies             alpine-sdk             coreutils             automake             autoconf             mysql-dev             libxml2-dev             unixodbc-dev             net-snmp-dev             libssh2-dev             openipmi-dev             openldap-dev             libevent-dev             pcre-dev             subversion \u0026\u0026     cd /tmp/ \u0026\u0026     svn --quiet export ${ZBX_SOURCES} zabbix-${ZBX_VERSION} 1\u003e/dev/null \u0026\u0026     cd /tmp/zabbix-${ZBX_VERSION} \u0026\u0026     zabbix_revision=`svn info ${ZBX_SOURCES} |grep \"Last Changed Rev\"|awk '{print $4;}'` \u0026\u0026     sed -i \"s/{ZABBIX_REVISION}/$zabbix_revision/g\" include/version.h \u0026\u0026     ./bootstrap.sh 1\u003e/dev/null \u0026\u0026     export CFLAGS=\"-fPIC -pie -Wl,-z,relro -Wl,-z,now\" \u0026\u0026     ./configure             --prefix=/usr             --silent             --sysconfdir=/etc/zabbix             --libdir=/usr/lib/zabbix             --datadir=/usr/lib             --enable-proxy             --enable-agent             --enable-ipv6             --with-ldap             --with-net-snmp             --with-openipmi             --with-ssh2             --with-libcurl             --with-unixodbc             --with-libxml2             --with-openssl             --with-${DB_TYPE} \u0026\u0026     make -j\"$(nproc)\" -s dbschema 1\u003e/dev/null \u0026\u0026     make -j\"$(nproc)\" -s 1\u003e/dev/null \u0026\u0026     cp src/zabbix_proxy/zabbix_proxy /usr/sbin/zabbix_proxy \u0026\u0026     cp src/zabbix_get/zabbix_get /usr/bin/zabbix_get \u0026\u0026     cp src/zabbix_sender/zabbix_sender /usr/bin/zabbix_sender \u0026\u0026     cp conf/zabbix_proxy.conf /etc/zabbix/zabbix_proxy.conf \u0026\u0026     chown --quiet -R zabbix:root /etc/zabbix \u0026\u0026     cp database/${DB_TYPE}/schema.sql /usr/share/doc/zabbix-proxy-${DB_TYPE}/ \u0026\u0026     cd /tmp/ \u0026\u0026     rm -rf /tmp/zabbix-${ZBX_VERSION}/ \u0026\u0026     apk del ${APK_FLAGS_COMMON} --purge             build-dependencies \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "10051/TCP",
            "162/UDP"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/zabbix"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/lib/zabbix/externalscripts",
            "/var/lib/zabbix/enc",
            "/var/lib/zabbix/modules",
            "/var/lib/zabbix/ssh_keys"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/zabbix/ssl/certs",
            "/var/lib/zabbix/ssl/keys",
            "/var/lib/zabbix/ssl/ssl_ca",
            "/var/lib/zabbix/snmptraps",
            "/var/lib/zabbix/mibs"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/etc/supervisor/",
            "/etc/supervisor/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run_zabbix_component.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/run_zabbix_component.sh",
            "proxy",
            "mysql"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}