{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.33-fpm",
      "SourceCode": "FROM php:7.1.33-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1.33-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"clivewalkden@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "debian_version",
              "Value": "\"Buster\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "php_version",
              "Value": "\"7.1.33\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "composer_version",
              "Value": "\"1.9.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "nginx_version",
              "Value": "\"1.16.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"PHP 7.1.33, Nginx 1.16.1 with Composer 1.9.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/var/www/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.1-1~buster"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NJS_VERSION",
              "Value": "1.16.1.0.3.6-1~buster"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install --no-install-recommends     --no-install-suggests -y     apt-transport-https     ca-certificates     openssh-client     curl     dos2unix     git     gnupg2     dirmngr     g++     jq     libedit-dev     libfcgi0ldbl     libfreetype6-dev     libicu-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpq-dev     lsb-release     supervisor     unzip     zip     \u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-install     pdo_mysql     mysqli     json     readline     gd     intl     \u0026\u0026 docker-php-ext-configure gd     --enable-gd-native-ttf     --with-freetype-dir=/usr/include/freetype2     --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure intl     \u0026\u0026 NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \u0026\u0026 found=yes \u0026\u0026 break; \tdone; \ttest -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $NGINX_GPGKEY\" \u0026\u0026 exit 1; \techo \"deb http://nginx.org/packages/debian/ `lsb_release -cs` nginx\" \u003e\u003e /etc/apt/sources.list.d/nginx.list     \u0026\u0026 apt update     \u0026\u0026 apt install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tnginx=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-xslt=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-geoip=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-image-filter=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-njs=${NJS_VERSION} \t\t\t\t\t\tgettext-base     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 PATH=\"/composer/vendor/bin:$PATH\"     COMPOSER_ALLOW_SUPERUSER=1     COMPOSER_VENDOR_DIR=/var/www/vendor     COMPOSER_HOME=/composer     \u0026\u0026 curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/fb22b78362d31c0d2bf516d1f8cdfd2745caa431/web/installer     \u0026\u0026 php -r \"         \\$signature = 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1';         \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));         if (!hash_equals(\\$signature, \\$hash)) {             unlink('/tmp/installer.php');             echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;             exit(1);         }\"     \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}     \u0026\u0026 rm /tmp/installer.php     \u0026\u0026 composer --ansi --version --no-interaction"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-n",
            "-c",
            "/etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}