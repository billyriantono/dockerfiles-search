{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Jordan Wesolowski \u003cjrwesolo@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "minify",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.2.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y       curl       gcc       libffi-dev       libreadline-dev       libssl-dev       make       zlib1g-dev     \u0026\u0026     curl -L \"http://cache.ruby-lang.org/pub/ruby/${RUBY_VERSION%.*}/ruby-${RUBY_VERSION}.tar.gz\" |     tar -C /usr/local/src -xz \u0026\u0026     cd \"/usr/local/src/ruby-${RUBY_VERSION}\" \u0026\u0026     ./configure       --disable-install-doc       --enable-shared \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     apt-get purge -y --auto-remove       curl       gcc       libffi-dev       libreadline-dev       libssl-dev       make       zlib1g-dev     \u0026\u0026     rm -rf \"/usr/local/src/ruby-${RUBY_VERSION}\" /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y       ca-certificates       curl       openssl     \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64\" \u0026\u0026     curl -o /usr/local/bin/gosu.asc -sSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc\" \u0026\u0026     gpg -q --keyserver pgp.mit.edu --recv-keys BF357DD4 \u0026\u0026     gpg --verify /usr/local/bin/gosu.asc \u0026\u0026     rm /usr/local/bin/gosu.asc \u0026\u0026     chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEMINABOX_VERSION",
              "Value": "0.12.4"
            },
            {
              "Key": "PUMA_VERSION",
              "Value": "2.15.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y       make       gcc       g++     \u0026\u0026     gem install --no-document \"geminabox:${GEMINABOX_VERSION}\" \"puma:${PUMA_VERSION}\" \u0026\u0026     apt-get purge -y --auto-remove       make       gcc       g++     \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEMINABOX_CONF",
              "Value": "/etc/geminabox"
            },
            {
              "Key": "GEMINABOX_DATA",
              "Value": "/data/geminabox"
            },
            {
              "Key": "GEMINABOX_USER",
              "Value": "geminabox"
            },
            {
              "Key": "GEMINABOX_UID",
              "Value": "543"
            },
            {
              "Key": "GEMINABOX_GROUP",
              "Value": "geminabox"
            },
            {
              "Key": "GEMINABOX_GID",
              "Value": "543"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g $GEMINABOX_GID $GEMINABOX_GROUP \u0026\u0026     useradd -s /bin/bash -M -N -d $GEMINABOX_CONF -u $GEMINABOX_UID -g $GEMINABOX_GROUP $GEMINABOX_USER \u0026\u0026     mkdir -p $GEMINABOX_DATA $GEMINABOX_CONF \u0026\u0026     chown $GEMINABOX_USER:$GEMINABOX_GROUP $GEMINABOX_CONF $GEMINABOX_DATA \u0026\u0026     chmod 0755 $GEMINABOX_DATA $GEMINABOX_CONF"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker",
            "/docker"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9292"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$GEMINABOX_DATA"
          ]
        },
        {
          "CmdLine": [
            "/docker/run"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}