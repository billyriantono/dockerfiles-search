{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/passenger-nodejs:0.9.19",
      "SourceCode": "FROM phusion/passenger-nodejs:0.9.19",
      "Platform": "",
      "From": {
        "Image": "phusion/passenger-nodejs:0.9.19"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "0.10.46"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\" \u0026\u0026     apt-get install wget git ntp -y \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/service/nginx/down \u0026\u0026     rm /etc/nginx/sites-enabled/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/docker/webapp.conf",
            "/etc/nginx/sites-enabled/webapp.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/docker/00_app_env.conf",
            "/etc/nginx/conf.d/00_app_env.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/docker/cors.conf",
            "/etc/nginx/conf.d/cors.conf"
          ]
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026     tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/docker/ntp.conf",
            "/etc/ntp.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/home/app/webapp/"
          ]
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/app/webapp/vendor"
        },
        {
          "CmdLine": [
            "bash /home/app/webapp/vendor/nvm/install.sh    \u0026\u0026 source $NVM_DIR/nvm.sh     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 nvm alias default $NODE_VERSION     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app:app /home/app/webapp \u0026\u0026     chmod -R 755 /home/app/webapp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/app/webapp"
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/my_init.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/docker/70_templates.sh",
            "/etc/my_init.d/70_templates.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/docker/80_submodules.sh",
            "/etc/my_init.d/80_submodules.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}