{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Maintainer": "keopx \u003ckeopx@keopx.net\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.de.debian.org/debian/ stretch main non-free contrib\\n\" \u003e /etc/apt/sources.list \u0026\u0026   echo \"deb-src http://ftp.de.debian.org/debian/ stretch main non-free contrib\\n\" \u003e\u003e /etc/apt/sources.list \u0026\u0026   echo \"deb http://security.debian.org/ stretch/updates main contrib non-free\\n\" \u003e\u003e /etc/apt/sources.list \u0026\u0026   echo \"deb-src http://security.debian.org/ stretch/updates main contrib non-free\" \u003e\u003e /etc/apt/sources.list \u0026\u0026   apt-get -qq update \u0026\u0026 apt-get -qqy upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r redis \u0026\u0026 useradd -r -g redis redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tfetchDeps='ca-certificates wget bzip2 gnupg dirmngr'; \tapt-get -qq update \u0026\u0026 apt-get install -y --no-install-recommends $fetchDeps; \tupdate-ca-certificates; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026 \tfor server in $(shuf -e ha.pool.sks-keyservers.net    hkp://p80.pool.sks-keyservers.net:80    keyserver.ubuntu.com    hkp://keyserver.ubuntu.com:80    pgp.mit.edu) ; do    gpg --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026 break || : ; \tdone \u0026\u0026 \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \trm -fr \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tchmod +x /usr/local/bin/gosu; \tgosu nobody true; \tapt-get purge -y --auto-remove $fetchDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "REDIS_VERSION",
              "Value": "4.0.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_URL",
              "Value": "http://download.redis.io/releases/redis-4.0.9.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_SHA",
              "Value": "df4f73bc318e2f9ffb2d169a922dec57ec7c73dd07bccf875695dbeecd5ec510"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tbuildDeps=' \t\twget \t\t\t\tgcc \t\tlibc6-dev \t\tmake \t'; \tapt-get update; \tapt-get install -y $buildDeps --no-install-recommends; \trm -rf /var/lib/apt/lists/*; \t\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \techo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c -; \tmkdir -p /usr/src/redis; \ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \trm redis.tar.gz; \t\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \tsed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h; \t\tmake -C /usr/src/redis -j \"$(nproc)\"; \tmake -C /usr/src/redis install; \t\trm -r /usr/src/redis; \t\tapt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q autoclean \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data \u0026\u0026 chown redis:redis /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "CmdLine": [
            "redis-server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}