MetaArgs: null
Stages:
- BaseName: keopx/java
  Commands:
  - Maintainer: keopx <keopx@keopx.net>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo "deb http://ftp.de.debian.org/debian/ stretch main non-free contrib\n"
      > /etc/apt/sources.list &&    echo "deb-src http://ftp.de.debian.org/debian/
      stretch main non-free contrib\n" >> /etc/apt/sources.list &&    echo "deb http://security.debian.org/
      stretch/updates main contrib non-free\n" >> /etc/apt/sources.list &&    echo
      "deb-src http://security.debian.org/ stretch/updates main contrib non-free"
      >> /etc/apt/sources.list &&    apt-get -qq update && apt-get -qqy upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -yqq install apt-transport-https ca-certificates python3-software-properties
      gnupg2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add
      - &&    echo "deb https://artifacts.elastic.co/packages/5.x/apt stable main"
      | tee -a /etc/apt/sources.list.d/elastic-5.x.list &&    apt-get -yqq update
      &&    apt-get -yqq install -y --no-install-recommends elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Name: workdir
    Path: /usr/share/elasticsearch
  - CmdLine:
    - "set -ex \t&& for path in \t\t./data \t\t./logs \t\t./config \t\t./config/scripts
      \t; do \t\tmkdir -p \"$path\"; \t\tchown -R elasticsearch:elasticsearch \"$path\";
      \tdone"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/docker-entrypoint.sh
    - /
  - Name: user
    User: elasticsearch
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: keopx/java
  Name: ""
  Platform: ""
  SourceCode: FROM keopx/java
