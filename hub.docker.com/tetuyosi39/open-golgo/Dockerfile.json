{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm-alpine",
      "SourceCode": "FROM php:7.1-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "NGINX Docker Maintainers \"docker-maint@nginx.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8   \u0026\u0026 CONFIG=\"    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_geoip_module=dynamic     --with-http_perl_module=dynamic     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-stream_geoip_module=dynamic     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module   \"   \u0026\u0026 addgroup -S nginx   \u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx   \u0026\u0026 apk add --no-cache --virtual .build-deps     gcc     libc-dev     make     openssl-dev     pcre-dev     zlib-dev     linux-headers     curl     gnupg     libxslt-dev     gd-dev     geoip-dev     perl-dev   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\"   \u0026\u0026 gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz   \u0026\u0026 rm -r \"$GNUPGHOME\" nginx.tar.gz.asc   \u0026\u0026 mkdir -p /usr/src   \u0026\u0026 tar -zxC /usr/src -f nginx.tar.gz   \u0026\u0026 rm nginx.tar.gz   \u0026\u0026 cd /usr/src/nginx-$NGINX_VERSION   \u0026\u0026 ./configure $CONFIG --with-debug   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 mv objs/nginx objs/nginx-debug   \u0026\u0026 mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so   \u0026\u0026 mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so   \u0026\u0026 mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so   \u0026\u0026 mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so   \u0026\u0026 mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so   \u0026\u0026 ./configure $CONFIG   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 make install   \u0026\u0026 rm -rf /etc/nginx/html/   \u0026\u0026 mkdir /etc/nginx/conf.d/   \u0026\u0026 mkdir -p /usr/share/nginx/html/   \u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/   \u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/   \u0026\u0026 install -m755 objs/nginx-debug /usr/sbin/nginx-debug   \u0026\u0026 install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so   \u0026\u0026 install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so   \u0026\u0026 ln -s ../../usr/lib/nginx/modules /etc/nginx/modules   \u0026\u0026 strip /usr/sbin/nginx*   \u0026\u0026 strip /usr/lib/nginx/modules/*.so   \u0026\u0026 rm -rf /usr/src/nginx-$NGINX_VERSION     \u0026\u0026 apk add --no-cache --virtual .gettext gettext   \u0026\u0026 mv /usr/bin/envsubst /tmp/     \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --no-cache --virtual .nginx-rundeps $runDeps   \u0026\u0026 apk del .build-deps   \u0026\u0026 apk del .gettext   \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.vh.default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache supervisor sqlite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual .php-builddeps     zlib-dev sqlite-dev   \u0026\u0026 docker-php-ext-install opcache zip pdo_sqlite   \u0026\u0026 curl -sS https://getcomposer.org/installer     | php -- --install-dir=/usr/local/bin --filename=composer --version=1.2.0   \u0026\u0026 apk del --purge .php-builddeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src",
            "/var/www/html"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 composer install   \u0026\u0026 touch database/database.sqlite   \u0026\u0026 php artisan migrate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisor.conf",
            "/etc/supervisor.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "backup_database",
            "/etc/periodic/hourly/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/periodic/monthly/geoip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}