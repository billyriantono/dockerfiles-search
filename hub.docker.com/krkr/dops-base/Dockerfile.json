{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "krkr/docker-toolbox",
      "SourceCode": "FROM krkr/docker-toolbox",
      "Platform": "",
      "From": {
        "Image": "krkr/docker-toolbox"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.7.1.0"
            },
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "False"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add build-base libffi-dev     openssl-dev openssh-client     python-dev py-pip py-crypto py-jinja2 \u0026\u0026     pip install ansible==${ANSIBLE_VERSION} \u0026\u0026     apk del build-base openssl-dev libffi-dev python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.11.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add ca-certificates \u0026\u0026     curl -sSkL \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" \u003e /terraform.zip \u0026\u0026     unzip /terraform.zip \u0026\u0026 rm /terraform.zip \u0026\u0026     mv terraform* /usr/local/bin \u0026\u0026     chmod +x /usr/local/bin/terraform*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PACKER_VERSION",
              "Value": "1.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q \"https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip\" \u0026\u0026     unzip packer_${PACKER_VERSION}_linux_amd64.zip \u0026\u0026     rm packer_${PACKER_VERSION}_linux_amd64.zip \u0026\u0026     mv packer /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "1.12.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL \"https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl\"     \u003e /usr/local/bin/kubectl \u0026\u0026 chmod +x /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.11.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q \"https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz\" \u0026\u0026     tar xvzf helm-v${HELM_VERSION}-linux-amd64.tar.gz \u0026\u0026     rm helm-v${HELM_VERSION}-linux-amd64.tar.gz \u0026\u0026     mv linux-amd64/helm /usr/local/bin \u0026\u0026     rm -rf linux-amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add       python-dev py-pip py-setuptools       ca-certificates gcc musl-dev linux-headers   \u0026\u0026 pip install --upgrade --no-cache-dir pip setuptools python-openstackclient==3.16.1   \u0026\u0026 apk del gcc musl-dev linux-headers"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}