MetaArgs: null
Stages:
- BaseName: openjdk:8
  Commands:
  - Maintainer: Victor Romero <victor.romero@gmail.com>
    Name: maintainer
  - CmdLine:
    - groupadd -r artemis && useradd -r -g artemis artemis
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -o=Dpkg::Use-Pty=0 update && apt-get -qq -o=Dpkg::Use-Pty=0 upgrade
      -y &&   apt-get -qq -o=Dpkg::Use-Pty=0 install -y --no-install-recommends libaio1
      xmlstarlet jq &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.9"
    Name: env
  - CmdLine:
    - set -x     && apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/*     && dpkgArch="$(dpkg --print-architecture
      | awk -F- '{ print $NF }')"     && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"     &&
      wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && (gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || gpg --keyserver keyserver.ubuntu.com
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4)     && gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true
    Name: run
    PrependShell: true
  - Env:
    - Key: ACTIVEMQ_ARTEMIS_VERSION
      Value: 2.4.0
    Name: env
  - CmdLine:
    - cd /opt && wget -q https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz
      &&   wget -q https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc
      &&   wget -q http://apache.org/dist/activemq/KEYS &&   gpg --import KEYS &&   gpg
      apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc &&   tar xfz apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz
      &&   ln -s apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION} apache-artemis &&   rm
      -f apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz KEYS apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/lib &&   /opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis
      create artemis     --home /opt/apache-artemis     --user artemis     --password
      simetraehcapa     --role amq     --require-login     --cluster-user artemisCluster     --cluster-password
      simetraehcaparetsulc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/lib/artemis/etc &&   xmlstarlet ed -L -N amq="http://activemq.org/schema"     -u
      "/amq:broker/amq:web/@bind"     -v "http://0.0.0.0:8161" bootstrap.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R artemis.artemis /var/lib/artemis
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/assets
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/merge.xslt
    - /opt/assets
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/enable-jmx.xml
    - /opt/assets
  - Name: expose
    Ports:
    - "8161"
  - Name: expose
    Ports:
    - "61616"
  - Name: expose
    Ports:
    - "5445"
  - Name: expose
    Ports:
    - "5672"
  - Name: expose
    Ports:
    - "1883"
  - Name: expose
    Ports:
    - "61613"
  - Name: volume
    Volumes:
    - /var/lib/artemis/data
  - Name: volume
    Volumes:
    - /var/lib/artemis/tmp
  - Name: volume
    Volumes:
    - /var/lib/artemis/etc
  - Name: volume
    Volumes:
    - /var/lib/artemis/etc-override
  - Name: workdir
    Path: /var/lib/artemis/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - artemis-server
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8
