MetaArgs: null
Stages:
- BaseName: alpine:3.10.3
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"linscheid.greg@gmail.com"'
    Name: label
  - Name: workdir
    Path: /usr/src/app
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --no-cache bash curl
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - CmdLine:
    - apk add --no-cache openjdk8
    Name: run
    PrependShell: true
  - Key: OPENCV_VERSION
    Name: arg
    Value: 4.1.1
  - CmdLine:
    - apk add --update --no-cache     build-base clang clang-dev cmake pkgconf wget
      openblas openblas-dev     linux-headers     libjpeg-turbo libjpeg-turbo-dev     libpng
      libpng-dev     libwebp libwebp-dev     tiff tiff-dev     jasper-libs jasper-dev     openexr
      openexr-dev     ffmpeg-libs ffmpeg-dev     libavc1394 libavc1394-dev     gstreamer
      gstreamer-dev     gst-plugins-base gst-plugins-base-dev     libgphoto2 libgphoto2-dev
      &&     apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing             --update
      --no-cache libtbb libtbb-dev &&     apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main             --update
      --no-cache python3 python3-dev &&     apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/community             --update
      --no-cache py-numpy py-numpy-dev &&     ln -vfs /usr/bin/python3 /usr/local/bin/python
      &&     ln -vfs /usr/bin/pip3 /usr/local/bin/pip &&     ln -vfs /usr/include/libpng16
      /usr/include/libpng &&     ln -vfs /usr/include/locale.h /usr/include/xlocale.h
      &&     cd /tmp &&     wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.tar.gz
      &&     tar -xvzf $OPENCV_VERSION.tar.gz &&     rm -vrf $OPENCV_VERSION.tar.gz
      &&     mkdir -vp /tmp/opencv-$OPENCV_VERSION/build &&     cd /tmp/opencv-$OPENCV_VERSION/build
      &&     cmake         -D CMAKE_BUILD_TYPE=RELEASE         -D CMAKE_C_COMPILER=/usr/bin/clang         -D
      CMAKE_CXX_COMPILER=/usr/bin/clang++         -D CMAKE_INSTALL_PREFIX=/usr         -D
      INSTALL_PYTHON_EXAMPLES=NO         -D INSTALL_C_EXAMPLES=NO         -D WITH_IPP=NO         -D
      WITH_1394=NO         -D WITH_LIBV4L=NO         -D WITH_V4l=YES         -D WITH_TBB=YES         -D
      WITH_FFMPEG=YES         -D WITH_GPHOTO2=YES         -D WITH_GSTREAMER=YES         -D
      BUILD_DOCS=NO         -D BUILD_TESTS=NO         -D BUILD_PERF_TESTS=NO         -D
      BUILD_EXAMPLES=NO         -D BUILD_opencv_java=NO         -D BUILD_opencv_python2=NO         -D
      BUILD_ANDROID_EXAMPLES=NO         -D PYTHON3_LIBRARY=`find /usr -name libpython3.so`         -D
      PYTHON_EXECUTABLE=`which python3`         -D PYTHON3_EXECUTABLE=`which python3`         -D
      BUILD_opencv_python3=YES .. &&     make -j`grep -c '^processor' /proc/cpuinfo`
      &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual   .build-deps   libc-dev   freetype-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - ./requirements.txt
  - CmdLine:
    - pip3 install --upgrade pip  && pip3 install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && rm -vrf /tmp/opencv-$OPENCV_VERSION && apk del --purge build-base clang
      clang-dev cmake pkgconf wget openblas-dev   openexr-dev gstreamer-dev gst-plugins-base-dev
      libgphoto2-dev   libtbb-dev libjpeg-turbo-dev libpng-dev tiff-dev jasper-dev   ffmpeg-dev
      libavc1394-dev python3-dev py-numpy-dev   .build-deps libc-dev freetype-dev
      &&   rm -vrf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Key: POLYNOTE_VERSION
    Name: arg
    Value: 0.2.17
  - CmdLine:
    - curl -L https://github.com/polynote/polynote/releases/download/${POLYNOTE_VERSION}/polynote-dist.tar.gz   |
      tar -xzvpf -
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.yml
    - ./polynote/config.yml
  - Name: expose
    Ports:
    - "8192"
  - CmdLine:
    - bash polynote/polynote
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.10.3
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10.3
