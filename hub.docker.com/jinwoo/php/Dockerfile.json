{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "JINWOO \u003cjinwoo@yellotravel.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "5.6.22"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"PHP version = ${PHP_VERSION}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "5.6.22"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_LIB",
              "Value": "redis-2.2.8 yaml-1.2.0 amqp-1.7.0 memcached-2.2.0 apcu-4.0.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHALCON_VER",
              "Value": "2.0.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-curl --with-iconv                          --with-libdir=lib64 --with-openssl --enable-opcache                          --with-gd                          --with-mysql                          --with-mysqli                          --with-pdo-mysql                          --enable-sockets                     \t \t --disable-cgi \t\t\t\t\t\t --enable-mysqlnd \t\t\t\t\t\t --enable-bcmath \t\t\t\t\t\t --with-bz2 \t\t\t\t\t\t --enable-calendar \t\t\t\t\t\t --with-curl \t\t\t\t\t\t --with-gd \t\t\t\t\t\t --with-jpeg-dir \t\t\t\t\t\t --enable-gd-native-ttf \t\t\t\t\t\t --enable-mbstring \t\t\t\t\t\t --with-mcrypt \t\t\t\t\t\t --with-mysqli \t\t\t\t\t\t --with-pdo-mysql \t\t\t\t\t\t --enable-pcntl \t\t\t\t\t\t --with-openssl \t\t\t\t\t\t --with-xsl \t\t\t\t\t\t --with-readline \t\t\t\t\t\t --with-zlib \t\t\t\t\t\t --enable-intl \t\t\t\t\t\t --enable-zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_BUILD_DEPS",
              "Value": "bzip2 \t\tre2c \t\tfile \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibjpeg-dev \t\tlibmcrypt-dev \t\tlibpng12-dev \t\tlibreadline6-dev \t\tlibssl-dev \t\tlibxslt1-dev \t\tlibxml2-dev \t\tmysql-client \t\tlibmysqlclient-dev\t\tlibyaml-dev \t\tlibrabbitmq-dev \t\tlibsasl2-dev \t\tlibicu-dev \t\tg++"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/archive.ubuntu.com/ftp.daum.net/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y ca-certificates curl libxml2 autoconf     gcc libc-dev make pkg-config      runit nano less tmux wget git     $PHP_BUILD_DEPS $PHP_EXTRA_BUILD_DEPS     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP7_KEY",
              "Value": "\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP5_KEY",
              "Value": "\"6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3 0BD78B5F97500D450838F95DFE857D9A90D90EC1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gpg --keyserver pool.sks-keyservers.net --recv-keys $PHP5_KEY \t\u0026\u0026 mkdir -p $PHP_INI_DIR/conf.d \t\u0026\u0026 set -x \t\u0026\u0026 curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror\" -o php.tar.bz2 \t\u0026\u0026 curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.bz2.asc/from/this/mirror\" -o php.tar.bz2.asc \t\u0026\u0026 gpg --verify php.tar.bz2.asc \t\u0026\u0026 mkdir -p /usr/src/php \t\u0026\u0026 tar -xof php.tar.bz2 -C /usr/src/php --strip-components=1 \t\u0026\u0026 rm php.tar.bz2* \t\u0026\u0026 cd /usr/src/php \t\u0026\u0026 ./configure     \t--sysconfdir=\"$PHP_INI_DIR\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t$PHP_EXTRA_CONFIGURE_ARGS \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \t\u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \t\u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "userdel www-data \u0026\u0026 groupadd -r www-data -g 433 \u0026\u0026     mkdir /home/www-data \u0026\u0026     mkdir -p /var/www \u0026\u0026     useradd -u 431 -r -g www-data -d /home/www-data -s /sbin/nologin -c \"Docker image user for web application\" www-data \u0026\u0026     chown -R www-data:www-data /home/www-data /var/www \u0026\u0026     chmod 700 /home/www-data \u0026\u0026     chmod 711 /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/"
          ]
        },
        {
          "CmdLine": [
            "cp /usr/src/php/php.ini-production ${PHP_INI_DIR}/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c \"echo 'date.timezone = asia/seoul' \u003e\u003e ${PHP_INI_DIR}/php.ini\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/short_open_tag = Off/short_open_tag = On/g' ${PHP_INI_DIR}/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/pecl \u0026\u0026 cd /usr/src/pecl  \t\u0026\u0026 wget https://github.com/phalcon/cphalcon/archive/phalcon-v${PHALCON_VER}.tar.gz  \t\u0026\u0026 tar zxvf phalcon-v${PHALCON_VER}.tar.gz \u0026\u0026 cd /usr/src/pecl/cphalcon-phalcon-v${PHALCON_VER}/build \t\u0026\u0026 ./install     \u0026\u0026 echo \"extension=phalcon.so\" \u003e $PHP_INI_DIR/conf.d/phalcon.ini \t\u0026\u0026 wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz \t\u0026\u0026 tar xzf libmemcached-1.0.18.tar.gz \t\u0026\u0026 cd libmemcached-1.0.18 \t\u0026\u0026 ./configure --enable-sasl \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 sudo make install     \u0026\u0026 wget http://nz.archive.ubuntu.com/ubuntu/pool/universe/libr/librabbitmq/librabbitmq4_0.7.1-1_amd64.deb \t\u0026\u0026 sudo dpkg -i librabbitmq4_0.7.1-1_amd64.deb \t\u0026\u0026 wget http://nz.archive.ubuntu.com/ubuntu/pool/universe/libr/librabbitmq/librabbitmq-dev_0.7.1-1_amd64.deb \t\u0026\u0026 sudo dpkg -i librabbitmq-dev_0.7.1-1_amd64.deb \t\u0026\u0026 rm -rf *.deb libmemcached-1.0.18* \t\u0026\u0026 rm -rf /usr/src/pecl/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"wget http://getcomposer.org/composer.phar \u0026\u0026 chmod +x composer.phar \u0026\u0026 mv composer.phar /usr/local/bin/composer\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"wget https://phar.phpunit.de/phpunit.phar \u0026\u0026 chmod +x phpunit.phar \u0026\u0026 mv phpunit.phar /usr/local/bin/phpunit\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm -f dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"/usr/local/bin/docker-pecl-install ${PHP_LIB}\" \u0026\u0026 rm -rf /usr/src/pecl/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www",
            "/etc/php"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}