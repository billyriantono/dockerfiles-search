{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "JINWOO \u003cjinwoo@yellotravel.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo $NGINX_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_EXTRA_CONFIGURE_ARGS",
              "Value": "--sbin-path=/usr/sbin                                 --conf-path=/etc/nginx/nginx.conf                                 --with-md5=/usr/lib --with-sha1=/usr/lib                                 --with-http_ssl_module --with-http_dav_module                                 --without-mail_pop3_module --without-mail_imap_module                                 --without-mail_smtp_module"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_BUILD_DEPS",
              "Value": "bzip2 \t\tfile \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibmcrypt-dev \t\tlibreadline6-dev         openssl \t\tlibssl-dev \t\tlibxslt1-dev \t\tlibxml2-dev         libpcre3         libpcre3-dev         curl         libc6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_EXTRA_BUILD_DEPS",
              "Value": "gcc libc-dev make pkg-config                             libxml2                            ca-certificates                            autoconf                            runit nano less tmux wget git"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/archive.ubuntu.com/ftp.daum.net/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y            $NGINX_BUILD_DEPS $NGINX_EXTRA_BUILD_DEPS         --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 gpg --keyserver pgpkeys.mit.edu --recv-key A1C052F8 \t\u0026\u0026 mkdir -p /var/log/nginx \t\u0026\u0026 set -x \t\u0026\u0026 curl -SL \"http://nginx.org/download/${NGINX_VERSION}.tar.gz\" -o nginx.tar.bz2 \t\u0026\u0026 curl -SL \"http://nginx.org/download/${NGINX_VERSION}.tar.gz.asc\" -o nginx.tar.bz2.asc \t\u0026\u0026 gpg --verify nginx.tar.bz2.asc \t\u0026\u0026 mkdir -p /usr/src/nginx \t\u0026\u0026 tar -xof nginx.tar.bz2 -C /usr/src/nginx --strip-components=1 \t\u0026\u0026 rm nginx.tar.bz2* \t\u0026\u0026 cd /usr/src/nginx \t\u0026\u0026 ./configure \t\t$NGINX_EXTRA_CONFIGURE_ARGS \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \t\u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "userdel www-data \u0026\u0026 groupadd -r www-data -g 433 \u0026\u0026 \tmkdir /home/www-data \u0026\u0026 \tmkdir -p /var/www \u0026\u0026 \tuseradd -u 431 -r -g www-data -d /home/www-data -s /sbin/nologin -c \"Docker image user for web application\" www-data \u0026\u0026 \tchown -R www-data:www-data /home/www-data /var/www \u0026\u0026 \tchmod 700 /home/www-data \u0026\u0026 \tchmod 711 /var/www \u0026\u0026     mkdir -p /etc/nginx/conf.d/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/"
          ]
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm -f /dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www",
            "/etc/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}