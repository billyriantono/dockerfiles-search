MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Env:
    - Key: NGINX_VER
      Value: "1.12"
    Name: env
  - Env:
    - Key: PACKAGES_BUILD
      Value: "\"\tca-certificates \tgit-core \tbuild-essential \tzlib1g-dev \tlibpcre3
        \tlibpcre3-dev \tunzip \twget \tlibssl-dev \tautomake \tautoconf \tlibtool
        \tlibgeoip-dev \tlibxml2-dev \tlibcurl4-openssl-dev \tlibyajl-dev \tliblmdb-dev\""
    Name: env
  - Env:
    - Key: PACKAGES_REQUIRED
      Value: "\"        libssl1.0.0         libcurl3         libgeoip1         libyajl2
        \        liblmdb0 \tpkg-config         libxml2\""
    Name: env
  - Env:
    - Key: NGINX_CONFIG
      Value: "\"\t--prefix=/usr \t--conf-path=/etc/nginx/nginx.conf \t--http-log-path=/var/log/nginx/access.log
        \t--error-log-path=/var/log/nginx/error.log \t--lock-path=/var/lock/nginx.lock
        \t--pid-path=/run/nginx.pid \t--modules-path=/usr/lib/nginx/modules \t--http-client-body-temp-path=/var/lib/nginx/body
        \t--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \t--http-proxy-temp-path=/var/lib/nginx/proxy
        \t--http-scgi-temp-path=/var/lib/nginx/scgi \t--http-uwsgi-temp-path=/var/lib/nginx/uwsgi
        \t--with-pcre-jit \t--with-http_ssl_module \t--with-http_stub_status_module
        \t--with-http_auth_request_module \t--with-http_v2_module \t--with-http_dav_module
        \t--with-http_slice_module \t--with-threads \t--with-http_gzip_static_module
        \t--without-http_split_clients_module \t--without-http_userid_module \t--add-module=modules/ngx_testcookie
        \t--add-module=modules/ngx_pagespeed \t--add-module=modules/ngx_modsecurity
        \t--user=www-data \t--group=www-data\""
    Name: env
  - CmdLine:
    - mkdir -p /docker/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /docker/build
  - CmdLine:
    - "apt-get update && apt-get -y install --no-install-recommends         $PACKAGES_BUILD
      \t$PACKAGES_REQUIRED && rm -rf /var/lib/apt/lists/* && echo \"$!/bin/bash\"
      > /docker/env && git clone https://github.com/SpiderLabs/ModSecurity && cd ModSecurity
      && git checkout v3/master && git submodule init && git submodule update && ./build.sh
      && ./configure --prefix=/usr && make -j$(nproc) && make install && cd /docker/build
      && wget http://nginx.org/download/nginx-$(wget -q -O -  http://nginx.org/download/
      | sed -n 's/.*href=\"nginx-\\([^\"]*\\)\\.tar\\.gz.*/\\1/p' | sort -V | grep
      -i ${NGINX_VER}. | tail -n1).tar.gz && tar xf nginx-*.tar.gz && rm nginx-*.tar.gz
      && mv nginx-* nginx && mkdir -p /docker/build/nginx/modules && cd /docker/build/nginx/modules
      && git clone https://github.com/kyprizel/testcookie-nginx-module.git ngx_testcookie
      && git clone https://github.com/pagespeed/ngx_pagespeed.git && cd /docker/build/nginx/modules/ngx_pagespeed
      && echo \"export PAGESPEED_VER=$(git tag -l --sort=-version:refname 'v*' | head
      -n1 | cut -c 2- )\" >> /docker/env && source /docker/env && git checkout v${PAGESPEED_VER}
      && source /docker/env && wget $(scripts/format_binary_url.sh PSOL_BINARY_URL)
      && source /docker/env && tar -zxvf $(echo ${PAGESPEED_VER} | awk -f '-' '{print
      $1}')*.tar.gz && cd /docker/build/nginx/modules && git clone https://github.com/SpiderLabs/ModSecurity-nginx.git
      ngx_modsecurity && cd /docker/build/nginx && ./configure $NGINX_CONFIG && make
      -j$(nproc) && make install && mkdir -p /var/lib/nginx/body && chown -R www-data:www-data
      /var/lib/nginx && rm -r /docker/build && apt-get -y purge $PACKAGES_BUILD &&
      apt-get clean autoclean && apt-get autoremove -y && rm -rf /var/lib/{apt,dpkg,cache,log}/"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /srv
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /usr/sbin/nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
