{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Maintainer": "Jacob Sachs \u003cjacob@amida-tech.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum install -y     epel-release     git     make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/creationix/nvm.git /.nvm \u0026\u0026     echo \". /.nvm/nvm.sh\" \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "0.12.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            ". /.nvm/nvm.sh \u0026\u0026     nvm install $NODE_VERSION \u0026\u0026     nvm use $NODE_VERSION \u0026\u0026     nvm alias default $NODE_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /.nvm/versions/node/v$NODE_VERSION/bin/node /usr/bin/node \u0026\u0026     ln -s /.nvm/versions/node/v$NODE_VERSION/bin/npm /usr/bin/npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y ruby \u0026\u0026     yum install -y gcc ruby-devel rubygems"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem update --system \u0026\u0026     gem install compass; exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g     bower     grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "/src/package.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bower.json",
            "/src/bower.json"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/src\""
        },
        {
          "CmdLine": [
            "echo '{ \"allow_root\": true }' \u003e /root/.bowerrc \u0026\u0026     npm install \u0026\u0026     bower install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/src"
          ]
        },
        {
          "CmdLine": [
            "npm update -g npm \u0026\u0026     npm install grunt-contrib-imagemin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grunt ngconstant:docker \u0026\u0026     grunt build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "grunt",
            "serve:docker"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}