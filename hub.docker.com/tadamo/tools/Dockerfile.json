{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -x;     apk update \u0026\u0026     apk add --no-cache --update     bash     ca-certificates     openssl     curl     bind-tools     netcat-openbsd     nmap     jq     coreutils     openldap-clients     httpie     apache2-utils     py-pip     gettext     nginx     \u0026\u0026     pip install yq     \u0026\u0026     mkdir -p /.httpie \u0026\u0026     chgrp -R 0 /.httpie \u0026\u0026     chmod -R g=u /.httpie     \u0026\u0026     mkdir -p /var/lib/nginx/logs \u0026\u0026     touch /var/lib/nginx/logs/error.log \u0026\u0026     chgrp -R 0     /etc/nginx/nginx.conf     /etc/nginx/conf.d/     /var/log/     /var/lib/nginx     /var/tmp/     \u0026\u0026     chmod -R g=u     /etc/nginx/nginx.conf     /etc/nginx/conf.d/     /var/log/     /var/lib/nginx     /var/tmp/     \u0026\u0026     find / | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf \u0026\u0026     rm -rf /var/cache/* /root/.cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bin/",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx-conf-templates/",
            "/etc/nginx/conf.d/templates"
          ]
        },
        {
          "Env": [
            {
              "Key": "LISTEN_PORT",
              "Value": "8000"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}