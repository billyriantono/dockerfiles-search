MetaArgs: null
Stages:
- BaseName: php:7-apache
  Commands:
  - Maintainer: Fabien EVAIN <fevain@rmn.com>
    Name: maintainer
  - CmdLine:
    - apt-get update --fix-missing   && DEBIAN_FRONTEND=noninteractive apt-get install
      -y --no-install-recommends     php5-dev     php-pear     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     libbz2-dev     libxslt-dev     libldap2-dev     libzmq-dev     git     unzip     locales     nano   &&
      apt-get -y autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Europe/Paris" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure -f noninteractive locales   && echo 'fr_FR.UTF-8 UTF-8' >>
      /etc/locale.gen   && locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) zip bz2 xsl iconv mcrypt json mysqli opcache
      pdo pdo_mysql   && docker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/   && docker-php-ext-install -j$(nproc) gd   &&
      docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/   && docker-php-ext-install
      -j$(nproc) ldap
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu-5.1.5
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mongodb-1.1.8
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install redis
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable redis
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install -f zmq-1.1.3
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable zmq
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /etc/apache2/sites-available/ && a2dissite *
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - 000-default.conf
    - /etc/apache2/sites-available/000-default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - 010-site.conf
    - /etc/apache2/sites-available/010-site.conf
  - CmdLine:
    - chmod 775 /etc/apache2/sites-available/*
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite 000-default 010-site
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod headers
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod deflate
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod expires
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.conf
    - /etc/apache2/apache2.conf
  - Env:
    - Key: APACHE_RUN_USER
      Value: www-data
    Name: env
  - Env:
    - Key: APACHE_RUN_GROUP
      Value: www-data
    Name: env
  - Env:
    - Key: APACHE_RUN_DIR
      Value: /var/run/apache2
    Name: env
  - Env:
    - Key: APACHE_LOCK_DIR
      Value: /var/lock/apache2
    Name: env
  - Env:
    - Key: APACHE_PID_FILE
      Value: /var/run/apache2.pid
    Name: env
  - Env:
    - Key: APACHE_LOG_DIR
      Value: /var/log/apache2
    Name: env
  - Env:
    - Key: APACHE_SERVERADMIN
      Value: admin@localhost
    Name: env
  - Env:
    - Key: APACHE_SERVERNAME
      Value: localhost
    Name: env
  - Env:
    - Key: APACHE_SERVERALIAS
      Value: docker.localhost
    Name: env
  - Env:
    - Key: APACHE_DOCUMENTROOT
      Value: /var/www
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.2.0
    Name: env
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer   && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"
    Name: run
    PrependShell: true
  - CmdLine:
    - php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer
      --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 6.5.0
    Name: env
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$"
      SHASUMS256.txt | sha256sum -c -   && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: GULP_CLI_VERSION
      Value: 1.2.2
    Name: env
  - Env:
    - Key: BOWER_VERSION
      Value: 1.7.9
    Name: env
  - CmdLine:
    - npm install --global gulp-cli@$GULP_CLI_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install  --global bower@$BOWER_VERSION
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: php:7-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7-apache
