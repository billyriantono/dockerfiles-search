MetaArgs: null
Stages:
- BaseName: php:7.3-apache
  Commands:
  - Maintainer: Eli Van Zoeren <eli@elivz.com>
    Name: maintainer
  - Env:
    - Key: PUBLIC_FOLDER
      Value: /public_html
    Name: env
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri -e   's!/var/www/html!/var/www${PUBLIC_FOLDER}!g'   /etc/apache2/apache2.conf
      /etc/apache2/conf-available/*.conf /etc/apache2/sites-available/*.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yqq --no-install-recommends   autoconf automake
      libtool libpq-dev nasm make pkg-config git sudo libicu-dev ssmtp   libfreetype6-dev
      libpng-dev libtiff-dev libgif-dev libjpeg-dev libmagickwand-dev ghostscript   jpegoptim
      optipng webp rsync openssh-client ca-certificates tar gzip unzip zip libzip-dev
      gnupg   && apt-get -y autoremove && apt-get clean   && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick redis xdebug   && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql   &&
      docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr   &&
      docker-php-ext-install gd bcmath mbstring mysqli pgsql pdo pdo_mysql pdo_pgsql
      opcache iconv calendar zip intl   && docker-php-ext-enable imagick redis xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - custom.ini
    - /usr/local/etc/php/conf.d/
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /tmp/composer
    Name: env
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/
      --filename=composer   && /usr/local/bin/composer global require hirak/prestissimo
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_CACHE_FOLDER
      Value: /tmp/yarn
    Name: env
  - Env:
    - Key: npm_config_cache
      Value: /tmp/npm
    Name: env
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -   && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | sudo apt-key add -   && echo "deb https://dl.yarnpkg.com/debian/ stable main"
      | sudo tee /etc/apt/sources.list.d/yarn.list   && apt-get update && apt-get
      install -y build-essential nodejs yarn   && /usr/bin/npm install -g npm gulp
      svgo
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/yarn && chown -R www-data:www-data /tmp/yarn   && mkdir /var/www/node_modules
      && chown -R www-data:www-data /var/www/node_modules   && mkdir /var/www/dist
      && chown -R www-data:www-data /var/www/dist   && mkdir /var/www/dist/vendor
      && chown -R www-data:www-data /var/www/dist/vendor   && mkdir /var/www/dist/storage
      && mkdir /var/www/dist/storage/runtime && chown -R www-data:www-data /var/www/dist/storage/runtime   &&
      chown -R www-data:www-data /tmp/npm   && chown -R www-data:www-data /tmp/composer*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  From:
    Image: php:7.3-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-apache
