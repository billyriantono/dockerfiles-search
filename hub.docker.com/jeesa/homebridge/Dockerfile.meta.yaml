MetaArgs:
- DefaultValue: null
  Key: S6_ARCH
  ProvidedValue: null
  Value: null
Stages:
- BaseName: oznu/s6-node:10.16.0-${S6_ARCH:-amd64}
  Commands:
  - Key: FFMPEG_VERSION
    Name: arg
    Value: 4.1.2
  - Key: PREFIX
    Name: arg
    Value: /opt/ffmpeg
  - Key: LD_LIBRARY_PATH
    Name: arg
    Value: /opt/ffmpeg/lib
  - Key: MAKEFLAGS
    Name: arg
    Value: '"-j4"'
  - CmdLine:
    - mkdir /opt/ffmpeg
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update build-base coreutils freetype-dev gcc lame-dev libogg-dev libass
      libass-dev libvpx-dev libvorbis-dev libwebp-dev libtheora-dev opus-dev pkgconf
      pkgconfig rtmpdump-dev wget x264-dev x265-dev yasm git python make g++ avahi-compat-libdns_sd
      avahi-dev dbus iputils sudo nano
    Name: run
    PrependShell: true
  - CmdLine:
    - echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
      && apk add --update fdk-aac-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ && wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz
      && tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz && rm ffmpeg-${FFMPEG_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ffmpeg-${FFMPEG_VERSION} && ./configure --enable-version3 --enable-gpl
      --enable-nonfree --enable-small --enable-libmp3lame --enable-libx264 --enable-libx265
      --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac
      --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample
      --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay
      --extra-cflags="-I${PREFIX}/include" --extra-ldflags="-L${PREFIX}/lib" --extra-libs="-lpthread
      -lm" --prefix="${PREFIX}" && make -j8 && make install && make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/* /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/ffmpeg/bin:$PATH
    Name: env
  - CmdLine:
    - chmod 4755 /bin/ping && mkdir /homebridge && npm set global-style=true && npm
      set package-lock=false
    Name: run
    PrependShell: true
  - Env:
    - Key: HOMEBRIDGE_VERSION
      Value: 0.4.50
    Name: env
  - CmdLine:
    - npm install -g --unsafe-perm homebridge@${HOMEBRIDGE_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: CONFIG_UI_VERSION
      Value: 4.5.1
    Name: env
  - CmdLine:
    - npm install -g --unsafe-perm homebridge-config-ui-x@${CONFIG_UI_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /homebridge
  - Name: volume
    Volumes:
    - /homebridge
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - Key: AVAHI
    Name: arg
    Value: null
  - CmdLine:
    - '[ "${AVAHI:-1}" = "1" ] || (echo "Removing Avahi" && rm -rf /etc/services.d/avahi
      /etc/services.d/dbus /etc/cont-init.d/40-dbus-avahi)'
    Name: run
    PrependShell: true
  From:
    Image: oznu/s6-node:10.16.0-${S6_ARCH:-amd64}
  Name: ""
  Platform: ""
  SourceCode: FROM oznu/s6-node:10.16.0-${S6_ARCH:-amd64}
