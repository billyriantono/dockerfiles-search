MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: webofmars <contact@webofmars.com>
    Name: maintainer
  - CmdLine:
    - "echo \"deb http://mirrors.us.kernel.org/ubuntu/ trusty main restricted universe
      multiverse\" > /etc/apt/sources.list; \t  echo \"deb http://mirrors.us.kernel.org/ubuntu/
      trusty-updates main restricted universe multiverse\" >> /etc/apt/sources.list;
      \t  echo \"deb http://mirrors.us.kernel.org/ubuntu/ trusty-backports main restricted
      universe multiverse\" >> /etc/apt/sources.list; \t  echo \"deb http://mirrors.us.kernel.org/ubuntu/
      trusty-security main restricted universe multiverse\" >> /etc/apt/sources.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "export DEBIAN_FRONTEND=noninteractive;     apt-get update; \t  apt-get -qq
      install wget ssh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-key adv --keyserver keys.gnupg.net --recv-keys 14AA40EC0831756756D7F66C4F4EA0AAE5267A6C;
      \t  echo \"deb http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu trusty main\"
      >> /etc/apt/sources.list; \t  echo \"deb-src http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu
      trusty main\" >> /etc/apt/sources.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key
      add - > /dev/null 2>&1; \t  echo \"deb http://pkg.jenkins-ci.org/debian binary/\"
      > /etc/apt/sources.list.d/jenkins.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "export DEBIAN_FRONTEND=noninteractive; \t  apt-get update; \t  apt-get -qq
      install --no-install-recommends php5 php5-cli php5-xsl php5-json php5-curl php5-sqlite
      php5-mysqlnd php5-xdebug php5-intl php5-mcrypt php-pear curl git ant jenkins
      docker.io python-pip;     pip install awscli"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - set-docker-gid.sh
    - /usr/local/bin/set-docker-gid
  - CmdLine:
    - chmod a+x /usr/local/bin/set-docker-gid
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-compose-run.sh
    - /usr/local/bin/docker-compose
  - CmdLine:
    - chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-docker-machine
    - /opt/tools/
  - CmdLine:
    - bash /opt/tools/install-docker-machine
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-rancher-compose
    - /opt/tools/
  - CmdLine:
    - bash /opt/tools/install-rancher-compose
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config.xml.1
    - /var/lib/jenkins/config.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config-admin.xml
    - /var/lib/jenkins/users/admin/config.xml
  - CmdLine:
    - "service jenkins start; \t  while ! echo exit | nc -z -w 3 localhost 8080; do
      sleep 3; done; \t  while curl -s http://localhost:8080 | grep \"Please wait\"
      >/dev/null; do echo \"Waiting for Jenkins to start..\" && sleep 3; done; \t
      \ echo \"Jenkins started\";     cd /var/lib/jenkins && wget http://localhost:8080/jnlpJars/jenkins-cli.jar;
      \    java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin ace-editor
      ant antisamy-markup-formatter branch-api build-timeout cloudbees-folder credentials-binding
      credentials durable-task email-ext external-monitor-job git-client git-server
      git github-api github-branch-source github-organization-folder github gradle
      handlebars icon-shim javadoc jquery-detached junit ldap mailer mapdb-api matrix-auth
      matrix-project momentjs pam-auth pipeline-build-step pipeline-input-step pipeline-rest-api
      pipeline-stage-step pipeline-stage-view plain-credentials scm-api script-security
      ssh-credentials ssh-slaves structs subversion timestamper token-macro windows-slaves
      workflow-aggregator workflow-api workflow-basic-steps workflow-cps-global-lib
      workflow-cps workflow-durable-task-step workflow-job workflow-multibranch workflow-scm-step
      workflow-step-api workflow-support ws-cleanup;     java -jar jenkins-cli.jar
      -s http://localhost:8080 install-plugin checkstyle cloverphp crap4j dry htmlpublisher
      jdepend plot pmd violations warnings xunit git ansicolor;     java -jar jenkins-cli.jar
      -s http://localhost:8080 install-plugin octoperf docker-commons docker-build-step;
      \    java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin envinject
      aws-credentials aws-java-sdk ec2;     java -jar jenkins-cli.jar -s http://localhost:8080
      safe-restart"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config.xml.2
    - /var/lib/jenkins/config.xml
  - CmdLine:
    - "sed -i 's|disable_functions.*=|;disable_functions=|' /etc/php5/cli/php.ini;
      \t  echo \"xdebug.max_nesting_level = 500\" >> /etc/php5/mods-available/xdebug.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /home/jenkins/composerbin && chown -R jenkins:jenkins /home/jenkins;
      \t  sudo -H -u jenkins bash -c ' \t\t  curl -sS https://getcomposer.org/installer
      | php -- --install-dir=/home/jenkins/composerbin --filename=composer;'; \t  ln
      -s /home/jenkins/composerbin/composer /usr/local/bin/; \t  sudo -H -u jenkins
      bash -c '   \t\texport COMPOSER_BIN_DIR=/home/jenkins/composerbin;   \t\texport
      COMPOSER_HOME=/home/jenkins;   \t\tcomposer global require \"phpunit/phpunit=*\"
      --prefer-source --no-interaction;   \t\tcomposer global require \"squizlabs/php_codesniffer=*\"
      --prefer-source --no-interaction;   \t\tcomposer global require \"phploc/phploc=*\"
      --prefer-source --no-interaction;   \t\tcomposer global require \"pdepend/pdepend=*\"
      --prefer-source --no-interaction;   \t\tcomposer global require \"phpmd/phpmd=*\"
      --prefer-source --no-interaction;   \t\tcomposer global require \"sebastian/phpcpd=*\"
      --prefer-source --no-interaction;   \t\tcomposer global require \"theseer/phpdox=*\"
      --prefer-source --no-interaction; ';   \tln -s /home/jenkins/composerbin/pdepend
      /usr/local/bin/;   \tln -s /home/jenkins/composerbin/phpcpd /usr/local/bin/;
      \  \tln -s /home/jenkins/composerbin/phpcs /usr/local/bin/;   \tln -s /home/jenkins/composerbin/phpdox
      /usr/local/bin/;   \tln -s /home/jenkins/composerbin/phploc /usr/local/bin/;
      \  \tln -s /home/jenkins/composerbin/phpmd /usr/local/bin/;   \tln -s /home/jenkins/composerbin/phpunit
      /usr/local/bin/"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'if [ -z \"$TIME_ZONE\" ]; then echo \"No TIME_ZONE env set!\" && exit
      1; fi' > /set_timezone.sh;   \techo \"sed -i 's|;date.timezone.*=.*|date.timezone='\\$TIME_ZONE'|'
      /etc/php5/cli/php.ini;\" >> /set_timezone.sh;   \techo \"echo \\$TIME_ZONE >
      /etc/timezone;\" >> /set_timezone.sh;   \techo \"export DEBCONF_NONINTERACTIVE_SEEN=true
      DEBIAN_FRONTEND=noninteractive;\" >> /set_timezone.sh;   \techo \"dpkg-reconfigure
      tzdata\" >> /set_timezone.sh;   \techo \"echo time zone set to: \\$TIME_ZONE\"
      \ >> /set_timezone.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'if [ -n \"$TIME_ZONE\" ]; then sh /set_timezone.sh; fi;' > /run_all.sh;
      \    echo '/usr/local/bin/set-docker-gid' >> /run_all.sh;     echo 'chown -R
      jenkins:jenkins /var/lib/jenkins' >> /run_all.sh;   \techo \"service jenkins
      start\" >> /run_all.sh;     echo \"echo>/var/log/jenkins/jenkins.log\" >> /run_all.sh;
      \  \techo \"tail -f /var/log/jenkins/jenkins.log;\" >> /run_all.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* && apt-get clean
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - sh
    - /run_all.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
