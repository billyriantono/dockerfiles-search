MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - CmdLine:
    - "yum update -y && yum install -y ca-certificates \t\tcurl \t\twget \t\tbzip2
      \t\tunzip \t\txz-utils \t\twhich \t&& rm -rf /var/lib/yum/repos/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION
      Value: 1.8.0.131
    Name: env
  - Env:
    - Key: JAVA_CENTOS_VERSION
      Value: 2.b11.el7_3
    Name: env
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-1.8.0-openjdk-$JAVA_VERSION-$JAVA_CENTOS_VERSION.$(uname
      -m)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home/jre
    Name: env
  - CmdLine:
    - "set -ex; \t\tyum update -y; \tyum install -y \t\tjava-1.8.0-openjdk-headless-\"$JAVA_VERSION\"-\"$JAVA_CENTOS_VERSION\"
      \t\tjava-1.8.0-openjdk-devel-\"$JAVA_VERSION\"-\"$JAVA_CENTOS_VERSION\" \t;
      \trm -rf /var/lib/yum/repos/*;"
    Name: run
    PrependShell: true
  - Env:
    - Key: CATALINA_HOME
      Value: /usr/local/tomcat
    Name: env
  - Env:
    - Key: PATH
      Value: $CATALINA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$CATALINA_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - Env:
    - Key: TOMCAT_NATIVE_LIBDIR
      Value: $CATALINA_HOME/native-jni-lib
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42
        47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7
        61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7
        79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE
        A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7
        DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE
        F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23
    Name: env
  - CmdLine:
    - "set -ex; \tfor key in $GPG_KEYS; do \t\tgpg --keyserver\tkeyserver.ubuntu.com
      --recv-keys \"$key\"; \tdone"
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 8.5.15
    Name: env
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.0.2k
    Name: env
  - Env:
    - Key: TOMCAT_TGZ_URL
      Value: https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
    Name: env
  - Env:
    - Key: TOMCAT_ASC_URL
      Value: https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
    Name: env
  - Env:
    - Key: OPENSSL_URL
      Value: https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz
    Name: env
  - CmdLine:
    - "set -x \t\t&& yum install -y \t   perl        tar        gcc        make        glibc-common
      \t   apr-devel \t&& wget -O openssl.tar.gz \"$OPENSSL_URL\" \t&& tar -xvf openssl.tar.gz
      \t&& ( \t   cd openssl-\"$OPENSSL_VERSION\" \t   && ./config -fPIC\t   && make
      \t   && make test \t   && make install \t   && cd .. \t   && rm -rf openssl*
      \t) \t&& wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" \t&& wget -O tomcat.tar.gz.asc
      \"$TOMCAT_ASC_URL\" \t&& gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz
      \t&& tar -xvf tomcat.tar.gz --strip-components=1 \t&& rm bin/*.bat \t&& rm tomcat.tar.gz*
      \t\t&& nativeBuildDir=\"$(mktemp -d)\" \t&& tar -xvf bin/tomcat-native.tar.gz
      -C \"$nativeBuildDir\" --strip-components=1 \t&& ( \t\texport CATALINA_HOME=\"$PWD\"
      \t\t&& cd \"$nativeBuildDir/native\" \t\t&& gnuArch=\"$(uname -m)\" \t\t&& ./configure
      \t\t\t--build=\"$gnuArch\" \t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \t\t\t--prefix=\"$CATALINA_HOME\"
      \t\t\t--with-apr=\"$(which apr-1-config)\" \t\t\t--with-java-home=\"$(docker-java-home)\"
      \t\t\t--with-ssl=yes \t\t&& make -j$(getconf _NPROCESSORS_ONLN) \t\t&& make
      install \t) \t&& rm -rf \"$nativeBuildDir\" \t&& rm bin/tomcat-native.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e     && unset CATALINA_HOME \t&& nativeLines=\"$(catalina.sh configtest
      2>&1)\" \t&& nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\"
      \t&& nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \t&& if ! echo \"$nativeLines\"
      | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \t\techo
      >&2 \"$nativeLines\"; \t\texit 1; \tfi"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - catalina.sh
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
