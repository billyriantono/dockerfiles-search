{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "namikister/chainer",
      "SourceCode": "FROM namikister/chainer",
      "Platform": "",
      "From": {
        "Image": "namikister/chainer"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Yuta Namiki \u003cnamikister@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         libsqlite3-dev         libzmq3-dev         pandoc         sqlite3         texlive-fonts-recommended         texlive-latex-base         texlive-latex-extra \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini \u003e tini \u0026\u0026     echo \"d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b *tini\" | sha256sum -c - \u0026\u0026     mv tini /usr/local/bin/tini \u0026\u0026     chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 --no-cache-dir install ipykernel \u0026\u0026     pip3 --no-cache-dir install ipykernel \u0026\u0026         python2 -m ipykernel.kernelspec \u0026\u0026     python3 -m ipykernel.kernelspec \u0026\u0026     rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --branch 4.4.0 https://github.com/jupyter/notebook.git /usr/src/jupyter-notebook"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "BUILD_DEPS=\"nodejs-legacy npm\" \u0026\u0026     apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq $BUILD_DEPS \u0026\u0026         pip3 install --no-cache-dir /usr/src/jupyter-notebook \u0026\u0026     pip2 install --no-cache-dir widgetsnbextension \u0026\u0026     pip3 install --no-cache-dir widgetsnbextension \u0026\u0026     pip3 install --no-cache-dir jupyter_contrib_nbextensions \u0026\u0026         npm cache clean \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /root/.npm \u0026\u0026     rm -rf /root/.cache \u0026\u0026     rm -rf /root/.config \u0026\u0026     rm -rf /root/.local \u0026\u0026     rm -rf /root/tmp \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get purge -y --auto-remove         -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p -m 700 /root/.jupyter/ \u0026\u0026     echo \"c.NotebookApp.ip = '*'\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebooks"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--no-browser"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}