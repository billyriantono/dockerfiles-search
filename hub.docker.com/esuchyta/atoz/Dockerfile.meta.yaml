MetaArgs: null
Stages:
- BaseName: debian:7.9
  Commands:
  - Maintainer: Eric Suchyta <eric.d.suchyta@gmail.com>
    Name: maintainer
  - Env:
    - Key: prefix
      Value: /prefix
    Name: env
  - CmdLine:
    - "mv /bin/sh /bin/sh.orig && ln -s /bin/bash /bin/sh && \tmkdir $prefix && mkdir
      /software && \tapt-get update && apt-get install -y \t\t\t\t\tgcc g++ python-dev
      libmpich2-dev libxml2 gfortran \t\t\t\t\tmake build-essential libtool m4 automake
      \t\t\t\t\tbzip2 libbz2-dev zlib1g zlib1g-dev \t\t\t\t\tgit wget \t\t\t\t\tvim
      screen && \techo 'startup_message off' > ~/.screenrc && \tcd /software && wget
      https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py &&
      \t\tpip install numpy && \tcd /software && wget http://www.msweet.org/files/project3/mxml-2.7.tar.gz
      && \t\ttar xvzf mxml-2.7.tar.gz && rm mxml-2.7.tar.gz && cd mxml-2.7 && \t\t./configure
      --prefix=$prefix && make && make install && cd ../ && rm -r mxml-2.7 && \tcd
      /software && wget http://www.hdfgroup.org/ftp/lib-external/szip/2.1/src/szip-2.1.tar.gz
      && \t\ttar xvzf szip-2.1.tar.gz && rm szip-2.1.tar.gz && cd szip-2.1 && \t\t./configure
      --prefix=$prefix && make && make install && cd ../ && rm -r szip-2.1 && \tcd
      /software && wget https://googledrive.com/host/0B4AAwvZlUdfeX3BmN3ZUcTFmb0U
      -O dataspaces-1.6.0.tar.gz && \t\ttar xvzf dataspaces-1.6.0.tar.gz && rm dataspaces-1.6.0.tar.gz
      && cd dataspaces-1.6.0 && ./autogen.sh && \t\tCC=mpicc FC=mpif90 CFLAGS=\"-g
      -std=gnu99 -fPIC\" LIBS=\"-lm\" ./configure --prefix=$prefix --enable-dart-tcp
      && make && make install && \t\tcd ../ && rm -r dataspaces-1.6.0 && \tcd /software
      && wget http://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.8.17.tar.gz && \t\ttar
      xvzf hdf5-1.8.17.tar.gz && rm hdf5-1.8.17.tar.gz && \texport SDIR=phdf5-1.8.17
      && export PREFIX=$prefix/phdf5 && export CODE=hdf5-1.8.17 && export LD_LIBRARY_PATH=$prefix/lib
      && \t\tcp -r $CODE $SDIR && cd $SDIR && \t\tCC=mpicc FC=mpif90 ./configure --with-zlib=/usr
      --with-szlib=$prefix --enable-fortran --enable-parallel --with-pic --prefix=$PREFIX
      && \t\tmake && make install && cd ../ && rm -r $SDIR && \texport SDIR=shdf5-1.8.17
      && export PREFIX=$prefix/shdf5 && mv $CODE $SDIR && cd $SDIR && \t\tCC=gcc FC=f95
      ./configure --with-zlib=/usr --with-szlib=$prefix --enable-fortran --prefix=$PREFIX
      && \t\tmake && make install && cd ../ && rm -r $SDIR && \tcd /software && wget
      ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.0.tar.gz && \t\ttar xvzf netcdf-4.4.0.tar.gz
      && rm netcdf-4.4.0.tar.gz && \texport PREFIX=$prefix/pnc4 && export SDIR=pnetcdf-4.4.0
      && export H5DIR=$prefix/phdf5 && export LD_LIBRARY_PATH=${H5DIR}/lib && export
      CODE=netcdf-4.4.0 && \t\tcp -r $CODE $SDIR && cd $SDIR && \t\tcd ../ && rm -r
      $SDIR && \texport PREFIX=$prefix/snc4 && export SDIR=snetcdf-4.4.0 && export
      H5DIR=$prefix/shdf5 && export LD_LIBRARY_PATH=${H5DIR}/lib && export CODE=netcdf-4.4.0
      && \t\tmv $CODE $SDIR && cd $SDIR && \t\tCC=gcc FC=f95 CPPFLAGS=-I${H5DIR}/include
      LDFLAGS=-L${H5DIR}/lib ./configure --enable-netcdf4 --prefix=$PREFIX && \t\tmake
      && make install && cd ../ && rm -r $SDIR && \tcd /software && wget http://computation.llnl.gov/projects/floating-point-compression/download/zfp-0.5.0.tar.gz
      && \t\ttar xvzf zfp-0.5.0.tar.gz && rm zfp-0.5.0.tar.gz && cd zfp-0.5.0 && make
      && \tapt-get remove --purge -y automake && \t\tcd /software && wget http://ftp.gnu.org/gnu/automake/automake-1.15.tar.gz
      && \t\ttar xvzf automake-1.15.tar.gz && rm automake-1.15.tar.gz && cd automake-1.15
      && \t\t./configure && make && make install && cd ../ && rm -r automake-1.15"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /software && git clone https://github.com/ornladios/ADIOS.git && \tcd ADIOS
      && git checkout -b zfp origin/zfp && ./autogen.sh && \tCFLAGS=\"-fPIC\" MPICC=mpicc
      MPICXX=mpicxx MPIFC=mpif90 CC=gcc CXX=g++ FC=gfortran ./configure \t\t--prefix=$prefix
      \t\t--with-mxml=$prefix \t\t--with-dataspaces-incdir=$prefix/include --with-dataspaces-libdir=$prefix/lib
      \t\t--with-phdf5-incdir=$prefix/phdf5/include --with-phdf5-libdir=$prefix/phdf5/lib
      \t\t--with-hdf5-incdir=$prefix/shdf5/include --with-hdf5-libdir=$prefix/shdf5/lib
      \t\t--with-netcdf-incdir=$prefix/snc4/include --with-netcdf-libdir=$prefix/snc4/lib
      \t\t--with-bzip2=/usr --with-zlib=/usr --with-szip=$prefix \t\t--with-zfp=/software/zfp-0.5.0
      && \tmake && make install && export PATH=\"$prefix/bin:${PATH}\" && \tcd wrappers/numpy/
      && make MPI=y python && python setup.py install && \tcd ../../../ && cd /software/ADIOS/config
      && git update-index --assume-unchanged libtool.m4 ltmain.sh ltoptions.m4 ltsugar.m4
      ltversion.m4 lt~obsolete.m4 && \techo \"TEST4\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"export ADIOS_DIR=\\\"$prefix\\\"\" > ~/.bashrc && \techo 'export PATH=\"${ADIOS_DIR}/bin:${PATH}\"'
      >> ~/.bashrc && \techo 'export ADIOS_INC=\"$(adios_config -c)\"' >> ~/.bashrc
      && \techo 'export ADIOS_LIB=\"$(adios_config -l)\"' >> ~/.bashrc && \techo 'export
      LD_LIBRARY_PATH=\"${ADIOS_DIR}/lib:${ADIOS_DIR}/phdf5/lib:/software/zfp-0.5.0/lib\"'
      >> ~/.bashrc && \techo 'export C_INCLUDE_PATH=\"${ADIOS_DIR}/include:/software/zfp-0.5.0/inc\"'
      >> ~/.bashrc && \techo 'if [ -f ~/.bashrc ]; then source ~/.bashrc; fi' >> ~/.bash_profile
      && \techo 'export SCREEN_LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\"' >> ~/.bashrc
      && \techo 'export LD_LIBRARY_PATH=$SCREEN_LD_LIBRARY_PATH' >> ~/.screenrc-ld
      && \techo -e '\\nfunction zfp_config { if [ \"$1\" = \"-c\" ]; then echo \"-I/software/zfp-0.5.0/inc\";
      elif [ \"$1\" = \"-l\" ]; then echo \"-L/software/zfp-0.5.0/lib/ -lzfp -lm\";
      fi; }' >> ~/.bashrc && \techo 'function zfp_test { if [ \"$1\" != \"--no-build\"
      ]; then cd /software/ADIOS/; make clean > makelog.txt && make >> makelog.txt
      && make install >> makelog.txt; fi && cd /software/AtoZ/examples/ && mpicc -o
      write write-simple.c $(adios_config -c) $(adios_config -l) && ./write && mpicc
      -o read read-simple.c $(adios_config -c) $(adios_config -l) && ./read; cd /software/ADIOS/;
      }' >> ~/.bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y procps curl && \tcd /software && git clone https://github.com/suchyta1/suchyta_utils.git
      && cd suchyta_utils && python setup.py install && \tmkdir -p ~/.vim/autoload
      ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
      && mkdir ~/.vim/tmp && \tgit clone https://github.com/honza/dockerfile.vim.git
      ~/.vim/bundle/dockerfile.vim && \tgit clone https://github.com/klen/python-mode.git
      ~/.vim/bundle/python-mode && \tgit clone https://github.com/vim-airline/vim-airline.git
      ~/.vim/bundle/vim-airline && \tcd /software && \tgit clone https://github.com/suchyta1/configs.git
      && \tln -s /software/configs/vim ~/.vimrc && \tln -s /software/configs/git ~/.gitconfig
      && \tmkdir ~/.ssh && ln -s /software/configs/ssh ~/.ssh/config && \tcd ~ &&
      wget https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
      && echo -e '\\nsource ~/git-completion.bash' >> ~/.bashrc && \tcd /software
      && git clone https://github.com/suchyta1/AtoZ.git"
    Name: run
    PrependShell: true
  From:
    Image: debian:7.9
  Name: ""
  Platform: ""
  SourceCode: FROM debian:7.9
