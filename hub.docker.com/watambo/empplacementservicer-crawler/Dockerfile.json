{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Maintainer": "watambo \u003cwatanabe.ryosuke@vi-king.net\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "rpm --import http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y epel-release \u0026\u0026     yum install -y wget unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://chromedriver.storage.googleapis.com/2.42/chromedriver_linux64.zip \u0026\u0026     unzip chromedriver_linux64.zip \u0026\u0026     mv chromedriver /usr/local/bin/ \u0026\u0026     chown root:root /usr/local/bin/chromedriver \u0026\u0026     yum install -y libX11 GConf2 fontconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -n \u003e /etc/yum.repos.d/google-chrome.repo \u0026\u0026     echo $'[google chrome]\\nname=google-chrome\\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub' \u003e /etc/yum.repos.d/google-chrome.repo \u0026\u0026     curl https://intoli.com/install-google-chrome.sh | bash \u0026\u0026     yum install -y google-chrome-unstable libOSMesa google-noto-cjk-fonts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y git gcc zlib-devel bzip2 bzip2-devel readline readline-devel sqlite sqlite-devel openssl openssl-devel libffi-devel.x86_64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "$HOME/.pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone git://github.com/yyuu/pyenv.git ~/.pyenv \u0026\u0026     pyenv install 3.7.0 \u0026\u0026     pyenv global 3.7.0 \u0026\u0026     pyenv rehash \u0026\u0026     echo 'eval \"$(pyenv init -)\"' \u003e\u003e ~/.bashrc \u0026\u0026     eval \"$(pyenv init -)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "."
          ]
        },
        {
          "CmdLine": [
            "pip install -U pip \u0026\u0026 pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app/"
          ]
        }
      ]
    }
  ]
}