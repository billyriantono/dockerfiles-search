MetaArgs: null
Stages:
- BaseName: consol/ubuntu-xfce-vnc
  Commands:
  - Name: user
    User: "0"
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update --fix-missing &&     apt-get install -y wget bzip2 ca-certificates
      libglib2.0-0 libxext6     libsm6 libxrender1 git mercurial subversion &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh
      -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm
      ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
      &&     echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc &&     echo "conda
      activate base" >> ~/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/v0.18.0/tini
    - /usr/bin/tini
  - CmdLine:
    - chmod +x /usr/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update --fix-missing && apt-get upgrade -y &&     apt-get install -y
      cmake swig libgtest-dev python-pygame python-scipy autoconf libtool pkg-config
      libgdal-dev libxerces-c-dev &&     apt-get install -y  libproj-dev libfox-1.6-dev
      libxml2-dev libxslt1-dev build-essential curl unzip flex bison python python-dev
      python3-dev &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install --upgrade pip setuptools &&     conda update -n base
      conda &&     pip --no-cache-dir install cmake cython
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ && git clone https://github.com/flow-project/flow.git &&     cd flow &&     git
      checkout v0.3.0 &&     conda env create -f environment.yml &&     python setup.py
      develop &&     echo 'export PYTHONPATH="$HOME/flow:$PYTHONPATH"' >> ~/.bashrc
      &&     ./scripts/setup_sumo_ubuntu1604.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ &&     git clone https://github.com/cathywu/rllab-multiagent.git &&     cd
      rllab-multiagent &&     conda env create -f environment.yml &&     python setup.py
      develop &&     echo 'export PYTHONPATH="$HOME/rllab-multiagent:$PYTHONPATH"'
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source activate flow" >> /root/.bashrc &&     echo "source activate flow"
    Name: run
    PrependShell: true
  - Env:
    - Key: BASH_ENV
      Value: /root/.bashrc
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y libboost-dev libboost-test-dev libboost-program-options-dev
      libboost-filesystem-dev     libboost-thread-dev libevent-dev automake libtool
      flex bison pkg-config g++ libssl-dev &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/apache/thrift &&     cd thrift &&     ./bootstrap.sh
      &&     ./configure && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ && conda install libgcc jupyter &&     apt-get update &&     apt-get install
      -y cmake pkg-config build-essential autoconf curl libtool libboost-dev libboost-filesystem-dev
      libboost-system-dev unzip bison openssl &&     rm -rf /var/lib/apt/lists/* &&     git
      clone https://github.com/eugenevinitsky/ray &&     cd ray/python && python setup.py
      develop &&     echo 'export PYTHONPATH="$HOME/flow:$PYTHONPATH"' >> ~/.bashrc
      &&     pip --no-cache-dir install lz4 gym==0.10.5
    Name: run
    PrependShell: true
  - Name: user
    User: "0"
  From:
    Image: consol/ubuntu-xfce-vnc
  Name: ""
  Platform: ""
  SourceCode: FROM consol/ubuntu-xfce-vnc
