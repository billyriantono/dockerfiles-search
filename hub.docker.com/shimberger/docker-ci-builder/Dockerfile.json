{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'APT::Get::Assume-Yes \"true\";' \u003e /etc/apt/apt.conf.d/90circleci   \u0026\u0026 echo 'DPkg::Options \"--force-confnew\";' \u003e\u003e /etc/apt/apt.conf.d/90circleci"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"apt-get update \u0026\u0026 apt-get install -y sudo wget software-properties-common \u0026\u0026 add-apt-repository -y ppa:webupd8team/java \u0026\u0026 apt-get update \u0026\u0026 apt-get clean\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"apt-get install -y curl debconf-utils rsync git-core vim lftp ssh imagemagick python3-pip build-essential net-tools netcat unzip zip bzip2 parallel xz-utils \u0026\u0026 apt-get clean\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen C.UTF-8 || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL   \u0026\u0026 chmod +x /usr/bin/jq   \u0026\u0026 jq --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"\techo 'oracle-java8-installer shared/accepted-oracle-license-v1-1 select true' |  debconf-set-selections \u0026\u0026 \techo 'oracle-java8-installer shared/accepted-oracle-license-v1-1 seen true' | debconf-set-selections \u0026\u0026 \tapt-get install -y oracle-java8-installer oracle-java8-set-default \u0026\u0026 apt-get clean\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \" \tapt-get update \u0026\u0026 apt-get install -y php7.2-cli php7.2-json php7.2 php7.2-zip php7.2-pdo-mysql php7.2-pdo-pgsql php7.2-pdo-sqlite php7.2-simplexml php7.2-mysqli php7.2-mysqlnd php7.2-mbstring php7.2-mysql php7.2-ldap php7.2-gettext php7.2-curl php7.2-bcmath php7.2-bz2 php7.2-iconv php7.2-imap \u0026\u0026  \tapt-get clean \u0026\u0026 \tcurl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"\tpip3 install --upgrade awscli\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"\tdebconf-set-selections \u003c\u003c\u003c 'mysql-server mysql-server/root_password password root' \u0026\u0026 \tdebconf-set-selections \u003c\u003c\u003c 'mysql-server mysql-server/root_password_again password root' \u0026\u0026 \tapt-get update \u0026\u0026 apt-get install -y mysql-server \u0026\u0026 apt-get clean\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "\"10.15.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ZIP",
              "Value": "\"node-v$NODE_VERSION-linux-x64.tar.xz\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -P downloads https://nodejs.org/dist/v$NODE_VERSION/$NODE_ZIP \u0026\u0026     tar -C /usr/local --strip-components 1 -xJf downloads/$NODE_ZIP \u0026\u0026     rm -rf downloads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"sudo npm -g i puppeteer --unsafe-perm=true\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION",
              "Value": "\"1.12\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GO_TAR",
              "Value": "\"go$GO_VERSION.linux-amd64.tar.gz\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -P downloads https://dl.google.com/go/$GO_TAR \u0026\u0026     tar -C /usr/local --strip-components 1 -xzf downloads/$GO_TAR \u0026\u0026     rm -rf downloads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid 3434 circleci   \u0026\u0026 useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   \u0026\u0026 echo 'circleci ALL=NOPASSWD: ALL' \u003e\u003e /etc/sudoers.d/50-circleci   \u0026\u0026 echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' \u003e\u003e /etc/sudoers.d/env_keep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "circleci"
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}