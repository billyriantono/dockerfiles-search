{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:latest",
      "SourceCode": "FROM node:latest",
      "Platform": "",
      "From": {
        "Image": "node:latest"
      },
      "Commands": [
        {
          "Maintainer": "Angel Pino \u003cangelmpino87@yahoo.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"Installing Bower\" \t\t\u0026\u0026 npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Gulp\" \t\t\u0026\u0026 npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Karma-Cli\" \t\t\u0026\u0026 npm install -g karma-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Nodemon\" \t\t\u0026\u0026 npm install -g nodemon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Typings\" \t\t\u0026\u0026 npm install -g typings"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Typescript\" \t\t\u0026\u0026 npm install -g typescript"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing http-server\" \t\t\u0026\u0026 npm install -g http-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing angular-cli\" \t\t\u0026\u0026 npm install -g angular-cli \t\t\u0026\u0026 ng set --global warnings.packageDeprecation=false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home"
        }
      ]
    }
  ]
}