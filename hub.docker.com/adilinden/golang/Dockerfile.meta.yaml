MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Maintainer: Adi Linden <adi@adis.ca>
    Name: maintainer
  - Key: golang_ver
    Name: arg
    Value: 1.11.2
  - Env:
    - Key: GOLANG_VERSION
      Value: ${golang_ver}
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         git         wget         ca-certificates     &&
      apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false     &&
      rm -fr /var/cache/apt/* /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -eux;         dpkgArch="$(dpkg --print-architecture)";         case "${dpkgArch##*-}"
      in             amd64) goRelArch=''linux-amd64'' ;;             i386) goRelArch=''linux-386''
      ;;             *)                 echo >&2;                 echo >&2 "error:
      $dpkgArch UNIMPLEMENTED";                 echo >&2;                 exit 1 ;;         esac;                 url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz";         wget
      -O go.tgz "$url";         tar -C /usr/local -xzf go.tgz;         rm go.tgz;                 export
      PATH="/usr/local/go/bin:$PATH";         go version'
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - CmdLine:
    - /bin/bash
    - -l
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
