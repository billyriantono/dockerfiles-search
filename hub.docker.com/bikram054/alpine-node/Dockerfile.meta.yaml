MetaArgs: null
Stages:
- BaseName: greyfoxit/alpine-android
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - mkdir /usr/lib/gradle
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_VERSION
      Value: "2.13"
    Name: env
  - Env:
    - Key: GRADLE_HOME
      Value: /usr/lib/gradle/gradle-${GRADLE_VERSION}
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GRADLE_HOME}/bin
    Name: env
  - Name: workdir
    Path: /usr/lib/gradle
  - CmdLine:
    - set -x   && apk add --no-cache wget   && wget https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip   &&
      unzip gradle-${GRADLE_VERSION}-bin.zip   && rm gradle-${GRADLE_VERSION}-bin.zip   &&
      apk del wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add bash libstdc++ && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add wget curl git php7 php7-fpm php7-json php7-phar php7-iconv
      php7-openssl php7-zlib php7-dom php7-mbstring php7-tokenizer php7-gd php7-fileinfo
      php7-xml php7-pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add bash openssh
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add nodejs nodejs-npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add python python-dev py-pip build-base && pip install virtualenv
      && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g cordova ionic
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g gulp gulp-cli grunt grunt-cli
    Name: run
    PrependShell: true
  From:
    Image: greyfoxit/alpine-android
  Name: ""
  Platform: ""
  SourceCode: FROM greyfoxit/alpine-android
