{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos6",
      "SourceCode": "FROM centos:centos6",
      "Platform": "",
      "From": {
        "Image": "centos:centos6"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum install -y git libzip-devel curl wget zlib-devel xz-devel bzip2-devel openssl-devel libcurl-devel \u0026\u0026     wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \u0026\u0026     yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \u0026\u0026     source scl_source enable devtoolset-2 \u0026\u0026     echo \"source scl_source enable devtoolset-2\" \u003e\u003e ~/.bashrc \u0026\u0026     echo \"source scl_source enable devtoolset-2\" \u003e\u003e ~/.bash_profile \u0026\u0026     wget --quiet https://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gz \u0026\u0026     tar xzf m4-1.4.18.tar.gz \u0026\u0026 cd m4* \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -rf m4* \u0026\u0026     wget --quiet http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz \u0026\u0026     tar xzf autoconf-2.69.tar.gz \u0026\u0026     cd autoconf* \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -rf autoconf* \u0026\u0026     git clone --depth 1 https://github.com/ebiggers/libdeflate.git \u0026\u0026     cd libdeflate \u0026\u0026 make -j 2 CFLAGS='-fPIC -O3' libdeflate.a \u0026\u0026     cp libdeflate.a /usr/local/lib \u0026\u0026 cp libdeflate.h /usr/local/include \u0026\u0026     cd .. \u0026\u0026 rm -rf libdeflate \u0026\u0026     git clone https://github.com/samtools/htslib \u0026\u0026     cd htslib \u0026\u0026 git checkout 1.9 \u0026\u0026 autoheader \u0026\u0026 autoconf \u0026\u0026     ./configure --enable-libcurl --with-libdeflate \u0026\u0026     cd .. \u0026\u0026 make -j4 CFLAGS=\"-fPIC -O3\" -C htslib install \u0026\u0026     echo \"/usr/local/lib\" \u003e\u003e etc/ld.so.conf \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026         echo hi \u0026\u0026     git clone -b devel --depth 9 git://github.com/nim-lang/nim nim \u0026\u0026     cd nim \u0026\u0026     chmod +x ./build_all.sh \u0026\u0026     scl enable devtoolset-2 ./build_all.sh \u0026\u0026     echo 'PATH=/nim/bin:/root/.nimble/bin:$PATH' \u003e\u003e ~/.bashrc \u0026\u0026     echo 'PATH=/nim/bin:/root/.nimble/bin:$PATH' \u003e\u003e ~/.bash_profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026            export PATH=/nim/bin:/root/.nimble/bin:$PATH \u0026\u0026     source scl_source enable devtoolset-2  \u0026\u0026     git clone --depth 1 git://github.com/brentp/slivar.git \u0026\u0026     cd slivar \u0026\u0026     sed -i 's/-no-pie//' nim.cfg \u0026\u0026     nimble install --verbose -y \u0026\u0026     nim c -d:danger -o:/usr/bin/slivar src/slivar \u0026\u0026     rm -rf /slivar /duktape-nim \u0026\u0026 slivar expr -h"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}