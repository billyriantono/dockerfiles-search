MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - set -ex &&     apt-get update &&     apt-get --no-install-recommends --yes install         ca-certificates         cmake         g++         make         pkg-config         graphviz         doxygen         git         curl         libtool-bin         autoconf         automake         bzip2         xsltproc         gperf         unzip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local
  - Env:
    - Key: CFLAGS
      Value: '''-fPIC'''
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '''-fPIC'''
    Name: env
  - Key: CMAKE_VERSION
    Name: arg
    Value: 3.14.0
  - Key: CMAKE_VERSION_DOT
    Name: arg
    Value: v3.14
  - Key: CMAKE_HASH
    Name: arg
    Value: aa76ba67b3c2af1946701f847073f4652af5cbd9f141f221c97af99127e75502
  - CmdLine:
    - set -ex     && curl -s -O https://cmake.org/files/${CMAKE_VERSION_DOT}/cmake-${CMAKE_VERSION}.tar.gz     &&
      echo "${CMAKE_HASH}  cmake-${CMAKE_VERSION}.tar.gz" | sha256sum -c     && tar
      -xzf cmake-${CMAKE_VERSION}.tar.gz     && cd cmake-${CMAKE_VERSION}     && ./configure     &&
      make     && make install
    Name: run
    PrependShell: true
  - Key: BOOST_VERSION
    Name: arg
    Value: "1_69_0"
  - Key: BOOST_VERSION_DOT
    Name: arg
    Value: 1.69.0
  - Key: BOOST_HASH
    Name: arg
    Value: 8f32d4617390d1c2d16f26a27ab60d97807b35440d45891fa340fc2648b04406
  - CmdLine:
    - set -ex     && curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2     &&
      echo "${BOOST_HASH}  boost_${BOOST_VERSION}.tar.bz2" | sha256sum -c     && tar
      -xvf boost_${BOOST_VERSION}.tar.bz2     && cd boost_${BOOST_VERSION}     &&
      ./bootstrap.sh     && ./b2 --build-type=minimal link=static runtime-link=static
      --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex
      --with-serialization --with-system --with-thread --with-locale threading=multi
      threadapi=pthread cflags="$CFLAGS" cxxflags="$CXXFLAGS" stage
    Name: run
    PrependShell: true
  - Env:
    - Key: BOOST_ROOT
      Value: /usr/local/boost_${BOOST_VERSION}
    Name: env
  - Key: OPENSSL_VERSION
    Name: arg
    Value: 1.1.1b
  - Key: OPENSSL_HASH
    Name: arg
    Value: 5c557b023230413dfb0756f3137a13e6d726838ccd1430888ad15bfb2b43ea4b
  - CmdLine:
    - set -ex     && curl -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz     &&
      echo "${OPENSSL_HASH}  openssl-${OPENSSL_VERSION}.tar.gz" | sha256sum -c     &&
      tar -xzf openssl-${OPENSSL_VERSION}.tar.gz     && cd openssl-${OPENSSL_VERSION}     &&
      ./Configure linux-x86_64 no-shared --static "$CFLAGS"     && make build_generated     &&
      make libcrypto.a     && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENSSL_ROOT_DIR
      Value: /usr/local/openssl-${OPENSSL_VERSION}
    Name: env
  - Key: ZMQ_VERSION
    Name: arg
    Value: v4.3.1
  - Key: ZMQ_HASH
    Name: arg
    Value: 2cb1240db64ce1ea299e00474c646a2453a8435b
  - CmdLine:
    - set -ex     && git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION}     &&
      cd libzmq     && test `git rev-parse HEAD` = ${ZMQ_HASH} || exit 1     && ./autogen.sh     &&
      ./configure --enable-static --disable-shared     && make     && make install     &&
      ldconfig
    Name: run
    PrependShell: true
  - Key: CPPZMQ_VERSION
    Name: arg
    Value: v4.3.0
  - Key: CPPZMQ_HASH
    Name: arg
    Value: 213da0b04ae3b4d846c9abc46bab87f86bfb9cf4
  - CmdLine:
    - set -ex     && git clone https://github.com/zeromq/cppzmq.git -b ${CPPZMQ_VERSION}     &&
      cd cppzmq     && test `git rev-parse HEAD` = ${CPPZMQ_HASH} || exit 1     &&
      mv *.hpp /usr/local/include
    Name: run
    PrependShell: true
  - Key: READLINE_VERSION
    Name: arg
    Value: "8.0"
  - Key: READLINE_HASH
    Name: arg
    Value: e339f51971478d369f8a053a330a190781acb9864cf4c541060f12078948e461
  - CmdLine:
    - set -ex     && curl -s -O https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz     &&
      echo "${READLINE_HASH}  readline-${READLINE_VERSION}.tar.gz" | sha256sum -c     &&
      tar -xzf readline-${READLINE_VERSION}.tar.gz     && cd readline-${READLINE_VERSION}     &&
      ./configure     && make     && make install
    Name: run
    PrependShell: true
  - Key: SODIUM_VERSION
    Name: arg
    Value: 1.0.17
  - Key: SODIUM_HASH
    Name: arg
    Value: b732443c442239c2e0184820e9b23cca0de0828c
  - CmdLine:
    - set -ex     && git clone https://github.com/jedisct1/libsodium.git -b ${SODIUM_VERSION}     &&
      cd libsodium     && test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1     &&
      ./autogen.sh     && ./configure     && make     && make check     && make install
    Name: run
    PrependShell: true
  - Key: UDEV_VERSION
    Name: arg
    Value: v3.2.7
  - Key: UDEV_HASH
    Name: arg
    Value: 4758e346a14126fc3a964de5831e411c27ebe487
  - CmdLine:
    - set -ex     && git clone https://github.com/gentoo/eudev -b ${UDEV_VERSION}     &&
      cd eudev     && test `git rev-parse HEAD` = ${UDEV_HASH} || exit 1     && ./autogen.sh     &&
      ./configure --disable-gudev --disable-introspection --disable-hwdb --disable-manpages
      --disable-shared     && make     && make install
    Name: run
    PrependShell: true
  - Key: USB_VERSION
    Name: arg
    Value: v1.0.22
  - Key: USB_HASH
    Name: arg
    Value: 0034b2afdcdb1614e78edaa2a9e22d5936aeae5d
  - CmdLine:
    - set -ex     && git clone https://github.com/libusb/libusb.git -b ${USB_VERSION}     &&
      cd libusb     && test `git rev-parse HEAD` = ${USB_HASH} || exit 1     && ./autogen.sh     &&
      ./configure --disable-shared     && make     && make install
    Name: run
    PrependShell: true
  - Key: HIDAPI_VERSION
    Name: arg
    Value: hidapi-0.8.0-rc1
  - Key: HIDAPI_HASH
    Name: arg
    Value: 40cf516139b5b61e30d9403a48db23d8f915f52c
  - CmdLine:
    - set -ex     && git clone https://github.com/signal11/hidapi -b ${HIDAPI_VERSION}     &&
      cd hidapi     && test `git rev-parse HEAD` = ${HIDAPI_HASH} || exit 1     &&
      ./bootstrap     && ./configure --enable-static --disable-shared     && make     &&
      make install
    Name: run
    PrependShell: true
  - Key: PROTOBUF_VERSION
    Name: arg
    Value: v3.7.0
  - Key: PROTOBUF_HASH
    Name: arg
    Value: 582743bf40c5d3639a70f98f183914a2c0cd0680
  - CmdLine:
    - set -ex     && git clone https://github.com/protocolbuffers/protobuf -b ${PROTOBUF_VERSION}     &&
      cd protobuf     && test `git rev-parse HEAD` = ${PROTOBUF_HASH} || exit 1     &&
      git submodule update --init --recursive     && ./autogen.sh     && ./configure
      --enable-static --disable-shared     && make     && make install     && ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - sh
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
