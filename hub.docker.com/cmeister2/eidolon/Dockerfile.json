{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:alpine",
      "SourceCode": "FROM nginx:alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:alpine"
      },
      "Commands": [
        {
          "Key": "DATA_SOURCE",
          "Name": "arg",
          "Value": "global"
        },
        {
          "Env": [
            {
              "Key": "WDIR",
              "Value": "/eidolon"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $WDIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "python",
            "$WDIR/python"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "$WDIR/"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache python3 \u0026\u0026     python3 -m ensurepip \u0026\u0026     python3 -m venv $WDIR/env \u0026\u0026     . $WDIR/env/bin/activate \u0026\u0026     pip3 install --no-cache-dir -r $WDIR/requirements.txt \u0026\u0026     python3 $WDIR/python/resolver_publicdns.py --database $WDIR/resolvers.db --publicdns $DATA_SOURCE \u0026\u0026     python3 $WDIR/python/generate_nginx_conf.py --database $WDIR/resolvers.db --outputfile /etc/nginx/nginx.conf \u0026\u0026     apk del --purge python3 \u0026\u0026     rm -rf $WDIR/env \u0026\u0026     rm -v $WDIR/resolvers.db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5353"
          ]
        }
      ]
    }
  ]
}