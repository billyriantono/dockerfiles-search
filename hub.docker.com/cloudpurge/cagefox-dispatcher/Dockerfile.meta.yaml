MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: Anatoly_Litovsky
      Value: <anatolylit@gmail.com>
    Name: label
  - Labels:
    - Key: Yair_Zaslavsky
      Value: <yair.zaslavsky@gmail.com>
    Name: label
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: LOCAL_SOCKET_DIR
      Value: /sockets
    Name: env
  - CmdLine:
    - apt-get clean && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-utils nginx python git python3-pip python3-openssl gettext-base
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install ipdb flask flask_httpauth docker-py jinja2
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - keys
    - /root/keys
  - CmdLine:
    - chmod 600 /root/keys/*
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 600 /root/keys
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html; env GIT_SSH_COMMAND='ssh -i /root/keys/deploykey -o "UserKnownHostsFile
      /root/keys/known_hosts"' git clone git@bitbucket.org:cloudpurge/novnc.git novnc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html/novnc; git checkout master
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html; env GIT_SSH_COMMAND='ssh -i /root/keys/deploykey -o "UserKnownHostsFile
      /root/keys/known_hosts"' git clone git@bitbucket.org:cloudpurge/spice-html5.git
      spice
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html/spice; git checkout master
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html; env GIT_SSH_COMMAND='ssh -i /root/keys/deploykey -o "UserKnownHostsFile
      /root/keys/known_hosts"' git clone git@bitbucket.org:cloudpurge/mainpage.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html/mainpage; git checkout master
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /root/keys
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/www/html/mainpage && /bin/bash -c "source gen_pages.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/html/mainpage
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/default
    - /etc/nginx/sites-enabled/default
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dispatcher
    - /dispatcher
  - CmdLine:
    - python3 -m compileall -l -f -b dispatcher
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /dispatcher/*.py
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /mnt/locks
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /mnt/locks
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /mnt/locks
  - CmdLine:
    - mkdir /certs
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "443"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /run.sh
  - CmdLine:
    - chmod +x /run.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: CERT
      Value: /certs/cert.pem
    Name: env
  - Env:
    - Key: KEY
      Value: /certs/key.pem
    Name: env
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
