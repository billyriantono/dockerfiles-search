MetaArgs:
- DefaultValue: 2.8.1
  Key: DOCKER_OPENSTUDIO_VERSION
  ProvidedValue: null
  Value: 2.8.1
Stages:
- BaseName: canmet/docker-openstudio:$DOCKER_OPENSTUDIO_VERSION
  Commands:
  - Maintainer: Phylroy Lopez phylroy.lopez@canada.ca
    Name: maintainer
  - Key: DISPLAY
    Name: arg
    Value: local
  - Env:
    - Key: DISPLAY
      Value: ${DISPLAY}
    Name: env
  - Key: repository_utilities
    Name: arg
    Value: '''ca-certificates software-properties-common python-software-properties
      dpkg-dev debconf-utils software-properties-common python-software-properties'''
  - Key: software
    Name: arg
    Value: '''git vim curl zip lynx xemacs21 nano unzip xterm terminator midori diffuse
      silversearcher-ag openssh-client openssh-server sqlitebrowser'''
  - Key: netbeans_deps
    Name: arg
    Value: '''oracle-java8-installer libxext-dev libxrender-dev libxtst-dev oracle-java8-set-default'''
  - Key: vscode_deps
    Name: arg
    Value: '''curl libc6-dev  libasound2 libgconf-2-4 libgnome-keyring-dev libgtk2.0-0
      libnss3 libpci3  libxtst6 libcanberra-gtk-module libnotify4 libxss1 wget'''
  - Key: d3_deps
    Name: arg
    Value: '''libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential
      g++'''
  - Key: intial_purge_software
    Name: arg
    Value: '''openjdk*'''
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: PATH
      Value: $JAVA_HOME/bin:$PATH
    Name: env
  - Key: apt_install
    Name: arg
    Value: '''apt-get install -y --no-install-recommends --force-yes'''
  - Key: clean
    Name: arg
    Value: '''rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /downloads/*'''
  - CmdLine:
    - mkdir /downloads
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && \t$apt_install $repository_utilities \t&& sudo add-apt-repository
      -y ppa:linuxgndu/sqlitebrowser \t&& apt-get update && $apt_install $software
      $d3_deps $r_deps \t&& apt-get clean && $clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fSL -o sqlite.tar.gz https://www.sqlite.org/2017/sqlite-autoconf-3160200.tar.gz     &&
      mkdir /usr/src/sqlite3     && tar -xzf sqlite.tar.gz -C /usr/src/sqlite3     &&
      rm sqlite.tar.gz     && cd /usr/src/sqlite3/sqlite-autoconf-3160200     && ./configure
      --prefix=/usr/local --enable-json1 --enable-readline     && make      && make
      install     && make clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 && apt-get
      install -y --no-install-recommends software-properties-common && echo "deb http://repo.mongodb.org/apt/ubuntu
      $(cat /etc/lsb-release | grep DISTRIB_CODENAME | cut -d= -f2)/mongodb-org/3.2
      multiverse" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y mongodb-org
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/db
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "27017"
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && apt-get install
      -y nodejs nodejs  build-essential && npm install -g express-generator nodemon
      bower
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - wget https://releases.hashicorp.com/packer/1.0.0/packer_1.0.0_linux_amd64.zip
      && unzip packer_1.0.0_linux_amd64.zip -d /usr/bin/ && rm packer_1.0.0_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip && mkdir /usr/local/ec2
      && unzip ec2-api-tools.zip -d /usr/local/ec2 && mv  `find  /usr/local/ec2/ec2-api-tools-*
      -maxdepth 0` /usr/local/ec2/ec2-api-tools && rm ec2-api-tools.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: EC2_HOME
      Value: /usr/local/ec2/ec2-api-tools
    Name: env
  - Name: user
    User: osdev
  - Name: workdir
    Path: /home/osdev
  - Key: ruby_mine_version
    Name: arg
    Value: '''RubyMine-2018.2.6'''
  - CmdLine:
    - wget https://download.jetbrains.com/ruby/$ruby_mine_version.tar.gz && tar -xzf
      $ruby_mine_version.tar.gz && rm $ruby_mine_version.tar.gz
    Name: run
    PrependShell: true
  - Key: pycharm_version
    Name: arg
    Value: '''pycharm-professional-2019.1.3'''
  - CmdLine:
    - wget https://download.jetbrains.com/python/$pycharm_version.tar.gz && tar -xzf
      $pycharm_version.tar.gz && rm $pycharm_version.tar.gz
    Name: run
    PrependShell: true
  - Key: pycharm_loc
    Name: arg
    Value: '''pycharm-2019.1.3'''
  - Name: user
    User: root
  - CmdLine:
    - ln -s /home/osdev/$ruby_mine_version/bin/rubymine.sh /usr/local/sbin/rubymine
      && ln -s /home/osdev/$pycharm_loc/bin/pycharm.sh /usr/local/sbin/pycharm &&
      ln -s /usr/bin/midori /bin/xdg-open
    Name: run
    PrependShell: true
  - Name: user
    User: osdev
  - Chown: osdev:osdev
    Name: add
    SourcesAndDest:
    - btap_utilities
    - /home/osdev/btap_utilities
  - Chown: osdev:osdev
    Name: add
    SourcesAndDest:
    - config/terminator/config
    - /home/osdev/.config/terminator/config
  - Chown: osdev:osdev
    Name: add
    SourcesAndDest:
    - config/.gitconfig
    - /home/osdev/.gitconfig
  - CmdLine:
    - echo 'PATH="~/btap_utilities:$PATH"' >> ~/.bashrc && /bin/bash -c "source /etc/user_config_bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: canmet/docker-openstudio:$DOCKER_OPENSTUDIO_VERSION
  Name: ""
  Platform: ""
  SourceCode: FROM canmet/docker-openstudio:$DOCKER_OPENSTUDIO_VERSION
