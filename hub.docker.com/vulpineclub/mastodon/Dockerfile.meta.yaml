MetaArgs: null
Stages:
- As: build-dep
  BaseName: ubuntu:18.04
  Commands:
  - Name: shell
    Shell:
    - bash
    - -c
  - Env:
    - Key: NODE_VER
      Value: '"12.11.1"'
    Name: env
  - CmdLine:
    - "echo \"Etc/UTC\" > /etc/localtime && \tapt update && \tapt -y install wget
      python && \tcd ~ && \twget https://nodejs.org/download/release/v$NODE_VER/node-v$NODE_VER-linux-x64.tar.gz
      && \ttar xf node-v$NODE_VER-linux-x64.tar.gz && \trm node-v$NODE_VER-linux-x64.tar.gz
      && \tmv node-v$NODE_VER-linux-x64 /opt/node"
    Name: run
    PrependShell: true
  - Env:
    - Key: JE_VER
      Value: '"5.2.1"'
    Name: env
  - CmdLine:
    - "apt update && \tapt -y install make autoconf gcc g++ && \tcd ~ && \twget https://github.com/jemalloc/jemalloc/archive/$JE_VER.tar.gz
      && \ttar xf $JE_VER.tar.gz && \tcd jemalloc-$JE_VER && \t./autogen.sh && \t./configure
      --prefix=/opt/jemalloc && \tmake -j$(nproc) > /dev/null && \tmake install_bin
      install_include install_lib"
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_VER
      Value: '"2.6.5"'
    Name: env
  - Env:
    - Key: CPPFLAGS
      Value: '"-I/opt/jemalloc/include"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"-L/opt/jemalloc/lib/"'
    Name: env
  - CmdLine:
    - "apt update && \tapt -y install build-essential \t\tbison libyaml-dev libgdbm-dev
      libreadline-dev \t\tlibncurses5-dev libffi-dev zlib1g-dev libssl-dev && \tcd
      ~ && \twget https://cache.ruby-lang.org/pub/ruby/${RUBY_VER%.*}/ruby-$RUBY_VER.tar.gz
      && \ttar xf ruby-$RUBY_VER.tar.gz && \tcd ruby-$RUBY_VER && \t./configure --prefix=/opt/ruby
      \t  --with-jemalloc \t  --with-shared \t  --disable-install-doc && \tln -s /opt/jemalloc/lib/*
      /usr/lib/ && \tmake -j$(nproc) > /dev/null && \tmake install"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/opt/ruby/bin:/opt/node/bin"'
    Name: env
  - CmdLine:
    - "npm install -g yarn && \tgem install bundler && \tapt update && \tapt -y install
      git libicu-dev libidn11-dev \tlibpq-dev libprotobuf-dev protobuf-compiler"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile*
    - package.json
    - yarn.lock
    - /opt/mastodon/
  - CmdLine:
    - "cd /opt/mastodon && \tbundle install -j$(nproc) --deployment --without development
      test && \tyarn install --pure-lockfile"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: build-dep
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as build-dep
- BaseName: ubuntu:18.04
  Commands:
  - Chown: ""
    From: build-dep
    Name: copy
    SourcesAndDest:
    - /opt/node
    - /opt/node
  - Chown: ""
    From: build-dep
    Name: copy
    SourcesAndDest:
    - /opt/ruby
    - /opt/ruby
  - Chown: ""
    From: build-dep
    Name: copy
    SourcesAndDest:
    - /opt/jemalloc
    - /opt/jemalloc
  - Env:
    - Key: PATH
      Value: '"${PATH}:/opt/ruby/bin:/opt/node/bin:/opt/mastodon/bin"'
    Name: env
  - Key: UID
    Name: arg
    Value: "991"
  - Key: GID
    Name: arg
    Value: "991"
  - CmdLine:
    - "apt update && \techo \"Etc/UTC\" > /etc/localtime && \tln -s /opt/jemalloc/lib/*
      /usr/lib/ && \tapt install -y whois wget && \taddgroup --gid $GID mastodon &&
      \tuseradd -m -u $UID -g $GID -d /opt/mastodon mastodon && \techo \"mastodon:`head
      /dev/urandom | tr -dc A-Za-z0-9 | head -c 24 | mkpasswd -s -m sha-256`\" | chpasswd"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt -y --no-install-recommends install \t  libssl1.1 libpq5 imagemagick ffmpeg
      \t  libicu60 libprotobuf10 libidn11 libyaml-0-2 \t  file ca-certificates tzdata
      libreadline7 && \tapt -y install gcc && \tln -s /opt/mastodon /mastodon && \tgem
      install bundler && \trm -rf /var/cache && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: '"0.18.0"'
    Name: env
  - Env:
    - Key: TINI_SUM
      Value: '"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - echo "$TINI_SUM tini" | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - Chown: mastodon:mastodon
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /opt/mastodon
  - Chown: mastodon:mastodon
    From: build-dep
    Name: copy
    SourcesAndDest:
    - /opt/mastodon
    - /opt/mastodon
  - Env:
    - Key: RAILS_ENV
      Value: '"production"'
    Name: env
  - Env:
    - Key: NODE_ENV
      Value: '"production"'
    Name: env
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: '"true"'
    Name: env
  - Env:
    - Key: BIND
      Value: '"0.0.0.0"'
    Name: env
  - Name: user
    User: mastodon
  - Env:
    - Key: GITHUB_REPOSITORY
      Value: vulpineclub/mastodon
    Name: env
  - Key: SOURCE_TAG
    Name: arg
    Value: null
  - Env:
    - Key: SOURCE_TAG
      Value: ${SOURCE_TAG}
    Name: env
  - CmdLine:
    - "cd ~ && \tGITHUB_REPOSITORY=${GITHUB_REPOSITORY} \tOTP_SECRET=precompile_placeholder
      SECRET_KEY_BASE=precompile_placeholder rails assets:precompile && \tyarn cache
      clean"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/mastodon
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
