MetaArgs: null
Stages:
- As: source
  BaseName: scratch
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/
    - /.docker/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - /app/src
  From:
    Scratch: true
  Name: source
  Platform: ""
  SourceCode: FROM scratch AS source
- BaseName: python:3
  Commands:
  - Chown: ""
    From: source
    Name: copy
    SourcesAndDest:
    - /app/
    - /app/
  - Chown: ""
    From: source
    Name: copy
    SourcesAndDest:
    - .docker/dockerize-templates/*
    - /etc/dockerize-templates/
  - CmdLine:
    - pip install -r /app/requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: DB_URI
      Value: sqlite:///db.db
    Name: env
  - Env:
    - Key: SECRET_KEY
      Value: secret
    Name: env
  - Env:
    - Key: ADMIN_USER
      Value: admin
    Name: env
  - Env:
    - Key: ADMIN_PASS
      Value: pass
    Name: env
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - dockerize
    - -template
    - /etc/dockerize-templates/config.py.tmpl:/app/src/config.py
    - python3
    - /app/src/server.py
    - runserver
    - --host
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: python:3
  Name: ""
  Platform: ""
  SourceCode: FROM python:3
