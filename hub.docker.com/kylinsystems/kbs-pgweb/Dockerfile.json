{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.11",
      "SourceCode": "FROM phusion/baseimage:0.11",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.11"
      },
      "Commands": [
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026     echo 'LANG=\"en_US.UTF-8\"' \u003e /etc/default/locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://mirrors.huaweicloud.com/ubuntu/ bionic main restricted universe multiverse \\n\" \t\t\"deb https://mirrors.huaweicloud.com/ubuntu/ bionic-security main restricted universe multiverse \\n\" \t    \"deb https://mirrors.huaweicloud.com/ubuntu/ bionic-updates main restricted universe multiverse \\n\" \t\t\"deb https://mirrors.huaweicloud.com/ubuntu/ bionic-proposed main restricted universe multiverse \\n\"         \"deb https://mirrors.huaweicloud.com/ubuntu/ bionic-backports main restricted universe multiverse \\n\" \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \t\tDEBIAN_FRONTEND=noninteractive \t\tapt-get install -y unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LISTEN_PORT",
              "Value": "80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_HOST_NAME",
              "Value": "pghost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_HOST_PORT",
              "Value": "5432"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_PASSWORD",
              "Value": "default_pass"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_USER",
              "Value": "default_user"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_DB",
              "Value": "default_db"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGWEB_AUTH_USER",
              "Value": "pgweb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGWEB_AUTH_PASS",
              "Value": "pgweb"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./pgweb",
            "/tmp/pgweb"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp/pgweb \u0026\u0026   unzip /tmp/pgweb/pgweb_linux_amd64.zip -d /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /tmp/pgweb/start-pgweb.sh /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /app/start-pgweb.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/service/startpgweb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /app/start-pgweb.sh /etc/service/startpgweb/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}