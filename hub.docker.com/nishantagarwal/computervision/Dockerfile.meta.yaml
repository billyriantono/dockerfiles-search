MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get -qq update && apt-get -qq install -y --no-install-recommends gnupg2
      curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
      | apt-key add - &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1704/x86_64
      /" >> /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /" >> /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove
      -y curl
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 9.0.176
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 9-0=$CUDA_VERSION-1
    Name: env
  - CmdLine:
    - apt-get -qq update && apt-get -qq install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-9.0 /usr/local/cuda
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=9.0"'
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.3.7
    Name: env
  - CmdLine:
    - apt-get -qq update && apt-get -qq install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         cuda-cublas-9-0=9.0.176.4-1         libnccl2=$NCCL_VERSION-1+cuda9.0
      &&     apt-mark hold libnccl2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update && apt-get -qq install -y --no-install-recommends         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-core-9-0=9.0.176.3-1         cuda-cublas-dev-9-0=9.0.176.4-1         libnccl-dev=$NCCL_VERSION-1+cuda9.0
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda/lib64/stubs
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.4.1.5
    Name: env
  - Labels:
    - Key: com.nvidia.cudnn.version
      Value: '"${CUDNN_VERSION}"'
    Name: label
  - CmdLine:
    - apt-get -qq update && apt-get -qq install -y --no-install-recommends             libcudnn7=$CUDNN_VERSION-1+cuda9.0             libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0
      &&     apt-mark hold libcudnn7
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - linux/ubuntu18/packages.txt
    - /install/
  - Name: workdir
    Path: /install
  - CmdLine:
    - apt-get -qq update     && xargs -a packages.txt apt-get -qq install -y --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin && ln -s /usr/bin/python3 python && ln -s /usr/bin/pip3 pip
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - python36/requirements.txt
    - /install/
  - CmdLine:
    - pip install -q -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/cocodataset/cocoapi/archive/master.zip -O cocoapi.zip
      &&     wget -q https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip
      -O protobuf.zip &&     wget -q https://github.com/tensorflow/models/archive/59f7e80ac8ad54913663a4b63ddf5a3db3689648.zip
      -O tensorflow-models.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip cocoapi.zip && unzip protobuf.zip -d ./protobuf && unzip tensorflow-models.zip
      -d ./tensorflow-models
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /oss
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /install/cocoapi-master /oss/cocoapi
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /oss/cocoapi/PythonAPI
  - CmdLine:
    - python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /install/tensorflow-models/models-59f7e80ac8ad54913663a4b63ddf5a3db3689648
      /oss/tf-models && mv /install/protobuf /oss
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /oss/tf-models/research
  - CmdLine:
    - /oss/protobuf/bin/protoc ./object_detection/protos/*.proto --python_out=.
    Name: run
    PrependShell: true
  - CmdLine:
    - python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/apt/* && rm -rf /root/.cache/*
      && rm -rf /install && apt-get clean
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
