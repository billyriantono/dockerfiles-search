{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Key": "THEANO_VERSION",
          "Name": "arg",
          "Value": "1.0.0"
        },
        {
          "Key": "TENSORFLOW_VERSION",
          "Name": "arg",
          "Value": "1.12.0"
        },
        {
          "Key": "TENSORFLOW_ARCH",
          "Name": "arg",
          "Value": "cpu"
        },
        {
          "Key": "KERAS_VERSION",
          "Name": "arg",
          "Value": "2.2.4"
        },
        {
          "Key": "LASAGNE_VERSION",
          "Name": "arg",
          "Value": "0.2.dev1"
        },
        {
          "Key": "TORCH_VERSION",
          "Name": "arg",
          "Value": "1.0.0"
        },
        {
          "Key": "CAFFE_VERSION",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": "36"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -y -qq \t\tbc \t\tbuild-essential \t\tcmake \t\tcurl \t\tg++ \t\tgfortran \t\tgit \t\tlibffi-dev \t\tlibfreetype6-dev \t\tlibhdf5-dev \t\tliblcms2-dev \t\tlibopenblas-dev \t\tliblapack-dev \t\tlibssl-dev \t\tlibtiff5-dev \t\tlibwebp-dev \t\tlibzmq3-dev \t\tnano \t\tpkg-config \t\tsoftware-properties-common \t\tunzip \t\tvim \t\twget \t\tzlib1g-dev \t\tqt5-default \t\tlibvtk6-dev \t\tzlib1g-dev \t\tlibjpeg-dev \t\tlibwebp-dev \t\tlibpng-dev \t\tlibtiff5-dev \t\tlibopenexr-dev \t\tlibgdal-dev \t\tlibdc1394-22-dev \t\tlibavcodec-dev \t\tlibavformat-dev \t\tlibswscale-dev \t\tlibtheora-dev \t\tlibvorbis-dev \t\tlibxvidcore-dev \t\tlibx264-dev \t\tyasm \t\tlibopencore-amrnb-dev \t\tlibopencore-amrwb-dev \t\tlibv4l-dev \t\tlibopenjp2-7-dev \t\tlibtbb-dev \t\tlibeigen3-dev \t\tpython3-dev \t\tpython3-tk \t\tpython3-numpy \t\tpython3-pip \t\tant \t\tdefault-jdk \t\tdoxygen \t\t\u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoremove \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install \t\tpyopenssl \t\tndg-httpsclient \t\tpyasn1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install --upgrade ipython \u0026\u0026 \tpip3 --no-cache-dir install \t\tCython \t\tipykernel \t\tjupyter \t\tpath.py \t\tPillow \t\tpygments \t\tsix \t\tsphinx \t\twheel \t\tzmq \t\t\u0026\u0026 \tpython3 -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install \thttps://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp${PYTHON_VERSION}-cp${PYTHON_VERSION}m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qq caffe-cpu \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoremove \u0026\u0026 \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install git+git://github.com/Theano/Theano.git \u0026\u0026 \t\techo \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN \t\t\\n[lib]\\ncnmem=0.95 \t\t\\n[nvcc]\\nfastmath=True \t\t\\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \t\t\\n[DebugMode]\\ncheck_finite=1\" \t\u003e /root/.theanorc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install git+git://github.com/keras-team/keras.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install git+git://github.com/Lasagne/Lasagne.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install python3-opencv -y -qq \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoremove \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \trm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir scikit-learn \tnumpy \tscipy \tmatplotlib \tpandas \tsympy \tnose \tscikit-image \th5py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir https://download.pytorch.org/whl/cpu/torch-1.0.0-cp36-cp36m-linux_x86_64.whl  \ttorchvision"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /root/run_jupyter.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/root\""
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}