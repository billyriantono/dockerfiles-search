{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Alt Three \u003csupport@alt-three.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "cachet_ver",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "cachet_ver",
              "Value": "${cachet_ver:-2.3.11csats}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     echo \"APT::Install-Recommends \\\"0\\\";\" \u003e\u003e /etc/apt/apt.conf.d/02recommends \u0026\u0026     echo \"APT::Install-Suggests \\\"0\\\";\" \u003e\u003e /etc/apt/apt.conf.d/02recommends \u0026\u0026     mkdir -p /var/cache/apt/archives \u0026\u0026     apt-get clean \u0026\u0026     apt-get -q -y update \u0026\u0026     apt-get -y dist-upgrade \u0026\u0026     apt-get -q -y install     ca-certificates php5-fpm php5-curl     php5-readline php5-mcrypt sudo     php5-mysql php5-apcu php5-cli     php5-gd php5-mysql php5-pgsql     php5-sqlite wget sqlite git     libsqlite3-dev postgresql-client mysql-client     nginx git     supervisor cron \u0026\u0026     apt-get clean \u0026\u0026 apt-get autoremove -q \u0026\u0026     rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/man /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php-fpm-pool.conf",
            "/etc/php5/fpm/pool.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx-site.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "CmdLine": [
            "echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html \u0026\u0026     chown -R www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/crontab",
            "/etc/cron.d/artisan-schedule"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 0644 /etc/cron.d/artisan-schedule \u0026\u0026         touch /var/log/cron.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser www-data sudo \u0026\u0026     echo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html/"
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "chown -R www-data /var/www/html \u0026\u0026     rm -rf /var/www/html/* \u0026\u0026     git clone --branch csats --depth 1 https://github.com/csats/Cachet.git ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\" \u0026\u0026     php -r \"copy('https://composer.github.io/installer.sig', '/tmp/composer-setup.sig');\" \u0026\u0026     php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \u0026\u0026     php /tmp/composer-setup.php --version=1.1.2 \u0026\u0026     php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php composer.phar install --no-dev -o \u0026\u0026     rm -rf bootstrap/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/.env.docker",
            "/var/www/html/.env"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}