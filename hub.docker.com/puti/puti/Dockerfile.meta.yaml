MetaArgs:
- DefaultValue: 1.12-alpine
  Key: GOLANG_BUILDER_VERSION
  ProvidedValue: null
  Value: 1.12-alpine
Stages:
- As: builder
  BaseName: golang:${GOLANG_BUILDER_VERSION}
  Commands:
  - CmdLine:
    - apk update && apk add --no-cache build-base git tzdata ca-certificates && update-ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /puti
  - Name: workdir
    Path: /puti
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  From:
    Image: golang:${GOLANG_BUILDER_VERSION}
  Name: builder
  Platform: ""
  SourceCode: FROM golang:${GOLANG_BUILDER_VERSION} AS builder
- BaseName: alpine:latest
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/share/zoneinfo
    - /usr/share/zoneinfo
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs/ca-certificates.crt
    - /etc/ssl/certs/
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .gosu-deps \t\tdpkg \t\tgnupg \t;
      \t\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget
      -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf && gpgconf
      --kill all || :; \trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \t\tapk del
      --no-network .gosu-deps; \t\tchmod +x /usr/local/bin/gosu; \tgosu --version;
      \tgosu nobody true"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/puti/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/puti
    - ./puti
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/console
    - ./console
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/assets
    - ./assets
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/configs
    - /app/init/configs
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/theme
    - /app/init/theme
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/uploads
    - /app/init/uploads
  - CmdLine:
    - addgroup -g 1000 -S putiuser     && adduser -u 1000 -S putiuser -G putiuser
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /puti/scripts/docker/docker-entrypoint.sh
    - /puti/scripts/docker/wait-for-db.sh
    - /usr/local/bin/
  - CmdLine:
    - ln -s /usr/local/bin/docker-entrypoint.sh /
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "8000"
    - "8080"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - puti
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
