MetaArgs: null
Stages:
- As: builder
  BaseName: node:latest
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package-lock.json
    - ./
  - CmdLine:
    - apt-get update   && apt-get -y install gettext-base   && apt-get clean   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm ci && mkdir /ng-app && mv ./node_modules ./ng-app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /ng-app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Key: BASE_URL
    Name: arg
    Value: '"http://admin.lab.geonodosoft.cl/api/v3"'
  - Key: BING_API_KEY
    Name: arg
    Value: '"AniAnAkG2HcPxDX18zBcwjzwu6Gp4K4JaaehEz4ZznENoEYSVn3QdNGDi007tQtM"'
  - Key: PRODUCTION
    Name: arg
    Value: "true"
  - CmdLine:
    - rm ./src/environments/environment.prod.ts ./src/environments/environment.ts
    Name: run
    PrependShell: true
  - CmdLine:
    - envsubst "`printf '${%s} ' $(bash -c "compgen -A variable")`" < ./environment.template
      > ./src/environments/environment.prod.ts
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ./src/environments/environment.prod.ts ./src/environments/environment.ts
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run ng build --prod --build-optimizer=false --output-path=dist
    Name: run
    PrependShell: true
  From:
    Image: node:latest
  Name: builder
  Platform: ""
  SourceCode: FROM node:latest as builder
- BaseName: nginx:alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /ng-app/dist
    - /usr/share/nginx/html
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:alpine
