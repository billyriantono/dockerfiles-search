{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:latest",
      "SourceCode": "FROM golang:latest AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "go get -v     github.com/romnnn/pgfutter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APP_DIR",
              "Value": "$GOPATH/src/github.com/romnnn/pgfutter/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $APP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$APP_DIR"
        },
        {
          "CmdLine": [
            "go build -o /bin/pgfutter"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "python:3.7-alpine",
      "SourceCode": "FROM python:3.7-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.7-alpine"
      },
      "Commands": [
        {
          "Maintainer": "roman \u003ccontact@romnn.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "DB_HOST",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_USER",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_PASSWORD",
              "Value": "password"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_PORT",
              "Value": "5432"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "postgresimporter/",
            "/app/postgresimporter"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "deployment/wait-for-postgres.sh",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/pgfutter",
            "/usr/bin/pgfutter"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /usr/bin/pgfutter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dos2unix wait-for-postgres.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls -la /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add --no-cache ca-certificates postgresql-client libc6-compat \u0026\u0026 update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/sh",
            "./wait-for-postgres.sh",
            "python",
            "-m",
            "postgresimporter.import"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}