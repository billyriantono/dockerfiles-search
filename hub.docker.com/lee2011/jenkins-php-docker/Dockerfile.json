{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins",
      "SourceCode": "FROM jenkins",
      "Platform": "",
      "From": {
        "Image": "jenkins"
      },
      "Commands": [
        {
          "Maintainer": "Alex Vo \u003ctuanmaster2012@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HASH",
              "Value": "fe801ce2166e6c5b48b3e7ba81277c41"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/lib"
        },
        {
          "CmdLine": [
            "wget https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${GRADLE_HASH} gradle-${GRADLE_VERSION}-bin.zip\" \u003e gradle-${GRADLE_VERSION}-bin.zip.md5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "md5sum -c gradle-${GRADLE_VERSION}-bin.zip.md5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip \"gradle-${GRADLE_VERSION}-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s \"/usr/lib/gradle-${GRADLE_VERSION}/bin/gradle\" /usr/bin/gradle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm \"gradle-${GRADLE_VERSION}-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/src/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/WEB-INF/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://updates.jenkins-ci.org/latest/checkstyle.hpi -o /tmp/WEB-INF/plugins/checkstyle.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/cloverphp.hpi -o /tmp/WEB-INF/plugins/cloverphp.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/crap4j.hpi -o /tmp/WEB-INF/plugins/crap4j.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/dry.hpi -o /tmp/WEB-INF/plugins/dry.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/htmlpublisher.hpi -o /tmp/WEB-INF/plugins/htmlpublisher.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/jdepend.hpi -o /tmp/WEB-INF/plugins/jdepend.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/plot.hpi -o /tmp/WEB-INF/plugins/plot.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/pmd.hpi -o /tmp/WEB-INF/plugins/pmd.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/violations.hpi -o /tmp/WEB-INF/plugins/violations.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/xunit.hpi -o /tmp/WEB-INF/plugins/xunit.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/git-client.hpi -o /tmp/WEB-INF/plugins/git-client.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/scm-api.hpi -o /tmp/WEB-INF/plugins/scm-api.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/git.hpi -o /tmp/WEB-INF/plugins/git.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/bitbucket.hpi -o /tmp/WEB-INF/plugins/bitbucket.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/publish-over-ssh.hpi -o /tmp/WEB-INF/plugins/publish-over-ssh.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/greenballs.hpi -o /tmp/WEB-INF/plugins/greenballs.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/htmlpublisher.hpi -o /tmp/WEB-INF/plugins/htmlpublisher.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/workflow-aggregator.hpi -o /tmp/WEB-INF/plugins/workflow-aggregator.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/ansicolor.hpi -o /tmp/WEB-INF/plugins/ansicolor.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/gradle.hpi -o /tmp/WEB-INF/plugins/gradle.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/deploy.hpi -o /tmp/WEB-INF/plugins/deploy.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/findbugs.hpi -o /tmp/WEB-INF/plugins/findbugs.hpi \u0026\u0026   curl -L https://updates.jenkins-ci.org/latest/analysis-core.hpi -o /tmp/WEB-INF/plugins/analysis-core.hpi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://updates.jenkins-ci.org/latest/docker-build-publish.hpi -o /tmp/WEB-INF/plugins/docker-build-publish.hpi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp;   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/checkstyle.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/cloverphp.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/crap4j.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/dry.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/htmlpublisher.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/jdepend.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/plot.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/pmd.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/violations.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/xunit.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/docker-build-publish.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/git-client.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/scm-api.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/git.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/bitbucket.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/publish-over-ssh.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/greenballs.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/htmlpublisher.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/workflow-aggregator.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/ansicolor.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/gradle.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/deploy.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/findbugs.hpi \u0026\u0026   zip --grow /usr/share/jenkins/jenkins.war WEB-INF/plugins/analysis-core.hpi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y -f install php5-cli php5-dev php5-curl php5-mysql curl php-pear ant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_MD5",
              "Value": "60e6fdf41840104a23debe16db15a2af"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x      \u0026\u0026 curl -SL \"http://www.xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz\" -o xdebug.tgz      \u0026\u0026 echo $XDEBUG_MD5 xdebug.tgz | md5sum -c -      \u0026\u0026 mkdir -p /usr/src/xdebug      \u0026\u0026 tar -xf xdebug.tgz -C /usr/src/xdebug --strip-components=1      \u0026\u0026 rm xdebug.*      \u0026\u0026 cd /usr/src/xdebug      \u0026\u0026 phpize      \u0026\u0026 ./configure      \u0026\u0026 make -j\"$(nproc)\"      \u0026\u0026 make install      \u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ext-xdebug.ini",
            "/etc/php5/mods-available/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ext-xdebug.ini",
            "/etc/php5/cli/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y -f install docker.io"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown jenkins:jenkins /home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/home/jenkins/composer.phar --working-dir=\"/home/jenkins\" -n require phing/phing:2.* notfloran/phing-composer-security-checker:~1.0     phploc/phploc:* phpunit/phpunit:~4.0 pdepend/pdepend:~2.0 phpmd/phpmd:~2.2 sebastian/phpcpd:*     squizlabs/php_codesniffer:* mayflower/php-codebrowser:~1.1 codeception/codeception:*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get clean -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        }
      ]
    }
  ]
}