MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.11.1-alpine3.8
  Commands:
  - Env:
    - Key: WORK_DIR
      Value: $GOPATH/src/github.com/prometheus/
    Name: env
  - Name: workdir
    Path: $WORK_DIR
  - CmdLine:
    - set -ex; apk update; apk add --no-cache make git;     git clone https://github.com/prometheus/node_exporter.git;     cd
      node_exporter; make build;     mkdir -p /node_exporter/bin;     cp -a node_exporter
      /node_exporter/bin/
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.1-alpine3.8
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.11.1-alpine3.8 as builder
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Platform/IIBU <zhangzhitao@fmsh.com.cn>"'
    Name: label
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - CmdLine:
    - set -ex; apk upgrade; apk add curl bash tzdata busybox-extras;     ln -sf /usr/share/zoneinfo/${TZ}
      /etc/localtime;     echo ${TZ} > /etc/timezone;     ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download";     ALPINE_GLIBC_PACKAGE_VERSION="2.28-r0";     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk";     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk";     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk";     apk
      add --no-cache --virtual=.build-dependencies wget ca-certificates;     echo         "-----BEGIN
      PUBLIC KEY-----        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m        1QIDAQAB        -----END
      PUBLIC KEY-----" | sed 's/   */\n/g' > "/etc/apk/keys/sgerrand.rsa.pub";     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME";     apk
      add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME";         rm
      "/etc/apk/keys/sgerrand.rsa.pub";     /usr/glibc-compat/bin/localedef --force
      --inputfile POSIX --charmap UTF-8 "$LANG" || true;     echo "export LANG=$LANG"
      > /etc/profile.d/locale.sh;         apk del glibc-i18n;         rm "/root/.wget-hsts";     apk
      del .build-dependencies;     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME";     rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /node_exporter/bin
    - /bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint
    - /
  - CmdLine:
    - chmod 770 /*.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /node_exporter
  - Name: volume
    Volumes:
    - /node_exporter
  - Name: expose
    Ports:
    - "9100"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --path.sysfs=/host/sys
    - --path.procfs=/host/proc
    - --collector.textfile.directory=/etc/node-exporter/
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    - --no-collector.ipvs
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
