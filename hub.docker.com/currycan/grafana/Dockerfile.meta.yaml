MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Platform/IIBU <zhangzhitao@fmsh.com.cn>"'
    Name: label
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - Env:
    - Key: GRAFANA_VERSION
      Value: 5.3.1
    Name: env
  - CmdLine:
    - set -ex; apk upgrade; apk add --no-cache --no-progress bash tzdata busybox-extras
      curl ca-certificates libc6-compat su-exec;     ln -sf /usr/share/zoneinfo/${TZ}
      /etc/localtime;     echo ${TZ} > /etc/timezone;     mkdir -p /tmp/grafana; curl
      http://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz     |
      tar xfz - --strip-components=1 -C /tmp/grafana;     install -m 755 /tmp/grafana/bin/grafana-server
      /usr/sbin/;     install -m 755 /tmp/grafana/bin/grafana-cli /usr/sbin/;     mkdir
      -p /grafana/home/.aws /grafana/data /grafana/logs /grafana/plugins;     cp -a
      /tmp/grafana/conf /grafana/home/;     cp -a /tmp/grafana/public /grafana/home/;     cp
      -a /tmp/grafana/VERSION /grafana/home/;     rm -rf /tmp/grafana /var/cache/apk/*;
    Name: run
    PrependShell: true
  - Env:
    - Key: GF_PATHS_HOME
      Value: /grafana/home
    - Key: GF_PATHS_LOGS
      Value: /grafana/logs
    - Key: GF_PATHS_DATA
      Value: /grafana/data
    - Key: GF_PATHS_PLUGINS
      Value: /grafana/plugins
    - Key: GF_PATHS_CONFIG
      Value: /grafana/config/grafana.ini
    - Key: GF_PATHS_PROVISIONING
      Value: /grafana/config/provisioning
    - Key: DATASOURCES_PATH
      Value: /grafana/datasources
    - Key: DASHBOARDS_PATH
      Value: /grafana/dashboards
    - Key: UPGRADEALL
      Value: "false"
    - Key: GF_SECURITY_ADMIN_PASSWORD
      Value: admin
    - Key: GF_SECURITY_ADMIN_USER
      Value: admin
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - /grafana/config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - datasources
    - /grafana/datasources/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dashboards
    - /grafana/dashboards/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint
    - /
  - CmdLine:
    - chmod 770 /*.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - Name: workdir
    Path: /grafana
  - Name: volume
    Volumes:
    - /grafana
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - grafana
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
