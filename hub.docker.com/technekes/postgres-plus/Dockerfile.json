{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:alpine",
      "SourceCode": "FROM postgres:alpine",
      "Platform": "",
      "From": {
        "Image": "postgres:alpine"
      },
      "Commands": [
        {
          "Maintainer": "Jack A Ross \u003cjack.ross@technekes.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --update --no-cache --virtual .fetch-deps     ca-certificates     openssl     unzip     wget     git     \u0026\u0026 apk add --update --no-cache --virtual .run_deps     freetds     python     \u0026\u0026 apk add --update --no-cache --virtual .build-deps     freetds-dev     gcc     libc-dev     make     python-dev     py-pip     \u0026\u0026 pip install --upgrade pip    \u0026\u0026 apk add --update --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/main/ --virtual .build-deps     postgresql-dev     \u0026\u0026 rm -rf /usr/local/include   \u0026\u0026 ln -s /usr/include/ /usr/local/include     \u0026\u0026 cd /tmp   \u0026\u0026 wget -O \"tds_fdw.zip\" \"https://github.com/GeoffMontee/tds_fdw/archive/master.zip\"   \u0026\u0026 unzip tds_fdw.zip   \u0026\u0026 cd tds_fdw-master     \u0026\u0026 make USE_PGXS=1   \u0026\u0026 make USE_PGXS=1 install     \u0026\u0026 cd /tmp   \u0026\u0026 git clone git://github.com/Kozea/Multicorn.git   \u0026\u0026 cd Multicorn   \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 cd /tmp   \u0026\u0026 git clone git://github.com/lincolnturner/gspreadsheet_fdw.git   \u0026\u0026 cd gspreadsheet_fdw   \u0026\u0026 pip install --upgrade oauth2client gspread  \u0026\u0026 python setup.py install     \u0026\u0026 apk del     .fetch-deps     .build-deps     \u0026\u0026 rm -rf /tmp/tds_fdw*   \u0026\u0026 rm -rf /tmp/Multicorn   \u0026\u0026 rm -rf /tmp/gspreadsheet_fdw"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint-extended.sh",
            "/docker-entrypoint-extended.sh"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint-extended.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}