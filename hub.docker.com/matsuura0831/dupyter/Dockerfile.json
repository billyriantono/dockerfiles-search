{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANACONDA_VERSION",
              "Value": "anaconda3-5.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "/opt/pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y wget git fonts-ipafont fonts-ipaexfont xvfb python-opengl \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/.config/matplotlib \u0026\u0026   echo \"font.family: IPAexGothic\" \u003e ${HOME}/.config/matplotlib/matplotlibrc \u0026\u0026   rm -f ${HOME}/.cache/matplotlib/fontList.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/yyuu/pyenv.git ${PYENV_ROOT} \u0026\u0026   git clone https://github.com/yyuu/pyenv-virtualenv.git ${PYENV_ROOT}/plugins/pyenv-virtualenv \u0026\u0026   echo 'eval \"$(pyenv init -)\"' \u003e\u003e ${HOME}/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv install ${ANACONDA_VERSION} \u0026\u0026   pyenv global ${ANACONDA_VERSION} \u0026\u0026   conda update -n base conda \u0026\u0026   conda update --all \u0026\u0026   pip install --upgrade pip \u0026\u0026   jupyter notebook --generate-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./requirements/base.requirements.txt",
            "/base.requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install -r /base.requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./requirements/cpu.dnn.requirements.txt",
            "/dnn.requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install -r /dnn.requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./scripts/entrypoint_jupyter.sh",
            "/entrypoint_jupyter.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/entrypoint_jupyter.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}