MetaArgs: null
Stages:
- BaseName: islandora/claw-base
  Commands:
  - Maintainer: Nigel Banks <nigel.g.banks@gmail.com>
    Name: maintainer
  - Labels:
    - Key: '"Description"'
      Value: '"Islandora CLAW: Kitchen sink"'
    - Key: '"License"'
      Value: '"MIT"'
    - Key: '"Version"'
      Value: '"0.0.1"'
    Name: label
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8181"
  - Name: expose
    Ports:
    - "3306"
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Key: DOCKERIZE_VERSION
    Name: arg
    Value: '"0.2.0"'
  - CmdLine:
    - curl -L https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz
      |     tar -xzf - -C /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apk-install git zsh vim bash the_silver_searcher &&     cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - apk-install apache2 apache2-utils apache2-proxy &&     mkdir /run/apache2 &&     chown
      -R apache:apache /var/www &&     chmod 2775 /var/www/localhost &&     cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - apk-install mariadb mysql-client &&     mkdir /run/mysqld &&     chown mysql:mysql
      /run/mysqld &&     cleanup
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/default-jvm
    Name: env
  - CmdLine:
    - apk-install openjdk8 &&     cleanup
    Name: run
    PrependShell: true
  - Key: MAVEN_VERSION
    Name: arg
    Value: '"3.3.9"'
  - Env:
    - Key: M2_HOME
      Value: /opt/maven
    - Key: PATH
      Value: ${PATH}:/opt/maven/bin
    Name: env
  - CmdLine:
    - curl -L http://archive.apache.org/dist/maven/maven-${MAVEN_VERSION%%.*}/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
      |     tar -xzf - -C /opt &&     mv /opt/apache-maven-${MAVEN_VERSION} ${M2_HOME}
    Name: run
    PrependShell: true
  - Key: TOMCAT_VERSION
    Name: arg
    Value: '"7.0.69"'
  - Env:
    - Key: CATALINA_HOME
      Value: /opt/tomcat
    - Key: CATALINA_BASE
      Value: /opt/tomcat
    - Key: CATALINA_OPTS
      Value: '"-server -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"'
    - Key: PATH
      Value: ${PATH}:/opt/tomcat/bin
    Name: env
  - CmdLine:
    - addgroup tomcat &&     adduser -s /sbin/nologin -G tomcat -SDH -h ${CATALINA_HOME}
      tomcat
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L http://archive.apache.org/dist/tomcat/tomcat-${TOMCAT_VERSION%%.*}/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz
      |     tar -xzf - -C /tmp &&     mv /tmp/apache-tomcat-${TOMCAT_VERSION} ${CATALINA_HOME}
      &&     rm -rf ${CATALINA_HOME}/webapps/docs &&     rm -rf ${CATALINA_HOME}/webapps/examples
      &&     cleanup
    Name: run
    PrependShell: true
  - Key: FEDORA_VERSION
    Name: arg
    Value: '"4.4.0"'
  - Env:
    - Key: FEDORA_HOME
      Value: '"/mnt/fedora-data"'
    - Key: CATALINA_OPTS
      Value: '"${CATALINA_OPTS} -Dfcrepo.home=/mnt/fedora-data"'
    Name: env
  - CmdLine:
    - mkdir -p ${FEDORA_HOME} &&     chown tomcat:tomcat ${FEDORA_HOME} &&     curl
      -o ${CATALINA_BASE}/webapps/fcrepo.war     -L https://github.com/fcrepo4/fcrepo4/releases/download/fcrepo-${FEDORA_VERSION}/fcrepo-webapp-${FEDORA_VERSION}.war
      &&     mkdir ${CATALINA_BASE}/webapps/fcrepo &&     unzip -o ${CATALINA_BASE}/webapps/fcrepo.war
      -d ${CATALINA_HOME}/webapps/fcrepo &&     rm -rf ${CATALINA_HOME}/webapps/*.war
      &&     cleanup
    Name: run
    PrependShell: true
  - Key: BLAZEGRAPH_VERSION
    Name: arg
    Value: '"1.5.1"'
  - Env:
    - Key: CATALINA_OPTS
      Value: '"${CATALINA_OPTS} -Dcom.bigdata.rdf.sail.webapp.ConfigParams.propertyFile=${CATALINA_BASE}/webapps/bigdata/WEB-INF/RWStore.properties"'
    Name: env
  - CmdLine:
    - curl -o ${CATALINA_BASE}/webapps/bigdata.war     -L http://sourceforge.net/projects/bigdata/files/bigdata/${BLAZEGRAPH_VERSION}/bigdata.war/download
      &&     mkdir ${CATALINA_BASE}/webapps/bigdata &&     unzip -o ${CATALINA_BASE}/webapps/bigdata.war
      -d ${CATALINA_HOME}/webapps/bigdata &&     rm -rf ${CATALINA_HOME}/webapps/*.war
      &&     mkdir /opt/blazegraph &&     chown tomcat:tomcat /opt/blazegraph &&     cleanup
    Name: run
    PrependShell: true
  - Key: SOLR_VERSION
    Name: arg
    Value: '"4.10.4"'
  - Key: SOLR_DEPENDENCIES
    Name: arg
    Value: '"log4j-1.2.17.jar slf4j-api-1.7.6.jar slf4j-log4j12-1.7.6.jar"'
  - Env:
    - Key: SOLR_HOME
      Value: /opt/solr
    Name: env
  - CmdLine:
    - curl -L http://archive.apache.org/dist/lucene/solr/${SOLR_VERSION}/solr-${SOLR_VERSION}.tgz
      |     tar -xzf - -C /tmp &&     mkdir ${CATALINA_BASE}/webapps/solr &&     cp
      /tmp/solr-${SOLR_VERSION}/dist/solr-${SOLR_VERSION}.war ${CATALINA_BASE}/webapps/solr.war
      &&     unzip -o ${CATALINA_BASE}/webapps/solr.war -d ${CATALINA_BASE}/webapps/solr
      &&     for dep in $SOLR_DEPENDENCIES; do         cp /tmp/solr-${SOLR_VERSION}/example/lib/ext/$dep
      ${CATALINA_BASE}/lib;     done &&     curl -o ${CATALINA_BASE}/lib/commons-logging-1.1.2.jar     -L
      http://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.2/commons-logging-1.1.2.jar
      &&     mkdir ${SOLR_HOME} &&     cp -a /tmp/solr-${SOLR_VERSION}/example/solr/*  ${SOLR_HOME}/
      &&     curl -L https://ftp.drupal.org/files/projects/apachesolr-7.x-1.8.tar.gz
      |     tar -xzf - -C /tmp &&     cp -r /tmp/apachesolr/solr-conf/solr-4.x/* ${SOLR_HOME}/collection1/conf
      &&     chown -R tomcat:tomcat ${SOLR_HOME} &&     rm -rf ${CATALINA_HOME}/webapps/*.war
      &&     cleanup
    Name: run
    PrependShell: true
  - Key: KARAF_VERSION
    Name: arg
    Value: '"4.0.4"'
  - Env:
    - Key: KARAF_HOME
      Value: '"/opt/karaf"'
    - Key: KARAF_OPTS
      Value: '"-Xms128M -Xmx512M -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass"'
    - Key: PATH
      Value: ${PATH}:/opt/karaf/bin
    Name: env
  - CmdLine:
    - addgroup karaf &&     adduser -s /sbin/nologin -G karaf -DH -h ${KARAF_HOME}
      karaf
    Name: run
    PrependShell: true
  - CmdLine:
    - apk-install openssh &&     curl -L http://archive.apache.org/dist/karaf/${KARAF_VERSION}/apache-karaf-${KARAF_VERSION}.tar.gz
      |     tar -xzf - -C /tmp &&     mv /tmp/apache-karaf-${KARAF_VERSION} /opt/karaf
      &&     cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - apk-install     php-apache2     php-ctype     php-curl     php-gd     php-json     php-mysql     php-openssl     php-pdo     php-pdo_mysql     php-pear     php-phar     php-posix     php-soap     php-xml     php-xmlreader     php-xsl
      &&     cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - apk-install make autoconf gcc openssl-dev php-dev libc-dev &&     touch /etc/php/conf.d/stomp.ini
      &&     pear config-set php_ini /etc/php/conf.d/stomp.ini &&     pear install
      pecl/stomp &&     pear config-set php_ini /etc/php/php.ini &&     apk-uninstall
      make autoconf gcc openssl-dev php-dev libc-dev &&     cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      &&     mv /usr/local/bin/composer.phar /usr/local/bin/composer &&     chmod
      a+x /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Key: DRUSH_VERSION
    Name: arg
    Value: '"8.0.2"'
  - CmdLine:
    - curl -L -o /usr/local/bin/drush https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar
      &&     chmod a+x /usr/local/bin/drush
    Name: run
    PrependShell: true
  - Key: DRUPAL_VERSION
    Name: arg
    Value: '"7.43"'
  - Env:
    - Key: DRUPAL_ROOT
      Value: /var/www/localhost/htdocs
    Name: env
  - CmdLine:
    - drush dl -y --destination=/var/www/localhost --drupal-project-rename=htdocs
      drupal-${DRUPAL_VERSION} &&     mkdir ${DRUPAL_ROOT}/sites/all/modules/contrib
      &&     mkdir ${DRUPAL_ROOT}/sites/all/modules/custom &&     mkdir ${DRUPAL_ROOT}/sites/all/modules/features
      &&     chown apache:apache ${DRUPAL_ROOT} &&     cleanup
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/Islandora-CLAW/claw_install_profile/archive/master.tar.gz
      |     tar -xzf - -C ${DRUPAL_ROOT}/profiles &&     mv ${DRUPAL_ROOT}/profiles/claw_install_profile-master
      ${DRUPAL_ROOT}/profiles/claw_install_profile &&     mkdir ${DRUPAL_ROOT}/sites/all/libraries/ARC2
      &&     cd ${DRUPAL_ROOT} && drush make -y --concurrency=4 --no-cache     ${DRUPAL_ROOT}/profiles/claw_install_profile/claw_install_profile.make
      &&     mv ${DRUPAL_ROOT}/sites/all/libraries/ARC2/arc2 ${DRUPAL_ROOT}/sites/all/libraries/ARC2/arc
      &&     cleanup
    Name: run
    PrependShell: true
  - Env:
    - Key: CLAW_HOME
      Value: /opt/claw
    Name: env
  - CmdLine:
    - apk-install perl
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/Islandora-CLAW/CLAW.git ${CLAW_HOME} &&     cd
      ${CLAW_HOME} && git submodule update --init --recursive &&     chmod -R a+rx
      ${CLAW_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${CLAW_HOME}/Alpaca/commands && composer install &&     cd ${CLAW_HOME}/Alpaca
      && mvn clean install -Dmaven.repo.local=${M2_HOME}/repository
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ${CLAW_HOME}/islandora ${DRUPAL_ROOT}/sites/all/modules/islandora &&     chown
      -R apache:apache ${CLAW_HOME}/islandora &&     chmod -R g+rw ${CLAW_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh &&     rm
      -fr /root/.oh-my-zsh/.git &&     cp /root/.oh-my-zsh/templates/zshrc.zsh-template
      ~/.zshrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs
    - /
  From:
    Image: islandora/claw-base
  Name: ""
  Platform: ""
  SourceCode: FROM islandora/claw-base
