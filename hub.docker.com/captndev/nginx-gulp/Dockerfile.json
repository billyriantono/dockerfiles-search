{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx",
      "SourceCode": "FROM nginx",
      "Platform": "",
      "From": {
        "Image": "nginx"
      },
      "Commands": [
        {
          "Maintainer": "Jonas Jabari \u003cjabarijonas@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y       curl       bzip2       git       build-essential       bison       libreadline6-dev       zlib1g-dev       libssl-dev       libyaml-dev       libxml2-dev       autoconf       libc6-dev       ncurses-dev       automake       libtool       unzip       ruby-full       rubygems     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install compass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y       nodejs     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g gulp bower       \u0026\u0026 echo '{ \"allow_root\": true }' \u003e /root/.bowerrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config/nginx.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "script/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "development"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}