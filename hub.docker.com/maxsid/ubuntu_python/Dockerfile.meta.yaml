MetaArgs: null
Stages:
- BaseName: eclipse/stack-base:ubuntu
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "sudo apt-get update && sudo apt-get install -y --no-install-recommends \t    autoconf
      \t    automake \t    bzip2 \t    file \t    g++ \t    gcc \t    imagemagick
      \t    libbz2-dev \t    libc6-dev \t    libcurl4-openssl-dev libdb-dev libevent-dev
      libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev \t    libkrb5-dev
      liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev
      libpng-dev \t    libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool
      libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev
      \t\ttk-dev \t\tuuid-dev \t&& sudo rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.7.1
    Name: env
  - CmdLine:
    - "set -ex \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm
      -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& sudo mkdir -p /usr/src/python \t&&
      sudo tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm
      python.tar.xz \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query
      DEB_BUILD_GNU_TYPE)\" \t&& sudo ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip
      \t&& sudo make -j \"$(nproc)\" \t&& sudo make install \t&& sudo ldconfig \t\t&&
      find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name
      tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo'
      \\) \\) \t\t\\) -exec sudo rm -rf '{}' + \t&& sudo rm -rf /usr/src/python \t\t&&
      python3 --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& sudo ln -s idle3 idle \t&& sudo ln -s pydoc3 pydoc \t&&
      sudo ln -s python3 python \t&& sudo ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: "18.1"
    Name: env
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tsudo
      python get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name
      '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec sudo rm -rf '{}' +; \tsudo rm
      -f get-pip.py"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: eclipse/stack-base:ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM eclipse/stack-base:ubuntu
