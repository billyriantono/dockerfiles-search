{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fedora:24",
      "SourceCode": "FROM fedora:24",
      "Platform": "",
      "From": {
        "Image": "fedora:24"
      },
      "Commands": [
        {
          "CmdLine": [
            "(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*; rm -f /etc/systemd/system/*.wants/*; rm -f /lib/systemd/system/local-fs.target.wants/*; rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*; rm -f /lib/systemd/system/basic.target.wants/*; rm -f /lib/systemd/system/anaconda.target.wants/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dnf clean all \u0026\u0026     dnf -y --setopt=install_weak_deps=false install     acl     asciidoc     bzip2     dbus-python     file     findutils     git     glibc-locale-source     iproute     make     mariadb-server     mercurial     MySQL-python     openssh-clients     openssh-server     procps     python2-dnf     python-coverage     python-httplib2     python-jinja2     python-keyczar     python-mock     python-nose     python-paramiko     python-passlib     python-pip     python-setuptools     python-virtualenv     PyYAML     rpm-build     rubygems     subversion     sudo     tar     unzip     which     yum     zip \tjava     \u0026\u0026     dnf clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/ansible/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup",
            "/run",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key \u0026\u0026     ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key \u0026\u0026     ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa \u0026\u0026     cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \u0026\u0026     for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" \u003e\u003e /root/.ssh/known_hosts; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install junit-xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /.ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 777 /.ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 777 /etc/ansible/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/opt/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /opt/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}