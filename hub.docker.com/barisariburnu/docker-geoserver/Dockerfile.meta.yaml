MetaArgs:
- DefaultValue: 9-jdk11
  Key: IMAGE_VERSION
  ProvidedValue: null
  Value: 9-jdk11
- DefaultValue: noninteractive
  Key: DEBIAN_FRONTEND
  ProvidedValue: null
  Value: noninteractive
Stages:
- BaseName: tomcat:${IMAGE_VERSION}
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Barış Arıburnu <barisariburnu@gmail.com>"'
    Name: label
  - Env:
    - Key: GEOSERVER_VERSION
      Value: 2.16.0
    Name: env
  - Env:
    - Key: GEOSERVER_DIR
      Value: /usr/local/geoserver
    Name: env
  - Env:
    - Key: GEOSERVER_DATA_DIR
      Value: /var/local/geoserver/data
    Name: env
  - Env:
    - Key: INITIAL_MEMORY
      Value: 768M
    Name: env
  - Env:
    - Key: MAXIMUM_MEMORY
      Value: 1560M
    Name: env
  - Env:
    - Key: CATALINA_OPTS
      Value: '"-server -Djava.awt.headless=true -DGEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}     -Xrs
        -XX:PerfDataSamplingInterval=500 -Xms${INITIAL_MEMORY} -Xmx${MAXIMUM_MEMORY}
        -XX:NewSize=48m     -Dorg.geotools.referencing.forceXY=true -XX:SoftRefLRUPolicyMSPerMB=36000
        -XX:+UseParallelGC -XX:NewRatio=2     -XX:+CMSClassUnloadingEnabled -Dfile.encoding=UTF8
        -Duser.timezone=GMT -Djavax.servlet.request.encoding=UTF-8     -Djavax.servlet.response.encoding=UTF-8
        -Duser.timezone=GMT -Dorg.geotools.shapefile.datetime=true     -Dorg.geotools.shapefile.datetime=true
        -Xbootclasspath/a:${GEOSERVER_DIR}/WEB-INF/lib/marlin.jar     -Dsun.java2d.renderer=org.marlin.pisces.PiscesRenderingEngine
        -Doracle.jdbc.timezoneAsRegion=false"'
    Name: env
  - CmdLine:
    - echo "deb http://httpredir.debian.org/debian stretch contrib" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -yq ttf-mscorefonts-installer
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${GEOSERVER_DIR}     && mkdir -p ${GEOSERVER_DATA_DIR}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GEOSERVER_DIR}
  - CmdLine:
    - "wget --progress=bar:force:noscroll -c --no-check-certificate http://sourceforge.net/projects/geoserver/files/GeoServer/${GEOSERVER_VERSION}/geoserver-${GEOSERVER_VERSION}-war.zip
      \t&& unzip geoserver-${GEOSERVER_VERSION}-war.zip \t&& unzip geoserver.war     &&
      mv data/* ${GEOSERVER_DATA_DIR} \t&& rm -rf geoserver-${GEOSERVER_VERSION}-war.zip
      geoserver.war target *.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '\:</web-app>:i    <filter>\n        <filter-name>CorsFilter</filter-name>\n        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>\n        <init-param>\n            <param-name>cors.allowed.origins</param-name>\n            <param-value>*</param-value>\n        </init-param>\n        <init-param>\n            <param-name>cors.allowed.methods</param-name>\n            <param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>\n        </init-param>\n    </filter>\n    <filter-mapping>\n        <filter-name>CorsFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>'
      ${GEOSERVER_DIR}/WEB-INF/web.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup --gid 1099 tomcat && useradd -m -u 1099 -g tomcat tomcat     && chown
      -R tomcat:tomcat .     && chown -R tomcat:tomcat ${GEOSERVER_DATA_DIR}     &&
      chown -R tomcat:tomcat ${GEOSERVER_DIR}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - resources/geoserver.xml
    - ${CATALINA_HOME}/conf/Catalina/localhost/geoserver.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/*.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/controlflow.properties
    - ${GEOSERVER_DATA_DIR}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/ojdbc8.jar
    - ${GEOSERVER_DIR}/WEB-INF/lib/ojdbc8.jar
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/sqljdbc4-4.0.jar
    - ${GEOSERVER_DIR}/WEB-INF/lib/sqljdbc4-4.0.jar
  - CmdLine:
    - chmod -R 755     /usr/local/bin/entrypoint.sh     /usr/local/bin/setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: tomcat:${IMAGE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM tomcat:${IMAGE_VERSION}
