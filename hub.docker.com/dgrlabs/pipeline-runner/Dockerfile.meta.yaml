MetaArgs: null
Stages:
- BaseName: golang:1-alpine3.10
  Commands:
  - Env:
    - Key: HELM_VERSION
      Value: v2.15.0
    Name: env
  - Env:
    - Key: HELM3_VERSION
      Value: v3.0.0
    Name: env
  - Env:
    - Key: ISTIO_VERSION
      Value: 1.0.5
    Name: env
  - CmdLine:
    - echo 'http://dl-cdn.alpinelinux.org/alpine/edge/community' >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add gcc libc-dev openssh-client python dep ca-certificates git
      wget curl tar jq bash docker
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /
    Name: env
  - Env:
    - Key: PATH
      Value: /go/google-cloud-sdk/bin:$PATH
    Name: env
  - CmdLine:
    - wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip &&
      unzip google-cloud-sdk.zip && rm google-cloud-sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true
      --rc-path=/.bashrc --additional-components app kubectl alpha beta
    Name: run
    PrependShell: true
  - CmdLine:
    - google-cloud-sdk/bin/gcloud config set --installation component_manager/disable_update_check
      true
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_FILENAME
      Value: helm-${HELM_VERSION}-linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: HELM_URL
      Value: https://storage.googleapis.com/kubernetes-helm/${HELM_FILENAME}
    Name: env
  - CmdLine:
    - curl -o /tmp/${HELM_FILENAME} ${HELM_URL}   && tar -zxvf /tmp/${HELM_FILENAME}
      -C /tmp   && mv /tmp/linux-amd64/helm /bin/helm
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM3_FILENAME
      Value: helm-${HELM3_VERSION}-linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: HELM3_URL
      Value: https://get.helm.sh/${HELM3_FILENAME}
    Name: env
  - CmdLine:
    - mkdir /tmp/helm3   && curl -o /tmp/helm3/${HELM3_FILENAME} ${HELM3_URL}   &&
      tar -zxvf /tmp/helm3/${HELM3_FILENAME} -C /tmp/helm3   && mv /tmp/helm3/linux-amd64/helm
      /bin/helm3
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_DEPS
      Value: '"gettext"'
    - Key: RUNTIME_DEPS
      Value: '"libintl"'
    Name: env
  - CmdLine:
    - set -x &&     apk add --update $RUNTIME_DEPS &&     apk add --virtual build_deps
      $BUILD_DEPS &&      cp /usr/bin/envsubst /usr/local/bin/envsubst &&     apk
      del build_deps
    Name: run
    PrependShell: true
  - Env:
    - Key: ISTIO_FILENAME
      Value: istio-${ISTIO_VERSION}-linux.tar.gz
    Name: env
  - Env:
    - Key: ISTIO_URL
      Value: https://github.com/istio/istio/releases/download/${ISTIO_VERSION}/${ISTIO_FILENAME}
    Name: env
  - CmdLine:
    - curl -L -o /tmp/${ISTIO_FILENAME} ${ISTIO_URL}   && tar -xf /tmp/${ISTIO_FILENAME}
      -C /tmp   && mv /tmp/istio-${ISTIO_VERSION}/bin/istioctl /bin/istioctl
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* && mkdir /root/.ssh/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1-alpine3.10
