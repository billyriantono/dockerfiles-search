{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ligo/lalsuite-dev:el7",
      "SourceCode": "FROM ligo/lalsuite-dev:el7",
      "Platform": "",
      "From": {
        "Image": "ligo/lalsuite-dev:el7"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "yum -y install curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L http://download.pegasus.isi.edu/wms/download/rhel/7/pegasus.repo \u003e /etc/yum.repos.d/pegasus.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L http://htcondor.org/yum/RPM-GPG-KEY-HTCondor \u003e RPM-GPG-KEY-HTCondor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm --import RPM-GPG-KEY-HTCondor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f RPM-GPG-KEY-HTCondor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L http://htcondor.org/yum/repo.d/htcondor-stable-rhel7.repo \u003e /etc/yum.repos.d/htcondor-stable-rhel7.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum makecache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install python2-pip python-setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install git2u-all lscsoft-external-cbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install zlib-devel libpng-devel libjpeg-devel libsqlite3-dev sqlite-devel db4-devel openssl-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install hdf5-static libxml2-static zlib-static libstdc++-static cfitsio-static glibc-static fftw-static gsl-static openssl-static"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install tkinter libpng-devel lynx telnet wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install compat-glibc compat-glibc-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install gd-devel audit-libs-devel libcap-devel nss-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install xmlto asciidoc hmaccalc newt-devel 'perl(ExtUtils::Embed)' pesign elfutils-devel binutils-devel numactl-devel pciutils-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install dejagnu sharutils gcc-gnat libgnat dblatex gmp-devel mpfr-devel libmpc-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install libuuid-devel netpbm-progs nasm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install gettext-devel avahi-devel dyninst-devel crash-devel latex2html emacs libvirt-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install xmlto-tex patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install ant asciidoc xsltproc fop docbook-style-xsl.noarch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install vim-enhanced man-db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install globus-gsi-cert-utils-progs gsi-openssh-clients osg-ca-certs ligo-proxy-utils ecp-cookie-init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install condor condor-classads condor-python condor-procd condor-external-libs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install pegasus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install lscsoft-all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pycbc-sshd",
            "/usr/bin/pycbc-sshd"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/pycbc-sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y remove \"*lal*\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 1000 pycbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 1000 -g 1000 -ms /bin/bash pycbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "pycbc"
        },
        {
          "Name": "workdir",
          "Path": "/home/pycbc"
        },
        {
          "CmdLine": [
            "cp -R /etc/skel/.??* ~"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "virtualenv pycbc-software ;       source ~/pycbc-software/bin/activate ;       pip install --upgrade pip ;       pip install six packaging appdirs ;       pip install --upgrade setuptools ;       pip install \"numpy\u003e=1.6.4\" \"h5py\u003e=2.5\" unittest2 python-cjson Cython decorator ;       pip install \"scipy\u003e=0.13.0\" ;       SWIG_FEATURES=\"-cpperraswarn -includeall -I/usr/include/openssl\" pip install M2Crypto ;       deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source ~/pycbc-software/bin/activate ;       mkdir -p ~/src ;       cd ~/src ;       git clone https://github.com/lscsoft/lalsuite.git ;       cd ~/src/lalsuite ;       git checkout 95ad957cee1a37b7fc3128883d8b723556f9ec38 ;       ./00boot ;       ./configure --prefix=${VIRTUAL_ENV}/opt/lalsuite --enable-swig-python         --disable-lalstochastic --disable-lalxml --disable-lalinference         --disable-laldetchar --disable-lalapps 2\u003e\u00261 | grep -v checking ;       make install ;       echo 'source ${VIRTUAL_ENV}/opt/lalsuite/etc/lalsuite-user-env.sh' \u003e\u003e ${VIRTUAL_ENV}/bin/activate ;       deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source ~/pycbc-software/bin/activate ;       cd ~/src/lalsuite/lalapps ;       LIBS=\"-lhdf5_hl -lhdf5 -lcrypto -lssl -ldl -lz -lstdc++\" ./configure --prefix=${VIRTUAL_ENV}/opt/lalsuite          --enable-static-binaries --disable-lalinference          --disable-lalburst --disable-lalpulsar          --disable-lalstochastic ;       cd ~/src/lalsuite/lalapps/src/lalapps ;       make ;       cd ~/src/lalsuite/lalapps/src/inspiral ;      make lalapps_inspinj ;       cp lalapps_inspinj $VIRTUAL_ENV/bin ;       deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source ~/pycbc-software/bin/activate ;         pip install http://download.pegasus.isi.edu/pegasus/4.7.4/pegasus-python-source-4.7.4.tar.gz ;         pip install dqsegdb ;         pip install \"Sphinx\u003e=1.4.2\" numpydoc sphinx-rtd-theme ;         pip install \"git+https://github.com/ligo-cbc/sphinxcontrib-programoutput.git#egg=sphinxcontrib-programoutput\" ;         pip install ipython jupyter hide_code;         jupyter nbextension install --sys-prefix --py hide_code;         jupyter nbextension enable --sys-prefix --py hide_code;         jupyter serverextension enable --sys-prefix --py hide_code;         deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'source ${HOME}/pycbc-software/bin/activate' \u003e\u003e ~/.bash_profile"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}