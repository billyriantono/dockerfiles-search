{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jdk",
      "SourceCode": "FROM java:8-jdk",
      "Platform": "",
      "From": {
        "Image": "java:8-jdk"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "${JENKINS_VERSION:-2.5}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SHA",
              "Value": "${JENKINS_SHA:-5e669825a955c9091ac8a858f4f6dcae782f3d87}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SLAVE_AGENT_PORT",
              "Value": "50000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RANCHER_COMPOSE",
              "Value": "v0.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE",
              "Value": "1.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGES",
              "Value": "apparmor docker-engine git curl zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y apt-transport-https ca-certificates \u0026\u0026     apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \u0026\u0026     echo deb https://apt.dockerproject.org/repo ubuntu-trusty main \u003e /etc/apt/sources.list.d/docker.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y $PACKAGES \u0026\u0026     curl -s -L https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE/docker-compose-Linux-x86_64 \u003e /usr/local/bin/docker-compose \u0026\u0026     curl -s -L https://github.com/rancher/rancher-compose/releases/download/$RANCHER_COMPOSE/rancher-compose-linux-amd64-$RANCHER_COMPOSE.tar.gz -o rancher-compose.tar.gz \u0026\u0026     tar -zxvf rancher-compose.tar.gz -C /usr/local/bin/ \u0026\u0026     rm rancher-compose.tar.gz \u0026\u0026     chmod -R +x /usr/local/bin \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "groupadd -g ${gid} ${group} \u0026\u0026     useradd -d \"$JENKINS_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_SHA",
              "Value": "066ad710107dc7ee05d3aa6e4974f01dc98f3888"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static -o /bin/tini \u0026\u0026 chmod +x /bin/tini   \u0026\u0026 echo \"$TINI_SHA  /bin/tini\" | sha1sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.txt",
            "/usr/share/jenkins/plugins.txt"
          ]
        },
        {
          "Key": "JENKINS_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "JENKINS_SHA",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "curl -fsSL http://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war -o /usr/share/jenkins/jenkins.war \u0026\u0026     echo \"$JENKINS_SHA  /usr/share/jenkins/jenkins.war\" | sha1sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.sh",
            "/usr/local/bin/plugins.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins.io"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chown -R ${user} \"$JENKINS_HOME\" /usr/share/jenkins/ref \u0026\u0026     usermod -a -G docker jenkins \u0026\u0026     /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "${user}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}