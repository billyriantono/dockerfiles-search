MetaArgs: null
Stages:
- BaseName: node:boron
  Commands:
  - Env:
    - Key: APP_CONTENT
      Value: /home/app
    Name: env
  - CmdLine:
    - groupadd app && useradd --create-home --home-dir "$APP_CONTENT" -g app app     &&
      rm -Rf "$APP_CONTENT"     && mkdir -p "$APP_CONTENT"     && chown -R app:app
      "$APP_CONTENT"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_CONTENT
  - Env:
    - Key: DB_CONTENT
      Value: /var/lib/mongodb
    Name: env
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927   && echo
      "deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.2 main" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list   &&
      apt-get update   && apt-get install -y git mongodb-org
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/mongodb/mongo/master/debian/init.d
    - /etc/init.d/mongod
  - CmdLine:
    - chmod +x /etc/init.d/mongod
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g sails pm2
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - set -x     && apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/*     && dpkgArch="$(dpkg --print-architecture
      | awk -F- '{ print $NF }')"     && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"     &&
      wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: volume
    Volumes:
    - $APP_CONTENT
    - $DB_CONTENT
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - pm2-docker
    - process.json
    Name: cmd
    PrependShell: false
  From:
    Image: node:boron
  Name: ""
  Platform: ""
  SourceCode: FROM node:boron
