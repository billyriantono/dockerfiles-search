MetaArgs: null
Stages:
- As: qemu
  BaseName: multiarch/qemu-user-static:x86_64-arm
  Commands: null
  From:
    Image: multiarch/qemu-user-static:x86_64-arm
  Name: qemu
  Platform: ""
  SourceCode: FROM multiarch/qemu-user-static:x86_64-arm as qemu
- As: golang
  BaseName: golang:alpine
  Commands:
  - Env:
    - Key: GOOS
      Value: '"linux"'
    - Key: GOARCH
      Value: '"arm"'
    - Key: GOARM
      Value: '"7"'
    Name: env
  - Name: workdir
    Path: /go
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go/
    - /go/
  - CmdLine:
    - go build rotate.go
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: golang
  Platform: ""
  SourceCode: FROM golang:alpine as golang
- BaseName: arm32v7/alpine
  Commands:
  - Chown: ""
    From: qemu
    Name: copy
    SourcesAndDest:
    - /usr/bin/qemu-arm-static
    - /usr/bin/
  - Env:
    - Key: LOG_STDOUT
      Value: '""'
    - Key: LOG_STDERR
      Value: '""'
    - Key: TIMEZONE
      Value: '"Europe/Berlin"'
    Name: env
  - CmdLine:
    - apk add --no-cache bash openssh rsync rdiff-backup php7 php7-curl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .shell-methods.sh
    - .bashrc
    - /root/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .shell-methods.sh
    - .bashrc
    - /home/application/
  - Chown: ""
    From: golang
    Name: copy
    SourcesAndDest:
    - /go/rotate
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/
    - /opt/docker/
  - CmdLine:
    - set -x &&   chmod +x /opt/docker/bin/* &&   /opt/docker/bin/bootstrap.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - /entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - noop
    Name: cmd
    PrependShell: false
  From:
    Image: arm32v7/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM arm32v7/alpine
