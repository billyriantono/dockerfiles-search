{
  "MetaArgs": [
    {
      "Key": "JENKINS_VERSION",
      "DefaultValue": "latest",
      "ProvidedValue": null,
      "Value": "latest"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins:${JENKINS_VERSION}",
      "SourceCode": "FROM jenkins/jenkins:${JENKINS_VERSION}",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins:${JENKINS_VERSION}"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common \u0026\u0026     curl -fsSL https://download.docker.com/linux/debian/gpg \u003e /tmp/dkey \u0026\u0026     apt-key add /tmp/dkey \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian stretch stable\" \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install docker-ce \u0026\u0026     apt-get -y install apt-utils openssh-server openssh-client \u0026\u0026     apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG docker jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}