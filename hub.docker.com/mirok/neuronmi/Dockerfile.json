{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "quay.io/fenicsproject/stable:2017.2.0",
      "SourceCode": "FROM quay.io/fenicsproject/stable:2017.2.0",
      "Platform": "",
      "From": {
        "Image": "quay.io/fenicsproject/stable:2017.2.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "FENICS_VERSION",
              "Value": "\"1:2017.2.0.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GMSH_VERSION",
              "Value": "\"gmsh-4.4.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GMSH_FOLDER",
              "Value": "\"\"$GMSH_VERSION\"-Linux64-sdk\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GMSH_URL",
              "Value": "\"http://gmsh.info/bin/Linux/\"$GMSH_FOLDER\".tgz\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt install -y git \u0026\u0026     apt install -y mercurial \u0026\u0026     apt-get install -y wget \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-get install -y libglu1 libxft2 libxcursor-dev libxinerama-dev \u0026\u0026     apt-get install -y libx11-dev bison flex automake libtool libxext-dev libncurses-dev python3-dev xfonts-100dpi cython3 libopenmpi-dev python3-scipy make zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "fenics"
        },
        {
          "CmdLine": [
            "mkdir gmsh \u0026\u0026     cd gmsh \u0026\u0026     wget $GMSH_URL \u0026\u0026     ls \u0026\u0026     echo \"\"$GMSH_VERSION\"-Linux64-sdk.tgz\" \u0026\u0026     tar xvzf \"\"$GMSH_VERSION\"-Linux64-sdk.tgz\" \u0026\u0026     rm \"\"$GMSH_VERSION\"-Linux64-sdk.tgz\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "\"/home/fenics/gmsh/$GMSH_FOLDER/lib\":\"$PYTHONPATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir neuron \u0026\u0026     git clone https://github.com/neuronsimulator/nrn.git  \u0026\u0026     cd nrn  \u0026\u0026     git checkout 7.7.0  \u0026\u0026     echo \"Installing NEURON:\"  \u0026\u0026     echo \"running sh build.sh\"  \u0026\u0026     sh build.sh \u003e /dev/null  \u0026\u0026     echo \"running ./configure\"  \u0026\u0026     ./configure --prefix=$HOME/.local/nrn --without-iv --with-nrnpython=python --with-mpi --disable-rx3d  \u0026\u0026     echo \"running make\"  \u0026\u0026     make -j8  \u0026\u0026     echo \"running make install\" \u0026\u0026     make install \u0026\u0026     cd src/nrnpython \u0026\u0026     echo \"installing neuron python module\"  \u0026\u0026     python setup.py install --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --user LFPy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install git+https://bitbucket.org/dolfin-adjoint/pyadjoint.git@2019.1.0 --user \u0026\u0026     pip install hg+https://bitbucket.org/meg/cbcbeat@2017.2.0 --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/MiroK/nEuronMI.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd nEuronMI \u0026\u0026     python setup.py develop --user \u0026\u0026     cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        }
      ]
    }
  ]
}