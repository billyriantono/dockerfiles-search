MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\t'su-exec>=0.2' \t\tbash \t\tprocps"
    Name: run
    PrependShell: true
  - Key: PGP_KEYSERVER
    Name: arg
    Value: ha.pool.sks-keyservers.net
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.1.1c
    Name: env
  - Env:
    - Key: OPENSSL_SOURCE_SHA256
      Value: '"f6fb3079ad15076154eda9413fed42877d668e7069d9b87396d0804fdb3f4c90"'
    Name: env
  - Env:
    - Key: OPENSSL_PGP_KEY_IDS
      Value: '"0x8657ABB260F056B1E5190839D9C4D26D0E604491 0x5B2545DAB21995F4088CEFAA36CEE4DEB00CFE33
        0xED230BEC4D4F2518B9D7DF41F0DB4D21C1D35231 0xC1F33DD8CE1D4CC613AF14DA9195C48241FBF7DD
        0x7953AC1FBC3DC8B3B292393ED5E9E43F7DF9EE8C 0xE5E52560DD91C556DDBDA5D02064C53641C25E5D"'
    Name: env
  - Env:
    - Key: OTP_VERSION
      Value: 22.0.7
    Name: env
  - Env:
    - Key: OTP_SOURCE_SHA256
      Value: '"04c090b55ec4a01778e7e1a5b7fdf54012548ca72737965b7aa8c4d7878c92bc"'
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .build-deps \t\tautoconf \t\tca-certificates
      \t\tdpkg-dev dpkg \t\tgcc \t\tgnupg \t\tlibc-dev \t\tlinux-headers \t\tmake
      \t\tncurses-dev \t; \t\tOPENSSL_SOURCE_URL=\"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\";
      \tOPENSSL_PATH=\"/usr/local/src/openssl-$OPENSSL_VERSION\"; \tOPENSSL_CONFIG_DIR=/usr/local/etc/ssl;
      \t\tmkdir /usr/local/src; \t\twget --output-document \"$OPENSSL_PATH.tar.gz.asc\"
      \"$OPENSSL_SOURCE_URL.asc\"; \twget --output-document \"$OPENSSL_PATH.tar.gz\"
      \"$OPENSSL_SOURCE_URL\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $OPENSSL_PGP_KEY_IDS;
      do \t\tgpg --batch --keyserver \"$PGP_KEYSERVER\" --recv-keys \"$key\"; \tdone;
      \tgpg --batch --verify \"$OPENSSL_PATH.tar.gz.asc\" \"$OPENSSL_PATH.tar.gz\";
      \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \techo \"$OPENSSL_SOURCE_SHA256
      *$OPENSSL_PATH.tar.gz\" | sha256sum -c -; \tmkdir -p \"$OPENSSL_PATH\"; \ttar
      --extract --file \"$OPENSSL_PATH.tar.gz\" --directory \"$OPENSSL_PATH\" --strip-components
      1; \t\tcd \"$OPENSSL_PATH\"; \tMACHINE=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\"
      \tRELEASE=\"4.x.y-z\" \tSYSTEM='Linux' \tBUILD='???' \t./config --openssldir=\"$OPENSSL_CONFIG_DIR\";
      \tmake -j \"$(getconf _NPROCESSORS_ONLN)\"; \tmake install_sw install_ssldirs;
      \tcd ..; \trm -rf \"$OPENSSL_PATH\"*; \trmdir \"$OPENSSL_CONFIG_DIR/certs\"
      \"$OPENSSL_CONFIG_DIR/private\"; \tln -sf /etc/ssl/certs /etc/ssl/private \"$OPENSSL_CONFIG_DIR\";
      \topenssl version; \t\tOTP_SOURCE_URL=\"https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz\";
      \tOTP_PATH=\"/usr/local/src/otp-$OTP_VERSION\"; \t\tmkdir -p \"$OTP_PATH\";
      \twget --output-document \"$OTP_PATH.tar.gz\" \"$OTP_SOURCE_URL\"; \techo \"$OTP_SOURCE_SHA256
      *$OTP_PATH.tar.gz\" | sha256sum -c -; \ttar --extract --file \"$OTP_PATH.tar.gz\"
      --directory \"$OTP_PATH\" --strip-components 1; \t\tcd \"$OTP_PATH\"; \texport
      ERL_TOP=\"$OTP_PATH\"; \t./otp_build autoconf; \tCFLAGS=\"$(dpkg-buildflags
      --get CFLAGS)\"; export CFLAGS; \thostArch=\"$(dpkg-architecture --query DEB_HOST_GNU_TYPE)\";
      \tbuildArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \tdpkgArch=\"$(dpkg
      --print-architecture)\"; dpkgArch=\"${dpkgArch##*-}\"; \t./configure \t\t--host=\"$hostArch\"
      \t\t--build=\"$buildArch\" \t\t--disable-dynamic-ssl-lib \t\t--disable-hipe
      \t\t--disable-sctp \t\t--disable-silent-rules \t\t--enable-clock-gettime \t\t--enable-hybrid-heap
      \t\t--enable-kernel-poll \t\t--enable-shared-zlib \t\t--enable-smp-support \t\t--enable-threads
      \t\t--with-microstate-accounting=extra \t\t--without-common_test \t\t--without-debugger
      \t\t--without-dialyzer \t\t--without-diameter \t\t--without-edoc \t\t--without-erl_docgen
      \t\t--without-erl_interface \t\t--without-et \t\t--without-eunit \t\t--without-ftp
      \t\t--without-hipe \t\t--without-jinterface \t\t--without-megaco \t\t--without-observer
      \t\t--without-odbc \t\t--without-reltool \t\t--without-ssh \t\t--without-tftp
      \t\t--without-wx \t; \tmake -j \"$(getconf _NPROCESSORS_ONLN)\" GEN_OPT_FLGS=\"-O2
      -fno-strict-aliasing\"; \tmake install; \tcd ..; \trm -rf \t\t\"$OTP_PATH\"*
      \t\t/usr/local/lib/erlang/lib/*/examples \t\t/usr/local/lib/erlang/lib/*/src
      \t; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive
      /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache --virtual
      .otp-run-deps $runDeps; \tapk del --no-network .build-deps; \t\topenssl version;
      \terl -noshell -eval 'io:format(\"~p~n~n~p~n~n\", [crypto:supports(), ssl:versions()]),
      init:stop().'"
    Name: run
    PrependShell: true
  - Env:
    - Key: RABBITMQ_DATA_DIR
      Value: /var/lib/rabbitmq
    Name: env
  - CmdLine:
    - "set -eux; \taddgroup -g 101 -S rabbitmq; \tadduser -u 100 -S -h \"$RABBITMQ_DATA_DIR\"
      -G rabbitmq rabbitmq; \tmkdir -p \"$RABBITMQ_DATA_DIR\" /etc/rabbitmq /tmp/rabbitmq-ssl
      /var/log/rabbitmq; \tchown -fR rabbitmq:rabbitmq \"$RABBITMQ_DATA_DIR\" /etc/rabbitmq
      /tmp/rabbitmq-ssl /var/log/rabbitmq; \tchmod 777 \"$RABBITMQ_DATA_DIR\" /etc/rabbitmq
      /tmp/rabbitmq-ssl /var/log/rabbitmq; \tln -sf \"$RABBITMQ_DATA_DIR/.erlang.cookie\"
      /root/.erlang.cookie"
    Name: run
    PrependShell: true
  - Env:
    - Key: RABBITMQ_VERSION
      Value: 3.7.17
    Name: env
  - Env:
    - Key: RABBITMQ_PGP_KEY_ID
      Value: '"0x0A9AF2115F4687BD29803A206B73A36E6026DFCA"'
    Name: env
  - Env:
    - Key: RABBITMQ_HOME
      Value: /opt/rabbitmq
    Name: env
  - Env:
    - Key: PATH
      Value: $RABBITMQ_HOME/sbin:$PATH
    - Key: RABBITMQ_LOGS
      Value: '-'
    - Key: RABBITMQ_SASL_LOGS
      Value: '-'
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .build-deps \t\tca-certificates
      \t\tgnupg \t\txz \t; \t\tRABBITMQ_SOURCE_URL=\"https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-latest-toolchain-$RABBITMQ_VERSION.tar.xz\";
      \tRABBITMQ_PATH=\"/usr/local/src/rabbitmq-$RABBITMQ_VERSION\"; \t\twget --output-document
      \"$RABBITMQ_PATH.tar.xz.asc\" \"$RABBITMQ_SOURCE_URL.asc\"; \twget --output-document
      \"$RABBITMQ_PATH.tar.xz\" \"$RABBITMQ_SOURCE_URL\"; \t\texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$RABBITMQ_PGP_KEY_ID\";
      \tgpg --batch --verify \"$RABBITMQ_PATH.tar.xz.asc\" \"$RABBITMQ_PATH.tar.xz\";
      \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \t\tmkdir -p \"$RABBITMQ_HOME\";
      \ttar --extract --file \"$RABBITMQ_PATH.tar.xz\" --directory \"$RABBITMQ_HOME\"
      --strip-components 1; \trm -rf \"$RABBITMQ_PATH\"*; \tgrep -qE '^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'
      \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\"; \tsed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/'
      \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\"; \tgrep -qE '^SYS_PREFIX=$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\";
      \tchown -R rabbitmq:rabbitmq \"$RABBITMQ_HOME\"; \t\tapk del .build-deps; \t\t[
      ! -e \"$RABBITMQ_DATA_DIR/.erlang.cookie\" ]; \tsu-exec rabbitmq rabbitmqctl
      help; \tsu-exec rabbitmq rabbitmqctl list_ciphers; \tsu-exec rabbitmq rabbitmq-plugins
      list; \tapk add --no-cache bind-tools; \trm \"$RABBITMQ_DATA_DIR/.erlang.cookie\""
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /opt/rabbitmq/plugins /plugins
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: $RABBITMQ_DATA_DIR
    Name: env
  - Name: volume
    Volumes:
    - $RABBITMQ_DATA_DIR
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LANGUAGE
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "25672"
    - "4369"
    - "5671"
    - "5672"
  - CmdLine:
    - rabbitmq-server
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
