MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Spenser Reinhardt
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: logfile
      Value: /var/log/install.log
    Name: env
  - CmdLine:
    - sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted
      universe multiverse'     /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty-updates main restricted
      universe multiverse' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty-backports main
      restricted universe multiverse' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty-security main restricted
      universe multiverse' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Installing prereqs" | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install automake autoconf git-core make build-essential binutils gcc
      flex byacc libnetfilter-conntrack-dev libnetfilter-queue-dev libnetfilter-queue1
      libnfnetlink-dev libnfnetlink0 pkg-config libc6-dev libglib2.0-0 libglib2.0-dev
      linux-libc-dev libgloox-dev libxml2-dev libxml++ libpcap0.8-dev libpcap0.8 libdumbnet-dev
      openssl libssl-dev libev-dev -y 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/
  - CmdLine:
    - git clone git://git.code.sf.net/p/honeybrid/git honeybrid-git 2>&1 | tee -a
      "${logfile}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: honeybrid-git/
  - CmdLine:
    - autoreconf -vi 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure "$@" 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - make 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - make install 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/honeybrid
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/log/honeybrid
    Name: run
    PrependShell: true
  - CmdLine:
    - cp honeybrid.conf /etc/honeybrid/ 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp honeybrid.sh /etc/init.d/ 2>&1 | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Finished build correctly - Enjoy!" | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $(date) | tee -a "${logfile}"
    Name: run
    PrependShell: true
  - CmdLine:
    - mv $logfile /var/log/honeybrid/install.log
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - honeybrid.cfg
    - /etc/honeybrid/honeybrid.cfg
  - CmdLine:
    - if [[ -f $logfile ]]; then mv $logfile /opt/thug/install.log; else echo "No
      log, use docker's"; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /install.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: workdir
    Path: /var/log/honeybrid
  - Name: volume
    Volumes:
    - /var/log/honeybrid
  - CmdLine:
    - /etc/init.d/honeybrid.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
