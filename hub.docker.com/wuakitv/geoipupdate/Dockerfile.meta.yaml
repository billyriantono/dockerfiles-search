MetaArgs: null
Stages:
- As: build
  BaseName: golang:alpine
  Commands:
  - Env:
    - Key: VERSION
      Value: 4.0.2
    Name: env
  - Name: volume
    Volumes:
    - /geodata
  - CmdLine:
    - apk add --update wget git bash
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -P /tmp/build/ https://github.com/maxmind/geoipupdate/archive/v${VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -C /tmp/build/ -zxvf /tmp/build/v${VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /tmp/build/geoipupdate-${VERSION}
    Name: env
  - Name: workdir
    Path: /tmp/build/geoipupdate-${VERSION}/cmd/geoipupdate
  - CmdLine:
    - go get -t ./... 2> /dev/null; exit 0
    Name: run
    PrependShell: true
  - CmdLine:
    - go build
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /tmp/build/geoipupdate-${VERSION}/cmd/geoipupdate/geoipupdate /usr/bin/
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:alpine as build
- BaseName: alpine
  Commands:
  - CmdLine:
    - apk add -q --update bash ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/bin/geoipupdate
    - /usr/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - update.sh
    - /usr/bin/
  - CmdLine:
    - update.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
