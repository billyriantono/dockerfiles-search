{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.11-alpine3.7",
      "SourceCode": "FROM golang:1.11-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "golang:1.11-alpine3.7"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/github.com/linkernetworks/vortex"
        },
        {
          "CmdLine": [
            "apk add --no-cache protobuf ca-certificates make git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src",
            "/go/src/github.com/linkernetworks/vortex/src"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Makefile",
            "/go/src/github.com/linkernetworks/vortex"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor",
            "/go/src/github.com/linkernetworks/vortex/vendor"
          ]
        },
        {
          "Env": [
            {
              "Key": "CGO_ENABLED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOOS",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "\"Asia/Taipei\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache tzdata \u0026\u0026     cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \u0026\u0026     echo $TIMEZONE \u003e /etc/timezone \u0026\u0026     apk del tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -x -u github.com/kardianos/govendor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "govendor sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make src.build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv build/src/cmd/vortex/vortex /go/bin"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/vortex"
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/bin",
            "/go/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "/vortex/config"
          ]
        },
        {
          "Key": "CONFIG",
          "Name": "arg",
          "Value": "config/k8s.json"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "${CONFIG}",
            "config/k8s.json"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7890"
          ]
        },
        {
          "CmdLine": [
            "/go/bin/vortex",
            "-port",
            "7890",
            "-config",
            "/vortex/config/k8s.json"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}