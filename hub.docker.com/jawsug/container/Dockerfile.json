{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:18.06.0-ce-dind",
      "SourceCode": "FROM docker:18.06.0-ce-dind",
      "Platform": "",
      "From": {
        "Image": "docker:18.06.0-ce-dind"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "AWSCLI_VERSION",
              "Value": "1.15.66"
            },
            {
              "Key": "JUPYTER_VERSION",
              "Value": "1.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add python3 git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add groff less jq     \u0026\u0026 apk --no-cache add --virtual build-deps py3-pip     \u0026\u0026 pip3 install \"awscli == ${AWSCLI_VERSION}\"     \u0026\u0026 pip3 install yq     \u0026\u0026 find / -type d -name \\__pycache__ -depth -exec rm -rf {} \\;     \u0026\u0026 rm -rf /root/.cache     \u0026\u0026 apk del --purge -r build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add bash tini     \u0026\u0026 apk --no-cache add --virtual build-deps build-base python3-dev     \u0026\u0026 pip3 install \"jupyter == ${JUPYTER_VERSION}\"     \u0026\u0026 pip3 install backcall bash_kernel     \u0026\u0026 python3 -m bash_kernel.install     \u0026\u0026 find / -type d -name tests -depth -exec rm -rf {} \\;     \u0026\u0026 find / -type d -name \\__pycache__ -depth -exec rm -rf {} \\;     \u0026\u0026 rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global credential.helper '!aws codecommit credential-helper $@'     \u0026\u0026 git config --global credential.UseHttpPath true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/notebook"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "notebooks_config/jupyter_notebook.py",
            "/root/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "notebooks",
            "/root/notebook"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "application",
            "/root/notebook/application"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "infrastructure",
            "/root/notebook/infrastructure"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "notebooks_config/entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/config"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "tini",
            "--",
            "jupyter",
            "notebook"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}