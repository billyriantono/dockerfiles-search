{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Jeremy TheHipbot Chambers \"jeremy@thehipbot.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2016-07-14"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PW",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_DIR",
              "Value": "/home/www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "W2P_DIR",
              "Value": "$INSTALL_DIR/web2py"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CERT_PASS",
              "Value": "web2py"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "8000"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-n"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "$INSTALL_DIR"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get autoremove \u0026\u0026 \tapt-get autoclean \u0026\u0026 \tapt-get -y install nginx-full \u0026\u0026 \tapt-get -y install build-essential python-dev libxml2-dev python-pip unzip wget supervisor \u0026\u0026 \tpip install setuptools --no-use-wheel --upgrade \u0026\u0026 \tpip install --upgrade uwsgi \u0026\u0026 \tapt-get clean \u0026\u0026 \tmkdir /etc/nginx/conf.d/web2py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "gzip_static.conf",
            "/etc/nginx/conf.d/web2py/gzip_static.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "gzip.conf",
            "/etc/nginx/conf.d/web2py/gzip.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "web2py",
            "/etc/nginx/sites-available/web2py"
          ]
        },
        {
          "CmdLine": [
            "ln -s /etc/nginx/sites-available/web2py /etc/nginx/sites-enabled/web2py \u0026\u0026 \trm /etc/nginx/sites-enabled/default \u0026\u0026 \tmkdir /etc/nginx/ssl \u0026\u0026 cd /etc/nginx/ssl \u0026\u0026 \topenssl genrsa -passout pass:$CERT_PASS 1024 \u003e web2py.key \u0026\u0026 \tchmod 400 web2py.key \u0026\u0026 \topenssl req -new -x509 -nodes -sha1 -days 1780 -subj \"/C=US/ST=Denial/L=Chicago/O=Dis/CN=www.example.com\" -key web2py.key \u003e web2py.crt \u0026\u0026 \topenssl x509 -noout -fingerprint -text \u003c web2py.crt \u003e web2py.info \u0026\u0026 \tmkdir /etc/uwsgi \u0026\u0026 \tmkdir /var/log/uwsgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "web2py.ini",
            "/etc/uwsgi/web2py.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "uwsgi-emperor.conf",
            "/etc/init/uwsgi-emperor.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisor-app.conf",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "wget http://web2py.com/examples/static/web2py_src.zip \u0026\u0026     mkdir tmp \u0026\u0026 \tunzip web2py_src.zip -d tmp \u0026\u0026 \tmv tmp/web2py web2py \u0026\u0026 \trm web2py_src.zip \u0026\u0026 \trm -rf tmp \u0026\u0026 \tmv web2py/handlers/wsgihandler.py web2py/wsgihandler.py \u0026\u0026 \tchown -R www-data:www-data web2py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "Name": "workdir",
          "Path": "$W2P_DIR"
        },
        {
          "CmdLine": [
            "python -c \"from gluon.main import save_password; save_password('$PW',80)\" \u0026\u0026 \tpython -c \"from gluon.main import save_password; save_password('$PW',443)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        }
      ]
    }
  ]
}