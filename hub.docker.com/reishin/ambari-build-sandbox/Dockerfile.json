{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "hapy.lestat@gmail.com",
          "Name": "maintainer"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Env": [
            {
              "Key": "SANDBOX_DIR",
              "Value": "/var/lib/sandbox"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "helpers/get_java.sh",
            "${SANDBOX}/helpers/get_java.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "helpers/get_java_parser.py",
            "${SANDBOX}/helpers/get_java_parser.py"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get install curl git unzip rpm -y \u0026\u0026    apt-get install --no-install-recommends python2.7-minimal python-pip python3-minimal python3-pip -y \u0026\u0026    apt-get install gcc python-dev npm libfontconfig -y \u0026\u0026    apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JAVA_VER",
          "Name": "arg",
          "Value": "8"
        },
        {
          "Key": "MVN_VERSION",
          "Name": "arg",
          "Value": "3.5.4"
        },
        {
          "Key": "JAVA_ROOT_DIR",
          "Name": "arg",
          "Value": "/usr/jdk"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "${JAVA_ROOT_DIR}/${JAVA_VER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${JAVA_HOME}/bin:${JAVA_HOME}/db/bin:${JAVA_HOME}/jre/bin:${SANDBOX_DIR}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_OPTS",
              "Value": "-Xmx2048m -Djava.awt.headless=true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /usr/jdk \u0026\u0026    cd /usr/jdk \u0026\u0026    bash ${SANDBOX}/helpers/get_java.sh ${JAVA_VER} jdk-${JAVA_VER}-linux-x64.tar.gz \u0026\u0026    mkdir ${JAVA_VER} \u0026\u0026    tar xf jdk-${JAVA_VER}-linux-x64.tar.gz -C ${JAVA_VER} --strip-components 1\u0026\u0026    rm -f jdk-${JAVA_VER}-linux-x64.tar.gz \u0026\u0026    touch ${JAVA_ROOT_DIR}/accepted-oracle-license-v1-1\u0026\u0026    update-alternatives --install \"/usr/bin/java\" \"java\" \"${JAVA_HOME}/bin/java\" 1\u0026\u0026    update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026    curl http://archive.apache.org/dist/maven/maven-3/${MVN_VERSION}/binaries/apache-maven-${MVN_VERSION}-bin.tar.gz -o apache-maven-${MVN_VERSION}-bin.tar.gz \u0026\u0026    tar xf apache-maven-${MVN_VERSION}-bin.tar.gz \u0026\u0026 rm -f apache-maven-${MVN_VERSION}-bin.tar.gz \u0026\u0026    update-alternatives --install \"/usr/bin/mvn\" \"mvn\" \"/opt/apache-maven-${MVN_VERSION}/bin/mvn\" 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026    curl -L https://plugins.jetbrains.com/plugin/download?updateId=41832 -o egg.zip \u0026\u0026    unzip egg.zip \u0026\u0026    python2 -m easy_install python/pycharm-debug.egg \u0026\u0026    rm -rf /tmp/python \u0026\u0026    rm -f egg.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.m2"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/ambari"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}