{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y locales locales-all     \u0026\u0026 locale-gen     \u0026\u0026 sed -ri '/en_US|es_ES|ru_RU|uk_UA/s/^#//g' /etc/locale.gen     \u0026\u0026 locale-gen     \u0026\u0026 update-locale LANG=en_US.UTF-8     \u0026\u0026 apt-get install -y msmtp-mta     \u0026\u0026 rm -f /etc/msmtprc     \u0026\u0026 ln -s /var/www/msmtprc /etc/msmtprc     \u0026\u0026 apt-get install -y man wget vim nano mc screen git rsync mariadb-client cron aptitude info bzip2 augeas-tools                           command-not-found xz-utils ctags dialog net-tools htop atop byobu screenie gawk                           libpng12-dev libjpeg-dev libpq-dev libmcrypt-dev                           command-not-found                           openssh-server     \u0026\u0026 augtool set /files//etc/ssh/sshd_config/PermitRootLogin \"yes\"     \u0026\u0026 sed -i 's/\"syntax on/syntax on/g' /etc/vim/vimrc     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 update-command-not-found     \u0026\u0026 echo \"#!/bin/bash\\nset -e\\n\\ndocker-entrypoint-hook.sh\\n\\n[ -f /var/www/msmtprc ] || ( cat \u003c\u003cEOF\\nhost smtp\\nfrom www@www\\ndomain org\\nEOF\\n) \u003e /etc/msmtprc\\n\\n[ ! -f /var/www/php.ini ] \u0026\u0026 touch /var/www/php.ini\\n[ -f /usr/sbin/a2enmod ] \u0026\u0026 [ ! -f /var/www/apache2.conf ] \u0026\u0026 touch /var/www/apache2.conf\\n[ -f /usr/local/bin/php-fpm ] \u0026\u0026 [ ! -f /var/www/php-fpm.conf ] \u0026\u0026 touch /var/www/php-fpm.conf\\n\\nservice cron start\\nservice ssh start\\n\\nexec \\\"\\$@\\\"\\n\" \u003e /usr/local/bin/docker-entrypoint.sh     \u0026\u0026 chmod +x /usr/local/bin/docker-entrypoint.sh     \u0026\u0026 echo \"#!/bin/bash\\n\\nset -e\\n\\n\" \u003e /usr/local/bin/docker-entrypoint-hook.sh     \u0026\u0026 chmod +x /usr/local/bin/docker-entrypoint-hook.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /var/www/php.ini /usr/local/etc/php/conf.d/mounted-php.ini     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-install gd mysqli opcache mcrypt mbstring pdo pdo_mysql pdo_pgsql zip     \u0026\u0026 {                 echo 'opcache.memory_consumption=128';                 echo 'opcache.interned_strings_buffer=8';                 echo 'opcache.max_accelerated_files=4000';                 echo 'opcache.revalidate_freq=2';                 echo 'opcache.fast_shutdown=1';                 echo 'opcache.enable_cli=1';         } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini     \u0026\u0026 curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer     \u0026\u0026 ln -s /usr/local/bin/composer /usr/bin/composer     \u0026\u0026 echo \"deb http://httpredir.debian.org/debian jessie main contrib\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 git clone --depth 1 https://github.com/drush-ops/drush.git /usr/local/src/drush     \u0026\u0026 ln -s /usr/local/src/drush/drush /usr/bin/drush     \u0026\u0026 cd /usr/local/src/drush \u0026\u0026 composer install     \u0026\u0026 yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /var/www/apache2.conf /etc/apache2/conf-enabled/mounted-apache2.conf  \u0026\u0026 a2enmod rewrite expires"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "443"
          ]
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}