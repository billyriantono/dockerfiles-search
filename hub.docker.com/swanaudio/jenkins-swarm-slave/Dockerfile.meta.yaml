MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: SWARM_CLIENT
      Value: "3.15"
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - apk add --no-cache curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL -o swarm-client.jar https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$SWARM_CLIENT/swarm-client-$SWARM_CLIENT.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del curl
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
- BaseName: alpine:edge
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"evan@swanaudio.com"'
    Name: label
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.24.0
    Name: env
  - CmdLine:
    - apk add --no-cache docker git openssh python3 python3-dev libffi-dev openssl-dev
      gcc libc-dev make
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir docker-compose==${COMPOSE_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk/jre
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u201
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.201.08-r1
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8-jre=\"$JAVA_ALPINE_VERSION\" \t&&
      [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -S jenkins && adduser -S -g jenkins -G docker jenkins
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/jenkins
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /swarm-client.jar
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-slave.sh
    - /home/jenkins
  - CmdLine:
    - mkdir -p /home/jenkins/workspace
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jenkins:jenkins /home/jenkins
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/jenkins/workspace
  - Name: user
    User: jenkins
  - Name: expose
    Ports:
    - 33848/udp
  - CmdLine:
    - ./start-slave.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
