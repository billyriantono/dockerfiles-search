{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/computerfr33k/video_transcoding_docker\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"computerfr33k\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GEM_VERSION",
              "Value": "0.25.2"
            },
            {
              "Key": "HANDBRAKE_VERSION",
              "Value": "1.2.2"
            },
            {
              "Key": "FFMPEG_VERSION",
              "Value": "4.1.3"
            },
            {
              "Key": "LIBX265_VERSION",
              "Value": "3.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 buildDeps='     autoconf     automake     build-essential     cmake     cmake-curses-gui     curl     git     libass-dev     libbz2-dev     libfontconfig1-dev     libfreetype6-dev     libfribidi-dev     libharfbuzz-dev     libjansson-dev     liblzma-dev     libmp3lame-dev     libogg-dev     libopus-dev     libsamplerate-dev     libspeex-dev     libtheora-dev     libtool     libtool-bin     libvorbis-dev     libvpx-dev     libx264-dev     libxml2-dev     m4     make     mercurial     mkvtoolnix     mp4v2-utils     mpv     nasm     patch     pkg-config     python     ruby-full     tar     texinfo     unzip     wget     yasm     zlib1g-dev   '   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps   \u0026\u0026 mkdir -p /usr/src/ffmpeg/bin   \u0026\u0026 mkdir -p /usr/src/ffmpeg/build   \u0026\u0026 PATH=\"/usr/src/ffmpeg/bin:$PATH\"   \u0026\u0026 cd /usr/src/ffmpeg   \u0026\u0026 wget -O x265.tar.gz https://bitbucket.org/multicoreware/x265/downloads/x265_$LIBX265_VERSION.tar.gz   \u0026\u0026 tar xzvf x265.tar.gz   \u0026\u0026 cd x265_$LIBX265_VERSION/build/linux   \u0026\u0026 PATH=\"/usr/src/ffmpeg/bin:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"/usr/src/ffmpeg/build\" -DENABLE_SHARED:bool=off ../../source   \u0026\u0026 PATH=\"/usr/src/ffmpeg/bin:$PATH\" make -j\"$(nproc)\"   \u0026\u0026 make install   \u0026\u0026 cd /usr/src/ffmpeg   \u0026\u0026 rm -rf x265   \u0026\u0026 wget https://download2.handbrake.fr/$HANDBRAKE_VERSION/HandBrake-$HANDBRAKE_VERSION-source.tar.bz2   \u0026\u0026 tar xvjf HandBrake-$HANDBRAKE_VERSION-source.tar.bz2   \u0026\u0026 cd HandBrake-$HANDBRAKE_VERSION   \u0026\u0026 ./configure --launch-jobs=$(nproc) --disable-gtk --launch   \u0026\u0026 cd build \u0026\u0026 make install   \u0026\u0026 cd /usr/src/ffmpeg   \u0026\u0026 rm -rf HandBrake-$HANDBRAKE_VERSION HandBrake-$HANDBRAKE_VERSION-source.tar.bz2   \u0026\u0026 wget -O ffmpeg.tar.gz https://github.com/FFmpeg/FFmpeg/archive/n$FFMPEG_VERSION.tar.gz   \u0026\u0026 tar zxvf ffmpeg.tar.gz   \u0026\u0026 mv FFmpeg* ffmpeg_src   \u0026\u0026 cd ffmpeg_src   \u0026\u0026 PATH=\"/usr/src/ffmpeg/bin:$PATH\" PKG_CONFIG_PATH=\"/usr/src/ffmpeg/build/lib/pkgconfig\" ./configure     --prefix=\"/usr/src/ffmpeg/build\"     --pkg-config-flags=\"--static\"     --extra-cflags=\"-I/usr/src/ffmpeg/build/include\"     --extra-ldflags=\"-L/usr/src/ffmpeg/build/lib\"     --bindir=\"/usr/src/ffmpeg/bin\"     --extra-libs=-lpthread     --enable-gpl     --enable-libass     --enable-libfreetype     --enable-libmp3lame     --enable-libopus     --enable-libtheora     --enable-libvorbis     --enable-libvpx     --enable-libx264     --enable-libx265     --enable-nonfree   \u0026\u0026 PATH=\"/usr/src/ffmpeg/bin:$PATH\" make -j\"$(nproc)\"   \u0026\u0026 make install   \u0026\u0026 hash -r   \u0026\u0026 cd /   \u0026\u0026 mv /usr/src/ffmpeg/bin/ff* /usr/local/bin   \u0026\u0026 rm -rf /usr/src/ffmpeg   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf     /tmp/*     /var/lib/apt/lists/*     /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apt-get purge -y --auto-remove $buildDeps   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 gem install video_transcoding -v \"$GEM_VERSION\"   \u0026\u0026 mkdir /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}