{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "nVentiveUX",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "authors",
              "Value": "\"Yves ANDOLFATTO, Vincent BESANCON\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "license",
              "Value": "\"MIT\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Docker image for Jupyter Notebook installation.\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apk add --no-cache --update tini python3 ca-certificates build-base py-psutil libpng freetype   \u0026\u0026 apk add --no-cache --update --virtual .builddeps python3-dev libpng-dev freetype-dev   \u0026\u0026 ln -s /usr/include/locale.h /usr/include/xlocale.h   \u0026\u0026 pip3 install --no-cache-dir --upgrade pip   \u0026\u0026 pip3 install --no-cache-dir jupyter==1.0.*   \u0026\u0026 pip3 install --no-cache-dir jupyter-nbextensions-configurator==0.2.*   \u0026\u0026 pip3 install --no-cache-dir jupyter-contrib-nbextensions==0.2.*   \u0026\u0026 pip3 install --no-cache-dir ipywidgets   \u0026\u0026 apk del .builddeps;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 addgroup -S -g 500 jupyter   \u0026\u0026 adduser -S -u 500 -D -G jupyter jupyter   \u0026\u0026 mkdir -m 755 /notebooks   \u0026\u0026 chown jupyter:jupyter /notebooks;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 jupyter contrib nbextension install --system   \u0026\u0026 jupyter nbextension enable --py --sys-prefix widgetsnbextension   \u0026\u0026 jupyter nbextensions_configurator enable --system   \u0026\u0026 jupyter nbextension enable addbefore/main --system   \u0026\u0026 jupyter nbextension enable autoscroll/main --system   \u0026\u0026 jupyter nbextension enable contrib_nbextensions_help_item/main --system   \u0026\u0026 jupyter nbextension enable datestamper/main --system   \u0026\u0026 jupyter nbextension enable dragdrop/main --system   \u0026\u0026 jupyter nbextension enable execute_time/ExecuteTime --system   \u0026\u0026 jupyter nbextension enable help_panel/help_panel --system   \u0026\u0026 jupyter nbextension enable hide_input/main --system   \u0026\u0026 jupyter nbextension enable highlighter/highlighter --system   \u0026\u0026 jupyter nbextension enable init_cell/main --system   \u0026\u0026 jupyter nbextension enable move_selected_cells/main --system   \u0026\u0026 jupyter nbextension enable notify/notify --system   \u0026\u0026 jupyter nbextension enable printview/main --system   \u0026\u0026 jupyter nbextension enable rubberband/main --system   \u0026\u0026 jupyter nbextension enable scroll_down/main --system   \u0026\u0026 jupyter nbextension enable search-replace/main --system   \u0026\u0026 jupyter nbextension enable table_beautifier/main --system   \u0026\u0026 jupyter nbextension enable toc2/main --system   \u0026\u0026 jupyter nbextension enable toggle_all_line_numbers/main --system;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jupyter"
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "notebook"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}