MetaArgs: null
Stages:
- BaseName: php:7.4-fpm-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Morgan AUCHEDE <morgan.auchede@gmail.com>"'
    Name: label
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    - Key: S6_KEEP_ENV
      Value: "1"
    - Key: S6_READ_ONLY_ROOT
      Value: "1"
    Name: env
  - CmdLine:
    - set -e -u -x     && apk add --no-cache --no-progress --virtual BUILD_DEPS ${PHPIZE_DEPS}     &&
      apk add --no-cache --no-progress bash ca-certificates git openssh-client shadow     &&
      curl --location "https://gitlab.com/timonier/dumb-entrypoint/raw/master/src/dockerize/installer"
      | bash -s -- install     && curl --location "https://gitlab.com/timonier/dumb-entrypoint/raw/master/src/s6-overlay/installer"
      | bash -s -- install     && curl --location --output /usr/local/bin/melody "http://get.sensiolabs.org/melody.phar"     &&
      chmod +x /usr/local/bin/melody     && apk add --no-cache --no-progress nginx     &&
      mkdir -p /var/cache/nginx     && chown nginx:nginx /var/cache/nginx     && usermod
      --home /var/cache/nginx nginx     && ln -sf /dev/stderr /var/log/nginx/error.log     &&
      ln -sf /dev/stdout /var/log/nginx/access.log     && curl --location "https://gitlab.com/timonier/nginx/raw/generated/rootfs.tar.gz"
      | tar --directory / --extract --gzip     && pecl install apfd     && docker-php-ext-enable
      apfd     && apk add --no-cache --no-progress --virtual BUILD_DEPS_PHP_AMQP rabbitmq-c-dev     &&
      apk add --no-cache --no-progress rabbitmq-c     && pecl install amqp     &&
      docker-php-ext-enable amqp     && pecl install apcu     && docker-php-ext-enable
      apcu     && docker-php-ext-install bcmath     && PHP_VERSION="$(php -r "echo
      PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")"     && curl --location --user-agent
      Docker "https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/${PHP_VERSION}"
      | tar --directory /tmp --extract --gzip     && mv /tmp/blackfire-*.so "$(php
      -r "echo ini_get('extension_dir');")/blackfire.so"     && docker-php-ext-enable
      blackfire     && apk add --no-cache --no-progress --virtual BUILD_DEPS_PHP_GD
      freetype-dev libjpeg-turbo-dev libpng-dev     && apk add --no-cache --no-progress
      freetype libjpeg-turbo libpng     && docker-php-ext-configure gd --with-freetype
      --with-jpeg     && docker-php-ext-install gd     && apk add --no-cache --no-progress
      --virtual BUILD_DEPS_PHP_GMP gmp-dev     && apk add --no-cache --no-progress
      gmp     && docker-php-ext-install gmp     && apk add --no-cache --no-progress
      --virtual BUILD_DEPS_PHP_GNUPG gpgme-dev     && apk add --no-cache --no-progress
      gpgme     && pecl install gnupg     && docker-php-ext-enable gnupg     && pecl
      install igbinary     && docker-php-ext-enable igbinary     && apk add --no-cache
      --no-progress --virtual BUILD_DEPS_PHP_IMAGICK imagemagick-dev     && apk add
      --no-cache --no-progress imagemagick     && pecl install imagick     && docker-php-ext-enable
      imagick     && apk add --no-cache --no-progress --virtual BUILD_DEPS_PHP_INTL
      icu-dev     && apk add --no-cache --no-progress icu     && docker-php-ext-install
      intl     && docker-php-ext-install pdo_mysql     && docker-php-ext-install opcache     &&
      apk add --no-cache --no-progress --virtual BUILD_DEPS_PHP_PGSQL postgresql-dev     &&
      apk add --no-cache --no-progress postgresql-libs     && docker-php-ext-install
      pdo_pgsql pgsql     && pecl install redis     && docker-php-ext-enable redis     &&
      apk add --no-cache --no-progress --virtual BUILD_DEPS_PHP_UUID util-linux-dev     &&
      apk add --no-cache --no-progress libuuid     && pecl install uuid     && docker-php-ext-enable
      uuid     && pecl install xdebug     && apk add --no-cache --no-progress --virtual
      BUILD_DEPS_PHP_XML libxml2-dev     && apk add --no-cache --no-progress libxml2     &&
      docker-php-ext-install xml     && apk add --no-cache --no-progress --virtual
      BUILD_DEPS_PHP_ZIP libzip-dev     && apk add --no-cache --no-progress libzip     &&
      docker-php-ext-install zip     && curl --location --output /usr/local/bin/php-cs-fixer
      "http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar"     && chmod +x /usr/local/bin/php-cs-fixer     &&
      apk del --no-progress BUILD_DEPS BUILD_DEPS_PHP_AMQP BUILD_DEPS_PHP_GD BUILD_DEPS_PHP_GMP
      BUILD_DEPS_PHP_GNUPG BUILD_DEPS_PHP_INTL BUILD_DEPS_PHP_PGSQL BUILD_DEPS_PHP_XML
      BUILD_DEPS_PHP_ZIP     && rm -f -r /tmp/* /usr/local/etc/php-fpm.d/* /var/www
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer:latest
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/local/bin/composer
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.4-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.4-fpm-alpine
