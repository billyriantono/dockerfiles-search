{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ELABFTW_VERSION",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELABIMG_VERSION",
              "Value": "1.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.name",
              "Value": "\"elabftw\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Run nginx and php-fpm to serve elabftw\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://www.elabftw.net\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/elabftw/elabimg\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$ELABFTW_VERSION"
            },
            {
              "Key": "org.label-schema.maintainer",
              "Value": "\"nicolas.carpi@curie.fr\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk upgrade -U -a \u0026\u0026 apk add --no-cache     autoconf     bash     build-base     coreutils     curl     freetype     ghostscript     git     graphicsmagick-dev     openssl     libtool     nginx     openjdk8-jre     php7     php7-curl     php7-ctype     php7-dev     php7-dom     php7-exif     php7-gd     php7-gettext     php7-fileinfo     php7-fpm     php7-json     php7-mbstring     php7-opcache     php7-openssl     php7-pdo_mysql     php7-pear     php7-phar     php7-redis     php7-session     php7-tokenizer     php7-xmlwriter     php7-zip     php7-zlib     tzdata     unzip     yarn     supervisor \u0026\u0026     pecl install gmagick-2.0.5RC1 \u0026\u0026 echo \"extension=gmagick.so\" \u003e\u003e /etc/php7/php.ini \u0026\u0026     apk del autoconf build-base libtool php7-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/elabftw"
        },
        {
          "CmdLine": [
            "echo \"$(curl -sS https://composer.github.io/installer.sig) -\" \u003e composer-setup.php.sig     \u0026\u0026 curl -sS https://getcomposer.org/installer | tee composer-setup.php | sha384sum -c composer-setup.php.sig     \u0026\u0026 php composer-setup.php \u0026\u0026 rm composer-setup.php*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /elabftw/composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src/nginx/",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src/run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/elabftw"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/ssl"
          ]
        }
      ]
    }
  ]
}