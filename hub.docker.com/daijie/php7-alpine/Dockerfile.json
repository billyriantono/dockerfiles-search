{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-fpm-alpine",
      "SourceCode": "FROM php:7-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --update add     aspell-dev     autoconf     build-base     linux-headers     libaio-dev     zlib-dev     curl     git     subversion     freetype-dev     libjpeg-turbo-dev     libmcrypt-dev     libpng-dev     libtool     libbz2     bzip2-dev     libstdc++     libxslt-dev     openldap-dev     imagemagick-dev     hiredis-dev     make     unzip     ffmpeg     wget \u0026\u0026     docker-php-ext-install bcmath zip bz2 pdo_mysql mysqli simplexml opcache sockets mbstring pcntl xsl pspell \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     pecl install imagick \u0026\u0026     docker-php-ext-enable imagick \u0026\u0026     docker-php-ext-install gd \u0026\u0026     docker-php-ext-enable opcache \u0026\u0026     pecl install mcrypt-1.0.1 \u0026\u0026     docker-php-ext-enable mcrypt \u0026\u0026     apk del build-base     linux-headers     libaio-dev     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot \u0026\u0026 rm -rf /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}