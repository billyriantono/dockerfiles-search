{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/tensorflow-notebook:5811dcb711ba",
      "SourceCode": "FROM jupyter/tensorflow-notebook:5811dcb711ba",
      "Platform": "",
      "From": {
        "Image": "jupyter/tensorflow-notebook:5811dcb711ba"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"SKW\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends python-tk software-properties-common htop libboost-all-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ubuntu-toolchain-r/test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends gcc-7 g++-7 \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y openjdk-8-jdk \u0026\u0026     apt-get install -y ant \u0026\u0026     apt-get clean;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install ca-certificates-java \u0026\u0026     apt-get clean \u0026\u0026     update-ca-certificates -f;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export JAVA_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y  libgeos-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install https://github.com/matplotlib/basemap/archive/master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install -f http://h2o-release.s3.amazonaws.com/h2o/latest_stable_Py.html h2o"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install feather-format"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install skope-rules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     'boost'     'lightgbm'     'xgboost'     'catboost'     'gensim'     'mlxtend'     'tabulate'     'altair'     'vega3'     'vega'     'vega_datasets'     'featuretools'     'more-itertools'     'folium'     'mxnet'     'fbprophet'     'seaborn' \u0026\u0026     conda clean -tipsy \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension install --sys-prefix --py vega3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install --upgrade jupyterlab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install hyperopt \t\t\t\t\t deap \t\t\t\t\t update_checker \t\t\t\t\t tqdm \t\t\t\t\t stopit \t\t\t\t\t scikit-mdr \t\t\t\t\t skrebate \t\t\t\t\t tpot \t\t\t\t\t scikit-learn \t\t\t\t\t sklearn-deap \t\t\t\t\t yellowbrick \t\t\t\t\t spacy \t\t\t\t\t gplearn \t\t\t\t\t kmapper                                          skope-rules \t\t\t\t\t shap \t\t\t\t\t lime \t\t\t\t\t geojson \t\t\t\t\t descartes \t\t\t\t\t geopandas \t\t\t\t\t chart-studio \t\t\t\t\t viz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install mplleaflet \t\t\t\t\t gpxpy \t\t\t\t\t arrow \t\t\t\t\t sexmachine \t\t\t\t\t Geohash \t\t\t\t\t haversine \t\t\t\t\t toolz cytoolz \t\t\t\t\t sacred \t\t\t\t\t plotly \t\t\t\t\t git+https://github.com/nicta/dora.git \t\t\t\t\t git+https://github.com/hyperopt/hyperopt.git \t\t\t\t\t git+https://github.com/tflearn/tflearn.git \t\t\t\t\t fitter \t\t\t\t\t langid \t\t\t\t\t delorean \t\t\t\t\t trueskill \t\t\t\t\t heamy \t\t\t\t\t vida \t\t\t\t\t missingno \t\t\t\t\t pandas-profiling \t\t\t\t\t s2sphere"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install vowpalwabbit==8.5.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/python -m pip install --upgrade tables"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/.cache/pip/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/local/src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda clean -y --tarballs"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}