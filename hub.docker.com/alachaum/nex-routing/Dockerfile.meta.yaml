MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Key: OPENSSL_VERSION
    Name: arg
    Value: '"1.0.2h"'
  - Key: OPENRESTY_VERSION
    Name: arg
    Value: '"1.13.6.1"'
  - Key: LUAROCKS_VERSION
    Name: arg
    Value: '"2.4.1"'
  - Key: NEWRELIC_SDK_VERSION
    Name: arg
    Value: '"v0.16.2.0-beta"'
  - Key: RESTY_WAF_VERSION
    Name: arg
    Value: '"0.11.1-1"'
  - Key: RESTY_NEWRELIC_VERSION
    Name: arg
    Value: '"0.01-6"'
  - Key: RESTY_IPUTILS_VERSION
    Name: arg
    Value: '"0.3.0-1"'
  - Env:
    - Key: NEWRELIC_APP_NAME
      Value: '''core-nex-routing'''
    Name: env
  - Env:
    - Key: NEWRELIC_APP_LICENSE_KEY
      Value: ''''''
    Name: env
  - Env:
    - Key: NGX_REAL_IP_HEADER
      Value: '''X-Real-IP'''
    Name: env
  - Env:
    - Key: NGX_LISTEN_PROTOCOL
      Value: ''''''
    Name: env
  - Env:
    - Key: NGX_SET_REAL_IP_FROM
      Value: '''localhost'''
    Name: env
  - Env:
    - Key: RESTY_WAF_MODE
      Value: '''SIMULATE'''
    Name: env
  - Env:
    - Key: NGX_PROXY_X_FORWARDED_FOR
      Value: '''$proxy_add_x_forwarded_for'''
    Name: env
  - Env:
    - Key: NGX_PROXY_X_REAL_IP
      Value: '''$remote_addr'''
    Name: env
  - Env:
    - Key: NGX_PROXY_BACKEND_PORT
      Value: "80"
    Name: env
  - Env:
    - Key: PATH
      Value: '"/usr/local/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin:${PATH}"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     build-essential     gcc-5     g++-5     libreadline-dev     libncurses5-dev     libpcre3     libpcre3-dev     libssl-dev     perl     make     build-essential     zlib1g-dev     unzip     lua5.1     liblua5.1-0-dev     git     curl     python   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++
      g++ /usr/bin/g++-5
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp   && curl -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz   &&
      tar -xzf openssl-${OPENSSL_VERSION}.tar.gz   && rm -rf openssl-${OPENSSL_VERSION}.tar.gz   &&
      cd /tmp   && rm -rf ngx_openresty-${OPENRESTY_VERSION}* openresty-${OPENRESTY_VERSION}*   &&
      curl -OL https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz   &&
      tar -xzf openresty-${OPENRESTY_VERSION}.tar.gz   && cd /tmp/openresty-${OPENRESTY_VERSION}/   &&
      export PATH=$PATH:/sbin:/bin:/usr/sbin:/usr/bin   && ./configure     --with-http_ssl_module     --with-luajit     --with-http_realip_module     --with-openssl=/tmp/openssl-${OPENSSL_VERSION}/   &&
      make   && make install   && rm -rf /etc/nginx   && ln -s /usr/local/openresty/nginx/conf
      /etc/nginx   && mkdir -p /etc/nginx/lua     /etc/nginx/lua-lib     /etc/nginx/sites-available     /etc/nginx/sites-enabled     /etc/nginx/conf.d     /etc/nginx/default-certificates     /etc/nginx/certificates     /var/log/nginx   &&
      chmod 775 /etc/nginx/certificates   && chown root:www-data /etc/nginx/certificates   &&
      chmod 775 -R /usr/local/openresty   && cd /tmp   && rm -rf ngx_openresty-${OPENRESTY_VERSION}*
      openresty-${OPENRESTY_VERSION}*   && rm -rf openssl-${OPENSSL_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp   && curl -OL https://luarocks.org/releases/luarocks-${LUAROCKS_VERSION}.tar.gz   &&
      tar zxpf luarocks-${LUAROCKS_VERSION}.tar.gz   && cd luarocks-${LUAROCKS_VERSION}   &&
      ./configure   && make bootstrap
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install lua-resty-waf ${RESTY_WAF_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp   && rm -rf nr_agent_sdk-*   && curl -OL http://download.newrelic.com/agent_sdk/nr_agent_sdk-${NEWRELIC_SDK_VERSION}.x86_64.tar.gz   &&
      tar -xzf nr_agent_sdk-${NEWRELIC_SDK_VERSION}.x86_64.tar.gz   && cp /tmp/nr_agent_sdk-${NEWRELIC_SDK_VERSION}.x86_64/lib/*.so
      /lib/   && luarocks install resty-newrelic ${RESTY_NEWRELIC_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install lua-resty-iputils ${RESTY_IPUTILS_VERSION}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf.d/
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lua/
    - /etc/nginx/lua/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lua-lib/
    - /etc/nginx/lua-lib/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates/
    - /etc/nginx/templates/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - public/
    - /etc/nginx/public/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/*.sh
    Name: run
    PrependShell: true
  - Health:
      Test:
      - CMD-SHELL
      - bash /usr/local/bin/healthcheck.sh
      Timeout: 5000000000
    Name: healthcheck
  - Name: volume
    Volumes:
    - /var/log/nginx
    - /etc/nginx/certificates
    - /etc/nginx/mapping
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nginx
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
