{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Anthony Ruhier",
          "Name": "maintainer"
        },
        {
          "Key": "AMPACHE_VERSION",
          "Name": "arg",
          "Value": "4.0.0"
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt-get -y install apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_RELEASE=`dpkg --status tzdata|grep Provides|cut -f2 -d'-'`  \u0026\u0026\techo \"deb http://http.debian.net/debian/ ${DEBIAN_RELEASE} main contrib non-free\" \u003e /etc/apt/sources.list  \u0026\u0026 echo \"deb http://http.debian.net/debian/ ${DEBIAN_RELEASE}-updates main contrib non-free\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 echo \"deb http://security.debian.org/ ${DEBIAN_RELEASE}/updates main contrib non-free\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 apt-get update  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install wget gnupg rsync inotify-tools git cron lame libldap2-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install libvorbis-dev vorbis-tools flac libmp3lame-dev ffmpeg libtheora-dev libfaac-dev libopus-dev libvpx-dev libfreetype6-dev libicu-dev libjpeg-dev libpng-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "debMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"  \u0026\u0026 docker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"  \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/  \u0026\u0026 docker-php-ext-install gd ldap mysqli pdo_mysql  \u0026\u0026 php -r \"readfile('https://getcomposer.org/installer');\" | php  \u0026\u0026 mv composer.phar /usr/local/bin/composer  \u0026\u0026 echo \"upload_max_filesize = 25M;\" \u003e\u003e /usr/local/etc/php/conf.d/uploads.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/ampache/ampache/archive/${AMPACHE_VERSION}.tar.gz",
            "/usr/src/ampache-${AMPACHE_VERSION}.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "mkdir /usr/src/ampache \u0026\u0026 ln -s /usr/src/ampache /var/www/ampache  \u0026\u0026 tar -C /var/www/ampache -xf /usr/src/ampache-${AMPACHE_VERSION}.tar.gz ampache-${AMPACHE_VERSION} --strip=1  \u0026\u0026 cd /var/www/ampache \u0026\u0026 composer install --prefer-source --no-interaction  \u0026\u0026 chown -R www-data /usr/src/ampache  \u0026\u0026 rm /var/www/ampache /usr/src/ampache-${AMPACHE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/media"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/ampache/config"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 555 /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTIFY_CHANGES",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}