MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"webispy@gmail.com"'
    - Key: version
      Value: '"0.1"'
    - Key: description
      Value: '"development environment for nugulinux"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: $LC_ALL
    - Key: PATH
      Value: $PATH:/usr/local/go/bin
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y software-properties-common \t    ca-certificates
      language-pack-en ubuntu-dbgsym-keyring \t    && locale-gen $LC_ALL \t    &&
      dpkg-reconfigure locales \t    && echo \"deb http://ddebs.ubuntu.com bionic
      main restricted universe multiverse\" >> /etc/apt/sources.list \t    && echo
      \"deb http://ddebs.ubuntu.com bionic-updates main restricted universe multiverse\"
      >> /etc/apt/sources.list \t    && echo \"deb http://ddebs.ubuntu.com bionic-proposed
      main restricted universe multiverse\" >> etc/apt/sources.list \t    && add-apt-repository
      -y ppa:nugulinux/sdk \t    && apt-get update \t    && apt-get install -y --no-install-recommends
      \t    apt-utils \t    binfmt-support \t    build-essential \t    ca-certificates
      \t    clang clang-format clang-tidy clang-tools \t    cmake \t    cppcheck \t
      \   ctags \t    curl \t    dbus \t    debianutils \t    debhelper \t    debootstrap
      \t    devscripts \t    dh-autoreconf dh-systemd \t    diffstat \t    dnsutils
      \t    exuberant-ctags \t    elfutils \t    gdb \t    gettext \t    git \t    global
      \t    gstreamer1.0-tools \t    gstreamer1.0-plugins-base \t    gstreamer1.0-plugins-good
      \t    gstreamer1.0-plugins-bad \t    gstreamer1.0-plugins-ugly \t    iputils-ping
      \t    language-pack-en \t    less \t    libasound2-dev libasound2-dbgsym libasound2-plugins
      \t    libconfig-dev libconfig9-dbgsym \t    libcurl4-openssl-dev libcurl4-dbgsym
      \t    libglib2.0-dev libglib2.0-0-dbgsym \t    libgrpc++-dev \t    libgstreamer1.0-dev
      libgstreamer1.0-0-dbg \t    libgstreamer-plugins-base1.0-dev \t    libopus-dev
      libopus-dbg libopus0-dbgsym \t    libprotobuf-dev \t    libssl-dev libssl1.0.0-dbgsym
      \t    libsqlite3-dev libsqlite3-0-dbgsym \t\tlibqt5webkit5-dev \t    man \t
      \   minicom \t    moreutils \t    mdbus2 \t    net-tools \t    patch \t    pkg-config
      \t    portaudio19-dev \t    protobuf-compiler \t    protobuf-compiler-grpc \t
      \   pulseaudio \t    python-dbus \t    python-pip \t    qemu-user-static \t
      \   qt5-default \t    sbuild \t    schroot \t    sed \t    sqlite3 \t    sudo
      \t    tig \t    unzip \t    vim \t    wget \t    xz-utils \t    zlib1g-dev \t
      \   zsh \t    && apt-get clean \t    && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dotfiles/.vimrc
    - dotfiles/.zshrc
    - dotfiles/.gitconfig
    - dotfiles/.tigrc
    - /root/
  - CmdLine:
    - "pip install setuptools \t&& pip install wheel \t&& pip install gerrit-check
      \t&& sed -i 's/from flake8.engine/from flake8.api.legacy/' /usr/local/lib/python2.7/dist-packages/gerritcheck/check.py
      \t&& sed -i 's/\"--quiet\"/\"--quiet\", \"--enable=all\"/' /usr/local/lib/python2.7/dist-packages/gerritcheck/check.py
      \t&& sed -i 's/review\\[\"labels\"\\] = {\"Code-Review\": -1}/ /' /usr/local/lib/python2.7/dist-packages/gerritcheck/check.py
      \t&& touch /usr/local/lib/python2.7/dist-packages/gerritcheck/check.py \t&&
      chsh -s /bin/zsh root \t&& git clone https://github.com/robbyrussell/oh-my-zsh.git
      ~/.oh-my-zsh \t&& git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
      ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting \t&& git clone https://github.com/VundleVim/Vundle.vim.git
      ~/.vim/bundle/Vundle.vim \t&& ls -la ~/ \t&& vim +PluginInstall +qall \t&& mkdir
      /usr/share/codespell \t&& wget --no-check-certificate https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl
      -P /usr/bin/ \t&& wget --no-check-certificate https://raw.githubusercontent.com/torvalds/linux/master/scripts/spelling.txt
      -P /usr/bin/ \t&& wget --no-check-certificate https://raw.githubusercontent.com/nfs-ganesha/ci-tests/master/checkpatch/checkpatch-to-gerrit-json.py
      -P /usr/bin/ \t&& chmod +x /usr/bin/checkpatch.pl \t&& chmod +x /usr/bin/checkpatch-to-gerrit-json.py
      \t&& wget https://raw.githubusercontent.com/nugulinux/docker-devenv/master/patches/0001-checkpatch-add-option-for-excluding-directories.patch
      -P /tmp/ \t&& wget https://raw.githubusercontent.com/nugulinux/docker-devenv/master/patches/0002-ignore_const_struct_warning.patch
      -P /tmp/ \t&& wget https://raw.githubusercontent.com/nugulinux/docker-devenv/master/patches/0003-gerrit_checkpatch.patch
      -P /tmp/ \t&& cd /usr/bin \t&& cat /tmp/0001-checkpatch-add-option-for-excluding-directories.patch
      | patch \t&& cat /tmp/0002-ignore_const_struct_warning.patch | patch \t&& cat
      /tmp/0003-gerrit_checkpatch.patch | patch \t&& rm /tmp/*.patch"
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/zsh
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - run_checkpatch.sh
    - run_cppcheck.sh
    - /usr/bin/
  - CmdLine:
    - /usr/bin/startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
