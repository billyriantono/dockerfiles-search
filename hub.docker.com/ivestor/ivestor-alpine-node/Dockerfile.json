{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v4.9.1"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ \u0026\u0026   for server in pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do     gpg --keyserver $server --recv-keys       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       FD3A5288F042B6850C66B31F09FE44734EB7990E       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       DD8F2338BAE7501E3DD5AC78C273792F7D83545D       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       B9AE9905FFD7803F25714661B63B535A4C206CA9       56730D5401028683275BD23C23EFEFE93C4CFFFE       77984A986EBC2AA786BC0F66B01FBB92821C587A \u0026\u0026 break;   done \u0026\u0026   curl -sfSLO https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.xz \u0026\u0026   curl -sfSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt |     grep \" node-${NODE_VERSION}.tar.xz\\$\" | sha256sum -c | grep ': OK$' \u0026\u0026   tar -xf node-${NODE_VERSION}.tar.xz \u0026\u0026   cd node-${NODE_VERSION} \u0026\u0026   ./configure --prefix=/usr ${CONFIG_FLAGS} \u0026\u0026   make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026   make install \u0026\u0026   cd / \u0026\u0026   if [ -z \"$CONFIG_FLAGS\" ]; then     if [ -n \"$NPM_VERSION\" ]; then       npm install -g npm@${NPM_VERSION};     fi;     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;     if [ -n \"$YARN_VERSION\" ]; then       for server in pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do         gpg --keyserver $server --recv-keys           6A010C5166006599AA17F08146C2130DFD2497F5 \u0026\u0026 break;       done \u0026\u0026       curl -sfSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O https://yarnpkg.com/${YARN_VERSION}.tar.gz.asc \u0026\u0026       gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz \u0026\u0026       mkdir /usr/local/share/yarn \u0026\u0026       tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 \u0026\u0026       ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ \u0026\u0026       ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ \u0026\u0026       rm ${YARN_VERSION}.tar.gz*;     fi;   fi \u0026\u0026   apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS} \u0026\u0026   rm -rf ${RM_DIRS} /node-${NODE_VERSION}* /usr/share/man /tmp/* /var/cache/apk/*     /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man     /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}