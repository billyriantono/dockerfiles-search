MetaArgs: null
Stages:
- As: erlang-builder
  BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: REFRESHED_AT
      Value: "2018-11-12"
    - Key: ERLANG_VERSION
      Value: 21.1.1
    - Key: LANG
      Value: en_US.UTF-8
    - Key: HOME
      Value: /opt/app/
    - Key: TERM
      Value: xterm
    Name: env
  - Name: workdir
    Path: /tmp/erlang-build
  - CmdLine:
    - mkdir -p "${HOME}" &&     adduser -s /bin/sh -u 1001 -G root -h "${HOME}" -S
      -D default &&     chown -R 1001:0 "${HOME}" &&     echo "@main http://dl-cdn.alpinelinux.org/alpine/v3.8/main"
      >> /etc/apk/repositories &&     echo "@community http://dl-cdn.alpinelinux.org/alpine/v3.8/community"
      >> /etc/apk/repositories &&     echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main"
      >> /etc/apk/repositories &&     apk --no-cache --update --available upgrade
      &&     apk add --no-cache --update pcre@edge &&     apk add --no-cache --update       bash       ca-certificates       openssl-dev       ncurses-dev       unixodbc-dev       zlib-dev
      &&     apk add --no-cache --virtual .erlang-build dpkg-dev dpkg binutils git
      autoconf build-base perl-dev &&     git clone -b OTP-${ERLANG_VERSION} --single-branch
      --depth 1 https://github.com/erlang/otp.git . &&     export ERL_TOP=/tmp/erlang-build
      &&     export PATH=$ERL_TOP/bin:$PATH &&     export CPPFlAGS="-D_BSD_SOURCE
      $CPPFLAGS" &&     ./otp_build autoconf &&     ./configure --prefix=/usr       --build="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)"       --sysconfdir=/etc       --mandir=/usr/share/man       --infodir=/usr/share/info       --without-javac
      --without-wx --without-debugger --without-observer --without-jinterface       --without-cosEvent
      --without-cosEventDomain --without-cosFileTransfer --without-cosNotification       --without-cosProperty
      --without-cosTime --without-cosTransactions --without-et --without-gs       --without-ic
      --without-megaco --without-orber --without-percept --without-typer       --enable-threads
      --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe &&       make
      -j4 && make install &&       cd $HOME &&       rm -rf /tmp/erlang-build &&       update-ca-certificates
      --fresh &&       /usr/bin/erl -eval "beam_lib:strip_release('/usr/lib/erlang/lib')"
      -s init stop > /dev/null &&       (/usr/bin/strip /usr/lib/erlang/erts-*/bin/*
      || true) &&       rm -rf /usr/lib/erlang/usr/ &&       rm -rf /usr/lib/erlang/misc/
      &&       for DIR in /usr/lib/erlang/erts* /usr/lib/erlang/lib/*; do         rm
      -rf ${DIR}/src/*.erl;         rm -rf ${DIR}/doc;         rm -rf ${DIR}/man;         rm
      -rf ${DIR}/examples;         rm -rf ${DIR}/emacs;         rm -rf ${DIR}/c_src;       done
      &&       rm -rf /usr/lib/erlang/erts-*/lib/ &&       rm /usr/lib/erlang/erts-*/bin/dialyzer
      &&       rm /usr/lib/erlang/erts-*/bin/erlc &&       rm /usr/lib/erlang/erts-*/bin/typer
      &&       rm /usr/lib/erlang/erts-*/bin/ct_run &&       apk del --force .erlang-build
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: erlang-builder
  Platform: ""
  SourceCode: FROM alpine:3.8 as erlang-builder
- As: erlang
  BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: REFRESHED_AT
      Value: "2018-11-12"
    - Key: LANG
      Value: en_US.UTF-8
    - Key: TERM
      Value: xterm
    Name: env
  - Chown: ""
    From: erlang-builder
    Name: copy
    SourcesAndDest:
    - /usr/lib/erlang
    - /usr/lib/erlang
  - CmdLine:
    - echo "@main http://dl-cdn.alpinelinux.org/alpine/v3.8/main" >> /etc/apk/repositories
      &&     echo "@community http://dl-cdn.alpinelinux.org/alpine/v3.8/community"
      >> /etc/apk/repositories &&     echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main"
      >> /etc/apk/repositories &&     apk --update add ncurses-libs openssl &&     for
      F in erl erlc run_erl to_erl; do       ln -s /usr/lib/erlang/bin/${F} /usr/bin/${F};     done
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: erlang
  Platform: ""
  SourceCode: FROM alpine:3.8 as erlang
- As: elixir
  BaseName: erlang
  Commands:
  - Env:
    - Key: ELIXIR_VERSION
      Value: 1.7.4
    Name: env
  - CmdLine:
    - apk --no-cache --virtual .elixir-install add wget &&     wget --no-check-certificate
      "https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/Precompiled.zip"
      &&     apk del --force .elixir-install &&     mkdir -p /usr/lib/elixir &&     unzip
      Precompiled.zip -d /usr/lib/elixir/ &&     rm Precompiled.zip &&     for F in
      elixir elixirc iex mix; do       ln -s /usr/lib/elixir/bin/${F} /usr/bin/${F};     done
      &&     mix local.hex --force &&     mix local.rebar --force
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 1
      Named: erlang
  Name: elixir
  Platform: ""
  SourceCode: FROM erlang as elixir
- BaseName: elixir
  Commands:
  - CmdLine:
    - apk --update add nodejs nodejs-npm inotify-tools
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 2
      Named: elixir
  Name: ""
  Platform: ""
  SourceCode: FROM elixir
