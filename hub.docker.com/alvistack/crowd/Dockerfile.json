{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.utf8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.utf8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "\"/bin/bash\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"UTC\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENJDK_RELEASE",
              "Value": "\"8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CROWD_VERSION",
              "Value": "\"3.7.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CROWD_OWNER",
              "Value": "\"crowd\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CROWD_GROUP",
              "Value": "\"crowd\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CROWD_HOME",
              "Value": "\"/var/atlassian/application-data/crowd\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CROWD_CATALINA",
              "Value": "\"/opt/atlassian/crowd\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JVM_MINIMUM_MEMORY",
              "Value": "\"1024m\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JVM_MAXIMUM_MEMORY",
              "Value": "\"1024m\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CATALINA_CONNECTOR_PROXYNAME",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CATALINA_CONNECTOR_PROXYPORT",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CATALINA_CONNECTOR_SCHEME",
              "Value": "\"http\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CATALINA_CONNECTOR_SECURE",
              "Value": "\"false\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CATALINA_CONTEXT_PATH",
              "Value": "\"/\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JVM_SUPPORT_RECOMMENDED_ARGS",
              "Value": "\"-Datlassian.plugins.enable.wait=300 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SESSION_TIMEOUT",
              "Value": "\"300\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:$CROWD_CATALINA\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$CROWD_HOME"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$CROWD_HOME"
        },
        {
          "Name": "expose",
          "Ports": [
            "8020"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8095"
          ]
        },
        {
          "CmdLine": [
            "dumb-init",
            "--",
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start_crowd.sh",
            "-fg"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y install locales     \u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 groupadd -r $CROWD_OWNER     \u0026\u0026 useradd -r -g $CROWD_GROUP -d $CROWD_HOME -M -s /usr/sbin/nologin $CROWD_OWNER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y install ca-certificates curl gcc git libffi-dev libssl-dev lsb-release make python3 python3-dev sudo     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -skL https://bootstrap.pypa.io/get-pip.py | python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 cd /etc/ansible/roles/localhost     \u0026\u0026 pip3 install --upgrade --ignore-installed --requirement requirements.txt     \u0026\u0026 molecule dependency     \u0026\u0026 molecule lint     \u0026\u0026 molecule syntax     \u0026\u0026 molecule converge     \u0026\u0026 molecule verify     \u0026\u0026 rm -rf /var/cache/ansible/*     \u0026\u0026 rm -rf /root/.cache/*     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}