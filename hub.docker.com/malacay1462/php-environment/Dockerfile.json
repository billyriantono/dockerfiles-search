{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phpdockerio/php74-fpm:latest",
      "SourceCode": "FROM phpdockerio/php74-fpm:latest",
      "Platform": "",
      "From": {
        "Image": "phpdockerio/php74-fpm:latest"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install  -y     apt-transport-https     ca-certificates     curl make     gnupg-agent     software-properties-common     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ rc main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg |  apt-key add -     \u0026\u0026 add-apt-repository     \"deb [arch=amd64] https://download.docker.com/linux/ubuntu     $(lsb_release -cs)     stable\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository universe     \u0026\u0026 add-apt-repository multiverse     \u0026\u0026 add-apt-repository restricted"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y --no-install-recommends install         php-pear php7.4-dev php-memcached php7.4-mysql php7.4-pgsql php7.4-opcache         php7.4-pdo php7.4-sqlite php-redis php-xdebug php7.4-bcmath php7.4-bz2         php7.4-gd php7.4-gmp php-imagick php7.4-imap php7.4-redis         php7.4-intl php7.4-pspell php7.4-soap php-ssh2 php-yaml     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install nodejs yarn     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://unpkg.com/@pnpm/self-installer | node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install git     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install vim htop supervisor cron graphviz aspell aspell-de     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y zsh fonts-powerline fonts-firacode     \u0026\u0026 chsh -s /usr/bin/zsh     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*    \u0026\u0026 sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"     \u0026\u0026 git config --global --add oh-my-zsh.hide-dirty 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install  -y docker docker-ce docker-ce-cli containerd.io     \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://get.symfony.com/cli/installer | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/1.25.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install ast \u0026\u0026 printf \"\\nextension=ast.so\\n\" \u003e\u003e /etc/php/7.4/fpm/php.ini     \u0026\u0026 printf \"\\nextension=ast.so\\n\" \u003e\u003e /etc/php/7.4/cli/php.ini     \u0026\u0026 export PHAN_ALLOW_XDEBUG=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service cron start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo laravel/installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add @vue/cli @vue/cli-service-global"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pnpm add --global @vue/cli @vue/cli-service-global"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}