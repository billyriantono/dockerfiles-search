{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y locales wget curl software-properties-common ssh build-essential curl git unzip gettext-base         libmcrypt-dev libicu-dev libxslt-dev libxml2-dev libglib2.0-bin libcurl4-gnutls-dev libjpeg62-turbo-dev libpng-dev         gosu libmagickwand-dev iproute2 libzip-dev     \u0026\u0026 chmod +s /usr/sbin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 mkdir -p /run/php     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php_requires.txt",
            "/tmp/php_requires"
          ]
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) `grep -vE \"^\\s*#\" /tmp/php_requires | tr \"\\n\" \" \"`     \u0026\u0026 pecl install xdebug \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 pecl install imagick \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 sed -e 's#error_log = .*#error_log = /var/log/php-fpm.log#' -i /usr/local/etc/php-fpm.conf     \u0026\u0026 sed -e 's/listen = .*/listen = \\[::\\]:9003/' -i /usr/local/etc/php-fpm.d/zz-docker.conf     \u0026\u0026 sed -e 's/;listen\\.owner/listen.owner/' -i /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -e 's/;listen\\.group/listen.group/' -i /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -e 's/;catch_workers_output/catch_workers_output/' -i /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -e 's/;php_admin_flag[log_errors]/php_admin_flag[log_errors]/' -i /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -e 's#;php_admin_value[error_log] = .*#php_admin_value[error_log] = /var/log/php/www.log#' -i /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer     \u0026\u0026 composer global require hirak/prestissimo     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install libxslt-dev -y \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     docker-php-ext-install exif \u0026\u0026     docker-php-ext-install xsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/custom.php.ini",
            "/usr/local/etc/php/conf.d/99-custom.ini.dist"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/log.php.ini",
            "/usr/local/etc/php/conf.d/90-log.ini.dist"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/xdebug.ini",
            "/usr/local/etc/php/conf.d/xdebug.ini.dist"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9003"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/wait-for-it.sh",
            "/usr/local/bin/wait-for-it.sh"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}