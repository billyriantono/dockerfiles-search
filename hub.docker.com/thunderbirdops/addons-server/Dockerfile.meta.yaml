MetaArgs: null
Stages:
- BaseName: python:2.7.14-slim-stretch
  Commands:
  - Env:
    - Key: SWIG_FEATURES
      Value: '"-D__x86_64__"'
    Name: env
  - Env:
    - Key: OLYMPIA_UID
      Value: "9500"
    Name: env
  - CmdLine:
    - useradd -u ${OLYMPIA_UID} -s /sbin/nologin olympia
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/nodesource.gpg.key
    - /etc/pki/gpg/GPG-KEY-nodesource
  - CmdLine:
    - apt-get update && apt-get install -y         apt-transport-https                      gnupg2                               &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/pki/gpg/GPG-KEY-nodesource | apt-key add -
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/debian-stretch-nodesource-repo
    - /etc/apt/sources.list.d/nodesource.list
  - CmdLine:
    - apt-get update && apt-get install -y         bash-completion                          build-essential                          curl                                     libcap-dev                               libjpeg-dev                              libpcre3-dev                             libsasl2-dev                             libxml2-dev                              libxslt-dev                              locales                                  zlib1g-dev                               libffi-dev                               libssl-dev                               python-dev                               python-pip                               nodejs                                   npm                                      uuid-dev                                 uwsgi                                    uwsgi-plugin-python                      git                                      mysql-client                             default-libmysqlclient-dev               swig                                     gettext                                  librsvg2-bin                             pngcrush                             &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: workdir
    Path: /usr/lib/uwsgi/plugins
  - CmdLine:
    - uwsgi --build-plugin https://github.com/Datadog/uwsgi-dogstatsd &&     rm -rf
      uwsgi-dogstatsd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - version.json
    - /app/version.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /data/olympia
  - Name: workdir
    Path: /data/olympia
  - CmdLine:
    - pip install --no-cache-dir --exists-action=w --no-deps -r requirements/system.txt                  &&
      pip install --no-cache-dir --exists-action=w --no-deps -r requirements/prod_py2.txt             &&
      pip install --no-cache-dir --exists-action=w --no-deps -e .
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/uwsgi /usr/sbin/uwsgi
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/lib/python2.7/plat-*/_sysconfigdata_nd.py /usr/lib/python2.7/
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "from olympia.lib.settings_base import *\nLESS_BIN = ''node_modules/less/bin/lessc''\nCLEANCSS_BIN
      = ''node_modules/clean-css-cli/bin/cleancss''\nUGLIFY_BIN = ''node_modules/uglify-js/bin/uglifyjs''\nFXA_CONFIG
      = {''default'': {}, ''internal'': {}}\n"> settings_local.py'
    Name: run
    PrependShell: true
  - CmdLine:
    - DJANGO_SETTINGS_MODULE='settings_local' locale/compile-mo.sh locale
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install     && make -f Makefile-docker copy_node_js     && DJANGO_SETTINGS_MODULE='settings_local'
      python manage.py compress_assets     && DJANGO_SETTINGS_MODULE='settings_local'
      python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f settings_local.py settings_local.pyc
    Name: run
    PrependShell: true
  From:
    Image: python:2.7.14-slim-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7.14-slim-stretch
