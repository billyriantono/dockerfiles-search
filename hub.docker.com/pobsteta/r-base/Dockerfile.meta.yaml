MetaArgs: null
Stages:
- BaseName: pobsteta/docker-base
  Commands:
  - Maintainer: Pascal Obstetar <pascal.obstetar@bioecoforests.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - "useradd docker \t&& mkdir /home/docker \t&& chown docker:docker /home/docker
      \t&& addgroup docker staff"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\ted \t\tless
      \t\tlocales \t\tvim-tiny \t\twget \t\tca-certificates \t\tapt-transport-https
      \t\tgsfonts \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \t&& locale-gen en_US.utf8 \t&&
      /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - echo "deb http://cran.uni-muenster.de/bin/linux/ubuntu xenial-cran35/" > /etc/apt/sources.list.d/rcran.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tlittler
      \               r-cran-littler \t\tr-base=${R_BASE_VERSION}* \t\tr-base-dev=${R_BASE_VERSION}*
      \t\tr-recommended=${R_BASE_VERSION}*         && echo 'options(repos = c(CRAN
      = \"https://cloud.r-project.org/\"), download.file.method = \"libcurl\")' >>
      /etc/R/Rprofile.site         && echo 'source(\"/etc/R/Rprofile.site\")' >> /etc/littler.r
      \t&& ln -s /usr/share/doc/littler/examples/install.r /usr/local/bin/install.r
      \t&& ln -s /usr/share/doc/littler/examples/install2.r /usr/local/bin/install2.r
      \t&& ln -s /usr/share/doc/littler/examples/installGithub.r /usr/local/bin/installGithub.r
      \t&& ln -s /usr/share/doc/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r
      \t&& install.r docopt \t&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \t&&
      rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - R
    Name: cmd
    PrependShell: false
  From:
    Image: pobsteta/docker-base
  Name: ""
  Platform: ""
  SourceCode: FROM pobsteta/docker-base
