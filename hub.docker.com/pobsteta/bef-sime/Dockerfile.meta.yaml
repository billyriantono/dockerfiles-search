MetaArgs: null
Stages:
- BaseName: pobsteta/docker-base
  Commands:
  - Maintainer: Pascal Obstetar <pascal.obstetar@bioecoforests.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://qgis.org/debian trusty main" > /etc/apt/sources.list.d/qgis.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-key 3FF5FFCAD71472C4
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://cran.irsn.fr/bin/linux/ubuntu trusty/" > /etc/apt/sources.list.d/rcran.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-dev python-pip python-lxml python-relatorio python-genshi
      python-dateutil python-polib python-sql python-psycopg2 python-webdav python-pydot
      unoconv python-sphinx python-simplejson python-yaml git libgdal1h python-software-properties
      software-properties-common libpq-dev python-ldap python-gdal python-rpy2 libgeos-dev
      python-vobject python-vatnumber apache2 qgis qgis-server libapache2-mod-fcgid
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --system tryton
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup www-data root
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - apache.conf
    - /etc/apache2/sites-enabled/000-default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fcgid.conf
    - /etc/apache2/mods-available/fcgid.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fqdn.conf
    - /etc/apache2/conf-available/fqdn.conf
  - CmdLine:
    - sudo a2enconf fqdn
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'install.packages(c("sp", "rgeos"), repos="http://cran.us.r-project.org",
      dependencies=TRUE)' > /tmp/packages.R     && Rscript /tmp/packages.R
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./tryton.tar.gz
    - /opt/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dbgis-0.2.tar.gz
    - /tmp/
  - CmdLine:
    - pip install /tmp/dbgis-0.2.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/dbgis-0.2.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/lib/tryton
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /var/lib/tryton
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/tryton
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /var/log/tryton
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/tryton
    - /var/log/tryton
  - Name: expose
    Ports:
    - "8000"
  - Name: expose
    Ports:
    - "8001"
  - CmdLine:
    - apache2ctl
    - -D
    - FOREGROUND
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: pobsteta/docker-base
  Name: ""
  Platform: ""
  SourceCode: FROM pobsteta/docker-base
