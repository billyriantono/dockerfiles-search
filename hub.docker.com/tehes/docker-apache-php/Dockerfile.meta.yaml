MetaArgs: null
Stages:
- BaseName: php:7.3.1-apache
  Commands:
  - CmdLine:
    - apt-get clean && apt-get update && apt-get install --fix-missing wget apt-transport-https
      lsb-release ca-certificates gnupg -y
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.dotdeb.org stretch all" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb-src http://packages.dotdeb.org stretch all" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && wget https://www.dotdeb.org/dotdeb.gpg && apt-key add dotdeb.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get update && apt-get install --fix-missing -y   ruby-dev   rubygems   imagemagick   graphviz   sudo   git   vim   memcached   libmemcached-tools   libmemcached-dev   libpng-dev   libjpeg62-turbo-dev   libmcrypt-dev   libxml2-dev   libxslt1-dev   mysql-client   zip   libzip-dev   wget   linux-libc-dev   libyaml-dev   zlib1g-dev   libicu-dev   libpq-dev   bash-completion   htop   libwebp-dev   libxpm-dev   libfreetype6-dev   libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install memcached-3.1.3
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable memcached
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - core/memcached.conf
    - /etc/memcached.conf
  - CmdLine:
    - docker-php-ext-configure gd --with-gd --with-webp-dir --with-jpeg-dir     --with-png-dir
      --with-zlib-dir --with-xpm-dir --with-freetype-dir     --enable-gd-native-ttf
      && docker-php-ext-install gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mbstring zip soap pdo_mysql mysqli xsl opcache calendar
      intl exif pgsql pdo_pgsql ftp bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - (   echo "opcache.memory_consumption=128";   echo "opcache.interned_strings_buffer=8";   echo
      "opcache.max_accelerated_files=20000";   echo "opcache.revalidate_freq=5";   echo
      "opcache.fast_shutdown=1";   echo "opcache.enable_cli=1";   ) >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd web -d /var/www -g www-data -s /bin/bash
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG sudo web
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'web ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install yaml-2.0.4
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable yaml
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu-5.1.16
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "apc.enabled=1" >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install compass
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sL https://deb.nodesource.com/setup_10.x | bash - && \tapt-get update
      && apt-get install -y nodejs && \tnpm install npm@latest -g"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g less && npm install -g less-plugin-clean-css
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g grunt-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src && curl -sS http://getcomposer.org/installer | php
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src && mv composer.phar /usr/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/drush-ops/drush.git /usr/local/src/drush
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src/drush && git checkout 8.1.18
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/src/drush/drush /usr/bin/drush
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src/drush && composer update && composer install
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug-beta
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      &&    echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      &&    echo xdebug.remote_connect_back=0 >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      &&    echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      &&    echo xdebug.remote_host=docker_host >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      &&    echo xdebug.remote_log=/tmp/php7-xdebug.log >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require drupal/coder
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp && rm
      -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - core/ssmtp.conf
    - /etc/ssmtp/ssmtp.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - core/php-smtp.ini
    - /usr/local/etc/php/conf.d/php-smtp.ini
  - CmdLine:
    - rm -rf /var/www/html &&   mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2
      /var/www/html &&   chown -R web:www-data /var/lock/apache2 /var/run/apache2
      /var/log/apache2 /var/www/html
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/apache2.conf
    - /etc/apache2
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - core/envvars
    - /etc/apache2
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - core/other-vhosts-access-log.conf
    - /etc/apache2/conf-enabled/
  - CmdLine:
    - rm /etc/apache2/sites-enabled/000-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite expires && service apache2 restart
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://drupalconsole.com/installer -L -o drupal.phar && mv drupal.phar
      /usr/local/bin/drupal && chmod +x /usr/local/bin/drupal
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get remove -y libqt4-dev qt4-dev-tools wkhtmltopdf &&
      apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install openssl build-essential libssl-dev libxrender-dev git-core libx11-dev
      libxext-dev libfontconfig1-dev libfreetype6-dev fontconfig -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/wkhtmltopdf
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var/wkhtmltopdf && wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
      && tar xf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /var/wkhtmltopdf/wkhtmltox/bin/wkhtmltopdf /bin/wkhtmltopdf && cp /var/wkhtmltopdf/wkhtmltox/bin/wkhtmltoimage
      /bin/wkhtmltoimage
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R web:www-data /var/wkhtmltopdf
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /bin/wkhtmltopdf && chmod +x /bin/wkhtmltoimage
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www/html
  - CmdLine:
    - mkdir /var/www/.ssh/
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R web:www-data /var/www/
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 600 /var/www/.ssh/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Europe/Paris" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
    - "9000"
  - CmdLine:
    - echo "exec su - web" > /root/.bashrc &&     echo ". .profile" > /var/www/.bashrc
      &&     echo "alias ll='ls -al'" > /var/www/.profile &&     echo "cd /var/www/html"
      >> /var/www/.profile
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php.ini
    - /usr/local/etc/php/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - core/docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod 777 /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.3.1-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3.1-apache
