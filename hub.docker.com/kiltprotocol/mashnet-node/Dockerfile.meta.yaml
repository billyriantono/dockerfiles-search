MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:xenial
  Commands:
  - Name: workdir
    Path: /build
  - CmdLine:
    - "apt -y update &&   apt install -y --no-install-recommends \tsoftware-properties-common
      curl git file binutils binutils-dev snapcraft \tmake cmake ca-certificates g++
      zip dpkg-dev python rhash rpm openssl gettext  build-essential pkg-config libssl-dev
      libudev-dev ruby-dev time clang"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.cargo/bin:$PATH
    Name: env
  - CmdLine:
    - rustup install nightly
    Name: run
    PrependShell: true
  - CmdLine:
    - rustup install stable
    Name: run
    PrependShell: true
  - CmdLine:
    - rustup target add wasm32-unknown-unknown --toolchain nightly
    Name: run
    PrependShell: true
  - CmdLine:
    - cargo +nightly install --git https://github.com/alexcrichton/wasm-gc
    Name: run
    PrependShell: true
  - Env:
    - Key: RUST_BACKTRACE
      Value: "1"
    Name: env
  - CmdLine:
    - apt autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt clean -y
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CC
      Value: gcc
    Name: env
  - Env:
    - Key: CXX
      Value: g++
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /build
  - CmdLine:
    - /bin/bash scripts/build.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cargo build --release && cargo test
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:xenial as builder
- BaseName: ubuntu:xenial
  Commands:
  - Name: workdir
    Path: /runtime
  - CmdLine:
    - "apt -y update &&   apt install -y --no-install-recommends \topenssl \tcurl
      \    libssl-dev dnsutils"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /runtime/target/release/
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /build/target/release/mashnet-node
    - ./target/release/mashnet-node
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /build/start-node.sh
    - ./start-node.sh
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /build/chainspec.json
    - ./chainspec.json
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /build/chainspec.devnet.json
    - ./chainspec.devnet.json
  - CmdLine:
    - chmod a+x *.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -la .
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "30333"
    - "9933"
    - "9944"
  - CmdLine:
    - echo
    - '"Please provide a startup command."'
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
