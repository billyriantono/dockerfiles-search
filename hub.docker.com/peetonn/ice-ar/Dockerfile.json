{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "peetonn/ice-ar-base:latest",
      "SourceCode": "FROM peetonn/ice-ar-base:latest",
      "Platform": "",
      "From": {
        "Image": "peetonn/ice-ar-base:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Peter Gusev \u003cpeter@remap.ucla.edu\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get install -y gawk \t\u0026\u0026 pip2 install numpy dlib pandas scipy scikit-learn scikit-image opencv-python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/torch/distro.git --recursive \t\u0026\u0026 export TORCH_NVCC_FLAGS=\"-D__CUDA_NO_HALF_OPERATORS__\"  \t\u0026\u0026 cd /distro \t\u0026\u0026 bash install-deps \t\u0026\u0026  yes yes | ./install.sh \t\u0026\u0026 . /distro/install/bin/torch-activate \t\u0026\u0026 for NAME in dpnn nn optim optnet csvigo cutorch cunn fblualib torchx tds; do luarocks install $NAME; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/cmusatyalab/openface.git \t\u0026\u0026 cd /openface \t\u0026\u0026 python setup.py install \t\u0026\u0026 cd /openface/models \t\u0026\u0026 ./get-models.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEBUG_VER",
          "Name": "arg",
          "Value": "unknown"
        },
        {
          "CmdLine": [
            "DEBUG_VER=${DEBUG_VER} git clone --recursive https://github.com/remap/ice-ar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove -y git cmake wget lsb-release python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT",
              "Value": "/in/mtcamera"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FRAME_WIDTH",
              "Value": "320"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FRAME_HEIGHT",
              "Value": "180"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT",
              "Value": "/out/ice-annotations"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PREVIEW",
              "Value": "/preview/openface-out"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TORCH_MODEL",
              "Value": "/openface/models/openface/nn4.small2.v1.t7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DLIB_MODEL",
              "Value": "/openface/models/dlib/shape_predictor_68_face_landmarks.dat"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LABELS",
              "Value": "/reps/labels.csv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPS",
              "Value": "/reps/reps.csv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TRAIN_FOLDER",
              "Value": "/faces"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "train.sh",
            "/"
          ]
        }
      ]
    }
  ]
}