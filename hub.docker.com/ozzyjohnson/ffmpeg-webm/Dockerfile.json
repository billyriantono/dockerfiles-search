{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "Ozzy Johnson \u003cdocker@ozzy.io\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update             --quiet   \u0026\u0026 apt-get install             --yes             --no-install-recommends             --no-install-suggests         autoconf         automake         build-essential         ca-certificates         git-core         libass-dev         libgpac-dev         libtheora-dev         libtool         libvorbis-dev         pkg-config         python-minimal         texi2html         zlib1g-dev     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "git clone git://github.com/yasm/yasm.git     \u0026\u0026 cd yasm     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure     \u0026\u0026 make -j`getconf _NPROCESSORS_ONLN`     \u0026\u0026 make install     \u0026\u0026 make distclean     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf /tmp/yasm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://git.videolan.org/x264.git     \u0026\u0026 cd x264     \u0026\u0026 ./configure --enable-static --disable-opencl     \u0026\u0026 make -j`getconf _NPROCESSORS_ONLN`     \u0026\u0026 make install     \u0026\u0026 make distclean     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf /tmp/x264"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://git.opus-codec.org/opus.git     \u0026\u0026 cd opus     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure --disable-shared     \u0026\u0026 make -j`getconf _NPROCESSORS_ONLN`     \u0026\u0026 make install     \u0026\u0026 make distclean     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf /tmp/opus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://chromium.googlesource.com/webm/libvpx     \u0026\u0026 cd libvpx     \u0026\u0026 ./configure --disable-shared     \u0026\u0026 make -j`getconf _NPROCESSORS_ONLN`     \u0026\u0026 make install     \u0026\u0026 make clean     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf /tmp/libvpx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://source.ffmpeg.org/ffmpeg.git     \u0026\u0026 cd ffmpeg     \u0026\u0026 ./configure         --disable-debug         --enable-small         --extra-libs=-ldl         --enable-gpl         --enable-libass         --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libx264     \u0026\u0026 make -j`getconf _NPROCESSORS_ONLN`     \u0026\u0026 make install     \u0026\u0026 make distclean     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf /tmp/ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "record.sh",
            "/record.sh"
          ]
        },
        {
          "Expression": "VOLUME [\"/data\"]",
          "Name": "onbuild"
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/record.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}