{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "Sebastien Pujadas http://pujadas.net",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2015-08-15"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update         -qq     \u0026\u0026 apt-get install         -qq         --yes         --no-install-recommends         --no-install-suggests     curl     python-software-properties     software-properties-common     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)\"         \u0026\u0026 curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc\"         \u0026\u0026 gpg --verify /usr/local/bin/gosu.asc         \u0026\u0026 rm /usr/local/bin/gosu.asc         \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections   \u0026\u0026 add-apt-repository -y ppa:webupd8team/java   \u0026\u0026 apt-get update        -qq   \u0026\u0026 apt-get install        -qq        -y oracle-java7-installer=7u80+7u60arm-0~webupd8~1   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 rm -rf /var/cache/oracle-jdk7-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-7-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_PKG_NAME",
              "Value": "elasticsearch-1.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /   \u0026\u0026 wget https://download.elasticsearch.org/elasticsearch/elasticsearch/${ES_PKG_NAME}.tar.gz        --no-verbose   \u0026\u0026 tar xvzf $ES_PKG_NAME.tar.gz   \u0026\u0026 rm -f $ES_PKG_NAME.tar.gz   \u0026\u0026 mv /$ES_PKG_NAME /elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "elasticsearch.yml",
            "/elasticsearch/config/elasticsearch.yml"
          ]
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_HOME",
              "Value": "/opt/logstash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_PACKAGE",
              "Value": "logstash-1.5.4.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${LOGSTASH_HOME}  \u0026\u0026 curl -O https://download.elasticsearch.org/logstash/logstash/${LOGSTASH_PACKAGE}  \u0026\u0026 tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1  \u0026\u0026 rm -f ${LOGSTASH_PACKAGE}  \u0026\u0026 groupadd -r logstash  \u0026\u0026 useradd -r -s /usr/sbin/nologin -d ${LOGSTASH_HOME} -c \"Logstash service user\" -g logstash logstash  \u0026\u0026 chown -R logstash:logstash ${LOGSTASH_HOME}  \u0026\u0026 mkdir -p /var/log/logstash /etc/logstash/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-init",
            "/etc/init.d/logstash"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash  \u0026\u0026 chmod +x /etc/init.d/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KIBANA_HOME",
              "Value": "/opt/kibana"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_PACKAGE",
              "Value": "kibana-4.1.1-linux-x64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${KIBANA_HOME}  \u0026\u0026 curl -s -O https://download.elasticsearch.org/kibana/kibana/${KIBANA_PACKAGE}  \u0026\u0026 tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1  \u0026\u0026 rm -f ${KIBANA_PACKAGE}  \u0026\u0026 groupadd -r kibana  \u0026\u0026 useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c \"Kibana service user\" -g kibana kibana  \u0026\u0026 chown -R kibana:kibana ${KIBANA_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./kibana-init",
            "/etc/init.d/kibana"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana  \u0026\u0026 chmod +x /etc/init.d/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HB_VERSION",
              "Value": "1.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTP_BASIC_URL",
              "Value": "https://github.com/Asquera/elasticsearch-http-basic/releases/download/v${HB_VERSION}/elasticsearch-http-basic-${HB_VERSION}.jar"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/plugin   --url $HTTP_BASIC_URL   --install http-basic   --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MA_VERSION",
              "Value": "2.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/plugin   install elasticsearch/elasticsearch-mapper-attachments/${MA_VERSION}   --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CA_VERSION",
              "Value": "2.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/plugin install   elasticsearch/elasticsearch-cloud-aws/${CA_VERSION}   --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MARVEL_VERSION",
              "Value": "latest"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/plugin install   elasticsearch/marvel/${MARVEL_VERSION}   --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./elasticsearch.yml",
            "/elasticsearch/config/elasticsearch.yml"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/pki/tls/certs \u0026\u0026 mkdir /etc/pki/tls/private"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-forwarder.crt",
            "/etc/pki/tls/certs/logstash-forwarder.crt"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash-forwarder.key",
            "/etc/pki/tls/private/logstash-forwarder.key"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./01-lumberjack-input.conf",
            "/etc/logstash/conf.d/01-lumberjack-input.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./10-syslog.conf",
            "/etc/logstash/conf.d/10-syslog.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./11-nginx.conf",
            "/etc/logstash/conf.d/11-nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./30-lumberjack-output.conf",
            "/etc/logstash/conf.d/30-lumberjack-output.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx.pattern",
            "${LOGSTASH_HOME}/patterns/nginx"
          ]
        },
        {
          "CmdLine": [
            "chown -R logstash:logstash ${LOGSTASH_HOME}/patterns"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /.firstrun"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/usr/local/bin/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5000",
            "5601",
            "9200",
            "9300"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}