{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ozzyjohnson/wheezy-python",
      "SourceCode": "FROM ozzyjohnson/wheezy-python",
      "Platform": "",
      "From": {
        "Image": "ozzyjohnson/wheezy-python"
      },
      "Commands": [
        {
          "Maintainer": "Ozzy Johnson \u003cdocker@ozzy.io\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update         --quiet     \u0026\u0026 apt-get install             --yes             --no-install-recommends             --no-install-suggests         ca-certificates         libssl-dev         libssl-dev         libffi-dev         openssh-client        \tunzip         vim         wget     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget     https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip         --no-verbose         --ca-certificate /usr/local/share/certs/ca-root-nss.crt     \u0026\u0026 unzip google-cloud-sdk.zip     \u0026\u0026 rm google-cloud-sdk.zip     \u0026\u0026 google-cloud-sdk/install.sh         --bash-completion=true         --disable-installation-options         --path-update=true         --rc-path=/.bashrc         --usage-reporting=true     \u0026\u0026 /google-cloud-sdk/bin/gcloud         components         update         -q         preview"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON_SITEPACKAGES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install       -U pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install       virtualenv       pyopenssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install       awscli       ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install       apache-libcloud       boto       docker-py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\\n# Command completion for the AWS CLI.\\ncomplete -C '/usr/local/bin/aws_completer' aws\" \u003e\u003e       /.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "VOLUME [\"/data\"]",
          "Name": "onbuild"
        },
        {
          "Expression": "VOLUME [\"/.ansible.cfg\", \"/.aws\", \"/.boto\", \"/.config\", \"/.gce\"]",
          "Name": "onbuild"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/.gce"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}