{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Key": "cores",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Env": [
            {
              "Key": "ecores",
              "Value": "$cores"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update   \u0026\u0026 apt install -y --no-install-recommends      software-properties-common      ca-certificates      wget curl git python vim   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:bitcoin/bitcoin   \u0026\u0026 apt update   \u0026\u0026 apt install -y --no-install-recommends      build-essential libtool autotools-dev bsdmainutils      libevent-dev autoconf automake pkg-config libssl-dev      libdb4.8-dev libdb4.8++-dev python-setuptools cmake      libcap-dev   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:ubuntu-toolchain-r/test   \u0026\u0026 apt update   \u0026\u0026 apt install -y --no-install-recommends      g++-8-multilib gcc-8-multilib binutils-gold   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PROJECTDIR",
              "Value": "/opt/blocknetdx/blocknet"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASEPREFIX",
              "Value": "$PROJECTDIR/depends"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOST",
              "Value": "x86_64-pc-linux-gnu"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/blocknetdx   \u0026\u0026 cd /opt/blocknetdx   \u0026\u0026 git clone --depth 1 --branch v3.14.1 https://github.com/blocknetdx/blocknet.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/blockchain/config   \u0026\u0026 mkdir -p /opt/blockchain/data   \u0026\u0026 ln -s /opt/blockchain/config /root/.blocknetdx   \u0026\u0026 cd $BASEPREFIX   \u0026\u0026 make -j$ecores \u0026\u0026 make install   \u0026\u0026 cd $PROJECTDIR   \u0026\u0026 chmod +x ./autogen.sh; sync   \u0026\u0026 ./autogen.sh   \u0026\u0026 CONFIG_SITE=$BASEPREFIX/$HOST/share/config.site ./configure CC=gcc-8 CXX=g++-8 CFLAGS='-Wno-deprecated' CXXFLAGS='-Wno-deprecated' --disable-ccache --disable-maintainer-mode --disable-dependency-tracking --without-gui --enable-hardening --prefix=/   \u0026\u0026 echo \"Building with cores: $ecores\"   \u0026\u0026 make -j$ecores   \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"datadir=/opt/blockchain/data    \\n                                          \\ndbcache=256                               \\nmaxmempool=512                            \\nmaxmempoolxbridge=128                     \\n                                          \\nport=41412    # testnet: 41474            \\nrpcport=41414 # testnet: 41419            \\n                                          \\nserver=1                                  \\nlogtimestamps=1                           \\nlogips=1                                  \\n                                          \\nrpcallowip=127.0.0.1                      \\nrpctimeout=30                             \\nrpcclienttimeout=15\" \u003e /opt/blockchain/config/blocknetdx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/blockchain/"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/blockchain/config",
            "/opt/blockchain/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "41412",
            "41414",
            "41419",
            "41474"
          ]
        },
        {
          "CmdLine": [
            "blocknetdxd",
            "-daemon=0",
            "-server=0"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}