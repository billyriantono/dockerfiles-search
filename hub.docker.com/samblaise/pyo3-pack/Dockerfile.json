{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --no-install-recommends -y     ca-certificates curl file     build-essential     autoconf automake autotools-dev libtool xutils-dev \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SSL_VERSION",
              "Value": "1.0.2q"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://www.openssl.org/source/openssl-$SSL_VERSION.tar.gz -O \u0026\u0026     tar -xzf openssl-$SSL_VERSION.tar.gz \u0026\u0026     cd openssl-$SSL_VERSION \u0026\u0026 ./config \u0026\u0026 make depend \u0026\u0026 make install \u0026\u0026     cd .. \u0026\u0026 rm -rf openssl-$SSL_VERSION*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_LIB_DIR",
              "Value": "/usr/local/ssl/lib"
            },
            {
              "Key": "OPENSSL_INCLUDE_DIR",
              "Value": "/usr/local/ssl/include"
            },
            {
              "Key": "OPENSSL_STATIC",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf |     sh -s -- --default-toolchain nightly -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.cargo/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip3 install maturin"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}