MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: COMPOSER_HASH
    Name: arg
    Value: '"48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5"'
  - Key: NODE_VERSION
    Name: arg
    Value: '"10.9.0"'
  - Key: YARN_VERSION
    Name: arg
    Value: '"1.9.4"'
  - Key: USER_NAME
    Name: arg
    Value: '"dev"'
  - Key: USER_UID
    Name: arg
    Value: '"1000"'
  - Key: USER_GID
    Name: arg
    Value: '"1000"'
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: LOCALTIME
      Value: Europe/Warsaw
    Name: env
  - Env:
    - Key: PHP_VER
      Value: '"7.2"'
    Name: env
  - Env:
    - Key: PHP_ETC_DIR
      Value: '"/etc/php/${PHP_VER}"'
    Name: env
  - CmdLine:
    - apt-get -q update && apt-get -qyf --no-install-recommends install     apt-utils
      gpg-agent software-properties-common build-essential curl     && apt-get -y
      remove cmdtest     && add-apt-repository ppa:adshares/releases -y     && add-apt-repository
      -y ppa:ondrej/php     && curl -sL https://deb.nodesource.com/setup_8.x | bash
      -     && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     &&
      echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get -q update && apt-get -qyf --no-install-recommends install         nmap
      mtr curl wget vim less dnsutils bash-completion net-tools iputils-*         git
      bzip2 zip unzip tree mc gettext-base         openssl openssh-client openssh-server         gnupg2
      dirmngr connect-proxy iproute2         mysql-client         php${PHP_VER}-fpm
      php${PHP_VER}-mysql php${PHP_VER}-bcmath php${PHP_VER}-bz2 php${PHP_VER}-curl         php${PHP_VER}-gd
      php${PHP_VER}-intl php${PHP_VER}-json php${PHP_VER}-mbstring php${PHP_VER}-opcache         php${PHP_VER}-pgsql
      php${PHP_VER}-readline php${PHP_VER}-sqlite3 php${PHP_VER}-xml php${PHP_VER}-xmlrpc         php${PHP_VER}-xsl
      php${PHP_VER}-zip         php-xdebug         ads         nodejs yarn         cron     &&
      apt-get -qy autoremove && apt-get -qy clean all     && rm -rf /var/lib/apt/lists/*
      /var/cache/apk/* /usr/share/doc/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed "s|#PasswordAuthentication\s*yes|PasswordAuthentication no|g" /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed "s|session\s*required\s*pam_loginuid.so|session optional pam_loginuid.so|g"
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/$LOCALTIME /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "date.timezone = \"${LOCALTIME}\"" | tee --append ${PHP_ETC_DIR}/cli/conf.d/00-default.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "date.timezone = \"${LOCALTIME}\"" | tee --append ${PHP_ETC_DIR}/fpm/conf.d/00-default.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget https://getcomposer.org/installer --quiet --output-document=/tmp/composer-setup.php     &&         echo
      "  expected: $COMPOSER_HASH"     && php -r "echo ''calculated: ''. hash_file(''SHA384'',''/tmp/composer-setup.php'').PHP_EOL;"     &&
      php -r "exit(strcmp(hash_file(''SHA384'',''/tmp/composer-setup.php''),getenv(''COMPOSER_HASH'')));"     &&
      php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer     &&
      rm /tmp/composer-setup.php'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - skel
    - /etc/skel/
  - CmdLine:
    - chmod u+rwX,go-rwx -R /etc/skel/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - skel
    - /root/
  - CmdLine:
    - chmod u+rwX,go-rwx -R /root/
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod --non-unique --gid $USER_GID www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd     --uid $USER_UID     --no-user-group --gid $USER_GID     --create-home     --shell
      /bin/bash     $USER_NAME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin
    - /usr/local/bin/
  - Key: SYSTEM_USER_ID
    Name: arg
    Value: null
  - Key: SYSTEM_USER_NAME
    Name: arg
    Value: null
  - CmdLine:
    - if [ $SYSTEM_USER_ID -gt 1000 ];then     useradd     --uid $SYSTEM_USER_ID     --no-user-group     --create-home     $SYSTEM_USER_NAME     ;fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - overrides.conf
    - ${PHP_ETC_DIR}/fpm/pool.d/z-overrides.conf
  - CmdLine:
    - docker-php-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php-fpm.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - ln -s /usr/bin/ads /usr/local/bin/ads
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
