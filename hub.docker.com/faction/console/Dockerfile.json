{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:alpine",
      "SourceCode": "FROM node:alpine",
      "Platform": "",
      "From": {
        "Image": "node:alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache             nginx             git             bash             openssl \u0026\u0026     adduser -D -g 'www' www \u0026\u0026     rm -rf /var/www/* \u0026\u0026     chown -R www:www /var/lib/nginx \u0026\u0026     chown -R www:www /var/www \u0026\u0026     chown -R www:www /var/tmp/nginx/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker_build/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "npm install \u0026\u0026 npm run build \u0026\u0026     cp -R /app/dist/* /var/www/ \u0026\u0026     rm -rf /app/node_modules \u0026\u0026     rm -rf /app/dist \u0026\u0026     rm -rf /app/docker_build \u0026\u0026     rm -rf *.json \u0026\u0026     rm -rf *.js \u0026\u0026     rm -rf Dockerfile \u0026\u0026     rm -rf CODE_OF_CONDUCT.md \u0026\u0026     chmod +x ./wait-for-it.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}