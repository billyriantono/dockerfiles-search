{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "travix/gocd-agent-gcloud:18.12.0",
      "SourceCode": "FROM travix/gocd-agent-gcloud:18.12.0",
      "Platform": "",
      "From": {
        "Image": "travix/gocd-agent-gcloud:18.12.0"
      },
      "Commands": [
        {
          "Maintainer": "Travix",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LTTNG_UST_REGISTER_TIMEOUT",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_CLI_TELEMETRY_OPTOUT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         libc6         libcurl3         libgcc1         libgssapi-krb5-2         libicu52         liblttng-ust0         libssl1.0.0         libstdc++6         libunwind8         libuuid1         zlib1g         ca-certificates         curl         gettext         nuget     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=827530     \u0026\u0026 mkdir -p /opt/dotnet     \u0026\u0026 tar zxf dotnet.tar.gz -C /opt/dotnet     \u0026\u0026 rm -rf dotnet.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=835021     \u0026\u0026 mkdir -p /opt/dotnet     \u0026\u0026 tar zxf dotnet.tar.gz -C /opt/dotnet     \u0026\u0026 rm -rf dotnet.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?linkid=843453     \u0026\u0026 mkdir -p /opt/dotnet     \u0026\u0026 tar zxf dotnet.tar.gz -C /opt/dotnet     \u0026\u0026 rm -rf dotnet.tar.gz     \u0026\u0026 ln -s /opt/dotnet/dotnet /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir warmup     \u0026\u0026 cd warmup     \u0026\u0026 dotnet new     \u0026\u0026 cd ..     \u0026\u0026 rm -rf warmup     \u0026\u0026 rm -rf /tmp/NuGetScratch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF     \u0026\u0026 echo \"deb http://download.mono-project.com/repo/debian wheezy main\" | tee /etc/apt/sources.list.d/mono-xamarin.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         ca-certificates-mono         mono-complete     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}