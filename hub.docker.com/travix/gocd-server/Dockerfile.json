{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Travix",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION",
              "Value": "18.12.0"
            },
            {
              "Key": "GO_BUILD_VERSION",
              "Value": "18.12.0-8222"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache upgrade     \u0026\u0026 apk add --no-cache       openjdk8-jre-base       git       bash       curl       openssh-client       apache2-utils     \u0026\u0026 curl --retry 5 -fSL \"https://download.gocd.org/binaries/${GO_BUILD_VERSION}/generic/go-server-${GO_BUILD_VERSION}.zip\" -o /tmp/go-server.zip     \u0026\u0026 unzip /tmp/go-server.zip -d /     \u0026\u0026 rm /tmp/go-server.zip     \u0026\u0026 mv go-server-${GO_VERSION} /var/lib/go-server     \u0026\u0026 mkdir -p /var/lib/go-server/plugins/external /var/log/go-server /var/go     \u0026\u0026 sed -i -e \"s_root:/root_root:/var/go_\" /etc/passwd     \u0026\u0026 curl --retry 5 -fSL \"https://github.com/gocd-contrib/google-oauth-authorization-plugin/releases/download/2.0.0/google-oauth-authorization-plugin-2.0.0-7.jar\" -o /var/lib/go-server/plugins/external/google-oauth-authorization-plugin-2.0.0-7.jar     \u0026\u0026 curl --retry 5 -fSL \"https://github.com/gocd/kubernetes-elastic-agents/releases/download/v1.0.0/kubernetes-elastic-agent-1.0.0-94.jar\" -o /var/lib/go-server/plugins/external/kubernetes-elastic-agent-1.0.0-94.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logback-include.xml",
            "/logback-include.xml"
          ]
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.utf8\""
            },
            {
              "Key": "AGENT_KEY",
              "Value": "\"\""
            },
            {
              "Key": "GC_LOG",
              "Value": "\"\""
            },
            {
              "Key": "JVM_DEBUG",
              "Value": "\"\""
            },
            {
              "Key": "SERVER_MAX_MEM",
              "Value": "1024m"
            },
            {
              "Key": "SERVER_MAX_PERM_GEN",
              "Value": "256m"
            },
            {
              "Key": "SERVER_MEM",
              "Value": "512m"
            },
            {
              "Key": "SERVER_MIN_PERM_GEN",
              "Value": "128m"
            },
            {
              "Key": "GO_SERVER_PORT",
              "Value": "8153"
            },
            {
              "Key": "GO_SERVER_SSL_PORT",
              "Value": "8154"
            },
            {
              "Key": "GO_SERVER_SYSTEM_PROPERTIES",
              "Value": "\"-Dgo.config.repo.gc.periodic=y\""
            },
            {
              "Key": "USER_AUTH",
              "Value": "\"\""
            },
            {
              "Key": "GO_CONFIG_DIR",
              "Value": "\"/etc/go\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8153",
            "8154"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod 500 /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}