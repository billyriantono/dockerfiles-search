MetaArgs: null
Stages:
- As: builder
  BaseName: node:8-alpine
  Commands:
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.4
    Name: env
  - Key: version
    Name: arg
    Value: next
  - Name: workdir
    Path: /home/theia
  - Chown: ""
    Name: add
    SourcesAndDest:
    - $version.package.json
    - ./package.json
  - CmdLine:
    - apk add --no-cache wget bash ca-certificates make gcc g++ python go     && export
      GOROOT_BOOTSTRAP="$(go env GOROOT)" GOOS="$(go env GOOS)" GOARCH="$(go env GOARCH)"       GOHOSTOS="$(go
      env GOHOSTOS)" GOHOSTARCH="$(go env GOHOSTARCH)"     && export GO386='387'     &&
      wget -O go.tgz "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz"     && tar
      -C /usr/local -xzf go.tgz     && rm go.tgz     && cd /usr/local/go/src     &&
      for p in /go-alpine-patches/*.patch         ; do             [ -f "$p" ] ||
      continue;             patch -p2 -i "$p";         done     && ./make.bash     &&
      rm -rf /go-alpine-patches     && cd /home/theia     && yarn     && yarn theia
      build     && rm -rf ./node_modules/electron     && yarn cache clean
    Name: run
    PrependShell: true
  From:
    Image: node:8-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM node:8-alpine as builder
- BaseName: node:8-alpine
  Commands:
  - Name: workdir
    Path: /home/theia
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /home/theia
    - /home/theia
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/go
    - /usr/local/go
  - CmdLine:
    - apk add --no-cache git openssh-client ca-certificates libstdc++ bash     &&
      mkdir -p /home/project/go     && export PATH="/usr/local/go/bin:$PATH"     &&
      export GOPATH="/home/project/go"     && export PATH=$GOPATH/bin:$PATH     &&
      go version     && mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"     &&
      go get -u github.com/ramya-rao-a/go-outline     && go get -u github.com/acroca/go-symbols     &&
      go get -u github.com/nsf/gocode     && go get -u github.com/rogpeppe/godef     &&
      go get -u golang.org/x/tools/cmd/godoc     && go get -u github.com/zmb3/gogetdoc     &&
      go get -u github.com/golang/lint/golint     && go get -u github.com/fatih/gomodifytags     &&
      go get -u github.com/uudashr/gopkgs/cmd/gopkgs     && go get -u golang.org/x/tools/cmd/gorename     &&
      go get -u sourcegraph.com/sqs/goreturns     && go get -u github.com/cweill/gotests/...     &&
      go get -u golang.org/x/tools/cmd/guru     && go get -u github.com/josharian/impl     &&
      go get -u github.com/haya14busa/goplay/cmd/goplay     && go get -u github.com/golang/dep/cmd/dep     &&
      echo fs.inotify.max_user_watches=524288 | tee -a /etc/sysctl.conf     && printf
      "[user]\n    name = Zate\n    email = zate75@gmail.com\n" > /root/.gitconfig
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: USE_LOCAL_GIT
      Value: "true"
    Name: env
  - Env:
    - Key: PATH
      Value: '"/usr/local/go/bin:$PATH"'
    Name: env
  - Env:
    - Key: GOPATH
      Value: '"/home/project/go"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"$GOPATH/bin:$PATH"'
    Name: env
  - Env:
    - Key: TDIR
      Value: '"/home/theia"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: node:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:8-alpine
