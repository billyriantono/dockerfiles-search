{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jlesage/baseimage:alpine-3.8-v2.4.2",
      "SourceCode": "FROM jlesage/baseimage:alpine-3.8-v2.4.2",
      "Platform": "",
      "From": {
        "Image": "jlesage/baseimage:alpine-3.8-v2.4.2"
      },
      "Commands": [
        {
          "Key": "NGINX_PROXY_MANAGER_VERSION",
          "Name": "arg",
          "Value": "2.0.13"
        },
        {
          "Key": "NGINX_PROXY_MANAGER_URL",
          "Name": "arg",
          "Value": "https://github.com/jc21/nginx-proxy-manager/archive/${NGINX_PROXY_MANAGER_VERSION}.tar.gz"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "add-pkg         nodejs         nginx         nginx-mod-stream         mariadb         mariadb-client         mariadb-server-utils         certbot         openssl         apache2-utils         \u0026\u0026     rm -r         /var/lib/mysql         \u0026\u0026     rm -r         /var/log/nginx         /var/lib/nginx         /var/tmp/nginx         /etc/nginx         /etc/init.d/nginx         /etc/logrotate.d/nginx         /var/www \u0026\u0026     ln -s /tmp/nginx /var/tmp/nginx \u0026\u0026     mkdir -p /var/lib/nginx/logs \u0026\u0026     ln -sf /config/log/nginx/error.log /var/lib/nginx/logs/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-pkg --virtual build-dependencies         build-base         curl         patch         yarn         git         python         npm         bash         \u0026\u0026     echo \"Installing node-prune...\" \u0026\u0026     curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /tmp/bin \u0026\u0026     echo \"Downloading Nginx Proxy Manager package...\" \u0026\u0026     mkdir nginx-proxy-manager \u0026\u0026     curl -# -L ${NGINX_PROXY_MANAGER_URL} | tar xz --strip 1 -C nginx-proxy-manager \u0026\u0026     echo \"Building Nginx Proxy Manager...\" \u0026\u0026     cp -r nginx-proxy-manager /app \u0026\u0026     cd /app \u0026\u0026     yarn install \u0026\u0026     npm --cache /tmp/.npm run-script build \u0026\u0026     rm -rf node_modules \u0026\u0026     yarn install --prod \u0026\u0026     /tmp/bin/node-prune \u0026\u0026     cd /tmp \u0026\u0026     echo \"Installing Nginx Proxy Manager...\" \u0026\u0026     mkdir -p /opt/nginx-proxy-manager/src \u0026\u0026     cp -r /app/dist /opt/nginx-proxy-manager/ \u0026\u0026     cp -r /app/node_modules /opt/nginx-proxy-manager/ \u0026\u0026     cp -r /app/src/backend /opt/nginx-proxy-manager/src/ \u0026\u0026     cp -r /app/package.json /opt/nginx-proxy-manager/ \u0026\u0026     cp -r /app/knexfile.js /opt/nginx-proxy-manager/ \u0026\u0026     cp -r nginx-proxy-manager/rootfs/etc/nginx /etc/ \u0026\u0026     cp -r nginx-proxy-manager/rootfs/var/www /var/ \u0026\u0026     sed-patch 's|81|8181|' /opt/nginx-proxy-manager/src/backend/index.js \u0026\u0026     sed-patch 's|81|8181|' /etc/nginx/conf.d/default.conf \u0026\u0026     sed-patch 's|-g \"error_log off;\"||' /opt/nginx-proxy-manager/src/backend/internal/nginx.js \u0026\u0026     sed-patch '/daemon off;/a load_module /usr/lib/nginx/modules/ngx_stream_module.so;' /etc/nginx/nginx.conf \u0026\u0026     ln -s /config /data \u0026\u0026     mv /etc/nginx/conf.d/include/ip_ranges.conf /defaults/ \u0026\u0026     ln -sf /config/nginx/ip_ranges.conf /etc/nginx/conf.d/include/ip_ranges.conf \u0026\u0026     rm /etc/nginx/conf.d/include/resolvers.conf \u0026\u0026     ln -sf /config/nginx/resolvers.conf /etc/nginx/conf.d/include/resolvers.conf \u0026\u0026     ln -s /config/nginx/cache /var/lib/nginx/cache \u0026\u0026     mkdir /opt/nginx-proxy-manager/config \u0026\u0026     ln -s /config/production.json /opt/nginx-proxy-manager/config/production.json \u0026\u0026     ln -s /config/letsencrypt /etc/letsencrypt \u0026\u0026     del-pkg build-dependencies \u0026\u0026     rm -r         /root/.node-gyp         /app         /usr/lib/node_modules         /opt/nginx-proxy-manager/node_modules/bcrypt/build         \u0026\u0026     rm -rf /tmp/* /tmp/.[!.]*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "APP_NAME",
              "Value": "\"Nginx Proxy Manager\""
            },
            {
              "Key": "KEEP_APP_RUNNING",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "8181"
          ]
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.name",
              "Value": "\"nginx-proxy-manager\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Docker container for Nginx Proxy Manager\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "\"unknown\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/jlesage/docker-nginx-proxy-manager\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}