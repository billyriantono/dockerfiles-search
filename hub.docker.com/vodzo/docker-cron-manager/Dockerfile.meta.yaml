MetaArgs: null
Stages:
- As: builder
  BaseName: node:8
  Commands:
  - Name: workdir
    Path: /home/node/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./web/
    - /home/node/app
  - Env:
    - Key: PUBLIC_URL
      Value: /app
    Name: env
  - Env:
    - Key: REACT_APP_GRAPHQL_ENDPOINT
      Value: /api/graphql
    Name: env
  - CmdLine:
    - yarn && yarn build
    Name: run
    PrependShell: true
  From:
    Image: node:8
  Name: builder
  Platform: ""
  SourceCode: FROM node:8 as builder
- BaseName: php:7.2-fpm-alpine
  Commands:
  - CmdLine:
    - apk add imap-dev openldap-dev krb5-dev zlib-dev wget git fcgi libpng-dev sudo
      ca-certificates     && docker-php-ext-configure imap --with-kerberos --with-imap-ssl     &&
      docker-php-ext-install imap zip bcmath opcache gd sockets     && apk add autoconf         g++         make     &&
      pecl install apcu && docker-php-ext-enable apcu     && apk del autoconf g++
      wget make     && rm -rf /tmp/* /var/cache/apk/*     && cd /usr/bin/ && wget
      -O composer https://getcomposer.org/download/1.6.3/composer.phar && chmod +x
      /usr/bin/composer     && sed -i "s/error_log.*/error_log = \/var\/log\/php7\.2\-fpm\.error.log/g"
      /usr/local/etc/php-fpm.d/docker.conf     && sed -i "s/access.log.*/access.log
      = \/var\/log\/php7\.2\-fpm\.access.log/g" /usr/local/etc/php-fpm.d/docker.conf     &&
      ln -sf /proc/1/fd/2 /var/log/php7.2-fpm.error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/* && chown www-data.www-data -R /var/www
    Name: run
    PrependShell: true
  - Name: user
    User: www-data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/php/
    - /usr/local/etc/php/conf.d/
  - Chown: www-data:www-data
    From: ""
    Name: copy
    SourcesAndDest:
    - ./api/
    - /var/www
  - CmdLine:
    - cd /var/www && composer install && composer clearcache     && bin/console doctrine:schema:create     &&
      cat /dev/null > /var/www/.env     && mkdir /var/www/var/data     && mv /var/www/var/data.db
      /var/www/var/data/db.db
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apk add nginx     && mkdir /run/nginx
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx/nginx.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - apk add supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/supervisor.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisor/webserver.conf
    - /etc/supervisor.d/webserver.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisor/webserver/php.conf
    - /etc/supervisor.d/webserver:php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisor/webserver/nginx.conf
    - /etc/supervisor.d/webserver:nginx.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisor/webserver/crond.conf
    - /etc/supervisor.d/webserver:crond.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisor/supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - ln -sf /proc/1/fd/1 /var/log/jobby.log
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "*       *       *       *       *       /usr/local/bin/php -f /var/www/bin/console
      cron:run > /var/log/jobby.log 2>&1" | crontab -
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /home/node/app/build/
    - /var/www/public/app/
  - Env:
    - Key: APP_ENV
      Value: prod
    Name: env
  - Env:
    - Key: DATABASE_URL
      Value: sqlite:///%kernel.project_dir%/var/data/db.db
    Name: env
  - Env:
    - Key: CORS_ALLOW_ORIGIN
      Value: ^https?://localhost(:[0-9]+)?$
    Name: env
  - Env:
    - Key: LOG_ROTATE_SIZE
      Value: 12MB
    Name: env
  - Env:
    - Key: DATE_TIMEZONE
      Value: UTC
    Name: env
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - supervisord
    - -n
    - -c
    - /etc/supervisord.conf
    Name: entrypoint
    PrependShell: false
  - Name: volume
    Volumes:
    - /var/www/var/data
  - Name: expose
    Ports:
    - "80"
  - Health:
      Interval: 10000000000
      Test:
      - CMD-SHELL
      - SCRIPT_FILENAME=/var/www/public/index.php     DOCUMENT_ROOT=/var/www/public     REQUEST_URI=/api/health     REQUEST_METHOD=GET     cgi-fcgi
        -bind -connect 127.0.0.1:9000 || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: php:7.2-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm-alpine
