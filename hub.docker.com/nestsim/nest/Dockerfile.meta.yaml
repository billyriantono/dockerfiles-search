MetaArgs: null
Stages:
- As: buildermaster
  BaseName: buildpack-deps:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"s.graber@fz-juelich.de"'
    Name: label
  - Key: WITH_MPI
    Name: arg
    Value: "ON"
  - Key: WITH_OMP
    Name: arg
    Value: "ON"
  - Key: WITH_GSL
    Name: arg
    Value: "ON"
  - Key: WITH_LIBNEUROSIM
    Name: arg
    Value: "OFF"
  - Env:
    - Key: TERM
      Value: xterm
    - Key: TZ
      Value: Europe/Berlin
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends     build-essential
      libtool automake autotools-dev libreadline7 libreadline-dev freeglut3-dev     git
      \    gosu     cmake     cython3     jq     libboost-filesystem-dev     libboost-regex-dev
      \    libboost-wave-dev     libboost-program-options-dev \tlibboost-test-dev
      \tlibgomp1     libgsl-dev     libltdl7     libltdl-dev     libmusic1v5     libopenmpi-dev
      \    libomp-dev     libpcre3     libpcre3-dev     llvm-3.9-dev     openmpi-bin
      \    pep8     python3.6-dev     python3-ipython     python3-jupyter-core     python3-matplotlib
      \    python3-mpi4py     python3-nose     python3-numpy     python3-pandas     python3-path
      \    python3-scipy     python3-setuptools     python3-statsmodels     python3-tk
      \    python-dev     vera++     wget  &&     apt-get autoremove -y &&     rm
      -rf /var/lib/apt/lists/* &&     update-alternatives --install /usr/bin/python
      python /usr/bin/python3 10"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://github.com/INCF/MUSIC/archive/master.tar.gz && \ttar -zxf master.tar.gz
      && \tmkdir music-build music-install && \tcd MUSIC-master && \tsh ./autogen.sh
      && \tcd ../music-build && \t../MUSIC-master/configure --prefix=/opt/music-install
      && \tmake && \tmake install && \tcd / &&     rm master.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/nest/nest-simulator.git &&   cd nest-simulator
      &&   git checkout nest-3 &&   cd .. &&   mkdir nest-build &&   ls -l &&   cd
      \ nest-build &&   cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/nest/ \t\t-Dwith-ltdl=ON
      \t    -Dwith-gsl=$WITH_GSL \t    -Dwith-readline=ON         -Dwith-python=3
      \        -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so \t    -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m
      \        -Dwith-mpi=$WITH_MPI         -Dwith-openmp=$WITH_OMP         -Dwith-music=/opt/music-install
      \        ../nest-simulator &&   make &&   make install"
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:bionic
  Name: buildermaster
  Platform: ""
  SourceCode: FROM buildpack-deps:bionic as buildermaster
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"s.graber@fz-juelich.de"'
    Name: label
  - Env:
    - Key: TERM
      Value: xterm
    - Key: TZ
      Value: Europe/Berlin
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         gosu         jupyter-notebook         libgomp1         libgsl-dev          libltdl7         libopenmpi-dev         libomp-dev         libpython3.6         nano         openmpi-bin         openssh-client         python3-matplotlib         python3-mpi4py         python3-numpy         python3-scipy         python3-pandas         python3-sympy         python3-tk
      &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/* &&     ln -s
      /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - Chown: ""
    From: buildermaster
    Name: copy
    SourcesAndDest:
    - /opt/nest
    - /opt/nest
  - Chown: ""
    From: buildermaster
    Name: copy
    SourcesAndDest:
    - /opt/music-install
    - /opt/music-install
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
