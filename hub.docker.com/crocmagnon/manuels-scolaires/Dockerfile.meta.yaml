MetaArgs: null
Stages:
- BaseName: python:3.6-alpine
  Commands:
  - CmdLine:
    - apk add --update postgresql-libs &&     apk add --udpate --virtual .build-deps
      gcc musl-dev postgresql-dev tzdata &&     cp /usr/share/zoneinfo/Europe/Paris
      /etc/localtime &&     echo "Europe/Paris" >  /etc/timezone
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - "8000"
  - Name: volume
    Volumes:
    - /app/staticfiles
  - CmdLine:
    - pip3 install pipenv
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Pipfile
    - Pipfile.lock
    - ./
  - CmdLine:
    - pipenv install --deploy
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del .build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - sh
    - bash/run-prod.sh
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 10000000000
      Test:
      - CMD
      - pipenv
      - run
      - python
      - healthcheck.py
      Timeout: 10000000000
    Name: healthcheck
  - Env:
    - Key: DATABASE_URL
      Value: postgres://postgresql:postgresql@db:5432/manuels
    Name: env
  - Env:
    - Key: SECRET_KEY
      Value: ''''''
    Name: env
  - Env:
    - Key: MAILGUN_ACCESS_KEY
      Value: ''''''
    Name: env
  - Env:
    - Key: MAILGUN_SERVER_NAME
      Value: ''''''
    Name: env
  - Env:
    - Key: DJANGO_ENV
      Value: ''''''
    Name: env
  - Env:
    - Key: ADMIN_EMAIL
      Value: ''''''
    Name: env
  - Env:
    - Key: SERVER_EMAIL
      Value: ''''''
    Name: env
  - Env:
    - Key: HOST
      Value: ''''''
    Name: env
  - Env:
    - Key: REPLY_TO
      Value: ''''''
    Name: env
  - Env:
    - Key: AUTHORIZED_EMAILS
      Value: ''''''
    Name: env
  - Env:
    - Key: LIBRARIAN_EMAILS
      Value: ''''''
    Name: env
  From:
    Image: python:3.6-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-alpine
