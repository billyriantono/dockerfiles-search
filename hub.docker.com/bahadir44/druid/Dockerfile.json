{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GITHUB_OWNER",
              "Value": "druid-io"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUID_VERSION",
              "Value": "0.12.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZOOKEEPER_VERSION",
              "Value": "3.4.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update       \u0026\u0026 apt-get install -y software-properties-common       \u0026\u0026 apt-add-repository -y ppa:webupd8team/java       \u0026\u0026 apt-get purge --auto-remove -y software-properties-common       \u0026\u0026 apt-get update       \u0026\u0026 echo oracle-java-8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections       \u0026\u0026 apt-get install -y oracle-java8-installer oracle-java8-set-default                             mysql-server                             supervisor                             git       \u0026\u0026 apt-get clean       \u0026\u0026 rm -rf /var/cache/oracle-jdk8-installer       \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - http://archive.apache.org/dist/maven/maven-3/3.2.5/binaries/apache-maven-3.2.5-bin.tar.gz | tar -xzf - -C /usr/local       \u0026\u0026 ln -s /usr/local/apache-maven-3.2.5 /usr/local/apache-maven       \u0026\u0026 ln -s /usr/local/apache-maven/bin/mvn /usr/local/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - http://www.us.apache.org/dist/zookeeper/zookeeper-$ZOOKEEPER_VERSION/zookeeper-$ZOOKEEPER_VERSION.tar.gz | tar -xzf - -C /usr/local       \u0026\u0026 cp /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo_sample.cfg /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo.cfg       \u0026\u0026 ln -s /usr/local/zookeeper-$ZOOKEEPER_VERSION /usr/local/zookeeper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --system --group --no-create-home druid       \u0026\u0026 mkdir -p /var/lib/druid       \u0026\u0026 chown druid:druid /var/lib/druid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/druid/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://api.github.com/repos/$GITHUB_OWNER/druid/git/refs/heads/$DRUID_VERSION",
            "druid-version.json"
          ]
        },
        {
          "CmdLine": [
            "git clone -q --branch $DRUID_VERSION --depth 1 https://github.com/$GITHUB_OWNER/druid.git /tmp/druid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/druid"
        },
        {
          "CmdLine": [
            "mvn -U -B org.codehaus.mojo:versions-maven-plugin:2.1:set -DgenerateBackupPoms=false -DnewVersion=$DRUID_VERSION   \u0026\u0026 mvn -U -B install -DskipTests=true -Dmaven.javadoc.skip=true   \u0026\u0026 cp services/target/druid-services-$DRUID_VERSION-selfcontained.jar /usr/local/druid/lib   \u0026\u0026 cp -r distribution/target/extensions /usr/local/druid/   \u0026\u0026 cp -r distribution/target/hadoop-dependencies /usr/local/druid/   \u0026\u0026 apt-get purge --auto-remove -y git   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /tmp/*             /var/tmp/*             /usr/local/apache-maven-3.2.5             /usr/local/apache-maven             /root/.m2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sample-data.sql",
            "sample-data.sql"
          ]
        },
        {
          "CmdLine": [
            "find /var/lib/mysql -type f -exec touch {} \\;       \u0026\u0026 /etc/init.d/mysql start       \u0026\u0026 mysql -u root -e \"GRANT ALL ON druid.* TO 'druid'@'localhost' IDENTIFIED BY 'diurd'; CREATE database druid CHARACTER SET utf8;\"       \u0026\u0026 java -cp /usr/local/druid/lib/druid-services-*-selfcontained.jar           -Ddruid.extensions.directory=/usr/local/druid/extensions           -Ddruid.extensions.loadList=[\\\"mysql-metadata-storage\\\"]           -Ddruid.metadata.storage.type=mysql           io.druid.cli.Main tools metadata-init               --connectURI=\"jdbc:mysql://localhost:3306/druid\"               --user=druid --password=diurd       \u0026\u0026 mysql -u root druid \u003c sample-data.sql       \u0026\u0026 /etc/init.d/mysql stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8082"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8083"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8090"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2181",
            "2888",
            "3888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/druid"
        },
        {
          "CmdLine": [
            "export HOSTIP=\"$(resolveip -s $HOSTNAME)\" \u0026\u0026 find /var/lib/mysql -type f -exec touch {} \\; \u0026\u0026 exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}