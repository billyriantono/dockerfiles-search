MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.11-alpine
  Commands:
  - CmdLine:
    - 'mkdir /user &&     echo ''nobody:x:65534:65534:nobody:/:'' > /user/passwd &&     echo
      ''nobody:x:65534:'' > /user/group &&     mkdir /user/db && chown nobody: /user/db'
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache ca-certificates git
    Name: run
    PrependShell: true
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Name: workdir
    Path: /src
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - ./
  - CmdLine:
    - sh /src/build/docker.sh
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11-alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.11-alpine AS build
- As: final
  BaseName: alpine
  Commands:
  - CmdLine:
    - mkdir /db && chmod 777 /db
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /user/group
    - /user/passwd
    - /etc/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs/ca-certificates.crt
    - /etc/ssl/certs/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /src/templates
    - /templates
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /server
    - /server
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /src/config/i18n-indexer.example.yml
    - /etc/i18n-indexer/i18n-indexer.yml
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /user/db
    - /db
  - Name: expose
    Ports:
    - "8000"
  - Name: user
    User: nobody:nobody
  - Name: volume
    Volumes:
    - '"/db"'
  - CmdLine:
    - /server
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: final
  Platform: ""
  SourceCode: FROM alpine AS final
