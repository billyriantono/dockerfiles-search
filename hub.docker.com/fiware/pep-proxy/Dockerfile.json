{
  "MetaArgs": [
    {
      "Key": "NODE_VERSION",
      "DefaultValue": "8.12.0-slim",
      "ProvidedValue": null,
      "Value": "8.12.0-slim"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:${NODE_VERSION}",
      "SourceCode": "FROM node:${NODE_VERSION}",
      "Platform": "",
      "From": {
        "Image": "node:${NODE_VERSION}"
      },
      "Commands": [
        {
          "Key": "GITHUB_ACCOUNT",
          "Name": "arg",
          "Value": "ging"
        },
        {
          "Key": "GITHUB_REPOSITORY",
          "Name": "arg",
          "Value": "fiware-pep-proxy"
        },
        {
          "Key": "DOWNLOAD_TYPE",
          "Name": "arg",
          "Value": "latest"
        },
        {
          "Maintainer": "FIWARE Wilma PEP Proxy Team. DIT-UPM",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Env": [
            {
              "Key": "GITHUB_ACCOUNT",
              "Value": "${GITHUB_ACCOUNT}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITHUB_REPOSITORY",
              "Value": "${GITHUB_REPOSITORY}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "if [ ${DOWNLOAD_TYPE} = \"latest\" ] ; then RELEASE=\"master\"; else RELEASE=$(curl -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4); fi \u0026\u0026     if [ ${DOWNLOAD_TYPE} = \"latest\" ] ; then echo \"INFO: Building Latest Development\"; else echo \"INFO: Building Release: ${RELEASE}\"; fi \u0026\u0026   \tapt-get update \u0026\u0026   \tapt-get install -y  --no-install-recommends unzip \u0026\u0026   \tcurl https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip -L -s -o source.zip  \u0026\u0026   \tunzip source.zip \u0026\u0026 \trm source.zip \u0026\u0026 \tmv \"${GITHUB_REPOSITORY}\"-\"${RELEASE}\" /opt/fiware-pep-proxy \u0026\u0026 \trm -rf \"${GITHUB_REPOSITORY}\"-\"${RELEASE}\" \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get remove -y unzip \u0026\u0026     apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.js.template",
            "/opt/fiware-pep-proxy/config.js"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/fiware-pep-proxy"
        },
        {
          "CmdLine": [
            "apt-get install -y  --no-install-recommends make gcc g++ python \u0026\u0026 \tnpm install --production --silent \u0026\u0026 \trm -rf /root/.npm/cache/* \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get remove -y make gcc g++ python  \u0026\u0026 \tapt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "${PEP_PROXY_PORT:-1027}"
          ]
        },
        {
          "CmdLine": [
            "npm",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}