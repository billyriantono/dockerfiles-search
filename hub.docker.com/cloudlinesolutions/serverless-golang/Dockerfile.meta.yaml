MetaArgs: null
Stages:
- BaseName: buildpack-deps:stretch-scm
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"support@cloudline-solutions.com"'
    Name: label
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc
      \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: '"1.12.7"'
    - Key: GOOS
      Value: linux
    - Key: GOARCH
      Value: amd64
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: '"https://dl.google.com/go/go${GOLANG_VERSION}.${GOOS}-${GOARCH}.tar.gz"'
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: '"66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9"'
    Name: env
  - CmdLine:
    - wget -q -O golang.tar.gz $GOLANG_DOWNLOAD_URL   && echo "$GOLANG_DOWNLOAD_SHA256
      golang.tar.gz" | sha256sum -c -   && tar -C /usr/local -xzf golang.tar.gz &&
      rm golang.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: '"/go"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${GOPATH}/bin:/usr/local/go/bin:${PATH}"'
    - Key: PACKAGE_PATH
      Value: '"${GOPATH}/src/packages"'
    - Key: GOBIN
      Value: '"${GOPATH}/bin"'
    Name: env
  - CmdLine:
    - mkdir -pv "${GOPATH}/src" "${GOPATH}/bin" && chmod -R 777 "${GOPATH}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH/src
  - CmdLine:
    - true && apt-get update     && apt-get install -y --no-install-recommends software-properties-common
      apt-utils=1.4.9     && curl -sL https://deb.nodesource.com/setup_8.x | bash
      -     && apt-get update     && apt-get install -y --no-install-recommends     nodejs    zip     unzip     python-pip     &&
      apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: '"0.12.5"'
    Name: env
  - CmdLine:
    - wget -qO /tmp/terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     unzip -d /bin /tmp/terraform.zip && chmod 755 /bin/terraform && rm -rf
      /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: SERVERLESS_VERSION
      Value: '"1.48.3"'
    - Key: AWS_CLI_VERSION
      Value: '"1.16.204"'
    Name: env
  - CmdLine:
    - true && pip install --upgrade setuptools     && pip --no-cache-dir install awscli==${AWS_CLI_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - true && npm install -g npm@6.2.0     && npm install -g serverless@$SERVERLESS_VERSION     &&
      npm prune
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: true
  From:
    Image: buildpack-deps:stretch-scm
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:stretch-scm
