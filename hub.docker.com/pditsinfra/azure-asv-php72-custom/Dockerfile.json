{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.15-apache",
      "SourceCode": "FROM php:7.2.15-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2.15-apache"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Azure App Services Container Custom Images by pir0w\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.2.15"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache2.conf",
            "/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init_container.sh",
            "/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hostingstart.html",
            "/home/site/wwwroot/hostingstart.html"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite expires include deflate headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         libpng-dev         libjpeg-dev         libpq-dev         libmcrypt-dev         libldap2-dev         libldb-dev         libicu-dev         libgmp-dev         libmagickwand-dev         libc-client-dev         libtidy-dev         libkrb5-dev         libxslt-dev         unixodbc-dev         openssh-server         vim         curl         wget         tcptraceroute     \u0026\u0026 chmod 755 /bin/init_container.sh     \u0026\u0026 echo \"root:Docker!\" | chpasswd     \u0026\u0026 echo \"cd /home\" \u003e\u003e /etc/bash.bashrc     \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so     \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so     \u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 pecl install imagick-beta     \u0026\u0026 pecl install mcrypt-1.0.1     \u0026\u0026 pecl install sqlsrv pdo_sqlsrv     \u0026\u0026 echo extension=pdo_sqlsrv.so \u003e\u003e `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\s*||\"`/30-pdo_sqlsrv.ini     \u0026\u0026 echo extension=sqlsrv.so \u003e\u003e `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\s*||\"`/20-sqlsrv.ini     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr     \u0026\u0026 docker-php-ext-install gd         mysqli         opcache         pdo         pdo_mysql         pdo_pgsql         pgsql         ldap         intl         gmp         zip         bcmath         mbstring         pcntl         calendar         exif         gettext         imap         tidy         shmop         soap         sockets         sysvmsg         sysvsem         sysvshm         pdo_odbc         wddx         xmlrpc         xsl     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 docker-php-ext-enable mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install unixodbc-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 docker-php-source extract     \u0026\u0026 cd /usr/src/php/ext/odbc     \u0026\u0026 phpize     \u0026\u0026 sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *\u0026\u0026 *PHP_.*=yes *$@#\u0026@g' configure     \u0026\u0026 ./configure --with-unixODBC=shared,/usr     \u0026\u0026 docker-php-ext-install odbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /var/log/apache2/*    \u0026\u0026 rmdir /var/lock/apache2    \u0026\u0026 rmdir /var/run/apache2    \u0026\u0026 rmdir /var/log/apache2    \u0026\u0026 chmod 777 /var/log    \u0026\u0026 chmod 777 /var/run    \u0026\u0026 chmod 777 /var/lock    \u0026\u0026 chmod 777 /bin/init_container.sh    \u0026\u0026 cp /bin/apache2.conf /etc/apache2/apache2.conf    \u0026\u0026 rm -rf /var/www/html    \u0026\u0026 rm -rf /var/log/apache2    \u0026\u0026 mkdir -p /home/LogFiles    \u0026\u0026 ln -s /home/site/wwwroot /var/www/html    \u0026\u0026 ln -s /home/LogFiles /var/log/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Tokyo"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{                 echo 'opcache.memory_consumption=128';                 echo 'opcache.interned_strings_buffer=8';                 echo 'opcache.max_accelerated_files=4000';                 echo 'opcache.revalidate_freq=60';                 echo 'opcache.fast_shutdown=1';                 echo 'opcache.enable_cli=1';     } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{                 echo 'error_log=/var/log/apache2/php-error.log';                 echo 'display_errors=Off';                 echo 'log_errors=On';                 echo 'display_startup_errors=Off';                 echo 'date.timezone=\"Asia/Tokyo\"';                 echo 'expose_php = off';                 echo 'default_charset = \"UTF-8\"';                 echo 'mbstring.language = \"Japanese\"';                 echo 'mbstring.encoding_translation = off';                 echo 'mbstring.detect_order = auto';                 echo 'mbstring.substitute_character = none';                 echo 'session.cookie_httponly = 1';                 echo 'session.use_cookies = 1';                 echo 'session.use_only_cookies = 1';                 echo 'zlib.output_compression = On';                 echo 'session.cookie_secure = 1';     } \u003e /usr/local/etc/php/conf.d/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_PORT",
              "Value": "2222"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "8080"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/startup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "generateStartupCommand.sh",
            "/opt/startup/generateStartupCommand.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /opt/startup/generateStartupCommand.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_ROLE_INSTANCE_ID",
              "Value": "localRoleInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_INSTANCE_ID",
              "Value": "localInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/home/site/wwwroot"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "/bin/init_container.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}