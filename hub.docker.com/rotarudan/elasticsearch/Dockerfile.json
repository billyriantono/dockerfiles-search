{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_MAJOR",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_VERSION",
              "Value": "1.7.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_REPO_BASE",
              "Value": "http://packages.elasticsearch.org/elasticsearch/1.7/debian"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb $ELASTICSEARCH_REPO_BASE stable main\" \u003e /etc/apt/sources.list.d/elasticsearch.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get clean \u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends elasticsearch=$ELASTICSEARCH_VERSION \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/elasticsearch/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/elasticsearch"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 for path in \t\t./data \t\t./logs \t\t./config \t\t./config/scripts \t; do \t\tmkdir -p \"$path\"; \t\tchown -R elasticsearch:elasticsearch \"$path\"; \tdone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "./config"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/elasticsearch/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9217",
            "9317"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "elasticsearch"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}