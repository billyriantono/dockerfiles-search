MetaArgs: null
Stages:
- BaseName: tensorflow/tensorflow:0.10.0
  Commands:
  - CmdLine:
    - 'cd /tmp &&     curl -L -O -H "Cookie: oraclelicense=accept-securebackup-cookie"
      -k "http://download.oracle.com/otn-pub/java/jdk/8u60-b27/jdk-8u60-linux-x64.tar.gz"
      &&     tar xf jdk-8u60-linux-x64.tar.gz -C /opt && rm -f jdk-8u60-linux-x64.tar.gz
      &&     ln -s /opt/jdk* /opt/jdk'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk
    Name: env
  - CmdLine:
    - cd /tmp && curl -L -O -k "http://www.eu.apache.org/dist/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz"
      &&     tar -xf hadoop-2.7.3.tar.gz -C /opt && rm -f hadoop-2.7.3.tar.gz &&     ln
      -s /opt/hadoop* /opt/hadoop
    Name: run
    PrependShell: true
  - Env:
    - Key: HADOOP_HOME
      Value: /opt/hadoop
    Name: env
  - CmdLine:
    - cd /tmp && curl -L -O -k "http://d3kbcqa49mib13.cloudfront.net/spark-2.0.0-bin-hadoop2.7.tgz"
      &&      tar -xf spark-2.0.0-bin-hadoop2.7.tgz -C /opt && rm -f spark-2.0.0-bin-hadoop2.7.tgz
      &&      ln -s /opt/spark* /opt/spark
    Name: run
    PrependShell: true
  - Env:
    - Key: SPARK_HOME
      Value: /opt/spark
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin:${HADOOP_HOME}/bin:${SPARK_HOME}/bin
    Name: env
  - Name: volume
    Volumes:
    - /hdfs
    - /var/logs
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hadoop-conf/*
    - /opt/hadoop/etc/hadoop/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - spark-conf/*
    - /opt/spark/conf/
  - CmdLine:
    - curl -o /etc/apt/sources.list http://mirrors.163.com/.help/sources.list.trusty
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y openssh-client openssh-server &&     ssh-keygen
      -t rsa -N "" -f ~/.ssh/id_rsa &&     cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
      &&     chmod 0600 ~/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ssh_config
    - /root/.ssh/config
  - CmdLine:
    - chmod 600 /root/.ssh/config && chown root:root /root/.ssh/config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y dnsmasq && apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_HOST
      Value: unix:///var/run/docker.sock
    Name: env
  - CmdLine:
    - cd /tmp && curl -L -O -k "https://github.com/jwilder/docker-gen/releases/download/0.7.3/docker-gen-linux-amd64-0.7.3.tar.gz"
      &&     tar xf docker-gen-linux-amd64-0.7.3.tar.gz -C /usr/local/bin && rm -f
      docker-gen-linux-amd64-0.7.3.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc-hosts.tmpl
    - /etc/etc-hosts.tmpl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shell/*
    - /shell/
  - CmdLine:
    - chmod +x /shell/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tensorspark requests
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - notebooks/MNIST_data/
    - /notebooks/MNIST_data/
  - Env:
    - Key: NAMENODE
      Value: localhost
    Name: env
  - Env:
    - Key: DATANODE
      Value: localhost
    Name: env
  - Labels:
    - Key: dns.inspected
      Value: '"true"'
    Name: label
  - Name: expose
    Ports:
    - "4040"
    - "50020"
    - "50070"
    - "6060"
    - "7077"
    - "8020"
    - "8080"
    - "8081"
    - "8888"
  - CmdLine:
    - /shell/bootALL.sh
    Name: cmd
    PrependShell: false
  From:
    Image: tensorflow/tensorflow:0.10.0
  Name: ""
  Platform: ""
  SourceCode: FROM tensorflow/tensorflow:0.10.0
