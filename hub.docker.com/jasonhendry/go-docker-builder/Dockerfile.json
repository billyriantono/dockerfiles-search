{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:18.05.0-ce-git",
      "SourceCode": "FROM docker:18.05.0-ce-git",
      "Platform": "",
      "From": {
        "Image": "docker:18.05.0-ce-git"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps             bash     \t\tca-certificates     \t\tgcc     \t\tgo     \t\tgroff     \t\tless             musl-dev             openssl             py-pip     \t;     \texport         \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\"         \t\tGOOS=\"$(go env GOOS)\"         \t\tGOARCH=\"$(go env GOARCH)\"         \t\tGO386=\"$(go env GO386)\"         \t\tGOARM=\"$(go env GOARM)\"         \t\tGOHOSTOS=\"$(go env GOHOSTOS)\"         \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\"         \t;     \twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\";     \techo '665f184bf8ac89986cfd5a4460736976f60b57df6b320ad71ad4cef53bb143dc *go.tgz' | sha256sum -c -;     \ttar -C /usr/local -xzf go.tgz;     \trm go.tgz;     \t        \tcd /usr/local/go/src;         \tfor p in /go-alpine-patches/*.patch; do         \t\t[ -f \"$p\" ] || continue;         \t\tpatch -p2 -i \"$p\";         \tdone;         \t./make.bash;         \t        \trm -rf /go-alpine-patches;         \tpip install awscli;         \tapk del .build-deps py-pip ;         \tapk add --no-cache python ca-certificates openssl gettext;          \t        \texport PATH=\"/usr/local/go/bin:$PATH\";         \tgo version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        }
      ]
    }
  ]
}