MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Labels:
    - Key: jenkins_version
      Value: '"$JENKINS_VERSION"'
    Name: label
  - Labels:
    - Key: description
      Value: '"This image extends the official jenkins/jenkins:lts image by adding
        the docker-ce package so Jenkins can launch Docker containers. You have to
        bind mount the Docker socket, when you run the Jenkins container. Eg. \"-v
        /var/run/docker.sock:/var/run/docker.sock\" Furthermore you can/should specify
        the group ID (via the DOCKER_GID environment variable) that has write permission
        on the Docker socket on the host. Eg. \"-e DOCKER_GID=$(getent group docker
        | cut -d: -f3)\" This can be different from the group ID of the \"docker\"
        group that is created during the build of the image (by the docker-ce package)."'
    Name: label
  - Name: user
    User: root
  - CmdLine:
    - true   && apt-get update   && apt-get -y install     apt-transport-https     ca-certificates     curl     software-properties-common   &&
      OS_CODENAME="$(sed -r 's/^ID=(.*)/\1/;t;d' /etc/os-release)"   && VERSION_CODENAME="$(sed
      -r 's/^VERSION_CODENAME=(.*)/\1/;t;d' /etc/os-release)"   && curl -fsSL "https://download.docker.com/linux/$OS_CODENAME/gpg"
      | apt-key add -   && echo "deb [arch=amd64] https://download.docker.com/linux/$OS_CODENAME
      $VERSION_CODENAME stable" > /etc/apt/sources.list.d/download_docker_com.list   &&
      apt-get update   && apt-get -y install     docker-ce     setpriv   && apt-get
      clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-setpriv-wrapper.sh
    - /usr/local/bin/jenkins-setpriv-wrapper.sh
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/local/bin/jenkins-setpriv-wrapper.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
