MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: PHOTPIPEDIR
      Value: /usr/local/pipsrc
    Name: env
  - Env:
    - Key: PIPEGITADDRESS
      Value: https://github.com/mommermi/photometrypipeline.git
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYTHONPATH:$PHOTPIPEDIR
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PHOTPIPEDIR
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - sed -i 's#http://archive.ubuntu.com/#http://tw.archive.ubuntu.com/#' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends software-properties-common
      curl     && sh -c "echo 'deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_16.04/
      /' >> /etc/apt/sources.list.d/arc-theme.list"     && curl -SL http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_16.04/Release.key
      | apt-key add -     && add-apt-repository ppa:fcwu-tw/ppa     && apt-get update     &&
      apt-get install -y --no-install-recommends --allow-unauthenticated         supervisor         openssh-server
      pwgen sudo vim-tiny         net-tools         lxde x11vnc xvfb         gtk2-engines-murrine
      ttf-ubuntu-font-family         libreoffice firefox         fonts-wqy-microhei         language-pack-zh-hant
      language-pack-gnome-zh-hant firefox-locale-zh-hant libreoffice-l10n-zh-tw         nginx         python-pip
      python-dev build-essential         mesa-utils libgl1-mesa-dri         gnome-themes-standard
      gtk2-engines-pixbuf gtk2-engines-murrine pinta arc-theme         dbus-x11 x11-utils     &&
      apt-get autoclean     && apt-get autoremove     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y    build-essential    libssl-dev    libffi-dev    python-dev    git    python    sextractor    python-pip    wget    curl    libplplot-dev    libshp-dev    libcurl4-gnutls-dev    liblapack3
      liblapack-dev liblapacke liblapacke-dev    libfftw3-3 libfftw3-dev libfftw3-single3    libatlas-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $PHOTPIPEDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $PHOTPIPEDIR    && git clone "$PIPEGITADDRESS" .
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install astropy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install callhorizons
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install future
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cryptography
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install astroquery
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /bin/tini
  - CmdLine:
    - chmod +x /bin/tini
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PHOTPIPEDIR
  - CmdLine:
    - wget https://cdn.rawgit.com/towicode/towicode.github.io/8d4d8670/scamp-trunk.r345.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - gzip -dc scamp-* | tar xvf -
    Name: run
    PrependShell: true
  - CmdLine:
    - cd trunk.r345 && ./configure --enable-threads && make && make install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - image
    - /
  - CmdLine:
    - pip install setuptools wheel && pip install -r /usr/lib/web/requirements.txt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: workdir
    Path: /root
  - Env:
    - Key: HOME
      Value: /home/ubuntu
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - chmod +x /startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - find /usr/lib/ -type f ! -name "*.c" -exec chmod +x {} +
    Name: run
    PrependShell: true
  - CmdLine:
    - /startup.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
