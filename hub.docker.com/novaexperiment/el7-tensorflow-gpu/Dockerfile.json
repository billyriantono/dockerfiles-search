{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel-centos7",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel-centos7",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel-centos7"
      },
      "Commands": [
        {
          "Maintainer": "Alex Himmel \"ahimmel@fnal.gov\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install epel-release yum-plugin-priorities"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install http://repo.opensciencegrid.org/osg/3.4/osg-3.4-el7-release-latest.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"# Pegasus\\n[Pegasus]\\nname=Pegasus\\nbaseurl=http://download.pegasus.isi.edu/wms/download/rhel/7/\\$basearch/\\ngpgcheck=0\\nenabled=1\\npriority=50\" \u003e/etc/yum.repos.d/pegasus.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y groups mark convert"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y grouplist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y groupinstall \"Compatibility Libraries\"                     \"Development Tools\"                     \"Scientific Support\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install \tredhat-lsb \tbc \tbinutils \tbinutils-devel \tcoreutils \tcurl \tfontconfig \tgcc \tgcc-c++ \tgcc-gfortran \tgit \tglew-devel \tglib2-devel \tglib-devel \tgraphviz \tgsl-devel         gtk3 \tjava-1.8.0-openjdk \tjava-1.8.0-openjdk-devel         libcurl \tlibgfortran \tlibGLU \tlibgomp \tlibicu \tlibquadmath \tlibtool \tlibtool-ltdl \tlibtool-ltdl-devel \tlibX11-devel \tlibXaw-devel \tlibXext-devel \tlibXft-devel \tlibxml2 \tlibxml2-devel \tlibXmu-devel \tlibXpm \tlibXpm-devel \tlibXt \tmesa-libGL-devel \topenssh \topenssh-server \topenssl         openssl-devel \tosg-wn-client \tp7zip \tp7zip-plugins \tpython-devel \tredhat-lsb-core \trsync         stashcache-client \tsubversion \ttcl-devel \ttcsh \ttime \ttk-devel \twget \twhich"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install osg-ca-certs osg-wn-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/grid-security/certificates/*.r0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install condor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install pegasus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for MNTPOINT in     /cvmfs     /hadoop     /hdfs     /lizard     /mnt/hadoop     /mnt/hdfs     /xenon     /spt     /stash2     /srv     /scratch     /data     /project   ; do     mkdir -p $MNTPOINT ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /host-libs /etc/OpenCL/vendors"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for NVBIN in     nvidia-smi     nvidia-debugdump     nvidia-persistenced     nvidia-cuda-mps-control     nvidia-cuda-mps-server   ; do     touch /usr/bin/$NVBIN ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/cuda/lib64/\" \u003e/etc/ld.so.conf.d/cuda.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/cuda/extras/CUPTI/lib64/\" \u003e\u003e/etc/ld.so.conf.d/cuda.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.12.0-cp27-none-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install keras==2.2.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/jthiltges/singularity-environment.git /usr/singularity-environment/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r /usr/singularity-environment/{environment,.exec,.run,.shell,singularity,.singularity.d,.test} /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /.singularity.d/libs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export PATH and LD_LIBRARY_PATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PATH=/opt/shifter/bin:${PATH}; export LD_LIBRARY_PATH=/opt/shifter/lib:${LD_LIBRARY_PATH}"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Timestamp:\" `date --utc` | tee /image-build-info.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}