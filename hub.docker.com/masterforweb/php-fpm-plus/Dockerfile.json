{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Andrey Delphin \u003cmasterforweb@hotmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "Europe/Moscow"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "1024M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_UPLOAD",
              "Value": "128M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_FILE_UPLOAD",
              "Value": "128"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_POST",
              "Value": "128M"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026 \tapk upgrade \u0026\u0026     apk --update add     php7     php7-dev     php7-bcmath     php7-dom     php7-ctype     php7-pear     php7-curl     php7-fileinfo     php7-gd     php7-iconv     php7-intl     php7-json     php7-mysqlnd     php7-mbstring     php7-mcrypt     php7-mysqli     php7-opcache     php7-openssl     php7-pdo     php7-pdo_mysql     php7-pdo_pgsql     php7-pdo_sqlite     php7-phar     php7-posix     php7-session     php7-soap     php7-xml     php7-simplexml     php7-xmlreader     php7-xmlwriter     php7-tidy     php7-zip     php7-memcached     php7-redis     php7-amqp      php7-fpm \u0026\u0026     pecl update-channels \u0026\u0026     apk add --no-cache git  \u0026\u0026     apk add --no-cache --virtual .imagick-build-dependencies autoconf curl g++ gcc imagemagick-dev libtool make tar \u0026\u0026     apk add --virtual .imagick-runtime-dependencies imagemagick \u0026\u0026     IMAGICK_TAG=\"3.4.2\" \u0026\u0026     git clone -o ${IMAGICK_TAG} --depth 1 https://github.com/mkoppanen/imagick.git /tmp/imagick \u0026\u0026     cd /tmp/imagick \u0026\u0026     phpize \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     echo \"extension=imagick.so\" \u003e /etc/php7/conf.d/ext-imagick.ini \u0026\u0026     apk del .imagick-build-dependencies \u0026\u0026     sed -i \"s|;*daemonize\\s*=\\s*yes|daemonize = no|g\" /etc/php7/php-fpm.conf \u0026\u0026     sed -i \"s|;*listen\\s*=\\s*127.0.0.1:9000|listen = 9000|g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i \"s|;*listen\\s*=\\s*/||g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/user\\s*=\\s*nobody/user = www-data/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i -e \"s/group\\s*=\\s*nobody/group = www-data/g\" /etc/php7/php-fpm.d/www.conf \u0026\u0026     sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i\" /etc/php7/php.ini \u0026\u0026     sed -i 's/short_open_tag = Off/short_open_tag = On/g' /etc/php7/php.ini  \u0026\u0026 \tphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php composer-setup.php --install-dir=/usr/bin --filename=composer \u0026\u0026     php -r \"unlink('composer-setup.php');\" \u0026\u0026     \taddgroup -g 1000 -S www-data \u0026\u0026 \tadduser -u 1000 -D -S -G www-data www-data \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/vhosts"
        },
        {
          "CmdLine": [
            "php-fpm7",
            "-F"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}