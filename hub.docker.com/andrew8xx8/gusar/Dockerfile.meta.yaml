MetaArgs: null
Stages:
- BaseName: bvlc/caffe:cpu
  Commands:
  - CmdLine:
    - apt-get update -qq && apt-get install -y build-essential libpq-dev curl rsync
      postgresql vim git imagemagick locales gnupg2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -y nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -y     build-essential     g++     git     openssh-client     python     python-dev     python-pip     python-setuptools     python-virtualenv     python-wheel     pkg-config     libopenblas-base     python-numpy     python-scipy     python-h5py     python-yaml     python-pydot  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: TENSORFLOW_VERSION
    Name: arg
    Value: 1.3.0
  - Key: TENSORFLOW_DEVICE
    Name: arg
    Value: cpu
  - Key: TENSORFLOW_APPEND
    Name: arg
    Value: ""
  - CmdLine:
    - pip --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_DEVICE}/tensorflow${TENSORFLOW_APPEND}-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Key: KERAS_VERSION
    Name: arg
    Value: 2.0.8
  - Env:
    - Key: KERAS_BACKEND
      Value: tensorflow
    Name: env
  - CmdLine:
    - pip --no-cache-dir install --no-dependencies git+https://github.com/fchollet/keras.git@${KERAS_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c "import tensorflow; print(tensorflow.__version__)"  && dpkg-query
      -l > /dpkg-query-l.txt  && pip2 freeze > /pip2-freeze.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      7D2BAF1CF37B13E2069D6956105BD0E739499BDB
    Name: run
    PrependShell: true
  - CmdLine:
    - \curl -L https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm requirements"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm install 2.4.1"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'ru_RU.UTF-8 UTF-8' >> /etc/locale.gen
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen ru_RU.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure -fnoninteractive locales
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: ru_RU.utf8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: ru_RU.utf8
    Name: env
  - CmdLine:
    - update-locale LC_ALL="ru_RU.utf8" LANG="ru_RU.utf8" LANGUAGE="ru_RU"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "gem install bundler"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g yarn webpack
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /apps/gusar
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L 'https://www.dropbox.com/s/54qsc9q5g4vuczo/model.h5?dl=1' > /apps/model.h5
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /apps/gusar
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - yarn.lock
    - yarn.lock
  - CmdLine:
    - yarn install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - Gemfile
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile.lock
    - Gemfile.lock
  - CmdLine:
    - /bin/bash -l -c "bundle install --jobs 4"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /apps/gusar
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/database.example.yml
    - config/database.yml
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: "true"
    Name: env
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Env:
    - Key: HOSTNAME
      Value: http://rails.gusar.1cb9d70e.svc.dockerapp.io/
    Name: env
  - CmdLine:
    - mkdir /apps/gusar/public/uploads
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /apps/gusar/public/uploads
  - CmdLine:
    - /bin/bash -l -c "bundle exec rails webpacker:compile"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rake assets:precompile"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /bin/bash -l -c "bundle exec rails s -p 80 -b '0.0.0.0'"
    Name: cmd
    PrependShell: true
  From:
    Image: bvlc/caffe:cpu
  Name: ""
  Platform: ""
  SourceCode: FROM bvlc/caffe:cpu
