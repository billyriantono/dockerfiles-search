{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.6.3",
      "SourceCode": "FROM ruby:2.6.3",
      "Platform": "",
      "From": {
        "Image": "ruby:2.6.3"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ivann.laruelle@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y nodejs cron imagemagick libicu-dev postgresql-client openssl nano bash curl git \u0026\u0026 apt-get autoremove \u0026\u0026     echo \"root\" \u003e /etc/cron.allow \u0026\u0026 echo \"docker-user\" \u003e\u003e /etc/cron.allow \u0026\u0026 cron \u0026\u0026 mkdir -m 770 /home/docker-user \u0026\u0026     gem install bundler \u0026\u0026 gem install passenger \u0026\u0026 mkdir -m 770 /decidim-app \u0026\u0026 passenger-install-nginx-module --auto --auto-download \u0026\u0026 gem install decidim \u0026\u0026 decidim /decidim-app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/decidim-app"
        },
        {
          "CmdLine": [
            "echo \"gem 'omniauth-cas'\" \u003e\u003e Gemfile \u0026\u0026 echo \"gem 'figaro'\" \u003e\u003e Gemfile \u0026\u0026 echo \"gem 'daemons'\" \u003e\u003e Gemfile \u0026\u0026 echo \"gem 'delayed_job_active_record'\" \u003e\u003e Gemfile \u0026\u0026     bundle install \u0026\u0026 rails generate delayed_job:active_record \u0026\u0026     sed -i \"s/  config.available_locales = \\[:en, :ca, :es\\]/  config.available_locales = \\[:en, :ar, :ca, :de, :es, :eu, :fi, :fr, :gl, :hu, :id, :it, :nl, :no, :pl, :pt, :ru, :sv, :tr, :uk\\]/g\" config/initializers/decidim.rb \u0026\u0026     echo \"gem 'wkhtmltopdf-binary'\" \u003e\u003e Gemfile \u0026\u0026 echo \"gem 'wicked_pdf'\" \u003e\u003e Gemfile \u0026\u0026 bundle install \u0026\u0026 rails generate wicked_pdf \u0026\u0026     echo \"gem 'decidim-consultations'\" \u003e\u003e Gemfile \u0026\u0026 echo \"gem 'decidim-initiatives'\" \u003e\u003e Gemfile \u0026\u0026 bundle install \u0026\u0026 rails decidim_initiatives:install:migrations \u0026\u0026 rails decidim_consultations:install:migrations \u0026\u0026     rails assets:precompile RAILS_ENV=production \u0026\u0026 chmod -R 770 /decidim-app \u0026\u0026 chmod -R g=rwx /usr/local/bundle/gems/decidim-core* \u0026\u0026 chmod -R g=rwx /usr/local/bundle/gems/omniauth-cas*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/opt/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrycheck",
            "/entrycheck.sh"
          ]
        },
        {
          "CmdLine": [
            "chgrp -R 0 /opt/nginx \u0026\u0026 chmod -R g=rwx /opt/nginx \u0026\u0026     chgrp -R 0 /var/cache \u0026\u0026 chmod -R g=rwx /var/cache \u0026\u0026     chgrp -R 0 /var/run \u0026\u0026 chmod -R g=rwx /var/run \u0026\u0026     chmod g+w /etc/passwd \u0026\u0026 chmod +x /entrycheck.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/decidim-app/public/uploads"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/decidim-app/ssl"
          ]
        },
        {
          "CmdLine": [
            "/entrycheck.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}