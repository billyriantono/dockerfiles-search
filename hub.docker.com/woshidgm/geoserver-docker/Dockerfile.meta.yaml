MetaArgs: null
Stages:
- BaseName: tomcat:9-jre8
  Commands:
  - Maintainer: GeoNode Development Team
    Name: maintainer
  - Env:
    - Key: GEOSERVER_VERSION
      Value: 2.10.x
    Name: env
  - Env:
    - Key: GEOSERVER_DATA_DIR
      Value: '"/geoserver_data/data"'
    Name: env
  - CmdLine:
    - cd /usr/local/tomcat/webapps     && wget --progress=bar:force:noscroll     http://build.geonode.org/geoserver/latest/geoserver-${GEOSERVER_VERSION}.war     &&
      unzip -q geoserver-${GEOSERVER_VERSION}.war -d geoserver     && rm geoserver-${GEOSERVER_VERSION}.war     &&
      mkdir -p $GEOSERVER_DATA_DIR
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $GEOSERVER_DATA_DIR
  - Key: DOCKERHOST
    Name: arg
    Value: ${DOCKERHOST}
  - CmdLine:
    - 'echo -n #1===>DOCKERHOST=${DOCKERHOST}'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERHOST
      Value: ${DOCKERHOST}
    Name: env
  - CmdLine:
    - 'echo -n #2===>DOCKERHOST=${DOCKERHOST}'
    Name: run
    PrependShell: true
  - Key: GEONODE_HOST_IP
    Name: arg
    Value: ${GEONODE_HOST_IP}
  - CmdLine:
    - 'echo -n #1===>GEONODE_HOST_IP=${GEONODE_HOST_IP}'
    Name: run
    PrependShell: true
  - Env:
    - Key: GEONODE_HOST_IP
      Value: ${GEONODE_HOST_IP}
    Name: env
  - CmdLine:
    - 'echo -n #2===>GEONODE_HOST_IP=${GEONODE_HOST_IP}'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_HOST_IP
      Value: ${DOCKER_HOST_IP:-${GEONODE_HOST_IP}}
    Name: env
  - CmdLine:
    - 'echo -n #1===>DOCKER_HOST_IP=${DOCKER_HOST_IP}'
    Name: run
    PrependShell: true
  - CmdLine:
    - if ! [ -z ${DOCKER_HOST_IP} ];     then echo export DOCKER_HOST_IP=${DOCKERHOST}
      |     sed 's/tcp:\/\/\([^:]*\).*/\1/' >> /root/.bashrc;     else echo "DOCKER_HOST_IP
      is already set!"; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo -n #2===>DOCKER_HOST_IP=${DOCKER_HOST_IP}'
    Name: run
    PrependShell: true
  - Key: PUBLIC_PORT
    Name: arg
    Value: ${PUBLIC_PORT}
  - CmdLine:
    - 'echo -n #1===>PUBLIC_PORT=${PUBLIC_PORT}'
    Name: run
    PrependShell: true
  - Env:
    - Key: PUBLIC_PORT
      Value: ${PUBLIC_PORT}
    Name: env
  - CmdLine:
    - 'echo -n #2===>PUBLIC_PORT=${PUBLIC_PORT}'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo export NGINX_BASE_URL=http://${NGINX_HOST}:${NGINX_PORT}/ |     sed 's/tcp:\/\/\([^:]*\).*/\1/'
      >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/tomcat/tmp
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - set_geoserver_auth.sh
    - /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup_auth.sh
    - /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - get_dockerhost_ip.py
    - /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - get_nginxhost_ip.py
    - /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/tomcat/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ojdbc6.jar
    - /usr/local/tomcat/webapps/geoserver/WEB-INF/lib/ojdbc6.jar
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - geonode-geoserver-ext-2.10-SNAPSHOT.jar
    - /usr/local/tomcat/webapps/geoserver/WEB-INF/lib/geonode-geoserver-ext-2.10-SNAPSHOT.jar
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gt-process-16-20170926.110419-897.jar
    - /usr/local/tomcat/webapps/geoserver/WEB-INF/lib/gt-process-16-20170926.110419-897.jar
  - CmdLine:
    - apt-get update     && apt-get -y upgrade     && apt-get install -y python python-pip
      python-dev     && chmod +x /usr/local/tomcat/tmp/set_geoserver_auth.sh     &&
      chmod +x /usr/local/tomcat/tmp/setup_auth.sh     && chmod +x /usr/local/tomcat/tmp/entrypoint.sh     &&
      pip install --upgrade pip     && pip install -r requirements.txt     && chmod
      +x /usr/local/tomcat/tmp/get_dockerhost_ip.py     && chmod +x /usr/local/tomcat/tmp/get_nginxhost_ip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/tomcat/tmp/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: tomcat:9-jre8
  Name: ""
  Platform: ""
  SourceCode: FROM tomcat:9-jre8
