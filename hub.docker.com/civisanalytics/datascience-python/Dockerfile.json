{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "support@civisanalytics.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update -y --no-install-recommends \u0026\u0026   apt-get install -y --no-install-recommends locales \u0026\u0026   locale-gen en_US.UTF-8 \u0026\u0026   apt-get install -y --no-install-recommends software-properties-common \u0026\u0026   apt-get install -y --no-install-recommends         make         automake         libpq-dev         libffi-dev         gfortran         g++         git         libboost-program-options-dev         libtool         libxrender1         wget         ca-certificates         curl \u0026\u0026   apt-get clean -y \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "CONDARC",
              "Value": "/opt/conda/.condarc"
            },
            {
              "Key": "BASH_ENV",
              "Value": "/etc/profile"
            },
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            },
            {
              "Key": "CIVIS_MINICONDA_VERSION",
              "Value": "4.5.12"
            },
            {
              "Key": "CIVIS_CONDA_VERSION",
              "Value": "4.6.8"
            },
            {
              "Key": "CIVIS_PYTHON_VERSION",
              "Value": "3.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${CIVIS_MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     /bin/bash /Miniconda3-${CIVIS_MINICONDA_VERSION}-Linux-x86_64.sh -b -p /opt/conda \u0026\u0026     rm Miniconda3-${CIVIS_MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     /opt/conda/bin/conda install --yes conda==${CIVIS_MINICONDA_VERSION} \u0026\u0026     conda install conda=${CIVIS_CONDA_VERSION} \u0026\u0026     echo \"conda ==${CIVIS_CONDA_VERSION}\" \u003e /opt/conda/conda-meta/pinned \u0026\u0026     conda install --yes python==${CIVIS_PYTHON_VERSION} \u0026\u0026     echo \"python ==${CIVIS_PYTHON_VERSION}\" \u003e\u003e /opt/conda/conda-meta/pinned \u0026\u0026     conda clean --all -y \u0026\u0026     ln -s /opt/conda/lib/libopenblas.so /opt/conda/lib/libblas.so \u0026\u0026     ln -s /opt/conda/lib/libopenblas.so /opt/conda/lib/liblapack.so \u0026\u0026     ln -s /opt/conda/lib/libssl.so /opt/conda/lib/libssl.so.6 \u0026\u0026     ln -s /opt/conda/lib/libcrypto.so /opt/conda/lib/libcrypto.so.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".condarc",
            "/opt/conda/.condarc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "environment.yml",
            "environment.yml"
          ]
        },
        {
          "CmdLine": [
            "conda install -y boto \u0026\u0026     conda install -y nomkl \u0026\u0026     conda env update -f environment.yml -n root \u0026\u0026     conda clean --all -y \u0026\u0026     rm -rf ~/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MATPLOTLIBRC",
              "Value": "${HOME}/.config/matplotlib/matplotlibrc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${HOME}/.config/matplotlib \u0026\u0026     echo \"backend      : Agg\" \u003e ${HOME}/.config/matplotlib/matplotlibrc \u0026\u0026     python -c \"import matplotlib.pyplot\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py widgetsnbextension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JOBLIB_TEMP_FOLDER",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "5.0.0"
            },
            {
              "Key": "VERSION_MAJOR",
              "Value": "5"
            },
            {
              "Key": "VERSION_MINOR",
              "Value": "0"
            },
            {
              "Key": "VERSION_MICRO",
              "Value": "0"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}