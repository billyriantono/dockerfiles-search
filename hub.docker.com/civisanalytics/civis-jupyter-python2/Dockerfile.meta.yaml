MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: support@civisanalytics.com
    Name: maintainer
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update -y --no-install-recommends &&   apt-get
      install -y --no-install-recommends locales &&   locale-gen en_US.UTF-8 &&   apt-get
      install -y --no-install-recommends software-properties-common &&   apt-get install
      -y --no-install-recommends         make         automake         libpq-dev         libffi-dev         gfortran         g++         git         libboost-program-options-dev         libtool         libxrender1         wget         ca-certificates         curl         vim         nano         htop         tmux         emacs
      &&   apt-get clean -y &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: CONDARC
      Value: /opt/conda/.condarc
    - Key: BASH_ENV
      Value: /etc/profile
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    - Key: CIVIS_CONDA_VERSION
      Value: 4.3.30
    - Key: CIVIS_PYTHON_VERSION
      Value: 2.7.13
    - Key: DEFAULT_KERNEL
      Value: python2
    - Key: CIVIS_JUPYTER_NOTEBOOK_VERSION
      Value: 1.0.1
    - Key: TINI_VERSION
      Value: v0.16.1
    Name: env
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/miniconda/Miniconda2-${CIVIS_CONDA_VERSION}-Linux-x86_64.sh
      &&     /bin/bash /Miniconda2-${CIVIS_CONDA_VERSION}-Linux-x86_64.sh -b -p /opt/conda
      &&     rm Miniconda2-${CIVIS_CONDA_VERSION}-Linux-x86_64.sh &&     /opt/conda/bin/conda
      install --yes conda==${CIVIS_CONDA_VERSION} &&     echo "conda ==${CIVIS_CONDA_VERSION}"
      > /opt/conda/conda-meta/pinned &&     conda install --yes python==${CIVIS_PYTHON_VERSION}
      &&     echo "python ==${CIVIS_PYTHON_VERSION}" >> /opt/conda/conda-meta/pinned
      &&     conda clean --all -y &&     ln -s /opt/conda/lib/libopenblas.so /opt/conda/lib/libblas.so
      &&     ln -s /opt/conda/lib/libopenblas.so /opt/conda/lib/liblapack.so &&     ln
      -s /opt/conda/lib/libssl.so /opt/conda/lib/libssl.so.6 &&     ln -s /opt/conda/lib/libcrypto.so
      /opt/conda/lib/libcrypto.so.6
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .condarc
    - /opt/conda/.condarc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - environment.yml
    - environment.yml
  - CmdLine:
    - conda install -y boto &&     conda install -y nomkl &&     conda env update
      -f environment.yml -n root &&     conda clean --all -y &&     rm -rf ~/.cache/pip
    Name: run
    PrependShell: true
  - Env:
    - Key: MATPLOTLIBRC
      Value: ${HOME}/.config/matplotlib/matplotlibrc
    Name: env
  - CmdLine:
    - 'mkdir -p ${HOME}/.config/matplotlib &&     echo "backend      : Agg" > ${HOME}/.config/matplotlib/matplotlibrc
      &&     python -c "import matplotlib.pyplot"'
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py widgetsnbextension
    Name: run
    PrependShell: true
  - Env:
    - Key: JOBLIB_TEMP_FOLDER
      Value: /tmp
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install civis-jupyter-notebook==${CIVIS_JUPYTER_NOTEBOOK_VERSION} &&     civis-jupyter-notebooks-install
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: /root/work
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - civis-jupyter-notebooks-start
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
