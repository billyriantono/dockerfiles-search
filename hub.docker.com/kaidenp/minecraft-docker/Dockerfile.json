{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "Kaiden Prince",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886     \u0026\u0026 echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections     \u0026\u0026 apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get -y dist-upgrade     \u0026\u0026 apt-get -y install oracle-java8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_7.x | bash - \u0026\u0026     apt-get install -y nodejs python     \u0026\u0026 apt-get -y install oracle-java8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get -y dist-upgrade         \u0026\u0026 apt-get -y install tmux xz-utils sudo         \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "America/Chicago"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'America/Chicago' \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/service/sshd/down"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "25565"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "25565/udp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/mc"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/backup"
          ]
        },
        {
          "Env": [
            {
              "Key": "MCJAR",
              "Value": "\"minecraft.jar\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /backup /mc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd mc -m -s /bin/bash \u0026\u0026 usermod -p '*' mc \u0026\u0026     ln -s /mc /home/mc/minecraft \u0026\u0026     ln -s /backup /home/mc/backup \u0026\u0026     chown mc:mc -R /home/mc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/my_init.d \u0026\u0026 chown mc:mc -R /mc /backup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "service",
            "/etc/service"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "my_init.d",
            "/etc/my_init.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts",
            "/scripts"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "crontab",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/my_init.d/*.sh /etc/service/*/run /scripts/* \u0026\u0026     echo 'PATH=$PATH:/scripts' \u003e\u003e /etc/profile \u0026\u0026     cat /tmp/crontab \u003e\u003e /etc/crontab \u0026\u0026     echo \u003e\u003e /etc/crontab \u0026\u0026     echo \"mc ALL=(root) NOPASSWD: /usr/bin/sv, (root) NOPASSWD: /scripts/mc\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}