{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli",
      "SourceCode": "FROM php:7.1-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli"
      },
      "Commands": [
        {
          "Maintainer": "Yoann Frommelt \u003cyfrommelt@hevaweb.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y     curl     apt-transport-https     ca-certificates     openssh-client     wget     bzip2     git     build-essential     libmcrypt-dev     libicu-dev     zlib1g-dev     libpq-dev     libmcrypt-dev     libfreetype6-dev     libjpeg62-turbo-dev     libpng12-dev     python-yaml     python-jinja2     python-httplib2     python-keyczar     python-paramiko     python-setuptools     python-pkg-resources     python-pip     unzip     rsync     nodejs     yarn   \u0026\u0026 apt-get autoremove -y   \u0026\u0026 update-ca-certificates   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*   \u0026\u0026 docker-php-ext-install       iconv       mcrypt       mbstring       bcmath       intl       pdo       pdo_pgsql       zip   \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   \u0026\u0026 docker-php-ext-install gd   \u0026\u0026 pecl install xdebug   \u0026\u0026 docker-php-ext-enable xdebug   \u0026\u0026 echo \"error_reporting = E_ALL\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 echo \"display_startup_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 echo \"display_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 echo \"xdebug.remote_connect_back=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 echo \"xdebug.remote_port=9001\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini   \u0026\u0026 curl -sS https://getcomposer.org/installer | php   \u0026\u0026 mv composer.phar /usr/bin/composer   \u0026\u0026 composer selfupdate   \u0026\u0026 mkdir ~/.ssh   \u0026\u0026 ssh-keyscan -H github.com \u003e\u003e ~/.ssh/known_hosts   \u0026\u0026 ssh-keyscan -H gitlab.com \u003e\u003e ~/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -v   \u0026\u0026 node -v   \u0026\u0026 npm -v   \u0026\u0026 python --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}