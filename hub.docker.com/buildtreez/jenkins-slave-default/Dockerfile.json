{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "America/Los_Angeles"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y       apt-transport-https      build-essential          bzip2                    ca-certificates          curl                     git                      iptables                 jq                       libbz2-dev               libffi-dev               libncurses-dev           libreadline-dev          libsqlite3-dev           libssl-dev               locales                  lvm2                     lxc                      maven                    openjdk-8-jdk            python3-pip              unzip                    wget                     zip                      zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -sf /usr/lib/jvm/java-8-openjdk-amd64/bin/java /etc/alternatives/java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install awsebcli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y docker.io"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://raw.githubusercontent.com/docker/docker/master/hack/dind -o /usr/local/bin/dind     \u0026\u0026 chmod a+x /usr/local/bin/dind"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JENKINS_VERSION",
          "Name": "arg",
          "Value": "3.33"
        },
        {
          "CmdLine": [
            "groupadd -g 1000 jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d /home/jenkins -u 1000 -g 1000 -m jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --create-dirs -fsSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${JENKINS_VERSION}/remoting-${JENKINS_VERSION}.jar     \u0026\u0026 chmod 755 /usr/share/jenkins     \u0026\u0026 chmod 644 /usr/share/jenkins/slave.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jenkins-slave",
            "/usr/local/bin/jenkins-slave"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/jenkins-slave"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/jenkins/.jenkins \u0026\u0026 mkdir -p /home/jenkins/agent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins:jenkins /home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins"
        },
        {
          "CmdLine": [
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}