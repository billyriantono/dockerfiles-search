MetaArgs: null
Stages:
- BaseName: php:7.4-rc-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"vlad@hiberbee.com"'
    Name: label
  - Labels:
    - Key: description
      Value: '"A Docker image based on Alpine Linux for php & RoadRunner application
        server. Includes Redis, APCu & Memcached with IGBinary extension, PHP DataStructures
        & UUID"'
    Name: label
  - Key: uuid_version
    Name: arg
    Value: 1.0.3
  - Key: redis_version
    Name: arg
    Value: 5.0.2
  - Key: pthreads_version
    Name: arg
    Value: 3.2.0
  - Key: memcached_version
    Name: arg
    Value: 3.1.3
  - Key: igbinary_version
    Name: arg
    Value: 3.0.1
  - Key: apcu_version
    Name: arg
    Value: 5.1.17
  - Key: xdebug_version
    Name: arg
    Value: 2.8.0beta1
  - Key: timezone
    Name: arg
    Value: Etc/UTC
  - Key: user
    Name: arg
    Value: hiberbee
  - Key: src_path
    Name: arg
    Value: '"/app"'
  - Key: document_root
    Name: arg
    Value: '"public"'
  - Key: http_port
    Name: arg
    Value: "8000"
  - Key: php_enabled_ext
    Name: arg
    Value: '"amqp apcu bcmath ds gd igbinary intl ldap mbstring memcached mongodb
      opcache pcntl pdo_mysql pdo_pgsql redis uuid"'
  - Env:
    - Key: MEMCACHED_DEPS
      Value: '"zlib-dev libmemcached-dev cyrus-sasl-dev"'
    - Key: COMPOSER_VERSION
      Value: '"${composer_version}"'
    - Key: COMPOSER_HOME
      Value: '"/home/${user}/.composer"'
    Name: env
  - CmdLine:
    - apk add --no-cache         build-base         freetype-dev         groff         icu-dev         libffi-dev         libjpeg-turbo-dev         libmcrypt-dev         libmemcached-libs         libpng-dev         libwebp-dev         libxml2-dev         libxpm-dev         libzip-dev         mariadb-dev         nano         oniguruma-dev         openldap-dev         openssh         pcre-dev         postgresql-dev         python         rabbitmq-c         rabbitmq-c-dev         ${MEMCACHED_DEPS}         ${PHPIZE_DEPS}
      &&     docker-php-ext-configure gd         --with-freetype-dir=/usr/include/         --with-gd         --with-jpeg-dir=/usr/include/         --with-png-dir=/usr/include/         --with-webp-dir=/usr/include/         --with-xpm-dir=/usr/include/         --enable-gd-native-ttf=/usr/include/
      &&         NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) &&     docker-php-ext-install
      -j${NPROC}         bcmath         gd         intl         ldap         mbstring         mysqli         opcache         pcntl         pdo_mysql         pdo_pgsql         soap         sockets         zip
      &&     wget https://s3.amazonaws.com/aws-cli/awscli-bundle.zip &&     unzip
      awscli-bundle.zip &&     ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      &&     mkdir /tmp/libuuid && cd /tmp/libuuid &&     wget -O- https://sourceforge.net/projects/libuuid/files/libuuid-${uuid_version}.tar.gz
      | tar xz &&     cd "libuuid-${uuid_version}" &&         ./configure &&         make
      &&         make install &&     docker-php-source extract &&     pecl install
      -o -f         amqp         ds         mongodb         uuid         xdebug-${xdebug_version}
      &&     mkdir -p /usr/src/php/ext/apcu && curl -fsSL https://github.com/krakjoe/apcu/archive/v${apcu_version}.tar.gz
      | tar xvz -C /usr/src/php/ext/apcu --strip 1 &&     docker-php-ext-install apcu
      &&     mkdir -p /usr/src/php/ext/igbinary && curl -fsSL https://github.com/igbinary/igbinary/archive/${igbinary_version}.tar.gz
      | tar xvz -C /usr/src/php/ext/igbinary --strip 1 &&    docker-php-ext-install
      igbinary &&    mkdir -p /usr/src/php/ext/redis && curl -fsSL https://github.com/phpredis/phpredis/archive/${redis_version}.tar.gz
      | tar xvz -C /usr/src/php/ext/redis --strip 1 &&     docker-php-ext-configure
      redis --enable-redis-igbinary &&     docker-php-ext-install redis &&     mkdir
      -p /usr/src/php/ext/memcached && curl -fsSL https://github.com/php-memcached-dev/php-memcached/archive/v${memcached_version}.tar.gz
      | tar xvz -C /usr/src/php/ext/memcached --strip 1 &&     docker-php-ext-configure
      memcached --enable-memcached-igbinary &&     docker-php-ext-install memcached
      &&     docker-php-ext-enable ${php_enabled_ext} &&     pecl clear-cache &&     docker-php-source
      delete &&     apk del --no-cache         build-base         libffi-dev         libmcrypt-dev         libx11-dev         rabbitmq-c-dev         pcre-dev         ${MEMCACHED_DEPS}         ${PHPIZE_DEPS}
      &&     rm -rf         /usr/share/php7/*         /tmp/*         /usr/src/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf.d/*
    - /usr/local/etc/php/conf.d/
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/${timezone} /etc/localtime
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/local/bin/composer
  - Chown: ""
    From: 512k/roadrunner
    Name: copy
    SourcesAndDest:
    - /usr/bin/rr
    - /usr/local/bin/rr
  - Env:
    - Key: SHELL
      Value: /bin/sh
    - Key: TERM
      Value: xterm-256color
    - Key: PATH
      Value: '"${PATH}:/usr/local/aws/bin:${HOME}/bin:${HOME}/.composer/vendor/bin:${src_path}/vendor/bin"'
    Name: env
  - CmdLine:
    - composer global require hirak/prestissimo  --no-plugins --no-scripts
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${src_path}
  - Name: expose
    Ports:
    - ${http_port}
  - CmdLine:
    - rr
    - -v
    - -d
    - serve
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.4-rc-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.4-rc-alpine
