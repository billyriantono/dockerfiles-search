{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-alpine",
      "SourceCode": "FROM python:3.6-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.6-alpine"
      },
      "Commands": [
        {
          "Key": "DATABASE_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DATABASE_URL",
              "Value": "${DATABASE_URL}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/requirements.txt"
          ]
        },
        {
          "Env": [
            {
              "Key": "DJANGO_DB_NAME",
              "Value": "default"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_SU_NAME",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_SU_EMAIL",
              "Value": "admin@example.org"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_SU_PASSWORD",
              "Value": "hpmintranet"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .build-deps             gcc             make             libc-dev             musl-dev             linux-headers             pcre-dev             postgresql-dev     \u0026\u0026 pyvenv /venv     \u0026\u0026 /venv/bin/pip install -U pip     \u0026\u0026 LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install --no-cache-dir -r /requirements.txt\"     \u0026\u0026 runDeps=\"$(             scanelf --needed --nobanner --recursive /venv                     | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'                     | sort -u                     | xargs -r apk info --installed                     | sort -u     )\"     \u0026\u0026 apk add --virtual .python-rundeps $runDeps     \u0026\u0026 apk del .build-deps     \u0026\u0026 apk add --no-cache --virtual .build-deps postgresql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /code/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/code/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/code/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Env": [
            {
              "Key": "DJANGO_SETTINGS_MODULE",
              "Value": "intranet.settings"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UWSGI_VIRTUALENV",
              "Value": "/venv"
            },
            {
              "Key": "UWSGI_WSGI_FILE",
              "Value": "intranet/wsgi.py"
            },
            {
              "Key": "UWSGI_HTTP",
              "Value": ":8000"
            },
            {
              "Key": "UWSGI_MASTER",
              "Value": "1"
            },
            {
              "Key": "UWSGI_WORKERS",
              "Value": "2"
            },
            {
              "Key": "UWSGI_THREADS",
              "Value": "8"
            },
            {
              "Key": "UWSGI_UID",
              "Value": "1000"
            },
            {
              "Key": "UWSGI_GID",
              "Value": "2000"
            },
            {
              "Key": "UWSGI_LAZY_APPS",
              "Value": "1"
            },
            {
              "Key": "UWSGI_WSGI_ENV_BEHAVIOR",
              "Value": "holy"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DATABASE_URL=postgres://app_user:changeme@db/app_db /venv/bin/python manage.py collectstatic --noinput"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/code/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/venv/bin/uwsgi",
            "--http-auto-chunked",
            "--http-keepalive"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}