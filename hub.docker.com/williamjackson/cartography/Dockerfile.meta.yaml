MetaArgs: null
Stages:
- BaseName: python:3.8.1-alpine3.11
  Commands:
  - Env:
    - Key: AWS_ACCESS_KEY_ID
      Value: '""'
    - Key: AWS_DEFAULT_REGION
      Value: '""'
    - Key: AWS_SECRET_ACCESS_KEY
      Value: '""'
    - Key: CARTOGRAPHY_VERSION
      Value: '"0.14.0"'
    - Key: NEO4J_URI
      Value: '"bolt://neo4j:7687"'
    - Key: PYTHONUNBUFFERED
      Value: '"1"'
    Name: env
  - CmdLine:
    - /usr/local/bin/pip install --no-cache-dir "cartography==${CARTOGRAPHY_VERSION}"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-generate-credentials.py
    - /cartography/docker-generate-credentials.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /cartography/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /cartography/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /cartography/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"William Jackson <william@subtlecoolness.com>"'
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/williamjacksn/docker-cartography"'
    - Key: org.opencontainers.image.title
      Value: '"Cartography"'
    - Key: org.opencontainers.image.version
      Value: '"${CARTOGRAPHY_VERSION}"'
    Name: label
  From:
    Image: python:3.8.1-alpine3.11
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.8.1-alpine3.11
