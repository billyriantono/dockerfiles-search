MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10-alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/minio/minio
  - Name: workdir
    Path: /go/src/github.com/minio/minio
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -d github.com/minio/minio
    Name: run
    PrependShell: true
  - CmdLine:
    - go install -ldflags "$(go run buildscripts/gen-ldflags.go)"
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10-alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10-alpine as build
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: MINIO_UPDATE
      Value: "off"
    Name: env
  - Env:
    - Key: MINIO_ACCESS_KEY_FILE
      Value: access_key
    Name: env
  - Env:
    - Key: MINIO_SECRET_KEY_FILE
      Value: secret_key
    Name: env
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/bin/minio
    - /usr/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerscripts/docker-entrypoint.sh
    - dockerscripts/healthcheck.sh
    - /usr/bin/
  - CmdLine:
    - 'apk add --no-cache ca-certificates curl &&     echo ''hosts: files mdns4_minimal
      [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - Name: volume
    Volumes:
    - /data
  - Health:
      Interval: 30000000000
      Test:
      - CMD-SHELL
      - /usr/bin/healthcheck.sh
      Timeout: 5000000000
    Name: healthcheck
  - CmdLine:
    - /usr/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - minio
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
