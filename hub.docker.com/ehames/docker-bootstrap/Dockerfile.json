{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Key": "compose_version",
          "Name": "arg",
          "Value": "1.8.0"
        },
        {
          "CmdLine": [
            "apk --no-cache add python py2-pip git \u0026\u0026    git clone --branch ${compose_version} https://github.com/docker/compose.git /code/compose \u0026\u0026    cd /code/compose \u0026\u0026    pip --no-cache-dir install -r requirements.txt -r requirements-dev.txt pyinstaller==3.1.1 \u0026\u0026    git rev-parse --short HEAD \u003e compose/GITSHA \u0026\u0026    ln -s /lib /lib64 \u0026\u0026 ln -s /lib/libc.musl-x86_64.so.1 ldd \u0026\u0026 ln -s /lib/ld-musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2 \u0026\u0026     pyinstaller docker-compose.spec \u0026\u0026    unlink /lib/ld-linux-x86-64.so.2 /lib64 ldd ||true \u0026\u0026    mv dist/docker-compose /usr/local/bin/docker-compose \u0026\u0026    pip freeze | xargs pip uninstall -y \u0026\u0026    apk del python py-pip git \u0026\u0026    rm -rf /code /usr/lib/python2.7/ /root/.cache /var/cache/apk/* \u0026\u0026    chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-compose"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}