{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "spacemacs/emacs25:develop",
      "SourceCode": "FROM spacemacs/emacs25:develop",
      "Platform": "",
      "From": {
        "Image": "spacemacs/emacs25:develop"
      },
      "Commands": [
        {
          "CmdLine": [
            "rm /etc/dpkg/dpkg.cfg.d/excludes   \u0026\u0026 apt-get update   \u0026\u0026 dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-get install -y --reinstall   \u0026\u0026  rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install   dstat   build-essential   gcc-8   g++-8   git   man-db   ncurses-dev   ninja-build   python   python-dev   python3   python3-dev   python3-venv   rsync   tig   tmux   tree   virtualenv   wget   xclip   zlib1g-dev   apt-transport-https   ca-certificates   curl   gnupg-agent   software-properties-common   cifs-utils   iputils-ping   \u0026\u0026 curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg \u003e /tmp/dkey; apt-key add /tmp/dkey   \u0026\u0026 add-apt-repository   \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")   $(lsb_release -cs)   stable\"   \u0026\u0026 apt-get update   \u0026\u0026 apt-get -y install docker-ce=18.06.1~ce~3-0~ubuntu   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "cmake_package",
          "Name": "arg",
          "Value": "cmake-3.12.4-Linux-x86_64"
        },
        {
          "Key": "cmake_version",
          "Name": "arg",
          "Value": "v3.12"
        },
        {
          "CmdLine": [
            "wget https://cmake.org/files/${cmake_version}/${cmake_package}.sh -P /tmp     \u0026\u0026 chmod u+x /tmp/${cmake_package}.sh     \u0026\u0026 /tmp/${cmake_package}.sh --skip-license --prefix=/usr     \u0026\u0026 rm /tmp/${cmake_package}.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "llvm_version",
          "Name": "arg",
          "Value": "7.0.0"
        },
        {
          "Key": "llvm_package",
          "Name": "arg",
          "Value": "clang+llvm-${llvm_version}-x86_64-linux-gnu-ubuntu-16.04"
        },
        {
          "CmdLine": [
            "wget http://releases.llvm.org/${llvm_version}/${llvm_package}.tar.xz -P /tmp     \u0026\u0026 tar -xf /tmp/${llvm_package}.tar.xz --strip 1 --directory /usr     \u0026\u0026 rm /tmp/${llvm_package}.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 --recursive https://github.com/MaskRay/ccls /tmp/ccls     \u0026\u0026 cmake -H/tmp/ccls              -B/tmp/ccls/build/Release              -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/usr              -DCMAKE_CXX_COMPILER=clang++              -DCMAKE_C_COMPILER=clang              -DSYSTEM_CLANG=ON              -GNinja     \u0026\u0026 cmake --build /tmp/ccls/build/Release -- install     \u0026\u0026 rm -rf /tmp/ccls"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "python_packages",
          "Name": "arg",
          "Value": "\"pandas numpy scipy jupyter numba\""
        },
        {
          "CmdLine": [
            "virtualenv \"${UHOME}/py2\"     \u0026\u0026 ${UHOME}/py2/bin/pip install -U pip twine wheel     \u0026\u0026 ${UHOME}/py2/bin/pip install ${python_packages}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m venv \"${UHOME}/py3\"     \u0026\u0026 ${UHOME}/py3/bin/pip install -U pip twine wheel     \u0026\u0026 ${UHOME}/py3/bin/pip install ${python_packages}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /mnt/storage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spacemacs.d",
            "\"${UHOME}/.spacemacs.d\""
          ]
        },
        {
          "CmdLine": [
            "rm \"${UHOME}/.spacemacs\" \"${UHOME}/.spacemacs.d/.spacemacs.env\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash",
            "-c",
            "ln -s /home/emacs/.emacs.d -rt $UHOME 2\u003e /dev/null; emacs; /bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}