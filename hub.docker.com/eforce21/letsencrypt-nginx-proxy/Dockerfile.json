{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jwilder/nginx-proxy:0.6.0",
      "SourceCode": "FROM jwilder/nginx-proxy:0.6.0",
      "Platform": "",
      "From": {
        "Image": "jwilder/nginx-proxy:0.6.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YES_FLAG",
              "Value": "-y"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -fy -o Dpkg::Options::=\"--force-confnew\" --force-yes -fuy dist-upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends -y git cron vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "systemctl enable cron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 mkdir certbot \u0026\u0026 cd certbot \u0026\u0026 wget https://dl.eff.org/certbot-auto \u0026\u0026 chmod a+x ./certbot-auto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/certbot/certbot-auto certonly || exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /etc/letsencrypt/accounts/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_GEN_VERSION",
              "Value": "0.7.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  \u0026\u0026 tar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz  \u0026\u0026 rm docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/letsencrypt/live"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/letsencrypt/archive"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc",
            "/etc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ssl.tmpl",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "createSSL.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /createSSL.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Procfile",
            "/app/Procfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cronfile",
            "/app/cronfile"
          ]
        },
        {
          "CmdLine": [
            "crontab /app/cronfile"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}