MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpkgconf \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz \t\topenssl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - "set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; \t[ ! -d /var/www/html ]; \tmkdir
      -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E
        1729F83938DA44E27BA0F4D3DBDB397470D12172
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.1.29
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://www.php.net/get/php-7.1.29.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://www.php.net/get/php-7.1.29.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"b9a9b094687edc2d9c9553d5531e38e249b569127cf3b32fe1c84280509746fb"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -xe; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t; \t\tmkdir
      -p /usr/src; \tcd /usr/src; \t\tcurl -fSL \"$PHP_URL\" -o php.tar.xz; \t\tif
      [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fSL \"$PHP_ASC_URL\"
      -o php.tar.xz.asc; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\tcommand -v
      gpgconf > /dev/null && gpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi;
      \t\tapk del --no-network .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcoreutils
      \t\tcurl-dev \t\tlibedit-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev
      \t\tlibpng-dev \t\tjpeg-dev \t\tfreetype-dev \t\tbzip2-dev \t\tlibxslt-dev \t\tgettext-dev
      \t\ticu-dev \t\topenldap-dev \t\tlibmcrypt-dev \t\tlibzip-dev \t\tlibwebp-dev
      \t\trabbitmq-c-dev \t\t&& export CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"
      \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t&& docker-php-source extract \t&& cd /usr/src/php
      \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure
      \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t\t\t\t--enable-option-checking=fatal \t\t\t\t--with-mhash \t\t\t\t--enable-ftp
      \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl \t\t--with-libedit
      \t\t--with-openssl \t\t--with-zlib \t\t--enable-sockets \t\t--enable-calendar
      \t\t--with-ldap \t\t--with-freetype-dir \t\t--with-jpeg-dir \t\t--with-png-dir
      \t\t--with-gd \t\t--with-mysqli \t\t--with-pdo-mysql=mysqlnd \t\t--enable-shmop
      \t\t--enable-bcmath \t\t--enable-sysvmsg \t\t--enable-sysvsem \t\t--enable-sysvshm
      \t\t--with-mcrypt \t\t--enable-pcntl \t\t--enable-zip \t\t--with-bz2 \t\t--enable-soap
      \t\t--enable-exif \t\t--enable-intl \t\t--with-gettext \t\t--with-xsl \t\t--with-xmlrpc
      \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-gnu' && echo '--without-pcre-jit')
      \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t&& make -j \"$(nproc)\" \t&& find -type
      f -name '*.a' -delete \t&& make install \t&& { find /usr/local/bin /usr/local/sbin
      -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \t&& make clean
      \t\t&& cp -v php.ini-* \"$PHP_INI_DIR/\" \t\t&& apk add nghttp2-dev librdkafka-dev
      \t&& cd /tmp \t&& curl -fSL \"https://github.com/ImageMagick/ImageMagick/archive/7.0.8-43.tar.gz\"
      -o ImageMagick-7.0.8-43.tar.gz \t&& tar zxf ImageMagick-7.0.8-43.tar.gz \t&&
      cd ImageMagick-7.0.8-43 \t&& ./configure --disable-dependency-tracking \t&&
      make && make install \t&& cd /tmp \t&& curl -fSL \"http://pecl.php.net/get/swoole-4.3.3.tgz\"
      -o swoole-4.3.3.tgz \t&& curl -fSL \"http://pecl.php.net/get/redis-4.3.0.tgz\"
      -o redis-4.3.0.tgz \t&& curl -fSL \"http://pecl.php.net/get/mongodb-1.5.3.tgz\"
      -o mongodb-1.5.3.tgz \t&& curl -fSL \"http://pecl.php.net/get/rdkafka-3.1.0.tgz\"
      -o rdkafka-3.1.0.tgz \t&& curl -fSL \"http://pecl.php.net/get/imagick-3.4.4.tgz\"
      -o imagick-3.4.4.tgz \t&& curl -fSL \"http://pecl.php.net/get/amqp-1.9.4.tgz\"
      -o amqp-1.9.4.tgz \t&& tar zxf swoole-4.3.3.tgz && cd swoole-4.3.3 \t&& phpize
      && ./configure --enable-openssl --enable-http2 --enable-sockets --enable-mysqlnd
      && make && make install \t&& cd /tmp && tar zxf redis-4.3.0.tgz && cd redis-4.3.0
      \t&& phpize && ./configure && make && make install \t&& cd /tmp && tar zxf mongodb-1.5.3.tgz
      && cd mongodb-1.5.3 \t&& phpize && ./configure && make && make install \t&&
      cd /tmp && tar zxf rdkafka-3.1.0.tgz && cd rdkafka-3.1.0 \t&& phpize && ./configure
      && make && make install \t&& cd /tmp && tar zxf imagick-3.4.4.tgz && cd imagick-3.4.4
      \t&& phpize && ./configure && make && make install \t&& cd /tmp && tar zxf amqp-1.9.4.tgz
      && cd amqp-1.9.4 \t&& phpize && ./configure && make && make install \t&& cd
      /tmp \t&& rm -rf /tmp/swoole* \t\t/tmp/redis* \t\t/tmp/mongodb* \t\t/tmp/rdkafka*
      \t\t/tmp/ImageMagick* \t\t/tmp/imagick* \t\t/tmp/amqp* \t&& apk del nghttp2-dev
      librdkafka-dev \t&& echo \"extension=swoole.so\" > /usr/local/etc/php/conf.d/docker-php-ext-swoole.ini
      \t&& echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/docker-php-ext-redis.ini
      \t&& echo \"extension=rdkafka.so\" > /usr/local/etc/php/conf.d/docker-php-ext-rdkafka.ini
      \t&& echo \"extension=mongodb.so\" > /usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini
      \t&& echo \"extension=imagick.so\" > /usr/local/etc/php/conf.d/docker-php-ext-imagick.ini
      \t&& echo \"extension=amqp.so\" > /usr/local/etc/php/conf.d/docker-php-ext-amqp.ini
      \t&& cd / \t&& docker-php-source delete \t\t&& runDeps=\"$( \t\tscanelf --needed
      --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t|
      sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next
      } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache $runDeps \t\t&& apk del
      --no-network .build-deps \t\t&& pecl update-channels \t&& rm -rf /tmp/pear ~/.pearrc"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php
    - -a
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
