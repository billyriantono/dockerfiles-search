MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y         autoconf         file         g++         gcc         libc-dev         make         pkg-config         re2c     --no-install-recommends
      && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         ca-certificates         curl         libedit2         libsqlite3-0         libxml2     --no-install-recommends
      && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=root --with-fpm-group=root
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.5
    Name: env
  - Env:
    - Key: PHP_FILENAME
      Value: php-7.0.5.tar.xz
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: c41f1a03c24119c0dd9b741cdb67880486e64349fc33527767f6dc28d3803abb
    Name: env
  - CmdLine:
    - set -xe     && buildDeps="         $PHP_EXTRA_BUILD_DEPS         libcurl4-openssl-dev         libedit-dev         libsqlite3-dev         libssl-dev         libxml2-dev         xz-utils     "     &&
      apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm
      -rf /var/lib/apt/lists/*     && curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror"
      -o "$PHP_FILENAME"     && echo "$PHP_SHA256 *$PHP_FILENAME" | sha256sum -c -     &&
      curl -fSL "http://php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o "$PHP_FILENAME.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && for key in $GPG_KEYS; do         gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";     done     && gpg
      --batch --verify "$PHP_FILENAME.asc" "$PHP_FILENAME"     && rm -r "$GNUPGHOME"
      "$PHP_FILENAME.asc"     && mkdir -p /usr/src/php     && tar -xf "$PHP_FILENAME"
      -C /usr/src/php --strip-components=1     && rm "$PHP_FILENAME"     && cd /usr/src/php     &&
      ./configure         --with-config-file-path="$PHP_INI_DIR"         --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"         $PHP_EXTRA_CONFIGURE_ARGS         --disable-cgi         --enable-mysqlnd         --enable-mbstring         --with-curl         --with-libedit         --with-openssl         --with-zlib     &&
      make -j"$(nproc)"     && make install     && { find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; }     && make clean     &&
      apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      -o APT::AutoRemove::SuggestsImportant=false $buildDeps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - set -ex     && cd /usr/local/etc     && if [ -d php-fpm.d ]; then         sed
      's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;         cp
      php-fpm.d/www.conf.default php-fpm.d/www.conf;     else         mkdir php-fpm.d;         cp
      php-fpm.conf.default php-fpm.d/www.conf;         {             echo '[global]';             echo
      'include=etc/php-fpm.d/*.conf';         } | tee php-fpm.conf;     fi     &&
      {         echo '[global]';         echo 'error_log = /proc/self/fd/2';         echo;         echo
      '[www]';         echo '; if we send this to /proc/self/fd/1, it never appears';         echo
      'access.log = /proc/self/fd/2';         echo;         echo 'clear_env = no';         echo;         echo
      '; Ensure worker stdout and stderr are sent to the main error log.';         echo
      'catch_workers_output = yes';     } | tee php-fpm.d/docker.conf     && {         echo
      '[global]';         echo 'daemonize = no';         echo;         echo '[www]';         echo
      'listen = [::]:9000';     } | tee php-fpm.d/zz-docker.conf
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - apt-get update && apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         libmysqlclient-dev         libxml2-dev         libfontconfig     &&
      docker-php-ext-install iconv mcrypt     && docker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/     && docker-php-ext-install gd     && docker-php-ext-install
      mbstring     && docker-php-ext-install mysqli pdo pdo_mysql     && docker-php-ext-install
      pcntl     && docker-php-ext-install soap
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | pecl install xdebug     && echo "zend_extension=$(find /usr/local/lib/php/extensions/
      -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_enable=1"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_connect_back=1"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_autostart=0"
      >> /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php.ini
    - /usr/local/etc/php/
  - CmdLine:
    - php-fpm
    - -R
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
