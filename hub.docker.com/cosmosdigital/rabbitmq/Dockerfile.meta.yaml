MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - CmdLine:
    - addgroup -S rabbitmq && adduser -S -h /var/lib/rabbitmq -G rabbitmq rabbitmq
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache 'su-exec>=0.2'
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache \t\tbash \t\tprocps \t\terlang-asn1 \t\terlang-hipe \t\terlang-crypto
      \t\terlang-eldap \t\terlang-inets \t\terlang-mnesia \t\terlang \t\terlang-os-mon
      \t\terlang-public-key \t\terlang-sasl \t\terlang-ssl \t\terlang-syntax-tools
      \t\terlang-xmerl"
    Name: run
    PrependShell: true
  - Env:
    - Key: RABBITMQ_LOGS
      Value: '-'
    - Key: RABBITMQ_SASL_LOGS
      Value: '-'
    Name: env
  - Env:
    - Key: RABBITMQ_HOME
      Value: /opt/rabbitmq
    Name: env
  - Env:
    - Key: PATH
      Value: $RABBITMQ_HOME/sbin:$PATH
    Name: env
  - Env:
    - Key: RABBITMQ_GPG_KEY
      Value: 0A9AF2115F4687BD29803A206B73A36E6026DFCA
    Name: env
  - Env:
    - Key: RABBITMQ_VERSION
      Value: 3.7.8
    Name: env
  - Env:
    - Key: RABBITMQ_GITHUB_TAG
      Value: v3.7.8
    Name: env
  - CmdLine:
    - "set -ex; \t\tapk add --no-cache --virtual .build-deps \t\tca-certificates \t\tgnupg
      \t\tlibressl \t\twget \t\txz \t; \t\twget -O rabbitmq-server.tar.xz.asc \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz.asc\";
      \twget -O rabbitmq-server.tar.xz     \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz\";
      \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$RABBITMQ_GPG_KEY\"; \tgpg --batch --verify rabbitmq-server.tar.xz.asc
      rabbitmq-server.tar.xz; \tcommand -v gpgconf && gpgconf --kill all || :; \trm
      -rf \"$GNUPGHOME\"; \t\tmkdir -p \"$RABBITMQ_HOME\"; \ttar \t\t--extract \t\t--verbose
      \t\t--file rabbitmq-server.tar.xz \t\t--directory \"$RABBITMQ_HOME\" \t\t--strip-components
      1 \t; \trm -f rabbitmq-server.tar.xz*; \t\tgrep -qE '^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'
      \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\"; \tsed -ri 's!^(SYS_PREFIX=).*$!\\1!g'
      \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\"; \tgrep -qE '^SYS_PREFIX=$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\";
      \t\tapk del .build-deps"
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /var/lib/rabbitmq
    Name: env
  - CmdLine:
    - "mkdir -p /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq /tmp/rabbitmq-ssl
      \t&& chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq
      /tmp/rabbitmq-ssl \t&& chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq
      /tmp/rabbitmq-ssl"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/rabbitmq
  - CmdLine:
    - ln -sf /var/lib/rabbitmq/.erlang.cookie /root/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf "$RABBITMQ_HOME/plugins" /plugins
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod 777 /usr/local/bin/docker-entrypoint.sh     && ln -s /usr/local/bin/docker-entrypoint.sh
      /
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "25672"
    - "4369"
    - "5671"
    - "5672"
  - CmdLine:
    - rabbitmq-server
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
