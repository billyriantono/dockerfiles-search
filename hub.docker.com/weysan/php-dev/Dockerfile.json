{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "a2enmod vhost_alias"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pear config-set php_ini /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl config-set php_ini /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \topenssl \tmysql-client         libapache2-mod-fcgid \tlibfreetype6-dev \tlibjpeg62-turbo-dev \tlibmcrypt-dev \tlibpng-dev \tsendmail \tgit \tlibmemcached-dev \tzlib1g-dev \t\u0026\u0026 pecl install redis memcached xdebug mcrypt-1.0.1         \u0026\u0026 docker-php-ext-install mysqli        \t\u0026\u0026 docker-php-ext-install opcache  \t\u0026\u0026 docker-php-ext-install pdo_mysql         \u0026\u0026 docker-php-ext-install mbstring \t\u0026\u0026 docker-php-ext-install -j$(nproc) iconv \t\u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/         \u0026\u0026 docker-php-ext-install -j$(nproc) gd          \u0026\u0026 docker-php-ext-enable xdebug mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --branch php7 https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached   \u0026\u0026 cd /usr/src/php/ext/memcached   \u0026\u0026 docker-php-ext-configure memcached   \u0026\u0026 docker-php-ext-install memcached   \u0026\u0026 docker-php-ext-install pcntl   \u0026\u0026 docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(     echo \"opcache.memory_consumption=128\";     echo \"opcache.interned_strings_buffer=8\";     echo \"opcache.max_accelerated_files=4000\";     echo \"opcache.revalidate_freq=60\";     echo \"opcache.fast_shutdown=1\";     echo \"opcache.enable_cli=1\";     ) \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/apache/conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ssl/server.crt",
            "/usr/local/apache/conf/ssl.crt"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ssl/server.key",
            "/usr/local/apache/conf/ssl.key"
          ]
        },
        {
          "CmdLine": [
            "service apache2 restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y                     zip                     unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php composer-setup.php --install-dir=/usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/bin/composer.phar /usr/local/bin/composer \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require phpunit/phpunit     \u0026\u0026 ln -s /root/.composer/vendor/bin/phpunit /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require phpmetrics/phpmetrics     \u0026\u0026 ln -s /root/.composer/vendor/bin/phpmetrics /usr/local/bin/phpmetrics"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require squizlabs/php_codesniffer     \u0026\u0026 ln -s /root/.composer/vendor/bin/phpcs /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        }
      ]
    }
  ]
}