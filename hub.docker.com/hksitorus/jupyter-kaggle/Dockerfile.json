{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gcr.io/kaggle-images/python:v69",
      "SourceCode": "FROM gcr.io/kaggle-images/python:v69",
      "Platform": "",
      "From": {
        "Image": "gcr.io/kaggle-images/python:v69"
      },
      "Commands": [
        {
          "CmdLine": [
            "pip install     jupyterhub==1.0.0     notebook==6.0.0     jupyterlab==1.2.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install oauthenticator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     nodejs \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_OPTIONS",
              "Value": "--max-old-space-size=4096"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m strops"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g configurable-http-proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyterlab_sql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter serverextension enable jupyterlab_sql --py --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @jupyter-widgets/jupyterlab-manager@1.1 --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install plotlywidget@1.3.0 --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install jupyterlab-plotly@1.3.0 --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install jupyterlab-drawio --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter lab build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m hksitorus \u0026\u0026 useradd -m arifsolomon \u0026\u0026 useradd -m fchrulk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes basemap pyproj proj4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/matplotlib/basemap/master/lib/mpl_toolkits/basemap/data/epsg -O /opt/conda/share/proj/epsg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PROJ_LIB",
              "Value": "/opt/conda/share/proj/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install psycopg2 cx_Oracle PyMySQL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --unsafe-perm ijavascript \u0026\u0026 ijsinstall --install=global"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes -c bokeh jupyter_bokeh \u0026\u0026 jupyter labextension install @bokeh/jupyter_bokeh --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @mflevine/jupyterlab_html --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyterlab_latex \u0026\u0026 jupyter labextension install @jupyterlab/latex --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes -c pyviz holoviews bokeh \u0026\u0026 jupyter labextension install @pyviz/jupyterlab_pyviz --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes -c conda-forge ipyleaflet \u0026\u0026 jupyter labextension install jupyter-leaflet --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes -c conda-forge ipysheet \u0026\u0026 jupyter labextension install ipysheet --no-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter lab build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install intel-tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyspark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_SPARK_VERSION",
              "Value": "2.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_VERSION",
              "Value": "2.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget -q http://mirrors.ukfast.co.uk/sites/ftp.apache.org/spark/spark-${APACHE_SPARK_VERSION}/spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz \u0026\u0026     echo \"2E3A5C853B9F28C7D4525C0ADCB0D971B73AD47D5CCE138C85335B9F53A6519540D3923CB0B5CEE41E386E49AE8A409A51AB7194BA11A254E037A848D0C4A9E5 *spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz\" | sha512sum -c - \u0026\u0026     tar xzf spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz -C /usr/local --owner root --group root --no-same-owner \u0026\u0026     rm spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local \u0026\u0026 ln -s spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} spark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mesos.key",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get install --no-install-recommends -y gnupg \u0026\u0026     apt-key add /tmp/mesos.key \u0026\u0026     echo \"deb http://repos.mesosphere.io/ubuntu xenial main\" \u003e /etc/apt/sources.list.d/mesosphere.list \u0026\u0026     apt-get -y update \u0026\u0026     apt-get --no-install-recommends -y install mesos=1.2\\* \u0026\u0026     apt-get purge --auto-remove -y gnupg \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get install --no-install-recommends -y openjdk-8-jre-headless ca-certificates-java \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.7-src.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MESOS_NATIVE_LIBRARY",
              "Value": "/usr/local/lib/libmesos.so"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_OPTS",
              "Value": "--driver-java-options=-Xms4096M --driver-java-options=-Xmx32768M --driver-java-options=-Dlog4j.logLevel=info"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "jupyterhub",
            "-f",
            "jupyterhub_config.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}