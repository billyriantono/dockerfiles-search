{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Fred Tingaud \u003cftingaud@hotmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install    git    cmake    clang-3.8    llvm-3.8    libfreetype6-dev    flex    bison    binutils-dev    zlib1g-dev    libiberty-dev    libelf-dev    gcc    subversion    \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "gcc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "g++"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/src/     \u0026\u0026 git clone https://github.com/torvalds/linux.git     \u0026\u0026 cd linux     \u0026\u0026 git checkout tags/v4.9     \u0026\u0026 cd tools/perf     \u0026\u0026 make     \u0026\u0026 cp perf /usr/bin     \u0026\u0026 cd /usr/src     \u0026\u0026 rm -rf linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "clang-3.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "clang++-3.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/src/     \u0026\u0026 git clone https://github.com/google/benchmark.git     \u0026\u0026 mkdir -p /usr/src/benchmark/build/     \u0026\u0026 cd /usr/src/benchmark/build/     \u0026\u0026 cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true -DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON -DLLVMAR_EXECUTABLE=/usr/lib/llvm-3.8/bin/llvm-ar -DLLVMNM_EXECUTABLE=/usr/lib/llvm-3.8/bin/llvm-nm -DLLVMRANLIB_EXECUTABLE=/usr/lib/llvm-3.8/bin/llvm-ranlib ..     \u0026\u0026 make -j4     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "svn checkout https://github.com/ericniebler/range-v3/tags/0.3.0/include /usr/include"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y git     gcc     cmake     flex     bison     binutils-dev     zlib1g-dev     libiberty-dev     subversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /sbin/nologin -N -u 1000 builder"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./annotate",
            "/home/builder/annotate"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./build",
            "/home/builder/build"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./run",
            "/home/builder/run"
          ]
        },
        {
          "Name": "user",
          "User": "builder"
        },
        {
          "Name": "workdir",
          "Path": "/home/builder"
        }
      ]
    }
  ]
}