MetaArgs: null
Stages:
- BaseName: frankwolf/32bit-ubuntu:xenial
  Commands:
  - Maintainer: '"Frank Wolf <FrankWolf@gmx.de>"'
    Name: maintainer
  - Labels:
    - Key: Maintainer
      Value: '"Frank Wolf <FrankWolf@gmx.de>"'
    - Key: Name
      Value: '"Qt 4 embedded on x86"'
    - Key: Version
      Value: 0.1.0
    Name: label
  - Name: shell
    Shell:
    - /usr/bin/linux32
    - sh
    - -c
  - Key: QT_VERSION
    Name: arg
    Value: 4.8.6
  - Key: QT_CONFIGURE_OPTIONS
    Name: arg
    Value: ""
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - qt/
    - /opt
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends       ca-certificates       build-essential       gdbserver       liblog4cxx-dev       patch       qt4-dev-tools       wget     &&
      apt-get build-dep -y       qt4-x11     && rm -rf /var/lib/apt/lists/*     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - export QT_MAJOR_MINOR=$(echo $QT_VERSION | cut -d'.' -f 1,2)     && if $(wget
      -q -S --spider https://download.qt.io/archive/qt/${QT_MAJOR_MINOR}/${QT_VERSION}/qt-everywhere-opensource-src-${QT_VERSION}.tar.gz
      > /dev/null 2>&1); then          wget https://download.qt.io/archive/qt/${QT_MAJOR_MINOR}/${QT_VERSION}/qt-everywhere-opensource-src-${QT_VERSION}.tar.gz;        else          wget
      https://download.qt.io/archive/qt/${QT_MAJOR_MINOR}/qt-everywhere-opensource-src-${QT_VERSION}.tar.gz;        fi     &&
      tar -xzf qt-everywhere-opensource-src-${QT_VERSION}.tar.gz     && rm qt-everywhere-opensource-src-${QT_VERSION}.tar.gz     &&
      chmod +x *.sh     && if [ -x ./qt-everywhere-opensource-src-${QT_VERSION}-apply-patches.sh
      ]; then          ./qt-everywhere-opensource-src-${QT_VERSION}-apply-patches.sh;        fi     &&
      cd qt-everywhere-opensource-src-${QT_VERSION}     && ../build-qt.sh ${QT_VERSION}
    Name: run
    PrependShell: true
  - Key: USER
    Name: arg
    Value: user
  - Key: UID
    Name: arg
    Value: "1000"
  - Key: GID
    Name: arg
    Value: "1000"
  - Env:
    - Key: USER
      Value: $USER
    Name: env
  - CmdLine:
    - mkdir /home/$USER     && groupadd -r $USER -g $GID     && useradd -u $UID -r
      -g $USER -d /home/$USER -s /sbin/nologin -c "Docker User" $USER     && chown
      -R $USER:$USER /home/$USER
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - Env:
    - Key: QVFB
      Value: ""
    Name: env
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.d/*
    - /docker-entrypoint.d/
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: frankwolf/32bit-ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM frankwolf/32bit-ubuntu:xenial
