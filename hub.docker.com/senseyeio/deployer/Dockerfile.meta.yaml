MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Maintainer: Mike Jewell
    Name: maintainer
  - CmdLine:
    - apk update
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add make && apk add curl && apk add openssh
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add git
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apk -Uuv add groff less python3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli docker-compose==1.22.0 boto3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install requests pyyaml giturlparse
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --purge -v del py-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen C.UTF-8 || true
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex   && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/
      | grep -o -e ''docker-[.0-9]*-ce\.tgz'' | sort -r | head -n 1)   && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}"   &&
      echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail
      --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}"   && ls -lha /tmp/docker.tgz   &&
      tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf
      /tmp/docker /tmp/docker.tgz   && which docker   && (docker version || true)'
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - 'adduser -D deployer;                                                   chgrp
      -R deployer /usr/local;                                          find /usr/local
      -type d | xargs chmod g+w;                            echo "deployer ALL=(ALL)
      NOPASSWD: ALL" >> /etc/sudoers.d/default;     chmod 0440 /etc/sudoers.d/default'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - create_repo.sh
    - /home/deployer/create_repo.sh
  - CmdLine:
    - chmod +x /home/deployer/create_repo.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - create_repo.py
    - /home/deployer/create_repo.py
  - CmdLine:
    - chmod +x /home/deployer/create_repo.py
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - deploy_image.sh
    - /home/deployer/deploy_image.sh
  - CmdLine:
    - chmod +x /home/deployer/deploy_image.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - tag_and_push.sh
    - /home/deployer/tag_and_push.sh
  - CmdLine:
    - chmod +x /home/deployer/tag_and_push.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sfs_update.sh
    - /home/deployer/sfs_update.sh
  - CmdLine:
    - chmod +x /home/deployer/sfs_update.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sfs_update.py
    - /home/deployer/sfs_update.py
  - CmdLine:
    - chmod +x /home/deployer/sfs_update.py
    Name: run
    PrependShell: true
  - Name: user
    User: deployer
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
