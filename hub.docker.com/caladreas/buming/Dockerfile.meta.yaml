MetaArgs: null
Stages:
- As: build
  BaseName: openjdk:10-jdk
  Commands:
  - CmdLine:
    - mkdir -p /usr/src/mods/jars
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/mods/compiled
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - javac -Xlint:unchecked -d /usr/src/mods/compiled --module-source-path /usr/src/src
      $(find src -name "*.java")
    Name: run
    PrependShell: true
  - CmdLine:
    - jar --create --file /usr/src/mods/jars/joostvdg.dui.logging.jar --module-version
      1.0 -C /usr/src/mods/compiled/joostvdg.dui.logging .
    Name: run
    PrependShell: true
  - CmdLine:
    - jar --create --file /usr/src/mods/jars/joostvdg.dui.api.jar --module-version
      1.0 -C /usr/src/mods/compiled/joostvdg.dui.api .
    Name: run
    PrependShell: true
  - CmdLine:
    - jar --create --file /usr/src/mods/jars/joostvdg.dui.client.jar --module-version
      1.0 -C /usr/src/mods/compiled/joostvdg.dui.client .
    Name: run
    PrependShell: true
  - CmdLine:
    - jar --create --file /usr/src/mods/jars/joostvdg.dui.server.jar --module-version
      1.0  -e com.github.joostvdg.dui.server.cli.DockerApp    -C /usr/src/mods/compiled/joostvdg.dui.server
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/bin/dui-image
    Name: run
    PrependShell: true
  - CmdLine:
    - jlink --module-path /usr/src/mods/jars/:/${JAVA_HOME}/jmods     --add-modules
      joostvdg.dui.api     --add-modules joostvdg.dui.logging     --add-modules joostvdg.dui.server     --add-modules
      joostvdg.dui.client     --launcher dui=joostvdg.dui.server     --output /usr/bin/dui-image
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -lath /usr/bin/dui-image
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -lath /usr/bin/dui-image
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/dui-image/bin/java --list-modules
    Name: run
    PrependShell: true
  From:
    Image: openjdk:10-jdk
  Name: build
  Platform: ""
  SourceCode: FROM openjdk:10-jdk AS build
- BaseName: debian:stable-slim
  Commands:
  - Labels:
    - Key: authors
      Value: '"Joost van der Griendt <joostvdg@gmail.com>"'
    Name: label
  - Labels:
    - Key: version
      Value: '"0.3.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Docker image for playing with java applications in a concurrent, parallel
        and distributed manor."'
    Name: label
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - -vv
    - -g
    - --
    - /usr/bin/dui/bin/dui
    - -XX:+UseCGroupMemoryLimitForHeap
    - -XX:+UnlockExperimentalVMOptions
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: DATE_CHANGED
      Value: '"20180120-1525"'
    Name: env
  - Health:
      Interval: 12000000000
      StartPeriod: 12000000000
      Test:
      - CMD-SHELL
      - wget --server-response http://localhost:8888 -O ip-current 2>&1| grep -c 'HTTP/1.1
        200 OK'
      Timeout: 20000000000
    Name: healthcheck
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y psmisc=22.* wget=1.*
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/bin/dui-image/
    - /usr/bin/dui
  - CmdLine:
    - /usr/bin/dui/bin/java --list-modules
    Name: run
    PrependShell: true
  From:
    Image: debian:stable-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stable-slim
