MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10
  Commands:
  - Name: workdir
    Path: /src
  - Env:
    - Key: LAST_UPDATE
      Value: "20180209"
    Name: env
  - CmdLine:
    - go get -v github.com/gorilla/mux/...
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -v gopkg.in/mgo.v2/bson
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -v gopkg.in/mgo.v2
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /src
  - CmdLine:
    - go test --cover ./...
    Name: run
    PrependShell: true
  - CmdLine:
    - go build -v -tags netgo -o go-travel
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10 AS build
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: LAST_UPDATE
      Value: "20180506"
    Name: env
  - Env:
    - Key: DB
      Value: db
    Name: env
  - Labels:
    - Key: authors
      Value: '"Joost van der Griendt <joostvdg@gmail.com>"'
    Name: label
  - Labels:
    - Key: version
      Value: '"0.1.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Docker image for Go! Travel!"'
    Name: label
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - go-travel
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 5000000000
      StartPeriod: 3000000000
      Test:
      - CMD-SHELL
      - wget -qO- "http://localhost:8888/trips"
      Timeout: 5000000000
    Name: healthcheck
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /src/go-travel
    - /usr/local/bin/go-travel
  - CmdLine:
    - chmod +x /usr/local/bin/go-travel
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
