MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tca-certificates
      curl wget \t\tgnupg2 dirmngr \t\t\t\tgit openssh-client \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.13.0
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\"
      \t&& wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5 \t&& gpg --batch --verify
      /usr/local/bin/tini.asc /usr/local/bin/tini \t&& rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc
      \t&& chmod +x /usr/local/bin/tini \t&& tini -h"
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_GPG_KEY
      Value: 150FDE3F7787E7D11EF4E12A9B7D32F2D50582E6
    Name: env
  - CmdLine:
    - "export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$JENKINS_GPG_KEY\" \t&& gpg --export \"$JENKINS_GPG_KEY\" | apt-key
      add - \t&& rm -r \"$GNUPGHOME\""
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://pkg.jenkins-ci.org/debian binary/' > /etc/apt/sources.list.d/jenkins.list
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_VERSION
      Value: "2.50"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tjenkins=${JENKINS_VERSION}
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: /var/lib/jenkins
    Name: env
  - CmdLine:
    - mkdir -p "$JENKINS_HOME" && chown -R jenkins:jenkins "$JENKINS_HOME"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $JENKINS_HOME
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - java
    - -jar
    - /usr/share/jenkins/jenkins.war
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
