{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get --no-install-recommends --yes install         ca-certificates         cmake         g++         make         pkg-config         graphviz         doxygen         git         curl         libtool-bin         autoconf         automake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local"
        },
        {
          "Key": "BOOST_VERSION",
          "Name": "arg",
          "Value": "1_66_0"
        },
        {
          "Key": "BOOST_VERSION_DOT",
          "Name": "arg",
          "Value": "1.66.0"
        },
        {
          "Key": "BOOST_HASH",
          "Name": "arg",
          "Value": "5721818253e6a0989583192f96782c4a98eb6204965316df9f5ad75819225ca9"
        },
        {
          "CmdLine": [
            "curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2     \u0026\u0026 echo \"${BOOST_HASH} boost_${BOOST_VERSION}.tar.bz2\" | sha256sum -c     \u0026\u0026 tar -xvf boost_${BOOST_VERSION}.tar.bz2     \u0026\u0026 cd boost_${BOOST_VERSION}     \u0026\u0026 ./bootstrap.sh     \u0026\u0026 ./b2 --build-type=minimal link=static runtime-link=static --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization --with-system --with-thread --with-locale threading=multi threadapi=pthread cflags=\"-fPIC\" cxxflags=\"-fPIC\" stage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BOOST_ROOT",
              "Value": "/usr/local/boost_${BOOST_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "OPENSSL_VERSION",
          "Name": "arg",
          "Value": "1.0.2n"
        },
        {
          "Key": "OPENSSL_HASH",
          "Name": "arg",
          "Value": "370babb75f278c39e0c50e8c4e7493bc0f18db6867478341a832a982fd15a8fe"
        },
        {
          "CmdLine": [
            "curl -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz     \u0026\u0026 echo \"${OPENSSL_HASH} openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c     \u0026\u0026 tar -xzf openssl-${OPENSSL_VERSION}.tar.gz     \u0026\u0026 cd openssl-${OPENSSL_VERSION}     \u0026\u0026 ./Configure linux-x86_64 no-shared --static -fPIC     \u0026\u0026 make build_crypto build_ssl     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_ROOT_DIR",
              "Value": "/usr/local/openssl-${OPENSSL_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "ZMQ_VERSION",
          "Name": "arg",
          "Value": "v4.2.3"
        },
        {
          "Key": "ZMQ_HASH",
          "Name": "arg",
          "Value": "3226b8ebddd9c6c738ba42986822c26418a49afb"
        },
        {
          "CmdLine": [
            "git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION}     \u0026\u0026 cd libzmq     \u0026\u0026 test `git rev-parse HEAD` = ${ZMQ_HASH} || exit 1     \u0026\u0026 ./autogen.sh     \u0026\u0026 CFLAGS=\"-fPIC\" CXXFLAGS=\"-fPIC\" ./configure --enable-static --disable-shared     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CPPZMQ_HASH",
          "Name": "arg",
          "Value": "6aa3ab686e916cb0e62df7fa7d12e0b13ae9fae6"
        },
        {
          "CmdLine": [
            "git clone https://github.com/zeromq/cppzmq.git -b ${ZMQ_VERSION}     \u0026\u0026 cd cppzmq     \u0026\u0026 test `git rev-parse HEAD` = ${CPPZMQ_HASH} || exit 1     \u0026\u0026 mv *.hpp /usr/local/include"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "READLINE_VERSION",
          "Name": "arg",
          "Value": "7.0"
        },
        {
          "Key": "READLINE_HASH",
          "Name": "arg",
          "Value": "750d437185286f40a369e1e4f4764eda932b9459b5ec9a731628393dd3d32334"
        },
        {
          "CmdLine": [
            "curl -s -O https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz     \u0026\u0026 echo \"${READLINE_HASH} readline-${READLINE_VERSION}.tar.gz\" | sha256sum -c     \u0026\u0026 tar -xzf readline-${READLINE_VERSION}.tar.gz     \u0026\u0026 cd readline-${READLINE_VERSION}     \u0026\u0026 CFLAGS=\"-fPIC\" CXXFLAGS=\"-fPIC\" ./configure     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SODIUM_VERSION",
          "Name": "arg",
          "Value": "1.0.16"
        },
        {
          "Key": "SODIUM_HASH",
          "Name": "arg",
          "Value": "675149b9b8b66ff44152553fb3ebf9858128363d"
        },
        {
          "CmdLine": [
            "git clone https://github.com/jedisct1/libsodium.git -b ${SODIUM_VERSION}     \u0026\u0026 cd libsodium     \u0026\u0026 test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1     \u0026\u0026 ./autogen.sh     \u0026\u0026 CFLAGS=\"-fPIC\" CXXFLAGS=\"-fPIC\" ./configure     \u0026\u0026 make     \u0026\u0026 make check     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "Key": "NPROC",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "rm -rf build \u0026\u0026     if [ -z \"$NPROC\" ];then make -j$(nproc) release-static;else make -j$NPROC release-static;fi"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get --no-install-recommends --yes install ca-certificates \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/src/build/release/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.haven"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/wallet"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "17749"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "17750"
          ]
        },
        {
          "CmdLine": [
            "havend",
            "--p2p-bind-ip=0.0.0.0",
            "--p2p-bind-port=17749",
            "--rpc-bind-ip=0.0.0.0",
            "--rpc-bind-port=17750",
            "--non-interactive",
            "--confirm-external-bind"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}