MetaArgs: null
Stages:
- BaseName: elixir:1.9.4
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - CmdLine:
    - apt-get update && apt-get install tmux ripgrep git curl gcc g++ make inotify-tools
      ca-certificates -y --no-install-recommends     && curl -sL https://deb.nodesource.com/setup_12.x
      | bash -     && curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key
      add -     && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get update && apt-get install nodejs yarn -y --no-install-recommends     &&
      apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 1000 elixir &&     useradd -s /bin/bash -r -u 1000 -g elixir elixir
      &&     cp /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/elixir
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tmux/.tmux.conf
    - $HOME/.tmux.conf
  - CmdLine:
    - git clone https://github.com/elixir-lsp/elixir-ls.git $HOME/.elixir-ls &&     cd
      $HOME/.elixir-ls &&     mix local.hex --force && mix local.rebar --force &&     mix
      deps.get && mix compile && mix elixir_ls.release -o release
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nvim/*
    - $HOME/.config/nvim/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
    - /tmp/
  - CmdLine:
    - cd /tmp && tar -xf nvim-linux64.tar.gz &&     cp -a nvim-linux64/* /usr/local/
      &&     rm -rf /tmp/* &&     curl -fLo $HOME/.config/nvim/autoload/plug.vim --create-dirs
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim &&     nvim
      +PlugInstall +qall &&     nvim -c 'CocInstall -sync coc-elixir coc-json coc-html
      coc-emmet coc-tsserver|q' &&     ln -s /usr/local/bin/nvim /usr/local/bin/vim
      &&     ln -s /usr/local/bin/nvim /usr/local/bin/vi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/studio
    - /usr/local/bin/studio
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .bashrc
    - $HOME/.bashrc
  - CmdLine:
    - curl -sL https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
      -o $HOME/.git-prompt.sh &&     chmod +x $HOME/.git-prompt.sh &&     chmod +x
      /usr/local/bin/studio
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - chown -R elixir $HOME /src     && echo "source ~/.bashrc" >> $HOME/.bash_profile
    Name: run
    PrependShell: true
  - Name: user
    User: elixir
  - CmdLine:
    - iex
    Name: cmd
    PrependShell: false
  From:
    Image: elixir:1.9.4
  Name: ""
  Platform: ""
  SourceCode: FROM elixir:1.9.4
