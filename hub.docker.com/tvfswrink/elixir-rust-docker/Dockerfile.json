{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "erlang:20.1",
      "SourceCode": "FROM erlang:20.1",
      "Platform": "",
      "From": {
        "Image": "erlang:20.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ELIXIR_VERSION",
              "Value": "\"v1.5.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUST_VERSION",
              "Value": "\"1.22.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "\"8.x\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install        ca-certificates        curl        gcc        libc6-dev        -qqy        --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 ELIXIR_DOWNLOAD_URL=\"https://github.com/elixir-lang/elixir/archive/${ELIXIR_VERSION}.tar.gz\"     \u0026\u0026 ELIXIR_DOWNLOAD_SHA256=\"7317b7a9d3b5bef2b5cd56de738f2b37fd4111e24efbe71a3e39bea1b702ff6c\"     \u0026\u0026 curl -fSL -o elixir-src.tar.gz $ELIXIR_DOWNLOAD_URL     \u0026\u0026 echo \"$ELIXIR_DOWNLOAD_SHA256  elixir-src.tar.gz\" | sha256sum -c -     \u0026\u0026 mkdir -p /usr/local/src/elixir     \u0026\u0026 tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz     \u0026\u0026 rm elixir-src.tar.gz     \u0026\u0026 cd /usr/local/src/elixir     \u0026\u0026 make install clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "RUST_ARCHIVE=\"rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz\" \u0026\u0026     RUST_DOWNLOAD_URL=\"https://static.rust-lang.org/dist/$RUST_ARCHIVE\" \u0026\u0026     mkdir -p /rust     \u0026\u0026 cd /rust     \u0026\u0026 curl -fsOSL $RUST_DOWNLOAD_URL     \u0026\u0026 curl -s $RUST_DOWNLOAD_URL.sha256 | sha256sum -c -     \u0026\u0026 tar -C /rust -xzf $RUST_ARCHIVE --strip-components=1     \u0026\u0026 rm $RUST_ARCHIVE     \u0026\u0026 ./install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_DOWNLOAD_URL",
              "Value": "\"https://deb.nodesource.com/setup_$NODE_VERSION\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL $NODE_DOWNLOAD_URL | bash -     \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL \"https://get.docker.com\" | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install python-pip python-dev build-essential     \u0026\u0026 pip install --upgrade pip     \u0026\u0026 pip install --upgrade awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list     \u0026\u0026 curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install google-cloud-sdk     \u0026\u0026 apt-get -y install kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}