MetaArgs: null
Stages:
- As: builder
  BaseName: debian:jessie
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"golang-dev@googlegroups.com"'
    Name: label
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/go/bin:$GOPATH/bin:$PATH
    Name: env
  - Env:
    - Key: GOROOT_BOOTSTRAP
      Value: /usr/local/gobootstrap
    Name: env
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Env:
    - Key: GO_VERSION
      Value: 1.10.3
    Name: env
  - Env:
    - Key: BUILD_DEPS
      Value: '''curl bzip2 git gcc patch libc6-dev ca-certificates'''
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - enable-fake-time.patch
    - /usr/local/playground/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - strict-time.patch
    - /usr/local/playground/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fake_fs.lst
    - /usr/local/playground/
  - CmdLine:
    - apt-get update && apt-get install -y ${BUILD_DEPS} --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/trunk.544461/naclsdk_linux.tar.bz2
      | tar -xj -C /tmp --strip-components=2 pepper_67/tools/sel_ldr_x86_64
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz -o /tmp/go.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz.sha256 -o
      /tmp/go.tar.gz.sha256
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$(cat /tmp/go.tar.gz.sha256) /tmp/go.tar.gz" | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -C /usr/local/ -vxzf /tmp/go.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -R /usr/local/go $GOROOT_BOOTSTRAP
    Name: run
    PrependShell: true
  - CmdLine:
    - patch /usr/local/go/src/runtime/rt0_nacl_amd64p32.s /usr/local/playground/enable-fake-time.patch
    Name: run
    PrependShell: true
  - CmdLine:
    - patch -p1 -d /usr/local/go </usr/local/playground/strict-time.patch
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/go && go run misc/nacl/mkzip.go -p syscall /usr/local/playground/fake_fs.lst
      src/syscall/fstest_nacl.go
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/go/src && GOOS=nacl GOARCH=amd64p32 ./make.bash --no-clean
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: 3afaae429987a1884530d6018d6e963a932d28c0
    Name: env
  - CmdLine:
    - go get -d cloud.google.com/go/compute/metadata `#and 6 other pkgs` &&    (cd
      /go/src/cloud.google.com/go && (git cat-file -t $REV 2>/dev/null || git fetch
      -q origin $REV) && git reset --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: 1952afaa557dc08e8e0d89eafab110fb501c1a2b
    Name: env
  - CmdLine:
    - go get -d github.com/bradfitz/gomemcache/memcache &&    (cd /go/src/github.com/bradfitz/gomemcache
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: bbd03ef6da3a115852eaf24c8a1c46aeb39aa175
    Name: env
  - CmdLine:
    - go get -d github.com/golang/protobuf/proto `#and 8 other pkgs` &&    (cd /go/src/github.com/golang/protobuf
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: 317e0006254c44a0ac427cc52a0e083ff0b9622f
    Name: env
  - CmdLine:
    - go get -d github.com/googleapis/gax-go &&    (cd /go/src/github.com/googleapis/gax-go
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: ae89d30ce0c63142b652837da33d782e2b0a9b25
    Name: env
  - CmdLine:
    - go get -d golang.org/x/net/context `#and 8 other pkgs` &&    (cd /go/src/golang.org/x/net
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: 2f32c3ac0fa4fb807a0fcefb0b6f2468a0d99bd0
    Name: env
  - CmdLine:
    - go get -d golang.org/x/oauth2 `#and 5 other pkgs` &&    (cd /go/src/golang.org/x/oauth2
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: b7ef84aaf62aa3e70962625c80a571ae7c17cb40
    Name: env
  - CmdLine:
    - go get -d golang.org/x/text/secure/bidirule `#and 4 other pkgs` &&    (cd /go/src/golang.org/x/text
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: 48418e5732e1b1e2a10207c8007a5f959e422f20
    Name: env
  - CmdLine:
    - go get -d golang.org/x/tools/go/ast/astutil `#and 3 other pkgs` &&    (cd /go/src/golang.org/x/tools
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: ab90adb3efa287b869ecb698db42f923cc734972
    Name: env
  - CmdLine:
    - go get -d google.golang.org/api/googleapi `#and 6 other pkgs` &&    (cd /go/src/google.golang.org/api
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: 2c5e7ac708aaa719366570dd82bda44541ca2a63
    Name: env
  - CmdLine:
    - go get -d google.golang.org/genproto/googleapis/api/annotations `#and 4 other
      pkgs` &&    (cd /go/src/google.golang.org/genproto && (git cat-file -t $REV
      2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)
    Name: run
    PrependShell: true
  - Env:
    - Key: REV
      Value: f0a1202acdc5c4702be05098d5ff8e9b3b444442
    Name: env
  - CmdLine:
    - go get -d google.golang.org/grpc `#and 24 other pkgs` &&    (cd /go/src/google.golang.org/grpc
      && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset
      --hard $REV)
    Name: run
    PrependShell: true
  - CmdLine:
    - "go install cloud.google.com/go/compute/metadata \tcloud.google.com/go/datastore
      \tcloud.google.com/go/internal \tcloud.google.com/go/internal/atomiccache \tcloud.google.com/go/internal/fields
      \tcloud.google.com/go/internal/version \tgithub.com/bradfitz/gomemcache/memcache
      \tgithub.com/golang/protobuf/proto \tgithub.com/golang/protobuf/protoc-gen-go/descriptor
      \tgithub.com/golang/protobuf/ptypes \tgithub.com/golang/protobuf/ptypes/any
      \tgithub.com/golang/protobuf/ptypes/duration \tgithub.com/golang/protobuf/ptypes/struct
      \tgithub.com/golang/protobuf/ptypes/timestamp \tgithub.com/golang/protobuf/ptypes/wrappers
      \tgithub.com/googleapis/gax-go \tgolang.org/x/net/context \tgolang.org/x/net/context/ctxhttp
      \tgolang.org/x/net/http2 \tgolang.org/x/net/http2/hpack \tgolang.org/x/net/idna
      \tgolang.org/x/net/internal/timeseries \tgolang.org/x/net/lex/httplex \tgolang.org/x/net/trace
      \tgolang.org/x/oauth2 \tgolang.org/x/oauth2/google \tgolang.org/x/oauth2/internal
      \tgolang.org/x/oauth2/jws \tgolang.org/x/oauth2/jwt \tgolang.org/x/text/secure/bidirule
      \tgolang.org/x/text/transform \tgolang.org/x/text/unicode/bidi \tgolang.org/x/text/unicode/norm
      \tgolang.org/x/tools/go/ast/astutil \tgolang.org/x/tools/godoc/static \tgolang.org/x/tools/imports
      \tgoogle.golang.org/api/googleapi \tgoogle.golang.org/api/googleapi/internal/uritemplates
      \tgoogle.golang.org/api/internal \tgoogle.golang.org/api/iterator \tgoogle.golang.org/api/option
      \tgoogle.golang.org/api/transport/grpc \tgoogle.golang.org/genproto/googleapis/api/annotations
      \tgoogle.golang.org/genproto/googleapis/datastore/v1 \tgoogle.golang.org/genproto/googleapis/rpc/status
      \tgoogle.golang.org/genproto/googleapis/type/latlng \tgoogle.golang.org/grpc
      \tgoogle.golang.org/grpc/balancer \tgoogle.golang.org/grpc/balancer/base \tgoogle.golang.org/grpc/balancer/roundrobin
      \tgoogle.golang.org/grpc/codes \tgoogle.golang.org/grpc/connectivity \tgoogle.golang.org/grpc/credentials
      \tgoogle.golang.org/grpc/credentials/oauth \tgoogle.golang.org/grpc/encoding
      \tgoogle.golang.org/grpc/encoding/proto \tgoogle.golang.org/grpc/grpclb/grpc_lb_v1/messages
      \tgoogle.golang.org/grpc/grpclog \tgoogle.golang.org/grpc/internal \tgoogle.golang.org/grpc/keepalive
      \tgoogle.golang.org/grpc/metadata \tgoogle.golang.org/grpc/naming \tgoogle.golang.org/grpc/peer
      \tgoogle.golang.org/grpc/resolver \tgoogle.golang.org/grpc/resolver/dns \tgoogle.golang.org/grpc/resolver/passthrough
      \tgoogle.golang.org/grpc/stats \tgoogle.golang.org/grpc/status \tgoogle.golang.org/grpc/tap
      \tgoogle.golang.org/grpc/transport"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/playground/
  - CmdLine:
    - go install playground
    Name: run
    PrependShell: true
  From:
    Image: debian:jessie
  Name: builder
  Platform: ""
  SourceCode: FROM debian:jessie as builder
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y git ca-certificates --no-install-recommends
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/go
    - /usr/local/go
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /tmp/sel_ldr_x86_64
    - /usr/local/bin
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/go/bin:$GOPATH/bin:$PATH
    Name: env
  - CmdLine:
    - GOOS=nacl GOARCH=amd64p32 go get     golang.org/x/tour/pic     golang.org/x/tour/reader     golang.org/x/tour/tree     golang.org/x/tour/wc     golang.org/x/talks/2016/applicative/google
      &&     rm -rf $GOPATH/src/golang.org/x/tour/.git &&     rm -rf $GOPATH/src/golang.org/x/talks/.git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $GOPATH/src/code.google.com/p/go-tour &&     cp -R $GOPATH/src/golang.org/x/tour/*
      $GOPATH/src/code.google.com/p/go-tour/ &&     sed -i 's_// import_// public
      import_' $(find $GOPATH/src/code.google.com/p/go-tour/ -name *.go) &&     go
      install     code.google.com/p/go-tour/pic     code.google.com/p/go-tour/reader     code.google.com/p/go-tour/tree     code.google.com/p/go-tour/wc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/playground
    - /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - edit.html
    - /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - static
    - /app/static
  - Name: workdir
    Path: /app
  - CmdLine:
    - /app/playground test
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /app/playground
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
