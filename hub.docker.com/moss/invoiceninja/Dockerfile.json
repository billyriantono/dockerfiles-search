{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-fpm",
      "SourceCode": "FROM php:7-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Thiago Almeida \u003cthiagoalmeidasa@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         libmcrypt-dev zlib1g-dev git libgmp-dev         libfreetype6-dev libjpeg62-turbo-dev libpng12-dev nginx     \u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/     --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure gmp     \u0026\u0026 docker-php-ext-install iconv mcrypt mbstring pdo pdo_mysql zip gd gmp     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php --         --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "INVOICENINJA_VERSION",
              "Value": "2.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL https://github.com/hillelcoren/invoice-ninja/archive/v${INVOICENINJA_VERSION}.tar.gz     | tar -xz  -C /var/www/     \u0026\u0026 mv /var/www/invoiceninja-${INVOICENINJA_VERSION} /var/www/app     \u0026\u0026 composer install --working-dir /var/www/app -o --no-dev --no-interaction     --no-progress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /var/www/app/storage /var/www/app/docker-backup-storage     \u0026\u0026 mv /var/www/app/public/logo /var/www/app/docker-backup-public-logo     \u0026\u0026 chown -R www-data:www-data /var/www/app/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DB_HOST",
              "Value": "mysql"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DB_DATABASE",
              "Value": "ninja"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_KEY",
              "Value": "SomeRandomStringSomeRandomString"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOG",
              "Value": "errorlog"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_DEBUG",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/app/storage"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/app/public/logo"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}