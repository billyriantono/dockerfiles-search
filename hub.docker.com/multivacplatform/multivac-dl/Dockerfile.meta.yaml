MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: NB_USER
      Value: multivac
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${NB_USER}
    Name: env
  - Env:
    - Key: PYSPARK_PYTHON
      Value: python3
    Name: env
  - Env:
    - Key: PYSPARK_DRIVER_PYTHON
      Value: python3
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     tar     wget     bash     rsync     gcc     libfreetype6-dev     libhdf5-serial-dev     libpng-dev     libzmq3-dev     python3     python3-dev     python3-pip     unzip     pkg-config     software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --disabled-password     --gecos "Default user"     --uid ${NB_UID}     ${NB_USER}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y openjdk-8-jdk &&     apt-get install
      -y ant &&     apt-get clean;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install ca-certificates-java &&     apt-get clean
      &&     update-ca-certificates -f;
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - CmdLine:
    - export JAVA_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir notebook==6.* numpy pyspark spark-nlp Keras mlxtend
      scikit-learn scipy tqdm pillow matplotlib pydot tensorflow==2.0.0-rc0
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/multivac/jupyter
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - data
    - ${HOME}/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter
    - ${HOME}/jupyter
  - Name: user
    User: root
  - CmdLine:
    - chown -R ${NB_UID} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${NB_USER}
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - jupyter
    - notebook
    - --ip
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
