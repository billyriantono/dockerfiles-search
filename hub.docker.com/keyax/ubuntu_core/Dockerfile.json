{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"yones.lebady AT gmail.com\""
            },
            {
              "Key": "keyax.os",
              "Value": "\"ubuntu core\""
            },
            {
              "Key": "keyax.os.ver",
              "Value": "\"18.04 bionic\""
            },
            {
              "Key": "keyax.vendor",
              "Value": "\"Keyax\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ubuntu-bionic-core-cloudimg-amd64-root.tar.gz",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d \t\u0026\u0026 echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d \t\u0026\u0026 chmod +x /usr/sbin/policy-rc.d \t\u0026\u0026 dpkg-divert --local --rename --add /sbin/initctl \t\u0026\u0026 cp -a /usr/sbin/policy-rc.d /sbin/initctl \t\u0026\u0026 sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\u0026\u0026 echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages \t\u0026\u0026 echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes \t\u0026\u0026 echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \u003e /etc/apt/apt.conf.d/docker-autoremove-suggests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/systemd \u0026\u0026 echo 'docker' \u003e /run/systemd/container"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --assume-yes --no-install-recommends \t\tcurl \t\twget   \tca-certificates     openssh-server     gnupg2 \t\tdirmngr \t\tnano     python     jq \t\txz-utils     numactl \t\t\u0026\u0026 apt-get autoremove \u0026\u0026 apt-get clean   \t\u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \tgpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;   gpg2 --armor --export $key | apt-key add - ; \tchmod +x /usr/local/bin/gosu;   gosu nobody true;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JSYAML_VERSION",
              "Value": "3.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}