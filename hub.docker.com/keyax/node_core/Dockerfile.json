{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "keyax/ubuntu_core:18.05",
      "SourceCode": "FROM keyax/ubuntu_core:18.05",
      "Platform": "",
      "From": {
        "Image": "keyax/ubuntu_core:18.05"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"yones.lebady AT gmail.com\""
            },
            {
              "Key": "keyax.os",
              "Value": "\"ubuntu core\""
            },
            {
              "Key": "keyax.os.ver",
              "Value": "\"18.04 bionic LTS\""
            },
            {
              "Key": "keyax.vendor",
              "Value": "\"Keyax\""
            },
            {
              "Key": "keyax.app",
              "Value": "\"Nodejs 10.1.0 LTS\""
            },
            {
              "Key": "keyax.app.ver",
              "Value": "\"18.05 LTS\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "set -ex;   gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5;   gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D; gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 56730D5401028683275BD23C23EFEFE93C4CFFFE; gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E; gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9;   gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1; gpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 77984A986EBC2AA786BC0F66B01FBB92821C587A"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg2 --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 echo root:mypass | chpasswd  \u0026\u0026 groupadd --gid 11000 kyxgrp  \u0026\u0026 useradd --uid 11000 --gid kyxgrp --shell /bin/bash --create-home node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/node"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "/home/node/"
          ]
        },
        {
          "CmdLine": [
            "su nodejs; npm init --yes \u0026\u0026 npm install -g nodemon \u0026\u0026 npm install -g --no-optional pm2  \u0026\u0026 npm install --save builtin-modules \u0026\u0026 npm install --save fs-extra \u0026\u0026 npm install --save mz \u0026\u0026 npm install --save rxjs  \u0026\u0026 npm install --save bluebird  \u0026\u0026 npm install --save co  \u0026\u0026 npm install --save node-fetch  \u0026\u0026 npm install --save axios  \u0026\u0026 npm install --save xhr2 \u0026\u0026 npm install --save koa \u0026\u0026 npm install --save koa-send \u0026\u0026 npm install --save koa-respond \u0026\u0026 npm install --save koa-static \u0026\u0026 npm install --save koa-mount \u0026\u0026 npm install --save koa-route \u0026\u0026 npm install --save koa-trie-router \u0026\u0026 npm install --save koa-router \u0026\u0026 npm install --save koa-combine-routers \u0026\u0026 npm install --save koa-rest-router \u0026\u0026 npm install --save koa-ejs \u0026\u0026 npm install --save koa-bodyparser \u0026\u0026 npm install --save koa-json-body \u0026\u0026 npm install --save json-parse-async \u0026\u0026 npm install --save jsonlint \u0026\u0026 npm install --save json-schema-ref-parser \u0026\u0026 npm install --save koa-body \u0026\u0026 npm install --save koa-validate \u0026\u0026 npm install --save koa-busboy \u0026\u0026 npm install --save progress-stream \u0026\u0026 npm install --save koa-formidable \u0026\u0026 npm install --save koa-multer \u0026\u0026 npm install --save qs \u0026\u0026 npm install --save querystring \u0026\u0026 npm install --save cookies \u0026\u0026 npm install --save koa-cookie \u0026\u0026 npm install --save koa-logger \u0026\u0026 npm install --save koa-connect-flash  \u0026\u0026 npm install --save koa-flash  \u0026\u0026 npm install --save koa-basic-auth \u0026\u0026 npm install --save mongoose \u0026\u0026 npm install --save koa-session-mongoose \u0026\u0026 npm install --save koa-session   \u0026\u0026 npm install --save koa-session2   \u0026\u0026 npm install --save koa-generic-session \u0026\u0026 npm install --save koa-generic-session-mongo  \u0026\u0026 npm install --save mongodb  \u0026\u0026 npm install --save koa-session-store  \u0026\u0026 npm install --save koa-session-mongo \u0026\u0026 npm install --save koa-if \u0026\u0026 npm install --save koa-compose \u0026\u0026 npm install --save koa-convert \u0026\u0026 npm install --save koa-csrf \u0026\u0026 npm install --save email-verification \u0026\u0026 npm install --save bcrypt-nodejs \u0026\u0026 npm install --save koa-passport \u0026\u0026 npm install --save passport-local \u0026\u0026 npm install --save passport-local-mongoose \u0026\u0026 npm install --save passport-client-certificate \u0026\u0026 npm install --save passport-jwt   \u0026\u0026 npm install --save passport-facebook   \u0026\u0026 npm install --save passport-twitter   \u0026\u0026 npm install --save passport-google-auth   \u0026\u0026 npm install --save koa-jwt   \u0026\u0026 npm install --save jsonwebtoken   \u0026\u0026 npm install --save jwt-simple   \u0026\u0026 npm install --save ws \u0026\u0026 npm install --save socket.io   \u0026\u0026 npm install --save socketio-auth   \u0026\u0026 npm install --save koa-socket-2    \u0026\u0026 npm install --save koa-socket-passport    \u0026\u0026 npm install --save koa-socket.io    \u0026\u0026 npm install --save koa-socket-session \u0026\u0026 npm install --save socket.io-mongodb \u0026\u0026 npm install --save mubsub \u0026\u0026 npm install --save exiftool \u0026\u0026 npm install --save d3 \u0026\u0026 npm install --save leaflet \u0026\u0026 npm install --save mysql    \u0026\u0026 npm install --save mysql2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "node"
        },
        {
          "Name": "expose",
          "Ports": [
            "8000",
            "8100",
            "8200",
            "8443"
          ]
        },
        {
          "CmdLine": [
            "nodemon",
            "-L",
            "--watch",
            "/home/node",
            "js/index.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}