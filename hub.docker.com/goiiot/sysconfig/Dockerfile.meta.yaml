MetaArgs: null
Stages:
- As: build
  BaseName: golang:alpine
  Commands:
  - Labels:
    - Key: '"com.github.actions.name"'
      Value: '"goiiot/sysconfig"'
    Name: label
  - Labels:
    - Key: '"com.github.actions.description"'
      Value: '"Sysconfig demo app"'
    Name: label
  - Labels:
    - Key: '"com.github.actions.icon"'
      Value: '"mic"'
    Name: label
  - Labels:
    - Key: '"com.github.actions.color"'
      Value: '"purple"'
    Name: label
  - Labels:
    - Key: '"repository"'
      Value: '"http://github.com/goiiot/sysconfig"'
    Name: label
  - Labels:
    - Key: '"homepage"'
      Value: '"http://github.com/goiiot/sysconfig"'
    Name: label
  - Labels:
    - Key: '"maintainer"'
      Value: '"JeffreyStoke <jeffctor@gmail.com>"'
    Name: label
  - Env:
    - Key: GOPATH
      Value: /gopath
    Name: env
  - Env:
    - Key: BUILD_DIR
      Value: /build
    Name: env
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GOPATH}/bin
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${BUILD_DIR}
  - Name: workdir
    Path: /
  - CmdLine:
    - apk add --no-cache --update --virtual .build_deps         upx git nodejs nodejs-npm
      make musl-dev dep curl         && mkdir -p ${GOPATH}         && go get github.com/rakyll/statik     &&
      go get -d github.com/goreleaser/goreleaser     && cd ${GOPATH}/src/github.com/goreleaser/goreleaser     &&
      dep ensure -vendor-only     && make setup build     && go install         &&
      cd ${BUILD_DIR}     && ./x-install-deps.sh     && ./x-build.sh
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:alpine AS build
- BaseName: alpine:latest
  Commands:
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/dist/linux_amd64/sysconfig
    - /app/sysconfig
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/config.example.yaml
    - /path/to/config.yaml
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/testdata/tls_cert.pem
    - /build/testdata/tls_key.pem
    - /path/to/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/testdata/test_conf/*
    - /path/to/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-bus-helper.sh
    - /path/to/bus-helper.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-cell-helper.sh
    - /path/to/cell-helper.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-iface-helper.sh
    - /path/to/iface-helper.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-lora-gw-helper.sh
    - /path/to/lora-gw-helper.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-lora-pf-helper.sh
    - /path/to/lora-pf-helper.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-periph-helper.sh
    - /path/to/periph-helper.sh
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/scripts/templates/t-wifi-helper.sh
    - /path/to/wifi-helper.sh
  - Name: expose
    Ports:
    - "8080"
    - "8443"
  - CmdLine:
    - /app/sysconfig
    - -c
    - /path/to/config.yaml
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
