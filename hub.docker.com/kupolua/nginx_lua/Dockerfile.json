{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "felix@eworks.io",
          "Name": "maintainer"
        },
        {
          "Key": "NGINX_VERSION",
          "Name": "arg",
          "Value": "1.11.6"
        },
        {
          "Key": "LIBRESSL_VERSION",
          "Name": "arg",
          "Value": "2.4.4"
        },
        {
          "Key": "NGINX_DEVEL_KIT_VERSION",
          "Name": "arg",
          "Value": "0.3.0"
        },
        {
          "Key": "LUA_NGINX_MODULE_VERSION",
          "Name": "arg",
          "Value": "0.10.7"
        },
        {
          "Key": "LUAJIT_MAIN_VERSION",
          "Name": "arg",
          "Value": "2.1.0"
        },
        {
          "Key": "LUAJIT_VERSION",
          "Name": "arg",
          "Value": "2.1.0-beta2"
        },
        {
          "Key": "UPSTREAM_HC_VERSION",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "NGINX_DEVEL_KIT",
          "Name": "arg",
          "Value": "ngx_devel_kit-${NGINX_DEVEL_KIT_VERSION}"
        },
        {
          "Key": "LUA_NGINX_MODULE",
          "Name": "arg",
          "Value": "lua-nginx-module-${LUA_NGINX_MODULE_VERSION}"
        },
        {
          "Key": "UPSTREAM_HC_MODULE",
          "Name": "arg",
          "Value": "nginx_upstream_check_module-${UPSTREAM_HC_VERSION}"
        },
        {
          "Key": "NGINX_ROOT",
          "Name": "arg",
          "Value": "/etc/nginx"
        },
        {
          "Key": "WEB_DIR",
          "Name": "arg",
          "Value": "/www"
        },
        {
          "Key": "GPG_KEYS",
          "Name": "arg",
          "Value": "A1EB079B8D3EB92B4EBD3139663AF51BD5E4D8D5"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/local/include/luajit-2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_USER",
              "Value": "nginx"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_GROUP",
              "Value": "nginx"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "build_pkgs=\"build-base linux-headers pcre-dev curl zlib-dev gnupg geoip-dev libxslt-dev perl-dev gd-dev\"   \u0026\u0026 runtime_pkgs=\"ca-certificates pcre zlib gd geoip libxslt libgcc\"   \u0026\u0026 apk --no-cache add ${runtime_pkgs} ${build_pkgs}   \u0026\u0026 for key in $GPG_KEYS; do         gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";      done   \u0026\u0026 mkdir -p /tmp/luajit   \u0026\u0026 cd /tmp/luajit   \u0026\u0026 curl -fSL https://luajit.org/download/LuaJIT-${LUAJIT_VERSION}.tar.gz -O   \u0026\u0026 curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v${NGINX_DEVEL_KIT_VERSION}.tar.gz -o ${NGINX_DEVEL_KIT}.tar.gz   \u0026\u0026 curl -fSL https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_MODULE_VERSION}.tar.gz -o ${LUA_NGINX_MODULE}.tar.gz   \u0026\u0026 curl -fSL https://github.com/yaoweibin/nginx_upstream_check_module/archive/${UPSTREAM_HC_VERSION}.tar.gz -o ${UPSTREAM_HC_MODULE}.tar.gz   \u0026\u0026 tar -xzvf LuaJIT-${LUAJIT_VERSION}.tar.gz \u0026\u0026 rm LuaJIT-${LUAJIT_VERSION}.tar.gz   \u0026\u0026 tar -xzvf ${NGINX_DEVEL_KIT}.tar.gz \u0026\u0026 rm ${NGINX_DEVEL_KIT}.tar.gz   \u0026\u0026 tar -xzvf ${LUA_NGINX_MODULE}.tar.gz \u0026\u0026 rm ${LUA_NGINX_MODULE}.tar.gz   \u0026\u0026 tar -xzvf ${UPSTREAM_HC_MODULE}.tar.gz \u0026\u0026 rm ${UPSTREAM_HC_MODULE}.tar.gz   \u0026\u0026 cd /tmp/luajit/LuaJIT-${LUAJIT_VERSION}   \u0026\u0026 make -j $(getconf _NPROCESSORS_ONLN) \u0026\u0026 make install   \u0026\u0026 rm -f $LUAJIT_LIB/libluajit-*.so*   \u0026\u0026 mkdir /tmp/libressl   \u0026\u0026 cd /tmp/libressl   \u0026\u0026 curl -fSL http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz -o libressl.tar.gz   \u0026\u0026 curl -fSL http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz.asc -o libressl.tar.gz.asc   \u0026\u0026 gpg --batch --verify libressl.tar.gz.asc libressl.tar.gz   \u0026\u0026 tar -zxf libressl.tar.gz   \u0026\u0026 mkdir -p /tmp/src   \u0026\u0026 cd /tmp/src   \u0026\u0026 curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx.tar.gz   \u0026\u0026 tar -zxf nginx.tar.gz   \u0026\u0026 cd nginx-*/   \u0026\u0026 patch -p0 /tmp/luajit/${UPSTREAM_HC_MODULE}/check_1.11.5+.patch   \u0026\u0026 ./configure     --user=nginx     --group=nginx     --sbin-path=/usr/sbin/nginx     --with-debug     --with-cc-opt='-O0 -g'     --with-ld-opt='-Wl,-static,-lluajit-5.1 -Wl,-Bdynamic,-ldl,-lz'     --with-http_ssl_module     --with-openssl=/tmp/libressl/libressl-${LIBRESSL_VERSION}     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_image_filter_module     --with-http_xslt_module     --with-http_geoip_module     --with-mail     --with-mail_ssl_module     --with-ipv6     --with-http_v2_module     --prefix=/etc/nginx     --http-log-path=/var/log/nginx/access.log     --error-log-path=/var/log/nginx/error.log     --add-module=/tmp/luajit/$UPSTREAM_HC_MODULE     --add-module=/tmp/luajit/$NGINX_DEVEL_KIT     --add-module=/tmp/luajit/$LUA_NGINX_MODULE   \u0026\u0026 make -j $(getconf _NPROCESSORS_ONLN)   \u0026\u0026 make install   \u0026\u0026 make clean   \u0026\u0026 rm -rf /tmp/ /root/.gnupg   \u0026\u0026 rm -rf $LUAJIT_LIB/libluajit-5.1.a   \u0026\u0026 rm -rf $LUAJIT_INC   \u0026\u0026 strip -s /usr/sbin/nginx   \u0026\u0026 apk --no-cache del ${build_pkgs}   \u0026\u0026 apk --no-cache add ${runtime_pkgs}   \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "addgroup -g 40 $NGINX_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -D -u 501 -g '' -G $NGINX_GROUP $NGINX_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/conf/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "default.conf",
            "/etc/nginx/conf/conf.d"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/www-data"
        },
        {
          "CmdLine": [
            "/bin/sh",
            "-c",
            "/usr/sbin/nginx -g \"daemon off; user $NGINX_USER $NGINX_GROUP;\""
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}