MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: Gnimuc Key <GnimucKey@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     git     vim     wget     build-essential     python-dev     ca-certificates     bzip2     unzip     libsm6     pandoc     texlive-latex-base     texlive-latex-extra     texlive-fonts-extra     texlive-fonts-recommended     supervisor     sudo     npm
      nodejs-legacy     curl     && apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      &&     /bin/bash /Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda &&     rm
      Miniconda3-latest-Linux-x86_64.sh &&     /opt/conda/bin/conda install --yes
      conda
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g configurable-http-proxy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyterhub
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - mkdir -p /opt/julia_0.4.0 &&     curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.4/julia-0.4.0-linux-x86_64.tar.gz
      | tar -C /opt/julia_0.4.0 -x -z --strip-components=1 -f -
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /opt/julia_0.4.0/bin/julia /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/global-packages
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'push!(LOAD_PATH, "/opt/global-packages/.julia/v0.4/")' >> /opt/julia_0.4.0/etc/julia/juliarc.jl
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PKGDIR
      Value: /opt/global-packages/.julia/
    Name: env
  - CmdLine:
    - julia -e 'Pkg.init()'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.add("IJulia")'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'julia -e ''Pkg.build("IJulia")''    # I don''t know why the kernel of IJulia
      won''t be installed without build it again.'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/share/ && mkdir -p jupyter/kernels/
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter kernelspec install /root/.local/share/jupyter/kernels/julia-0.4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     gettext     tcl8.5     libmagickwand-6.q16-2     libcairo2     libpango1.0-0     tk8.5     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.add("Images")'
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.update()'
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/damianavila/RISE
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p .jupyter && cd RISE && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -d /home/admin -m admin;     echo "admin:admin" | chpasswd;     adduser
      admin sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R admin /home/admin
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -d /home/gnimuc -m gnimuc;     echo "gnimuc:gnimuc" | chpasswd;     adduser
      gnimuc sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/gnimuc/.local/share/jupyter && mkdir -p /home/gnimuc/.jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /root/.local/share/jupyter/nbextensions /home/gnimuc/.local/share/jupyter/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd RISE && JUPYTER_CONFIG_DIR=/home/gnimuc/.jupyter python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R gnimuc /home/gnimuc
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
