MetaArgs:
- DefaultValue: www-data
  Key: USER
  ProvidedValue: null
  Value: www-data
- DefaultValue: "7"
  Key: PHPV
  ProvidedValue: null
  Value: "7"
Stages:
- BaseName: liammartens/alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Liam Martens <hi@liammartens.com>"'
    Name: label
  - Env:
    - Key: PHPV
      Value: ${PHPV:-7}
    Name: env
  - Env:
    - Key: PHP_PORT
      Value: "9000"
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apk add --update --no-cache     fcgi     php${PHPV}-mcrypt     php${PHPV}-soap     php${PHPV}-openssl     php${PHPV}-gmp     php${PHPV}-pdo_odbc     php${PHPV}-json     php${PHPV}-dom     php${PHPV}-pdo     php${PHPV}-zip     php${PHPV}-mysqli     php${PHPV}-sqlite3     php${PHPV}-pdo_pgsql     php${PHPV}-bcmath     php${PHPV}-opcache     php${PHPV}-intl     php${PHPV}-mbstring     php${PHPV}-sockets     php${PHPV}-zlib     php${PHPV}-xml     php${PHPV}-session     php${PHPV}-pcntl     php${PHPV}-gd     php${PHPV}-odbc     php${PHPV}-pdo_mysql     php${PHPV}-pdo_sqlite     php${PHPV}-gettext     php${PHPV}-xmlreader     php${PHPV}-xmlrpc     php${PHPV}-bz2     php${PHPV}-iconv     php${PHPV}-pdo_dblib     php${PHPV}-curl     php${PHPV}-ctype     php${PHPV}-pear     php${PHPV}-fpm     php${PHPV}-common     php${PHPV}-phar     php${PHPV}-xmlwriter     php${PHPV}-tokenizer     php${PHPV}-fileinfo     php${PHPV}-posix     php${PHPV}-imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add php${PHPV}-dev autoconf yaml-dev yaml alpine-sdk &&     perl -pi -e
      "s/-C -n -q/-C -q/" $(which pecl) &&     pecl install yaml-2.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/phpredis/phpredis &&     cd phpredis && phpize
      && ./configure && make -j4 && make install &&     cd ../ && rm -rf phpredis
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del php${PHPV}-dev autoconf yaml-dev alpine-sdk
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      composer-setup.php && php -r "unlink('composer-setup.php');" &&     mv composer.phar
      /usr/local/bin/composer && chmod +x /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /etc/php${PHPV} && mkdir -p /etc/php${PHPV} /usr/lib/php${PHPV} /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${USER}:${USER} /etc/php${PHPV} /usr/lib/php${PHPV} /var/www
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/${USER}
  - CmdLine:
    - mkdir .composer &&     echo 'export PATH=~/.composer/vendor/bin:$PATH' >> .profile
      &&    echo '. ~/.profile' >> .bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${USER}:${USER} ../${USER}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker
    - ${DOCKER_DIR}/
  - Env:
    - Key: PHPRC
      Value: ${DOCKER_ETC_DIR}/php${PHPV}
    Name: env
  - Env:
    - Key: PHP_INI_PATH
      Value: ${DOCKER_ETC_DIR}/php${PHPV}
    Name: env
  - Env:
    - Key: PHP_INI_SCAN_DIR
      Value: ${DOCKER_ETC_DIR}/php${PHPV}/conf.d
    Name: env
  - CmdLine:
    - own
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $(which php-fpm${PHPV}) /usr/local/bin/php-fpm
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Health:
      Interval: 60000000000
      Retries: 2
      StartPeriod: 5000000000
      Test:
      - CMD-SHELL
      - SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind
        -connect 127.0.0.1:"${PHP_PORT}" || exit 1
      Timeout: 30000000000
    Name: healthcheck
  From:
    Image: liammartens/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM liammartens/alpine
