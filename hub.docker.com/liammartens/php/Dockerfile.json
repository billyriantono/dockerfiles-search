{
  "MetaArgs": [
    {
      "Key": "USER",
      "DefaultValue": "www-data",
      "ProvidedValue": null,
      "Value": "www-data"
    },
    {
      "Key": "PHPV",
      "DefaultValue": "7",
      "ProvidedValue": null,
      "Value": "7"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "liammartens/alpine",
      "SourceCode": "FROM liammartens/alpine",
      "Platform": "",
      "From": {
        "Image": "liammartens/alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Liam Martens \u003chi@liammartens.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PHPV",
              "Value": "${PHPV:-7}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_PORT",
              "Value": "9000"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache     fcgi     php${PHPV}-mcrypt     php${PHPV}-soap     php${PHPV}-openssl     php${PHPV}-gmp     php${PHPV}-pdo_odbc     php${PHPV}-json     php${PHPV}-dom     php${PHPV}-pdo     php${PHPV}-zip     php${PHPV}-mysqli     php${PHPV}-sqlite3     php${PHPV}-pdo_pgsql     php${PHPV}-bcmath     php${PHPV}-opcache     php${PHPV}-intl     php${PHPV}-mbstring     php${PHPV}-sockets     php${PHPV}-zlib     php${PHPV}-xml     php${PHPV}-session     php${PHPV}-pcntl     php${PHPV}-gd     php${PHPV}-odbc     php${PHPV}-pdo_mysql     php${PHPV}-pdo_sqlite     php${PHPV}-gettext     php${PHPV}-xmlreader     php${PHPV}-xmlrpc     php${PHPV}-bz2     php${PHPV}-iconv     php${PHPV}-pdo_dblib     php${PHPV}-curl     php${PHPV}-ctype     php${PHPV}-pear     php${PHPV}-fpm     php${PHPV}-common     php${PHPV}-phar     php${PHPV}-xmlwriter     php${PHPV}-tokenizer     php${PHPV}-fileinfo     php${PHPV}-posix     php${PHPV}-imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add php${PHPV}-dev autoconf yaml-dev yaml alpine-sdk \u0026\u0026     perl -pi -e \"s/-C -n -q/-C -q/\" $(which pecl) \u0026\u0026     pecl install yaml-2.0.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/phpredis/phpredis \u0026\u0026     cd phpredis \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026     cd ../ \u0026\u0026 rm -rf phpredis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del php${PHPV}-dev autoconf yaml-dev alpine-sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php composer-setup.php \u0026\u0026 php -r \"unlink('composer-setup.php');\" \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /etc/php${PHPV} \u0026\u0026 mkdir -p /etc/php${PHPV} /usr/lib/php${PHPV} /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${USER}:${USER} /etc/php${PHPV} /usr/lib/php${PHPV} /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/${USER}"
        },
        {
          "CmdLine": [
            "mkdir .composer \u0026\u0026     echo 'export PATH=~/.composer/vendor/bin:$PATH' \u003e\u003e .profile \u0026\u0026    echo '. ~/.profile' \u003e\u003e .bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${USER}:${USER} ../${USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".docker",
            "${DOCKER_DIR}/"
          ]
        },
        {
          "Env": [
            {
              "Key": "PHPRC",
              "Value": "${DOCKER_ETC_DIR}/php${PHPV}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_PATH",
              "Value": "${DOCKER_ETC_DIR}/php${PHPV}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_SCAN_DIR",
              "Value": "${DOCKER_ETC_DIR}/php${PHPV}/conf.d"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "own"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $(which php-fpm${PHPV}) /usr/local/bin/php-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${USER}"
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Retries": 2,
            "StartPeriod": 5000000000,
            "Test": [
              "CMD-SHELL",
              "SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:\"${PHP_PORT}\" || exit 1"
            ],
            "Timeout": 30000000000
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}