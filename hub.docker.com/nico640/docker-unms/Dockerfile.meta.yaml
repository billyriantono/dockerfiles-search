MetaArgs: null
Stages:
- As: unms
  BaseName: ubnt/unms:1.1.2
  Commands: null
  From:
    Image: ubnt/unms:1.1.2
  Name: unms
  Platform: ""
  SourceCode: FROM ubnt/unms:1.1.2 as unms
- As: unms-nginx
  BaseName: ubnt/unms-nginx:1.1.2
  Commands: null
  From:
    Image: ubnt/unms-nginx:1.1.2
  Name: unms-nginx
  Platform: ""
  SourceCode: FROM ubnt/unms-nginx:1.1.2 as unms-nginx
- As: unms-netflow
  BaseName: ubnt/unms-netflow:1.1.2
  Commands: null
  From:
    Image: ubnt/unms-netflow:1.1.2
  Name: unms-netflow
  Platform: ""
  SourceCode: FROM ubnt/unms-netflow:1.1.2 as unms-netflow
- As: unms-crm
  BaseName: ubnt/unms-crm:3.1.2
  Commands: null
  From:
    Image: ubnt/unms-crm:3.1.2
  Name: unms-crm
  Platform: ""
  SourceCode: FROM ubnt/unms-crm:3.1.2 as unms-crm
- BaseName: oznu/s6-node:10.15.3-debian-amd64
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - set -x   && echo "deb http://ftp.debian.org/debian stretch-backports main" >>
      /etc/apt/sources.list   && apt-get update   && apt-get -y install apt-transport-https
      lsb-release ca-certificates wget   && wget -O /etc/apt/trusted.gpg.d/php.gpg
      https://packages.sury.org/php/apt.gpg   && sh -c 'echo "deb https://packages.sury.org/php/
      $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list'   && apt-get update   &&
      mkdir -p /usr/share/man/man1 /usr/share/man/man7   && mkdir -p /usr/share/man/man7   &&
      apt-get install -y build-essential rabbitmq-server redis-server     postgresql-9.6
      postgresql-contrib-9.6 postgresql-client-9.6 libpq-dev     gzip bash vim openssl
      libcap-dev dumb-init sudo gettext zlibc zlib1g zlib1g-dev     iproute2 netcat
      wget libpcre3 libpcre3-dev libssl-dev git pkg-config     libcurl4-openssl-dev
      libxml2-dev libedit-dev libsodium-dev libargon2-dev     jq autoconf libgmp-dev
      libpng-dev libbz2-dev libc-client-dev libkrb5-dev     libjpeg-dev libfreetype6-dev
      libzip-dev unzip supervisor   && apt-get install -y certbot -t stretch-backports
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/app/unms
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/app/unms
  - Chown: ""
    From: unms
    Name: copy
    SourcesAndDest:
    - /home/app/unms
    - /home/app/unms
  - CmdLine:
    - rm -rf node_modules     && JOBS=$(nproc) npm install sharp@latest     && JOBS=$(nproc)
      npm install --production     && JOBS=$(nproc) npm install npm
    Name: run
    PrependShell: true
  - Chown: ""
    From: unms
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh     && cp -r /home/app/unms/node_modules/npm
      /home/app/unms/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/app/netflow
    Name: run
    PrependShell: true
  - Chown: ""
    From: unms-netflow
    Name: copy
    SourcesAndDest:
    - /home/app
    - /home/app/netflow
  - CmdLine:
    - cd /home/app/netflow     && rm -rf node_modules     && JOBS=$(nproc) npm install
      --production
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/ucrm     && mkdir -p /tmp/crontabs     && mkdir -p /usr/local/etc/php/conf.d     &&
      mkdir -p /usr/local/etc/php-fpm.d     && mkdir -p /tmp/supervisor.d     && mkdir
      -p /tmp/supervisord
    Name: run
    PrependShell: true
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /usr/src/ucrm
    - /usr/src/ucrm
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /data
    - /data
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/crm*
    - /usr/local/bin/
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker*
    - /usr/local/bin/
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /tmp/crontabs/server
    - /tmp/crontabs/server
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /tmp/supervisor.d
    - /tmp/supervisor.d
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /tmp/supervisord
    - /tmp/supervisord
  - CmdLine:
    - grep -lR "nginx:nginx" /usr/src/ucrm/ | xargs sed -i 's/nginx:nginx/unms:unms/g'     &&
      grep -lR "su-exec nginx" /usr/src/ucrm/ | xargs sed -i 's/su-exec nginx//g'     &&
      grep -lR "su-exec nginx" /tmp/crontabs/ | xargs sed -i 's/su-exec nginx//g'     &&
      grep -lR "su-exec nginx" /tmp/supervisor.d/ | xargs sed -i 's/su-exec nginx//g'     &&
      sed -i 's#chmod -R 775 /data/log/var/log#chmod -R 777 /data/log/var/log#g' /usr/src/ucrm/scripts/dirs.sh     &&
      sed -i 's#chown -R unms:unms /data/log/var/log#chown root:root /data/log/var/log#g'
      /usr/src/ucrm/scripts/dirs.sh     && sed -i 's#rm -rf /var/log#mv /var/log /data/log/var#g'
      /usr/src/ucrm/scripts/dirs.sh     && sed -i 's#LC_CTYPE=C tr -dc "a-zA-Z0-9"
      < /dev/urandom | fold -w 48 | head -n 1 || true#head /dev/urandom | tr -dc A-Za-z0-9
      | head -c 48#g'        /usr/src/ucrm/scripts/parameters.sh     && sed -i 's#-regex
      \x27.*Version\[0-9]\\{14\\}#-regextype posix-extended -regex \x27.*Version\[0-9]\{14}#g'        /usr/src/ucrm/scripts/database_migrations_ready.sh     &&
      sed -i '/\[program:nginx]/,+10d' /tmp/supervisor.d/server.ini     && sed -i
      '/\[program:cron]/,+10d' /tmp/supervisor.d/server.ini     && sed -i "s#php-fpm
      --nodaemonize --force-stderr#bash -c 'exec php-fpm --nodaemonize --force-stderr'#g"
      /tmp/supervisor.d/server.ini     && sed -i "1s#^#POSTGRES_SCHEMA=ucrm\n#" /tmp/crontabs/server     &&
      sed -i "1s#^#POSTGRES_DB=unms\n#" /tmp/crontabs/server     && sed -i "1s#^#POSTGRES_PASSWORD=ucrm\n#"
      /tmp/crontabs/server     && sed -i "1s#^#POSTGRES_USER=ucrm\n#" /tmp/crontabs/server     &&
      sed -i "1s#^#POSTGRES_PORT=5432\n#" /tmp/crontabs/server     && sed -i "1s#^#POSTGRES_HOST=127.0.0.1\n#"
      /tmp/crontabs/server     && sed -i "1s#^#PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n#"
      /tmp/crontabs/server     && sed -i "s#\.0#\.crt#g" /usr/src/ucrm/scripts/update-certificates.sh     &&
      sed -i "s#http://localhost/%s#http://localhost:9081/%s#g" /usr/src/ucrm/src/AppBundle/Service/LocalUrlGenerator.php     &&
      sed -i "s#'localhost', '127.0.0.1'#'localhost:9081', '127.0.0.1:9081'#g" /usr/src/ucrm/src/AppBundle/Util/Helpers.php
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_UID
      Value: "1000"
    - Key: NGINX_VERSION
      Value: nginx-1.14.2
    - Key: LUAJIT_VERSION
      Value: 2.1.0-beta3
    - Key: LUA_NGINX_VERSION
      Value: 0.10.13
    - Key: PHP_VERSION
      Value: php-7.3.12
    Name: env
  - CmdLine:
    - "set -x     && mkdir -p /tmp/src && cd /tmp/src     && wget -q http://nginx.org/download/${NGINX_VERSION}.tar.gz
      -O nginx.tar.gz     && wget -q https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_VERSION}.tar.gz
      -O lua-nginx-module.tar.gz     && wget -q https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz
      -O ndk.tar.gz     && wget -q http://luajit.org/download/LuaJIT-${LUAJIT_VERSION}.tar.gz
      -O luajit.tar.gz \t&& wget -q https://www.php.net/get/${PHP_VERSION}.tar.xz/from/this/mirror
      -O php.tar.xz     && tar -zxvf lua-nginx-module.tar.gz     && tar -zxvf ndk.tar.gz
      \    && tar -zxvf luajit.tar.gz     && tar -zxvf nginx.tar.gz \t&& tar -xvf
      php.tar.xz \t&& cp php.tar.xz /usr/src     && cd /tmp/src/LuaJIT-${LUAJIT_VERSION}
      && make amalg PREFIX='/usr' && make install PREFIX='/usr'     && export LUAJIT_LIB=/usr/lib/libluajit-5.1.so
      && export LUAJIT_INC=/usr/include/luajit-2.1     && cd /tmp/src/${NGINX_VERSION}
      && ./configure         --with-cc-opt='-g -O2 -fPIE -fstack-protector-strong
      -Wformat -Werror=format-security -fPIC -Wdate-time -D_FORTIFY_SOURCE=2'         --with-ld-opt='-Wl,-Bsymbolic-functions
      -fPIE -pie -Wl,-z,relro -Wl,-z,now -fPIC'         --with-pcre-jit         --with-threads
      \        --add-module=/tmp/src/lua-nginx-module-${LUA_NGINX_VERSION}         --add-module=/tmp/src/ngx_devel_kit-0.3.0
      \        --with-http_ssl_module         --with-http_realip_module         --with-http_gzip_static_module
      \        --with-http_secure_link_module         --without-mail_pop3_module         --without-mail_imap_module
      \        --without-http_upstream_ip_hash_module         --without-http_memcached_module
      \        --without-http_auth_basic_module         --without-http_userid_module
      \        --without-http_uwsgi_module         --without-http_scgi_module         --prefix=/var/lib/nginx
      \        --sbin-path=/usr/sbin/nginx         --conf-path=/etc/nginx/nginx.conf
      \        --http-log-path=/dev/stdout         --error-log-path=/dev/stderr         --lock-path=/tmp/nginx.lock
      \        --pid-path=/tmp/nginx.pid         --http-client-body-temp-path=/tmp/body
      \        --http-proxy-temp-path=/tmp/proxy     && make -j $(nproc)     && make
      install     && cd /tmp/src/${PHP_VERSION} && ./configure         --with-config-file-path=\"/usr/local/etc/php\"
      \        --with-config-file-scan-dir=\"/usr/local/etc/php/conf.d\"         --enable-option-checking=fatal
      \        --with-mhash         --enable-ftp         --enable-mbstring         --enable-mysqlnd
      \        --with-password-argon2         --with-sodium=shared         --with-curl
      \        --with-libedit         --with-openssl         --with-zlib         --enable-fpm
      \        --with-fpm-user=www-data         --with-fpm-group=www-data         --disable-cgi
      \    && make -j $(nproc)     && make install     && rm /usr/bin/luajit-${LUAJIT_VERSION}
      \    && rm -rf /tmp/src     && rm -rf /var/cache/apk/*     && echo \"unms ALL=(ALL)
      NOPASSWD: /usr/sbin/nginx -s *\" >> /etc/sudoers     && echo \"unms ALL=(ALL)
      NOPASSWD:SETENV: /copy-user-certs.sh reload\" >> /etc/sudoers     && echo \"unms
      ALL=(ALL) NOPASSWD:SETENV: /refresh-certificate.sh *\" >> /etc/sudoers     &&
      echo \"unms ALL=(ALL) NOPASSWD:SETENV: /refresh-configuration.sh *\" >> /etc/sudoers"
    Name: run
    PrependShell: true
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /etc/nginx/available-servers
    - /etc/nginx/ucrm
  - Chown: ""
    From: unms-nginx
    Name: copy
    SourcesAndDest:
    - /entrypoint.sh
    - /refresh-certificate.sh
    - /refresh-configuration.sh
    - /openssl.cnf
    - /ip-whitelist.sh
    - /
  - Chown: ""
    From: unms-nginx
    Name: copy
    SourcesAndDest:
    - /templates
    - /templates
  - Chown: ""
    From: unms-nginx
    Name: copy
    SourcesAndDest:
    - /www/public
    - /www/public
  - CmdLine:
    - 'chmod +x /entrypoint.sh /refresh-certificate.sh /refresh-configuration.sh /ip-whitelist.sh     &&
      sed -i "s#80#9081#g" /etc/nginx/ucrm/ucrm.conf     && sed -i "s#81#9082#g" /etc/nginx/ucrm/suspended_service.conf     &&
      sed -i ''/conf;/a \ \ include /etc/nginx/ucrm/*.conf;'' /templates/nginx.conf.template     &&
      sed -i "s#execute(''/refresh-certificate.sh#execute(''sudo --preserve-env /refresh-certificate.sh#g"
      /templates/conf.d/nginx-api.conf.template     && grep -lR "location /nms/ "
      /templates | xargs sed -i "s#location /nms/ #location /nms #g"     && grep -lR
      "location /crm/ " /templates | xargs sed -i "s#location /crm/ #location /crm
      #g"     && sed -i "s#\\\.\[0-9]{1,3}#[0-9]#g" /refresh-certificate.sh'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s#/bin/sh#/bin/bash#g" /entrypoint.sh     && sed -i "s#adduser -D#adduser
      --disabled-password --gecos \"\"#g" /entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    - Key: SYMFONY_ENV
      Value: prod
    Name: env
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /usr/local/etc/php/php.ini
    - /usr/local/etc/php/
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /usr/local/etc/php-fpm.conf
    - /usr/local/etc/
  - Chown: ""
    From: unms-crm
    Name: copy
    SourcesAndDest:
    - /usr/local/etc/php-fpm.d
    - /usr/local/etc/php-fpm.d
  - CmdLine:
    - "echo '' | pecl install apcu ds     && docker-php-ext-enable apcu ds     &&
      docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/
      \        --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/
      \    && docker-php-ext-configure curl     && docker-php-ext-configure imap         --with-imap-ssl
      \        --with-kerberos     && docker-php-ext-install -j2 pdo_pgsql gmp zip
      bcmath gd bz2 curl       exif intl dom xml opcache imap soap sockets sysvmsg
      sysvshm sysvsem     && curl -sS https://getcomposer.org/installer | php --         --install-dir=/usr/bin
      --filename=composer \t&& cd /usr/src/ucrm     && composer global require hirak/prestissimo
      \    && composer install         --classmap-authoritative         --no-dev --no-interaction
      \    && composer clear-cache     && sed -i 's#nginx#unms#g' /usr/local/etc/php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/app/unms/node_modules/.bin:$PATH:/usr/lib/postgresql/9.6/bin
    - Key: PGDATA
      Value: /config/postgres
    - Key: POSTGRES_DB
      Value: unms
    - Key: QUIET_MODE
      Value: "0"
    - Key: WS_PORT
      Value: "443"
    - Key: PUBLIC_HTTPS_PORT
      Value: "443"
    - Key: PUBLIC_WS_PORT
      Value: "443"
    - Key: UNMS_NETFLOW_PORT
      Value: "2055"
    - Key: SECURE_LINK_SECRET
      Value: enigma
    - Key: SSL_CERT
      Value: '""'
    Name: env
  - Name: expose
    Ports:
    - 2055/udp
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - /config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  From:
    Image: oznu/s6-node:10.15.3-debian-amd64
  Name: ""
  Platform: ""
  SourceCode: FROM oznu/s6-node:10.15.3-debian-amd64
