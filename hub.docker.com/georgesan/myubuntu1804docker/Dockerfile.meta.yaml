MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: MYUBUNTU1804DOCKER_VERSION
      Value: build-target
    Name: env
  - Env:
    - Key: MYUBUNTU1804DOCKER_VERSION
      Value: latest
    Name: env
  - Env:
    - Key: MYUBUNTU1804DOCKER_VERSION
      Value: stable
    Name: env
  - Env:
    - Key: MYUBUNTU1804DOCKER_IMAGE
      Value: myubuntu1804docker
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt update &&     apt install -y locales  apt-transport-https  ca-certificates  language-pack-ja  software-properties-common
      &&     localedef -i ja_JP -c -f UTF-8 -A /usr/share/locale/locale.alias ja_JP.UTF-8
      &&     apt clean
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ja_JP.utf8
    Name: env
  - CmdLine:
    - ln -fs /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: Asia/Tokyo
    Name: env
  - CmdLine:
    - rm /etc/dpkg/dpkg.cfg.d/excludes
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt install -y --reinstall && apt
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y man-db  manpages && apt clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update && apt install -y --fix-missing         ansible         bash-completion         connect-proxy         curl         dnsutils         emacs-nox         expect         gettext         git         gnupg2         iproute2         jq         lsof         make         mongodb-clients         netcat         net-tools         postgresql-client         python3-pip         python-pip         rsync         sudo         tcpdump         traceroute         tree         unzip         vim         w3m         wget         zip     &&
      apt clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - &&     add-apt-repository  "deb
      [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      &&     apt-get update &&     apt-get install -y docker-ce-cli containerd.io
      &&     apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker-compose && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
      - &&     echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" >/etc/apt/sources.list.d/kubernetes.list
      &&     apt-get update &&     apt-get install -y kubectl && apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_CLIENT_VERSION
      Value: v2.9.1
    Name: env
  - CmdLine:
    - curl -fLO https://storage.googleapis.com/kubernetes-helm/helm-${HELM_CLIENT_VERSION}-linux-amd64.tar.gz
      &&     tar xzf  helm-${HELM_CLIENT_VERSION}-linux-amd64.tar.gz &&     /bin/cp  linux-amd64/helm   /usr/bin
      &&     /bin/rm -rf rm helm-${HELM_CLIENT_VERSION}-linux-amd64.tar.gz linux-amd64
    Name: run
    PrependShell: true
  - Env:
    - Key: KOMPOSE_VERSION
      Value: v1.18.0
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/kubernetes/kompose/releases/download/${KOMPOSE_VERSION}/kompose-linux-amd64.tar.gz
      &&     tar xzf kompose-linux-amd64.tar.gz &&     chmod +x kompose-linux-amd64
      &&     mv kompose-linux-amd64 /usr/bin/kompose &&     rm kompose-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: STERN_VERSION
      Value: 1.10.0
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/wercker/stern/releases/download/${STERN_VERSION}/stern_linux_amd64
      &&     chmod +x stern_linux_amd64 &&     mv stern_linux_amd64 /usr/bin/stern
    Name: run
    PrependShell: true
  - Env:
    - Key: KUSTOMIZE_VERSION
      Value: 1.0.11
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
      &&     chmod +x kustomize_${KUSTOMIZE_VERSION}_linux_amd64 &&     mv kustomize_${KUSTOMIZE_VERSION}_linux_amd64
      /usr/bin/kustomize
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fLO https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx &&     curl
      -fLO https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens &&     chmod
      +x kubectx kubens &&     mv kubectx kubens /usr/local/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBEVAL_VERSION
      Value: 0.7.3
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/garethr/kubeval/releases/download/$KUBEVAL_VERSION/kubeval-linux-amd64.tar.gz
      &&     tar xf kubeval-linux-amd64.tar.gz &&     cp kubeval /usr/local/bin &&     /bin/rm
      kubeval-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBETEST_VERSION
      Value: 0.1.1
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/garethr/kubetest/releases/download/$KUBETEST_VERSION/kubetest-linux-amd64.tar.gz
      &&     tar xf kubetest-linux-amd64.tar.gz &&     cp kubetest /usr/local/bin
      &&     /bin/rm kubetest-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: YAMLSORT_VERSION
      Value: v0.1.16
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/george-pon/yamlsort/releases/download/${YAMLSORT_VERSION}/linux_amd64_yamlsort_${YAMLSORT_VERSION}.tar.gz
      &&     tar xzf linux_amd64_yamlsort_${YAMLSORT_VERSION}.tar.gz &&     chmod
      +x linux_amd64_yamlsort &&     mv linux_amd64_yamlsort /usr/bin/yamlsort &&     rm
      linux_amd64_yamlsort_${YAMLSORT_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bashrc
    - /root/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bash_profile
    - /root/.bash_profile
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vimrc
    - /root/.vimrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - emacsrc
    - /root/.emacs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin
    - /usr/local/bin
  - CmdLine:
    - chmod +x /usr/local/bin/*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: ENV
      Value: $HOME/.bashrc
    Name: env
  - CmdLine:
    - groupadd -g 1000 ubuntu &&     useradd  -g      ubuntu -G sudo -m -s /bin/bash
      ubuntu &&     echo 'ubuntu:hogehoge' | chpasswd &&     echo 'Defaults visiblepw'            >>
      /etc/sudoers &&     echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
