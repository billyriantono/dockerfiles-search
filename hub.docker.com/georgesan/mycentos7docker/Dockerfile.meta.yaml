MetaArgs: null
Stages:
- BaseName: centos:centos7
  Commands:
  - Env:
    - Key: MYCENTOS7DOCKER_VERSION
      Value: build-target
    Name: env
  - Env:
    - Key: MYCENTOS7DOCKER_VERSION
      Value: latest
    Name: env
  - Env:
    - Key: MYCENTOS7DOCKER_VERSION
      Value: stable
    Name: env
  - Env:
    - Key: MYCENTOS7DOCKER_IMAGE
      Value: mycentos7docker
    Name: env
  - CmdLine:
    - rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e"s/^tsflags=nodocs/\# tsflags=nodocs/" /etc/yum.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y update && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i ja_JP -f UTF-8 ja_JP.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'LANG="ja_JP.UTF-8"' >  /etc/locale.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - yum -y install man man-pages man-pages-ja && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y epel-release && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y         ansible         bash-completion         bind-utils         connect         connect-proxy         curl         emacs-nox         expect         gettext         git         iproute         jq         lsof         make         mongodb         net-tools         nmap-ncat         openssh-clients         openssh-server         postgresql         python-pip         stress         sudo         tcpdump         traceroute         tree         unzip         vim         w3m         wget         zip     &&
      yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm --import https://packages.microsoft.com/keys/microsoft.asc &&     echo "[azure-cli]"    >
      /etc/yum.repos.d/azure-cli.repo  &&     echo "name=Azure CLI" >> /etc/yum.repos.d/azure-cli.repo  &&     echo
      "baseurl=https://packages.microsoft.com/yumrepos/azure-cli" >> /etc/yum.repos.d/azure-cli.repo  &&     echo
      "enabled=1" >> /etc/yum.repos.d/azure-cli.repo  &&     echo "gpgcheck=1" >>
      /etc/yum.repos.d/azure-cli.repo  &&     echo "gpgkey=https://packages.microsoft.com/keys/microsoft.asc"
      >> /etc/yum.repos.d/azure-cli.repo  &&     yum install -y azure-cli  && yum
      clean all
    Name: run
    PrependShell: true
  - Key: DOCKERURL
    Name: arg
    Value: https://download.docker.com/linux/static/stable/x86_64/docker-18.06.1-ce.tgz
  - CmdLine:
    - curl -fSL "$DOCKERURL" -o docker.tgz     && tar -xzvf docker.tgz     && mv docker/*
      /usr/bin/     && rmdir docker     && rm docker.tgz     && chmod +x /usr/bin/docker
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "" >> /etc/yum.repos.d/kubernetes.repo &&     echo "[kubernetes]" >> /etc/yum.repos.d/kubernetes.repo
      &&     echo "name=Kubernetes" >> /etc/yum.repos.d/kubernetes.repo &&     echo
      "baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
      >> /etc/yum.repos.d/kubernetes.repo &&     echo "enabled=1" >> /etc/yum.repos.d/kubernetes.repo
      &&     echo "gpgcheck=1" >> /etc/yum.repos.d/kubernetes.repo &&     echo "repo_gpgcheck=1"
      >> /etc/yum.repos.d/kubernetes.repo &&     echo "gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
      https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg" >> /etc/yum.repos.d/kubernetes.repo
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y kubectl && yum clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_CLIENT_VERSION
      Value: v2.9.1
    Name: env
  - CmdLine:
    - curl -fLO https://storage.googleapis.com/kubernetes-helm/helm-${HELM_CLIENT_VERSION}-linux-amd64.tar.gz
      &&     tar xzf  helm-${HELM_CLIENT_VERSION}-linux-amd64.tar.gz &&     /bin/cp  linux-amd64/helm   /usr/bin
      &&     /bin/rm -rf rm helm-${HELM_CLIENT_VERSION}-linux-amd64.tar.gz linux-amd64
    Name: run
    PrependShell: true
  - Env:
    - Key: KOMPOSE_VERSION
      Value: v1.18.0
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/kubernetes/kompose/releases/download/${KOMPOSE_VERSION}/kompose-linux-amd64.tar.gz
      &&     tar xzf kompose-linux-amd64.tar.gz &&     chmod +x kompose-linux-amd64
      &&     mv kompose-linux-amd64 /usr/bin/kompose &&     rm kompose-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: STERN_VERSION
      Value: 1.10.0
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/wercker/stern/releases/download/${STERN_VERSION}/stern_linux_amd64
      &&     chmod +x stern_linux_amd64 &&     mv stern_linux_amd64 /usr/bin/stern
    Name: run
    PrependShell: true
  - Env:
    - Key: KUSTOMIZE_VERSION
      Value: 1.0.11
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
      &&     chmod +x kustomize_${KUSTOMIZE_VERSION}_linux_amd64 &&     mv kustomize_${KUSTOMIZE_VERSION}_linux_amd64
      /usr/bin/kustomize
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fLO https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx &&     curl
      -fLO https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens &&     chmod
      +x kubectx kubens &&     mv kubectx kubens /usr/local/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBEVAL_VERSION
      Value: 0.7.3
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/garethr/kubeval/releases/download/$KUBEVAL_VERSION/kubeval-linux-amd64.tar.gz
      &&     tar xf kubeval-linux-amd64.tar.gz &&     cp kubeval /usr/local/bin &&     /bin/rm
      kubeval-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBETEST_VERSION
      Value: 0.1.1
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/garethr/kubetest/releases/download/$KUBETEST_VERSION/kubetest-linux-amd64.tar.gz
      &&     tar xf kubetest-linux-amd64.tar.gz &&     cp kubetest /usr/local/bin
      &&     /bin/rm kubetest-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: YAMLSORT_VERSION
      Value: v0.1.16
    Name: env
  - CmdLine:
    - curl -fLO https://github.com/george-pon/yamlsort/releases/download/${YAMLSORT_VERSION}/linux_amd64_yamlsort_${YAMLSORT_VERSION}.tar.gz
      &&     tar xzf linux_amd64_yamlsort_${YAMLSORT_VERSION}.tar.gz &&     chmod
      +x linux_amd64_yamlsort &&     mv linux_amd64_yamlsort /usr/bin/yamlsort &&     rm
      linux_amd64_yamlsort_${YAMLSORT_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bashrc
    - /root/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bash_profile
    - /root/.bash_profile
  - Chown: ""
    Name: add
    SourcesAndDest:
    - emacsrc
    - /root/.emacs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vimrc
    - /root/.vimrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin
    - /usr/local/bin
  - CmdLine:
    - chmod +x /usr/local/bin/*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: ENV
      Value: $HOME/.bashrc
    Name: env
  - CmdLine:
    - groupadd -g 1000 centos &&     useradd  -g      centos -G wheel -m -s /bin/bash
      centos &&     echo 'centos:hogehoge' | chpasswd &&     echo 'Defaults visiblepw'            >>
      /etc/sudoers &&     echo 'centos ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: centos:centos7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:centos7
