MetaArgs:
- DefaultValue: xenial
  Key: UBU_RELEASE
  ProvidedValue: null
  Value: xenial
Stages:
- BaseName: i386/ubuntu:${UBU_RELEASE}
  Commands:
  - Maintainer: H. Birch Tree
    Name: maintainer
  - Env:
    - Key: CLANG_VER
      Value: "3.8"
    Name: env
  - Env:
    - Key: USER
      Value: coffee
    Name: env
  - Env:
    - Key: USER_ID
      Value: "1000"
    Name: env
  - Env:
    - Key: PROJECT_VOLUME
      Value: '"/home/${USER}/project"'
    Name: env
  - Env:
    - Key: BUILD_VOLUME
      Value: '"/home/${USER}/build"'
    Name: env
  - Env:
    - Key: CC
      Value: /usr/bin/clang-${CLANG_VER}
    Name: env
  - Env:
    - Key: CXX
      Value: /usr/bin/clang++-${CLANG_VER}
    Name: env
  - Env:
    - Key: GDK_URL
      Value: 6_5/rel/installers/cuda_340_29_gdk_linux_32.run
    Name: env
  - Env:
    - Key: EXTRA_PACKAGES
      Value: '""'
    Name: env
  - CmdLine:
    - apt-get -qy update && apt-get -qy install software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:alexlarsson/flatpak
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qy update && apt-get -qy install     cmake ninja-build build-essential     clang-${CLANG_VER}     doxygen
      swig3.0     libsdl2-dev libopenal-dev libssl-dev libunwind-dev     libavcodec-dev
      libavdevice-dev     libavformat-dev libswresample-dev     libswscale-dev     libqt5network5     wget
      git lsb-release     flatpak snapcraft ${EXTRA_PACKAGES}     curl lcov     squashfs-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q     http://developer.download.nvidia.com/compute/cuda/${GDK_URL}     -O
      nvidia-gdk.run
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x nvidia-gdk.run
    Name: run
    PrependShell: true
  - CmdLine:
    - ./nvidia-gdk.run --silent
    Name: run
    PrependShell: true
  - CmdLine:
    - rm nvidia-gdk.run
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd buildusers -g ${USER_ID}
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd ${USER} -m -u ${USER_ID}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/${USER}
  - Name: user
    User: ${USER}
  - CmdLine:
    - mkdir -p ${PROJECT_VOLUME} ${BUILD_VOLUME}/out
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${PROJECT_VOLUME}
    - ${BUILD_VOLUME}
    - ${BUILD_VOLUME}/out
  - Name: workdir
    Path: ${BUILD_VOLUME}
  From:
    Image: i386/ubuntu:${UBU_RELEASE}
  Name: ""
  Platform: ""
  SourceCode: FROM i386/ubuntu:${UBU_RELEASE}
