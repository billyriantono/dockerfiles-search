MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Key: VARNISH_VERSION
    Name: arg
    Value: 6.2.0
  - Key: VARNISH_URL
    Name: arg
    Value: https://varnish-cache.org/_downloads/varnish-${VARNISH_VERSION}.tgz
  - Key: VARNISH_INSTALL_DIR
    Name: arg
    Value: /tmp/varnish
  - Env:
    - Key: VARNISH_BACKEND_ADDRESS
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: VARNISH_MEMORY
      Value: 100M
    Name: env
  - Env:
    - Key: VARNISH_BACKEND_PORT
      Value: "80"
    Name: env
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \tgcc \tlibc-dev \tlibgcc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache --virtual .build-deps \tcurl \tautoconf \tautomake \tlibtool
      \tmake \tpkgconf \tpatch \tdpkg \tdpkg-dev \tpython3 \tpcre-dev \tlibedit-dev
      \tlibexecinfo-dev \tlinux-headers"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patches/*
    - /varnish-alpine-patches/
  - CmdLine:
    - "mkdir -p ${VARNISH_INSTALL_DIR} && \tcurl -Lk ${VARNISH_URL} | \ttar -zx -C
      ${VARNISH_INSTALL_DIR} --strip-components=1"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd ${VARNISH_INSTALL_DIR}; \tfor p in /varnish-alpine-patches/*.patch; do \t
      \      [ -f \"$p\" ] || continue; \t       patch -p1 -i \"$p\"; \tdone; \tgnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"; \t./autogen.sh; \t./configure \t\t--build=\"$gnuArch\"
      \t\t--without-jemalloc \t\t--with-rst2man=$(command -v true) \t\t--with-sphinx-build=$(command
      -v true) \t; \tmake -j \"$(nproc)\"; \tmake install; \trm -rf ${VARNISH_INSTALL_DIR};"
    Name: run
    PrependShell: true
  - CmdLine:
    - "runDeps=\"$( \tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local
      \t| tr ',' '\\n' \t| sort -u \t| awk 'system(\"[ -e /usr/local/lib/\" $1 \"
      ] || [ -e /usr/local/lib/varnish/\" $1 \" ]\") == 0 { next } { print \"so:\"
      $1 }' \t)\"; \tapk add --no-cache --virtual .varnish-rundeps $runDeps; \tapk
      del .build-deps; \trm -rf /var/cache/apk/*; \tvarnishd -V;"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.sh
    - ./
  - CmdLine:
    - /app/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
