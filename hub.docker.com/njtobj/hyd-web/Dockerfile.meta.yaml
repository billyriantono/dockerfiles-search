MetaArgs: null
Stages:
- BaseName: debian:jessie-slim
  Commands:
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tlibgdbm3 \t\tlibreadline6 \t\tmysql-client \t\tlibmysqlclient-dev \t\tlibssl1.0.0
      \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 2.7.15
    Name: env
  - CmdLine:
    - "set -ex \t&& buildDeps=\" \t\tdpkg-dev \t\tgcc \t\tlibbz2-dev \t\tlibc6-dev
      \t\tlibdb-dev \t\tlibgdbm-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibmysqlclient-dev
      \t\tlibssl-dev \t\tmake \t\ttcl-dev \t\ttk-dev \t\twget \t\txz-utils \t\tzlib1g-dev
      \t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \t\" \t&& apt-get
      update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*
      \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&&
      tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-shared \t\t--enable-unicode=ucs4
      \t&& make -j \"$(nproc)\" \t&& make install \t&& ldconfig \t\t&& apt-get purge
      -y --auto-remove $buildDeps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\(
      -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f
      -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' + \t&&
      rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 10.0.1
    Name: env
  - CmdLine:
    - "set -ex; \t\tapt-get update; \tapt-get install -y --no-install-recommends wget;
      \trm -rf /var/lib/apt/lists/*; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';
      \t\tapt-get purge -y --auto-remove wget; \t\tpython get-pip.py \t\t--disable-pip-version-check
      \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind
      /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests
      \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\)
      \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - Env:
    - Key: DJANGO_VERSION
      Value: 1.10.4
    Name: env
  - CmdLine:
    - pip install django=="$DJANGO_VERSION"
    Name: run
    PrependShell: true
  - Env:
    - Key: HTTPD_PREFIX
      Value: /usr/local/apache2
    Name: env
  - Env:
    - Key: PATH
      Value: $HTTPD_PREFIX/bin:$PATH
    Name: env
  - CmdLine:
    - "mkdir -p \"$HTTPD_PREFIX\" \t&& chown www-data:www-data \"$HTTPD_PREFIX\""
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HTTPD_PREFIX
  - Env:
    - Key: NGHTTP2_VERSION
      Value: 1.18.1-1
    Name: env
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.0.2l-1~bpo8+1
    Name: env
  - CmdLine:
    - "{ \t\techo 'deb http://deb.debian.org/debian stretch main'; \t} > /etc/apt/sources.list.d/stretch.list
      \t&& { \t\techo 'Package: *'; \t\techo 'Pin: release n=stretch'; \t\techo 'Pin-Priority:
      -10'; \t\techo; \t\techo 'Package: libnghttp2*'; \t\techo \"Pin: version $NGHTTP2_VERSION\";
      \t\techo 'Pin-Priority: 990'; \t\techo; \t} > /etc/apt/preferences.d/unstable-nghttp2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tlibapr1
      \t\tlibaprutil1 \t\tlibaprutil1-ldap \t\tlibapr1-dev \t\tlibaprutil1-dev \t\tliblua5.2-0
      \t\tlibnghttp2-14=$NGHTTP2_VERSION \t\tlibpcre++0 \t\tlibxml2 \t&& rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: HTTPD_VERSION
      Value: 2.4.33
    Name: env
  - Env:
    - Key: HTTPD_SHA256
      Value: de02511859b00d17845b9abdd1f975d5ccb5d0b280c567da5bf2ad4b70846f05
    Name: env
  - Env:
    - Key: HTTPD_PATCHES
      Value: '""'
    Name: env
  - Env:
    - Key: APACHE_DIST_URLS
      Value: "https://www.apache.org/dyn/closer.cgi?action=download&filename= \thttps://www-us.apache.org/dist/
        \thttps://www.apache.org/dist/ \thttps://archive.apache.org/dist/"
    Name: env
  - CmdLine:
    - "set -eux; \t\tbuildDeps=\" \t\tbzip2 \t\tca-certificates \t\tdpkg-dev \t\tgcc
      \t\tliblua5.2-dev \t\tlibnghttp2-dev=$NGHTTP2_VERSION \t\tlibpcre++-dev \t\tlibxml2-dev
      \t\tzlib1g-dev \t\tmake \t\twget \t\"; \tapt-get update; \tapt-get install -y
      --no-install-recommends -V $buildDeps; \trm -r /var/lib/apt/lists/*; \t\tddist()
      { \t\tlocal f=\"$1\"; shift; \t\tlocal distFile=\"$1\"; shift; \t\tlocal success=;
      \t\tlocal distUrl=; \t\tfor distUrl in $APACHE_DIST_URLS; do \t\t\tif wget -O
      \"$f\" \"$distUrl$distFile\" && [ -s \"$f\" ]; then \t\t\t\tsuccess=1; \t\t\t\tbreak;
      \t\t\tfi; \t\tdone; \t\t[ -n \"$success\" ]; \t}; \t\tddist 'httpd.tar.bz2'
      \"httpd/httpd-$HTTPD_VERSION.tar.bz2\"; \techo \"$HTTPD_SHA256 *httpd.tar.bz2\"
      | sha256sum -c -; \t\tddist 'httpd.tar.bz2.asc' \"httpd/httpd-$HTTPD_VERSION.tar.bz2.asc\";
      \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in \t\tA93D62ECC3C8EA12DB220EC934EA76E6791485A8
      \t\tB9E8213AEFB861AF35A41F2C995E35221AD84DFF \t; do \t\tgpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$key\"; \tdone; \tgpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;
      \trm -rf \"$GNUPGHOME\" httpd.tar.bz2.asc; \t\tmkdir -p src; \ttar -xf httpd.tar.bz2
      -C src --strip-components=1; \trm httpd.tar.bz2; \tcd src; \t\tpatches() { \t\twhile
      [ \"$#\" -gt 0 ]; do \t\t\tlocal patchFile=\"$1\"; shift; \t\t\tlocal patchSha256=\"$1\";
      shift; \t\t\tddist \"$patchFile\" \"httpd/patches/apply_to_$HTTPD_VERSION/$patchFile\";
      \t\t\techo \"$patchSha256 *$patchFile\" | sha256sum -c -; \t\t\tpatch -p0 <
      \"$patchFile\"; \t\t\trm -f \"$patchFile\"; \t\tdone; \t}; \tpatches $HTTPD_PATCHES;
      \t\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure
      \t\t--build=\"$gnuArch\" \t\t--prefix=\"$HTTPD_PREFIX\" \t\t--enable-mods-shared=reallyall
      \t\t--enable-mpms-shared=all \t; \tmake -j \"$(nproc)\"; \tmake install; \t\tcd
      ..; \trm -r src man manual; \t\tsed -ri \t\t-e 's!^(\\s*CustomLog)\\s+\\S+!\\1
      /proc/self/fd/1!g' \t\t-e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'
      \t\t\"$HTTPD_PREFIX/conf/httpd.conf\"; \t\tpip install mod_wsgi; \tapt-get purge
      -y --auto-remove $buildDeps"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  From:
    Image: debian:jessie-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie-slim
