MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: dev@rootree.net <rootree-dev>
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget curl     build-essential git git-core     zlib1g-dev
      libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&  wget -O ruby-install-0.6.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.0.tar.gz
      &&  tar -xzvf ruby-install-0.6.0.tar.gz &&  cd ruby-install-0.6.0/ &&  make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - ruby-install ruby 2.3.1
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/rubies/ruby-2.3.1/bin:$PATH
    Name: env
  - CmdLine:
    - 'echo "install: --no-document\nupdate: --no-document" > ~/.gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSf https://static.rust-lang.org/rustup.sh | sudo sh -s -- --channel=nightly
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:nginx/stable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq -y nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\ndaemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data /var/lib/nginx
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx-sites.conf
    - /etc/nginx/sites-enabled/default
  - CmdLine:
    - apt-get install -yq php5-cli php5-mcrypt php5-mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - php5enmod mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq -y libmysqlclient-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq -y libatlas-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set liblapack.so.3 /usr/lib/atlas-base/atlas/liblapack.so.3
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set liblapack.so /usr/lib/atlas-base/atlas/liblapack.so
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set libblas.so.3 /usr/lib/atlas-base/atlas/libblas.so.3
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set libblas.so /usr/lib/atlas-base/atlas/libblas.so
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'LC_ALL=en_US.UTF-8' > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'LANG=en_US.UTF-8' >> /etc/default/locale
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Expression: ADD Gemfile /app/Gemfile
    Name: onbuild
  - Expression: ADD Gemfile.lock /app/Gemfile.lock
    Name: onbuild
  - Expression: ADD Gemfile.lock /app/Gemfile.lock
    Name: onbuild
  - Expression: RUN bundle install --without development test
    Name: onbuild
  - Expression: ADD package.json /app/package.json
    Name: onbuild
  - Expression: RUN npm install
    Name: onbuild
  - Expression: ADD . /app
    Name: onbuild
  - Expression: RUN bundle exec rake assets:precompile RDB_URL="mysql://buildtest:buildtest@localhost/buildtest"
      RAILS_ENV=production
    Name: onbuild
  - Expression: RUN cd /app && git rev-parse HEAD > public/version.html
    Name: onbuild
  - Chown: ""
    Name: add
    SourcesAndDest:
    - unicorn.rb
    - /app/config/unicorn.rb
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
