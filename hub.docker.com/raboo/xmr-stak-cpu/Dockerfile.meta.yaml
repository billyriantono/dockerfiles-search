MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Env:
    - Key: XMR_STAK_CPU_VERSION
      Value: v1.3.0-1.5.0
    Name: env
  - Env:
    - Key: NICE
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - app
    - /app
  - Name: workdir
    Path: /usr/local/src
  - CmdLine:
    - echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> //etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache       libmicrohttpd-dev       openssl-dev       hwloc-dev@testing       build-base       cmake       coreutils       git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/fireice-uk/xmr-stak-cpu.git     && cd xmr-stak-cpu     &&
      git checkout -b build ${XMR_STAK_CPU_VERSION}     && sed -i 's/constexpr double
      fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/' donate-level.h         &&
      cmake -DCMAKE_LINK_STATIC=ON .     && make -j$(nproc)         && cp -t /app
      bin/xmr-stak-cpu config.txt     && chmod 777 -R /app
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del --no-cache --purge       libmicrohttpd-dev       openssl-dev       hwloc-dev@testing       build-base       cmake       git
      || echo "apk purge error ignored"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip     &&
      pip install envtpl
    Name: run
    PrependShell: true
  - CmdLine:
    - /app/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - xmr-stak-cpu
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
