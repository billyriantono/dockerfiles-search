MetaArgs: null
Stages:
- BaseName: tomcat:9-jre11
  Commands:
  - Name: workdir
    Path: /usr/local/tomcat
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends xmlstarlet jq
      liblz4-tool   && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir solr   && mkdir solr/lib   && mkdir solr/lib/solrj-lib   && mkdir solr/shared-lib   &&
      mkdir solr/conf   && mkdir solr/data   && curl -JL https://archive.apache.org/dist/lucene/solr/3.6.2/apache-solr-3.6.2.tgz
      | tar xz -C /tmp   && cp /tmp/apache-solr-3.6.2/dist/apache-solr-3.6.2.war webapps/solr.war   &&
      cp -r /tmp/apache-solr-3.6.2/example/solr/conf/* solr/conf/   && cp /tmp/apache-solr-3.6.2/dist/*.jar
      solr/lib/   && cp /tmp/apache-solr-3.6.2/dist/apache-solr-dataimporthandler-*.jar
      solr/shared-lib/   && cp /tmp/apache-solr-3.6.2/dist/solrj-lib/*.jar solr/lib/solrj-lib/   &&
      rm -r /tmp/apache-solr-3.6.2
    Name: run
    PrependShell: true
  - Name: workdir
    Path: solr/lib
  - CmdLine:
    - curl -OJL "https://search.maven.org/remotecontent?filepath=org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OJL "https://search.maven.org/remotecontent?filepath=org/mongodb/mongo-java-driver/3.3.0/mongo-java-driver-3.3.0.jar"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OJL "https://github.com/BuyerQuest/SolrMongoImporter/releases/download/v1.2.0/solr-mongo-importer-1.2.0.jar"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OJL "https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/tomcat
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./artifacts/log4j.properties
    - conf/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./artifacts/run-tomcat-and-create-cores.sh
    - bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./artifacts/container-init.sh
    - bin/
  - Env:
    - Key: SOLR_XMS
      Value: 128m
    Name: env
  - Env:
    - Key: SOLR_XMX
      Value: 1024m
    Name: env
  - Env:
    - Key: CATALINA_OPTS
      Value: -Xms${SOLR_XMS} -Xmx${SOLR_XMX} -Dlog4j.configuration=file:/usr/local/tomcat/conf/log4j.properties
        -Dsolr.allow.unsafe.resourceloading=true $EXTRA_CATALINA_OPTS
    Name: env
  - Env:
    - Key: STDOUT_FILTER
      Value: '''^\d{2}-[a-zA-Z]{3}-\d{4,} (\d{2}(:|.)+){3}\d{3} INFO \[http-nio-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-exec-\d+\]
        org\.apache\.solr\.core\.SolrCore\.execute \[\] webapp=\/solr path=\/admin\/ping
        params={wt=json&docker-healthcheck=true}( hits=0)? status=0 QTime=\d+\s*$'''
    Name: env
  - CmdLine:
    - mkdir /cores   && ln -s /cores solr/cores   && mkdir /core-init /container-init
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /cores
  - Health:
      Interval: 5000000000
      StartPeriod: 15000000000
      Test:
      - CMD-SHELL
      - test "$(curl --fail --silent 'http://localhost:8080/solr/admin/ping?wt=json&docker-healthcheck=true'
        | jq -r '.status')" = "OK"
    Name: healthcheck
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - run-tomcat-and-create-cores.sh
    Name: cmd
    PrependShell: false
  From:
    Image: tomcat:9-jre11
  Name: ""
  Platform: ""
  SourceCode: FROM tomcat:9-jre11
