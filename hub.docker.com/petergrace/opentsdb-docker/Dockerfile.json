{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TSDB_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HBASE_VERSION",
              "Value": "1.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GNUPLOT_VERSION",
              "Value": "5.2.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/jvm/java-1.8-openjdk/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ALPINE_PACKAGES",
              "Value": "\"rsyslog bash openjdk8 make wget libgd libpng libjpeg libwebp libjpeg-turbo cairo pango lua\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES",
              "Value": "\"build-base autoconf automake git python cairo-dev pango-dev gd-dev lua-dev readline-dev libpng-dev libjpeg-turbo-dev libwebp-dev\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HBASE_OPTS",
              "Value": "\"-XX:+UseConcMarkSweepGC -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JVMARGS",
              "Value": "\"-XX:+UseConcMarkSweepGC -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -enableassertions -enablesystemassertions\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static-amd64",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apk --update add apk-tools     \u0026\u0026 apk add ${ALPINE_PACKAGES}       --repository http://dl-cdn.alpinelinux.org/alpine/v3.0/testing/     \u0026\u0026 mkdir -p /opt/opentsdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/opentsdb/"
        },
        {
          "CmdLine": [
            "apk add --virtual builddeps     ${BUILD_PACKAGES}   \u0026\u0026 : Install OpenTSDB and scripts   \u0026\u0026 wget --no-check-certificate     -O v${TSDB_VERSION}.zip     https://github.com/OpenTSDB/opentsdb/archive/v${TSDB_VERSION}.zip   \u0026\u0026 unzip v${TSDB_VERSION}.zip   \u0026\u0026 rm v${TSDB_VERSION}.zip   \u0026\u0026 cd /opt/opentsdb/opentsdb-${TSDB_VERSION}   \u0026\u0026 echo \"tsd.http.request.enable_chunked = true\" \u003e\u003e src/opentsdb.conf   \u0026\u0026 echo \"tsd.http.request.max_chunk = 1000000\" \u003e\u003e src/opentsdb.conf   \u0026\u0026 ./build.sh   \u0026\u0026 cp build-aux/install-sh build/build-aux   \u0026\u0026 cd build   \u0026\u0026 make install   \u0026\u0026 cd /   \u0026\u0026 rm -rf /opt/opentsdb/opentsdb-${TSDB_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://datapacket.dl.sourceforge.net/project/gnuplot/gnuplot/${GNUPLOT_VERSION}/gnuplot-${GNUPLOT_VERSION}.tar.gz \u0026\u0026     tar xzf gnuplot-${GNUPLOT_VERSION}.tar.gz \u0026\u0026     cd gnuplot-${GNUPLOT_VERSION} \u0026\u0026     ./configure \u0026\u0026     make install \u0026\u0026     cd /tmp \u0026\u0026 rm -rf /tmp/gnuplot-${GNUPLOT_VERSION} \u0026\u0026 rm /tmp/gnuplot-${GNUPLOT_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del builddeps \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/hbase /root/.profile.d /opt/downloads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/downloads"
        },
        {
          "CmdLine": [
            "wget -O hbase-${HBASE_VERSION}.bin.tar.gz http://archive.apache.org/dist/hbase/${HBASE_VERSION}/hbase-${HBASE_VERSION}-bin.tar.gz     \u0026\u0026 tar xzvf hbase-${HBASE_VERSION}.bin.tar.gz     \u0026\u0026 mv hbase-${HBASE_VERSION} /opt/hbase     \u0026\u0026 rm -r /opt/hbase/docs     \u0026\u0026 rm hbase-${HBASE_VERSION}.bin.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/share/opentsdb/etc/opentsdb /etc/opentsdb     \u0026\u0026 rm /etc/opentsdb/opentsdb.conf     \u0026\u0026 mkdir /opentsdb-plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/opentsdb.conf",
            "/etc/opentsdb/opentsdb.conf.sample"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/hbase-site.xml",
            "/opt/hbase/conf/hbase-site.xml.sample"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/start_opentsdb.sh",
            "/opt/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/create_tsdb_tables.sh",
            "/opt/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/start_hbase.sh",
            "/opt/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "for i in /opt/bin/start_hbase.sh /opt/bin/start_opentsdb.sh /opt/bin/create_tsdb_tables.sh;     do         sed -i \"s#::JAVA_HOME::#$JAVA_HOME#g; s#::PATH::#$PATH#g; s#::TSDB_VERSION::#$TSDB_VERSION#g;\" $i;     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export HBASE_OPTS=\\\"${HBASE_OPTS}\\\"\" \u003e\u003e /opt/hbase/conf/hbase-env.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "16010",
            "16070",
            "4242",
            "60000",
            "60010",
            "60030"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/hbase",
            "/tmp",
            "/opentsdb-plugins"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}