MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/weixu365/docker-tengine"'
    Name: label
  - Env:
    - Key: TENGINE_VERSION
      Value: 2.2.1
    Name: env
  - CmdLine:
    - "CONFIG=\"    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf
      \    --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log
      \    --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp
      \    --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \    --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module
      \    --with-http_addition_module     --with-http_sub_module     --with-http_dav_module
      \    --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module
      \    --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module
      \    --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=shared
      \    --with-http_image_filter_module=shared     --with-http_geoip_module=shared
      \    --with-threads     --with-http_slice_module     --with-mail     --with-mail_ssl_module
      \    --with-file-aio     --with-http_v2_module     --with-http_concat_module
      \    --with-http_sysguard_module     --with-http_dyups_module \t\" \t&& addgroup
      -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx
      \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake
      \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg
      \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t&& curl -fSL http://tengine.taobao.org/download/tengine-$TENGINE_VERSION.tar.gz
      -o nginx.tar.gz \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz
      \t&& rm nginx.tar.gz \t&& cd /usr/src/tengine-$TENGINE_VERSION \t&& ./configure
      $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx
      objs/nginx-debug \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN)
      \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/
      \t&& mkdir -p /var/www/html/ \t&& install -m644 html/index.html /var/www/html/
      \t&& install -m644 html/50x.html /var/www/html/ \t&& install -m755 objs/nginx-debug
      /usr/sbin/nginx-debug \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules
      \t&& strip /usr/sbin/nginx* \t&& strip /etc/nginx/modules/*.so \t&& rm -rf /usr/src/tengine-$TENGINE_VERSION
      \t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx
      /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort
      -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps
      \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/
      \t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
