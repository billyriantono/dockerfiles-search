{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.9-cli-stretch",
      "SourceCode": "FROM php:7.2.9-cli-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.2.9-cli-stretch"
      },
      "Commands": [
        {
          "Maintainer": "Jan Forgac \u003cforgac@artweby.cz\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod -R 700 /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 docker-php-ext-configure pcntl --enable-pcntl \t\u0026\u0026 docker-php-ext-install -j$(nproc) \t\tpcntl \t\tposix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /etc/issue"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure locales \t\u0026\u0026 locale-gen C.UTF-8 \t\u0026\u0026 /usr/sbin/update-locale LANG=C.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'en_US.UTF-8 UTF-8' \u003e\u003e /etc/locale.gen \t\u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \t\topenssl \t\tgit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y libicu-dev \t\u0026\u0026 docker-php-ext-configure intl \t\u0026\u0026 docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibxml2-dev \tlibxslt-dev \t\u0026\u0026 docker-php-ext-install \t\tdom \t\txmlrpc \t\txsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibfreetype6-dev \tlibjpeg62-turbo-dev \tlibpng-dev \tlibgd-dev \t\u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \t\u0026\u0026 docker-php-ext-install \t\tgd \t\texif"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install \tmysqli \tpdo \tpdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install \tgettext \tmbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y libgmp-dev \t\u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \t\u0026\u0026 docker-php-ext-install \t\tgmp \t\tbcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y        libzip-dev        zip \t\u0026\u0026 docker-php-ext-configure zip --with-libzip \t\u0026\u0026 docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibbz2-dev \t\u0026\u0026 docker-php-ext-install \t\tbz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibssl-dev \t\u0026\u0026 docker-php-ext-install \t\tftp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibssh2-1-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install \tsoap \tsockets \tcalendar \tsysvmsg \tsysvsem \tsysvshm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libc-client-dev libkrb5-dev \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-install imap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-pecl-install \tredis-3.0 \tapcu-5.1.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/php/pecl-networking-ssh2.git /usr/src/php/ext/ssh2 \t\u0026\u0026 docker-php-ext-install ssh2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y \tlibmemcached-dev \tlibmemcached11"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \t\u0026\u0026 git clone -b php7 https://github.com/php-memcached-dev/php-memcached \t\u0026\u0026 cd php-memcached \t\u0026\u0026 phpize \t\u0026\u0026 ./configure \t\u0026\u0026 make \t\u0026\u0026 cp /tmp/php-memcached/modules/memcached.so /usr/local/lib/php/extensions/no-debug-non-zts-20170718/memcached.so \t\u0026\u0026 docker-php-ext-enable memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -my wget gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-2.6.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_EXT",
              "Value": "zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "alias php_xdebug=\"php -d$XDEBUG_EXT vendor/bin/phpunit\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \t\u0026\u0026 mv composer.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \t\u0026\u0026 chmod 755 phpcs.phar \t\u0026\u0026 mv phpcs.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs \t\u0026\u0026 curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \t\u0026\u0026 chmod 755 phpcbf.phar \t\u0026\u0026 mv phpcbf.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://phar.phpunit.de/phpunit.phar \t\u0026\u0026 chmod 755 phpunit.phar \t\u0026\u0026 mv phpunit.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/conf.d/docker-php.ini"
          ]
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \t\u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \t\u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g gulp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y software-properties-common dirmngr \t\u0026\u0026 apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xF1656F24C74CD1D8 \t\u0026\u0026 add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://mirror.vpsfree.cz/mariadb/repo/10.1/debian stretch main'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y mariadb-server \t\u0026\u0026 mysql_install_db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mysql"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "my.cnf",
            "/etc/mysql/conf.d/my.cnf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "CmdLine": [
            "pecl install -o -f redis \t\u0026\u0026  rm -rf /tmp/pear \t\u0026\u0026  docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install libnss3-dev -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}