{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:6",
      "SourceCode": "FROM centos:6",
      "Platform": "",
      "From": {
        "Image": "centos:6"
      },
      "Commands": [
        {
          "Maintainer": "Karthik M'lore karthikmlore@outlook.com",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "ROOT_HOME",
          "Name": "arg",
          "Value": "/root"
        },
        {
          "Key": "HADOOP_VERSION",
          "Name": "arg",
          "Value": "2.7.3"
        },
        {
          "Key": "SPARK_VERSION",
          "Name": "arg",
          "Value": "2.4.0"
        },
        {
          "Key": "HBASE_VERSION",
          "Name": "arg",
          "Value": "2.1.3"
        },
        {
          "Key": "TEZ_VERSION",
          "Name": "arg",
          "Value": "0.9.1"
        },
        {
          "Key": "HIVE_VERSION",
          "Name": "arg",
          "Value": "2.3.4"
        },
        {
          "Key": "ZOOKEEPER_VERSION",
          "Name": "arg",
          "Value": "3.4.13"
        },
        {
          "Key": "KAFKA_VERSION",
          "Name": "arg",
          "Value": "2.1.0"
        },
        {
          "Key": "MYSQL_VERSION",
          "Name": "arg",
          "Value": "5.1.73-8.el6_8"
        },
        {
          "Key": "MYSQL_CONNECTOR_VERSION",
          "Name": "arg",
          "Value": "5.1.47"
        },
        {
          "CmdLine": [
            "yum clean all \u0026\u0026     rpm --rebuilddb \u0026\u0026     yum install -y curl which tar sudo openssh-server openssh-clients rsync mysql-server-${MYSQL_VERSION} \u0026\u0026     yum clean all \u0026\u0026     yum update -y libselinux \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key \u0026\u0026     ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key \u0026\u0026     ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa \u0026\u0026     cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/local/java"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_HOME",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_PREFIX",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_COMMON_HOME",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_HDFS_HOME",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_MAPRED_HOME",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_YARN_HOME",
              "Value": "/usr/local/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_CONF_DIR",
              "Value": "/usr/local/hadoop/etc/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_CONF_DIR",
              "Value": "$HADOOP_HOME/etc/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HBASE_HOME",
              "Value": "/usr/local/hbase"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEZ_HOME",
              "Value": "/usr/local/tez"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEZ_JARS",
              "Value": "/usr/local/tez:/usr/local/tez/lib/*"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEZ_CONF_DIR",
              "Value": "/usr/local/tez/conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HIVE_HOME",
              "Value": "/usr/local/hive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HIVE_AUX_JARS_PATH",
              "Value": "/usr/local/tez"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZOOKEEPER_HOME",
              "Value": "/usr/local/zookeeper"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KAFKA_HOME",
              "Value": "/usr/local/kafka"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BOOTSTRAP",
              "Value": "/etc/bootstrap.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$SPARK_HOME/bin:$HBASE_HOME/bin:$HIVE_HOME/bin:$ZOOKEEPER_HOME/bin:$KAFKA_HOME/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L# 'https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u202b08.tar.gz' | tar -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# https://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz | tar -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz | tar -xzv -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# https://archive.apache.org/dist/hbase/${HBASE_VERSION}/hbase-${HBASE_VERSION}-bin.tar.gz | tar -xzv -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.tar.gz | tar -xzv -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# https://archive.apache.org/dist/hive/hive-${HIVE_VERSION}/apache-hive-${HIVE_VERSION}-bin.tar.gz | tar -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# https://archive.apache.org/dist/zookeeper/zookeeper-${ZOOKEEPER_VERSION}/zookeeper-${ZOOKEEPER_VERSION}.tar.gz | tar -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L# https://archive.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_2.11-${KAFKA_VERSION}.tgz | tar -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f OpenJDK8U-jdk_x64_linux_hotspot_8u202b08.tar.gz hadoop-${HADOOP_VERSION}.tar.gz spark-${SPARK_VERSION}-bin-hadoop2.7.tgz hbase-${HBASE_VERSION}-bin.tar.gz mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.tar.gz apache-tez-${TEZ_VERSION}-bin.tar.gz apache-hive-${HIVE_VERSION}-bin.tar.gz zookeeper-${ZOOKEEPER_VERSION}.tar.gz kafka_2.11-${KAFKA_VERSION}.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /usr/bin/java \u0026\u0026     cd /usr/local \u0026\u0026     ln -s ./jdk8u202-b08 $JAVA_HOME \u0026\u0026     ln -s $JAVA_HOME/bin/java /usr/bin/java \u0026\u0026     ln -s ./hadoop-${HADOOP_VERSION} $HADOOP_HOME \u0026\u0026     ln -s ./spark-${SPARK_VERSION}-bin-hadoop2.7 $SPARK_HOME \u0026\u0026     ln -s ./hbase-${HBASE_VERSION} $HBASE_HOME \u0026\u0026     ln -s ./apache-tez-${TEZ_VERSION}-bin $TEZ_HOME \u0026\u0026     ln -s ./apache-hive-${HIVE_VERSION}-bin $HIVE_HOME \u0026\u0026     ln -s ./zookeeper-${ZOOKEEPER_VERSION} $ZOOKEEPER_HOME \u0026\u0026     ln -s ./kafka_2.11-${KAFKA_VERSION} $KAFKA_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hadoop/core-site.xml",
            "$HADOOP_HOME/etc/hadoop/core-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hadoop/hdfs-site.xml",
            "$HADOOP_HOME/etc/hadoop/hdfs-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hadoop/mapred-site.xml",
            "$HADOOP_HOME/etc/hadoop/mapred-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hadoop/yarn-site.xml",
            "$HADOOP_HOME/etc/hadoop/yarn-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hive/hive-site.xml",
            "$HIVE_HOME/conf/hive-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hive/hive-site.xml",
            "$SPARK_HOME/conf/hive-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/tez/tez-site.xml",
            "$TEZ_HOME/conf/tez-site.xml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/spark/spark-defaults.conf",
            "$SPARK_HOME/conf/spark-defaults.conf"
          ]
        },
        {
          "CmdLine": [
            "rm -f $HADOOP_HOME/etc/hadoop/slaves \u0026\u0026     rm -f $HBASE_HOME/conf/hbase-site.xml \u0026\u0026     mv $ZOOKEEPER_HOME/conf/zoo_sample.cfg $ZOOKEEPER_HOME/conf/zoo.cfg \u0026\u0026     cp /usr/local/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}-bin.jar $HIVE_HOME/lib/mysql-connector-java.jar \u0026\u0026     cp /usr/local/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}-bin.jar $SPARK_HOME/jars/mysql-connector-java.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/hadoop/slaves",
            "$HADOOP_HOME/etc/hadoop/slaves"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/hbase/hbase-site.xml",
            "$HBASE_HOME/conf/hbase-site.xml"
          ]
        },
        {
          "CmdLine": [
            "sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/local/java\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \u0026\u0026     sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bootstrap.sh",
            "/etc/bootstrap.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ssh_config",
            "/root/.ssh/config"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 ${ROOT_HOME}/.ssh/config \u0026\u0026     chown root:root ${ROOT_HOME}/.ssh/config \u0026\u0026     chown root:root /etc/bootstrap.sh \u0026\u0026     chmod 700 /etc/bootstrap.sh \u0026\u0026     chmod +x $HADOOP_HOME/etc/hadoop/*-env.sh \u0026\u0026     adduser hdpuser \u0026\u0026     echo 'hdpuser:hdppassword' | chpasswd \u0026\u0026     usermod -aG wheel hdpuser \u0026\u0026     echo \"%wheel        ALL=(ALL)       ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export JAVA_HOME=/usr/local/java' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_HOME=/usr/local/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_PREFIX=/usr/local/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_COMMON_HOME=/usr/local/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_HDFS_HOME=/usr/local/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_MAPRED_HOME=/usr/local/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_YARN_HOME=/usr/local/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export YARN_CONF_DIR=$HADOOP_HOME/etc/hadoop' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export SPARK_HOME=/usr/local/spark' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HBASE_HOME=/usr/local/hbase' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export TEZ_HOME=/usr/local/tez' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export TEZ_CONF_DIR=/usr/local/tez/conf' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export TEZ_JARS=/usr/local/tez:/usr/local/tez/lib/*' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HIVE_HOME=/usr/local/hive' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export HIVE_AUX_JARS_PATH=/usr/local/tez' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export ZOOKEEPER_HOME=/usr/local/zookeeper' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export KAFKA_HOME=/usr/local/kafka' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export BOOTSTRAP=/etc/bootstrap.sh' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$SPARK_HOME/bin:$HBASE_HOME/bin:$HIVE_HOME/bin:$ZOOKEEPER_HOME/bin:$KAFKA_HOME/bin' \u003e\u003e /etc/bashrc \u0026\u0026     echo 'export SPARK_MAJOR_VERSION=2' \u003e\u003e /etc/bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"/^[^#]*UsePAM/ s/.*/#\u0026/\" /etc/ssh/sshd_config \u0026\u0026     sed -i 's/RSAAuthentication no/RSAAuthentication yes/g' /etc/ssh/sshd_config \u0026\u0026     echo \"UsePAM no\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo \"Port 2122\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     passwd -u -f root \u0026\u0026     echo \"Match User hdpuser\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo \"    PasswordAuthentication yes\" \u003e\u003e /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$HADOOP_HOME/etc/hadoop/hadoop-env.sh \u0026\u0026     $HADOOP_HOME/bin/hdfs namenode -format"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/bootstrap.sh",
            "-d"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "50010",
            "50020",
            "50070",
            "50075",
            "50090"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "19888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8030",
            "8031",
            "8032",
            "8033",
            "8040",
            "8042",
            "8088"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "4040"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2181",
            "9092"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2122",
            "49707"
          ]
        }
      ]
    }
  ]
}