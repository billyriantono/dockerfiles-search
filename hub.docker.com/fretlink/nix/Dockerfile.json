{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Key": "NIX_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "NIX_VERSION",
              "Value": "${NIX_VERSION:-2.3.1}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "LANG",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "${LANG:-\"en_US.UTF-8\"}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -g 30000 -S nixbld     \u0026\u0026 for i in $(seq 1 30); do adduser -S -D -h /var/empty -g \"Nix build user $i\" -u $((30000 + i)) -G nixbld nixbld$i ; done     \u0026\u0026 adduser -D nixuser     \u0026\u0026 mkdir -m 0755 /nix \u0026\u0026 chown nixuser /nix     \u0026\u0026 apk add --no-cache bash xz     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 mkdir -p /etc/nix \u0026\u0026 echo 'sandbox = false' \u003e /etc/nix/nix.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nixuser"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "nixuser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "\"/home/nixuser\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 wget https://nixos.org/releases/nix/nix-$NIX_VERSION/nix-$NIX_VERSION-x86_64-linux.tar.xz     \u0026\u0026 tar xJf nix-*-x86_64-linux.tar.xz     \u0026\u0026 ~/nix-*-x86_64-linux/install     \u0026\u0026 rm -rf ~/nix-*-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ENV",
              "Value": "\"/home/nixuser/.nix-profile/etc/profile.d/nix.sh\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \". ${ENV}\" \u003e\u003e ${HOME}/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/usr/bin/env",
            "bash",
            "-l",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "nix-channel --add https://nixos.org/channels/nixpkgs-19.09-darwin nixpkgs     \u0026\u0026 nix-channel --add https://nixos.org/channels/nixpkgs-unstable unstable     \u0026\u0026 nix-channel --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nix-env -iA nixpkgs.glibcLocales     \u0026\u0026 echo \"export LOCALE_ARCHIVE=$(nix-env --installed --no-name --out-path --query glibc-locales)/lib/locale/locale-archive\" \u003e\u003e ${HOME}/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/env",
            "bash",
            "-l",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}