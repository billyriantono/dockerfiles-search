{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "\"/etc\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_TIMEZONE",
              "Value": "\"Asia/Tokyo\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --mariadb-server-version=mariadb-10.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum update -y   \u0026\u0026 yum install http://rpms.famillecollet.com/enterprise/remi-release-7.rpm -y   \u0026\u0026 yum-config-manager --enable remi-php71   \u0026\u0026 yum -y install make   \u0026\u0026 yum -y install gcc   \u0026\u0026 yum -y install gcc-c++   \u0026\u0026 yum -y install autoconf   \u0026\u0026 yum -y install automake   \u0026\u0026 yum -y install git   \u0026\u0026 yum -y install vim   \u0026\u0026 yum -y install zip   \u0026\u0026 yum -y install unzip   \u0026\u0026 yum -y install php   \u0026\u0026 yum -y install php-fpm   \u0026\u0026 yum -y install php-pdo   \u0026\u0026 yum -y install php-mysql   \u0026\u0026 yum -y install php-pdo   \u0026\u0026 yum -y install php-xml   \u0026\u0026 yum -y install php-devel   \u0026\u0026 yum -y install php-pear   \u0026\u0026 yum -y install php-gmp   \u0026\u0026 yum -y install php-mbstring   \u0026\u0026 yum -y install php-intl   \u0026\u0026 yum -y install php-opcache   \u0026\u0026 yum -y install php-pecl-apcu   \u0026\u0026 yum -y install yum-cron   \u0026\u0026 yum -y install MariaDB-client   \u0026\u0026 yum -y install postfix   \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"zend_extension=xdebug.so\" \u003e $PHP_INI_DIR/php.d/15-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\"   \u0026\u0026 php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/php-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/^listen.allowed_clients/c;listen.allowed_clients =' /etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 cd /etc \t\u0026\u0026 { \t\techo '[global]'; \t\techo 'error_log = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2'; \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout and stderr are sent to the main error log.'; \t\techo 'catch_workers_output = yes'; \t} | tee php-fpm.d/docker.conf \t\u0026\u0026 { \t\techo '[global]'; \t\techo 'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = 9000'; \t} | tee php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "launch.sh",
            "/launch.sh"
          ]
        },
        {
          "CmdLine": [
            "/launch.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}