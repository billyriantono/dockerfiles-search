MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -y libltdl7
    Name: run
    PrependShell: true
  - Key: dockerGid
    Name: arg
    Value: "993"
  - CmdLine:
    - echo "dockerroot:x:${dockerGid}:jenkins" >> /etc/group
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gcc g++ make
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g cnpm --registry=https://registry.npm.taobao.org
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "host_key_checking = False" >> /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https dirmngr
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --no-tty --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://download.mono-project.com/repo/debian stable-stretch main"
      > /etc/apt/sources.list.d/mono-official-stable.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mono-devel mono-complete mono-dbg referenceassemblies-pcl
      ca-certificates-mono mono-xsp4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y convmv
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "#!/bin/sh\nMONO_GC_PARAMS=\"nursery-size=64m,\$MONO_GC_PARAMS\" exec /usr/bin/mono
      \$MONO_OPTIONS /usr/bin/nuget.exe \"\$@\"" > /usr/bin/nuget
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/bin/nuget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends         libc6         libcurl3         libgcc1         libgssapi-krb5-2         libicu57         liblttng-ust0         libssl1.0.2         libstdc++6         libunwind8         libuuid1         zlib1g     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_SDK_VERSION
      Value: 2.2.105
    Name: env
  - Env:
    - Key: DOTNET_SDK_DOWNLOAD_URL
      Value: https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: DOTNET_SDK_DOWNLOAD_SHA
      Value: b7ad26b344995de91848adec56bda5dfe5fef0b83abaa3e4376dc790cf9786e945b625de1ae4cecaf5c5bef86284652886ed87696581553aeda89ee2e2e99517
    Name: env
  - CmdLine:
    - curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz     && echo "$DOTNET_SDK_DOWNLOAD_SHA
      dotnet.tar.gz" | sha512sum -c -     && mkdir -p /usr/share/dotnet     && tar
      -zxf dotnet.tar.gz -C /usr/share/dotnet     && rm dotnet.tar.gz     && ln -s
      /usr/share/dotnet/dotnet /usr/bin/dotnet
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_RUNNING_IN_CONTAINER
      Value: "true"
    - Key: DOTNET_USE_POLLING_FILE_WATCHER
      Value: "true"
    - Key: NUGET_XMLDOC_MODE
      Value: skip
    Name: env
  - CmdLine:
    - mkdir warmup     && cd warmup     && dotnet new     && cd ..     && rm -rf warmup     &&
      rm -rf /tmp/NuGetScratch
    Name: run
    PrependShell: true
  - Env:
    - Key: RestoreUseSkipNonexistentTargets
      Value: "false"
    Name: env
  - Name: user
    User: jenkins
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
