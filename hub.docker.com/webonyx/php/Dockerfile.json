{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-apache",
      "SourceCode": "FROM php:5.6-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.6-apache"
      },
      "Commands": [
        {
          "Maintainer": "Viet Pham \u003cviet@webonyx.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libapache2-mod-xsendfile git     libpng12-dev libjpeg-dev libmcrypt-dev libmemcached-dev libgearman-dev uuid-dev libtidy-dev libmagickwand-dev     zlib1g-dev libicu-dev --no-install-recommends \t\u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \t\u0026\u0026 docker-php-ext-configure intl \t\u0026\u0026 docker-php-ext-configure zip \t\u0026\u0026 docker-php-ext-configure tidy \t\u0026\u0026 docker-php-ext-install gd zip intl tidy pdo_mysql opcache iconv mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install memcache memcached gearman uuid imagick     \u0026\u0026 docker-php-ext-enable memcache memcached gearman uuid imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y --auto-remove uuid-dev libpng12-dev libjpeg-dev libgearman-dev libmemcached-dev libtidy-dev libmcrypt-dev libmagickwand-dev     \u0026\u0026 apt-get install -y libicu52 libjpeg62-turbo libgearman7 libmemcached11 libmemcachedutil2 libmcrypt4 libtidy-0.99-0 libmagickwand-6.q16-2    --no-install-recommends     \u0026\u0026 apt-get clean \u0026\u0026 apt-get autoremove -q     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /usr/share/doc /usr/share/man /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod ssl rewrite expires headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\" \u0026\u0026     php -r \"copy('https://composer.github.io/installer.sig', '/tmp/composer-setup.sig');\" \u0026\u0026     php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \u0026\u0026     php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer  --version=$COMPOSER_VERSION \u0026\u0026     php -r \"unlink('/tmp/composer-setup.php');\" \u0026\u0026     rm -rf /tmp/*  \u0026\u0026     composer global require \"hirak/prestissimo:^0.3\" --update-no-dev"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}