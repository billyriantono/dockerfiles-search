MetaArgs: null
Stages:
- BaseName: jenkinsci/jnlp-slave:3.29-1
  Commands:
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.24.0
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: v2.14.3
    Name: env
  - Env:
    - Key: CLOUDSDK_CORE_DISABLE_PROMPTS
      Value: "1"
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/google-cloud-sdk/bin:${PATH}
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/lib/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: /gopath
    Name: env
  - Env:
    - Key: GOBIN
      Value: /gopath/bin
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GOROOT}/bin:${GOPATH}/bin
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GIT_LFS_SKIP_SMUDGE
      Value: "1"
    Name: env
  - Env:
    - Key: APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE
      Value: "10"
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get -y install apt-transport-https          ca-certificates          curl          gnupg2          software-properties-common
      &&     curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo
      "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey &&     add-apt-repository     "deb
      [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")     $(lsb_release
      -cs)     stable" &&     apt-get update &&     apt-get -y install docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
      &&     docker-compose --version
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y     less     man     ssh     vim     python     python-pip
      &&     pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&     apt-get install -y jq golang git make &&     curl https://sdk.cloud.google.com
      | bash && mv google-cloud-sdk /opt &&     gcloud components install kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -P /tmp &&     tar -zxvf /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz -C /tmp
      && mv /tmp/linux-amd64/helm /bin/helm && rm -rf /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${GOBIN} &&     mkdir /tmp &&     curl https://glide.sh/get | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common &&     add-apt-repository ppa:git-core/ppa
      &&     curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | bash &&     apt-get install -y --allow-unauthenticated git-lfs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --allow-unauthenticated nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get remove -y cmdtest
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --allow-unauthenticated yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G docker root
    Name: run
    PrependShell: true
  From:
    Image: jenkinsci/jnlp-slave:3.29-1
  Name: ""
  Platform: ""
  SourceCode: FROM jenkinsci/jnlp-slave:3.29-1
