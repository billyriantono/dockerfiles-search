{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "Nidhin Pattaniyil \u003cnpattaniyil@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "CONDA_PYTHON_VERSION",
          "Name": "arg",
          "Value": "3"
        },
        {
          "Key": "CONDA_VERSION",
          "Name": "arg",
          "Value": "4.3.31"
        },
        {
          "Key": "CONDA_DIR",
          "Name": "arg",
          "Value": "/opt/conda"
        },
        {
          "Key": "TINI_VERSION",
          "Name": "arg",
          "Value": "v0.16.1"
        },
        {
          "Key": "USERNAME",
          "Name": "arg",
          "Value": "ubuntu"
        },
        {
          "Key": "USERID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Env": [
            {
              "Key": "CONDA_ENV",
              "Value": "dl"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget git unzip ffmpeg sudo libxrender-dev libsm6 libxext6 \u0026\u0026   wget --quiet https://repo.continuum.io/miniconda/Miniconda$CONDA_PYTHON_VERSION-$CONDA_VERSION-Linux-x86_64.sh -O /tmp/miniconda.sh \u0026\u0026   /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR \u0026\u0026   rm -rf /tmp/* \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --create-home -s /bin/bash --no-user-group -u $USERID $USERNAME  \u0026\u0026   chown $USERNAME $CONDA_DIR -R \u0026\u0026   adduser $USERNAME sudo \u0026\u0026   echo \"$USERNAME ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USERNAME"
        },
        {
          "Name": "workdir",
          "Path": "/home/$USERNAME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "environment.yml",
            "."
          ]
        },
        {
          "CmdLine": [
            "conda env update -f=environment.yml -n root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "environment_additional.yml",
            "."
          ]
        },
        {
          "CmdLine": [
            "conda env update -f environment_additional.yml  -n root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            ".jupyter/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "git clone -q https://github.com/fastai/fastai fastai-courses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter notebook --port=8888"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}