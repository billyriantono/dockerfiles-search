MetaArgs: null
Stages:
- BaseName: openjdk:8-alpine
  Commands:
  - Maintainer: Yuu YOSHIMURA <yyu [at] mental.poker>
    Name: maintainer
  - Key: REPOSITORY
    Name: arg
    Value: http://ftp.jaist.ac.jp/pub/CTAN/systems/texlive/tlnet
  - Env:
    - Key: PATH
      Value: /usr/local/texlive/bin/x86_64-linux:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.25-r0" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates
      &&     wget         "https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub"         -O
      "/etc/apk/keys/sgerrand.rsa.pub" &&     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&         rm "/etc/apk/keys/sgerrand.rsa.pub" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 ja_JP.UTF-8 || true &&     echo "export
      LANG=ja_JP.UTF-8" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm
      "/root/.wget-hsts" &&     apk del .build-dependencies &&     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add tzdata &&     cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
      &&     echo 'Asia/Tokyo' > /etc/timezone &&     apk --no-cache del tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/install-tl-unx
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - texlive.profile
    - /tmp/install-tl-unx/texlive.profile
  - CmdLine:
    - apk --no-cache add wget perl fontconfig-dev xz tar &&     wget -qO- "$REPOSITORY/install-tl-unx.tar.gz"
      |       tar -xz -C /tmp/install-tl-unx --strip-components=1 &&     /tmp/install-tl-unx/install-tl       -profile
      /tmp/install-tl-unx/texlive.profile       -repository http://ftp.jaist.ac.jp/pub/CTAN/systems/texlive/tlnet
      &&     tlmgr       -repository $REPOSITORY       install         collection-luatex
      collection-fontsrecommended datetime2 texosquery         tracklang etoolbox
      xkeyval &&     apk --no-cache del wget fontconfig-dev xz tar &&     rm -rf /tmp/install-tl-unx
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /workdir
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dtmnow.tex
    - /workdir/dtmnow.tex
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mwe.tex
    - /workdir/mwe.tex
  - CmdLine:
    - cd /workdir &&     lualatex dtmnow.tex &&     lualatex --shell-escape mwe.tex
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add bash
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /workdir
  - Name: volume
    Volumes:
    - /workdir
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-alpine
