MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.2-cudnn7-devel
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Paulus Schoutsen <Paulus@PaulusSchoutsen.nl>"'
    Name: label
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get
      install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf
      /var/lib/apt/lists/*; \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\topenssh-client
      \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf
      \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick
      \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev
      \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibgeoip-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev
      \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev
      \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev
      \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev
      \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\txz-utils \t\tzlib1g-dev
      \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null
      | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse
      \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\ttcl \t\ttk
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.5
    Name: env
  - CmdLine:
    - "set -ex \t&& buildDeps=' \t\tdpkg-dev \t\ttcl-dev \t\ttk-dev \t' \t&& apt-get
      update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*
      \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&&
      tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip
      \t&& make -j \"$(nproc)\" \t&& make install \t&& ldconfig \t\t&& apt-get purge
      -y --auto-remove $buildDeps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\(
      -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f
      -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' + \t&&
      rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s
      python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 10.0.1
    Name: env
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython
      get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name
      '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /config
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - virtualization/Docker/
    - virtualization/Docker/
  - CmdLine:
    - virtualization/Docker/setup_docker_prereqs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements_all.txt
    - requirements_all.txt
  - CmdLine:
    - pip3 install --no-cache-dir -r requirements_all.txt &&     pip3 install --no-cache-dir
      mysqlclient psycopg2 uvloop cchardet cython
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - python
    - -m
    - homeassistant
    - --config
    - /config
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:9.2-cudnn7-devel
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.2-cudnn7-devel
