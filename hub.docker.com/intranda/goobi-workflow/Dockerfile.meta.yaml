MetaArgs: null
Stages:
- As: build
  BaseName: maven:3.6.0-jdk-8
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /goobi/
  - Name: workdir
    Path: /goobi
  - CmdLine:
    - mvn -f Goobi/pom.xml clean package
    Name: run
    PrependShell: true
  From:
    Image: maven:3.6.0-jdk-8
  Name: build
  Platform: ""
  SourceCode: FROM maven:3.6.0-jdk-8 AS BUILD
- As: assemble
  BaseName: tomcat:8.5-jre8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Matthias Geerdsen <matthias.geerdsen@intranda.com>"'
    Name: label
  - Env:
    - Key: DB_SERVER
      Value: goobi-db
    Name: env
  - Env:
    - Key: DB_PORT
      Value: "3306"
    Name: env
  - Env:
    - Key: DB_NAME
      Value: goobi
    Name: env
  - Env:
    - Key: DB_USER
      Value: goobi
    Name: env
  - Env:
    - Key: DB_PASSWORD
      Value: goobi
    Name: env
  - CmdLine:
    - /bin/bash
    - -c
    - mkdir -p /opt/digiverso/goobi/{activemq,config,lib,metadata,rulesets,scripts,static_assets,tmp,xslt,plugins/{administration,command,dashboard,export,GUI,import,opac,statistics,step,validation,workflow}}
    Name: run
    PrependShell: false
  - CmdLine:
    - mkdir -p /usr/local/tomcat/conf/Catalina/localhost/ && mkdir -p /usr/local/tomcat/webapps/goobi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/docker/goobi.xml.template
    - /usr/local/tomcat/conf/goobi.xml.template
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/config/
    - /opt/digiverso/goobi/config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/rulesets/
    - /opt/digiverso/goobi/rulesets/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/scripts/
    - /opt/digiverso/goobi/scripts/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/xslt/
    - /opt/digiverso/goobi/xslt/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/docker/setenv.sh
    - /usr/local/tomcat/bin/setenv.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/docker/server.xml
    - /usr/local/tomcat/conf/server.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/docker/run.sh
    - /run.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Goobi/install/docker/log4j.xml
    - /opt/digiverso/log4j.xml
  - CmdLine:
    - sed -i 's/TOMCATUSER=tomcat8/TOMCATUSER=root/' /opt/digiverso/goobi/scripts/iii.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y install rsync         sudo         imagemagick         libtiff-tools         graphicsmagick         exiv2         bc         rename         file         mysql-client         gettext-base
      &&     apt-get -y clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
      &&     rm -rf ${CATALINA_HOME}/webapps/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ${CATALINA_HOME}/webapps/ROOT &&     echo '<% response.sendRedirect("/goobi/");
      %>' > ${CATALINA_HOME}/webapps/ROOT/index.jsp
    Name: run
    PrependShell: true
  - Chown: ""
    From: BUILD
    Name: copy
    SourcesAndDest:
    - /goobi/Goobi/module-war/target/goobi.war
    - /
  - CmdLine:
    - unzip /goobi.war -d /usr/local/tomcat/webapps/goobi && rm /goobi.war
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: true
  From:
    Image: tomcat:8.5-jre8
  Name: assemble
  Platform: ""
  SourceCode: FROM tomcat:8.5-jre8 as ASSEMBLE
