{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.22",
      "SourceCode": "FROM phusion/baseimage:0.9.22",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.22"
      },
      "Commands": [
        {
          "Maintainer": "Zhan.Shi \u003cg.shizhan.g@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq         wget unzip build-essential         zlib1g-dev         libaio1 libaio-dev         libboost-dev libboost-system-dev libboost-program-options-dev libboost-thread-dev         libnuma-dev libblas-dev liblapack-dev         libcilkrts5         graphviz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -Rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/epfl-labos/x-stream/archive/9cf34b3415219bdcf41c67c0881b28b6fd1beb90.zip         \u0026\u0026 unzip 9cf34b3415219bdcf41c67c0881b28b6fd1beb90.zip         \u0026\u0026 rm 9cf34b3415219bdcf41c67c0881b28b6fd1beb90.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv x-stream-9cf34b3415219bdcf41c67c0881b28b6fd1beb90 x-stream         \u0026\u0026 cd x-stream \u0026\u0026 mkdir object_files \u0026\u0026 mkdir bin \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/epfl-labos/EverythingGraph/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv EverythingGraph-master everything-graph \u0026\u0026 cd everything-graph \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/GraphChi/graphchi-cpp/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv graphchi-cpp-master graphchi \u0026\u0026 cd graphchi \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/thu-pacman/GridGraph/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv GridGraph-master gridgraph \u0026\u0026 cd gridgraph \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/iHeartGraph/gstore/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv gstore-master gstore \u0026\u0026 cd gstore \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/iHeartGraph/Graphene/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv Graphene-master graphene \u0026\u0026         cd /graphene/graphene/test \u0026\u0026                 for d in *; do                         [ -d $d ] \u0026\u0026 (cd $d; sed -i 's/^flags = .*/ \u0026 -L..\\/..\\/lib\\//g' Makefile; make);                 done \u0026\u0026         cd /graphene/converter \u0026\u0026                 for d in *; do                         [ -d $d ] \u0026\u0026 (cd $d; make);                 done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/jshun/ligra/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CILK",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mv ligra-master ligra \u0026\u0026 cd ligra/apps \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/snap-stanford/snap/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv snap-master snap \u0026\u0026 cd snap \u0026\u0026 make all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 wget https://github.com/Zhan2012/generator/archive/master.zip \u0026\u0026 unzip master.zip \u0026\u0026 rm master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv generator-master generator \u0026\u0026 cd generator/src \u0026\u0026 make \u0026\u0026 make test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/datasets"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/datasets"
        },
        {
          "CmdLine": [
            "/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}