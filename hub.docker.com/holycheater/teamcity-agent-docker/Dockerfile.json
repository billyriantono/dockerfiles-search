{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "AGENT_DIR",
              "Value": "/opt/buildAgent"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends \t\tlxc iptables aufs-tools ca-certificates curl wget software-properties-common language-pack-en unzip \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US \u0026\u0026 update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 gpg --verify /usr/local/bin/gosu.asc \t\u0026\u0026 rm /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \t\u0026\u0026 echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \t\u0026\u0026 add-apt-repository -y ppa:webupd8team/java \t\u0026\u0026 apt-get update   \t\u0026\u0026 apt-get install -y --no-install-recommends       oracle-java8-installer ca-certificates-java   \t\u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/oracle-jdk8-installer/*.tar.gz /usr/lib/jvm/java-8-oracle/src.zip /usr/lib/jvm/java-8-oracle/javafx-src.zip       /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts   \t\u0026\u0026 ln -s /etc/ssl/certs/java/cacerts /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts   \t\u0026\u0026 update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://get.docker.com/builds/Linux/x86_64/docker-1.11.1.tgz | tar -xz -C /usr/local/bin --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd docker \u0026\u0026 adduser --disabled-password --gecos \"\" teamcity \t\u0026\u0026 sed -i -e \"s/%sudo.*$/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/\" /etc/sudoers \t\u0026\u0026 usermod -a -G docker,sudo teamcity"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/1.7.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/kreuzwerker/envplate/releases/download/1.0.0-RC1/ep-linux -o /usr/local/bin/ep \u0026\u0026 chmod +x /usr/local/bin/ep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "wrapdocker",
            "/usr/local/bin/wrapdocker"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/buildAgent"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9090"
          ]
        }
      ]
    }
  ]
}