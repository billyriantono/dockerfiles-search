{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Corey Forman",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y   virtualenv   nano   git   python   python-pip   python-dev   libssl-dev   automake   make   gcc   flex   libtool   bison   ncurses-dev \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade setuptools pip wheel readline future==0.16.0 pybindgen pyaff4==0.26.post6 \u0026\u0026   rm /usr/bin/pip \u0026\u0026 ln -s /usr/local/bin/pip /usr/bin/pip \u0026\u0026   pip install fastchunking pyopenssl \u0026\u0026   pip install -q distorm3 \u0026\u0026   git clone https://github.com/VirusTotal/yara.git \u0026\u0026   cd yara \u0026\u0026   bash bootstrap.sh \u0026\u0026   bash configure \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   make check \u0026\u0026   echo \"/usr/local/lib\" \u003e\u003e /etc/ld.so.conf \u0026\u0026   ldconfig \u0026\u0026   cd .. \u0026\u0026   rm -rf yara \u0026\u0026   pip install rekall-agent rekall \u0026\u0026   apt autoremove -y --purge \u0026\u0026   apt clean -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r nonroot \u0026\u0026   useradd -r -g nonroot -d /home/nonroot -s /sbin/nologin -c \"Nonroot User\" nonroot \u0026\u0026   mkdir /home/nonroot \u0026\u0026   chown -R nonroot:nonroot /home/nonroot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nonroot"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/nonroot"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/nonroot"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "nonroot"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}