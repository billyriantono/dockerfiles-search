MetaArgs: null
Stages:
- BaseName: python:2.7.14-stretch
  Commands:
  - Maintainer: GeoNode development team
    Name: maintainer
  - CmdLine:
    - mkdir -p /usr/src/{app,geonode}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tgcc \t\tgettext \t\tpostgresql-client
      libpq-dev \t\tsqlite3                 python-gdal python-psycopg2                 python-imaging
      python-lxml                 python-dev libgdal-dev                 python-ldap
      \                libmemcached-dev libsasl2-dev zlib1g-dev                 python-pylibmc
      \                uwsgi uwsgi-plugin-python \t--no-install-recommends && rm -rf
      /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wait-for-databases.sh
    - /usr/bin/wait-for-databases
  - CmdLine:
    - chmod +x /usr/bin/wait-for-databases
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install GDAL==2.1.0 --global-option=build_ext --global-option="-I/usr/include/gdal"
    Name: run
    PrependShell: true
  - Key: GEONODE_BRANCH
    Name: arg
    Value: master
  - CmdLine:
    - git clone --depth=1 git://github.com/GeoNode/geonode.git --branch ${GEONODE_BRANCH}
      /usr/src/geonode
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/geonode/; pip install --upgrade --no-cache-dir -r requirements.txt;
      pip install --upgrade -e .
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/src/geonode/tasks.py /usr/src/app/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/src/geonode/entrypoint.sh /usr/src/app/
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/src/app/tasks.py     && chmod +x /usr/src/app/entrypoint.sh
    Name: run
    PrependShell: true
  - Expression: RUN cd /usr/src/geonode/; git pull ; pip install --upgrade --no-cache-dir
      -r requirements.txt; pip install --upgrade -e .
    Name: onbuild
  - Expression: COPY . /usr/src/app
    Name: onbuild
  - Expression: RUN pip install --upgrade --no-cache-dir -r /usr/src/app/requirements.txt
    Name: onbuild
  - Expression: RUN pip install -e /usr/src/app --upgrade
    Name: onbuild
  - Expression: COPY requirements.txt /usr/src/app/
    Name: onbuild
  - Expression: RUN pip install --upgrade --no-cache-dir -r requirements.txt
    Name: onbuild
  - Expression: COPY . /usr/src/app/
    Name: onbuild
  - Expression: RUN pip install --upgrade --no-cache-dir -e /usr/src/app/
    Name: onbuild
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - /usr/src/app/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - uwsgi
    - --ini
    - /usr/src/app/uwsgi.ini
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7.14-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7.14-stretch
