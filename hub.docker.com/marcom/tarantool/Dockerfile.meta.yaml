MetaArgs: null
Stages:
- BaseName: debian:stable
  Commands:
  - Maintainer: mail@racktear.com
    Name: maintainer
  - CmdLine:
    - groupadd -r tarantool && useradd -r -g tarantool tarantool
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -x     && apt-get update && apt-get install -y --no-install-recommends
      \t\tca-certificates \t\twget         gnupg2         dirmngr \t&& wget -O /usr/local/bin/gosu
      \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true     && apt-get purge -y ca-certificates wget gnupg2 dirmngr
      \    && apt-get autoremove -y \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: TARANTOOL_VERSION
      Value: 1.9.0-52-g38b2a29ff
    - Key: TARANTOOL_DOWNLOAD_URL
      Value: https://github.com/tarantool/tarantool.git
    - Key: TARANTOOL_INSTALL_LUADIR
      Value: /usr/local/share/tarantool
    - Key: LUAROCKS_URL
      Value: https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz
    - Key: LUAROCK_SHARD_REPO
      Value: https://github.com/tarantool/shard.git
    - Key: LUAROCK_SHARD_TAG
      Value: 8f8c5a7
    - Key: LUAROCK_AVRO_SCHEMA_VERSION
      Value: 2.0.1
    - Key: LUAROCK_EXPERATIOND_VERSION
      Value: 1.0.1
    - Key: LUAROCK_QUEUE_VERSION
      Value: 1.0.2
    - Key: LUAROCK_CONNPOOL_VERSION
      Value: 1.1.1
    - Key: LUAROCK_HTTP_VERSION
      Value: 1.0.1
    - Key: LUAROCK_TARANTOOL_CURL_VERSION
      Value: 2.3.1
    - Key: LUAROCK_TARANTOOL_PROMETHEUS_VERSION
      Value: 1.0.0
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - luarocks-config.lua
    - /usr/local/etc/luarocks/config-5.1.lua
  - CmdLine:
    - "BUILD_PACKAGES='         devscripts         equivs         git         build-essential
      \        wget         make         cmake         cdbs         gcc         g++
      \        unzip         libreadline-dev         libncurses5-dev         binutils-dev
      \        libiberty-dev         libbfd-dev         uuid-dev         liblua5.1-0-dev
      \        libunwind-dev         libicu-dev         libev-dev         libcurl4-openssl-dev';
      \    set -ex     && apt-get update     && apt-get upgrade --yes     && apt-get
      install --yes --no-install-recommends $BUILD_PACKAGES ca-certificates lua5.1
      libyaml-dev libssl1.0-dev libgomp1 libicu57 libunwind8 libcurl3 libev4     &&
      ln -sf /usr/lib/x86_64-linux-gnu/libssl.so.1.0.2 /usr/lib/x86_64-linux-gnu/libssl.so
      \    && : \"---------- tarantool ----------\"     && mkdir -p /usr/src/tarantool
      \    && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool     && git
      -C /usr/src/tarantool checkout \"$TARANTOOL_VERSION\"     && git -C /usr/src/tarantool
      submodule update --init --recursive     && (cd /usr/src/tarantool;        cmake
      -DCMAKE_BUILD_TYPE=RelWithDebInfo             -DENABLE_BUNDLED_LIBYAML:BOOL=OFF
      \            -DENABLE_BACKTRACE:BOOL=ON             -DENABLE_DIST:BOOL=ON             .)
      \    && make -C /usr/src/tarantool -j    && make -C /usr/src/tarantool install
      \    && make -C /usr/src/tarantool clean     && : \"---------- small ----------\"
      \    && (cd /usr/src/tarantool/src/lib/small;         cmake -DCMAKE_INSTALL_PREFIX=/usr
      \              -DCMAKE_INSTALL_LIBDIR=lib               -DCMAKE_BUILD_TYPE=RelWithDebInfo
      \              .)     && make -C /usr/src/tarantool/src/lib/small     && make
      -C /usr/src/tarantool/src/lib/small install     && make -C /usr/src/tarantool/src/lib/small
      clean     && : \"---------- msgpuck ----------\"     && (cd /usr/src/tarantool/src/lib/msgpuck;
      \        cmake -DCMAKE_INSTALL_PREFIX=/usr               -DCMAKE_INSTALL_LIBDIR=lib
      \              -DCMAKE_BUILD_TYPE=RelWithDebInfo               .)     && make
      -C /usr/src/tarantool/src/lib/msgpuck     && make -C /usr/src/tarantool/src/lib/msgpuck
      install     && make -C /usr/src/tarantool/src/lib/msgpuck clean     && : \"----------
      luarocks ----------\"     && wget -O luarocks.tar.gz \"$LUAROCKS_URL\"     &&
      mkdir -p /usr/src/luarocks     && tar -xzf luarocks.tar.gz -C /usr/src/luarocks
      --strip-components=1     && (cd /usr/src/luarocks;         ./configure;         make
      build;         make install)     && rm -r /usr/src/luarocks     && rm -rf /usr/src/tarantool
      \    && mkdir -p /rocks     && luarocks install lua-term     && : \"avro\"     &&
      luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION     && : \"expirationd\"
      \    && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION     && : \"queue\"
      \    && luarocks install queue $LUAROCK_QUEUE_VERSION     && : \"connpool\"
      \    && luarocks install connpool $LUAROCK_CONNPOOL_VERSION     && : \"shard\"
      \    && git clone $LUAROCK_SHARD_REPO /rocks/shard     && git -C /rocks/shard
      checkout $LUAROCK_SHARD_TAG     && (cd /rocks/shard && luarocks make *rockspec)
      \    && : \"http\"     && luarocks install http $LUAROCK_HTTP_VERSION     &&
      : \"prometheus\"     && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION
      \    && : \"curl\"     && luarocks install tarantool-curl $LUAROCK_TARANTOOL_CURL_VERSION
      \    && : \"---------- remove build deps ----------\"     && apt-get purge -y
      $BUILD_PACKAGES     && apt-get autoremove -y \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/lib/tarantool     && chown tarantool:tarantool /var/lib/tarantool     &&
      mkdir -p /opt/tarantool     && chown tarantool:tarantool /opt/tarantool     &&
      mkdir -p /var/run/tarantool     && chown tarantool:tarantool /var/run/tarantool     &&
      mkdir /etc/tarantool     && chown tarantool:tarantool /etc/tarantool
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/tarantool
  - Name: workdir
    Path: /opt/tarantool
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tarantool-entrypoint.lua
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tarantool_set_config.lua
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tarantool_is_up
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tarantool.default
    - /usr/local/etc/default/tarantool
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "3301"
  - CmdLine:
    - tarantool
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stable
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stable
