{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:latest",
      "SourceCode": "FROM phusion/baseimage:latest",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git make build-essential         libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev         wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=\"~/.pyenv/bin:${PATH}\"' \u003e\u003e ~/.bashrc \u0026\u0026         echo 'eval \"$(pyenv init -)\"' \u003e\u003e ~/.bashrc \u0026\u0026         echo 'eval \"$(pyenv virtualenv-init -)\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${HOME}/.pyenv/bin/pyenv install 3.6.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYENV_VERSION",
              "Value": "3.6.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://bootstrap.pypa.io/get-pip.py | ${HOME}/.pyenv/shims/python3.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'source ${HOME}/.nvm/nvm.sh \u0026\u0026         nvm install node'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${HOME}/.pyenv/shims/pip3 install jupyter matplotlib pandas scikit-learn flask flask-sqlalchemy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'source ${HOME}/.nvm/nvm.sh \u0026\u0026         npm install -g create-react-app react react-dom react-script                 react-c3js'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/workspace"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        }
      ]
    }
  ]
}