MetaArgs:
- DefaultValue: "3"
  Key: python_version
  ProvidedValue: null
  Value: "3"
- DefaultValue: "3.4"
  Key: pyinstaller_version
  ProvidedValue: null
  Value: "3.4"
Stages:
- As: build
  BaseName: minidocks/base:build
  Commands:
  - Key: python_version
    Name: arg
    Value: null
  - Key: pyinstaller_version
    Name: arg
    Value: null
  - CmdLine:
    - apk add "python${python_version}" zlib-dev     && if [ '2' = "$python_version"
      ]; then apk add py2-pip; fi     && wget -O /tmp/pyinstaller.tar.gz "https://github.com/pyinstaller/pyinstaller/archive/v${pyinstaller_version}.tar.gz"
      && tar -xzf /tmp/pyinstaller.tar.gz -C /tmp     && cd /tmp/pyinstaller*/bootloader
      && "python${python_version}" ./waf configure --no-lsb all && "pip${python_version}"
      install --install-option="--prefix=/tmp/pyinstaller" ..
    Name: run
    PrependShell: true
  From:
    Image: minidocks/base:build
  Name: build
  Platform: ""
  SourceCode: FROM minidocks/base:build AS build
- As: v2
  BaseName: minidocks/python:2
  Commands: null
  From:
    Image: minidocks/python:2
  Name: v2
  Platform: ""
  SourceCode: FROM minidocks/python:2 AS v2
- As: v3
  BaseName: minidocks/python:3
  Commands: null
  From:
    Image: minidocks/python:3
  Name: v3
  Platform: ""
  SourceCode: FROM minidocks/python:3 AS v3
- As: latest
  BaseName: v$python_version
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Martin Haso≈à <martin.hason@gmail.com>"'
    Name: label
  - CmdLine:
    - apk add binutils "py${python_version}-crypto" && clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/pyinstaller/
    - /usr/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs
    - /
  - CmdLine:
    - pyinstaller
    Name: cmd
    PrependShell: false
  From:
    Image: v$python_version
  Name: latest
  Platform: ""
  SourceCode: FROM v$python_version AS latest
