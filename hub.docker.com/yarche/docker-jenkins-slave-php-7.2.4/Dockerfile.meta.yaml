MetaArgs: null
Stages:
- BaseName: jenkinsci/jnlp-slave
  Commands:
  - Maintainer: Yaroslav Sklabinskyi <jokersoft.net@gmail.com>
    Name: maintainer
  - Labels:
    - Key: com.container.vendor
      Value: '"yarche"'
    - Key: com.container.service
      Value: '"jokersoft/service/jenkins/php"'
    - Key: com.container.priority
      Value: '"1"'
    - Key: com.container.project
      Value: '"jokersoft-service-jenkins-php-slave"'
    - Key: img.version
      Value: '"0.0.1"'
    - Key: img.name
      Value: '"local/jokersoft/service/jenkins/slave/php/7"'
    - Key: img.description
      Value: '"jenkins ci slave service (jnlp) image for dynamic slave build using
        kubernetes"'
    Name: label
  - Env:
    - Key: TIMEZONE
      Value: '"Europe/Berlin"'
    Name: env
  - Env:
    - Key: TERM
      Value: xterm-color
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: NCURSES_NO_UTF8_ACS
      Value: "1"
    Name: env
  - Env:
    - Key: INITRD
      Value: "no"
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.4
    Name: env
  - Env:
    - Key: PHP_FILENAME
      Value: php-7.2.4.tar.xz
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: 7916b1bd148ddfd46d7f8f9a517d4b09cd8a8ad9248734e7c8dd91ef17057a88
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkg-config
        \t\tre2c"
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p /opt/docker $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/dunkelfrosch/docker-bash/master/docker_cleanup_debian.sh
    - /opt/docker/
  - CmdLine:
    - "apt-get update -qq >/dev/null 2>&1     &&  apt-get install -qq -y         libfcgi0ldbl
      mc wget curl ntp sudo \t\t$PHPIZE_DEPS \t\tca-certificates librecode0 libedit2
      libsqlite3-0 libxml2 xz-utils apt-utils >/dev/null 2>&1"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe     && mkdir ~/.gnupg     && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf
      \    && echo \"jenkins ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers \t&& cd
      /usr/src \t&& curl -fSL \"https://secure.php.net/get/$PHP_FILENAME/from/this/mirror\"
      -o php.tar.xz \t&& echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \t&& curl
      -fSL \"https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& for key in $GPG_KEYS; do \t    for
      server in ha.pool.sks-keyservers.net             hkp://p80.pool.sks-keyservers.net:80
      \            keyserver.ubuntu.com             hkp://keyserver.ubuntu.com:80
      \            pgp.mit.edu; do \t\tgpg --keyserver \"$server\" --recv-keys \"$key\"
      \ && break || echo \"Trying next server...\"; \t\tdone \tdone \t&& gpg --batch
      --verify php.tar.xz.asc php.tar.xz \t&& rm -r \"$GNUPGHOME\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& buildDeps=\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tlibcurl4-openssl-dev
      \t\tlibedit-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tzlib1g-dev
      \        libreadline6-dev         libturbojpeg-dev         librecode-dev         libmcrypt-dev
      \        xz-utils \t\" \t&& apt-get update && apt-get install -y $buildDeps
      --no-install-recommends && rm -rf /var/lib/apt/lists/* \t\t&& docker-php-source
      extract \t&& cd /usr/src/php \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t--with-zlib-dir=/usr
      \t\t--disable-cgi \t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib         --with-readline
      \        --with-recode \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t&& make -j\"$(nproc)\"
      \t&& make install \t&& { find /usr/local/bin /usr/local/sbin -type f -executable
      -exec strip --strip-all '{}' + || true; } \t&& make clean \t&& docker-php-source
      delete \t\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $buildDeps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-ext-*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -e     && apt-get update -qq && apt-get install -y --no-install-recommends
      apt-utils xz-utils libfreetype6-dev libjpeg62-turbo libmcrypt-dev libpng-dev
      libssl-dev libcurl4-openssl-dev libsasl2-dev libicu-dev libjpeg-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - set -e     && docker-php-ext-enable mcrypt     && docker-php-ext-install iconv
      intl mbstring ctype zip exif pdo pdo_mysql     && docker-php-ext-configure gd
      --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     && docker-php-ext-install
      gd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install patch --no-install-recommends -y     && php
      -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"     &&
      php -r "if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5')
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;"     && php composer-setup.php --install-dir=/usr/local/bin
      --filename=composer     && php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -e     && echo "${TIMEZONE}" >/etc/timezone     && dpkg-reconfigure tzdata
      >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - set -e     && sh /opt/docker/docker_cleanup_debian.sh
    Name: run
    PrependShell: true
  From:
    Image: jenkinsci/jnlp-slave
  Name: ""
  Platform: ""
  SourceCode: FROM jenkinsci/jnlp-slave
