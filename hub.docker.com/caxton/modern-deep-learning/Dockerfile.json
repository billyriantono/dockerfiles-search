{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "caxton \u003ckaifu.chan@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends git curl vim unzip openssh-client wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends build-essential cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends libopenblas-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends python3.5 python3.5-dev python3-pip python3-tk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir --upgrade pip setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias python='python3'\" \u003e\u003e /root/.bash_aliases"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias pip='pip3'\" \u003e\u003e /root/.bash_aliases"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends libjpeg-dev zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install Pillow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install     numpy scipy sklearn scikit-image pandas matplotlib requests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install Cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.ip = '*'\"          \"\\nc.NotebookApp.open_browser = False\"          \"\\nc.NotebookApp.token = ''\"          \u003e /root/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir --upgrade tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends     libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev     libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgtk2.0-dev     liblapacke-dev checkinstall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b 3.2.0 --depth 1 https://github.com/opencv/opencv.git /usr/local/src/opencv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/opencv \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026     cmake -D CMAKE_INSTALL_PREFIX=/usr/local           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D PYTHON_DEFAULT_EXECUTABLE=$(which python3)           .. \u0026\u0026     make -j\"$(nproc)\" \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends     cmake libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev     libhdf5-serial-dev protobuf-compiler liblmdb-dev libgoogle-glog-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends libboost-all-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install lmdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b master --depth 1 https://github.com/BVLC/caffe.git /usr/local/src/caffe"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install -r /usr/local/src/caffe/python/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/caffe \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026     cmake -D CPU_ONLY=ON -D python_version=3 -D BLAS=open -D USE_OPENCV=ON .. \u0026\u0026     make -j\"$(nproc)\" all \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/local/src/caffe/python:$PYTHONPATH"
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/src/caffe/build/tools:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir python-dateutil --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends default-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir --upgrade h5py pydot_ng keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir git+https://github.com/waleedka/coco.git#subdirectory=PythonAPI"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install http://download.pytorch.org/whl/cu75/torch-0.2.0.post3-cp35-cp35m-manylinux1_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install torchvision"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends libcurl4-openssl-dev libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install pycurl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install flask"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026     apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/root\""
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}