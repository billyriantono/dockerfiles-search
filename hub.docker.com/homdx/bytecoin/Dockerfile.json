{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "fedora:28",
      "SourceCode": "FROM fedora:28 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "fedora:28"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 dnf update -y     \u0026\u0026 dnf install libstdc++ -y     \u0026\u0026 dnf clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 dnf update -y     \u0026\u0026 dnf -y install make  gcc-c++ cmake git wget libzip bzip2 which openssl-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Key": "BOOST_VERSION",
          "Name": "arg",
          "Value": "1_67_0"
        },
        {
          "Key": "BOOST_VERSION_DOT",
          "Name": "arg",
          "Value": "1.67.0"
        },
        {
          "Key": "BOOST_HASH",
          "Name": "arg",
          "Value": "2684c972994ee57fc5632e03bf044746f6eb45d4920c343937a465fd67a5adba"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2     \u0026\u0026 echo \"${BOOST_HASH} boost_${BOOST_VERSION}.tar.bz2\" | sha256sum -c     \u0026\u0026 tar -xvf boost_${BOOST_VERSION}.tar.bz2     \u0026\u0026 mv boost_${BOOST_VERSION} boost     \u0026\u0026 cd boost     \u0026\u0026 ./bootstrap.sh     \u0026\u0026 ./b2 --build-type=minimal link=static -j4 runtime-link=static --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization --with-system --with-thread --stagedir=stage threading=multi threadapi=pthread cflags=\"-fPIC\" cxxflags=\"-fPIC\" stage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "LMDB_VERSION",
          "Name": "arg",
          "Value": "LMDB_0.9.22"
        },
        {
          "Key": "LMDB_HASH",
          "Name": "arg",
          "Value": "5033a08c86fb6ef0adddabad327422a1c0c0069a"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 git clone https://github.com/LMDB/lmdb.git -b ${LMDB_VERSION}     \u0026\u0026 cd lmdb     \u0026\u0026 test `git rev-parse HEAD` = ${LMDB_HASH} || exit 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app/bytecoin"
          ]
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 mkdir /app/bytecoin/build     \u0026\u0026 cd bytecoin/build     \u0026\u0026 cmake ..     \u0026\u0026 time make -j4     \u0026\u0026 cp -v ../bin/* /usr/local/bin     \u0026\u0026 mkdir /usr/local/bin/wallet_file     \u0026\u0026 cp -v ../tests/wallet_file/* /usr/local/bin/wallet_file     \u0026\u0026 dnf remove -y make  gcc-c++ cmake git wget openssl-devel     \u0026\u0026 dnf install libstdc++ -y     \u0026\u0026 dnf clean all     \u0026\u0026 rm -rf /app     \u0026\u0026 echo '[ SHOW VERSION ]'     \u0026\u0026 bytecoind -v"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "fedora:28",
      "SourceCode": "FROM fedora:28",
      "Platform": "",
      "From": {
        "Image": "fedora:28"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 dnf update -y     \u0026\u0026 dnf install libstdc++ -y     \u0026\u0026 dnf clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ls -la /usr/local/bin/     \u0026\u0026 mkdir -p /tests/wallet_file     \u0026\u0026 cp /usr/local/bin/*.wallet /tests/wallet_file/     \u0026\u0026 cd /tests \u0026\u0026 tests || :     \u0026\u0026 echo '[ SHOW VERSION ]'     \u0026\u0026 bytecoind -v"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}