{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "\"user\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME_DIR",
              "Value": "\"/home/${USER}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORK_DIR",
              "Value": "\"${HOME_DIR}/hostcwd\""
            },
            {
              "Key": "PATH",
              "Value": "\"${HOME_DIR}/.local/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update -qq \u003e /dev/null \u0026\u0026     apt install -qq --yes --no-install-recommends     locales \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     apt install -qq --yes mc openssh-client nano wget curl pkg-config autoconf automake libtool"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LANGUAGE",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt install -qq --yes --no-install-recommends     sudo python-pip python-setuptools file"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026 apt update -qq \u003e /dev/null \u0026\u0026 \tapt install -qq --yes --no-install-recommends \tbuild-essential ccache git libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 \tlibpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 python2.7 \tpython2.7-dev openjdk-8-jdk unzip zlib1g-dev zlib1g:i386 time"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --create-home --shell /bin/bash ${USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -append --groups sudo ${USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${WORK_DIR}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "chown user /home/user/ -Rv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${USER}"
        },
        {
          "CmdLine": [
            "pip install --user Cython==0.25.2 buildozer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026 buildozer init \u0026\u0026 buildozer android adb -- version     \u0026\u0026 cd ~/.buildozer/android/platform/\u0026\u0026 rm -vf android-ndk*.tar* android-sdk*.tgz apache-ant*.tar.gz     \u0026\u0026 cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed s/'name=\"java.source\" value=\"1.5\"'/'name=\"java.source\" value=\"7\"'/ -i ${HOME_DIR}/.buildozer/android/platform/android-sdk-20/tools/ant/build.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed s/'name=\"java.target\" value=\"1.5\"'/'name=\"java.target\" value=\"7\"'/ -i ${HOME_DIR}/.buildozer/android/platform/android-sdk-20/tools/ant/build.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://www.crystax.net/download/crystax-ndk-10.3.1-linux-x86_64.tar.xz?interactive=true -O ~/.buildozer/crystax.tar.xz   \u0026\u0026 cd ~/.buildozer/   \u0026\u0026 time tar -xf crystax.tar.xz \u0026\u0026 rm ~/.buildozer/crystax.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '-----Python 3 ----' \u0026\u0026 time buildozer android debug || echo \"Fix build apk\" \u0026\u0026 cp /home/user/hostcwd/.buildozer/android/platform/build/dists/ControlaTemp/bin/ControlaTemp-1.0-debug.apk ${WORK_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tail -f /var/log/faillog"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}