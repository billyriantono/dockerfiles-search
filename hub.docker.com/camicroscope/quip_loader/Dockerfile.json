{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM     ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Ganesh Iyer \"lastlegion@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get -q update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q -y install libcurl3 git autoconf automake make libtool pkg-config cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q -y install zlib1g-dev libpng12-dev libjpeg-dev \t\tlibtiff5-dev libgdk-pixbuf2.0-dev libxml2-dev \t\tlibsqlite3-dev libcairo2-dev libglib2.0-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/src"
        },
        {
          "CmdLine": [
            "apt-get install -y openslide-tools python3-openslide \t\tpython3 python3-setuptools python3-pip \t\tnodejs npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/dataloader"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/dataloader"
        },
        {
          "Name": "expose",
          "Ports": [
            "3001"
          ]
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/camicroscope/ImageLoader.git ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --recursive --remote"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm config set strict-ssl false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3",
            "install",
            "-r",
            "/root/dataloader/DataLoader/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y install build-essential pkg-config unzip wget curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install openjdk-7-jdk ant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-7-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "curl -O -J -L https://github.com/Itseez/opencv/archive/3.1.0.zip \u0026\u0026 \tunzip opencv-3.1.0.zip \u0026\u0026 \tmkdir /tmp/opencv-build \u0026\u0026 \tcd /tmp/opencv-build \u0026\u0026 \tcmake -D CMAKE_BUILD_TYPE=RELEASE -D BUILD_SHARED_LIBS=OFF -D BUILD_TESTS=OFF -D CMAKE_INSTALL_PREFIX=/usr/local ../opencv-3.1.0 \u0026\u0026 \tmake -j4 \u0026\u0026 \tmake install \u0026\u0026 \tcd /tmp \u0026\u0026 \trm -rf opencv-build \u0026\u0026 \trm -rf opencv-3.1.0*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_JAVA_DIR",
              "Value": "/usr/local/share/OpenCV/java"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_JAVA_LIB",
              "Value": "$OPENCV_JAVA_DIR/opencv-310.jar"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "git clone https://github.com/camicroscope/uAIMDataLoader.git annotationloader"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/annotationloader"
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install yargs   #Annoying unlisted kue dependency"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.js.annotationsloader",
            "config.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.js.dataloader",
            "/root/dataloader/config.js"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "\"sh\" \"-c\" \"echo nameserver 8.8.8.8 \u003e\u003e /etc/resolv.conf\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s \"$(which nodejs)\" /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g forever"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y -q install curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O -J -L https://services.gradle.org/distributions/gradle-2.13-bin.zip \u0026\u0026     unzip gradle-2.13-bin.zip \u0026\u0026     mv gradle-2.13 /usr/local \u0026\u0026     rm -rf gradle-2.13*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/local/gradle-2.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GRADLE_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FEATUREDB_DIR",
              "Value": "/usr/local/pathomics_featuredb"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp/"
        },
        {
          "CmdLine": [
            "git clone https://github.com/SBU-BMI/pathomics_featuredb \u0026\u0026 \tcd pathomics_featuredb/src \u0026\u0026 \tgradle build \u0026\u0026 \tgradle installDist \u0026\u0026 \tcd /tmp \u0026\u0026 mv pathomics_featuredb /usr/local/. \u0026\u0026 \tcp $FEATUREDB_DIR/docker_scripts/run* /usr/local/bin/. \u0026\u0026 \tcp $FEATUREDB_DIR/script/run* /usr/local/bin/. \u0026\u0026 \tcd /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "redis.conf",
            "/etc/redis/redis.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "trusted-app-client-0.0.1-jar-with-dependencies.jar",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "trusted-app-client-0.0.1-jar-with-dependencies2.jar",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "createUser.py",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}