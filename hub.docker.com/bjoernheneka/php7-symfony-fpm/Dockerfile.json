{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Bj√∂rn Heneka \u003cbheneka@codebee.de\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     echo 'deb http://packages.dotdeb.org jessie all' \u003e /etc/apt/sources.list.d/dotdeb.list \u0026\u0026     apt-get install -y apt-transport-https curl \u0026\u0026     curl http://www.dotdeb.org/dotdeb.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y     libfreetype6-dev     libjpeg62-turbo-dev     libpng12-dev     libcurl4-gnutls-dev     zlib1g-dev     libicu-dev     libmcrypt-dev     g++     libxml2-dev     libldb-dev     libpq-dev     libldap2-dev     vim     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     ghostscript     libmagickwand-dev --no-install-recommends     cron \u0026\u0026     apt-get clean \u0026\u0026     rm -fr /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so     \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) pdo     \u0026\u0026 docker-php-ext-install -j$(nproc) pdo_mysql     \u0026\u0026 docker-php-ext-install -j$(nproc) intl     \u0026\u0026 docker-php-ext-install -j$(nproc) bcmath     \u0026\u0026 docker-php-ext-install -j$(nproc) curl     \u0026\u0026 docker-php-ext-install -j$(nproc) mcrypt     \u0026\u0026 docker-php-ext-install -j$(nproc) exif     \u0026\u0026 docker-php-ext-install -j$(nproc) opcache     \u0026\u0026 docker-php-ext-install -j$(nproc) zip     \u0026\u0026 docker-php-ext-install -j$(nproc) ldap     \u0026\u0026 docker-php-ext-install -j$(nproc) sockets     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 pecl install imagick      \u0026\u0026 docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "symfony.ini",
            "/etc/php/7.0/fpm/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "symfony.ini",
            "/etc/php/7.0/cli/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "symfony.pool.conf",
            "/etc/php/7.0/fpm//pool.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/root/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/symfony"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/root/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}