{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.9.4-alpine3.6",
      "SourceCode": "FROM golang:1.9.4-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "golang:1.9.4-alpine3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "edge"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.02.0-ce"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "'tcp://docker:2375'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_RUNNER_VERSION",
              "Value": "v10.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "checksums.sha256",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint",
            "/"
          ]
        },
        {
          "CmdLine": [
            "addgroup -S gitlab-runner -g 1000     \u0026\u0026 adduser -D -u 1000 -S -h /home/gitlab-runner -G gitlab-runner gitlab-runner     \u0026\u0026 apk add --no-cache --update     bash     make     ca-certificates     git     openssl     tzdata     wget     btrfs-progs     e2fsprogs     e2fsprogs-extra     iptables     xfsprogs     xz     curl     \u0026\u0026 go get -u github.com/golang/dep/cmd/dep     \u0026\u0026 wget  https://gitlab-runner-downloads.s3.amazonaws.com/$GITLAB_RUNNER_VERSION/binaries/gitlab-runner-linux-amd64 -O /usr/bin/gitlab-runner     \u0026\u0026 chmod +x /usr/bin/gitlab-runner     \u0026\u0026 ln -s /usr/bin/gitlab-runner /usr/bin/gitlab-ci-multi-runner     \u0026\u0026 gitlab-runner --version     \u0026\u0026 mkdir -p /etc/gitlab-runner/certs     \u0026\u0026 chmod -R 700 /etc/gitlab-runner     \u0026\u0026 wget  https://github.com/docker/machine/releases/download/v0.14.0/docker-machine-Linux-x86_64 -O /usr/bin/docker-machine     \u0026\u0026 chmod +x /usr/bin/docker-machine     \u0026\u0026 docker-machine --version     \u0026\u0026 wget  https://github.com/Yelp/dumb-init/releases/download/v1.2.1/dumb-init_1.2.1_amd64 -O /usr/bin/dumb-init     \u0026\u0026 chmod +x /usr/bin/dumb-init     \u0026\u0026 dumb-init --version     \u0026\u0026 sha256sum -c -w /tmp/checksums.sha256     \u0026\u0026 set -ex;         apk add --no-cache --virtual .fetch-deps             curl             tar         ;                 apkArch=\"$(apk --print-arch)\";         case \"$apkArch\" in             x86_64) dockerArch='x86_64' ;;             armhf) dockerArch='armel' ;;             aarch64) dockerArch='aarch64' ;;             ppc64le) dockerArch='ppc64le' ;;             s390x) dockerArch='s390x' ;;             *) echo \u003e\u00262 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;        esac;                 if ! curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\"; then             echo \u003e\u00262 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'\";             exit 1;         fi;                 tar --extract             --file docker.tgz             --strip-components 1             --directory /usr/local/bin/         ;         rm docker.tgz;                 apk del .fetch-deps;                 dockerd -v;         docker -v;         chmod +x /entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/gitlab-runner",
            "/home/gitlab-runner",
            "/var/lib/docker"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/dumb-init",
            "/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "run",
            "--user=gitlab-runner",
            "--working-directory=/home/gitlab-runner"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}