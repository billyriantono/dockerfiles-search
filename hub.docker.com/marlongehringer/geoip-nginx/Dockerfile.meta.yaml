MetaArgs: null
Stages:
- BaseName: nginx:alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default.conf
    - /etc/nginx/conf.d/default.conf
  - Env:
    - Key: DATABASE_URL
      Value: https://geolite.maxmind.com/download/geoip/database/GeoLite2-City-CSV.zip
    Name: env
  - Env:
    - Key: OUTPUT_DIRECTORY
      Value: /etc/nginx/geoip
    Name: env
  - Env:
    - Key: OUTPUT_FILE
      Value: GeoLite2-City.dat
    Name: env
  - Env:
    - Key: BUILD_PACKAGES
      Value: python py-pip curl
    Name: env
  - Env:
    - Key: PYTHON_PACKAGES
      Value: ipaddr pygeoip
    Name: env
  - Env:
    - Key: GEOLITE2LEGACY_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: GEOLITE2LEGACY_ENCODING
      Value: utf-8
    Name: env
  - Env:
    - Key: BUILD_DIR
      Value: /tmp/build
    Name: env
  - CmdLine:
    - mkdir $BUILD_DIR   && cd $BUILD_DIR   && apk --no-cache --update add $BUILD_PACKAGES   &&
      pip --no-cache-dir install $PYTHON_PACKAGES   && curl -L -o geolite2legacy.zip
      https://github.com/sherpya/geolite2legacy/archive/$GEOLITE2LEGACY_BRANCH.zip   &&
      unzip geolite2legacy.zip   && curl -o GeoLite2-City.zip $DATABASE_URL   && echo
      "$(curl $DATABASE_URL.md5)  GeoLite2-City.zip" | md5sum -c -   && python geolite2legacy-$GEOLITE2LEGACY_BRANCH/geolite2legacy.py
      -i GeoLite2-City.zip -f geolite2legacy-$GEOLITE2LEGACY_BRANCH/geoname2fips.csv
      -o $OUTPUT_FILE -e $GEOLITE2LEGACY_ENCODING   && rm -rf geolite2legacy-$GEOLITE2LEGACY_BRANCH   &&
      rm -rf /usr/lib/python2.7   && apk del $BUILD_PACKAGES   && rm -rf /var/cache/apk/*   &&
      mkdir -p $OUTPUT_DIRECTORY   && mv $OUTPUT_FILE $OUTPUT_DIRECTORY/$OUTPUT_FILE   &&
      rm -rf $BUILD_DIR
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  From:
    Image: nginx:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:alpine
