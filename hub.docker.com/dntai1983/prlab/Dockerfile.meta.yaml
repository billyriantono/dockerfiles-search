MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04
  Commands:
  - CmdLine:
    - apt-get clean && apt-get update -y -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y     curl     git     nano     build-essential     cmake
      \    sudo     gosu     wget     unzip \tscreen"
    Name: run
    PrependShell: true
  - Key: LATEST_CONDA
    Name: arg
    Value: '"latest"'
  - Env:
    - Key: LATEST_CONDA
      Value: $LATEST_CONDA
    Name: env
  - Env:
    - Key: CONDA_HOME
      Value: '"/opt/anaconda3"'
    Name: env
  - CmdLine:
    - curl --silent -O https://repo.anaconda.com/miniconda/Miniconda3-$LATEST_CONDA-Linux-x86_64.sh     &&
      bash Miniconda3-$LATEST_CONDA-Linux-x86_64.sh -b -p ${CONDA_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm Miniconda3-$LATEST_CONDA-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_PATH
      Value: '"${CONDA_HOME}/bin"'
    Name: env
  - Env:
    - Key: CONDA_LIB
      Value: '"${CONDA_HOME}/lib"'
    Name: env
  - Env:
    - Key: JUPYTER_CONFIG_DIR
      Value: '"${CONDA_HOME}/.jupyter/config"'
    Name: env
  - Env:
    - Key: JUPYTER_DATA_DIR
      Value: '"${CONDA_HOME}/.jupyter/data"'
    Name: env
  - Env:
    - Key: CONDARC
      Value: '"${CONDA_HOME}/.condarc"'
    Name: env
  - Env:
    - Key: CONDA_PKGS_DIRS
      Value: '"${CONDA_HOME}/.conda/pkgs"'
    Name: env
  - Env:
    - Key: CONDA_ENVS_PATH
      Value: '"${CONDA_HOME}/.conda/envs"'
    Name: env
  - Env:
    - Key: IPYTHONDIR
      Value: '"${CONDA_HOME}/.ipython"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${CONDA_PATH}:${PATH}"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"${CONDA_LIB}:${LD_LIBRARY_PATH}"'
    Name: env
  - CmdLine:
    - conda update -n base -c defaults conda
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -n base -c anaconda jupyter jupyterlab nodejs widgetsnbextension
    Name: run
    PrependShell: true
  - CmdLine:
    - . activate base
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install jupyterlab==1.0.1 # solve error sidebar'
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py widgetsnbextension
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install @jupyter-widgets/jupyterlab-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install @jupyterlab/toc
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter lab clean
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter lab build
    Name: run
    PrependShell: true
  - CmdLine:
    - . deactivate
    Name: run
    PrependShell: true
  - Key: HOME_DIR
    Name: arg
    Value: '"/ws"'
  - Env:
    - Key: HOME_DIR
      Value: $HOME_DIR
    Name: env
  - CmdLine:
    - mkdir -p ${HOME_DIR}/config
    Name: run
    PrependShell: true
  - Key: CONDA_ENV_01
    Name: arg
    Value: '"cur37"'
  - Env:
    - Key: CONDA_ENV_01
      Value: $CONDA_ENV_01
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ${CONDA_ENV_01}.yml
    - ${HOME_DIR}/config/
  - CmdLine:
    - conda env create -n ${CONDA_ENV_01} -f ${HOME_DIR}/config/${CONDA_ENV_01}.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - . activate ${CONDA_ENV_01}
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m ipykernel install --user --name ${CONDA_ENV_01} --display-name "${CONDA_ENV_01}"
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c defaults protobuf libprotobuf glog leveldb
    Name: run
    PrependShell: true
  - CmdLine:
    - . deactivate
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${HOME_DIR}/bin     && mkdir -p ${HOME_DIR}/projects     && mkdir -p
      ${HOME_DIR}/media     && mkdir -p ${HOME_DIR}/logs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${HOME_DIR}
  - CmdLine:
    - jupyter
    - lab
    - --ip=0.0.0.0
    - --allow-root
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - '[""--port=8080"]'
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04
