MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Niraj Khanal <niraj.khanal@live.com>
    Name: maintainer
  - Env:
    - Key: ERLANG_VERSION
      Value: "20.0"
    Name: env
  - Env:
    - Key: ELIXIR_VERSION
      Value: 1.3.2
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y locales apt-utils && rm -rf /var/lib/apt/lists/*
      \t&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends          wget                        realpath                    build-essential             checkinstall                git-core                    curl                        mc                          autoconf                    automake                    vim                         make                        libncurses5-dev             openssl                     libssl-dev                  libpng-dev                  libpng3                     graphviz                    gnuplot                     libncurses5-dev             tk-dev                      python-dev                  tcl8.5-dev                  tk8.5-dev                   python3-dev                 xsltproc                    java-common                 default-jre                 default-jdk                 unzip                       ssh                         unixodbc-dev                uuid-runtime                docker.io
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - wget http://www.erlang.org/download/otp_src_${ERLANG_VERSION}.tar.gz &&     tar
      -xf otp_src_${ERLANG_VERSION}.tar.gz &&     cd otp_src_${ERLANG_VERSION} &&     export
      ERL_TOP=`pwd` &&     ./configure --with-ssl --with-javac --without-wx &&     make
      &&     make install &&     cd .. &&     rm otp_src_${ERLANG_VERSION}.tar.gz
      &&     rm -rf otp_src_${ERLANG_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/elixir-lang/elixir/archive/v${ELIXIR_VERSION}.zip &&     unzip
      v${ELIXIR_VERSION}.zip &&     cd elixir-${ELIXIR_VERSION} &&     make install
      &&     cd .. &&     rm -rf elixir* &&     rm v${ELIXIR_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - iex --version
    Name: run
    PrependShell: true
  - Env:
    - Key: DIND_COMMIT
      Value: 3b5fac462d21ca164b3778647420016315289034
    Name: env
  - CmdLine:
    - curl -sSL https://get.docker.com | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind
      -o /usr/local/bin/dind     && chmod a+x /usr/local/bin/dind
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./wrapper.sh
    - /usr/local/bin/wrapper.sh
  - CmdLine:
    - chmod a+x /usr/local/bin/wrapper.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - CmdLine: null
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
