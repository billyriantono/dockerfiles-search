MetaArgs: null
Stages:
- BaseName: golang:1.11-alpine
  Commands:
  - Env:
    - Key: PROJECT
      Value: upp-aggregate-healthcheck
    Name: env
  - Env:
    - Key: ORG_PATH
      Value: '"github.com/Financial-Times"'
    Name: env
  - Env:
    - Key: SRC_FOLDER
      Value: '"${GOPATH}/src/${ORG_PATH}/${PROJECT}"'
    Name: env
  - CmdLine:
    - apk --no-cache --upgrade add     git     curl     ca-certificates     && update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${SRC_FOLDER}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.*
    - ${SRC_FOLDER}/
  - CmdLine:
    - '"$GOPATH/bin/dep" ensure -vendor-only'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${SRC_FOLDER}
  - CmdLine:
    - BUILDINFO_PACKAGE="${ORG_PATH}/${PROJECT}/vendor/${ORG_PATH}/service-status-go/buildinfo."     &&
      VERSION="version=$(git describe --tag --always 2> /dev/null)"     && DATETIME="dateTime=$(date
      -u +%Y%m%d%H%M%S)"     && REPOSITORY="repository=$(git config --get remote.origin.url)"     &&
      REVISION="revision=$(git rev-parse HEAD)"     && BUILDER="builder=$(go version)"     &&
      LDFLAGS="-s -w -X '"${BUILDINFO_PACKAGE}$VERSION"' -X '"${BUILDINFO_PACKAGE}$DATETIME"'
      -X '"${BUILDINFO_PACKAGE}$REPOSITORY"' -X '"${BUILDINFO_PACKAGE}$REVISION"'
      -X '"${BUILDINFO_PACKAGE}$BUILDER"'"     && CGO_ENABLED=0 go build -a -o /artifacts/${PROJECT}
      -ldflags="${LDFLAGS}"     && cp -R resources /artifacts/resources     && cp
      -R html-templates /artifacts/html-templates
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.11-alpine
- BaseName: scratch
  Commands:
  - Name: workdir
    Path: /
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs/ca-certificates.crt
    - /etc/ssl/certs/
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /artifacts/*
    - /
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /artifacts/resources
    - /resources
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /artifacts/html-templates
    - /html-templates
  - CmdLine:
    - /upp-aggregate-healthcheck
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
