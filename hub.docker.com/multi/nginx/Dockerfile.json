{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.10.0"
            },
            {
              "Key": "NGINX_RTMP_VERSION",
              "Value": "1.1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add geoip pcre libxslt gd \u0026\u0026     apk add -t build-deps geoip-dev pcre-dev libxslt-dev gd-dev openssl openssl-dev linux-headers zlib-dev libstdc++ libgcc build-base patch \u0026\u0026     cd /tmp \u0026\u0026     wget https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_VERSION}.tar.gz \u0026\u0026     tar zxf v${NGINX_RTMP_VERSION}.tar.gz \u0026\u0026     wget http://nginx.org//download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     tar zxf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     cd nginx-${NGINX_VERSION} \u0026\u0026     ./configure       --prefix=/usr/share/nginx       --sbin-path=/usr/sbin/nginx       --conf-path=/etc/nginx/nginx.conf       --pid-path=/var/run/nginx/nginx.pid       --lock-path=/var/run/nginx/nginx.lock       --error-log-path=stderr       --http-log-path=/proc/self/fd/1       --http-client-body-temp-path=/var/lib/nginx/tmp/client_body       --http-proxy-temp-path=/var/lib/nginx/tmp/proxy       --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi       --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi       --http-scgi-temp-path=/var/lib/nginx/tmp/scgi       --user=nginx       --group=nginx       --with-ipv6       --with-file-aio       --with-pcre-jit       --with-mail       --with-mail_ssl_module       --with-http_addition_module       --with-http_auth_request_module       --with-http_dav_module       --with-http_degradation_module       --with-http_flv_module       --with-http_geoip_module       --with-http_xslt_module       --with-http_image_filter_module       --with-http_gunzip_module       --with-http_gzip_static_module       --with-http_mp4_module       --with-http_realip_module       --with-http_secure_link_module       --with-http_v2_module       --with-http_ssl_module       --with-http_slice_module       --with-http_stub_status_module       --with-http_sub_module       --with-threads       --with-stream       --with-stream_ssl_module       --add-module=\"/tmp/nginx-rtmp-module-${NGINX_RTMP_VERSION}\" \u0026\u0026     make -j$(grep -c '^processor' /proc/cpuinfo) \u0026\u0026 make INSTALLDIRS=vendor install \u0026\u0026     install -d -m0755 /etc/nginx/conf.d \u0026\u0026     install -d -m0755 /etc/nginx/default.d \u0026\u0026     install -d -m0700 /var/lib/nginx \u0026\u0026     install -d -m0700 /var/lib/nginx/tmp \u0026\u0026     addgroup -S nginx \u0026\u0026     adduser -S -D -G nginx -H -s /sbin/nologin nginx \u0026\u0026     chown -R nginx:nginx /var/lib/nginx /var/run/nginx \u0026\u0026     apk del --purge build-deps \u0026\u0026     rm -rf /usr/share/man /tmp/* /var/cache/apk/* /usr/include"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "user",
          "User": "nginx"
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}