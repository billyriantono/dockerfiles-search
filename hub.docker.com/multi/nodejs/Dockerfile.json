{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v6.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add libgcc libstdc++ \u0026\u0026     apk add -t build-deps openssl-dev git curl make zlib-dev gcc g++ python linux-headers binutils-gold paxctl wget \u0026\u0026     cd /tmp \u0026\u0026     wget https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz \u0026\u0026     tar zxf node-${NODE_VERSION}.tar.gz \u0026\u0026     cd node-${NODE_VERSION} \u0026\u0026     ./configure --prefix=/usr --shared-zlib --without-snapshot \u0026\u0026     make -j$(grep -c '^processor' /proc/cpuinfo) \u0026\u0026     make install \u0026\u0026     paxctl -cm /usr/bin/node \u0026\u0026     adduser -D -G daemon -u 1000 -h /app -s /bin/sh nodejs \u0026\u0026     npm install -g npm@latest \u0026\u0026     apk del --purge build-deps \u0026\u0026     rm -rf /usr/share/man /tmp/* /var/cache/apk/*     /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}