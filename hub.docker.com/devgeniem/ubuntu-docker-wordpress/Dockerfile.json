{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "devgeniem/ubuntu-docker-openresty-pagespeed:beta",
      "SourceCode": "FROM devgeniem/ubuntu-docker-openresty-pagespeed:beta",
      "Platform": "",
      "From": {
        "Image": "devgeniem/ubuntu-docker-openresty-pagespeed:beta"
      },
      "Commands": [
        {
          "Maintainer": "Ville Pietarinen - Geniem Oy \u003cville.pietarinen-nospam@geniem.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "LANG",
          "Name": "arg",
          "Value": "C.UTF-8"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install software-properties-common     \u0026\u0026 add-apt-repository ppa:ondrej/php     \u0026\u0026 apt-get -y --no-install-recommends install         apt-utils         curl         nano         ca-certificates         git         mysql-client         msmtp         postfix         netcat         less     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y --no-install-recommends install         php7.3-cli         php7.3-common         php7.3-apcu         php7.3-apcu-bc         php7.3-curl         php7.3-json         php7.3-opcache         php7.3-readline         php7.3-xml         php7.3-zip         php7.3-fpm         php7.3-redis         php7.3-mongodb         php7.3-mysqli         php7.3-intl         php7.3-gd         php7.3-mbstring         php7.3-soap         php7.3-bcmath         php7.3-curl         php7.3-ldap     \u0026\u0026 cd /tmp     \u0026\u0026 apt-get download cron     \u0026\u0026 dpkg --force-all -i cron*.deb     \u0026\u0026 mkdir -p /var/spool/cron/crontabs     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get autoremove     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /var/log/apt/* /var/log/*.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer global require hirak/prestissimo     \u0026\u0026 curl -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli     \u0026\u0026 chmod +rx /usr/local/bin/wp-cli     \u0026\u0026 ln -s /usr/local/bin/wp-cli /usr/bin/wp-cli     \u0026\u0026 curl -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock     \u0026\u0026 chmod +rx /usr/local/bin/cronlock     \u0026\u0026 ln -s /usr/local/bin/cronlock /usr/bin/cronlock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir -p /var/www/uploads     \u0026\u0026 mkdir -p /dev/cache     \u0026\u0026 mkdir -p /tmp/php-opcache     \u0026\u0026 ln -sf /usr/sbin/php-fpm7.3 /usr/sbin/php-fpm     \u0026\u0026 ln -sf /usr/bin/wp /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PROJECT_ROOT",
              "Value": "\"/var/www/project\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "\"xterm\""
            },
            {
              "Key": "MYSQL_PORT",
              "Value": "\"3306\""
            },
            {
              "Key": "PORT",
              "Value": "\"8080\""
            },
            {
              "Key": "WEB_USER",
              "Value": "\"wordpress\""
            },
            {
              "Key": "WEB_GROUP",
              "Value": "\"web\""
            },
            {
              "Key": "WEB_UID",
              "Value": "1000"
            },
            {
              "Key": "WEB_GID",
              "Value": "1001"
            },
            {
              "Key": "REDIS_PORT",
              "Value": "\"6379\""
            },
            {
              "Key": "REDIS_DATABASE",
              "Value": "\"0\""
            },
            {
              "Key": "REDIS_PASSWORD",
              "Value": "\"\""
            },
            {
              "Key": "REDIS_SCHEME",
              "Value": "\"tcp\""
            },
            {
              "Key": "NGINX_REDIS_CACHE_TTL_DEFAULT",
              "Value": "\"200 301 302 1m\""
            },
            {
              "Key": "NGINX_REDIS_CACHE_TTL_MAX",
              "Value": "\"4h\""
            },
            {
              "Key": "NGINX_CACHE_DIRECTORY",
              "Value": "\"/dev/cache\""
            },
            {
              "Key": "NGINX_CACHE_USE_STALE",
              "Value": "\"error timeout invalid_header updating http_500 http_503 http_403 http_404 http_429\""
            },
            {
              "Key": "NGINX_CACHE_CONTROL",
              "Value": "'\"max-age=60, stale-while-revalidate=300, stale-if-error=21600\"'"
            },
            {
              "Key": "CRONLOCK_HOST",
              "Value": "\"\""
            },
            {
              "Key": "WEB_ROOT",
              "Value": "\"${PROJECT_ROOT}/web\""
            },
            {
              "Key": "WP_CORE",
              "Value": "\"${PROJECT_ROOT}/web/wp\""
            },
            {
              "Key": "NGINX_INCLUDE_DIR",
              "Value": "\"/var/www/project/nginx\""
            },
            {
              "Key": "NGINX_MAX_BODY_SIZE",
              "Value": "\"10M\""
            },
            {
              "Key": "NGINX_BODY_BUFFER_SIZE",
              "Value": "\"32k\""
            },
            {
              "Key": "NGINX_FASTCGI_TIMEOUT",
              "Value": "\"30\""
            },
            {
              "Key": "NGINX_ERROR_LEVEL",
              "Value": "\"warn\""
            },
            {
              "Key": "NGINX_ERROR_LOG",
              "Value": "\"stderr\""
            },
            {
              "Key": "NGINX_ACCESS_LOG",
              "Value": "\"/dev/stdout\""
            },
            {
              "Key": "NGINX_CACHE_KEY",
              "Value": "'wp_:nginx:$real_scheme$request_method$host$request_uri'"
            },
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "\"128M\""
            },
            {
              "Key": "PHP_MAX_INPUT_VARS",
              "Value": "\"1000\""
            },
            {
              "Key": "PHP_ERROR_LOG",
              "Value": "\"/proc/self/fd/1\""
            },
            {
              "Key": "PHP_ERROR_LOG_LEVEL",
              "Value": "\"warning\""
            },
            {
              "Key": "PHP_ERROR_LOG_MAX_LEN",
              "Value": "\"8192\""
            },
            {
              "Key": "PHP_SESSION_REDIS_DB",
              "Value": "\"0\""
            },
            {
              "Key": "PHP_SESSION_HANDLER",
              "Value": "\"files\""
            },
            {
              "Key": "PHP_OPCACHE_MAX_FILES",
              "Value": "\"8000\""
            },
            {
              "Key": "PHP_OPCACHE_MAX_MEMORY",
              "Value": "\"128\""
            },
            {
              "Key": "SMTP_HOST",
              "Value": "\"172.17.2.1\""
            },
            {
              "Key": "UPLOADS_ROOT",
              "Value": "\"/var/www/uploads\""
            },
            {
              "Key": "TZ",
              "Value": "\"Europe/Helsinki\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg-reconfigure tzdata \u0026\u0026     chmod +x /etc/cont-init.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${PROJECT_ROOT}"
        },
        {
          "Name": "expose",
          "Ports": [
            "${PORT}"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}