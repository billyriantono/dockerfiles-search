MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Maintainer: ariba-help@sanger.ac.uk
    Name: maintainer
  - Key: BOWTIE2_VERSION
    Name: arg
    Value: 2.2.9
  - Key: SPADES_VERSION
    Name: arg
    Value: 3.13.1
  - Key: ARIBA_TAG
    Name: arg
    Value: master
  - Key: ARIBA_BUILD_DIR
    Name: arg
    Value: /ariba
  - Key: LOCALE_COUNTRY
    Name: arg
    Value: en_GB
  - CmdLine:
    - apt-get -qq update &&     apt-get install --no-install-recommends -y   build-essential   cd-hit   curl   git   libbz2-dev   liblzma-dev   mummer   python3-dev   python3-setuptools   python3-pip   python3-tk   python3-matplotlib   unzip   wget   zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y locales-all && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ${LOCALE_COUNTRY}.UTF-8
    - Key: LANGUAGE
      Value: ${LOCALE_COUNTRY}:en
    Name: env
  - CmdLine:
    - wget -q http://downloads.sourceforge.net/project/bowtie-bio/bowtie2/${BOWTIE2_VERSION}/bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip   &&
      unzip bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip   && rm -f bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/ablab/spades/releases/download/v${SPADES_VERSION}/SPAdes-${SPADES_VERSION}-Linux.tar.gz   &&
      tar -zxf SPAdes-${SPADES_VERSION}-Linux.tar.gz   && rm -f SPAdes-${SPADES_VERSION}-Linux.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: ARIBA_BOWTIE2
      Value: $PWD/bowtie2-${BOWTIE2_VERSION}/bowtie2
    - Key: ARIBA_CDHIT
      Value: cdhit-est
    - Key: MPLBACKEND
      Value: '"agg"'
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PWD/SPAdes-${SPADES_VERSION}-Linux/bin
    Name: env
  - CmdLine:
    - ln -s -f /usr/bin/python3 /usr/local/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $ARIBA_BUILD_DIR
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $ARIBA_BUILD_DIR
  - CmdLine:
    - cd $ARIBA_BUILD_DIR   && python3 setup.py clean --all   && python3 setup.py
      test   && python3 setup.py install   && rm -rf $ARIBA_BUILD_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - ariba
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
