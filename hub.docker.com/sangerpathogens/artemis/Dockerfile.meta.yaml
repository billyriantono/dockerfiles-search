MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"path-help@sanger.ac.uk"'
    Name: label
  - Key: ARTEMIS_BUILD_DIR
    Name: arg
    Value: /artemis-build
  - Key: INSTALL_DIR
    Name: arg
    Value: /opt/artemis
  - Key: BLAST_INSTALL_DIR
    Name: arg
    Value: /usr/local/ncbi/blast/
  - Key: BROWSER_INSTALL_DIR
    Name: arg
    Value: /usr/local/firefox
  - Key: ARTEMIS_WORKDIR
    Name: arg
    Value: /artemis
  - Env:
    - Key: JAVA_OPTS
      Value: '"-Dsun.jnu.encoding=UTF-8 -Dfile.encoding=UTF-8"'
    Name: env
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LC_COLLATE
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - mkdir -p $ARTEMIS_WORKDIR && chmod 777 $ARTEMIS_WORKDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update --quiet --assume-yes
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade --quiet --assume-yes
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --quiet --assume-yes locales openjdk-11-jdk libxtst6 libxrender1
      libxext6 libexpat1 fonts-dejavu-core fontconfig-config libfontconfig1 libfreetype6
      libpng16-16 curl wget maven ant
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --config java
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --config javac
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "Java version installed: `java -version`"'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo en_US.UTF-8 UTF-8 >> /etc/locale.gen
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $INSTALL_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $ARTEMIS_BUILD_DIR
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $ARTEMIS_BUILD_DIR
  - CmdLine:
    - cd $ARTEMIS_BUILD_DIR && mvn validate && mvn -Djarsigner.skip=true -Dskip.tests=true
      package -P release
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf $ARTEMIS_BUILD_DIR/target/release-artifacts/unix-release/artemis-unix-release-*.tar.gz
      --strip-components=1 -C ${INSTALL_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf $ARTEMIS_BUILD_DIR && rm -rf ~/.m2
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $BLAST_INSTALL_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --fail -L ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.9.0+-x64-linux.tar.gz
      | tar xzf - --strip-components=1 -C $BLAST_INSTALL_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --quiet --assume-yes libgtk-3-0 libdbus-glib-1-2 libxt6 firejail
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $BROWSER_INSTALL_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O firefox.tar.bz2 "https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-GB"
      &&     tar xvf /firefox.tar.bz2 &&     rm -f /firefox.tar.bz2 &&     mv /firefox
      /usr/local/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "firejail --private --dns=8.8.8.8 --dns=8.8.4.4 $BROWSER_INSTALL_DIR/firefox
      -no-remote "'"$@"' > /usr/bin/firefox && chmod 555 /usr/bin/firefox
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $INSTALL_DIR:$INSTALL_DIR/dist:$INSTALL_DIR/etc:$BLAST_INSTALL_DIR/bin:$PATH
    Name: env
  - Env:
    - Key: CLASSPATH
      Value: $INSTALL_DIR:$INSTALL_DIR/dist:$INSTALL_DIR/etc:${CLASSPATH}
    Name: env
  - Env:
    - Key: HOME
      Value: $ARTEMIS_WORKDIR
    Name: env
  - Name: workdir
    Path: $ARTEMIS_WORKDIR
  - CmdLine:
    - 'echo ''Usage:  docker run -d -e DISPLAY="<your display name>:0" -v <your user
      home directory>:/home/artuser -v <your data folder>:/artemis'' &&       echo
      ''          --user $(id -u):$(id -g) -e ARTEMIS_JVM_FLAGS="-Duser.home=/home/artuser
      -Djava.io.tmpdir=/tmp" --tmpfs /tmp'' &&       echo ''          --rm artemis
      <program name [art|act|bamview|dnaplotter]> [program arguments]'' &&       echo
      &&       echo ''For help, please go to http://sanger-pathogens.github.io/Artemis/'''
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
