MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         wget         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/fix-permissions
    - /usr/local/bin/fix-permissions
  - CmdLine:
    - chmod 4755 /usr/local/bin/fix-permissions
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get -yq dist-upgrade  && apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     fonts-liberation  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini
      &&     echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: jovyan
    - Key: NB_UID
      Value: "1000"
    - Key: NB_GID
      Value: "100"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     adduser $NB_USER sudo
      &&     mkdir -p $CONDA_DIR &&     chown $NB_USER:$NB_GID $CONDA_DIR &&     fix-permissions
      $HOME &&     fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/$NB_USER/work &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.3.30
    Name: env
  - CmdLine:
    - cd /tmp &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "0b80a152332a4ce5250f3c09589c7a81 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda
      config --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config
      --system --set show_channel_urls true &&     $CONDA_DIR/bin/conda update --all
      --quiet --yes &&     conda clean -tipsy &&     fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=5.2.*'     'jupyterhub=0.8.*'     'jupyterlab=0.28.*'     &&
      conda clean -tipsy     && fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: $HOME
  - Name: user
    User: root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start.sh
    - /usr/local/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/jupyter_notebook_config.py
    - /etc/jupyter/
  - CmdLine:
    - chmod 4755 /usr/local/bin/start-notebook.sh /usr/local/bin/start-singleuser.sh
      /usr/local/bin/start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - fix-permissions /etc/jupyter/
    Name: run
    PrependShell: true
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     build-essential     emacs     git     inkscape     jed     libsm6     libxext-dev     libxrender1     lmodern     pandoc     python-dev     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     vim     unzip     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends libav-tools
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - conda install --quiet --yes     'nomkl'     'ipywidgets=7.0*'     'pandas=0.19*'     'numexpr=2.6*'     'matplotlib=2.0*'     'scipy=0.19*'     'seaborn=0.7*'     'scikit-learn=0.18*'     'scikit-image=0.12*'     'sympy=1.0*'     'cython=0.25*'     'patsy=0.4*'     'statsmodels=0.8*'     'cloudpickle=0.2*'     'dill=0.2*'     'numba=0.31*'     'bokeh=0.12*'     'sqlalchemy=1.1*'     'hdf5=1.8.17'     'h5py=2.6*'     'vincent=0.4.*'     'beautifulsoup4=4.5.*'     'protobuf=3.*'     'xlrd'  &&     conda
      clean -tipsy &&     jupyter nbextension enable --py widgetsnbextension --sys-prefix
      &&     fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/PAIR-code/facets.git &&     cd facets
      &&     jupyter nbextension install facets-dist/ --sys-prefix &&     rm -rf facets
      &&     fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /home/$NB_USER/.cache/
    Name: env
  - CmdLine:
    - MPLBACKEND=Agg python -c "import matplotlib.pyplot"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - bash
    - -c
    - source activate root
    Name: run
    PrependShell: false
  - CmdLine:
    - pip install tensorflow-gpu
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install "keras>=2.0"
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04
