MetaArgs: null
Stages:
- BaseName: node:10.15.2-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/blacktop"'
    Name: label
  - CmdLine:
    - apk add --no-cache openjdk8-jre tini su-exec
    Name: run
    PrependShell: true
  - Env:
    - Key: STACK
      Value: 7.5.0
    Name: env
  - CmdLine:
    - apk add --no-cache libzmq bash nodejs nginx apache2-utils openssl nss
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/lib \t&& ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache -t .build-deps wget ca-certificates \t&& set -x \t&& cd
      /tmp \t&& echo \"Download Elastic Stack ======================================================\"
      \t&& echo \"Download Elasticsearch...\" \t&& wget --progress=bar:force -O elasticsearch-$STACK.tar.gz
      https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-$STACK-no-jdk-linux-x86_64.tar.gz
      \t&& tar -xzf elasticsearch-$STACK.tar.gz \t&& mv elasticsearch-$STACK /usr/share/elasticsearch
      \t&& echo \"Download Logstash...\" \t&& wget --progress=bar:force -O logstash-$STACK.tar.gz
      \thttps://artifacts.elastic.co/downloads/logstash/logstash-oss-$STACK.tar.gz
      \t&& tar -xzf logstash-$STACK.tar.gz \t&& mv logstash-$STACK /usr/share/logstash
      \t&& echo \"Download Kibana...\" \t&& wget --progress=bar:force -O kibana-$STACK.tar.gz
      https://artifacts.elastic.co/downloads/kibana/kibana-oss-$STACK-linux-x86_64.tar.gz
      \t&& tar -xzf kibana-$STACK.tar.gz \t&& mv kibana-$STACK-linux-x86_64 /usr/share/kibana
      \t&& echo \"Configure [Elasticsearch] ===================================================\"
      \t&& for path in \t/usr/share/elasticsearch/data \t/usr/share/elasticsearch/logs
      \t/usr/share/elasticsearch/config \t/usr/share/elasticsearch/config/scripts
      \t/usr/share/elasticsearch/plugins \t/usr/share/elasticsearch/tmp \t; do \tmkdir
      -p \"$path\"; \tdone \t&& echo \"Configure [Logstash] ========================================================\"
      \t&& if [ -f \"$LS_SETTINGS_DIR/logstash.yml\" ]; then \tsed -ri 's!^(path.log|path.config):!#&!g'
      \"$LS_SETTINGS_DIR/logstash.yml\"; \tfi \t&& echo \"Configure [Kibana] ==========================================================\"
      \t&& sed -ri \"s!^(\\#\\s*)?(server\\.host:).*!\\2 '0.0.0.0'!\" /usr/share/kibana/config/kibana.yml
      \t&& grep -q \"^server\\.host: '0.0.0.0'\\$\" /usr/share/kibana/config/kibana.yml
      \t&& bundled='NODE=\"${DIR}/node/bin/node\"' \t&& alpine_node='NODE=\"/usr/local/bin/node\"'
      \t&& sed -i \"s|$bundled|$alpine_node|g\" /usr/share/kibana/bin/kibana-plugin
      \t&& sed -i \"s|$bundled|$alpine_node|g\" /usr/share/kibana/bin/kibana \t&&
      echo \"Make Nginx SSL directory...\" \t&& mkdir -p /etc/nginx/ssl \t&& rm /etc/nginx/conf.d/default.conf
      \t&& echo \"Create elstack user...\" \t&& adduser -DH -s /sbin/nologin elstack
      \t&& chown -R elstack:elstack /usr/share/elasticsearch \t&& chown -R elstack:elstack
      /usr/share/logstash \t&& chown -R elstack:elstack /usr/share/kibana \t&& echo
      \"Clean Up...\" \t&& rm -rf /tmp/* \t&& rm -rf /usr/share/kibana/node \t&& apk
      del --purge .build-deps"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache supervisor libc6-compat
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/share/logstash/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/share/kibana/bin:$PATH
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/elastic
    - /usr/share/elasticsearch/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/elastic/logrotate
    - /etc/logrotate.d/elasticsearch
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/logstash/conf.d/
    - /etc/logstash/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/logstash/patterns/
    - /opt/logstash/patterns/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/logstash/logstash.yml
    - /etc/logstash/
  - Env:
    - Key: LS_SETTINGS_DIR
      Value: /etc/logstash
    Name: env
  - Env:
    - Key: ES_TMPDIR
      Value: /usr/share/elasticsearch/tmp
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/kibana.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/ssl.kibana.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord/supervisord.conf
    - /etc/supervisor/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/elastic-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/logstash-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/kibana-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/nginx-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /*entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Name: volume
    Volumes:
    - /etc/logstash/conf.d
  - Name: volume
    Volumes:
    - /etc/nginx
  - Name: expose
    Ports:
    - "443"
    - "5601"
    - "80"
    - "9200"
    - "9300"
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/bin/supervisord
    - -c
    - /etc/supervisor/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: node:10.15.2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.15.2-alpine
