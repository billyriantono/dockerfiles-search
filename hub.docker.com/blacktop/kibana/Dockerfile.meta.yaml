MetaArgs: null
Stages:
- BaseName: node:10.15.2-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/blacktop"'
    Name: label
  - Env:
    - Key: VERSION
      Value: 7.5.0
    Name: env
  - Env:
    - Key: DOWNLOAD_URL
      Value: https://artifacts.elastic.co/downloads/kibana
    Name: env
  - Env:
    - Key: TARBAL
      Value: '"${DOWNLOAD_URL}/kibana-oss-${VERSION}-linux-x86_64.tar.gz"'
    Name: env
  - Env:
    - Key: TARBALL_ASC
      Value: '"${DOWNLOAD_URL}/kibana-oss-${VERSION}-linux-x86_64.tar.gz.asc"'
    Name: env
  - Env:
    - Key: TARBALL_SHA
      Value: '"42ff9f73badf9f4fdf8a99fe87ec742ac256742ae99eb0b7147e6fb30f9b34b11ec25579d5bab73a9765109db304735a524526d4d629de5d0e10f2aff9f4c930"'
    Name: env
  - Env:
    - Key: GPG_KEY
      Value: '"46095ACC8548582C1A2699A9D27D666CD88E42B4"'
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/share/kibana/bin:$PATH
    Name: env
  - CmdLine:
    - apk add --no-cache bash su-exec
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache -t .build-deps wget ca-certificates gnupg openssl   && set
      -ex   && cd /tmp   && echo "===> Install Kibana..."   && wget --progress=bar:force
      -O kibana.tar.gz "$TARBAL";   if [ "$TARBALL_SHA" ]; then   echo "$TARBALL_SHA
      *kibana.tar.gz" | sha512sum -c -;   fi;   if [ "$TARBALL_ASC" ]; then   wget
      --progress=bar:force -O kibana.tar.gz.asc "$TARBALL_ASC";   export GNUPGHOME="$(mktemp
      -d)";   ( gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"   ||
      gpg --keyserver pgp.mit.edu --recv-keys "$GPG_KEY"   || gpg --keyserver keyserver.pgp.com
      --recv-keys "$GPG_KEY" );   gpg --batch --verify kibana.tar.gz.asc kibana.tar.gz;   rm
      -rf "$GNUPGHOME" kibana.tar.gz.asc || true;   fi;   tar -xf kibana.tar.gz   &&
      ls -lah   && mv kibana-$VERSION-linux-x86_64 /usr/share/kibana   && adduser
      -DH -s /sbin/nologin kibana   && bundled='NODE="${DIR}/node/bin/node"'   &&
      alpine_node='NODE="/usr/local/bin/node"'   && sed -i "s|$bundled|$alpine_node|g"
      /usr/share/kibana/bin/kibana-plugin   && sed -i "s|$bundled|$alpine_node|g"
      /usr/share/kibana/bin/kibana   && rm -rf /usr/share/kibana/node   && chown -R
      kibana:kibana /usr/share/kibana   && rm -rf /tmp/*   && apk del --purge .build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/kibana/kibana.yml
    - /usr/share/kibana/config/kibana.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/share/kibana
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: node:10.15.2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.15.2-alpine
