MetaArgs: null
Stages:
- BaseName: java:8-jre
  Commands:
  - Maintainer: blacktop, https://github.com/blacktop
    Name: maintainer
  - Env:
    - Key: KIBANA
      Value: "4.6"
    Name: env
  - Env:
    - Key: ELASTIC
      Value: 2.x
    Name: env
  - Env:
    - Key: LOGSTASH
      Value: "2.4"
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - Env:
    - Key: GOSU_URL
      Value: https://github.com/tianon/gosu/releases/download
    Name: env
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - CmdLine:
    - "set -x \t&& echo \"Grab gosu for easy step-down from root...\" \t&& wget -O
      /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& echo \"Grab tini for signal processing and zombie
      killing...\" \t&& wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\"
      \t&& wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5 \t&& gpg --batch --verify
      /usr/local/bin/tini.asc /usr/local/bin/tini \t&& rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc
      \t&& chmod +x /usr/local/bin/tini \t&& tini -h"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get -qq update \t&& apt-get install -yq wget ca-certificates
      \t&& wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key
      add - \t&& echo \"deb http://packages.elastic.co/elasticsearch/$ELASTIC/debian
      stable main\" >> /etc/apt/sources.list \t&& echo \"deb http://packages.elasticsearch.org/logstash/$LOGSTASH/debian
      stable main\" >> /etc/apt/sources.list \t&& echo \"deb http://packages.elastic.co/kibana/$KIBANA/debian
      stable main\" >> /etc/apt/sources.list \t&& echo \"NOTE: the 'ffi-rzmq-core'
      gem is very picky about where it looks for libzmq.so\" \t&& mkdir -p /usr/local/lib
      && ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so \t&& groupadd -r kibana
      && useradd -r -m -g kibana kibana \t&& apt-get -qq update && apt-get -yq install
      elasticsearch                                                apache2-utils                                                supervisor
      \                                               logstash                                                libzmq3
      \                                               kibana                                                nginx
      --no-install-recommends   && apt-get purge -y --auto-remove wget   && apt-get
      clean   && apt-get autoclean   && apt-get autoremove   && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/* \t&& echo \"Creating Elasticsearch Paths...\" \t&& for path
      in \t\t/usr/share/elasticsearch/data \t\t/usr/share/elasticsearch/logs \t\t/usr/share/elasticsearch/config
      \t\t/usr/share/elasticsearch/config/scripts \t; do \tmkdir -p \"$path\"; \tchown
      -R elasticsearch:elasticsearch \"$path\"; \tdone"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/nginx/kibana.conf
    - /etc/nginx/sites-available/
  - CmdLine:
    - "cd /opt \t&& echo \"Configuring Nginx...\" \t&& mkdir -p /var/www \t&& ln -sf
      /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log
      \t&& echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf \t&& rm /etc/nginx/sites-enabled/default
      \t&& ln -s /etc/nginx/sites-available/kibana.conf /etc/nginx/sites-enabled/kibana.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/kibana/bin/kibana plugin -i kibana/timelion
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/logstash/bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/kibana/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/elastic
    - /usr/share/elasticsearch/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/htpasswd
    - /etc/nginx/.htpasswd
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord/supervisord.conf
    - /etc/supervisor/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/elastic-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/logstash-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoints/kibana-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /*.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Name: volume
    Volumes:
    - /etc/logstash/conf.d
  - Name: volume
    Volumes:
    - /etc/nginx
  - Name: expose
    Ports:
    - "443"
    - "80"
    - "9200"
    - "9300"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: java:8-jre
  Name: ""
  Platform: ""
  SourceCode: FROM java:8-jre
