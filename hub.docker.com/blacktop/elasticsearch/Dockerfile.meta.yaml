MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/blacktop"'
    Name: label
  - CmdLine:
    - apk add --no-cache openjdk11-jre-headless su-exec
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION
      Value: 7.5.1
    Name: env
  - Env:
    - Key: DOWNLOAD_URL
      Value: '"https://artifacts.elastic.co/downloads/elasticsearch"'
    Name: env
  - Env:
    - Key: ES_TARBAL
      Value: '"${DOWNLOAD_URL}/elasticsearch-oss-${VERSION}-no-jdk-linux-x86_64.tar.gz"'
    Name: env
  - Env:
    - Key: ES_TARBALL_ASC
      Value: '"${DOWNLOAD_URL}/elasticsearch-oss-${VERSION}-no-jdk-linux-x86_64.tar.gz.asc"'
    Name: env
  - Env:
    - Key: EXPECTED_SHA_URL
      Value: '"${DOWNLOAD_URL}/elasticsearch-oss-${VERSION}-no-jdk-linux-x86_64.tar.gz.sha512"'
    Name: env
  - Env:
    - Key: ES_TARBALL_SHA
      Value: '"26ea962f6fcb8ead1d05fc91e30ec10193849a4fb8b826753d591a249b04deb4dd3705f73dc6fa41334112a01b76babfa15e5fe706033dd4eb55638defc3455f"'
    Name: env
  - Env:
    - Key: GPG_KEY
      Value: '"46095ACC8548582C1A2699A9D27D666CD88E42B4"'
    Name: env
  - CmdLine:
    - apk add --no-cache bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache -t .build-deps wget ca-certificates gnupg openssl   && set
      -ex   && cd /tmp   && echo "===> Install Elasticsearch..."   && wget --progress=bar:force
      -O elasticsearch.tar.gz "$ES_TARBAL";   if [ "$ES_TARBALL_SHA" ]; then   echo
      "$ES_TARBALL_SHA *elasticsearch.tar.gz" | sha512sum -c -;   fi;   if [ "$ES_TARBALL_ASC"
      ]; then   wget --progress=bar:force -O elasticsearch.tar.gz.asc "$ES_TARBALL_ASC";   export
      GNUPGHOME="$(mktemp -d)";   ( gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      "$GPG_KEY"   || gpg --keyserver pgp.mit.edu --recv-keys "$GPG_KEY"   || gpg
      --keyserver keyserver.pgp.com --recv-keys "$GPG_KEY" );   gpg --batch --verify
      elasticsearch.tar.gz.asc elasticsearch.tar.gz;   rm -rf "$GNUPGHOME" elasticsearch.tar.gz.asc
      || true;   fi;   tar -xf elasticsearch.tar.gz   && ls -lah   && mv elasticsearch-$VERSION
      /usr/share/elasticsearch   && adduser -D -h /usr/share/elasticsearch elasticsearch   &&
      echo "===> Creating Elasticsearch Paths..."   && for path in   /usr/share/elasticsearch/data   /usr/share/elasticsearch/logs   /usr/share/elasticsearch/config   /usr/share/elasticsearch/config/scripts   /usr/share/elasticsearch/tmp   /usr/share/elasticsearch/plugins   ;
      do   mkdir -p "$path";   chown -R elasticsearch:elasticsearch "$path";   done   &&
      rm -rf /tmp/* /usr/share/elasticsearch/jdk   && apk del --purge .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/share/elasticsearch/modules/x-pack-ml/platform/linux-x86_64
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/elastic
    - /usr/share/elasticsearch/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/logrotate
    - /etc/logrotate.d/elasticsearch
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - elastic-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /elastic-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-healthcheck
    - /usr/local/bin/
  - Name: workdir
    Path: /usr/share/elasticsearch
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Env:
    - Key: ES_TMPDIR
      Value: /usr/share/elasticsearch/tmp
    Name: env
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /elastic-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
