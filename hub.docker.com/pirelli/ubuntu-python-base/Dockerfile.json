{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Thomas Alisi \u003cthomas.alisi.ex@pirelli.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y     software-properties-common     unattended-upgrades \u0026\u0026     cp /usr/share/unattended-upgrades/20auto-upgrades /etc/apt/apt.conf.d/20auto-upgrades \u0026\u0026     apt-get dist-upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     build-essential     libreadline-gplv2-dev     libncursesw5-dev     libssl-dev     libsqlite3-dev     tk-dev libgdbm-dev     libc6-dev     libbz2-dev     zlib1g     zlib1g-dev     libaio-dev     openssl     ssh     ssh-client     git     htop     supervisor     wget     curl     unzip     nginx     python     python-setuptools     python-dev     python-pip     python-virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz \u0026\u0026     tar xzf Python-3.6.1.tgz \u0026\u0026     cd /tmp/Python-3.6.1 \u0026\u0026     ./configure \u0026\u0026 make \u0026\u0026 make altinstall \u0026\u0026     cd /root \u0026\u0026     rm -rf /tmp/Python-3.6.1*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     unixodbc     unixodbc-dev     freetds-dev     freetds-bin     tdsodbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list' \u0026\u0026     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y libpq-dev \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/oracle",
            "/tmp/oracle"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp/oracle \u0026\u0026     unzip instantclient-basic*.zip \u0026\u0026     unzip instantclient-sdk*.zip \u0026\u0026     rm instantclient-*.zip \u0026\u0026     mkdir /opt/oracle \u0026\u0026     mv instantclient_* /opt/oracle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ORACLE_HOME",
              "Value": "/opt/oracle/instantclient_12_1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export ORACLE_HOME=/opt/oracle/instantclient_12_1\" \u003e\u003e /etc/environment \u0026\u0026     echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME\" \u003e\u003e /etc/environment \u0026\u0026     export ORACLE_HOME=/opt/oracle/instantclient_12_1 \u0026\u0026     export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME \u0026\u0026     cd $ORACLE_HOME \u0026\u0026     ln -s libclntsh.so.12.1 libclntsh.so \u0026\u0026     echo \"$ORACLE_HOME\" \u003e\u003e /etc/ld.so.conf.d/oracle.conf \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "virtualenv /opt/venv2 \u0026\u0026     python3.6 -m venv /opt/venv3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_7.x | bash - \u0026\u0026     apt-get install -y nodejs \u0026\u0026 npm install npm@latest -g \u0026\u0026     npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}