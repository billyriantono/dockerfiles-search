MetaArgs: null
Stages:
- BaseName: jetzerb/nix-nice:base-latest
  Commands:
  - Labels:
    - Key: about
      Value: '"Ubuntu-Based Linux Environment for Developers"'
    Name: label
  - Labels:
    - Key: features
      Value: '"nix-nice base, plus git, vs code, dbeaver, postman"'
    Name: label
  - Labels:
    - Key: access
      Value: '"SSH, key authentication, X11 forwarding"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"jetzerb@sva.com"'
    Name: label
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive; $(: so no packages stop to ask us questions)
      apt-get update; apt-get -yq install --no-install-recommends \tgit                  $(:
      source control manager) \tgit-lfs              $(: git add-on for handling BLOBs)
      \tsqitch               $(: sane database change management) \tshellcheck           $(:
      so you can write proper shell scripts) \thowdoi               $(: ask a coding
      question, get an answer) \tsqlite3              $(: small, fast, SQL db engine,
      most-used in the world) \tpostgresql-client    $(: psql and friends) \tlibnotify4
      \tlibxkbfile1 \tlibsecret-1-0 \tlibxss1 \tlibnss3 \tdefault-jre-headless \tlibc++1
      \tpython3-pip \tpython3-setuptools \tpython3-wheel \tnodejs \tnpm ; rm -rf /var/lib/apt/lists/*;"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /tmp/install; cd /tmp/install; wget -O code.deb https://go.microsoft.com/fwlink/?LinkID=760868;
      dpkg -i code.deb; rm code.deb; cd /tmp/install; wget https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb;
      dpkg -i dbeaver*.deb; rm dbeaver*.deb; ce /tmp/install; URL=https://github.com/osquery/osquery/releases;
      wget -O osquery.deb $(lynx --dump $URL | sed -n '/[0-9][0-9]*\\. https.*deb/
      {s/.*https/https/; p;}'); dpkg -i osquery.deb; pip3 install migra[pg]; cd /tmp/install;
      wget https://dl.pstmn.io/download/latest/linux64; cd /opt; tar zxf /tmp/install/linux64;
      cd Postman; mkdir bin; cd bin; ln -s ../app/Postman postman; rm /tmp/install/linux64;
      npm install -g newman; cd /opt; git clone --depth=1 https://github.com/magicmonty/bash-git-prompt.git
      bash-git-prompt; cd bash-git-prompt/themes; sed -i '/Blue}/ { s/{Blue}/{Cyan}/g;
      s/{DimBlue}/{DimCyan}/g; }' Default.bgptheme; cd /etc/profile.d; ln -s /opt/bash-git-prompt/gitprompt.sh
      .; mkdir -p /opt/diff-so-fancy/bin; cd /opt/diff-so-fancy/bin; wget https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy;
      chmod 755 diff-so-fancy;rm -rf /tmp/install; git config --system core.pager
      \"diff-so-fancy | less\"; git config --system color.ui true; git config --system
      color.diff-highlight.oldNormal    \"red bold\"; git config --system color.diff-highlight.oldHighlight
      \"red bold 52\"; git config --system color.diff-highlight.newNormal    \"green
      bold\"; git config --system color.diff-highlight.newHighlight \"green bold 22\";
      git config --system color.diff.meta       \"yellow\"; git config --system color.diff.frag
      \      \"magenta bold\"; git config --system color.diff.commit     \"yellow
      bold\"; git config --system color.diff.old        \"red bold\"; git config --system
      color.diff.new        \"green bold\"; git config --system color.diff.whitespace
      \"red reverse\"; git config --system core.filemode false; $(: so git ignores
      access mode between windows and linux); git config --system credential.helper
      \"cache --timeout=36000\"; $(: cache Personal Access Token for full work day);
      git config --system diff.tool meld; git config --system difftool.prompt false;
      $(: prevent the prompt every time you use \"git difftool\"); git config --system
      difftool.meld.cmd 'meld \"$LOCAL\" \"$REMOTE\"'; git config --system merge.tool
      meld; git config --system mergetool.prompt false; $(: prevent the prompt every
      time you use \"git mergetool\"); git config --system mergetool.meld.cmd 'meld
      \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output \"$MERGED\"'; git config --system
      url.MYGITURL.insteadOf work:; git config --system alias.hist  \"log --format='%C(auto)%h
      |       %ai | %an | %D | %s' --graph\"; git config --system alias.histc \"log
      --format='%C(auto)%h | %ci | %ai | %an | %D | %s' --graph\"; cd /etc/profile.d/vim_runtime;
      for DIR in zz*; do \tmv $DIR/* ${DIR#zz}; \trmdir $DIR; done; echo \"Done with
      major installation and configuration\";"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fs/
    - /
  From:
    Image: jetzerb/nix-nice:base-latest
  Name: ""
  Platform: ""
  SourceCode: FROM jetzerb/nix-nice:base-latest
