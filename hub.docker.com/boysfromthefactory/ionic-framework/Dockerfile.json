{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM     ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "bitard [dot] michael [at] gmail [dot] com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "6.11.1"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "5.3.0"
            },
            {
              "Key": "IONIC_VERSION",
              "Value": "3.9.2"
            },
            {
              "Key": "CORDOVA_VERSION",
              "Value": "7.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export CI=TRAVIS \u0026\u0026     apt-get update \u0026\u0026      apt-get install -y git wget curl unzip ruby ruby-dev gcc make \u0026\u0026     curl --retry 3 -SLO \"http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \u0026\u0026     tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \u0026\u0026     rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" \u0026\u0026     npm install -g npm@\"$NPM_VERSION\" \u0026\u0026     npm install -g cordova@\"$CORDOVA_VERSION\" ionic@\"$IONIC_VERSION\" \u0026\u0026     npm cache clear --force \u0026\u0026     gem install sass \u0026\u0026     git config --global user.email \"you@example.com\" \u0026\u0026     git config --global user.name \"Your Name\" \u0026\u0026     ionic start myApp sidemenu \u0026\u0026    apt-get update \u0026\u0026 apt-get install -y -q python-software-properties software-properties-common  \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get update \u0026\u0026 apt-get -y install oracle-java8-installer \u0026\u0026     echo ANDROID_HOME=\"${ANDROID_HOME}\" \u003e\u003e /etc/environment \u0026\u0026     dpkg --add-architecture i386 \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --force-yes expect ant wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     cd /opt \u0026\u0026     wget --output-document=android-sdk.tgz --quiet http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz \u0026\u0026     tar xzf android-sdk.tgz \u0026\u0026     rm -f android-sdk.tgz \u0026\u0026     chown -R root. /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:/opt/tools"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools",
            "/opt/tools"
          ]
        },
        {
          "CmdLine": [
            "/opt/tools/android-accept-licenses.sh",
            "android update sdk --all --no-ui --filter platform-tools,tools,build-tools-23.0.2,android-23,extra-android-support,extra-android-m2repository,extra-google-m2repository"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "unzip ${ANDROID_HOME}/temp/*.zip -d ${ANDROID_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "myApp"
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "8100"
          ]
        },
        {
          "CmdLine": [
            "ionic",
            "serve"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}