MetaArgs: null
Stages:
- BaseName: debian:buster
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Colin Wilson colin@wyveo.com"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.17.7-1~buster
    Name: env
  - Env:
    - Key: php_conf
      Value: /etc/php/7.4/fpm/php.ini
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php/7.4/fpm/pool.d/www.conf
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.9.1
    Name: env
  - CmdLine:
    - "buildDeps='curl gcc make autoconf libc-dev zlib1g-dev pkg-config'     && set
      -x     && apt-get update     && apt-get install --no-install-recommends $buildDeps
      --no-install-suggests -q -y gnupg2 dirmngr wget apt-transport-https lsb-release
      ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;
      \t  found=''; \t  for server in \t\t  ha.pool.sks-keyservers.net \t\t  hkp://keyserver.ubuntu.com:80
      \t\t  hkp://p80.pool.sks-keyservers.net:80 \t\t  pgp.mit.edu \t  ; do \t\t  echo
      \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\t  apt-key adv --batch --keyserver
      \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" &&
      found=yes && break; \t  done;     test -z \"$found\" && echo >&2 \"error: failed
      to fetch GPG key $NGINX_GPGKEY\" && exit 1;     echo \"deb http://nginx.org/packages/mainline/debian/
      buster nginx\" >> /etc/apt/sources.list     && wget -O /etc/apt/trusted.gpg.d/php.gpg
      https://packages.sury.org/php/apt.gpg     && echo \"deb https://packages.sury.org/php/
      $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list     && apt-get
      update     && apt-get install --no-install-recommends --no-install-suggests
      -q -y             apt-utils             nano             zip             unzip
      \            python-pip             python-setuptools             git             libmemcached-dev
      \            libmemcached11             libmagickwand-dev             nginx=${NGINX_VERSION}
      \            php7.4-fpm             php7.4-cli             php7.4-bcmath             php7.4-dev
      \            php7.4-common             php7.4-json             php7.4-opcache
      \            php7.4-readline             php7.4-mbstring             php7.4-curl
      \            php7.4-gd             php7.4-mysql             php7.4-zip             php7.4-pgsql
      \            php7.4-intl             php7.4-xml             php-pear     &&
      pecl -d php_suffix=7.4 install -o -f redis memcached imagick     && mkdir -p
      /run/php     && pip install wheel     && pip install supervisor supervisor-stdout
      \    && echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d     && rm -rf /etc/nginx/conf.d/default.conf
      \    && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" ${php_conf}
      \    && sed -i -e \"s/memory_limit\\s*=\\s*.*/memory_limit = 256M/g\" ${php_conf}
      \    && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\"
      ${php_conf}     && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\"
      ${php_conf}     && sed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order
      = \\\"EGPCS\\\"/g\" ${php_conf}     && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize
      = no/g\" /etc/php/7.4/fpm/php-fpm.conf     && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output
      = yes/g\" ${fpm_conf}     && sed -i -e \"s/pm.max_children = 5/pm.max_children
      = 4/g\" ${fpm_conf}     && sed -i -e \"s/pm.start_servers = 2/pm.start_servers
      = 3/g\" ${fpm_conf}     && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 2/g\" ${fpm_conf}     && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers
      = 4/g\" ${fpm_conf}     && sed -i -e \"s/pm.max_requests = 500/pm.max_requests
      = 200/g\" ${fpm_conf}     && sed -i -e \"s/www-data/nginx/g\" ${fpm_conf}     &&
      sed -i -e \"s/^;clear_env = no$/clear_env = no/\" ${fpm_conf}     && echo \"extension=redis.so\"
      > /etc/php/7.4/mods-available/redis.ini     && echo \"extension=memcached.so\"
      > /etc/php/7.4/mods-available/memcached.ini     && echo \"extension=imagick.so\"
      > /etc/php/7.4/mods-available/imagick.ini     && ln -sf /etc/php/7.4/mods-available/redis.ini
      /etc/php/7.4/fpm/conf.d/20-redis.ini     && ln -sf /etc/php/7.4/mods-available/redis.ini
      /etc/php/7.4/cli/conf.d/20-redis.ini     && ln -sf /etc/php/7.4/mods-available/memcached.ini
      /etc/php/7.4/fpm/conf.d/20-memcached.ini     && ln -sf /etc/php/7.4/mods-available/memcached.ini
      /etc/php/7.4/cli/conf.d/20-memcached.ini     && ln -sf /etc/php/7.4/mods-available/imagick.ini
      /etc/php/7.4/fpm/conf.d/20-imagick.ini     && ln -sf /etc/php/7.4/mods-available/imagick.ini
      /etc/php/7.4/cli/conf.d/20-imagick.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer   && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"   && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer
      --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/pear     && apt-get purge -y --auto-remove $buildDeps     && apt-get
      clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./supervisord.conf
    - /etc/supervisord.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - html
    - /usr/share/nginx/html
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start.sh
    - /start.sh
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:buster
  Name: ""
  Platform: ""
  SourceCode: FROM debian:buster
