{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x;         apt-get update         \u0026\u0026 apt-get install -y --no-install-recommends             ca-certificates             curl             dirmngr             fonts-noto-cjk             gnupg             libssl1.0-dev             node-less             python3-pip             python3-pyldap             python3-qrcode             python3-renderpm             python3-setuptools             python3-vobject             python3-watchdog             xz-utils         \u0026\u0026 curl -o wkhtmltox.deb -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.stretch_amd64.deb         \u0026\u0026 echo '7e35a63f9db14f93ec7feeb0fce76b30c08f2057 wkhtmltox.deb' | sha1sum -c -         \u0026\u0026 dpkg --force-depends -i wkhtmltox.deb        \u0026\u0026 apt-get -y install -f --no-install-recommends         \u0026\u0026 rm -rf /var/lib/apt/lists/* wkhtmltox.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x;         echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' \u003e etc/apt/sources.list.d/pgdg.list         \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"         \u0026\u0026 repokey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'         \u0026\u0026 gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"${repokey}\"         \u0026\u0026 gpg --armor --export \"${repokey}\" | apt-key add -         \u0026\u0026 gpgconf --kill all         \u0026\u0026 rm -rf \"$GNUPGHOME\"         \u0026\u0026 apt-get update          \u0026\u0026 apt-get install -y postgresql-client         \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x;    echo \"deb http://deb.nodesource.com/node_8.x stretch main\" \u003e /etc/apt/sources.list.d/nodesource.list     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 repokey='9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280'     \u0026\u0026 gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"${repokey}\"     \u0026\u0026 gpg --armor --export \"${repokey}\" | apt-key add -     \u0026\u0026 gpgconf --kill all     \u0026\u0026 rm -rf \"$GNUPGHOME\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 npm install -g rtlcss     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ODOO_VERSION",
              "Value": "12.0"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "ODOO_RELEASE",
          "Name": "arg",
          "Value": "20200107"
        },
        {
          "Key": "ODOO_SHA",
          "Name": "arg",
          "Value": "f11c29e95767079da2392258cad0119a31a15cba"
        },
        {
          "CmdLine": [
            "set -x;         curl -o odoo.deb -sSL http://nightly.odoo.com/${ODOO_VERSION}/nightly/deb/odoo_${ODOO_VERSION}.${ODOO_RELEASE}_all.deb         \u0026\u0026 echo \"${ODOO_SHA} odoo.deb\" | sha1sum -c -         \u0026\u0026 dpkg --force-depends -i odoo.deb         \u0026\u0026 apt-get update         \u0026\u0026 apt-get -y install -f --no-install-recommends         \u0026\u0026 rm -rf /var/lib/apt/lists/* odoo.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install num2words xlwt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./odoo.conf",
            "/etc/odoo/"
          ]
        },
        {
          "CmdLine": [
            "chown odoo /etc/odoo/odoo.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /mnt/extra-addons         \u0026\u0026 chown -R odoo /mnt/extra-addons"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/odoo",
            "/mnt/extra-addons"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8069",
            "8071"
          ]
        },
        {
          "Env": [
            {
              "Key": "ODOO_RC",
              "Value": "/etc/odoo/odoo.conf"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "odoo"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "odoo"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}