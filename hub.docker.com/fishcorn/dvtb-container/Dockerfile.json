{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04",
      "SourceCode": "FROM nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         ca-certificates         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgtk2.0-dev         libhdf5-serial-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/developer"
            },
            {
              "Key": "CONDA_ROOT",
              "Value": "/opt/conda"
            },
            {
              "Key": "CAFFE_ROOT",
              "Value": "/opt/caffe"
            },
            {
              "Key": "DVTB_ROOT",
              "Value": "/opt/dvtb"
            },
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            },
            {
              "Key": "uid",
              "Value": "1000"
            },
            {
              "Key": "gid",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g $gid developer \u0026\u0026     useradd -N -m -d $HOME -u $uid -g $gid -s /bin/bash -c Developer developer \u0026\u0026     echo \"developer ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/developer \u0026\u0026     chmod 0440 /etc/sudoers.d/developer \u0026\u0026     mkdir -p $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT \u0026\u0026     chown ${uid}:${gid} -R $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Name": "user",
          "User": "developer"
        },
        {
          "CmdLine": [
            "wget https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh \u0026\u0026     echo \"d573980fe3b5cdf80485add2466463f5 Miniconda2-4.3.11-Linux-x86_64.sh\" | md5sum -c - \u0026\u0026     bash Miniconda2-4.3.11-Linux-x86_64.sh -b -f -p $CONDA_ROOT \u0026\u0026     rm Miniconda2-4.3.11-Linux-x86_64.sh \u0026\u0026     conda update -y conda \u0026\u0026     conda install -y --channel menpo opencv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$CAFFE_ROOT"
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/BVLC/caffe.git . \u0026\u0026     git remote add yosinski https://github.com/yosinski/caffe.git \u0026\u0026     git fetch --all \u0026\u0026     git checkout --track -b deconv-deep-vis-toolbox yosinski/deconv-deep-vis-toolbox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "egrep 'python-dateutil' python/requirements.txt \u003e python/requirements.pip.txt \u0026\u0026     egrep -v 'python-dateutil' python/requirements.txt \u003e python/requirements.conda.txt \u0026\u0026     conda install -y --file=python/requirements.conda.txt         pip         curl         gflags         glog         leveldb         libprotobuf         libtiff         libpng         lmdb         protobuf         pydot         scikit-image         scipy         snappy     \u0026\u0026 pip install -r python/requirements.pip.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo bash -c \"echo \\\"$CONDA_ROOT/lib\\\" \u003e /etc/ld.so.conf.d/conda.conf \u0026\u0026 ldconfig\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Makefile.config",
            "."
          ]
        },
        {
          "CmdLine": [
            "mkdir build \u0026\u0026 cd build \u0026\u0026     cmake           -DGFLAGS_INCLUDE_DIR=$CONDA_ROOT/include           -DGFLAGS_LIBRARY=$CONDA_ROOT/lib           -DGLOG_INCLUDE_DIR=$CONDA_ROOT/include           -DGLOG_LIBRARY=$CONDA_ROOT/lib           -DLevelDB_INCLUDE=$CONDA_ROOT/include           -DLevelDB_LIBRARY=$CONDA_ROOT/lib           -DLMDB_INCLUDE_DIR=$CONDA_ROOT/include           -DLMDB_LIBRARIES=$CONDA_ROOT/lib           -DMKLROOT=$CONDA_ROOT           -DPROTOBUF_LIBRARY=$CONDA_ROOT/lib/libprotobuf.so           -DPROTOBUF_INCLUDE_DIR=$CONDA_ROOT/include           -DPROTOBUF_PROTOC_LIBRARY=$CONDA_ROOT/lib/libprotoc.so           -DPROTOBUF_PROTOC_EXECUTABLE=$CONDA_ROOT/bin/protoc           -DSNAPPY_ROOT_DIR=$CONDA_ROOT           -DUSE_CUDNN=1 .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j\"$(nproc)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j\"$(nproc)\" pycaffe"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYCAFFE_ROOT",
              "Value": "$CAFFE_ROOT/python"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "$PYCAFFE_ROOT:$PYTHONPATH"
            },
            {
              "Key": "PATH",
              "Value": "$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo bash -c \"echo \\\"$CAFFE_ROOT/build/lib\\\" \u003e\u003e /etc/ld.so.conf.d/caffe.conf \u0026\u0026 ldconfig\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$DVTB_ROOT"
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/yosinski/deep-visualization-toolbox . \u0026\u0026     sed -e\"s,/path/to/caffe,${CAFFE_ROOT},\" models/caffenet-yos/settings_local.template-caffenet-yos.py \u003e settings_local.py"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}