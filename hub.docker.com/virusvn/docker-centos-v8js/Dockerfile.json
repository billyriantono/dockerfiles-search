{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Nhan Nguyen \u003cnxtnhan@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx.repo",
            "/etc/yum.repos.d/nginx.repo"
          ]
        },
        {
          "CmdLine": [
            "yum -y install nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install gcc-c++ pcre-devel zlib-devel make unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install --enablerepo=webtatic php70w php70w-common php70w-fpm php70w-cli php70w-opcache php70w-pear php70w-devel php70w-intl php70w-mbstring php70w-mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install curl-devel expat-devel gettext-devel openssl openssl-devel zlib-devel bzip2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install gcc perl-ExtUtils-MakeMaker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026     git clone https://github.com/git/git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/git \u0026\u0026 make prefix=/usr/local/git all \u0026\u0026 make prefix=/usr/local/git install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y remove git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/git/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/src/depot_tools:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 fetch v8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/v8 \u0026\u0026 make native library=shared snapshot=off -j 4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -R /usr/src/v8/out/native/lib.target/lib* /lib64/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/src/v8/out/native/obj.target/tools/gyp/libv8_libplatform.a /usr/lib64/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -R /usr/src/v8/include /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/lib64\" | pecl install v8js-1.0.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NO_INTERACTION",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo extension=v8js.so \u003e /etc/php.d/v8js.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -m | grep v8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r 'var_dump(get_declared_classes());' | grep V8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r '$class = new ReflectionClass(\"V8Js\"); var_dump($class-\u003egetMethods());'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r '$v8 = new V8Js(); var_dump($v8-\u003eexecuteString(\"1+2+3\"));'"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}