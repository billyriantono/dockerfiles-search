{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm",
      "SourceCode": "FROM php:5.6-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Henrik Steen \u003chenrist@henrist.net\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SIMPLESAMLPHP_VERSION",
              "Value": "1.14.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIMPLESAMLPHP_SHA256",
              "Value": "a7a24d4dc89819f7e53141b38ae36b092a5c1fc9cb2e3cee253c765e5942be52"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends       curl       git       libfreetype6-dev       libjpeg62-turbo-dev       libmcrypt-dev       libpng12-dev       unzip       wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*         \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true         \u0026\u0026 docker-php-ext-install -j$(nproc) mcrypt pdo_mysql     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include --with-jpeg-dir=/usr/include     \u0026\u0026 docker-php-ext-install -j$(nproc) gd         \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\"     \u0026\u0026 php -r \"if (hash_file('SHA384', '/tmp/composer-setup.php') === 'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); } echo PHP_EOL;\"     \u0026\u0026 php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 php -r \"unlink('/tmp/composer-setup.php');\"         \u0026\u0026 mkdir /var/simplesamlphp     \u0026\u0026 cd /var/simplesamlphp     \u0026\u0026 curl -fSL \"https://github.com/simplesamlphp/simplesamlphp/releases/download/v$SIMPLESAMLPHP_VERSION/simplesamlphp-$SIMPLESAMLPHP_VERSION.tar.gz\" -o simplesamlphp.tar.gz     \u0026\u0026 echo \"$SIMPLESAMLPHP_SHA256 *simplesamlphp.tar.gz\" | sha256sum -c -     \u0026\u0026 tar --strip-components=1 -zxf simplesamlphp.tar.gz     \u0026\u0026 rm simplesamlphp.tar.gz         \u0026\u0026 mkdir -p /var/billett/cache     \u0026\u0026 mkdir -p /var/billett/logs     \u0026\u0026 mkdir -p /var/billett/meta     \u0026\u0026 mkdir -p /var/billett/sessions     \u0026\u0026 mkdir -p /var/billett/views     \u0026\u0026 chown -R www-data:www-data /var/billett /var/www /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "simplesamlphp/config.override.php",
            "/var/simplesamlphp/config/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "simplesamlphp/authsources.php",
            "/var/simplesamlphp/config/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "simplesamlphp/saml20-idp-remote.php",
            "/var/simplesamlphp/metadata/"
          ]
        },
        {
          "CmdLine": [
            "cd /var/simplesamlphp \u0026\u0026 tail -n +2 config/config.override.php \u003e\u003econfig/config.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.*",
            "/var/www/html/"
          ]
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "mkdir -p app/commands              app/controllers              app/models              app/database/migrations              app/database/seeds              app/tests              app/src     \u0026\u0026 echo -e '#!/usr/bin/env php\\n\u003c?php' \u003eartisan     \u0026\u0026 echo -e '#!/usr/bin/env php\\n\u003c?php' \u003eapp/tests/TestCase.php     \u0026\u0026 chmod +x artisan     \u0026\u0026 composer install     \u0026\u0026 mv vendor /var/www/html-vendor     \u0026\u0026 ln -s /var/www/html-vendor /var/www/html/vendor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www/html/"
          ]
        },
        {
          "CmdLine": [
            "composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "container/dev.sh",
            "/dev.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/simplesamlphp",
            "/var/billett"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}