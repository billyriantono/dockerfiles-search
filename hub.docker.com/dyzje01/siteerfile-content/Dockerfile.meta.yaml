MetaArgs: null
Stages:
- BaseName: centos:6.6
  Commands:
  - Labels:
    - Key: maintainer
      Value: Gautier Bureau "gautier.bureau@rte-france.com"
    Name: label
  - Key: GITHUB_TOKEN
    Name: arg
    Value: null
  - Env:
    - Key: USER
      Value: '"dynawo_distribution"'
    Name: env
  - CmdLine:
    - yum upgrade -y && yum update -y && yum install -y   git   gcc   gcc-c++   gcc-gfortran   autoconf   automake   make   sudo   libtool   cmake   hwloc   java-1.8.0-openjdk   blas-devel   lapack-devel   expat-devel   glibc-devel   xulrunner-devel   sqlite-devel   gettext   patch   wget   python-devel   ncurses-devel   readline-devel   unzip   vim   tar   xz   python-lxml   curl   flex   bison   chrpath   epel-release
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y python-pip python-psutil dpkg
    Name: run
    PrependShell: true
  - Env:
    - Key: BOOST_VERSION
      Value: "1_64_0"
    Name: env
  - CmdLine:
    - cd /tmp && wget https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION//_/.}/boost_${BOOST_VERSION}.tar.gz
      && tar -xzvf boost_${BOOST_VERSION}.tar.gz && cd boost_${BOOST_VERSION} && ./bootstrap.sh
      --prefix=/opt/boost --without-icu --with-libraries=filesystem,program_options,serialization,system,log,iostreams,atomic
      && ./b2 -s NO_BZIP2=1 --disable-icu boost.locale.icu=off cxxflags="-fPIC" link=static
      variant=release install && rm -f /tmp/boost_${BOOST_VERSION}.tar.gz && cd ~
      && rm -rf /tmp/boost_${BOOST_VERSION}*
    Name: run
    PrependShell: true
  - Env:
    - Key: ZLIB_VERSION
      Value: 1.2.11
    Name: env
  - CmdLine:
    - cd /tmp && wget https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz && tar xzf zlib-${ZLIB_VERSION}.tar.gz
      && cd zlib-${ZLIB_VERSION} && CFLAGS="-fPIC" ./configure --static --prefix=/opt/zlib
      && make && make install && rm -f /tmp/zlib-${ZLIB_VERSION}.tar.gz && cd ~ &&
      rm -rf /tmp/zlib-${ZLIB_VERSION}*
    Name: run
    PrependShell: true
  - Env:
    - Key: CMAKE_VERSION
      Value: 3.9.6
    Name: env
  - Env:
    - Key: CMAKE_VERSION_SHORT
      Value: "3.9"
    Name: env
  - CmdLine:
    - cd /tmp && wget https://cmake.org/files/v${CMAKE_VERSION_SHORT}/cmake-${CMAKE_VERSION}.tar.gz
      && tar xzf cmake-${CMAKE_VERSION}.tar.gz && cd cmake-${CMAKE_VERSION} && ./bootstrap
      && make && make install && rm -f /tmp/cmake-${CMAKE_VERSION}.tar.gz  && cd ~
      && rm -rf /tmp/cmake-${CMAKE_VERSION}*
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBARCHIVE_VERSION
      Value: 3.3.3
    Name: env
  - CmdLine:
    - cd /tmp && wget https://libarchive.org/downloads/libarchive-${LIBARCHIVE_VERSION}.tar.gz
      && tar xzf libarchive-${LIBARCHIVE_VERSION}.tar.gz && cd libarchive-${LIBARCHIVE_VERSION}
      && mkdir build-cmake && cd build-cmake && CFLAGS="-fPIC" cmake .. -DCMAKE_INSTALL_PREFIX=/opt/libarchive
      -DCMAKE_BUILD_TYPE=Release -DENABLE_BZip2=OFF -DENABLE_LZ4=OFF -DENABLE_LZMA=OFF
      -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_EXPAT=OFF -DCMAKE_PREFIX_PATH=/opt/zlib
      && make && make install && rm -f /opt/libarchive/lib/*.so* && rm -f /tmp/libarchive-${LIBARCHIVE_VERSION}.tar.gz
      && cd ~ && rm -rf /tmp/libarchive-${LIBARCHIVE_VERSION}*
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -l -m -d /home/${USER} --user-group ${USER} && chown -R ${USER} /opt
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://api.github.com/repos/dynawo/dynawo/git/refs/heads/master
    - version.json
  - CmdLine:
    - cat version.json
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Name: workdir
    Path: /home/${USER}
  - CmdLine:
    - 'git clone https://github.com/dynawo/dynawo.git dynawo && cd dynawo && echo
      $''#!/bin/bash \nexport DYNAWO_HOME=$(cd "$(dirname "${BASH_SOURCE[0]}")" &&
      pwd)\n\nexport DYNAWO_SRC_OPENMODELICA=/opt/OpenModelica/Source\nexport DYNAWO_INSTALL_OPENMODELICA=/opt/OpenModelica/Install\n\nexport
      DYNAWO_LOCALE=en_GB\nexport DYNAWO_RESULTS_SHOW=false\nexport DYNAWO_BROWSER=xdg-open\n\nexport
      DYNAWO_NB_PROCESSORS_USED=1\n\nexport DYNAWO_BUILD_TYPE=Release\nexport DYNAWO_CXX11_ENABLED=NO\nexport
      DYNAWO_LIBRARY_TYPE=STATIC\n\nexport DYNAWO_BOOST_HOME=/opt/boost\nexport DYNAWO_LIBARCHIVE_HOME=/opt/libarchive\nexport
      DYNAWO_ZLIB_HOME=/opt/zlib\n\nexport DYNAWO_BOOST_USE_STATIC=ON\n\n$DYNAWO_HOME/util/envDynawo.sh
      $@'' > myEnvDynawo.sh && chmod +x myEnvDynawo.sh && git checkout $(curl -s --request
      GET https://api.github.com/repos/dynawo/dynawo/releases/latest | grep tag_name
      | cut -d ''"'' -f 4) && ./myEnvDynawo.sh build-user && ./myEnvDynawo.sh distrib-omc
      && version=$(./myEnvDynawo.sh version | cut -f1 -d'' '') && export GITHUB_TOKEN=$GITHUB_TOKEN
      && curl -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/zip"
      -X POST $(curl -s --request GET https://api.github.com/repos/dynawo/dynawo/releases/latest
      | grep upload_url | cut -d ''"'' -f 4 | grep -o ".*assets")?name=Dynawo_omc_V${version}.zip
      --data-binary @distributions/Dynawo_omc_V${version}.zip'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: centos:6.6
  Name: ""
  Platform: ""
  SourceCode: FROM centos:6.6
