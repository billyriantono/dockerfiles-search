{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/provision.sh",
            "/tmp/provision.sh"
          ]
        },
        {
          "CmdLine": [
            "bash /tmp/provision.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/install_make.sh",
            "/tmp/install_make.sh"
          ]
        },
        {
          "CmdLine": [
            "bash /tmp/install_make.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     bzip2     ca-certificates     openjdk-8-jre-headless     tzdata     sudo     unzip     wget     jq     curl     supervisor     gnupg2   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*   \u0026\u0026 sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"UTC\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"${TZ}\" \u003e /etc/timezone   \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd seluser          --shell /bin/bash           --create-home   \u0026\u0026 usermod -a -G sudo seluser   \u0026\u0026 echo 'ALL ALL = (ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers   \u0026\u0026 echo 'seluser:secret' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/seluser"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-selenium/check-grid.sh",
            "docker-selenium/entry_point.sh",
            "/opt/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/bin/check-grid.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-selenium/supervisord.conf",
            "/etc"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt/selenium /var/run/supervisor /var/log/supervisor   \u0026\u0026 touch /opt/selenium/config.json   \u0026\u0026 chmod -R 777 /opt/selenium /var/run/supervisor /var/log/supervisor /etc/passwd   \u0026\u0026 wget --no-verbose https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar     -O /opt/selenium/selenium-server-standalone.jar   \u0026\u0026 chgrp -R 0 /opt/selenium ${HOME} /var/run/supervisor /var/log/supervisor   \u0026\u0026 chmod -R g=u /opt/selenium ${HOME} /var/run/supervisor /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qqy   \u0026\u0026 apt-get -qqy install     xvfb   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG_WHICH",
              "Value": "en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG_WHERE",
              "Value": "US"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "${LANG_WHICH}_${LANG_WHERE}.${ENCODING}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "${LANGUAGE}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     tzdata     locales   \u0026\u0026 locale-gen ${LANGUAGE}   \u0026\u0026 dpkg-reconfigure --frontend noninteractive locales   \u0026\u0026 apt-get -qyy autoremove   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 apt-get -qyy clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     libfontconfig     libfreetype6     xfonts-cyrillic     xfonts-scalable     fonts-liberation     fonts-ipafont-gothic     fonts-wqy-zenhei     fonts-tlwg-loma-otf   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 apt-get -qyy clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-selenium/start-selenium-node.sh",
            "docker-selenium/start-xvfb.sh",
            "/opt/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-selenium/selenium.conf",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "Env": [
            {
              "Key": "SCREEN_WIDTH",
              "Value": "1360"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCREEN_HEIGHT",
              "Value": "1020"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCREEN_DEPTH",
              "Value": "24"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "START_XVFB",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_MAX_INSTANCES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_MAX_SESSION",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_HOST",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_PORT",
              "Value": "5555"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_REGISTER_CYCLE",
              "Value": "5000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_POLLING",
              "Value": "5000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_UNREGISTER_IF_STILL_DOWN_AFTER",
              "Value": "60000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_DOWN_POLLING_LIMIT",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_APPLICATION_NAME",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRID_DEBUG",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-selenium/start-selenium-standalone.sh",
            "/opt/bin/start-selenium-standalone.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-selenium/selenium.conf",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/install_chrome_binary.sh",
            "/tmp/install_chrome_binary.sh"
          ]
        },
        {
          "CmdLine": [
            "bash /tmp/install_chrome_binary.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo",
            "-u",
            "postgres",
            "/etc/init.d/postgresql",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}