{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tgure/android-nodejs:latest",
      "SourceCode": "FROM tgure/android-nodejs:latest",
      "Platform": "",
      "From": {
        "Image": "tgure/android-nodejs:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "IONIC_VERSION",
              "Value": "5.4.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CORDOVA_VERSION",
              "Value": "9.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE",
              "Value": "DontWarn"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/tmp\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apt-transport-https ca-certificates curl gnupg ncftp --no-install-recommends \u0026\u0026 \tcurl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026 \techo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026 \tapt-get update \u0026\u0026 apt-get install -y \tgoogle-chrome-stable --no-install-recommends \u0026\u0026     npm i -g --unsafe-perm cordova@${CORDOVA_VERSION} \u0026\u0026     npm i -g --unsafe-perm ionic@${IONIC_VERSION} \u0026\u0026     npm i -g --unsafe-perm cordova-res \u0026\u0026     npm i -g --unsafe-perm apidoc \u0026\u0026     ionic --no-interactive config set -g daemon.updates false \u0026\u0026 \tapt-get purge --auto-remove -y curl gnupg \u0026\u0026 \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}