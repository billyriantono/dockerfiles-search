MetaArgs: null
Stages:
- BaseName: ubuntu:18.10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"contact@chainsecurity.com"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y    software-properties-common    locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update &&        apt-get -y install        wget        gdebi
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/souffle-lang/souffle/releases/download/1.5.1/souffle_1.5.1-1_amd64.deb
      -O /tmp/souffle.deb &&        gdebi --n /tmp/souffle.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install        openjdk-8-jdk        python3-pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/
  - CmdLine:
    - pip3 install --user -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y      nodejs      npm
    Name: run
    PrependShell: true
  - Key: truffle
    Name: arg
    Value: '"latest"'
  - CmdLine:
    - npm install -g truffle@$truffle
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /sec
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gradlew
    - settings.gradle
    - /sec/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gradle
    - /sec/gradle/
  - CmdLine:
    - ./gradlew -v
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /sec
  - CmdLine:
    - ./gradlew jar
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/test/resources/solidity/transaction-reordering.sol
    - /project/example.sol
  - CmdLine:
    - python3
    - docker_run_securify.py
    - -p
    - /project
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.10
