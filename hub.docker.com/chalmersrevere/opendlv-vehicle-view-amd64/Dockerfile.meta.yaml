MetaArgs: null
Stages:
- As: builder
  BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Christian Berger "christian.berger@gu.se"
    Name: maintainer
  - CmdLine:
    - apt-get update -y &&     apt-get upgrade -y &&     apt-get dist-upgrade -y &&     apt-get
      install -y --no-install-recommends         ca-certificates         cmake         build-essential
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /opt/sources
  - Name: workdir
    Path: /opt/sources
  - CmdLine:
    - mkdir /opt/sources/build.1 && cd /opt/sources/build.1 && cmake ../src && make
      && cp rec-metadataToJSON /tmp
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as builder
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Christian Berger "christian.berger@gu.se"
    Name: maintainer
  - CmdLine:
    - apt-get update -y &&     apt-get install -y --no-install-recommends         software-properties-common
      &&     add-apt-repository ppa:chrberger/libcluon &&     apt-get update -y &&     apt-get
      upgrade -y &&     apt-get dist-upgrade -y &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         libcluon         nodejs         npm         zip
      &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/download &&     curl -L https://download.docker.com/linux/static/stable/x86_64/docker-18.06.0-ce.tgz
      | tar -xz -C /tmp/download &&     mv /tmp/download/docker/docker /usr/bin/ &&     rm
      -rf /tmp/download
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /tmp/rec-metadataToJSON
    - /usr/bin
  - CmdLine:
    - mkdir -p /opt/vehicle-view/recordings
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/vehicle-view
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - webapp/
    - .
  - CmdLine:
    - mv package.json.amd64 package.json &&     rm -f package.json.armhf &&     mv
      index.js.amd64 index.js &&     rm -f index.js.armhf &&     npm install
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8081"
  - CmdLine:
    - node
    - index.js
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
