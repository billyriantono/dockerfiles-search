{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "Julien Levesy \u003cjulien@upfluence.co\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "misc/confd",
            "/usr/local/bin/confd"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/confd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc",
            "/erlang_solutions.asc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://www.rabbitmq.com/rabbitmq-signing-key-public.asc",
            "/rabbitmq.asc"
          ]
        },
        {
          "CmdLine": [
            "echo 'deb http://packages.erlang-solutions.com/debian wheezy contrib' \u003e\u003e /etc/apt/sources.list \u0026\u0026     echo 'deb http://www.rabbitmq.com/debian/ testing main' \u003e\u003e /etc/apt/sources.list \u0026\u0026     apt-key add erlang_solutions.asc \u0026\u0026     apt-key add rabbitmq.asc \u0026\u0026     apt-get update \u0026\u0026 apt-get -y install erlang rabbitmq-server \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "erlang.cookie",
            "/var/lib/rabbitmq/.erlang.cookie"
          ]
        },
        {
          "CmdLine": [
            "chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie \u0026\u0026     chmod 400 /var/lib/rabbitmq/.erlang.cookie"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf.d/hosts.toml",
            "/etc/confd/conf.d/hosts.toml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf.d/rabbitmq.toml",
            "/etc/confd/conf.d/rabbitmq.toml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/hosts.tmpl",
            "/etc/confd/templates/hosts.tmpl"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/rabbitmq.config.tmpl",
            "/etc/confd/templates/rabbitmq.config.tmpl"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /run.sh \u0026\u0026     mkdir -p /data/mnesia \u0026\u0026     chown -R rabbitmq:rabbitmq /data/mnesia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4369"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "25672"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5672"
          ]
        },
        {
          "Env": [
            {
              "Key": "RABBITMQ_MNESIA_BASE",
              "Value": "/data/mnesia"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RABBITMQ_SERVER_START_ARGS",
              "Value": "-eval error_logger:tty(true)."
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rabbitmq-plugins --offline enable rabbitmq_management"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/mnesia"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}