{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:stretch",
      "SourceCode": "FROM buildpack-deps:stretch",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:stretch"
      },
      "Commands": [
        {
          "Maintainer": "ruan jiefeng \u003crunjf@qq.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y libgd2-xpm-dev libgeoip-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUA_NGINX_MODULE_VERSION",
              "Value": "0.10.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_DEVEL_KIT_VERSION",
              "Value": "0.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PCRE_VERSION",
              "Value": "8.41"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_VERSION",
              "Value": "2.0.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.0.2m"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZLIB_VERSION",
              "Value": "1.2.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_UPSTREAM_NGINX_MODULE_VERSION",
              "Value": "0.07"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGX_HTTP_DYUPS_MODULE_VERSION",
              "Value": "a5e75737e04ff3e5040a80f5f739171e96c3359c"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "CmdLine": [
            "wget -O lua-nginx-module-${LUA_NGINX_MODULE_VERSION}.tar.gz https://codeload.github.com/openresty/lua-nginx-module/tar.gz/v${LUA_NGINX_MODULE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf lua-nginx-module-${LUA_NGINX_MODULE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O ngx_devel_kit-${NGX_DEVEL_KIT_VERSION}.tar.gz https://codeload.github.com/simpl/ngx_devel_kit/tar.gz/v${NGX_DEVEL_KIT_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf ngx_devel_kit-${NGX_DEVEL_KIT_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://ftp.pcre.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf pcre-${PCRE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://luajit.org/download/LuaJIT-${LUAJIT_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf LuaJIT-${LUAJIT_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd LuaJIT-${LUAJIT_VERSION}/     \u0026\u0026 make PREFIX=/usr/local/lj2     \u0026\u0026 make install PREFIX=/usr/local/lj2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf nginx-${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf openssl-${OPENSSL_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://www.zlib.net/zlib-${ZLIB_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf zlib-${ZLIB_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O lua-upstream-nginx-module-${LUA_UPSTREAM_NGINX_MODULE_VERSION}.tar.gz https://codeload.github.com/openresty/lua-upstream-nginx-module/tar.gz/v${LUA_UPSTREAM_NGINX_MODULE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf lua-upstream-nginx-module-${LUA_UPSTREAM_NGINX_MODULE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O ngx_http_dyups_module-${NGX_HTTP_DYUPS_MODULE_VERSION}.tar.gz https://codeload.github.com/yzprofile/ngx_http_dyups_module/tar.gz/${NGX_HTTP_DYUPS_MODULE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf ngx_http_dyups_module-${NGX_HTTP_DYUPS_MODULE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd nginx-${NGINX_VERSION}     \u0026\u0026 export LUAJIT_LIB=/usr/local/lj2/lib     \u0026\u0026 export LUAJIT_INC=/usr/local/lj2/include/luajit-2.0     \u0026\u0026 ./configure         --prefix=/usr/share/nginx         --sbin-path=/usr/sbin/nginx         --modules-path=/usr/lib/nginx/modules         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --pid-path=/var/run/nginx.pid         --lock-path=/var/run/nginx.lock         --with-select_module         --with-poll_module         --with-threads         --with-file-aio         --with-http_ssl_module         --with-http_v2_module         --with-http_realip_module         --with-http_addition_module         --with-http_xslt_module=dynamic         --with-http_image_filter_module=dynamic         --with-http_geoip_module=dynamic         --with-http_sub_module         --with-http_dav_module         --with-http_flv_module         --with-http_mp4_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_auth_request_module         --with-http_random_index_module         --with-http_secure_link_module         --with-http_degradation_module         --with-http_slice_module         --with-http_stub_status_module         --with-mail=dynamic         --with-mail_ssl_module         --with-stream=dynamic         --with-stream_ssl_module         --with-stream_realip_module         --with-stream_geoip_module=dynamic         --with-stream_ssl_preread_module         --with-compat         --with-openssl=../openssl-${OPENSSL_VERSION}         --with-openssl-opt=no-nextprotoneg         --with-zlib=../zlib-${ZLIB_VERSION}         --with-pcre=\"../pcre-${PCRE_VERSION}\"         --with-pcre-jit         --with-ld-opt=\"-Wl,-rpath,/usr/local/lj2/lib\"         --add-module=../ngx_devel_kit-${NGX_DEVEL_KIT_VERSION}         --add-module=../lua-nginx-module-${LUA_NGINX_MODULE_VERSION}         --add-module=../lua-upstream-nginx-module-${LUA_UPSTREAM_NGINX_MODULE_VERSION}         --add-module=../ngx_http_dyups_module-${NGX_HTTP_DYUPS_MODULE_VERSION}         --with-debug     \u0026\u0026 make -j2     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/nginx     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            ""
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}