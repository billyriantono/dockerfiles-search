MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jeff Geerling"'
    Name: label
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: pip_upgrade_packages
      Value: '"pip setuptools"'
    Name: env
  - Env:
    - Key: pip_packages
      Value: '"ansible yamllint ansible-lint flake8 testinfra molecule"'
    Name: env
  - Env:
    - Key: ca_bundle
      Value: '"/etc/ssl/certs/ca-bundle.crt"'
    Name: env
  - Env:
    - Key: ca_cert_location
      Value: '"/etc/pki/ca-trust/source/anchors"'
    Name: env
  - Env:
    - Key: ca_cert_file
      Value: '"Cromwell-ROOT-CA.crt"'
    Name: env
  - Chown: "1:1"
    Name: add
    SourcesAndDest:
    - ./${ca_cert_file}
    - ${ca_cert_location}/${ca_cert_file}
  - CmdLine:
    - chmod 0644 ${ca_cert_location}/${ca_cert_file}      && /bin/update-ca-trust
      enable
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y update; yum clean all;      (cd /lib/systemd/system/sysinit.target.wants/;
      for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done);      rm
      -f /lib/systemd/system/multi-user.target.wants/*;     rm -f /etc/systemd/system/*.wants/*;     rm
      -f /lib/systemd/system/local-fs.target.wants/*;      rm -f /lib/systemd/system/sockets.target.wants/*udev*;      rm
      -f /lib/systemd/system/sockets.target.wants/*initctl*;      rm -f /lib/systemd/system/basic.target.wants/*;     rm
      -f /lib/systemd/system/anaconda.target.wants/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - yum makecache fast      && yum -y install deltarpm epel-release initscripts      &&
      yum -y update      && yum -y install      sudo      which      python-pip      python-devel      @development      &&
      yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --cert=${ca_bundle} --upgrade $pip_upgrade_packages
    Name: run
    PrependShell: true
  - CmdLine:
    - pip config set global.cert ${ca_bundle}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install $pip_packages
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /lib/systemd/system/systemd*udev*      && rm -f /lib/systemd/system/getty.target
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_USER
      Value: ansible
    - Key: SUDO_GROUP
      Value: wheel
    Name: env
  - CmdLine:
    - set -xe      && groupadd -r ${ANSIBLE_USER}      && useradd -m -g ${ANSIBLE_USER}
      ${ANSIBLE_USER}      && usermod -aG ${SUDO_GROUP} ${ANSIBLE_USER}      && sed
      -i "/^%${SUDO_GROUP}/s/ALL\$/NOPASSWD:ALL/g" /etc/sudoers
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /sys/fs/cgroup
  - CmdLine:
    - /usr/lib/systemd/systemd
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
