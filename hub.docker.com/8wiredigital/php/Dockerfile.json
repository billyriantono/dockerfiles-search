{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "8 Wire Digital \u003cinfo@8wiredigital.co.nz\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAJOR_VERSION",
              "Value": "7"
            },
            {
              "Key": "PHP_MINOR_VERSION",
              "Value": "2"
            },
            {
              "Key": "PHP_PATCH_VERSION",
              "Value": "25"
            },
            {
              "Key": "PHP_USER",
              "Value": "www"
            },
            {
              "Key": "PHP_USERID",
              "Value": "9999"
            },
            {
              "Key": "PHP_INI_DIR",
              "Value": "/etc"
            },
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "5.1.1"
            },
            {
              "Key": "SRC_DIR",
              "Value": "/tmp/src"
            },
            {
              "Key": "EXTENSION_DIR",
              "Value": "/usr/local/lib/php/extensions"
            },
            {
              "Key": "PERSISTANT_DEPS",
              "Value": "\"        cron         ca-certificates         curl         ssmtp         libjpeg62-turbo         libpng12-0         libxml2         librecode0         libsqlite3-0         libxslt1.1         libicu-dev         libmcrypt4         patch         file         mysql-client         libfreetype6         unzip         zip         nano-tiny\""
            },
            {
              "Key": "BUILD_DEPS",
              "Value": "\"         libpcre3-dev         zlib1g-dev         autoconf         g++         gcc         libc-dev         make         pkg-config         re2c         libcurl4-openssl-dev         libreadline6-dev         librecode-dev         libsqlite3-dev         libssl-dev         xz-utils         libjpeg62-turbo-dev         libpng12-dev         libmcrypt-dev         libxml2-dev         bison         libxslt1-dev         libfreetype6-dev\""
            },
            {
              "Key": "GPG_KEYS",
              "Value": "\"1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F\""
            },
            {
              "Key": "PHP_SHA256",
              "Value": "746efeedc38e6ff7b1ec1432440f5fa801537adf6cd21e4afb3f040e5b0760a9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -u ${PHP_USERID} ${PHP_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $PHP_INI_DIR/php.d     mkdir -p $PHP_INI_DIR/php-fpm.d     mkdir -p /var/log/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 for key in $GPG_KEYS; do         gpg --batch --keyserver keys.gnupg.net --recv-keys \"$key\";     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-ext-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $BUILD_DEPS $PERSISTANT_DEPS --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 mkdir -p ${SRC_DIR}     \u0026\u0026 cd ${SRC_DIR}     \u0026\u0026 curl -fSL \"http://php.net/get/php-$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_PATCH_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz     \u0026\u0026 echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -     \u0026\u0026 curl -fSL \"http://php.net/get/php-$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_PATCH_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 for key in $GPG_KEYS; do         gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";     done     \u0026\u0026 gpg --batch --verify php.tar.xz.asc php.tar.xz     \u0026\u0026 rm -r \"$GNUPGHOME\"     \u0026\u0026 mkdir ${SRC_DIR}/php     \u0026\u0026 tar -Jxf php.tar.xz -C ${SRC_DIR}/php --strip-components=1     \u0026\u0026 cd ${SRC_DIR}     \u0026\u0026 curl -L -o redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz     \u0026\u0026 tar xfz redis.tar.gz     \u0026\u0026 mv phpredis-$PHPREDIS_VERSION ${SRC_DIR}/php/ext/redis     \u0026\u0026 cd ${SRC_DIR}/php     \u0026\u0026 ./configure --with-config-file-path=\"$PHP_INI_DIR\"         --build=$CBUILD         --host=$CHOST         --with-config-file-scan-dir=\"$PHP_INI_DIR/php.d\"         --with-fpm-user=$PHP_USER         --with-fpm-group=$PHP_USER         --disable-cgi         --enable-fpm         --enable-mysqlnd         --enable-soap         --enable-zip         --enable-mbstring         --enable-intl         --enable-opcache         --enable-pcntl         --enable-ftp         --with-iconv-dir=/usr/bin         --with-xsl         --with-curl         --with-gd         --with-openssl         --with-zlib         --with-pdo-mysql         --with-mysqli         --with-mcrypt         --with-mysql-sock=/var/mysql/mysql.sock         --with-jpeg-dir=/usr/lib/x86_64-linux-gnu/         --with-freetype-dir=/usr/lib/x86_64-linux-gnu/         --with-png-dir=/usr/lib/x86_64-linux-gnu/         --enable-exif         --enable-bcmath         \u0026\u0026 make -j\"$(getconf _NPROCESSORS_ONLN)\"     \u0026\u0026 make install     \u0026\u0026 make clean         \u0026\u0026 cd ${SRC_DIR}     \u0026\u0026 curl -o ${SRC_DIR}/ioncube.tar.gz http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz     \u0026\u0026 export VERSION=`php -r \"echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;\"`    \u0026\u0026 tar zxpf ${SRC_DIR}/ioncube.tar.gz -C ${SRC_DIR}    \u0026\u0026 mv ${SRC_DIR}/ioncube/ioncube_loader_lin_${VERSION}.so `php -r \"echo ini_get('extension_dir');\"`/ioncube.so     \u0026\u0026 export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\"`     \u0026\u0026 curl -A \"Docker\" -o ${SRC_DIR}/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION}     \u0026\u0026 tar zxpf ${SRC_DIR}/blackfire-probe.tar.gz -C ${SRC_DIR}     \u0026\u0026 mv ${SRC_DIR}/blackfire-*.so `php -r \"echo ini_get('extension_dir');\"`/blackfire.so     \u0026\u0026 docker-php-ext-install redis     \u0026\u0026 docker-php-ext-enable opcache         \u0026\u0026 strip -s /usr/local/bin/php     \u0026\u0026 strip -s /usr/local/sbin/php-fpm     \u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; }     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS     \u0026\u0026 cd /     \u0026\u0026 rm -rf ${SRC_DIR} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y $PERSISTANT_DEPS --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 curl -o /usr/local/bin/magerun http://files.magerun.net/n98-magerun-latest.phar     \u0026\u0026 chmod +x /usr/local/bin/magerun     \u0026\u0026 curl -o /usr/local/bin/magerun2 https://files.magerun.net/n98-magerun2.phar     \u0026\u0026 chmod +x /usr/local/bin/magerun2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php.ini",
            "${PHP_INI_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php-fpm.conf",
            "${PHP_INI_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/www.conf",
            "${PHP_INI_DIR}/php-fpm.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/cron-www",
            "/tmp/crontab/www"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/pam.d",
            "/etc/pam.d/cron"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/cronstart",
            "/usr/bin/cronstart"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/cronstart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm",
            "-F",
            "-y",
            "/etc/php-fpm.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}