{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "8 Wire Digital \u003cinfo@8wiredigital.co.nz\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.9.32.10"
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "1.10.1"
            },
            {
              "Key": "NGINX_USER",
              "Value": "www"
            },
            {
              "Key": "NGINX_USERID",
              "Value": "9999"
            },
            {
              "Key": "NGINX_CONF_DIR",
              "Value": "/etc/nginx"
            },
            {
              "Key": "NGINX_LOG_DIR",
              "Value": "/var/log/nginx"
            },
            {
              "Key": "SRC_DIR",
              "Value": "/tmp/src"
            },
            {
              "Key": "BUILD_DEPS",
              "Value": "\"gcc         ca-certificates         libc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tgnupg\""
            },
            {
              "Key": "PERSISTANT_DEPS",
              "Value": "\"openssl         pcre         zlib\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser -D -u ${NGINX_USERID} ${NGINX_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add ${PERSISTANT_DEPS} ${BUILD_DEPS}     \u0026\u0026 update-ca-certificates     \u0026\u0026 mkdir -p ${SRC_DIR}     \u0026\u0026 cd ${SRC_DIR}     \u0026\u0026 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz     \u0026\u0026 tar -zxvf nginx-${NGINX_VERSION}.tar.gz     \u0026\u0026 cd ${SRC_DIR}/nginx-${NGINX_VERSION}     \u0026\u0026 ./configure         --prefix=${NGINX_CONF_DIR}         --conf-path=${NGINX_CONF_DIR}/nginx.conf         --error-log-path=${NGINX_LOG_DIR}/error.log         --http-log-path=${NGINX_LOG_DIR}/access.log          --user=${NGINX_USER}         --group=${NGINX_USER}         --sbin-path=/usr/sbin/nginx         --with-http_ssl_module         --with-http_gzip_static_module         --with-http_realip_module         --without-mail_pop3_module         --without-mail_smtp_module         --without-mail_imap_module     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 strip -s /usr/sbin/nginx     \u0026\u0026 apk del ${BUILD_DEPS}     \u0026\u0026 apk add ${PERSISTANT_DEPS}     \u0026\u0026 rm -rf ${SRC_DIR}     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ${NGINX_CONF_DIR}/conf.d     \u0026\u0026 mkdir ${NGINX_CONF_DIR}/sites-enabled     \u0026\u0026 mkdir ${NGINX_CONF_DIR}/sites-available     \u0026\u0026 mkdir ${NGINX_CONF_DIR}/templates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "${NGINX_CONF_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/mime.types",
            "${NGINX_CONF_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/conf.d",
            "${NGINX_CONF_DIR}/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "${NGINX_CONF_DIR}/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "errors",
            "${NGINX_CONF_DIR}/errors"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$NGINX_LOG_DIR"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/nginx"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}