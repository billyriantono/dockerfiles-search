{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.8-fpm-alpine3.9",
      "SourceCode": "FROM php:7.3.8-fpm-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "php:7.3.8-fpm-alpine3.9"
      },
      "Commands": [
        {
          "Key": "APCU_VERSION",
          "Name": "arg",
          "Value": "5.1.17"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps     $PHPIZE_DEPS     icu-dev     libzip-dev     zlib-dev     \u0026\u0026 apk add --no-cache     ca-certificates     git     openssh-client     unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure zip --with-libzip     \u0026\u0026 docker-php-ext-install intl opcache mbstring zip     \u0026\u0026 pecl install apcu-$APCU_VERSION     \u0026\u0026 pecl clear-cache     \u0026\u0026 docker-php-ext-enable apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runDeps=\"$(     \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions     \t\t\t| tr ',' '\\n'     \t\t\t| sort -u     \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     \t)\"     \u0026\u0026 apk add --no-cache --virtual .phpexts-rundeps $runDeps     \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"short_open_tag=off\" \u003e\u003e /usr/local/etc/php/zdocker.ini     \u0026\u0026 echo \"date.timezone=UTC\" \u003e\u003e /usr/local/etc/php/conf.d/zdocker.ini     \u0026\u0026 echo \"opcache.memory_consumption=256\" \u003e\u003e /usr/local/etc/php/conf.d/zdocker.ini     \u0026\u0026 echo \"opcache.max_accelerated_files=20000\" \u003e\u003e /usr/local/etc/php/conf.d/zdocker.ini     \u0026\u0026 echo \"realpath_cache_size=4096K\" \u003e\u003e /usr/local/etc/php/conf.d/zdocker.ini     \u0026\u0026 echo \"realpath_cache_ttl=600\" \u003e\u003e /usr/local/etc/php/conf.d/zdocker.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 mkdir -p /var/www/.composer/vendor/bin     \u0026\u0026 chown -R www-data:www-data /var/www/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "SYMFONYCLI_VERSION=`curl -sS https://get.symfony.com/cli/LATEST`     \u0026\u0026 [ 'i386' = `uname -m` ] \u0026\u0026 SYMFONYCLI_MACHINE=\"386\" || SYMFONYCLI_MACHINE=\"amd64\"     \u0026\u0026 curl -sS https://get.symfony.com/cli/v$SYMFONYCLI_VERSION/symfony_linux_$SYMFONYCLI_MACHINE \u003e /usr/local/bin/symfony.gz     \u0026\u0026 gzip -d /usr/local/bin/symfony.gz     \u0026\u0026 chmod +x /usr/local/bin/symfony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/www-data/s/\\/home\\/www-data/\\/var\\/www\\//g' /etc/passwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint",
            "/usr/local/bin/entrypoint"
          ]
        },
        {
          "CmdLine": [
            "entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        }
      ]
    }
  ]
}