{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "\u003coss@wescale.fr\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026    apk add bash sudo git py-setuptools python-dev libffi-dev openssl-dev gcc musl-dev \u0026\u0026    easy_install-2.7 pip \u0026\u0026    pip install -U pyopenssl ndg-httpsclient pyasn1 ansible pywinrm \u0026\u0026    apk del gcc musl-dev libffi-dev python-dev openssl-dev --purge \u0026\u0026    adduser ansible -D -G wheel -s /bin/bash \u0026\u0026    sed -i -e \"s/# %wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) NOPASSWD: ALL/g\" /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "False"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "ansible"
        },
        {
          "Name": "workdir",
          "Path": "/home/ansible"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}