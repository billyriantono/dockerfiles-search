{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "frontendbuilder",
      "BaseName": "node:10",
      "SourceCode": "FROM node:10 as frontendBuilder",
      "Platform": "",
      "As": "frontendbuilder",
      "From": {
        "Image": "node:10"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./frontend",
            "."
          ]
        },
        {
          "CmdLine": [
            "npm install \u0026\u0026     npm run lint \u0026\u0026     npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "backendbuilder",
      "BaseName": "php:7.3-apache",
      "SourceCode": "FROM php:7.3-apache as backendBuilder",
      "Platform": "",
      "As": "backendbuilder",
      "From": {
        "Image": "php:7.3-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./backend",
            "/backend"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y git libzip-dev \u0026\u0026     docker-php-ext-install -j$(nproc) zip \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /backend \u0026\u0026 composer install \u0026\u0026 composer build-dist"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "php:7.3-apache",
      "SourceCode": "FROM php:7.3-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.3-apache"
      },
      "Commands": [
        {
          "Maintainer": "Felix Sandstr√∂m \u003cfelix.sandstrom@me.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "STORAGE",
              "Value": "'SQLite'"
            },
            {
              "Key": "REDIS_HOST",
              "Value": "'tcp://redis.local:6379'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "apache.conf",
            "/etc/apache2/sites-enabled/000-default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "backendBuilder",
          "Name": "copy",
          "SourcesAndDest": [
            "/backend",
            "/backend"
          ]
        },
        {
          "Chown": "",
          "From": "frontendBuilder",
          "Name": "copy",
          "SourcesAndDest": [
            "./dist",
            "/var/www/html/public"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite \u0026\u0026     a2enmod headers \u0026\u0026     mv /backend/src/phppst.php /var/www/html/public/phppst.php \u0026\u0026     mv /backend/vendor /var/www/html/vendor \u0026\u0026     mv /backend/src /var/www/html/src \u0026\u0026     rm -Rf /backend \u0026\u0026     mkdir  /var/www/html/src/data \u0026\u0026     chown www-data:staff /var/www/html/src/data \u0026\u0026     chmod 700 /var/www/html/src/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}