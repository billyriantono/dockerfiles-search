MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: Karl Stoney <me@karlstoney.com>
    Name: maintainer
  - CmdLine:
    - "yum -y -q update &&     yum -y -q remove iputils &&     yum -y -q install wget
      epel-release openssl openssl-devel tar unzip \t\t\t\t\t\t\tlibffi-devel python-devel
      redhat-rpm-config \t\t\t\t\t\t\tgcc gcc-c++ make zlib-devel pcre-devel ca-certificates
      &&     yum -y -q clean all"
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd nginx &&     useradd -g nginx nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp && \t\twget --quiet http://luajit.org/download/LuaJIT-2.1.0-beta2.tar.gz
      && \t\ttar xzf Lua* && \t\tcd Lua* && \t\tmake && \t\tmake install && \t\trm
      -rf /tmp/Lua*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LUAJIT_LIB
      Value: /usr/local/lib
    Name: env
  - Env:
    - Key: LUAJIT_INC
      Value: /usr/local/include/luajit-2.1
    Name: env
  - CmdLine:
    - "cd /tmp && \t\twget --quiet https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz
      && \t\ttar xzf v0.3.0* && \t\tmv ngx_devel_kit* /usr/local/src/ngx-devel-kit
      && \t\trm -f v0.3.0*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LUA_VERSION
      Value: 0.10.8
    Name: env
  - CmdLine:
    - "cd /tmp && \t\twget --quiet https://github.com/openresty/lua-nginx-module/archive/v$LUA_VERSION.tar.gz
      && \t\ttar xzf v$LUA_VERSION* && \t\tmv lua-nginx-module* /usr/local/src/lua-nginx-module
      && \t\trm -f v$LUA_VERSION*"
    Name: run
    PrependShell: true
  - Env:
    - Key: MISC_VERSION
      Value: "0.31"
    Name: env
  - CmdLine:
    - "cd /tmp && \t\twget --quiet https://github.com/openresty/set-misc-nginx-module/archive/v$MISC_VERSION.tar.gz
      && \t\ttar xzf v$MISC_VERSION* && \t\tmv set-misc-nginx-module-* /usr/local/src/set-misc-nginx-module
      && \t\trm -f v$MISC_VERSION*"
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.11.10
    Name: env
  - CmdLine:
    - "cd /usr/local/src &&     wget --quiet http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
      &&     tar -xzf nginx-$NGINX_VERSION.tar.gz &&     ln -sf nginx-$NGINX_VERSION
      nginx &&     cd nginx &&     ./configure       --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\"
      \      --add-module=/usr/local/src/lua-nginx-module \t\t\t\t\t      --add-module=/usr/local/src/ngx-devel-kit\t\t\t\t\t\t\t
      \     --add-module=/usr/local/src/set-misc-nginx-module\t\t\t      --user=nginx
      \                         \t\t\t\t\t\t\t\t      --group=nginx                        \t
      \t\t\t\t\t\t\t\t      --prefix=/usr/share/nginx                   \t\t\t\t\t
      \     --sbin-path=/usr/sbin/nginx           \t\t\t\t\t\t\t\t      --conf-path=/etc/nginx/nginx.conf
      \    \t\t\t\t\t\t\t\t      --pid-path=/var/run/nginx/nginx.pid         \t\t\t\t\t
      \     --lock-path=/var/run/nginx/nginx.lock       \t\t\t\t\t      --error-log-path=/var/log/nginx/error.log
      \t\t\t\t\t\t      --http-log-path=/var/log/nginx/access.log \t\t\t\t\t\t      --with-http_gzip_static_module
      \       \t\t\t\t\t\t\t\t      --with-http_stub_status_module        \t\t\t\t\t\t\t\t
      \     --with-http_sub_module                                      --with-http_ssl_module
      \               \t\t\t\t\t\t\t\t      --with-pcre                           \t\t\t\t\t\t\t\t
      \     --with-file-aio                       \t\t\t\t\t\t\t\t      --with-http_realip_module
      \            \t\t\t\t\t\t\t\t      --without-http_scgi_module            \t\t\t\t\t\t\t\t
      \     --without-http_uwsgi_module           \t\t\t\t\t\t\t\t      --without-http_fastcgi_module
      \     \t\t\t\t\t\t\t\t &&     make &&     make install &&     rm -rf /usr/local/src/nginx*"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y -q install git-core &&     pip install 'acme>=0.4.1,<0.9' &&     mkdir
      -p /tmp/src &&     git clone https://github.com/zenhack/simp_le /tmp/src/simp_le
      &&     cd /tmp/src/simp_le &&     python ./setup.py install &&     yum -y -q
      remove git-core &&     yum -y -q clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y -q remove gcc gcc-c++ make &&     yum -y -q install openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/nginx &&     mkdir -p /var/run/nginx &&     mkdir -p /usr/share/nginx
      &&     mkdir -p /etc/nginx/conf.d &&     mkdir -p /usr/local/etc/nginx &&     mkdir
      -p /etc/letsencrypt &&     mkdir -p /mnt/live &&     mkdir -p /mnt/html &&     rm
      -rf /usr/share/nginx/html &&     ln -sf /mnt/live /etc/letsencrypt/live &&     ln
      -sf /mnt/html /usr/share/nginx/html &&     chown -R nginx:nginx /var/log/nginx
      &&     chown -R nginx:nginx /var/run/nginx &&     chown -R nginx:nginx /usr/share/nginx
      &&     chown -R nginx:nginx /etc/nginx &&     chown -R nginx:nginx /usr/local/etc/nginx
      &&     chown -R nginx:nginx /etc/letsencrypt &&     chown -R nginx:nginx /mnt
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://rpm.nodesource.com/setup_7.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y -q install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g handlebars
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /template
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - template/package.json
    - /template/package.json
  - CmdLine:
    - cd /template &&     npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - setcap 'cap_net_bind_service=+ep' /usr/sbin/nginx
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - template/template.js
    - /template/template.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssl.default.conf
    - /usr/local/etc/nginx
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - redirect.default.conf
    - /usr/local/etc/nginx
  - CmdLine:
    - /usr/local/bin/start_nginx.sh
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
