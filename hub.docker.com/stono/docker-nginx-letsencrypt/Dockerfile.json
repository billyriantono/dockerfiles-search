{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Karl Stoney \u003cme@karlstoney.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum -y -q update \u0026\u0026     yum -y -q remove iputils \u0026\u0026     yum -y -q install wget epel-release openssl openssl-devel tar unzip \t\t\t\t\t\t\tlibffi-devel python-devel redhat-rpm-config \t\t\t\t\t\t\tgcc gcc-c++ make zlib-devel pcre-devel ca-certificates \u0026\u0026     yum -y -q clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd nginx \u0026\u0026     useradd -g nginx nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 \t\twget --quiet http://luajit.org/download/LuaJIT-2.1.0-beta2.tar.gz \u0026\u0026 \t\ttar xzf Lua* \u0026\u0026 \t\tcd Lua* \u0026\u0026 \t\tmake \u0026\u0026 \t\tmake install \u0026\u0026 \t\trm -rf /tmp/Lua*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/local/include/luajit-2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 \t\twget --quiet https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz \u0026\u0026 \t\ttar xzf v0.3.0* \u0026\u0026 \t\tmv ngx_devel_kit* /usr/local/src/ngx-devel-kit \u0026\u0026 \t\trm -f v0.3.0*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUA_VERSION",
              "Value": "0.10.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 \t\twget --quiet https://github.com/openresty/lua-nginx-module/archive/v$LUA_VERSION.tar.gz \u0026\u0026 \t\ttar xzf v$LUA_VERSION* \u0026\u0026 \t\tmv lua-nginx-module* /usr/local/src/lua-nginx-module \u0026\u0026 \t\trm -f v$LUA_VERSION*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MISC_VERSION",
              "Value": "0.31"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 \t\twget --quiet https://github.com/openresty/set-misc-nginx-module/archive/v$MISC_VERSION.tar.gz \u0026\u0026 \t\ttar xzf v$MISC_VERSION* \u0026\u0026 \t\tmv set-misc-nginx-module-* /usr/local/src/set-misc-nginx-module \u0026\u0026 \t\trm -f v$MISC_VERSION*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local/src \u0026\u0026     wget --quiet http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \u0026\u0026     tar -xzf nginx-$NGINX_VERSION.tar.gz \u0026\u0026     ln -sf nginx-$NGINX_VERSION nginx \u0026\u0026     cd nginx \u0026\u0026     ./configure       --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\"       --add-module=/usr/local/src/lua-nginx-module \t\t\t\t\t      --add-module=/usr/local/src/ngx-devel-kit\t\t\t\t\t\t\t      --add-module=/usr/local/src/set-misc-nginx-module\t\t\t      --user=nginx                          \t\t\t\t\t\t\t\t      --group=nginx                        \t \t\t\t\t\t\t\t\t      --prefix=/usr/share/nginx                   \t\t\t\t\t      --sbin-path=/usr/sbin/nginx           \t\t\t\t\t\t\t\t      --conf-path=/etc/nginx/nginx.conf     \t\t\t\t\t\t\t\t      --pid-path=/var/run/nginx/nginx.pid         \t\t\t\t\t      --lock-path=/var/run/nginx/nginx.lock       \t\t\t\t\t      --error-log-path=/var/log/nginx/error.log \t\t\t\t\t\t      --http-log-path=/var/log/nginx/access.log \t\t\t\t\t\t      --with-http_gzip_static_module        \t\t\t\t\t\t\t\t      --with-http_stub_status_module        \t\t\t\t\t\t\t\t      --with-http_sub_module                                      --with-http_ssl_module                \t\t\t\t\t\t\t\t      --with-pcre                           \t\t\t\t\t\t\t\t      --with-file-aio                       \t\t\t\t\t\t\t\t      --with-http_realip_module             \t\t\t\t\t\t\t\t      --without-http_scgi_module            \t\t\t\t\t\t\t\t      --without-http_uwsgi_module           \t\t\t\t\t\t\t\t      --without-http_fastcgi_module      \t\t\t\t\t\t\t\t \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     rm -rf /usr/local/src/nginx*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y -q install git-core \u0026\u0026     pip install 'acme\u003e=0.4.1,\u003c0.9' \u0026\u0026     mkdir -p /tmp/src \u0026\u0026     git clone https://github.com/zenhack/simp_le /tmp/src/simp_le \u0026\u0026     cd /tmp/src/simp_le \u0026\u0026     python ./setup.py install \u0026\u0026     yum -y -q remove git-core \u0026\u0026     yum -y -q clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y -q remove gcc gcc-c++ make \u0026\u0026     yum -y -q install openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/nginx \u0026\u0026     mkdir -p /var/run/nginx \u0026\u0026     mkdir -p /usr/share/nginx \u0026\u0026     mkdir -p /etc/nginx/conf.d \u0026\u0026     mkdir -p /usr/local/etc/nginx \u0026\u0026     mkdir -p /etc/letsencrypt \u0026\u0026     mkdir -p /mnt/live \u0026\u0026     mkdir -p /mnt/html \u0026\u0026     rm -rf /usr/share/nginx/html \u0026\u0026     ln -sf /mnt/live /etc/letsencrypt/live \u0026\u0026     ln -sf /mnt/html /usr/share/nginx/html \u0026\u0026     chown -R nginx:nginx /var/log/nginx \u0026\u0026     chown -R nginx:nginx /var/run/nginx \u0026\u0026     chown -R nginx:nginx /usr/share/nginx \u0026\u0026     chown -R nginx:nginx /etc/nginx \u0026\u0026     chown -R nginx:nginx /usr/local/etc/nginx \u0026\u0026     chown -R nginx:nginx /etc/letsencrypt \u0026\u0026     chown -R nginx:nginx /mnt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://rpm.nodesource.com/setup_7.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y -q install nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g handlebars"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /template"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "template/package.json",
            "/template/package.json"
          ]
        },
        {
          "CmdLine": [
            "cd /template \u0026\u0026     npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "setcap 'cap_net_bind_service=+ep' /usr/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "template/template.js",
            "/template/template.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ssl.default.conf",
            "/usr/local/etc/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "redirect.default.conf",
            "/usr/local/etc/nginx"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/start_nginx.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}