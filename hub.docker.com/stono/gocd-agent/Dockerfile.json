{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gocd/gocd-agent-deprecated:17.2.0",
      "SourceCode": "FROM gocd/gocd-agent-deprecated:17.2.0",
      "Platform": "",
      "From": {
        "Image": "gocd/gocd-agent-deprecated:17.2.0"
      },
      "Commands": [
        {
          "Maintainer": "Karl Stoney \u003cme@karlstoney.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "KUBECTL_VERSION",
          "Name": "arg",
          "Value": "1.6.0"
        },
        {
          "Key": "TERRAFORM_VERSION",
          "Name": "arg",
          "Value": "0.9.2"
        },
        {
          "Key": "DOCKER_VERSION",
          "Name": "arg",
          "Value": "1.11.2"
        },
        {
          "Key": "COMPOSE_VERSION",
          "Name": "arg",
          "Value": "1.9.0"
        },
        {
          "Key": "GO_DEPENDENCY_LABEL_CLI_PEOPLEDATA",
          "Name": "arg",
          "Value": "1.2.37"
        },
        {
          "Key": "CLOUD_SDK_VERSION",
          "Name": "arg",
          "Value": "155.0.0-0"
        },
        {
          "CmdLine": [
            "curl --silent --location https://deb.nodesource.com/setup_7.x | bash - \u003e/dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y -q update \u0026\u0026     apt-get -y -q install nodejs wget sudo python-openssl build-essential libssl-dev g++ unzip \u0026\u0026     apt-get -y -q clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget --quiet https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform_$TERRAFORM_VERSION\\_linux_amd64.zip \u0026\u0026     unzip terraform_*.zip \u0026\u0026     mv terraform /usr/local/bin \u0026\u0026     rm -rf *terraform*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget --quiet https://get.docker.com/builds/Linux/i386/docker-$DOCKER_VERSION.tgz \u0026\u0026     tar -xzf docker-*.tgz \u0026\u0026     mv ./docker/docker /usr/local/bin/docker \u0026\u0026     rm -rf docker* \u0026\u0026     ln -s /usr/local/bin/docker /bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026     wget --quiet https://github.com/docker/compose/releases/download/$COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` \u0026\u0026     mv docker-compose-* docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose \u0026\u0026     ln -s /usr/local/bin/docker-compose /bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'Defaults  env_keep += \"COMPOSE_PROJECT_NAME\"' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'Defaults  env_keep += \"GO_*\"' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'go ALL=(ALL:ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG docker root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG docker go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone --depth=1 https://github.com/AGWA/git-crypt \u0026\u0026     cd git-crypt \u0026\u0026     make \u0026\u0026     make install PREFIX=/usr/local \u0026\u0026     rm -rf /tmp/git-crypt*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_INSTALL_DIR",
              "Value": "/usr/lib/google-cloud-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_REPO",
              "Value": "cloud-sdk-trusty"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON_SITEPACKAGES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" \u003e /etc/apt/sources.list.d/google-cloud-sdk.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y -q update \u0026\u0026     apt-get -y -q install google-cloud-sdk=$CLOUD_SDK_VERSION \u0026\u0026     apt-get -y -q clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/gcloud/keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026     wget --quiet https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl \u0026\u0026     chmod +x kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gcloud config set --installation component_manager/disable_update_check true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -- 's/\\\"disable_updater\\\": false/\\\"disable_updater\\\": true/g' $CLOUDSDK_INSTALL_DIR/lib/googlecloudsdk/core/config.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --depth=0 --no-summary --quiet peopledata-cli@$PEOPLEDATA_CLI_VERSION \u0026\u0026     rm -rf /tmp/npm*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/go"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/run_agent.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}