MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - CmdLine:
    - NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5
      &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key
      adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
      &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n
      +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum
      -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/cuda.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: "8.0"
    Name: env
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"8.0"'
    Name: label
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 8-0=8.0.61-1
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     build-essential     curl     git   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda-latest-Linux-`uname
      -p`.sh   && bash Miniconda-latest-Linux-`uname -p`.sh -b   && rm Miniconda-latest-Linux-`uname
      -p`.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/miniconda2/bin:$PATH
    Name: env
  - CmdLine:
    - conda install -y     h5py     pandas     theano     opencv     shapely     scikit-learn     jupyter     matplotlib     seaborn   &&
      conda install -y -c conda-forge tifffile=0.10.0   && conda clean --yes --tarballs
      --packages --source-cache   && pip install --upgrade -I setuptools   && pip
      install --upgrade     keras     https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.9.0rc0-cp27-none-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /notebook
  - Name: workdir
    Path: /notebook
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter notebook --no-browser --ip=0.0.0.0 --NotebookApp.token=
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
