{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.12-fpm-alpine",
      "SourceCode": "FROM php:7.1.12-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1.12-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Adis Heric \u003cadis.heric@visenda.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "\"1.13.7\""
            },
            {
              "Key": "NGINX_WEBROOT",
              "Value": "\"/var/www/html\""
            },
            {
              "Key": "NGINX_PROXY_FORWARD_HTTPS",
              "Value": "\"0\""
            },
            {
              "Key": "APP_ENV",
              "Value": "\"dev\""
            },
            {
              "Key": "APP_TIMEZONE",
              "Value": "\"Europe/Berlin\""
            },
            {
              "Key": "APP_FAKEMAIL_DIR",
              "Value": "\"/fakemail\""
            },
            {
              "Key": "SCRIPTS_DIR",
              "Value": "\"/scripts\""
            },
            {
              "Key": "CUSTOM_SCRIPTS_DIR",
              "Value": "\"/webserver-scripts\""
            },
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "\"256M\""
            },
            {
              "Key": "PHP_MAX_EXEC_TIME",
              "Value": "\"60\""
            },
            {
              "Key": "PHP_UPLOAD_MAX_FILESIZE",
              "Value": "\"256M\""
            },
            {
              "Key": "PHP_POST_MAX_SIZE",
              "Value": "\"256M\""
            },
            {
              "Key": "PHP_FPM_PM",
              "Value": "\"dynamic\""
            },
            {
              "Key": "PHP_FPM_PM_MAX_CHILDREN",
              "Value": "\"10\""
            },
            {
              "Key": "PHP_FPM_PM_MAX_REQUESTS",
              "Value": "\"500\""
            },
            {
              "Key": "PHP_FPM_PM_START_SERVERS",
              "Value": "\"4\""
            },
            {
              "Key": "PHP_FPM_PM_MIN_SPARE_SERVERS",
              "Value": "\"2\""
            },
            {
              "Key": "PHP_FPM_PM_MAX_SPARE_SERVERS",
              "Value": "\"6\""
            },
            {
              "Key": "SMTP_HOSTNAME",
              "Value": "\"smtp\""
            },
            {
              "Key": "SMTP_PORT",
              "Value": "\"587\""
            },
            {
              "Key": "SMTP_FROM",
              "Value": "\"it@visenda.com\""
            },
            {
              "Key": "SMTP_USERNAME",
              "Value": "\"visenda\""
            },
            {
              "Key": "SMTP_PASSWORD",
              "Value": "\"visenda\""
            },
            {
              "Key": "SMTP_AUTH",
              "Value": "\"1\""
            },
            {
              "Key": "SMTP_TLS",
              "Value": "\"1\""
            },
            {
              "Key": "RDS_HOSTNAME",
              "Value": "\"db\""
            },
            {
              "Key": "RDS_DB_NAME",
              "Value": "\"visenda\""
            },
            {
              "Key": "RDS_USERNAME",
              "Value": "\"visenda\""
            },
            {
              "Key": "RDS_PASSWORD",
              "Value": "\"visenda\""
            },
            {
              "Key": "LUA_MODULE_VERSION",
              "Value": "\"0.10.11\""
            },
            {
              "Key": "DEVEL_KIT_MODULE_VERSION",
              "Value": "\"0.3.0\""
            },
            {
              "Key": "LUAJIT_LIB",
              "Value": "\"/usr/lib\""
            },
            {
              "Key": "LUAJIT_INC",
              "Value": "\"/usr/include/luajit-2.0\""
            },
            {
              "Key": "LD_PRELOAD",
              "Value": "\"/usr/lib/preloadable_libiconv.so php\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 apk update     \u0026\u0026 apk add --no-cache         gnu-libiconv@testing         libxslt-dev         gd-dev     \u0026\u0026 apk add --no-cache --virtual .build-deps         autoconf         gcc         libc-dev         make         openssl-dev         pcre-dev         zlib-dev         linux-headers         curl         gnupg         geoip-dev         perl-dev         luajit-dev         musl-dev         libffi-dev         augeas-dev         python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8   \u0026\u0026 CONFIG=\"    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_geoip_module=dynamic     --with-http_perl_module=dynamic     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-stream_geoip_module=dynamic     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module     --add-module=/usr/src/ngx_devel_kit-$DEVEL_KIT_MODULE_VERSION     --add-module=/usr/src/lua-nginx-module-$LUA_MODULE_VERSION   \"   \u0026\u0026 addgroup -S -g 1001 nginx   \u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx -u 1000 nginx   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc   \u0026\u0026 curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v$DEVEL_KIT_MODULE_VERSION.tar.gz -o ndk.tar.gz   \u0026\u0026 curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$LUA_MODULE_VERSION.tar.gz -o lua.tar.gz   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 found='';   for server in     ha.pool.sks-keyservers.net     hkp://keyserver.ubuntu.com:80     hkp://p80.pool.sks-keyservers.net:80     pgp.mit.edu   ; do     echo \"Fetching GPG key $GPG_KEYS from $server\";     gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \u0026\u0026 found=yes \u0026\u0026 break;   done;   test -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $GPG_KEYS\" \u0026\u0026 exit 1;   gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz   \u0026\u0026 rm -r \"$GNUPGHOME\" nginx.tar.gz.asc   \u0026\u0026 mkdir -p /usr/src   \u0026\u0026 tar -zxC /usr/src -f nginx.tar.gz   \u0026\u0026 tar -zxC /usr/src -f ndk.tar.gz   \u0026\u0026 tar -zxC /usr/src -f lua.tar.gz   \u0026\u0026 rm nginx.tar.gz ndk.tar.gz lua.tar.gz   \u0026\u0026 cd /usr/src/nginx-$NGINX_VERSION   \u0026\u0026 ./configure $CONFIG --with-debug   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 mv objs/nginx objs/nginx-debug   \u0026\u0026 mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so   \u0026\u0026 mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so   \u0026\u0026 mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so   \u0026\u0026 mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so   \u0026\u0026 mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so   \u0026\u0026 ./configure $CONFIG   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 make install   \u0026\u0026 rm -rf /etc/nginx/html/   \u0026\u0026 mkdir /etc/nginx/conf.d/   \u0026\u0026 mkdir -p /usr/share/nginx/html/   \u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/   \u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/   \u0026\u0026 install -m755 objs/nginx-debug /usr/sbin/nginx-debug   \u0026\u0026 install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so   \u0026\u0026 install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so   \u0026\u0026 ln -s ../../usr/lib/nginx/modules /etc/nginx/modules   \u0026\u0026 strip /usr/sbin/nginx*   \u0026\u0026 strip /usr/lib/nginx/modules/*.so   \u0026\u0026 rm -rf /usr/src/nginx-$NGINX_VERSION     \u0026\u0026 apk add --no-cache --virtual .gettext gettext   \u0026\u0026 mv /usr/bin/envsubst /tmp/     \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --no-cache --virtual .nginx-rundeps $runDeps   \u0026\u0026 apk del .gettext   \u0026\u0026 mv /tmp/envsubst /usr/local/bin/   \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache     bash     supervisor     ca-certificates     msmtp     cyrus-sasl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache     libmcrypt-dev     icu-dev     libpng-dev     freetype-dev     libjpeg-turbo-dev     \u0026\u0026 docker-php-ext-configure gd       --with-gd       --with-freetype-dir=/usr/include/       --with-png-dir=/usr/include/       --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install         pdo_mysql         mcrypt         gd         exif         intl         xsl         json         soap         dom         zip         opcache         mbstring     \u0026\u0026 docker-php-source delete     \u0026\u0026 mkdir -p         /etc/nginx         /run/nginx         /var/log/supervisor     \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "resources/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "resources/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "resources/scripts/",
            "$SCRIPTS_DIR"
          ]
        },
        {
          "CmdLine": [
            "chmod +x     $SCRIPTS_DIR/*     /usr/local/bin/*     /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p     /etc/nginx/sites-available/     /etc/nginx/sites-enabled/     /etc/nginx/ssl/     \u0026\u0026 rm -Rf /var/www/*     \u0026\u0026 mkdir -p $NGINX_WEBROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "$NGINX_WEBROOT"
          ]
        },
        {
          "CmdLine": [
            "chown -R 1000:1001 $NGINX_WEBROOT     \u0026\u0026 chmod -R 775 $NGINX_WEBROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}