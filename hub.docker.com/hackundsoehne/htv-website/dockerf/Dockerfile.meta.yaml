MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - Maintainer: Ruben Knol <c.minor6@gmail.com>
    Name: maintainer
  - Expression: ARG SYMFONY_ENV=dev
    Name: onbuild
  - CmdLine:
    - apt-get update     && apt-get install -y libcurl4-openssl-dev libssl-dev libsasl2-dev
      libmcrypt-dev     curl git unzip --no-install-recommends     && rm -rf /var/lib/apt/lists/*     &&
      docker-php-ext-install -j$(nproc) mcrypt pdo pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php     && mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php.ini
    - /usr/local/etc/php/conf.d/99-custom.ini
  - Name: workdir
    Path: /usr/app
  - CmdLine:
    - mkdir -p /usr/app /usr/app/vendor
    Name: run
    PrependShell: true
  - Expression: COPY . /usr/app/
    Name: onbuild
  - Expression: RUN rm -rf var/cache/* var/logs/* var/sessions/* vendor/*
    Name: onbuild
  - Expression: RUN bash -c "[ \"$SYMFONY_ENV\" == \"prod\" ]     && composer install
      --no-interaction --no-dev     || composer install --no-interaction"
    Name: onbuild
  - Expression: RUN php bin/console cache:warmup --env=$SYMFONY_ENV
    Name: onbuild
  - Expression: RUN chown -R www-data var/cache var/logs var/sessions vendor
    Name: onbuild
  - Expression: RUN bash -c "[ \"$SYMFONY_ENV\" == \"prod\" ] && rm web/app_dev.php
      || rm web/app.php"
    Name: onbuild
  - Name: expose
    Ports:
    - "9000"
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
