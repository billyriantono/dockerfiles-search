MetaArgs: null
Stages:
- BaseName: tarantool/tarantool:1
  Commands:
  - Maintainer: Konstantin Nazarov "mail@racktear.com"
    Name: maintainer
  - CmdLine:
    - addgroup -S nginx     && adduser -S -G nginx nginx     && apk add --no-cache
      'su-exec>=0.2'
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.11.1
    - Key: NGINX_UPSTREAM_MODULE_URL
      Value: https://github.com/tarantool/nginx_upstream_module.git
    - Key: NGINX_UPSTREAM_MODULE_COMMIT
      Value: 3736239b51cc48776ee49088d7d674ff37791544
    - Key: NGINX_GPG_KEYS
      Value: B0F4253373F8F6F510D42178520A9993A1C052F8
    Name: env
  - Env:
    - Key: NGINX_LUA_MODULE_URL
      Value: https://github.com/openresty/lua-nginx-module
    - Key: NGINX_LUA_MODULE_PATH
      Value: /usr/src/lua-nginx-module
    Name: env
  - Env:
    - Key: NGINX_DEVEL_KIT_URL
      Value: https://github.com/simpl/ngx_devel_kit
    - Key: NGINX_DEVEL_KIT_PATH
      Value: /usr/src/nginx-devel-kit
    Name: env
  - Env:
    - Key: LUAJIT_VERSION
      Value: 2.0.5
    - Key: LUAJIT_URL
      Value: http://luajit.org/git/luajit-2.0.git
    - Key: LUAJIT_PATH
      Value: /usr/src/luajit
    - Key: LUAJIT_LIB
      Value: /usr/local/lib
    - Key: LUAJIT_INC
      Value: /usr/local/include/luajit-2.0
    Name: env
  - Env:
    - Key: LUAROCKS_VERSION
      Value: 2.4.2
    - Key: LUAROCKS_URL
      Value: https://github.com/luarocks/luarocks
    - Key: LUAROCKS_PATH
      Value: /usr/src/luarocks
    Name: env
  - Env:
    - Key: LUAROCKS_ROCKS
      Value: '"lua-cjson"'
    Name: env
  - CmdLine:
    - 'set -x   && apk add --no-cache --virtual .build-deps      build-base      cmake      linux-headers      libressl-dev      pcre-dev      zlib-dev      libxslt-dev      gd-dev      geoip-dev      git      tar      gnupg      curl      perl-dev      unzip      gcc      perl   &&
      apk add --no-cache --virtual .run-deps      ca-certificates      libressl      pcre      zlib      libxslt      gd      geoip      gettext      libgcc   &&
      git config --global http.postBuffer 524288000   && : "---------- download nginx-devel-kit
      ----------"   && git clone "$NGINX_DEVEL_KIT_URL" $NGINX_DEVEL_KIT_PATH   &&
      : "---------- download nginx-lua-module ----------"   && git clone "$NGINX_LUA_MODULE_URL"
      $NGINX_LUA_MODULE_PATH   && : "---------- download luajit ----------"   && git
      clone "$LUAJIT_URL" $LUAJIT_PATH   && git -C $LUAJIT_PATH checkout tags/v$LUAJIT_VERSION   &&
      make -C $LUAJIT_PATH   && make -C $LUAJIT_PATH install   && : "---------- download
      and install luarocks (depends on luajit) ----------"   && git clone $LUAROCKS_URL
      $LUAROCKS_PATH   && git -C $LUAROCKS_PATH checkout tags/v$LUAROCKS_VERSION   &&
      ln -s /usr/local/bin/luajit-$LUAJIT_VERSION /usr/local/bin/lua   && cd $LUAROCKS_PATH   &&
      ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/   &&
      make build   && make install   && cd   && : "---------- download nginx-upstream-module
      ----------"   && git clone "$NGINX_UPSTREAM_MODULE_URL" /usr/src/nginx_upstream_module   &&
      git -C /usr/src/nginx_upstream_module checkout "${NGINX_UPSTREAM_MODULE_COMMIT}"   &&
      git -C /usr/src/nginx_upstream_module submodule init   && git -C /usr/src/nginx_upstream_module
      submodule update   && make -C /usr/src/nginx_upstream_module yajl   && make
      -C /usr/src/nginx_upstream_module msgpack   && : "---------- download nginx
      ----------"   && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz      -o
      nginx.tar.gz   && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc      -o
      nginx.tar.gz.asc   && : "---------- verify signatures ----------"   && mkdir
      -p /usr/src/nginx   && tar -xzf nginx.tar.gz -C /usr/src/nginx       --strip-components=1   &&
      cd /usr/src/nginx   && : "---------- build nginx ----------"   && ./configure       --with-cc-opt=''-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck
      -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include''       --with-ld-opt=''/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a
      -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck''       --add-module=/usr/src/nginx_upstream_module       --prefix=/etc/nginx       --sbin-path=/usr/sbin/nginx       --modules-path=/usr/lib/nginx/modules       --conf-path=/etc/nginx/nginx.conf       --error-log-path=/var/log/nginx/error.log       --http-log-path=/var/log/nginx/access.log       --pid-path=/var/run/nginx.pid       --lock-path=/var/run/nginx.lock       --http-client-body-temp-path=/var/cache/nginx/client_temp       --http-proxy-temp-path=/var/cache/nginx/proxy_temp       --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp       --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp       --http-scgi-temp-path=/var/cache/nginx/scgi_temp       --user=nginx       --group=nginx       --with-http_ssl_module       --with-http_realip_module       --with-http_addition_module       --with-http_sub_module       --with-http_dav_module       --with-http_flv_module       --with-http_mp4_module       --with-http_gunzip_module       --with-http_gzip_static_module       --with-http_random_index_module       --with-http_secure_link_module       --with-http_stub_status_module       --with-http_auth_request_module       --with-http_xslt_module=dynamic       --with-http_image_filter_module=dynamic       --with-http_geoip_module=dynamic       --with-http_perl_module=dynamic       --with-threads       --with-stream       --with-stream_ssl_module       --with-http_slice_module       --with-mail       --with-mail_ssl_module       --with-file-aio       --with-http_v2_module       --with-ipv6       --with-ld-opt="-Wl,-rpath,$LUAJIT_LIB"       --add-module=$NGINX_DEVEL_KIT_PATH       --add-module=$NGINX_LUA_MODULE_PATH   &&
      make   && make install   && rm -rf /etc/nginx/html/   && mkdir /etc/nginx/conf.d/   &&
      mkdir -p /usr/share/nginx/html/   && install -m644 html/index.html /usr/share/nginx/html/   &&
      install -m644 html/50x.html /usr/share/nginx/html/   && : "---------- install
      module deps ----------"   && runDeps="$(       scanelf --needed --nobanner /usr/sbin/nginx
      /usr/lib/nginx/modules/*.so               | awk ''{ gsub(/,/, "\nso:", $2);
      print "so:" $2 }''               | sort -u               | xargs -r apk info
      --installed               | sort -u       )"   && apk add --virtual .run-deps
      $runDeps   && : "---------- install lua rocks ----------"   && for rock in $LUAROCKS_ROCKS;
      do luarocks install $rock; done   && : "---------- remove build deps ----------"   &&
      rm -rf /usr/src/nginx   && rm -rf /usr/src/nginx_upstream_module   && apk del
      .build-deps   && : "---------- redirect logs to default collector ----------"   &&
      ln -sf /dev/stdout /var/log/nginx/access.log   && ln -sf /dev/stderr /var/log/nginx/error.log'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: volume
    Volumes:
    - /var/cache/nginx
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  - Maintainer: Evgeny Kruglov "ekruglov@gmail.com"
    Name: maintainer
  - CmdLine:
    - apk add --no-cache dumb-init apache2-utils
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./tarantool_is_up
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./init.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./enabled_auth_basic.conf
    - ./tnt_locations.conf
    - /etc/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app.lua
    - /opt/tarantool/
  - CmdLine:
    - /usr/bin/dumb-init
    - /bin/sh
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /init.sh
    Name: cmd
    PrependShell: false
  From:
    Image: tarantool/tarantool:1
  Name: ""
  Platform: ""
  SourceCode: FROM  tarantool/tarantool:1
