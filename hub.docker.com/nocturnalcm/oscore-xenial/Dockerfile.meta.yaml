MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: '"nocturnal coding monkeys,llc"'
    Name: maintainer
  - Env:
    - Key: TERM
      Value: '"xterm"'
    Name: env
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    Name: env
  - Key: S6_OVERLAY_VERSION
    Name: arg
    Value: v1.17.2.0
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: '"noninteractive"'
  - Key: BUILD_PACKAGES
    Name: arg
    Value: '"automake build-essential"'
  - Key: BASE_PACKAGES
    Name: arg
    Value: '"tzdata iputils-ping traceroute perl bash "'
  - Key: BASE_PACKAGES_REQ
    Name: arg
    Value: '"ca-certificates libffi6 libgdbm3 libgmp10 libgnutls-openssl27 libgnutls30
      libhogweed4 libidn11 libnettle6 libp11-kit0 libperl5.22 libtasn1-6 perl-base
      perl-modules-5.22 "'
  - Key: TEMP_PACKAGES
    Name: arg
    Value: '"curl"'
  - Key: TEMP_PACKAGES_REQ
    Name: arg
    Value: '"libasn1-8-heimdal libcurl3-gnutls libgssapi-krb5-2 libgssapi3-heimdal
      libhcrypto4-heimdal libheimbase1-heimdal libheimntlm0-heimdal libhx509-5-heimdal
      libk5crypto3 libkeyutils1 libkrb5-26-heimdal libkrb5-3 libkrb5support0 libldap-2.4-2
      libroken18-heimdal librtmp1 libsasl2-2 libsasl2-modules-db libsqlite3-0 libwind0-heimdal"'
  - CmdLine:
    - echo "**** updating APT ****" &&     apt-get update &&     echo "**** installing
      packages ****" &&     apt-get install -y --no-install-recommends       ${BASE_PACKAGES}
      ${BASE_PACKAGES_REQ} ${TEMP_PACKAGES} ${TEMP_PACKAGES_REQ} &&     echo "****
      installing S6 ****" &&     curl -J -L -o /tmp/s6-overlay-amd64.tar.gz https://github.com/just-containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz
      &&     tar xzf /tmp/s6-overlay-amd64.tar.gz -C / &&     echo "**** APT cleanup
      ****" &&     apt-get -y remove ${TEMP_PACKAGES} ${TEMP_PACKAGES_REQ} &&     apt-get
      -y autoremove &&     apt-get -y clean &&     rm -rf /var/lib/apt/lists/* &&     rm
      -rf /tmp/* &&     rm -rf /var/tmp/* &&     echo "**** finished basic package
      install ****"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "<**** adding coreuser user acount & group ****>" &&     addgroup --gid
      1000 coreuser &&     adduser --home "/coreuser" --gid 1000 --uid 1000  --disabled-password
      --shell "/bin/bash" --gecos "" coreuser &&     echo "</**** adding coreuser
      user acount & group ****>"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - CmdLine:
    - /
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
