MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Key: MAKE_OPTS
    Name: arg
    Value: null
  - CmdLine:
    - "apt-get update && \tapt-get update && \tapt-get install -y make git gcc g++
      bison lhasa libgmp-dev libmpfr-dev libmpc-dev flex gettext texinfo wget rsync
      python zip software-properties-common && \tapt-key adv --keyserver keyserver.ubuntu.com
      --recv-keys 4AAD3A5DB5690522 && \tLC_ALL=C.UTF-8 add-apt-repository -y ppa:vriviere/ppa
      && \tapt-get update && \tcd && \tapt-get install -y cross-mint-essential &&
      \tgit clone https://github.com/bebbo/amiga-gcc && \tcd amiga-gcc && \tmake update
      && \tmake $MAKE_OPTS all && \tcd && \trm -rf amiga-gcc && \twget -O- http://www.exe2adf.com/downloads/exe2adf-v03e-linux.tar.gz
      | tar xvfz - && \tmv exe2adf-linux64bit /usr/local/bin/exe2adf && \trm exe2adf-linux32bit
      && \tgit clone https://github.com/keirf/Disk-Utilities.git && \tcd Disk-Utilities
      && \tPREFIX=/usr/local make $MAKE_OPTS && \tPREFIX=/usr/local make install &&
      \tcd && \trm -rf Disk-Utilities && \tapt-get purge -y gcc \t\t\t g++ \t\t\t
      lhasa \t\t\t libgmp-dev \t\t\t libmpfr-dev \t\t\t libmpc-dev \t\t\t flex \t\t\t
      gettext  \t\t\t texinfo \t\t\t wget \t\t\t rsync \t\t\t software-properties-common
      && \tapt-get -y autoremove && \tapt-get install -y python"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/amiga/bin:/usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /opt/amiga/lib:/usr/local/lib:$LD_LIBRARY_PATH_PATH
    Name: env
  - Env:
    - Key: MAKE_OPTS
      Value: '""'
    Name: env
  - Env:
    - Key: COMMIT
      Value: '""'
    Name: env
  - CmdLine:
    - git clone https://github.com/keirf/HxC_FF_File_Selector.git && cd HxC_FF_File_Selector
      && git checkout $COMMIT && make $MAKE_OPTS release && zip -r /output/HxC_Compat_Mode
      HxC_Compat_Mode && cd .. && rm -rf HxC_FF_File_Selector
    Name: cmd
    PrependShell: true
  - Name: volume
    Volumes:
    - /output
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
