MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Maintainer: Fluke667 <Fluke667@gmail.com>
    Name: maintainer
  - Key: TZ
    Name: arg
    Value: '''Europe/Berlin'''
  - Env:
    - Key: TZ
      Value: ${TZ}
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/lib/go
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: /go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p ${GOPATH}/src ${GOPATH}/bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - Env:
    - Key: SS_LIBEV_VERSION
      Value: v3.2.5
    Name: env
  - Env:
    - Key: KCP_VERSION
      Value: "20190424"
    Name: env
  - Env:
    - Key: SS_DOWNLOAD_URL
      Value: https://github.com/shadowsocks/shadowsocks-libev.git
    Name: env
  - Env:
    - Key: KCP_DOWNLOAD_URL
      Value: https://github.com/xtaci/kcptun/releases/download/v${KCP_VERSION}/kcptun-linux-amd64-${KCP_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: PLUGIN_OBFS_DOWNLOAD_URL
      Value: https://github.com/shadowsocks/simple-obfs.git
    Name: env
  - Env:
    - Key: PLUGIN_V2RAY_DOWNLOAD_URL
      Value: https://github.com/shadowsocks/v2ray-plugin/releases/download/v1.0/v2ray-plugin-linux-amd64-8cea1a3.tar.gz
    Name: env
  - Env:
    - Key: PLUGIN_CLOAK_DOWNLOAD_URL
      Value: https://github.com/cbeuw/cloak.git
    Name: env
  - Env:
    - Key: LINUX_HEADERS_DOWNLOAD_URL
      Value: http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/linux-headers-4.18.13-r1.apk
    Name: env
  - CmdLine:
    - "apk upgrade     && apk add bash tzdata rng-tools runit     && apk add --virtual
      .build-deps         autoconf         automake         build-base         curl
      \tnano \tgo \tmusl-dev \tgcc         c-ares-dev         libev-dev         libtool
      \        libsodium-dev         mbedtls-dev         pcre-dev         tar         git
      \tnodejs \tnpm     && curl -sSL ${LINUX_HEADERS_DOWNLOAD_URL} > /linux-headers-4.18.13-r1.apk
      \    && apk add --virtual .build-deps-kernel /linux-headers-4.18.13-r1.apk     &&
      git clone ${SS_DOWNLOAD_URL}     && (cd shadowsocks-libev     && git checkout
      tags/${SS_LIBEV_VERSION} -b ${SS_LIBEV_VERSION}     && git submodule update
      --init --recursive     && ./autogen.sh     && ./configure --prefix=/usr --disable-documentation
      \    && make install)     && git clone ${PLUGIN_OBFS_DOWNLOAD_URL}     && (cd
      simple-obfs     && git submodule update --init --recursive     && ./autogen.sh
      \    && ./configure --disable-documentation     && make install)     && curl
      -o v2ray_plugin.tar.gz -sSL ${PLUGIN_V2RAY_DOWNLOAD_URL}     && tar -zxf v2ray_plugin.tar.gz
      \    && mv v2ray-plugin_linux_amd64 /usr/bin/v2ray-plugin     && curl -sSLO
      ${KCP_DOWNLOAD_URL}     && tar -zxf kcptun-linux-amd64-${KCP_VERSION}.tar.gz
      \    && mv server_linux_amd64 /usr/bin/kcpserver     && mv client_linux_amd64
      /usr/bin/kcpclient     && go get go.etcd.io/bbolt/...     && go get github.com/juju/ratelimit
      \    && go get golang.org/x/crypto/curve25519     && git clone ${PLUGIN_CLOAK_DOWNLOAD_URL}
      /etc/cloak     && cd /etc/cloak     && make server     && ln -sf /usr/share/zoneinfo/${TZ}
      /etc/localtime     && echo ${TZ} > /etc/timezone     && adduser -h /tmp -s /sbin/nologin
      -S -D -H shadowsocks     && adduser -h /tmp -s /sbin/nologin -S -D -H kcptun
      \    && apk del .build-deps .build-deps-kernel \t&& apk add --no-cache       $(scanelf
      --needed --nobanner /usr/bin/ss-* /usr/local/bin/obfs-*       | awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u)     && rm -rf /linux-headers-4.18.13-r1.apk
      \        kcptun-linux-amd64-${KCP_VERSION}.tar.gz         shadowsocks-libev
      \        simple-obfs         v2ray_plugin.tar.gz         /etc/service         /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 8388/tcp
    - 8388/udp
  - Name: shell
    Shell:
    - /bin/bash
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runit
    - /etc/service
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.sh
    - /config.sh
  - CmdLine:
    - ./config.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
