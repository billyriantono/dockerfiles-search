MetaArgs: null
Stages:
- As: node_modules
  BaseName: node:10.14.0-alpine
  Commands:
  - Name: workdir
    Path: /usr/src/plark-website
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - yarn.lock
    - ./
  - CmdLine:
    - yarn install &&     rm -rf package.json yarn.lock
    Name: run
    PrependShell: true
  From:
    Image: node:10.14.0-alpine
  Name: node_modules
  Platform: ""
  SourceCode: FROM node:10.14.0-alpine AS NODE_MODULES
- As: locales
  BaseName: node:10.14.0-alpine
  Commands:
  - Key: LOCO_READ_KEY
    Name: arg
    Value: null
  - Key: LOCO_WRITE_KEY
    Name: arg
    Value: null
  - Name: workdir
    Path: /usr/src/plark-website
  - Chown: ""
    From: NODE_MODULES
    Name: copy
    SourcesAndDest:
    - /usr/src/plark-website/node_modules
    - node_modules/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - gulpfile.js
    - pot-extractor.js
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plark-faq
    - plark-faq/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/locales.json
    - config/locales.json
  - CmdLine:
    - apk update && apk add --no-cache gettext &&     yarn locales:import &&     rm
      -rf     node_modules     src     config     build     package.json     gulpfile.js     pot-extractor.js
    Name: run
    PrependShell: true
  From:
    Image: node:10.14.0-alpine
  Name: locales
  Platform: ""
  SourceCode: FROM node:10.14.0-alpine AS LOCALES
- BaseName: node:10.14.0-alpine
  Commands:
  - Env:
    - Key: NODE_ENV
      Value: production
    - Key: HOST
      Value: localhost
    - Key: PORT
      Value: "80"
    - Key: SECURE
      Value: "true"
    - Key: GTM_KEY
      Value: '"GTM-K8BVBNG"'
    - Key: MAILCHIMP_API_KEY
      Value: "false"
    - Key: MAILCHIMP_LIST_ID
      Value: "false"
    - Key: TELEGRAM_BOT_TOKEN
      Value: "false"
    - Key: TELEGRAM_CHAT_ID
      Value: "false"
    - Key: LOG_PATH
      Value: '"/var/log/docker/plark-website"'
    Name: env
  - Name: workdir
    Path: /usr/src/plark-website
  - Chown: ""
    From: NODE_MODULES
    Name: copy
    SourcesAndDest:
    - /usr/src/plark-website/node_modules
    - node_modules/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources
    - resources/
  - Chown: ""
    From: LOCALES
    Name: copy
    SourcesAndDest:
    - /usr/src/plark-website/resources/locales
    - resources/locales/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker
    - docker/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - webpack
    - webpack/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - config/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - src/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plark-faq
    - plark-faq/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - gulpfile.js
    - pot-extractor.js
    - tsconfig.json
    - webpack.*.js
    - ./
  - CmdLine:
    - apk update &&     apk add --no-cache gettext dumb-init &&     yarn copy &&     yarn
      build &&     rm -rf     .cache-loader     resources     src     gulpfile.js     pot-extractor.js     tsconfig.json     webpack.*.js
    Name: run
    PrependShell: true
  - CmdLine:
    - envsubst < /usr/src/plark-website/docker/.env.template.yml > /usr/src/plark-website/.env.yml
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/bin/dumb-init
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/sh
    - -c
    - envsubst < /usr/src/plark-website/docker/.env.template.yml > /usr/src/plark-website/.env.yml
      && yarn start
    Name: cmd
    PrependShell: false
  From:
    Image: node:10.14.0-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.14.0-alpine
