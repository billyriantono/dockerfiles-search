{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "com.example.vendor",
              "Value": "\"pinoniq\""
            },
            {
              "Key": "version",
              "Value": "\"1.3\""
            }
          ],
          "Name": "label"
        },
        {
          "Maintainer": "Jeroen \"pinoniq\" Meeus",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf/local.ini",
            "/usr/local/etc/php/conf.d/local.ini"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/localtime \u0026\u0026 ln -s /usr/share/zoneinfo/Europe/Brussels /etc/localtime \u0026\u0026 \"date\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         unzip         mysql-client         unzip         git         libgmp-dev     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv mcrypt     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install pdo pdo_mysql     \u0026\u0026 docker-php-ext-install gmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug \u0026\u0026 docker-php-ext-enable xdebug \u0026\u0026 echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 echo \"xdebug.remote_connect_back=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 echo \"xdebug.remote_port=9001\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php composer-setup.php     \u0026\u0026 php -r \"unlink('composer-setup.php');\"     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"readfile('https://s3.amazonaws.com/files.drush.org/drush.phar');\" \u003e drush     \u0026\u0026 chmod +x drush     \u0026\u0026 mv drush /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony     \u0026\u0026 chmod a+x /usr/local/bin/symfony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias dev=\"php bin/console --env=dev\"' \u003e\u003e ~/.bashrc \u0026\u0026 echo 'alias prod=\"php bin/console --env=prod\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9001"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}