{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Maintainer": "matt lebrun \u003cmatt@lebrun.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026 apt-get install -y     wget     curl     build-essential     autoconf     libtool     software-properties-common     libpcre3     libpcre3-dev     libssl-dev     zlib1g     zlib1g-dev     libgeoip1     libgeoip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:maxmind/ppa     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y         libmaxminddb0         libmaxminddb-dev         mmdb-bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/GeoIP/ \u0026\u0026    wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz \u0026\u0026    gunzip GeoLiteCity.dat.gz \u0026\u0026    mv -f GeoLiteCity.dat /usr/share/GeoIP/ \u0026\u0026    wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz \u0026\u0026    gunzip GeoIP.dat.gz \u0026\u0026    mv -f GeoIP.dat /usr/share/GeoIP/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "nginx_version",
              "Value": "1.13.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl http://nginx.org/download/nginx-$nginx_version.tar.gz | tar xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/nginx-$nginx_version"
        },
        {
          "CmdLine": [
            "./configure     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_geoip_module     --with-threads     --with-stream     --with-stream_ssl_module     --with-mail     --with-mail_ssl_module     --with-file-aio     --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2'     --with-ld-opt='-Wl,-z,relro -Wl,--as-needed'     --with-ipv6     \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 mkdir -p /var/cache/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoclean     \u0026\u0026 apt-get autoremove     \u0026\u0026 apt-get purge     \u0026\u0026 rm -rfv /*.gz     \u0026\u0026 rm -rfv /tmp/*     \u0026\u0026 rm -rfv /var/tmp/*     \u0026\u0026 rm -rfv /nginx-$nginx_version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}