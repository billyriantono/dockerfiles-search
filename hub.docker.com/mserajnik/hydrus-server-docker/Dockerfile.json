{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.8-slim-buster",
      "SourceCode": "FROM python:3.8-slim-buster",
      "Platform": "",
      "From": {
        "Image": "python:3.8-slim-buster"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./hydrus",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./deb",
            "."
          ]
        },
        {
          "CmdLine": [
            "chmod +x     server.py     bin/swfrender_linux     bin/upnpc_linux \u0026\u0026   mkdir /data \u0026\u0026   apt-get update \u0026\u0026 apt-get install --no-install-recommends -y     build-essential     ffmpeg     gosu     multiarch-support     wget \u0026\u0026   dpkg -i libjpeg8_8d-2_amd64.deb \u0026\u0026   rm libjpeg8_8d-2_amd64.deb \u0026\u0026   pip install --upgrade pip \u0026\u0026   pip install virtualenv \u0026\u0026   virtualenv venv \u0026\u0026   . venv/bin/activate \u0026\u0026   pip install     beautifulsoup4~=4.8.2     chardet~=3.0.4     lz4~=3.0.2     numpy~=1.18.0     opencv-python-headless~=4.1.2.30     pillow~=6.2.1     psutil~=5.6.7     pylzma~=0.5.0     pyopenssl~=19.1.0     pyyaml~=5.2     requests~=2.22.0     send2trash~=1.5.0     service_identity~=18.1.0     twisted~=19.10.0 \u0026\u0026   rm -r ~/.cache \u0026\u0026   apt-get remove build-essential --purge -y \u0026\u0026   apt-get clean \u0026\u0026 apt-get autoremove --purge -y \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-start.sh",
            "/usr/local/bin/docker-start"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint \u0026\u0026   chmod +x /usr/local/bin/docker-start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "45870/tcp",
            "45871/tcp",
            "45872/tcp"
          ]
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Retries": 3,
            "Test": [
              "CMD-SHELL",
              "wget --quiet --tries=1 --no-check-certificate --spider     https://localhost:45870 || exit 1"
            ],
            "Timeout": 10000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "docker-start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}