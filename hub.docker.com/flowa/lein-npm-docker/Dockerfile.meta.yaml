MetaArgs: null
Stages:
- BaseName: node:8
  Commands:
  - CmdLine:
    - echo "deb [check-valid-until=no] http://cdn-fastly.deb.debian.org/debian jessie
      main" > /etc/apt/sources.list.d/jessie.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports
      main" > /etc/apt/sources.list.d/jessie-backports.list
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/deb http:\/\/deb.debian.org\/debian jessie-updates main/d' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -o Acquire::Check-Valid-Until=false update
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y -qq --no-install-recommends wget unzip
      python php5-mysql php5-cli php5-cgi openssh-client python-openssl && apt-get
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install  locales-all  -y    && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CLOUDSDK_PYTHON_SITEPACKAGES
      Value: "1"
    Name: env
  - CmdLine:
    - wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip &&
      unzip google-cloud-sdk.zip && rm google-cloud-sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - google-cloud-sdk/install.sh --usage-reporting=false --path-update=true --bash-completion=true
      --rc-path=/.bashrc --additional-components app-engine-java app-engine-python
      app kubectl alpha beta gcd-emulator pubsub-emulator cloud-datastore-emulator
      app-engine-go bigtable
    Name: run
    PrependShell: true
  - CmdLine:
    - google-cloud-sdk/bin/gcloud config set --installation component_manager/disable_update_check
      true
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i -- ''s/\"disable_updater\": false/\"disable_updater\": true/g'' /google-cloud-sdk/lib/googlecloudsdk/core/config.json'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: LEIN_VERSION
      Value: 2.9.1
    - Key: LEIN_INSTALL
      Value: /usr/local/bin/
    - Key: LEIN_SHA
      Value: a4c239b407576f94e2fef5bfa107f0d3f97d0b19c253b08860d9609df4ab8b29
    - Key: LEIN_GPG_KEY
      Value: 2B72BF956E23DE5E830D50F6002AF007D1A7CC18
    - Key: PATH
      Value: $PATH:$LEIN_INSTALL
    - Key: LEIN_ROOT
      Value: "1"
    - Key: CLOJURE_VER
      Value: 1.10.0.442
    - Key: CLOJURESCRIPT_VER
      Value: 1.10.520
    Name: env
  - CmdLine:
    - set -ex;   mkdir -p $LEIN_INSTALL;   wget -q https://github.com/technomancy/leiningen/archive/$LEIN_VERSION.tar.gz;   echo
      "$LEIN_SHA *$LEIN_VERSION.tar.gz" | sha256sum -c -;   mkdir ./leiningen;   tar
      -xzf $LEIN_VERSION.tar.gz  -C ./leiningen/ --strip-components=1;   mv leiningen/bin/lein-pkg
      $LEIN_INSTALL/lein;   rm -rf $LEIN_VERSION.tar.gz ./leiningen;   chmod 0755
      $LEIN_INSTALL/lein;   wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip;   wget
      -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip.asc;   gpg
      --batch --keyserver ipv4.pool.sks-keyservers.net --recv-key $LEIN_GPG_KEY;   gpg
      --verify leiningen-$LEIN_VERSION-standalone.zip.asc;   rm leiningen-$LEIN_VERSION-standalone.zip.asc;   mkdir
      -p /usr/share/java;   mv leiningen-$LEIN_VERSION-standalone.zip /usr/share/java/leiningen-$LEIN_VERSION-standalone.jar;   apt-get
      update;   apt-get -q -y install openjdk-8-jdk;   curl -s https://download.clojure.org/install/linux-install-$CLOJURE_VER.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;   echo "(defproject dummy \"\" :plugins [[lein-ancient \"0.6.15\"][lein-npm
      \"0.6.2\"][lein-cljsbuild \"1.1.7\"]] :dependencies [[org.clojure/clojure \"${CLOJURE_VER%.*}\"][org.clojure/clojurescript
      \"${CLOJURESCRIPT_VER}\"]])" > project.clj;   lein ancient upgrade :check-clojure;   lein
      do deps, npm install;   rm project.clj
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /google-cloud-sdk/bin/gcloud /bin/gcloud
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g firebase-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - 'npm install -g phantomjs-prebuilt --unsafe-perm #trigger'
    Name: run
    PrependShell: true
  From:
    Image: node:8
  Name: ""
  Platform: ""
  SourceCode: FROM node:8
