MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: HTTPD_PREFIX
      Value: /usr/local/apache2
    Name: env
  - Env:
    - Key: PATH
      Value: $HTTPD_PREFIX/bin:$PATH
    Name: env
  - CmdLine:
    - "mkdir -p \"$HTTPD_PREFIX\" \t&& chown www-data:www-data \"$HTTPD_PREFIX\""
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HTTPD_PREFIX
  - Env:
    - Key: HTTPD_VERSION
      Value: 2.2.32
    Name: env
  - Env:
    - Key: HTTPD_SHA1
      Value: 36dc7f2ac97627192dcff0a121408b897f91b121
    Name: env
  - Env:
    - Key: HTTPD_BZ2_URL
      Value: https://www.apache.org/dyn/closer.cgi?action=download&filename=httpd/httpd-$HTTPD_VERSION.tar.bz2
    Name: env
  - Env:
    - Key: HTTPD_ASC_URL
      Value: https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2.asc
    Name: env
  - CmdLine:
    - "set -x \t&& runDeps=' \t\tapr-dev \t\tapr-util-dev \t\tperl \t' \t&& apk add
      --no-cache --virtual .build-deps \t\t$runDeps \t\tca-certificates \t\tgcc \t\tgnupg
      \t\tlibc-dev \t\tmake \t\topenssl \t\topenssl-dev \t\tpcre-dev \t\ttar \t\t&&
      wget -O httpd.tar.bz2 \"$HTTPD_BZ2_URL\" \t&& echo \"$HTTPD_SHA1 *httpd.tar.bz2\"
      | sha1sum -c - \t&& wget -O httpd.tar.bz2.asc \"$HTTPD_ASC_URL\" \t&& export
      GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      B1B96F45DFBDCCF974019235193F180AB55D9977 \t&& gpg --batch --verify httpd.tar.bz2.asc
      httpd.tar.bz2 \t&& rm -r \"$GNUPGHOME\" httpd.tar.bz2.asc \t\t&& mkdir -p src
      \t&& tar -xvf httpd.tar.bz2 -C src --strip-components=1 \t&& rm httpd.tar.bz2
      \t&& cd src \t\t&& ./configure \t\t--prefix=\"$HTTPD_PREFIX\" \t\t--enable-mods-shared='all
      ssl ldap cache proxy authn_alias mem_cache file_cache authnz_ldap charset_lite
      dav_lock disk_cache' \t&& make -j \"$(getconf _NPROCESSORS_ONLN)\" \t&& make
      install \t\t&& cd .. \t&& rm -r src man manual \t\t&& sed -ri \t\t-e 's!^(\\s*CustomLog)\\s+\\S+!\\1
      /proc/self/fd/1!g' \t\t-e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'
      \t\t\"$HTTPD_PREFIX/conf/httpd.conf\" \t\t&& runDeps=\"$runDeps $( \t\tscanelf
      --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\",
      $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed
      \t\t\t| sort -u \t)\" \t&& apk add --virtual .httpd-rundeps $runDeps \t&& apk
      del .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - httpd-foreground
    - /usr/local/bin/
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - httpd-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
