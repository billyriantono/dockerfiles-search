MetaArgs: null
Stages:
- BaseName: datenarong/docker-debian-apache:2.4
  Commands:
  - Maintainer: Yamada Yoseigi (datenarong@gmail.com)
    Name: maintainer
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tgcc \t\tlibc-dev \t\tpkg-config \t\tre2c"
    Name: env
  - CmdLine:
    - "apt-get update &&     apt-get install -yq --allow-downgrades --no-install-recommends
      \t\t$PHPIZE_DEPS \t\tunzip"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_BUILD_DEPS
      Value: apache2-dev
    Name: env
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --with-apxs2
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.1.8
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"8943858738604acb33ecedb865d6c4051eeffe4e2d06f3a3c8f794daccaa2aab"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -xe; \tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\";
      \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone;
      \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\trm -rf \"$GNUPGHOME\";
      \tfi;"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - Env:
    - Key: buildDeps
      Value: "\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tfreetds-dev \t\tlibcurl4-openssl-dev
        \t\tlibaio-dev \t\tlibedit-dev \t\tlibfreetype6-dev \t\tlibicu-dev \t\tlibjpeg62-turbo-dev
        \t\tlibpcre3-dev \t\tlibpng-dev \t\tlibsqlite3-dev \t\tlibssh2-1-dev \t\tlibssl-dev
        \t\tlibxml2-dev \t\topenssl         unixodbc-dev \t\tzlib1g-dev \t\""
    Name: env
  - CmdLine:
    - "set -xe && \tapt-get update && \tapt-get install -y --no-install-recommends
      $buildDeps && \t\texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"
      \t\tLDFLAGS=\"$PHP_LDFLAGS\" && \tdocker-php-source extract && \tcd /usr/src/php
      && \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \tdebMultiarch=\"$(dpkg-architecture
      --query DEB_BUILD_MULTIARCH)\" && \tif [ ! -d /usr/include/curl ]; then \t\tln
      -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl; \tfi && \t./configure
      \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t\t\t\t--disable-cgi \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t--with-pcre-regex=/usr
      \t\t--with-libdir=\"lib/$debMultiarch\" \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS &&
      \tmake -j \"$(nproc)\" && \tmake install && \t{ find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; } && \tmake clean
      && \tcd / && \tdocker-php-source delete \t\t&& pecl update-channels \t&& rm
      -rf /tmp/pear ~/.pearrc"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - "pecl install apcu && \t\tpecl install apcu_bc-1.0.3 && \t\tdocker-php-ext-enable
      apcu --ini-name 10-docker-php-ext-apcu.ini && \t\tdocker-php-ext-enable apc
      --ini-name 20-docker-php-ext-apc.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install ftp
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install iconv
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install intl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mbstring
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && \t\tapt-get install -y libmcrypt-dev && \t\tapt-get update
      && \t\tdocker-php-ext-install mcrypt"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install mongodb && \t\tdocker-php-ext-enable mongodb"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mysqli
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && \t\tmkdir /home/phalcon && \t\tcd /home/phalcon && \t\tgit
      clone --depth=1 http://github.com/phalcon/cphalcon.git && \t\tcd cphalcon/build
      && \t\t./install && \t\techo 'extension=phalcon.so' > $PHP_INI_DIR/conf.d/phalcon.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pcntl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install redis && \t\tdocker-php-ext-enable redis"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install soap
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install sockets
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install ssh2-1 channel://pecl.php.net/ssh2-1.0 && \t\tdocker-php-ext-enable
      ssh2"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pecl install xdebug-beta && \tdocker-php-ext-enable xdebug"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install zip
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://phar.phpunit.de/phpunit.phar -O /usr/local/bin/phpunit && \tchmod
      +x /usr/local/bin/phpunit"
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.4.2
    Name: env
  - CmdLine:
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer --version=${COMPOSER_VERSION} && \tcomposer self-update"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -y clean && \trm -r /var/lib/apt/lists/* && \tapt-get purge -y --auto-remove
      -o APT::AutoRemove::RecommendsImportant=false $buildDeps"
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite vhost_alias headers ssl
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  From:
    Image: datenarong/docker-debian-apache:2.4
  Name: ""
  Platform: ""
  SourceCode: FROM datenarong/docker-debian-apache:2.4
