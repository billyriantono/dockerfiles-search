{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yodlr/nodejs",
      "SourceCode": "FROM yodlr/nodejs",
      "Platform": "",
      "From": {
        "Image": "yodlr/nodejs"
      },
      "Commands": [
        {
          "Maintainer": "Ross Kukulinski \u003cross@getyodlr.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/usr/local/go/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026     apt-get install -yqq wget ca-certificates build-essential git mercurial \u0026\u0026     wget --no-verbose https://storage.googleapis.com/golang/go1.3.3.src.tar.gz \u0026\u0026     tar -v -C /usr/local -xzf go1.3.3.src.tar.gz \u0026\u0026     cd /usr/local/go/src \u0026\u0026 ./all.bash --no-clean 2\u003e\u00261     cd /root \u0026\u0026     git clone https://github.com/coreos/fleet.git \u0026\u0026     cd fleet \u0026\u0026 ./build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 git clone https://github.com/coreos/fleet.git \u0026\u0026     cd fleet \u0026\u0026 git checkout v0.9.2 \u0026\u0026 ./build \u0026\u0026 cp /root/fleet/bin/fleetctl /usr/bin/fleetctl \u0026\u0026     rm -Rf /usr/local/go/src \u0026\u0026     rm -Rf /root/fleet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "package.json",
            "/src/"
          ]
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/src/"
          ]
        },
        {
          "CmdLine": [
            "bin/fleet-deploy"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}