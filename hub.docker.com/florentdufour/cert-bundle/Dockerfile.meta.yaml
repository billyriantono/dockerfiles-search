MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"florent.dufour@univ-lorraine.fr"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Pipeline for creating and issing blockchain certificates with the Blockcerts
        standard"'
    Name: label
  - CmdLine:
    - apt-get update -q   && apt-get upgrade -yq   && apt-get install -yq   locales   git   wget   vim   fish   bsdmainutils   build-essential   libtool   autotools-dev   automake   pkg-config   libssl-dev   libevent-dev   libboost-all-dev   libminiupnpc-dev   libzmq3-dev   uuid-dev   libcap-dev   libpcre3-dev   python3   python3-pip   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/config/config.fish
    - /root/.config/fish
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_TYPE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - git clone --verbose https://github.com/bitcoin/bitcoin.git bitcoin/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz && tar -xvf
      db-4.8.30.NC.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/db-4.8.30.NC/build_unix
  - CmdLine:
    - mkdir -p build
    Name: run
    PrependShell: true
  - CmdLine:
    - BDB_PREFIX=$(pwd)/build
    Name: run
    PrependShell: true
  - CmdLine:
    - ../dist/configure --disable-shared --enable-cxx --with-pic --prefix=$BDB_PREFIX
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/bitcoin
  - CmdLine:
    - git checkout tags/v0.18.1
    Name: run
    PrependShell: true
  - CmdLine:
    - ./autogen.sh   && ./configure CPPFLAGS="-I${BDB_PREFIX}/include/ -O2" LDFLAGS="-L${BDB_PREFIX}/lib/"
      --without-gui
    Name: run
    PrependShell: true
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - git clone --verbose https://github.com/blockchain-certificates/cert-tools.git
      cert-tools
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/cert-tools
  - CmdLine:
    - pip3 install .
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /cert-tools
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/cert-tools
    - /cert-tools
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - git clone --verbose https://github.com/blockchain-certificates/cert-issuer.git
      cert-issuer
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/cert-issuer
  - CmdLine:
    - pip3 install .
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/cert-issuer
    - /cert-issuer
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/*   && rm -rf /root/.cache    && rm -rf /var/cache/*   && rm -rf
      /var/lib/{apt,dpkg,cache,log}/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - fish
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
