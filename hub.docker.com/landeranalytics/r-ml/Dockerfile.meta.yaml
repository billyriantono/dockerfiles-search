MetaArgs: null
Stages:
- As: r-basics
  BaseName: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jared P. Lander <packages@jaredlander.com>"'
    Name: label
  - Key: R_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: R_DIST
      Value: xenial
    - Key: R_VERSION
      Value: ${R_VERSION:-3.5.1-1${R_DIST}}
    Name: env
  - CmdLine:
    - sh -c 'echo "deb http://cloud.r-project.org/bin/linux/ubuntu ${R_DIST}-cran35/"
      >> /etc/apt/sources.list'     && gpg --keyserver keyserver.ubuntu.com --recv-key
      E084DAB9     && gpg -a --export E084DAB9 | apt-key add -     && apt-get update     &&
      apt-get upgrade -y -q     && apt-get install -y --no-install-recommends     libxml2-dev     libxt-dev     libssl-dev     libcurl4-openssl-dev     imagemagick     tzdata     locales     &&
      locale-gen en_US.UTF-8     && ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime     &&
      dpkg-reconfigure --frontend noninteractive tzdata     && unset -v DEBIAN_FRONTEND     &&
      apt-get update     && apt-get upgrade -y -q     && apt-get install -y --no-install-recommends     r-base=3.5.1-1${R_DIST}     r-base-dev=3.5.1-1${R_DIST}
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - R
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Name: r-basics
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04 as r-basics
- As: r-tidyverse
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages('tidyverse')"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-tidyverse
  Platform: ""
  SourceCode: FROM r-basics as r-tidyverse
- As: r-stan
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages('rstanarm', repos = 'https://cloud.r-project.org/', dependencies=TRUE)"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-stan
  Platform: ""
  SourceCode: FROM r-basics as r-stan
- As: r-tensorflow
  BaseName: r-basics
  Commands:
  - CmdLine:
    - apt-get update     && apt-get upgrade -y -q     && apt-get install -y --no-install-recommends     python3-dev     python3-pip     &&
      pip3 install --upgrade pip     && hash -r     && pip3 install --upgrade setuptools     &&
      pip3 install --upgrade tensorflow-gpu keras     && R -e "install.packages(c('tensorflow',
      'keras'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-tensorflow
  Platform: ""
  SourceCode: FROM r-basics as r-tensorflow
- As: r-tidymodels
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages('tidymodels')"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-tidymodels
  Platform: ""
  SourceCode: FROM r-basics as r-tidymodels
- As: r-timeseries
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages(c('forecast', 'prophet', 'xts', 'tsibble', 'dygraphs',
      'prophet', 'fable', 'hts', 'thief'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-timeseries
  Platform: ""
  SourceCode: FROM r-basics as r-timeseries
- As: r-xgboost
  BaseName: r-basics
  Commands:
  - CmdLine:
    - apt-get update     && apt-get upgrade -y -q     && apt-get install -y --no-install-recommends     git     wget     &&
      R -e "install.packages(c('DiagrammeR'))"     && wget -O makebuilder.sh https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.sh     &&
      sh ./makebuilder.sh --skip-license --prefix=/usr/local/     && git clone --recursive
      https://github.com/dmlc/xgboost     && mkdir xgboost/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: xgboost/build
  - CmdLine:
    - cmake .. -DUSE_CUDA=ON -DR_LIB=ON     && make install -j
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-xgboost
  Platform: ""
  SourceCode: FROM r-basics as r-xgboost
- As: r-catboost
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages('devtools')" -e "devtools::install_url('https://github.com/catboost/catboost/releases/download/v0.10.3/catboost-R-Linux-0.10.3.tgz',
      args = c('--no-multiarch'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-catboost
  Platform: ""
  SourceCode: FROM r-basics as r-catboost
- As: r-glmnet
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages('glmnet')"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-glmnet
  Platform: ""
  SourceCode: FROM r-basics as r-glmnet
- As: r-network
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages(c('igraph', 'threejs'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-network
  Platform: ""
  SourceCode: FROM r-basics as r-network
- As: r-tidytext
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages(c('tidytext'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-tidytext
  Platform: ""
  SourceCode: FROM r-basics as r-tidytext
- As: r-optim
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages(c('ROI', 'ROI.plugin.glpk', 'ompr', 'ompr.roi', 'quadprog',
      'optimization'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-optim
  Platform: ""
  SourceCode: FROM r-basics as r-optim
- As: r-extras
  BaseName: r-basics
  Commands:
  - CmdLine:
    - R -e "install.packages(c('coefplot', 'dygraphs', 'here', 'threejs', 'leaflet',
      'leaflet.extras', 'flexdashboard', 'crosstalk', 'DT'))"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: r-basics
  Name: r-extras
  Platform: ""
  SourceCode: FROM r-basics as r-extras
- As: r-full
  BaseName: r-tensorflow
  Commands:
  - Chown: ""
    From: r-tidyverse
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-stan
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-tidymodels
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-timeseries
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-xgboost
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-catboost
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-glmnet
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-tidytext
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-network
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-optim
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  - Chown: ""
    From: r-extras
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/R/site-library/
    - /usr/local/lib/R/site-library/
  From:
    Stage:
      Index: 3
      Named: r-tensorflow
  Name: r-full
  Platform: ""
  SourceCode: FROM r-tensorflow as r-full
- As: r-ml
  BaseName: r-full
  Commands:
  - Key: RSTUDIO_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: PATH
      Value: /usr/lib/rstudio-server/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends     file     git     libapparmor1     libcurl4-openssl-dev     libedit2     libssl-dev     lsb-release     psmisc     python-setuptools     sudo     wget     &&
      wget -O libssl1.0.0.deb http://ftp.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb     &&
      dpkg -i libssl1.0.0.deb     && rm libssl1.0.0.deb    && RSTUDIO_LATEST=$(wget
      --no-check-certificate -qO- https://s3.amazonaws.com/rstudio-server/current.ver)     &&
      [ -z "$RSTUDIO_VERSION" ] && RSTUDIO_VERSION=$RSTUDIO_LATEST || true     &&
      wget -q http://download2.rstudio.org/rstudio-server-${RSTUDIO_VERSION}-amd64.deb     &&
      dpkg -i rstudio-server-${RSTUDIO_VERSION}-amd64.deb     && rm rstudio-server-*-amd64.deb     &&
      ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin     && ln -s
      /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin     && git
      clone https://github.com/jgm/pandoc-templates     && mkdir -p /opt/pandoc/templates     &&
      cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates*     &&
      mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/     && mkdir -p /etc/R     &&
      echo '\n    \n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST     \n#
      is not set since a redirect to localhost may not work depending upon     \n#
      where this Docker container is running.     \nif(is.na(Sys.getenv("HTTR_LOCALHOST",
      unset=NA))) {     \n  options(httr_oob_default = TRUE)     \n}' >> /usr/lib/R/etc/Rprofile.site     &&
      echo "PATH=${PATH}" >> /usr/lib/R/etc/Renviron     && useradd rstudio     &&
      echo "rstudio:rstudio" | chpasswd     && mkdir /home/rstudio     && chown rstudio:rstudio
      /home/rstudio     && addgroup rstudio staff     && echo 'rsession-which-r=/usr/bin/R'
      >> /etc/rstudio/rserver.conf     && echo 'lock-type=advisory' >> /etc/rstudio/file-locks     &&
      git config --system credential.helper 'cache --timeout=3600'     && git config
      --system push.default simple     && wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz     &&
      tar xzf /tmp/s6-overlay-amd64.tar.gz -C /     && mkdir -p /etc/services.d/rstudio     &&
      echo '#!/usr/bin/with-contenv bash     \n exec /usr/lib/rstudio-server/bin/rserver
      --server-daemonize 0'     > /etc/services.d/rstudio/run     && echo '#!/bin/bash     \n
      rstudio-server stop'     > /etc/services.d/rstudio/finish
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - userconf.sh
    - /etc/cont-init.d/userconf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - add_shiny.sh
    - /etc/cont-init.d/add
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pam-helper.sh
    - /usr/lib/rstudio-server/bin/pam-helper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - user-settings
    - /home/rstudio/.rstudio/monitored/user-settings/
  - CmdLine:
    - chown -R rstudio:rstudio /home/rstudio/.rstudio
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8787"
  - CmdLine:
    - /init
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 13
      Named: r-full
  Name: r-ml
  Platform: ""
  SourceCode: FROM r-full as r-ml
