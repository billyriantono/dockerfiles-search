MetaArgs: null
Stages:
- As: build-img
  BaseName: node:lts
  Commands:
  - Env:
    - Key: APPDIR
      Value: /code
    Name: env
  - CmdLine:
    - mkdir -p ${APPDIR}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APPDIR}
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${APPDIR}
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g typescript
    Name: run
    PrependShell: true
  - CmdLine:
    - tsc; exit 0
    Name: run
    PrependShell: true
  From:
    Image: node:lts
  Name: build-img
  Platform: ""
  SourceCode: FROM node:lts as build-img
- BaseName: node:lts-alpine
  Commands:
  - Env:
    - Key: APPDIR
      Value: /code
    Name: env
  - Key: NODE_ENV
    Name: arg
    Value: null
  - Env:
    - Key: NODE_ENV
      Value: ${NODE_ENV:-production}
    Name: env
  - CmdLine:
    - rm -rf docker
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APPDIR}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APPDIR}
  - Chown: ""
    From: build-img
    Name: copy
    SourcesAndDest:
    - ${APPDIR}
    - ${APPDIR}
  - CmdLine:
    - rm -rf ${APPDIR}/components
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ${APPDIR}/interfaces
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --production
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Health:
      Interval: 5000000000
      Retries: 3
      Test:
      - CMD-SHELL
      - curl -f http://localhost:8000 || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: node:lts-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:lts-alpine
