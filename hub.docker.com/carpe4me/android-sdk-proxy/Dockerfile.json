{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "KIM WANSEOK \"carpe4me@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "sed -i 's/archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Seoul"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"ko_KR.UTF-8 UTF-8\" \u003e /etc/locale.gen     \u0026\u0026 echo \"LANG=ko_KR.UTF-8\" \u003e /etc/default/locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386     \u0026\u0026 apt-get update -y     \u0026\u0026 apt-get install -y --no-install-recommends         libncurses5:i386 libc6:i386 libstdc++6:i386 zlib1g:i386 lib32z1 lib32ncurses5 lib32stdc++6 lib32gcc1         git wget zip unzip vim sudo curl gnupg2 openssh-server         openjdk-8-jdk         qt5-default         locales language-pack-ko fonts-nanum fonts-nanum-coding         uim uim-byeoru im-config         gdebi-core     \u0026\u0026 apt-get -y autoremove     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get -y autoclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "proxy.crt",
            "/root"
          ]
        },
        {
          "CmdLine": [
            "cp /root/proxy.crt /usr/local/share/ca-certificates/ \u0026\u0026 \tupdate-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PROXY",
          "Name": "arg",
          "Value": "168.219.61.252"
        },
        {
          "Key": "PROXY_PORT",
          "Name": "arg",
          "Value": "8080"
        },
        {
          "Key": "NOPROXY",
          "Name": "arg",
          "Value": "localhost,127.0.0.1,sec.samsung.net,165.213.180.100"
        },
        {
          "CmdLine": [
            "echo 'http_proxy=\"http://'\"$PROXY:$PROXY_PORT\"'\"' \u003e\u003e /etc/environment \u0026\u0026     echo 'https_proxy=\"http://'\"$PROXY:$PROXY_PORT\"'\"' \u003e\u003e /etc/environment \u0026\u0026     echo 'ftp_proxy=\"ftp://'\"$PROXY:$PROXY_PORT\"'\"' \u003e\u003e /etc/environment \u0026\u0026     echo 'socks_proxy=\"socks://'\"$PROXY:$PROXY_PORT\"'\"' \u003e\u003e /etc/environment \u0026\u0026    echo 'no_proxy=\"'\"$NOPROXY\"'\"' \u003e\u003e /etc/environment \u0026\u0026    echo 'fs.inotify.max_user_watches = 524288' \u003e\u003e /etc/sysctl.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://github.com/naver/d2codingfont/releases/download/VER1.3.2/D2Coding-Ver1.3.2-20180524.zip \u0026\u0026     mkdir -p /usr/share/fonts/truetype/D2Coding \u0026\u0026     unzip D2Coding-*.zip -d /usr/share/fonts/truetype/D2Coding \u0026\u0026     wget -q http://ftp.gnome.org/pub/GNOME/sources/ttf-bitstream-vera/1.10/ttf-bitstream-vera-1.10.zip \u0026\u0026    mkdir -p /usr/share/fonts/truetype/ttf-bitstream-vera \u0026\u0026     unzip ttf-bitstream-vera*.zip -d /usr/share/fonts/truetype/ttf-bitstream-vera \u0026\u0026    fc-cache -f -v \u0026\u0026    rm -f /tmp/D2Coding-Ver*.zip \u0026\u0026    rm -f /tmp/ttf-bitstream-vera-*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "user",
              "Value": "developer"
            },
            {
              "Key": "group",
              "Value": "developer"
            },
            {
              "Key": "uid",
              "Value": "1000"
            },
            {
              "Key": "gid",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -u ${uid} ${user} \u0026\u0026     echo \"${user} ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026    chown -R ${user}:${group} /home/${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME_DIR",
              "Value": "/home/${user}"
            },
            {
              "Key": "TOOL_DIR",
              "Value": "/opt"
            },
            {
              "Key": "BUILD_CFG",
              "Value": "/home/${user}/buildcfg"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chown -R ${user}:${group} $TOOL_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${TOOL_DIR}"
        },
        {
          "Name": "user",
          "User": "${user}"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "$TOOL_DIR/gradle/gradle-$GRADLE_VERSION"
            },
            {
              "Key": "GRADLE_USER_HOME",
              "Value": "${BUILD_CFG}/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${GRADLE_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \u0026\u0026     unzip gradle*.zip -d $TOOL_DIR/gradle \u0026\u0026     mkdir -p $GRADLE_USER_HOME \u0026\u0026     rm gradle*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "1000:1000",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gradle.properties",
            "init.gradle",
            "$GRADLE_USER_HOME/"
          ]
        },
        {
          "Env": [
            {
              "Key": "KOTLIN_VERSION",
              "Value": "1.2.50"
            },
            {
              "Key": "KOTLIN_HOME",
              "Value": "$TOOL_DIR/kotlinc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${KOTLIN_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip \u0026\u0026     unzip *kotlin*.zip -d $TOOL_DIR/ \u0026\u0026     rm kotlin-compiler-*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_VERSION",
              "Value": "4333796"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "$TOOL_DIR/android-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip \u0026\u0026     mkdir -p $ANDROID_HOME \u0026\u0026    unzip *tools*linux*.zip -d $ANDROID_HOME \u0026\u0026     chmod -R a+w ${ANDROID_HOME} \u0026\u0026     rm *tools*linux*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5037"
          ]
        },
        {
          "Env": [
            {
              "Key": "SDK_PROXY",
              "Value": "\"--no_https --proxy=http --proxy_host=${PROXY} --proxy_port=${PROXY_PORT}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ~/.android \u0026\u0026     echo '### User Sources for Android SDK Manager' \u003e ~/.android/repositories.cfg \u0026\u0026     sdkmanager --update \u0026\u0026 yes | sdkmanager --licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager   \"tools\"   \"platform-tools\"   \"emulator\"   \"extras;android;m2repository\"   \"extras;google;m2repository\"   \"extras;google;google_play_services\"   \"build-tools;26.0.1\"   \"build-tools;27.0.3\"   \"build-tools;28.0.0\"   \"build-tools;28.0.3\"   \"sources;android-28\"   \"platforms;android-28\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bashrc",
            "gitconfig",
            "${BUILD_CFG}/"
          ]
        },
        {
          "CmdLine": [
            "cat ${BUILD_CFG}/bashrc \u003e\u003e ${HOME_DIR}/.bashrc \u0026\u0026     mv ${BUILD_CFG}/gitconfig ${HOME_DIR}/.gitconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${HOME_DIR}"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}