MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: KIM WANSEOK "carpe4me@gmail.com"
    Name: label
  - CmdLine:
    - sed -i 's/archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: Asia/Seoul
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386     && apt-get update -y     && apt-get install
      -y --no-install-recommends         libncurses5:i386 libc6:i386 libstdc++6:i386
      zlib1g:i386 lib32z1 lib32ncurses5 lib32stdc++6 lib32gcc1         git wget zip
      unzip vim sudo curl gnupg2 openssh-server         openjdk-8-jdk         qt5-default         locales
      language-pack-ko fonts-nanum fonts-nanum-coding         uim im-config         gdebi-core     &&
      apt-get -y autoremove     && apt-get clean     && apt-get -y autoclean
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - proxy.crt
    - /root
  - CmdLine:
    - "cp /root/proxy.crt /usr/local/share/ca-certificates/ && \tupdate-ca-certificates"
    Name: run
    PrependShell: true
  - Key: PROXY
    Name: arg
    Value: 168.219.61.252
  - Key: PROXY_PORT
    Name: arg
    Value: "8080"
  - Key: NOPROXY
    Name: arg
    Value: localhost,127.0.0.1,sec.samsung.net,165.213.180.100
  - CmdLine:
    - echo 'http_proxy="http://'"$PROXY:$PROXY_PORT"'"' >> /etc/environment &&     echo
      'https_proxy="http://'"$PROXY:$PROXY_PORT"'"' >> /etc/environment &&     echo
      'ftp_proxy="ftp://'"$PROXY:$PROXY_PORT"'"' >> /etc/environment &&     echo 'socks_proxy="socks://'"$PROXY:$PROXY_PORT"'"'
      >> /etc/environment &&    echo 'no_proxy="'"$NOPROXY"'"' >> /etc/environment
      &&    echo 'fs.inotify.max_user_watches = 524288' >> /etc/sysctl.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/naver/d2codingfont/releases/download/VER1.3.2/D2Coding-Ver1.3.2-20180524.zip
      &&     mkdir -p /usr/share/fonts/truetype/D2Coding &&     unzip -qq D2Coding-*.zip
      -d /usr/share/fonts/truetype/D2Coding &&     wget -q http://ftp.gnome.org/pub/GNOME/sources/ttf-bitstream-vera/1.10/ttf-bitstream-vera-1.10.zip
      &&    mkdir -p /usr/share/fonts/truetype/ttf-bitstream-vera &&     unzip -qq
      ttf-bitstream-vera*.zip -d /usr/share/fonts/truetype/ttf-bitstream-vera &&    fc-cache
      -f -v &&    rm -f /tmp/D2Coding-Ver*.zip &&    rm -f /tmp/ttf-bitstream-vera-*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: user
      Value: developer
    - Key: group
      Value: developer
    - Key: uid
      Value: "1000"
    - Key: gid
      Value: "1000"
    Name: env
  - CmdLine:
    - 'useradd -m -u ${uid} ${user} &&     echo "${user} ALL=(ALL) NOPASSWD: ALL"
      >> /etc/sudoers &&    chown -R ${user}:${group} /home/${user}'
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME_DIR
      Value: /home/${user}
    - Key: TOOL_DIR
      Value: /opt
    - Key: BUILD_CFG
      Value: /home/${user}/buildcfg
    Name: env
  - CmdLine:
    - chown -R ${user}:${group} $TOOL_DIR
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${TOOL_DIR}
  - Name: user
    User: ${user}
  - Env:
    - Key: GRADLE_VERSION
      Value: 4.5.1
    Name: env
  - Env:
    - Key: GRADLE_HOME
      Value: $TOOL_DIR/gradle/gradle-$GRADLE_VERSION
    - Key: GRADLE_USER_HOME
      Value: ${BUILD_CFG}/gradle
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GRADLE_HOME}/bin
    Name: env
  - CmdLine:
    - wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
      &&     unzip -qq gradle*.zip -d $TOOL_DIR/gradle &&     mkdir -p $GRADLE_USER_HOME
      &&     rm gradle*.zip
    Name: run
    PrependShell: true
  - Chown: 1000:1000
    From: ""
    Name: copy
    SourcesAndDest:
    - gradle.properties
    - init.gradle
    - $GRADLE_USER_HOME/
  - Env:
    - Key: KOTLIN_VERSION
      Value: 1.2.50
    - Key: KOTLIN_HOME
      Value: $TOOL_DIR/kotlinc
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${KOTLIN_HOME}/bin
    Name: env
  - CmdLine:
    - wget -q https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip
      &&     unzip -qq *kotlin*.zip -d $TOOL_DIR/ &&     rm kotlin-compiler-*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_SDK_VERSION
      Value: "4333796"
    - Key: ANDROID_HOME
      Value: $TOOL_DIR/android-sdk
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin
    Name: env
  - CmdLine:
    - wget -q https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip
      &&     mkdir -p $ANDROID_HOME &&    unzip -qq *tools*linux*.zip -d $ANDROID_HOME
      &&     chmod -R a+w ${ANDROID_HOME} &&     rm *tools*linux*.zip
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5037"
  - Env:
    - Key: SDK_PROXY
      Value: '"--no_https --proxy=http --proxy_host=${PROXY} --proxy_port=${PROXY_PORT}"'
    Name: env
  - CmdLine:
    - mkdir ~/.android &&     echo '### User Sources for Android SDK Manager' > ~/.android/repositories.cfg
      &&     sdkmanager --update && yes | sdkmanager --licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager   "tools"   "platform-tools"   "emulator"   "extras;android;m2repository"   "extras;google;m2repository"   "extras;google;google_play_services"   "build-tools;26.0.1"   "build-tools;27.0.3"   "build-tools;28.0.0"   "build-tools;28.0.3"   "sources;android-28"   "platforms;android-28"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://dl.google.com/dl/android/studio/ide-zips/3.1.4.0/android-studio-ide-173.4907809-linux.zip
      &&     unzip android-studio-ide-*.zip -d $TOOL_DIR &&     rm android-studio-ide-*.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_STUDIO
      Value: $TOOL_DIR/android-studio
    - Key: ANDROID_STUDIO_CFG
      Value: ${BUILD_CFG}/AndroidStudio3.1
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_STUDIO}/bin
    Name: env
  - CmdLine:
    - sed -i 's/-Xmx1280m/-Xmx8192m/g' ${ANDROID_STUDIO}/bin/studio64.vmoptions
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bashrc
    - gitconfig
    - ${BUILD_CFG}/
  - CmdLine:
    - cat ${BUILD_CFG}/bashrc >> ${HOME_DIR}/.bashrc &&     mv ${BUILD_CFG}/gitconfig
      ${HOME_DIR}/.gitconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${HOME_DIR}
  - CmdLine:
    - ${ANDROID_STUDIO}/bin/studio.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
