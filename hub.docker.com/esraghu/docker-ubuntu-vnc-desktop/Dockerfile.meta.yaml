MetaArgs: null
Stages:
- As: system
  BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy     apt-transport-https     ca-certificates     curl     lxc     iptables
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.docker.com/ | sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./wrapdocker
    - /usr/local/bin/wrapdocker
  - CmdLine:
    - chmod +x /usr/local/bin/wrapdocker
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Key: localbuild
    Name: arg
    Value: null
  - CmdLine:
    - if [ "x$localbuild" != "x" ]; then sed -i 's#http://archive.ubuntu.com/#http://tw.archive.ubuntu.com/#'
      /etc/apt/sources.list; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends software-properties-common
      curl apache2-utils     && add-apt-repository ppa:fcwu-tw/apps     && apt-get
      update     && apt-get install -y --no-install-recommends --allow-unauthenticated         supervisor
      nginx sudo vim-tiny net-tools zenity xz-utils         dbus-x11 x11-utils alsa-utils         mesa-utils
      libgl1-mesa-dri         lxde x11vnc xvfb         gtk2-engines-murrine gnome-themes-standard
      gtk2-engines-pixbuf gtk2-engines-murrine arc-theme         firefox chromium-browser         ttf-ubuntu-font-family
      ttf-wqy-zenhei     && add-apt-repository -r ppa:fcwu-tw/apps     && apt-get
      autoclean     && apt-get autoremove     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: TINI_VERSION
    Name: arg
    Value: v0.9.0
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /bin/tini
  - CmdLine:
    - chmod +x /bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/ffmpeg     && curl -sSL https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz
      | tar xJvf - -C /usr/local/ffmpeg/ --strip 1
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - image/usr/local/lib/web/backend/requirements.txt
    - /tmp/
  - CmdLine:
    - "apt-get update     && dpkg-query -W -f='${Package}\\n' > /tmp/a.txt     &&
      apt-get install -y python-pip python-dev build-essential \t&& pip install setuptools
      wheel && pip install -r /tmp/requirements.txt     && dpkg-query -W -f='${Package}\\n'
      > /tmp/b.txt     && apt-get remove -y `diff --changed-group-format='%>' --unchanged-group-format=''
      /tmp/a.txt /tmp/b.txt | xargs`     && apt-get autoclean -y     && apt-get autoremove
      -y     && rm -rf /var/lib/apt/lists/*     && rm -rf /var/cache/apt/* /tmp/a.txt
      /tmp/b.txt"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: system
  Platform: ""
  SourceCode: FROM ubuntu:16.04 as system
- As: builder
  BaseName: ubuntu:16.04
  Commands:
  - Key: localbuild
    Name: arg
    Value: null
  - CmdLine:
    - if [ "x$localbuild" != "x" ]; then sed -i 's#http://archive.ubuntu.com/#http://tw.archive.ubuntu.com/#'
      /etc/apt/sources.list; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends curl ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_9.x | bash -     && apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     && echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get update     && apt-get install -y yarn
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - web
    - /src/web
  - CmdLine:
    - cd /src/web     && yarn     && npm run build
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: builder
  Platform: ""
  SourceCode: FROM ubuntu:16.04 as builder
- BaseName: system
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"fcwu.tw@gmail.com"'
    Name: label
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /src/web/dist/
    - /usr/local/lib/web/frontend/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - image
    - /
  - Name: expose
    Ports:
    - "80"
  - Name: workdir
    Path: /root
  - Env:
    - Key: HOME
      Value: /home/ubuntu
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - /startup.sh
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: system
  Name: ""
  Platform: ""
  SourceCode: FROM system
