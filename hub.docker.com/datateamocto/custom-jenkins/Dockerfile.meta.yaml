MetaArgs: null
Stages:
- BaseName: debian:9
  Commands:
  - CmdLine:
    - useradd -u 1500 jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y wget gpg locales
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen &&   dpkg-reconfigure --frontend=noninteractive
      locales &&   update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TINI_VERSION
      Value: 0.14.0
    Name: env
  - Env:
    - Key: TINI_SHA
      Value: 6c41ec7d33e857d4779f14d9c74924cab0c7973485d2972419a3b7c7620ff5fd
    Name: env
  - CmdLine:
    - wget -q -O /bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64   &&
      chmod +x /bin/tini   && echo "$TINI_SHA  /bin/tini" | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://pkg.jenkins-ci.org/debian binary/' >| /etc/apt/sources.list.d/jenkins.list   &&
      wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -   &&
      apt-get update   && apt-get install -y --ignore-missing jenkins=2.129
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -d /var/lib/jenkins jenkins
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /
  - CmdLine:
    - apt-get install -y git curl sshpass ksh zip unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y maven
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list   &&
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823   &&
      apt-get update   && apt-get install -y bc sbt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y bzip2 binutils libc-dev   && wget -O /opt/anaconda-install.sh
      https://repo.continuum.io/archive/Anaconda2-4.4.0-Linux-x86_64.sh   && bash
      /opt/anaconda-install.sh -b -p /opt/anaconda   && bash -c '. /opt/anaconda/bin/activate
      && conda install -y gcc py-xgboost'   && rm -rf /opt/anaconda-install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python2.7 python-pip   && pip install ansible==2.3.2.0 virtualenv==15.1.0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2   libdbus-1-3
      libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0   libgtk-3-0
      libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1
      libxcb1   libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6
      libxrandr2 libxrender1   libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1
      libnss3 lsb-release xdg-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cqlsh==5.0.3   && sed -i 's/DEFAULT_PROTOCOL_VERSION = 4/DEFAULT_PROTOCOL_VERSION
      = 3/' /usr/local/bin/cqlsh
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.11.3
    Name: env
  - CmdLine:
    - mkdir $NVM_DIR     && curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c 'source $NVM_DIR/nvm.sh     && nvm install $NODE_VERSION     && nvm
      alias default $NODE_VERSION     && nvm use default'
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
    Name: env
  - CmdLine:
    - npm install -g bower gulp-cli @angular/cli newman newman-reporter-html && npm
      install gulp -D
    Name: run
    PrependShell: true
  - CmdLine:
    - https_proxy="${proxy}" http_proxy="${proxy}" apt-get install -y libltdl7   &&
      pip install docker-compose==1.21.2   && groupadd -g 169 docker   && usermod
      -a -G docker jenkins
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/jenkins
  - Name: expose
    Ports:
    - "8080"
  - Name: user
    User: jenkins
  - CmdLine:
    - /bin/tini
    - --
    - /start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:9
  Name: ""
  Platform: ""
  SourceCode: FROM debian:9
