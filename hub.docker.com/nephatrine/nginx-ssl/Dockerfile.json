{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nephatrine/base-alpine:latest",
      "SourceCode": "FROM nephatrine/base-alpine:latest",
      "Platform": "",
      "From": {
        "Image": "nephatrine/base-alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Daniel Wolf \u003cnephatrine@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"====== INSTALL PACKAGES ======\"  \u0026\u0026 apk --update upgrade  \u0026\u0026 apk add certbot geoip libgd libxslt pcre   \u0026\u0026 echo \"====== CONFIGURE SYSTEM ======\"  \u0026\u0026 mkdir -p /var/cache/nginx   \u0026\u0026 echo \"====== INSTALL BUILD TOOLS ======\"  \u0026\u0026 apk add --virtual .build-nginx build-base gd-dev geoip-dev git libatomic_ops-dev libressl-dev libxml2-dev libxslt-dev linux-headers pcre-dev py2-pip zlib-dev   \u0026\u0026 echo \"====== COMPILE NGINX ======\"  \u0026\u0026 cd /usr/src  \u0026\u0026 git clone https://github.com/nginx/nginx.git  \u0026\u0026 cd nginx  \u0026\u0026 ./auto/configure   --prefix=/var/www   --sbin-path=/usr/sbin/nginx   --modules-path=/usr/lib/nginx/modules   --conf-path=/etc/nginx/nginx.conf   --error-log-path=/var/log/nginx/error.log   --pid-path=/var/run/nginx.pid   --lock-path=/var/run/nginx.lock   --user=guardian   --group=users   --with-threads   --with-file-aio   --with-http_ssl_module   --with-http_v2_module   --with-http_realip_module   --with-http_addition_module   --with-http_xslt_module=dynamic   --with-http_image_filter_module=dynamic   --with-http_geoip_module=dynamic   --with-http_sub_module   --with-http_dav_module   --with-http_flv_module   --with-http_mp4_module   --with-http_gunzip_module   --with-http_gzip_static_module   --with-http_auth_request_module   --with-http_random_index_module   --with-http_secure_link_module   --with-http_degradation_module   --with-http_slice_module   --with-http_stub_status_module   --http-log-path=/var/log/nginx/access.log   --http-client-body-temp-path=/var/cache/nginx/client_body   --http-proxy-temp-path=/var/cache/nginx/proxy   --http-fastcgi-temp-path=/var/cache/nginx/fastcgi   --http-uwsgi-temp-path=/var/cache/nginx/uwsgi   --http-scgi-temp-path=/var/cache/nginx/scgi   --with-mail=dynamic   --with-mail_ssl_module   --with-stream=dynamic   --with-stream_ssl_module   --with-stream_realip_module   --with-stream_geoip_module=dynamic   --with-stream_ssl_preread_module   --with-compat   --with-pcre   --with-pcre-jit   --with-libatomic  \u0026\u0026 make -j4  \u0026\u0026 make install  \u0026\u0026 strip /usr/sbin/nginx  \u0026\u0026 strip /usr/lib/nginx/modules/*.so   \u0026\u0026 echo \"====== INSTALL ZOPE ======\"  \u0026\u0026 pip install zope.component   \u0026\u0026 echo \"====== CLEANUP ======\"  \u0026\u0026 cd /usr/src  \u0026\u0026 apk del --purge .build-nginx  \u0026\u0026 rm -rf /tmp/* /usr/src/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443/tcp",
            "80/tcp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "override",
            "/"
          ]
        }
      ]
    }
  ]
}