MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Key: R_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: SEURAT_VERSION
    Name: arg
    Value: 3.1.0
  - Env:
    - Key: BUILD_DATE
      Value: "2019-01-18"
    Name: env
  - Env:
    - Key: R_VERSION
      Value: ${R_VERSION:-3.5.1}
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends locales &&     echo
      "en_US.UTF-8 UTF-8" >> /etc/locale.gen &&     locale-gen en_US.UTF-8 &&     LC_ALL=en_US.UTF-8
      &&     LANG=en_US.UTF-8 &&     /usr/sbin/update-locale LANG=en_US.UTF-8 &&     TERM=xterm
      &&     apt-get install -y --no-install-recommends     bash-completion     ca-certificates     file     fonts-texgyre     g++     gfortran     gsfonts     libbz2-1.0     curl     libssl-dev     libcurl4-openssl-dev     libnss-sss
      libxml2-dev     python3-dev     python3-pip     libcurl3     libicu55     libjpeg-turbo8     libopenblas-dev     libpangocairo-1.0-0     libpcre3     libpng12-0     libtiff5     liblzma5     locales     zlib1g     libbz2-dev     libcairo2-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libmariadb-client-lgpl-dev     libmysqlclient-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     libhdf5-dev     perl     tcl8.5-dev     tk8.5-dev     texinfo     texlive-extra-utils     texlive-fonts-recommended     texlive-fonts-extra     texlive-latex-recommended     x11proto-core-dev     xauth     xfonts-base     xvfb
      ncurses-dev libssl-dev     zlib1g-dev &&     cd /tmp/ &&     curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz
      &&     tar -xf R-${R_VERSION}.tar.gz &&     cd R-${R_VERSION} &&     R_PAPERSIZE=letter
      &&     R_BATCHSAVE="--no-save --no-restore" &&     R_BROWSER=xdg-open &&     PAGER=/usr/bin/pager
      &&     PERL=/usr/bin/perl &&     R_UNZIPCMD=/usr/bin/unzip &&     R_ZIPCMD=/usr/bin/zip
      &&     R_PRINTCMD=/usr/bin/lpr &&     LIBnn=lib &&     AWK=/usr/bin/awk &&     CFLAGS="-g
      -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2
      -g" &&     CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security
      -Wdate-time -D_FORTIFY_SOURCE=2 -g" &&     ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas="-lopenblas"                --disable-nls                --without-recommended-packages
      &&     make &&     make install &&     echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'),
      download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site &&     mkdir
      -p /usr/local/lib/R/site-library &&     chown root:staff /usr/local/lib/R/site-library
      &&     chmod g+wx /usr/local/lib/R/site-library &&     echo "R_LIBS_USER='/usr/local/lib/R/site-library'"
      >> /usr/local/lib/R/etc/Renviron &&     echo "R_LIBS=\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}"
      >> /usr/local/lib/R/etc/Renviron &&     [ -z "$BUILD_DATE" ] && BUILD_DATE=$(TZ="America/Los_Angeles"
      date -I) || true &&     MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE}
      &&     echo MRAN=$MRAN >> /etc/environment &&     export MRAN=$MRAN &&     echo
      "options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site
      &&     Rscript -e "install.packages(c('littler', 'docopt'), repo = '$MRAN')"
      &&     ln -s /usr/local/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r
      &&     ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r &&     ln -s /usr/local/lib/R/site-library/littler/bin/r
      /usr/local/bin/r
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install.r
    - /tmp/
  - CmdLine:
    - R -f /tmp/install.r
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('devtools')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "devtools::install_github(repo='diazlab/CONICS/CONICSmat', dep =
      FALSE)"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install setuptools &&        pip3 install umap-learn
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / &&    rm -rf /tmp/* &&    apt-get autoremove -y &&    apt-get autoclean
      -y &&    rm -rf /var/lib/apt/lists/* &&    apt-get clean
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
