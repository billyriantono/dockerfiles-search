{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "brainbeanapps/base-linux-build-environment:v3.0",
      "SourceCode": "FROM brainbeanapps/base-linux-build-environment:v3.0",
      "Platform": "",
      "From": {
        "Image": "brainbeanapps/base-linux-build-environment:v3.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"devops@brainbeanapps.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "versions.list",
            "."
          ]
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends     zlib1g-dev     libssl-dev     libreadline-dev     libyaml-dev     libsqlite3-dev     sqlite3     libxml2-dev     libxslt1-dev     libcurl4-openssl-dev     software-properties-common     libffi-dev   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash -   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends nodejs   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 npm install -g npm@latest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -   \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends yarn   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Name": "workdir",
          "Path": "/home/user"
        },
        {
          "Env": [
            {
              "Key": "RBENV_ROOT",
              "Value": "/home/user/.rbenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_BUILD_ROOT",
              "Value": "${RBENV_ROOT}/plugins/ruby-build"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${RBENV_ROOT}/shims:${RBENV_ROOT}/bin:${RUBY_BUILD_ROOT}/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/rbenv/rbenv.git --depth 1 $RBENV_ROOT   \u0026\u0026 git clone https://github.com/rbenv/ruby-build.git --depth 1 $RUBY_BUILD_ROOT   \u0026\u0026 ${RBENV_ROOT}/bin/rbenv init - \u003e /home/user/rbenv.sh   \u0026\u0026 chmod +x /home/user/rbenv.sh   \u0026\u0026 source /home/user/rbenv.sh   \u0026\u0026 echo 'source $HOME/rbenv.sh' \u003e /home/user/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CONFIGURE_OPTS",
          "Name": "arg",
          "Value": "--disable-install-doc"
        },
        {
          "CmdLine": [
            "xargs -L 1 rbenv install \u003c /opt/versions.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'gem: --no-rdoc --no-ri' \u003e\u003e /home/user/.gemrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -l -c 'for v in $(cat /opt/versions.list); do rbenv global $v; gem install bundler; done'"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}