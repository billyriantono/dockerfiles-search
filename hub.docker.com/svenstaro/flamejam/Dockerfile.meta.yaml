MetaArgs: null
Stages:
- BaseName: alpine:3
  Commands:
  - Name: workdir
    Path: /app
  - Env:
    - Key: CONFIG_TYPE
      Value: production
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pyproject.toml
    - /app/
  - CmdLine:
    - apk add --no-cache curl build-base python3-dev git libffi-dev postgresql-dev
      linux-headers libressl-dev &&     curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
      | python3 &&     ln -s /usr/bin/python3 /usr/bin/python &&     ln -s /root/.poetry/bin/poetry
      /usr/bin/poetry &&     poetry install &&     apk del build-base linux-headers
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - git clean -dfx
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: volume
    Volumes:
    - /etc/flamejam/flamejam.cfg
  - CmdLine:
    - poetry
    - run
    - uwsgi
    - uwsgi_prod.ini
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3
