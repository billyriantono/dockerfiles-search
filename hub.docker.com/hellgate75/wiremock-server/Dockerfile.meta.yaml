MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Fabrizio Torelli <hellgate75@gmail.com>
    Name: maintainer
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    - Key: WIREMOCK_HOME
      Value: /wiremock
    - Key: WM_VERSION
      Value: 2.7.1
    - Key: WM_DT_VERSION
      Value: 1.1.6
    - Key: WM_HTTP_CC_VERSION
      Value: 5.0-alpha2
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: WM_CONFIGURATION_SCRIPT_URL
      Value: ""
    - Key: WM_CERTIFICATE_TAR_GZ_URL
      Value: ""
    - Key: WM_MAPPINGS_TAR_GZ_URL
      Value: ""
    - Key: WM_STATIC_FILES_TAR_GZ_URL
      Value: ""
    - Key: WM_HTTP_PORT
      Value: "8080"
    - Key: WM_HTTPS_PORT
      Value: "443"
    - Key: WM_USE_SSL
      Value: "no"
    - Key: VM_VERBOSE
      Value: "yes"
    - Key: WM_BINDING_ADDRESS
      Value: '"0.0.0.0"'
    - Key: VM_EXTENSIONS
      Value: ""
    - Key: WM_HTTPS_KEYSTORE
      Value: ""
    - Key: WM_HTTPS_KS_PASSWORD
      Value: ""
    - Key: WM_HTTPS_TRUSTSTORE
      Value: ""
    - Key: WM_HTTPS_TS_PASSWORD
      Value: ""
    - Key: WM_FORCE_REQUIRE_CLIENT_CERT
      Value: "no"
    - Key: WM_RECORD_MAPPING
      Value: "no"
    - Key: VM_MATCH_HEADERS
      Value: "no"
    - Key: VM_PROXY_ALL
      Value: ""
    - Key: VM_PRESERVE_POST_HEADER
      Value: "no"
    - Key: VM_PROXY_VIA
      Value: ""
    - Key: WM_ENABLE_BROWSER_PROXY
      Value: "no"
    - Key: WM_DISABLE_REQUEST_JOURNAL
      Value: "no"
    - Key: WM_CONTAINER_THREADS
      Value: "10"
    - Key: WM_MAX_REQUESTS_JOURNAL_ENTRIES
      Value: ""
    - Key: WM_JETTY_REQUEST_THREADS
      Value: ""
    - Key: WM_JETTY_QUEUE_SIZE
      Value: ""
    - Key: WM_JETTY_HEADER_BUFFER_SIZE_KB
      Value: "8192"
    - Key: WM_PRINT_ALL_NETWORK_TRAFFIC
      Value: "no"
    - Key: WM_GLOBAL_RESPONSE_TEMPLATING
      Value: "no"
    - Key: WM_LOCAL_RESPONSE_TEMPLATING
      Value: "no"
    - Key: WIREMOCK_ZOOKEEPER_INTEGRATION_SCRIPT_URL
      Value: ""
    - Key: ZOOKEEPER_CLIENT_SERVICE
      Value: "no"
    - Key: ZOOKEEPER_SERVER_SERVICE
      Value: "no"
    - Key: ZOOKEEPER_SERVER_ADDRESS
      Value: '"localhost:2181"'
    - Key: WIREMOCK_SERVICE_PATH
      Value: ""
    - Key: WIREMOCK_ARTIFACT_URL_ENTRY
      Value: ""
    - Key: WIREMOCK_STATIC_URL_ENTRY
      Value: ""
    - Key: WIREMOCK_ZOOKEEPER_SSL_CERTS_URL_ENTRY
      Value: ""
    - Key: ZOOKEEPER_RELEASE
      Value: 3.5.3-beta
    - Key: ZOOKEEPER_HOME
      Value: /usr/lib/zookeeper
    - Key: ZOOKEEPER_PREFIX
      Value: /usr/lib/zookeeper
    - Key: ZOO_LOG_DIR
      Value: /usr/lib/zookeeper/logs
    - Key: ZOOKEEPER_DATA_FOLDER
      Value: /var/local/zookeeper
    - Key: ZOOKEEPER_LOGS_FOLDER
      Value: /var/local/zookeeper-logs
    - Key: ZOOKEEPER_SSL_FOLDER
      Value: /usr/local/zookeeper-ssl
    - Key: ZK_ADMIN_SERVER_ADDRESS
      Value: "8181"
    - Key: ZOOKEEPER_SERVER_CONFIG_URL_ENTRY
      Value: ""
    - Key: ZOOKEEPER_SERVER_CONFIG_SCRIPT_URL_ENTRY
      Value: ""
    - Key: ZOOKEEPER_SEEK_INTERVAL_MIN
      Value: "15"
    - Key: ZOOKEEPER_SEEK_INTERVAL_HOUR
      Value: ""
    - Key: ZOOKEEPER_SERVER_HOST
      Value: localhost
    - Key: ZOOKEEPER_SERVER_PORT
      Value: "2181"
    - Key: LOG_ON_ZOOKEEPER
      Value: "no"
    - Key: ZOOKEEPER_LOG_INTERVAL_MIN
      Value: "15"
    - Key: ZOOKEEPER_LOG_INTERVAL_HOUR
      Value: ""
    - Key: CURRENT_SERVER_PATH
      Value: ""
    - Key: CURRENT_SERVER_ID
      Value: ""
    - Key: PATH
      Value: $PATH:/usr/lib/zookeeper/bin
    Name: env
  - CmdLine:
    - apt-get update     && apt-get -y upgrade     && apt-get -y install apt-utils     &&
      apt-get -y install software-properties-common     && apt-get -y install wget
      curl htop git vim net-tools inetutils-tools inetutils-ping     && add-apt-repository
      -y -u ppa:webupd8team/java     && echo oracle-java8-installer shared/accepted-oracle-license-v1-1
      select true | /usr/bin/debconf-set-selections     && echo -e "\n" | apt-get
      -y install oracle-java8-installer oracle-java8-set-default     && apt-get -y
      autoremove     && apt-get -y clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /wiremock     && mkdir /wiremock/mappings     && mkdir /wiremock/__files     &&
      mkdir /wiremock/certificates
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /wiremock
  - CmdLine:
    - curl -sSL -o wiremock-standalone.jar http://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/$WM_VERSION/wiremock-standalone-$WM_VERSION.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL -o body-transformer.jar http://central.maven.org/maven2/com/opentable/wiremock-body-transformer/$WM_DT_VERSION/wiremock-body-transformer-$WM_DT_VERSION.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL -o httpcomponents-client.tar.gz https://archive.apache.org/dist/httpcomponents/httpclient/binary/httpcomponents-client-$WM_HTTP_CC_VERSION-bin.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf httpcomponents-client.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL http://www-eu.apache.org/dist/zookeeper/zookeeper-$ZOOKEEPER_RELEASE/zookeeper-$ZOOKEEPER_RELEASE.tar.gz
      | tar -x -C /usr/lib/     && cd /usr/lib && ln -s zookeeper-* zookeeper     &&
      mkdir -p $ZOOKEEPER_DATA_FOLDER     && mkdir -p ZOOKEEPER_LOGS_FOLDER     &&
      mkdir -p $ZOOKEEPER_SSL_FOLDER     && mkdir -p $ZOOKEEPER_HOME/conf     && mkdir
      -p $ZOOKEEPER_HOME/logs     && mkdir -p /root/.wiremock     && mkdir -p /root/.zookeeper     &&
      echo "head-zookeeper" >> /root/.bashrc     && echo "head-wiremock" >> /root/.bashrc     &&
      echo ". setenv-zookeeper" >> /root/.bashrc     && echo ". custom-setenv-zookeeper"
      >> /root/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-start-wiremock.sh
    - /docker-start-wiremock.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-wiremock-server.sh
    - /usr/local/bin/start-wiremock-server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - stop-wiremock-server.sh
    - /usr/local/bin/stop-wiremock-server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - status-wiremock-server.sh
    - /usr/local/bin/status-wiremock-server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - head-wiremock.sh
    - /usr/local/bin/head-wiremock
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - set-job-wiremock.sh
    - /usr/local/bin/set-crontab-job
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dump-env.sh
    - /usr/local/bin/dump-env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.wiremock.sh
    - /etc/init.d/wiremock
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default.wiremock.sh
    - /etc/default/wiremock
  - Chown: ""
    Name: add
    SourcesAndDest:
    - zookeeper/zookeeper.cfg.standalone.template
    - $ZOOKEEPER_HOME/conf/zoo.cfg.standalone.template
  - Chown: ""
    Name: add
    SourcesAndDest:
    - zookeeper/zookeeper.cfg.replica.template
    - $ZOOKEEPER_HOME/conf/zoo.cfg.replica.template
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/start-zookeeper.sh
    - /usr/local/bin/start-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/status-zookeeper.sh
    - /usr/local/bin/status-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/stop-zookeeper.sh
    - /usr/local/bin/stop-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/head-zookeeper.sh
    - /usr/local/bin/head-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/configure-zookeeper.sh
    - /usr/local/bin/configure-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/init_default_env_zookeeper.sh
    - /usr/local/bin/setenv-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/init_custom_env_zookeeper.sh
    - /usr/local/bin/custom-setenv-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/init_custom_env_zookeeper.sh
    - /root/.wiremock/bkp-custom-setenv-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/client-seek-zookeeper.sh
    - /usr/local/bin/seek-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/client-log-zookeeper.sh
    - /usr/local/bin/log-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/load-zookeeper-data.sh
    - /usr/local/bin/import-data-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/get-zookeeper-node.sh
    - /usr/local/bin/get-node-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/set-zookeeper-node.sh
    - /usr/local/bin/set-node-zookeeper
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/log4j.properties
    - /usr/lib/zookeeper/conf/log4j.properties
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/default-setenv-zookeeper.sh
    - /root/.zookeeper/default-setenv-zookeeper.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zookeeper/crontab
    - /etc/crontab
  - CmdLine:
    - chmod 777 /docker-start-wiremock.sh     && chmod 777 /docker-entrypoint.sh     &&
      chmod 777 /usr/local/bin/*-wiremock*     && chmod 777 /usr/local/bin/*zookeeper     &&
      chmod 777 /usr/local/bin/set-crontab-job     && chmod 644 /etc/crontab     &&
      chmod 777 /usr/local/bin/dump-env     && chmod 777 /etc/init.d/wiremock     &&
      chmod 777 /etc/default/wiremock
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /wiremock/mappings
    - /wiremock/__files
    - /wiremock/certificates
    - /var/local/zookeeper
    - /var/local/zookeeper-logs
    - /var/local/zookeeper-ssl
  - CmdLine:
    - /docker-start-wiremock.sh
    Name: cmd
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "2181"
    - "2182"
    - "443"
    - "8080"
    - "8081"
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
