MetaArgs: null
Stages:
- BaseName: sonarqube:6.5
  Commands:
  - Maintainer: Fabrizio Torelli <hellgate75@gmail.com>
    Name: maintainer
  - Labels:
    - Key: vendor
      Value: '"Fabrizio Torelli <hellgate75@gmail.com>"'
    Name: label
  - Labels:
    - Key: com.docker.image.license
      Value: '"LGPL License, Version 3.0"'
    Name: label
  - Labels:
    - Key: com.docker.image.name
      Value: '"SonarQube Quality Gate base image"'
    Name: label
  - Labels:
    - Key: com.docker.image.type
      Value: '"SonarQube Continuous Delivery Quality Gate Image"'
    Name: label
  - Env:
    - Key: PATH
      Value: /usr/local/bin:/opt/sonarqube/bin:$PATH
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: SONARQUBE_HOME
      Value: '"/opt/sonarqube"'
    Name: env
  - Env:
    - Key: SONARQUBE_JDBC_USERNAME
      Value: '"sonar"'
    Name: env
  - Env:
    - Key: SONARQUBE_JDBC_PASSWORD
      Value: '"sonar"'
    Name: env
  - Env:
    - Key: SONARQUBE_JDBC_URL
      Value: '"jdbc:postgresql://localhost/sonar"'
    Name: env
  - Env:
    - Key: SONARQUBE_WEB_JVM_OPTS
      Value: '"-server -Xmx1G -Xms128m -XX:+HeapDumpOnOutOfMemoryError"'
    Name: env
  - Env:
    - Key: SONARQUBE_ELASTICSEARCH_JVM_OPTS
      Value: '"-Xmx1G -Xms256m -Xss256k -Djna.nosys=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC
        -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError"'
    Name: env
  - Env:
    - Key: SONARQUBE_COMPUTEENGINE_JVM_OPTS
      Value: '"-server -Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError"'
    Name: env
  - Env:
    - Key: SONARQUBE_REINSTALL_PLUGIN
      Value: '"0"'
    Name: env
  - Env:
    - Key: SONARQUBE_HOST
      Value: '"0.0.0.0"'
    Name: env
  - Env:
    - Key: SONARQUBE_WEB_PORT
      Value: "9000"
    Name: env
  - Env:
    - Key: SONARQUBE_WEB_CONTEXT
      Value: '"/"'
    Name: env
  - Env:
    - Key: STARTUP_TIMEOUT_SECONDS
      Value: "5"
    Name: env
  - Env:
    - Key: PLUGINS_FILE_URL
      Value: '""'
    Name: env
  - Name: workdir
    Path: $SONARQUBE_HOME
  - Name: user
    User: root
  - CmdLine:
    - apt-get update     &&  apt-get -y install apt-utils     &&  apt-get -y install
      --no-install-recommends sudo openssl tar groovy unzip monit ca-certificates               openssh-server
      cron wget curl htop git maven gradle vim net-tools zip postgresql-client locales     &&  apt-get
      -y upgrade     &&  mkdir -p $SONARQUBE_HOME/bin     &&  apt-get -y autoremove     &&  apt-get
      -y clean     &&  rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/start-sonarqube.sh
    - $SONARQUBE_HOME/bin/start-sonarqube
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/stop-sonarqube.sh
    - $SONARQUBE_HOME/bin/stop-sonarqube
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/status-sonarqube.sh
    - $SONARQUBE_HOME/bin/status-sonarqube
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/install-plugins.sh
    - $SONARQUBE_HOME/bin/install-plugins-sonarqube
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/dump-env.sh
    - /usr/local/bin/dump-env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-start-sonarqube.sh
    - /docker-start-sonarqube.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sonarqube.sh
    - /etc/init.d/sonarqube
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default.sonarqube.sh
    - /etc/default/sonarqube
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sonar.properties
    - /opt/sonarqube/conf/sonar.properties
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - remotedb/create_schema.sql
    - ~/create_schema.sql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - samples/plugins.txt
    - /root/.sonarqube/plugins.txt
  - CmdLine:
    - chmod 777 $SONARQUBE_HOME/bin/*     &&  chmod 777 /docker-*.sh     &&  chmod
      777 /etc/init.d/sonarqube     &&  chmod 777 /etc/default/sonarqube     &&  chmod
      777 /usr/local/bin/dump-env     && mkdir -p /root/.ssh     && usermod -aG ssh
      root     && cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"/opt/sonarqube/data"'
  - CmdLine:
    - /docker-start-sonarqube.sh  -daemon
    Name: cmd
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "9000"
    - "9001"
    - "9092"
  From:
    Image: sonarqube:6.5
  Name: ""
  Platform: ""
  SourceCode: FROM sonarqube:6.5
