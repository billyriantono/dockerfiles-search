{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:9",
      "SourceCode": "FROM debian:9",
      "Platform": "",
      "From": {
        "Image": "debian:9"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "apt-get update -y   \u0026\u0026 apt-get install -y   libmicrohttpd-dev   libjansson-dev   libssl-dev   libsofia-sip-ua-dev   libglib2.0-dev   libopus-dev   libogg-dev   libavutil-dev   libavcodec-dev   libavformat-dev   libini-config-dev   libcollection-dev   pkg-config   libconfig-dev   gengetopt   libtool   automake   wget   sudo   make   git   cmake   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /work   \u0026\u0026 wget --no-check-certificate https://nice.freedesktop.org/releases/libnice-0.1.15.tar.gz   \u0026\u0026 tar xvf libnice-0.1.15.tar.gz   \u0026\u0026 cd libnice-0.1.15   \u0026\u0026 ./configure --prefix=/usr \u0026\u0026 make \u0026\u0026 sudo make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf libnice-0.1.15"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /work   \u0026\u0026 git clone https://github.com/cisco/libsrtp.git   \u0026\u0026 cd libsrtp   \u0026\u0026 git checkout v2.2.0   \u0026\u0026 ./configure --prefix=/usr --enable-openssl   \u0026\u0026 make shared_library   \u0026\u0026 sudo make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf libsrtp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/sctplab/usrsctp/archive/0.9.3.0.tar.gz   \u0026\u0026 tar xvf 0.9.3.0.tar.gz   \u0026\u0026 cd usrsctp-0.9.3.0   \u0026\u0026 ./bootstrap   \u0026\u0026 ./configure --prefix=/usr   \u0026\u0026 make   \u0026\u0026 sudo make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf usrsctp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/warmcat/libwebsockets.git   \u0026\u0026 cd libwebsockets   \u0026\u0026 git checkout v2.1.0   \u0026\u0026 mkdir build   \u0026\u0026 cd build   \u0026\u0026 cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ..   \u0026\u0026 make   \u0026\u0026 sudo make install   \u0026\u0026 cd ../../   \u0026\u0026 rm -rf libwebsockets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JANUS_VERSION",
          "Name": "arg",
          "Value": "0.6.1"
        },
        {
          "CmdLine": [
            "wget -O janus-gateway.tar.gz https://github.com/meetecho/janus-gateway/archive/v${JANUS_VERSION}.tar.gz   \u0026\u0026 mkdir janus-gateway   \u0026\u0026 tar xvf janus-gateway.tar.gz -C janus-gateway --strip-components 1   \u0026\u0026 cd janus-gateway   \u0026\u0026 sh autogen.sh   \u0026\u0026 ./configure --prefix=/opt/janus --disable-rabbitmq --disable-mqtt --enable-post-processing   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 make configs   \u0026\u0026 cd ../   \u0026\u0026 rm -rf janus-gateway.tar.gz janus-gateway"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "7088",
            "7089",
            "8088",
            "8089",
            "8188",
            "8189"
          ]
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "/opt/janus/bin/janus"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--stun-server=stun.l.google.com:19302"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}