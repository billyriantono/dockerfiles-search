MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Pollen Metrology <admin-team@pollen-metrology.com>
    Name: maintainer
  - Key: VERSION
    Name: arg
    Value: "3.28"
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "2222"
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y git wget curl python-virtualenv python-pip
      build-essential python-dev \tgraphviz locales locales-all bind9-host iputils-ping
      python3-pip"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install conan
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y libeigen3-dev libxt-dev libtiff-dev libpng-dev
      libjpeg-dev libopenblas-dev \txvfb libusb-dev libwrap0-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libfreetype6-dev libharfbuzz-dev libgtk2.0-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y qttools5-dev-tools libqt5opengl5-dev libqt5svg5-dev
      libqt5webkit5-dev libqt5xmlpatterns5-dev libqt5xmlpatterns5-private-dev qt5-default
      qtbase5-dev qtbase5-dev-tools qtchooser qtscript5-dev qtdeclarative5-dev qttools5-dev
      qttools5-private-dev libqt5websockets5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y freeglut3-dev mesa-common-dev mesa-utils-extra
      libgl1-mesa-dev libglapi-mesa libsm-dev libx11-dev libxext-dev libxt-dev libglu1-mesa-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y g++-5 cmake lsb-core doxygen lcov
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libpcre3-dev unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp && mkdir cppcheck && cd cppcheck && wget https://github.com/danmar/cppcheck/archive/1.89.zip
      ;  \tunzip -a 1.89.zip && \tcd cppcheck-1.89 && \tmake -j4 SRCDIR=build FILESDIR=/usr/bin/cfg
      HAVE_RULES=yes CXXFLAGS=\"-O2 -DNDEBUG -Wall -Wno-sign-compare -Wno-unused-function\"
      && \tmake install PREFIX=/usr FILESDIR=/usr/share/cppcheck/ && \tcd /tmp &&
      \trm -rf cppcheck"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp && mkdir lcov && cd lcov && wget https://sourceforge.net/projects/ltp/files/Coverage%20Analysis/LCOV-1.13/lcov-1.13.tar.gz
      ;  \ttar xvfz lcov-1.13.tar.gz && \tcd lcov-1.13 && \tmake install PREFIX=/usr
      CFGDIR=/usr/share/lcov/ && \tcd /tmp && \trm -rf lcov"
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --system --quiet --uid ${uid} --group --disabled-login ${user}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y php7.0-cli php7.0-curl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/phabricator
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/phabricator && git clone https://github.com/phacility/arcanist.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/phabricator && git clone https://github.com/phacility/libphutil.git
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /home/phabricator/arcanist/bin/arc.bat /home/phabricator/arcanist/bin/arc.bat.old
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /home/phabricator/arcanist/bin/arc /usr/bin/arc.bat
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/slave.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "${user} ALL = NOPASSWD : /usr/bin/apt-get" >> /etc/sudoers.d/jenkins-can-install'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/pollen && chown jenkins:jenkins /home/pollen && ln -s /home/pollen
      /pollen
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/script && chown jenkins:jenkins /home/script
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - coverage_validator.sh
    - /home/script
  - Labels:
    - Key: Description
      Value: '"This is a base image, which provides the Jenkins agent executable (slave.jar)"'
    - Key: Vendor
      Value: '"Jenkins project"'
    - Key: Version
      Value: '"1.2"'
    Name: label
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave.sh
    - /usr/bin/jenkins-slave.sh
  - CmdLine:
    - chmod +x /usr/bin/jenkins-slave.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/jenkins-slave.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
