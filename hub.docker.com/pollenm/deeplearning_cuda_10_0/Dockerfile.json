{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "Pollen Metrology \u003cadmin-team@pollen-metrology.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "3.28"
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "2222"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends gnupg2 curl ca-certificates \u0026\u0026     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - \u0026\u0026     echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" \u003e /etc/apt/sources.list.d/cuda.list \u0026\u0026     echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" \u003e /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get purge --autoremove -y curl \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CUDA_VERSION",
              "Value": "10.0.130"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CUDA_PKG_VERSION",
              "Value": "10-0=$CUDA_VERSION-1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION cuda-compat-10-0 \u0026\u0026 ln -s cuda-10.0 /usr/local/cuda \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/nvidia/lib\" \u003e\u003e /etc/ld.so.conf.d/nvidia.conf \u0026\u0026     echo \"/usr/local/nvidia/lib64\" \u003e\u003e /etc/ld.so.conf.d/nvidia.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/nvidia/lib:/usr/local/nvidia/lib64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVIDIA_VISIBLE_DEVICES",
              "Value": "all"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVIDIA_DRIVER_CAPABILITIES",
              "Value": "compute,utility"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVIDIA_REQUIRE_CUDA",
              "Value": "\"cuda\u003e=10.0 brand=tesla,driver\u003e=384,driver\u003c385 brand=tesla,driver\u003e=410,driver\u003c411\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y python3-dev python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade tensorflow-gpu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libcudnn7=7.6.4.38-1+cuda10.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test.py",
            "/home/test.py"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y cuda-toolkit-10-0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends curl locales sudo \u0026\u0026     curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \u0026\u0026     apt-get purge --autoremove -y curl \u0026\u0026     chmod 755 /usr/share/jenkins \u0026\u0026     chmod 644 /usr/share/jenkins/slave.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --system --quiet --uid ${uid} --group --disabled-login ${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${user} ALL = NOPASSWD : /usr/bin/apt-get\" \u003e\u003e /etc/sudoers.d/jenkins-can-install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_AGENT_WORKDIR",
              "Value": "${AGENT_WORKDIR}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_AGENT_NAME",
              "Value": "\"NOT SET\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SECRET",
              "Value": "\"NOT SET\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_URL",
              "Value": "\"NOT SET\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave.sh",
            "/usr/bin/jenkins-slave.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /usr/bin/jenkins-slave.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/jenkins-slave.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}