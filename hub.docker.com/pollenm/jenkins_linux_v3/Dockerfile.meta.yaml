MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Pollen Metrology <admin-team@pollen-metrology.com>
    Name: maintainer
  - Key: VERSION
    Name: arg
    Value: "3.28"
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "2222"
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt install -y git wget curl python-virtualenv python-pip build-essential python-dev
      zip \tgraphviz locales locales-all bind9-host iputils-ping sudo shellcheck python3-venv
      python3-pip"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --system lcov_cobertura
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt install -y libeigen3-dev libxt-dev libtiff-dev libpng-dev libjpeg-dev libopenblas-dev
      \txvfb libusb-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y libgl1-mesa-dev libxcb1 libxcb1-dev libx11-xcb1 libx11-xcb-dev
      libxcb-keysyms1 libdbus-1-dev libxcb-keysyms1-dev libxcb-image0 libxcb-image0-dev
      libxtst-dev libxcb-shm0 libxcb-shm0-dev libxcb-icccm4 libxi-dev libminizip-dev
      libxcb-icccm4-dev libxcb-sync1 libxcb-sync-dev libxrandr-dev libxcb-xfixes0-dev
      libxrender-dev libxcb-shape0-dev libxml2-dev libxcb-randr0-dev libxcb-render-util0
      libxcb-render-util0-dev libxcb-glx0-dev libxcb-xinerama0 libxcb-xinerama0-dev
      libfontconfig1-dev libxcomposite-dev libxcursor-dev libxslt1-dev libevent-dev
      libjsoncpp-dev protobuf-compiler libprotobuf-dev libvpx-dev libsnappy-dev libnss3-dev
      bison libbison-dev flex libfl-dev gperf libdbus-1-dev fontconfig libdrm-dev
      libxcomposite-dev libxcursor-dev libxi-dev libxrandr-dev xscreensaver libxtst-dev
      libegl1-mesa-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y freeglut3-dev mesa-common-dev mesa-utils-extra libgl1-mesa-dev
      libglapi-mesa libsm-dev libx11-dev libxext-dev libxt-dev libglu1-mesa-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y software-properties-common gcc-7 g++-7 cmake lsb-core doxygen
      clang-format lcov gcovr valgrind && \tupdate-alternatives --install /usr/bin/g++
      g++ /usr/bin/g++-7 60 && \tupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7
      60"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update && apt install -y yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y chromium-browser
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/chrome chrome-browser /usr/bin/chromium-browser
      100
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --system --quiet --uid ${uid} --group --disabled-login ${user}
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install --upgrade pip conan
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt install -y php7.2-cli php7.2-curl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/phabricator
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/phabricator && git clone https://github.com/phacility/arcanist.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/phabricator && git clone https://github.com/phacility/libphutil.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/phabricator && git clone https://github.com/pinterest/arcanist-linters.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/phabricator && git clone https://github.com/vhbit/clang-format-linter.git
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /home/phabricator/arcanist/bin/arc.bat /home/phabricator/arcanist/bin/arc.bat.old
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /home/phabricator/arcanist/bin/arc /usr/bin/arc.bat
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y libpcre3-dev unzip p7zip-full
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp && mkdir cppcheck && wget https://github.com/danmar/cppcheck/archive/1.89.zip
      ;  \tunzip -a 1.89.zip && \tcd cppcheck-1.89 && \tmake -j4 MATCHCOMPILER=yes
      FILESDIR=/usr/bin/cfg HAVE_RULES=yes CXXFLAGS=\"-O2 -DNDEBUG -Wall -Wno-sign-compare
      -Wno-unused-function\" && \tmake install PREFIX=/usr FILESDIR=/usr/share/cppcheck/
      && \tcd /tmp && \trm -rf cppcheck"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/slave.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "${user} ALL = NOPASSWD : /usr/bin/apt-get" >> /etc/sudoers.d/jenkins-can-install'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/pollen && chown jenkins:jenkins /home/pollen && ln -s /home/pollen
      /pollen
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/script && chown jenkins:jenkins /home/script
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - linux_cleaning.sh
    - /home/script
  - CmdLine:
    - chmod 755 /home/script/linux_cleaning.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/script && chown jenkins:jenkins /home/script
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - coverage_validator.sh
    - /home/script
  - Labels:
    - Key: Description
      Value: '"This is a base image, which provides the Jenkins agent executable (slave.jar)"'
    - Key: Vendor
      Value: '"Jenkins project"'
    - Key: Version
      Value: '"4.0"'
    Name: label
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: JENKINS_AGENT_WORKDIR
      Value: ${AGENT_WORKDIR}
    Name: env
  - Env:
    - Key: JENKINS_AGENT_NAME
      Value: '"NOT SET"'
    Name: env
  - Env:
    - Key: JENKINS_SECRET
      Value: '"NOT SET"'
    Name: env
  - Env:
    - Key: JENKINS_URL
      Value: '"NOT SET"'
    Name: env
  - CmdLine:
    - apt install -y daemonize
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl --create-dirs -sSLo /usr/bin/merge-xml-coverage.py https://gist.githubusercontent.com/tgsoverly/ef975d5b430fbce1eb33/raw/a4836655814bf09ac34bd42a6dd99f37aea7265d/merge-xml-coverage.py
      \t&& chmod 755 /usr/bin/merge-xml-coverage.py"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave.sh
    - /usr/bin/jenkins-slave.sh
  - CmdLine:
    - chmod +x /usr/bin/jenkins-slave.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build-wrapper-linux-x86.zip
    - /tmp/build-wrapper-linux-x86.zip
  - CmdLine:
    - cd /home/jenkins && unzip -a /tmp/build-wrapper-linux-x86.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /home/jenkins/build-wrapper-linux-x86/libinterceptor-x86_64.so /home/jenkins/build-wrapper-linux-x86/libinterceptor-haswell.so
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/build-wrapper-linux-x86.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl --create-dirs -sSLo /tmp/sonar-scanner-cli-3.3.0.1492-linux.zip \thttps://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/jenkins && unzip -a /tmp/sonar-scanner-cli-3.3.0.1492-linux.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/sonar-scanner-cli-3.3.0.1492-linux.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/jenkins-slave.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
