{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phalconphp/bootstrap:alpine-3",
      "SourceCode": "FROM phalconphp/bootstrap:alpine-3",
      "Platform": "",
      "From": {
        "Image": "phalconphp/bootstrap:alpine-3"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Slimmed-down base image to use for production with crond and supervisord\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Serghei Iakovlev \u003cserghei@phalconphp.com\u003e\""
            },
            {
              "Key": "vendor",
              "Value": "Phalcon"
            },
            {
              "Key": "name",
              "Value": "\"com.phalconphp.images.base.alpine-3\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SUPERVISOR_VERSION",
              "Value": "4.0.1"
            },
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk upgrade --force     \u0026\u0026 apk add --no-cache         dcron         gnupg         logrotate         py-setuptools         python         tar         wget         xz     \u0026\u0026 cd /tmp     \u0026\u0026 apk add --no-cache --virtual .build-deps dpkg     \u0026\u0026 wget --quiet -O \"supervisor-${SUPERVISOR_VERSION}.tar.gz\"         \"https://github.com/Supervisor/supervisor/archive/${SUPERVISOR_VERSION}.tar.gz\"     \u0026\u0026 tar -xzf \"supervisor-${SUPERVISOR_VERSION}.tar.gz\"     \u0026\u0026 cd \"supervisor-${SUPERVISOR_VERSION}\"     \u0026\u0026 python setup.py install --quiet     \u0026\u0026 mkdir -p /var/log/supervisor     \u0026\u0026 /usr/bin/supervisord --version     \u0026\u0026 mkdir -m 0644 -p /var/log/supervisor /var/log/cron /var/spool/cron/crontabs /etc/cron.d     \u0026\u0026 touch /var/log/cron/cron.log     \u0026\u0026 export DPKG_ARCH=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget --quiet -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$DPKG_ARCH\"     \u0026\u0026 wget --quiet -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$DPKG_ARCH.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 export GPG_KEY=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"     \u0026\u0026 (         gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\"         || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\"         || gpg --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEY\"         )     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true     \u0026\u0026 python --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build-deps     \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*     \u0026\u0026 rm -f /usr/local/bin/gosu.asc     \u0026\u0026 find /var/log -type f | while read f; do echo -n '' \u003e ${f}; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}