{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build-env",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04 AS build-env",
      "Platform": "",
      "As": "build-env",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get -y update     \u0026\u0026 apt-get install --no-install-recommends -yq        autoconf        build-essential        gcc        git        libjansson-dev        make        openssl        software-properties-common        unzip        wget        zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "ZEPHIR_VERSION",
              "Value": "0.11.12"
            },
            {
              "Key": "ZEPHIR_PARSER_VERSION",
              "Value": "v1.3.1"
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.0"
            },
            {
              "Key": "NGINX_USER",
              "Value": "www-data"
            },
            {
              "Key": "NGINX_CONF_PATH",
              "Value": "/etc/nginx"
            },
            {
              "Key": "NGINX_LOG_PATH",
              "Value": "/var/log/nginx"
            },
            {
              "Key": "NGINX_BUILD",
              "Value": "Ubuntu"
            },
            {
              "Key": "PCRE_VERSION",
              "Value": "8.43"
            },
            {
              "Key": "PCRE_PATH",
              "Value": "/var/lib/pcre"
            },
            {
              "Key": "OPENSSL_VERSION",
              "Value": "openssl-1.0.2o"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php     \u0026\u0026 apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get     -o Dpkg::Options::=\"--force-confdef\"     -o Dpkg::Options::=\"--force-confold\"     install -y -f --no-install-recommends         jq         libc6-dev         libexpat-dev         libgeoip-dev         libpcre3-dev         libssh2-1-dev         libssl-dev         libxslt1-dev         libyaml-dev         lsb-release         php7.2-cli         php7.2-common         php7.2-dev         php7.2-xml         re2c"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get     -o Dpkg::Options::=\"--force-confdef\"     -o Dpkg::Options::=\"--force-confold\"     install -y -f --no-install-recommends         libexpat-dev         libmaxminddb-dev         mmdb-bin         libmaxminddb0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global advice.detachedHead false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./installers",
            "/installers"
          ]
        },
        {
          "CmdLine": [
            "mkdir /artifacts     \u0026\u0026 bash /installers/zephir-parser.sh     \u0026\u0026 bash /installers/zephir.sh     \u0026\u0026 bash /installers/pinba.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash /installers/openssl.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash /installers/nginx.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs/etc/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "phalconphp/base:ubuntu-16.04",
      "SourceCode": "FROM phalconphp/base:ubuntu-16.04",
      "Platform": "",
      "From": {
        "Image": "phalconphp/base:ubuntu-16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Application image to use for production with PHP and Nginx\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Serghei Iakovlev \u003cserghei@phalconphp.com\u003e\""
            },
            {
              "Key": "vendor",
              "Value": "Phalcon"
            },
            {
              "Key": "name",
              "Value": "\"com.phalconphp.images.ubuntu-16.04.php-7.2\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "GITHUB_TOKEN",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GITHUB_USER",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "PINBA_SERVER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "FPM_MAX_CHILDREN",
              "Value": "32"
            },
            {
              "Key": "FPM_START_SERVERS",
              "Value": "6"
            },
            {
              "Key": "FPM_MIN_SPARE_SERVERS",
              "Value": "2"
            },
            {
              "Key": "FPM_MAX_SPARE_SERVERS",
              "Value": "8"
            },
            {
              "Key": "FPM_PROCESS_IDLE_TIMEOUT",
              "Value": "5"
            },
            {
              "Key": "FPM_MAX_REQUEST",
              "Value": "1024"
            },
            {
              "Key": "PATH",
              "Value": "/root/composer/vendor/bin:$PATH"
            },
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            },
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            },
            {
              "Key": "PCRE_PATH",
              "Value": "/var/lib/pcre"
            },
            {
              "Key": "PINBA_SERVER",
              "Value": "${PINBA_SERVER:-}"
            },
            {
              "Key": "GITHUB_USER",
              "Value": "${GITHUB_USER:-}"
            },
            {
              "Key": "GITHUB_TOKEN",
              "Value": "${GITHUB_TOKEN:-}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs/etc/dpkg/dpkg.cfg.d/",
            "/etc/dpkg/dpkg.cfg.d/"
          ]
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get     -o Dpkg::Options::=\"--force-confdef\"     -o Dpkg::Options::=\"--force-confold\"     install -y -f --no-install-recommends       dnsutils       iproute2       libc6-dev       libgeoip-dev       libpcre3-dev       libssh2-1-dev       libssl-dev       libyaml-dev       lsb-release       php-amqp       php-apcu-bc       php-igbinary       php-memcache       php-pear       php-sodium       php-ssh2       php-xdebug       php-yaml       php7.2-bcmath       php7.2-cgi       php7.2-cli       php7.2-common       php7.2-curl       php7.2-dba       php7.2-dev       php7.2-fpm       php7.2-gd       php7.2-gmp       php7.2-imagick       php7.2-imap       php7.2-intl       php7.2-json       php7.2-mbstring       php7.2-memcached       php7.2-mongodb       php7.2-msgpack       php7.2-mysql       php7.2-odbc       php7.2-opcache       php7.2-pgsql       php7.2-phalcon       php7.2-pspell       php7.2-recode       php7.2-redis       php7.2-soap       php7.2-tidy       php7.2-xml       php7.2-zip       software-properties-common       swig       tmpreaper       unzip       wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p     /app     /tmp/xdebug-{profile,outpt}     /run/php     /var/log/php     /var/lib/nginx/{cache,proxy}     $COMPOSER_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/artifacts/",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs/etc/php/7.2/",
            "/etc/php/7.2/"
          ]
        },
        {
          "CmdLine": [
            "wget -qO- https://getcomposer.org/installer |        php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpdismod -v 7.2 apcu_bc     \u0026\u0026 phpdismod -v 7.2 apcu     \u0026\u0026 phpdismod -v 7.2 mongodb     \u0026\u0026 phpdismod -v 7.2 pinba     \u0026\u0026 phpdismod -v 7.2 xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     libjansson-dev     libmaxminddb0     mmdb-bin     nginx     openssl     zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/GeoIP     \u0026\u0026 wget -qO -       http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz       | gunzip -c \u003e /usr/share/GeoIP/maxmind-city.mmdb     \u0026\u0026 wget -qO -       http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz       | gunzip -c \u003e /usr/share/GeoIP/maxmind-country.mmdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "$PCRE_PATH",
            "$PCRE_PATH"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/sbin/nginx",
            "/usr/sbin/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs/etc/nginx/",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs/etc/supervisor/",
            "/etc/supervisor/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs/etc/logrotate.d/",
            "/etc/logrotate.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.d",
            "/entrypoint.d"
          ]
        },
        {
          "CmdLine": [
            "echo     \u0026\u0026 nginx -v     \u0026\u0026 php --version | head -n 1     \u0026\u0026 composer --version --no-ansi     \u0026\u0026 zephir --version     \u0026\u0026 php -r 'echo \"Phalcon \" . \\Phalcon\\Version::get() . \"\\n\";'     \u0026\u0026 echo -n \"Zephir Parser \" \u0026\u0026 php       -d extension=`php-config --extension-dir`/zephir_parser.so       --ri \"Zephir Parser\" | grep Version | awk '{print $3}'     \u0026\u0026 echo     \u0026\u0026 chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y     \u0026\u0026 apt-get clean -y     \u0026\u0026 rm -rf /tmp/* /var/tmp/*     \u0026\u0026 rm -rf /usr/share/doc/*     \u0026\u0026 rm -rf /usr/share/man/*     \u0026\u0026 rm -rf /usr/share/locale/*     \u0026\u0026 rm -f /var/log/php7.2-fpm.log     \u0026\u0026 find /var/cache/apt/archives /var/lib/apt/lists        -not -name lock        -type f        -delete     \u0026\u0026 find /var/cache -type f -not -name lock -delete     \u0026\u0026 find /var/log -type f | while read f; do echo -n '' \u003e ${f}; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app",
            "/var/log/nginx",
            "/var/log/php",
            "/tmp/xdebug-profile",
            "/tmp/xdebug-outupt",
            "/var/lib/nginx/cache",
            "/var/lib/nginx/proxy"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}