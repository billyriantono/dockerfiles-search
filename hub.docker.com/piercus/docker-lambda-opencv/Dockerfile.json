{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "amazonlinux:latest",
      "SourceCode": "FROM amazonlinux:latest",
      "Platform": "",
      "From": {
        "Image": "amazonlinux:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_VERSION",
              "Value": "2.4.13.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DIR",
              "Value": "/var/task"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCAL_SRC",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_RELEASE",
              "Value": "${LOCAL_SRC}/opencv-${OPENCV_VERSION}/release"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_INSTALL_PREFIX",
              "Value": "${DIR}/build"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${OPENCV_INSTALL_PREFIX}/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "${OPENCV_INSTALL_PREFIX}/lib/pkgconfig"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum update -y       \u0026\u0026 yum install -y gcc44 gcc-c++ libgcc44       \u0026\u0026 yum install -y libjpeg-devel libpng-devel libjasper-devel libtiff-devel openssl-devel       \u0026\u0026 yum install -y unzip cmake git openssh-clients       \u0026\u0026 yum -y clean all       \u0026\u0026 cd ${LOCAL_SRC}       \u0026\u0026 curl -s -L -O https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.gz       \u0026\u0026 tar -zxvf node-v${NODE_VERSION}.tar.gz       \u0026\u0026 cd node-v${NODE_VERSION}       \u0026\u0026 ./configure       \u0026\u0026 make       \u0026\u0026 make install       \u0026\u0026 cd ..       \u0026\u0026 rm node-v${NODE_VERSION}.tar.gz       \u0026\u0026 mkdir -p ${OPENCV_RELEASE}       \u0026\u0026 mkdir -p ${OPENCV_INSTALL_PREFIX}       \u0026\u0026 cd ${LOCAL_SRC}       \u0026\u0026 curl -s -L -O https://github.com/itseez/opencv/archive/${OPENCV_VERSION}.zip       \u0026\u0026 unzip ${OPENCV_VERSION}.zip       \u0026\u0026 cd ${OPENCV_RELEASE}       \u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE -D WITH_OPENEXR=OFF -D WITH_IPP=ON -D INSTALL_CREATE_DISTRIB=ON -D BUILD_SHARED_LIBS=NO -D CMAKE_INSTALL_PREFIX=${OPENCV_INSTALL_PREFIX} ..       \u0026\u0026 make       \u0026\u0026 make install       \u0026\u0026 cd  ${LOCAL_SRC}      \u0026\u0026 rm ${OPENCV_VERSION}.zip      \u0026\u0026 rm -rf opencv-${OPENCV_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}