{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7",
      "SourceCode": "FROM      python:2.7",
      "Platform": "",
      "From": {
        "Image": "python:2.7"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026           apt-get install -y libcairo2-dev memcached python-cairo sqlite3 \u0026\u0026           apt-get clean \u0026\u0026           rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "pip install -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --install-option=\"--prefix=/opt/graphite\" graphite-web==0.9.15"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup --gid 30100 graphiteweb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 30106 -g graphiteweb -s /bin/false graphiteweb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "local_settings.py",
            "/opt/graphite/webapp/graphite/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt/graphite/storage/log/webapp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/webapp/graphite_wsgi.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PYTHONPATH=$PYTHONPATH:/opt/graphite/webapp \u0026\u0026           cd /opt/graphite/webapp/graphite \u0026\u0026           /usr/local/bin/django-admin.py syncdb --settings=graphite.settings --noinput"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-graphite.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/opt/graphite/webapp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/graphite/webapp/content"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx/conf.d"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "gunicorn",
            "--bind=0.0.0.0:80",
            "graphite_wsgi:application",
            "--user=graphiteweb",
            "--settings=graphite.settings"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}