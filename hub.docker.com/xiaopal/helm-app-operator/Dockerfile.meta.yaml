MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /go/src/github.com/xiaopal/helm-app-operator
  - Name: workdir
    Path: /go/src/github.com/xiaopal/helm-app-operator
  - CmdLine:
    - CGO_ENABLED=0 GOOS=linux go build -o /helm-app-operator -ldflags '-s -w' cmd/*.go
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /helm-app-operator
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10 as build
- BaseName: alpine:3.7
  Commands:
  - Key: HELM_STABLE_REPO_URL
    Name: arg
    Value: https://npc.nos-eastchina1.126.net/charts/stable
  - CmdLine:
    - "apk add --no-cache bash coreutils curl openssh-client openssl git ansible findutils
      py-netaddr rsync && \tmkdir -p ~/.ssh && chmod 700 ~/.ssh && \techo -e 'StrictHostKeyChecking
      no\\nUserKnownHostsFile /dev/null' >~/.ssh/config && \tcurl -sSL \"http://npc.nos-eastchina1.126.net/dl/dumb-init_1.2.0_amd64.tar.gz\"
      | tar -zx -C /usr/bin &&     curl -sSL 'https://npc.nos-eastchina1.126.net/dl/kubernetes-client-v1.9.3-linux-amd64.tar.gz'
      | tar -zx -C /usr/ &&     ln -s /usr/kubernetes/client/bin/kubectl /usr/bin/
      && \tmkdir -p /usr/helm && \tcurl -sSL 'https://npc.nos-eastchina1.126.net/dl/helm-v2.9.1-linux-amd64.tar.gz'
      | tar -zx -C /usr/helm && \tln -s /usr/helm/linux-amd64/helm /usr/bin/ && \tansible-galaxy
      install -p /etc/ansible/roles xiaopal.npc_setup && \tansible-playbook /etc/ansible/roles/xiaopal.npc_setup/tests/noop.yml
      &&     helm init --client-only --stable-repo-url \"$HELM_STABLE_REPO_URL\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /helm-app-operator
    - /helm-app-operator
  - CmdLine:
    - ln -s /helm-app-operator /usr/bin/helm-app-operator
    Name: run
    PrependShell: true
  - Env:
    - Key: OPERATOR_NAME
      Value: '''helm-app-operator'''
    - Key: CRD_RESOURCE
      Value: '''HelmApp,helmapps.xiaopal.github.com/v1beta1'''
    - Key: HELM_CHART
      Value: ''''''
    - Key: FETCH_CHART_EXEC
      Value: '''[ ! -z "$FETCH_CHART" ] && rm -fr "$FETCH_CHART_TO" && FETCH_TMP="$(mktemp
        -d)" && trap "rm -fr $FETCH_TMP" EXIT && mkdir -p "$(dirname "$FETCH_CHART_TO")"
        && helm fetch -d "$FETCH_TMP" --untar "$FETCH_CHART_FROM" && mv "$FETCH_TMP/"*
        "$FETCH_CHART_TO"'''
    Name: env
  - CmdLine:
    - /usr/bin/dumb-init
    - /helm-app-operator
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --tiller-storage=secret
    - --all-namespaces
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
