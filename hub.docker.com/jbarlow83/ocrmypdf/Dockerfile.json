{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "ubuntu:19.10",
      "SourceCode": "FROM ubuntu:19.10 as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "ubuntu:19.10"
      },
      "Commands": null
    },
    {
      "Name": "builder",
      "BaseName": "base",
      "SourceCode": "FROM base as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   build-essential autoconf automake libtool   libleptonica-dev   zlib1g-dev   python3   python3-distutils   ca-certificates   curl   git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://bootstrap.pypa.io/get-pip.py | python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir jbig2   \u0026\u0026 curl -L https://github.com/agl/jbig2enc/archive/0.29.tar.gz |   tar xz -C jbig2 --strip-components=1   \u0026\u0026 cd jbig2   \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf jbig2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir   -r requirements/main.txt   -r requirements/webservice.txt   -r requirements/test.txt   -r requirements/watcher.txt   ."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base",
      "SourceCode": "FROM base",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   ghostscript   img2pdf   liblept5   libsm6 libxext6 libxrender-dev   zlib1g   pngquant   python3   qpdf   tesseract-ocr   tesseract-ocr-chi-sim   tesseract-ocr-deu   tesseract-ocr-eng   tesseract-ocr-fra   tesseract-ocr-por   tesseract-ocr-spa   unpaper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/",
            "/usr/local/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/misc/webservice.py",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/misc/watcher.py",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/setup.cfg",
            "/app/setup.py",
            "/app/README.md",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/requirements",
            "/app/requirements"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/tests",
            "/app/tests"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/src",
            "/app/src"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/ocrmypdf"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}