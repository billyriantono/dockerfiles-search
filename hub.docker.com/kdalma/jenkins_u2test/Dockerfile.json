{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy     apt-transport-https     ca-certificates     curl     wget     lxc     zip     iptables     openjdk-7-jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y apache2     libapache2-mod-proxy-html     libxml2-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y software-properties-common python-software-properties     \u0026\u0026 add-apt-repository -y ppa:webupd8team/java     \u0026\u0026 echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -     \u0026\u0026 echo \"deb http://pkg.jenkins-ci.org/debian binary/\" \u003e /etc/apt/sources.list.d/jenkins.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers.d/jenkins     \u0026\u0026 chmod 0440 /etc/sudoers.d/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/docker-engine_1.11.0.deb",
            "/docker-engine.deb"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y     libsystemd-journal0     \u0026\u0026 dpkg -i docker-engine.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/wrapdocker",
            "/usr/local/bin/wrapdocker"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/jenkins_setting",
            "/jenkins_setting/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/install_jenkins_plugin.sh",
            "/install_jenkins_plugin.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/proxy.conf",
            "/proxy.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/index.html",
            "/tmp/index.html"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/U2Tester.hpi",
            "/tmp/U2Tester.hpi"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "asset/resource",
            "/tmp/assets"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/wrapdocker     \u0026\u0026 chmod 755 /start.sh     \u0026\u0026 chmod 755 /install_jenkins_plugin.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TIME_ZONE",
              "Value": "default"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/jenkins"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}