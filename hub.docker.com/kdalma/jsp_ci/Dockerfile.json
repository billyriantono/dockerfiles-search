{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Deukjin Kim \u003ckdalma@kimssoft.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy     apt-transport-https     ca-certificates     curl     wget     lxc     iptables     git     vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ssh-client     python2.7     python2.7-dev     \u0026\u0026 apt-get autoremove     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y mysql-server mysql-client     \u0026\u0026 apt-get autoremove     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common python-software-properties     \u0026\u0026 wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -     \u0026\u0026 echo \"deb http://pkg.jenkins-ci.org/debian binary/\" \u003e /etc/apt/sources.list.d/jenkins.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y openjdk-7-jre maven     zip     jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers.d/jenkins     \u0026\u0026 chmod 0440 /etc/sudoers.d/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://get.docker.com/ | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./wrapdocker",
            "/usr/local/bin/wrapdocker"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./setup.sh",
            "/setup.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./check.sh",
            "/check.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jenkins_setting",
            "/tmp/jenkins_setting/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jdk-1.8.45.tar.gz",
            "/tmp/jdk"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/wrapdocker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /setup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /check.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8090"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/develop"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}