MetaArgs: null
Stages:
- BaseName: debian
  Commands:
  - Maintainer: Artur Trofymchuk "artur@trofymchuk.net" & Andrew Miroshnychenko "miroshnychenkoandrew@gmail.com"
    Name: maintainer
  - CmdLine:
    - apt-get --quiet update --yes
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://http.debian.net/debian jessie-backports main >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://archive.ubuntu.com/ubuntu trusty main universe >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\twget \t\ttar
      \t\tgit \t\tunzip \t\tlib32stdc++6 \t\tlib32z1 \t\tbzip2 \t\txz-utils \t&& rm
      -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u121
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u121-b13-1~bpo8+1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: 20161107~bpo8+1
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --force-yes \t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t&& rm -rf /var/lib/apt/lists/*
      \t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --config java
    Name: run
    PrependShell: true
  - CmdLine:
    - java -version
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && wget --output-document=android-sdk.tgz --quiet http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
      && tar xzf android-sdk.tgz && rm -f android-sdk.tgz && chown -R root.root android-sdk-linux
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk-linux
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:/opt/tools
    Name: env
  - CmdLine:
    - echo y | android --silent update sdk --no-ui --all --filter platform-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android --silent update sdk --no-ui --all --filter extra
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android --silent update sdk --no-ui --all --filter build-tools-25.0.2
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android --silent update sdk --no-ui --all --filter android-25,android-22
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android --silent update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-22
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir "$ANDROID_HOME/licenses" || true
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo y | android update sdk --filter "extra-android-m2repository" --no-ui -a
      # Grab the Android Support Repo which isn''t included in the container'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && wget --quiet --output-document=gradle.zip https://services.gradle.org/distributions/gradle-3.2-bin.zip
      && unzip -q gradle.zip && rm -f gradle.zip && chown -R root.root /opt/gradle-3.2/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/opt/gradle-3.2/bin
    Name: env
  - CmdLine:
    - cd /opt && wget --quiet --output-document=gradle.zip https://services.gradle.org/distributions/gradle-3.3-bin.zip
      && unzip -q gradle.zip && rm -f gradle.zip && chown -R root.root /opt/gradle-3.3/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/opt/gradle-3.3/bin
    Name: env
  - CmdLine:
    - android list targets
    Name: run
    PrependShell: true
  - CmdLine:
    - echo no | android create avd --force -n test -c 30M -t android-22 --abi "default/armeabi-v7a"
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - wait-for-emulator.sh
    - /usr/local/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start-emulator.sh
    - /usr/local/bin/
  - CmdLine:
    - which java
    Name: run
    PrependShell: true
  - CmdLine:
    - which android
    Name: run
    PrependShell: true
  - CmdLine:
    - which git
    Name: run
    PrependShell: true
  - CmdLine:
    - which gradle
    Name: run
    PrependShell: true
  - CmdLine:
    - which adb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/workspace
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/.gradle
  - Name: workdir
    Path: /opt/workspace
  From:
    Image: debian
  Name: ""
  Platform: ""
  SourceCode: FROM debian
