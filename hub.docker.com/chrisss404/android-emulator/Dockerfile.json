{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jre-slim",
      "SourceCode": "FROM openjdk:8-jre-slim",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jre-slim"
      },
      "Commands": [
        {
          "Key": "ANDROID_SDK_SHA1SUM",
          "Name": "arg",
          "Value": "8c7c28554a32318461802c1291d76fccfafde054"
        },
        {
          "Key": "ANDROID_SDK_VERSION",
          "Name": "arg",
          "Value": "4333796"
        },
        {
          "Key": "SUPERCRONIC_SHA1SUM",
          "Name": "arg",
          "Value": "5ddf8ea26b56d4a7ff6faecdd8966610d5cb9d85"
        },
        {
          "Key": "SUPERCRONIC_VERSION",
          "Name": "arg",
          "Value": "v0.1.9"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/var/android-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y unzip wget \u0026\u0026     wget https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip -O sdk-tools-linux.zip \u0026\u0026     echo \"${ANDROID_SDK_SHA1SUM}  sdk-tools-linux.zip\" | sha1sum -c - \u0026\u0026     unzip sdk-tools-linux.zip -d ${ANDROID_HOME} \u0026\u0026     ln -s ${ANDROID_HOME}/emulator/emulator /usr/local/bin \u0026\u0026     ln -s ${ANDROID_HOME}/tools/bin/avdmanager /usr/local/bin \u0026\u0026     ln -s ${ANDROID_HOME}/tools/bin/sdkmanager /usr/local/bin \u0026\u0026     (yes | sdkmanager --licenses) \u0026\u0026     sdkmanager \"platform-tools\" \u0026\u0026     ln -s ${ANDROID_HOME}/platform-tools/adb /usr/local/bin \u0026\u0026     rm sdk-tools-linux.zip \u0026\u0026     echo \"5 4 * * * /usr/bin/find /tmp/android* -mtime +3 -exec rm -rf {} \\;\" \u003e ${ANDROID_HOME}/cleanup.cron \u0026\u0026     wget https://github.com/aptible/supercronic/releases/download/${SUPERCRONIC_VERSION}/supercronic-linux-amd64 -O /usr/local/bin/supercronic \u0026\u0026     echo \"${SUPERCRONIC_SHA1SUM}  /usr/local/bin/supercronic\" | sha1sum -c - \u0026\u0026     chmod +x /usr/local/bin/supercronic \u0026\u0026     apt-get remove -y unzip wget \u0026\u0026 apt-get auto-remove -y \u0026\u0026     apt-get install -y libfontconfig libglu1 libnss3-dev libxcomposite1 libxcursor1 libpulse0 libasound2 socat \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     addgroup --gid 1000 android \u0026\u0026     useradd -u 1000 -g android -ms /bin/sh android \u0026\u0026     chown -R android:android ${ANDROID_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "ANDROID_DEVICE",
          "Name": "arg",
          "Value": "\"Nexus One\""
        },
        {
          "Key": "ANDROID_VERSION",
          "Name": "arg",
          "Value": "29"
        },
        {
          "Name": "user",
          "User": "android"
        },
        {
          "CmdLine": [
            "sdkmanager \"platforms;android-${ANDROID_VERSION}\" \"system-images;android-${ANDROID_VERSION};google_apis;x86\" \u0026\u0026     rm ${ANDROID_HOME}/emulator/qemu/linux-x86_64/qemu-system-aarch64* \u0026\u0026     rm ${ANDROID_HOME}/emulator/qemu/linux-x86_64/qemu-system-armel* \u0026\u0026     rm ${ANDROID_HOME}/emulator/qemu/linux-x86_64/qemu-system-i386* \u0026\u0026     avdmanager create avd --name 'Emulator' --package \"system-images;android-${ANDROID_VERSION};google_apis;x86\" --device \"${ANDROID_DEVICE}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/bin/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5555"
          ]
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "\\[ $(adb shell getprop sys.boot_completed) \\] || exit 1"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "emulator",
            "@Emulator",
            "-use-system-libs",
            "-read-only",
            "-no-boot-anim",
            "-no-window",
            "-no-audio",
            "-no-snapstorage",
            "-verbose"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}