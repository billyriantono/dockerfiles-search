MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: robertondame@gmail.com
    Name: maintainer
  - CmdLine:
    - apt update && apt -y upgrade && apt install -y python python3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y -q         gfortran         curl         libfreetype6-dev         libxft-dev         libopenblas-dev         liblapack-dev         unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-pip python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip && pip2 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install cython numpy pandas scipy scikit-learn matplotlib         seaborn         sympy         patsy         statsmodels         pymongo         openpyxl         xlrd         arrow         "tornado>=4.0.0,<5.0.0"         azure         boto         jupyter
      notebook
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2.7 install cython numpy pandas scipy scikit-learn matplotlib         seaborn         sympy         patsy         statsmodels         pymongo         openpyxl         xlrd         arrow         "tornado>=4.0.0,<5.0.0"         azure         boto         jupyter
      notebook
    Name: run
    PrependShell: true
  - CmdLine:
    - python2 -m pip install ipykernel &&     python2 -m ipykernel install --user
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install ipykernel &&     python3 -m ipykernel install --user
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     fonts-dejavu     gfortran     libxml2-dev     gcc
      && apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common python3-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:marutter/rrutter
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get install -y r-base-core r-base r-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ',
      'devtools', 'uuid', 'digest'), repos = 'http://cran.us.r-project.org')"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update && apt install -y libcurl4-openssl-dev libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages(c('devtools'), repos = 'http://cran.us.r-project.org')"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "devtools::install_github('IRkernel/IRkernel')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "IRkernel::installspec()"
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_SPARK_VERSION
      Value: 2.4.0
    Name: env
  - CmdLine:
    - add-apt-repository ppa:openjdk-r/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends openjdk-8-jre-headless wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - http://mirrors.standaloneinstaller.com/apache/spark/spark-${APACHE_SPARK_VERSION}/spark-${APACHE_SPARK_VERSION}-bin-hadoop2.7.tgz
      |tar -xz -C /usr/local/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local && ln -s spark-${APACHE_SPARK_VERSION}-bin-hadoop2.7 spark
    Name: run
    PrependShell: true
  - Env:
    - Key: SPARK_HOME
      Value: /usr/local/spark
    Name: env
  - CmdLine:
    - mkdir /usr/local/share/jupyter/kernels/pyspark
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - kernel.json
    - /usr/local/share/jupyter/kernels/pyspark/
  - Name: volume
    Volumes:
    - /data
  - Name: workdir
    Path: /data
  - Name: expose
    Ports:
    - "8888"
  - Env:
    - Key: PEM_FILE
      Value: /key.pem
    Name: env
  - Env:
    - Key: BASEURL
      Value: jupyterogen
    Name: env
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gcc g++ make python-magic python3-magic
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&      echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&      apt-get update && apt-get -y install yarn
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - pip install toree pixiedust pyyaml ipympl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y texlive texlive-latex-extra texlive-xetex pandoc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://dl.google.com/go/go1.11.linux-amd64.tar.gz | tar -xz -C /usr/local/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/go
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/go/bin
    Name: env
  - Env:
    - Key: GOPATH
      Value: /root/go
    Name: env
  - CmdLine:
    - apt install -y git libzmq3-dev inkscape
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/gopherdata/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/share/jupyter/kernels/gophernotes
    Name: run
    PrependShell: true
  - CmdLine:
    - cp $GOPATH/src/github.com/gopherdata/gophernotes/kernel/* /usr/local/share/jupyter/kernels/gophernotes
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/root/go/bin
    Name: env
  - CmdLine:
    - jupyter toree install --spark_home=${SPARK_HOME} --interpreters=Scala,SQL,SparkR
      --kernel_name='Spark'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install jupyterlab && pip2 install jupyterlab
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install ipympl && pip3 install ipympl
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ipython.sh
    - /
  - CmdLine:
    - chmod u+x /ipython.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - banner.txt
    - /
  - CmdLine:
    - /ipython.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
