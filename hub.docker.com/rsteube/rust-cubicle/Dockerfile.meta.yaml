MetaArgs: null
Stages:
- BaseName: codercom/code-server
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - apt-get update  && export DEBIAN_FRONTEND=noninteractive  && apt-get install
      -y expect                        unzip                        curl                        gcc                        libssl-dev                        musl-dev                        pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.cargo/bin/
    Name: env
  - Env:
    - Key: TARGET
      Value: x86_64-unknown-linux-musl
    Name: env
  - CmdLine:
    - rustup default nightly
    Name: run
    PrependShell: true
  - CmdLine:
    - rustup target add x86_64-unknown-linux-musl --toolchain=nightly
    Name: run
    PrependShell: true
  - Env:
    - Key: HOST
      Value: x86_64-unknown-linux-musl
    Name: env
  - CmdLine:
    - cargo install cargo-watch
    Name: run
    PrependShell: true
  - CmdLine:
    - cargo install cargo-add
    Name: run
    PrependShell: true
  - CmdLine:
    - rustup component add --toolchain stable rls rust-analysis rust-src
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vsix-add
    - ext
    - rls-build
    - /usr/local/bin/
  - CmdLine:
    - ext install rust-lang.rust 0.5.3
    Name: run
    PrependShell: true
  - Env:
    - Key: CARGO_TARGET_DIR
      Value: /root/target
    Name: env
  - Expression: RUN mkdir src && touch src/lib.rs && echo 'fn main() {}' > src/main.rs
    Name: onbuild
  - Expression: ADD Cargo.lock Cargo.toml ./
    Name: onbuild
  - Expression: RUN cargo build
    Name: onbuild
  - Expression: RUN cargo build --tests
    Name: onbuild
  - Expression: RUN rls-build
    Name: onbuild
  From:
    Image: codercom/code-server
  Name: ""
  Platform: ""
  SourceCode: FROM codercom/code-server
