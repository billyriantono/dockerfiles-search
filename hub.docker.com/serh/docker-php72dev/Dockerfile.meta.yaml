MetaArgs: null
Stages:
- BaseName: php:7.2-fpm
  Commands:
  - CmdLine:
    - apt-get update -y && apt-get install -y libpng-dev libsqlite3-dev libjpeg62-turbo-dev
      libfreetype6-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install gd pdo pdo_sqlite exif pdo_mysql zip mysqli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_pgsql
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mysql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y net-tools vim
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y procps
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nmap mc tmux screen
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y dnsutils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gnupg2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer   && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"
    Name: run
    PrependShell: true
  - CmdLine:
    - php /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libmagickwand-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick-beta
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=imagick.so" > /usr/local/etc/php/conf.d/ext-imagick.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - echo  "xdebug.remote_port=9000 \nxdebug.remote_enable=on \nxdebug.remote_log=/var/log/xdebug.log
      " >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/log/xdebug.log
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ssmtp
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[mail function]\nsendmail_path = /usr/sbin/ssmtp -t" > /usr/local/etc/php/conf.d/sendmail.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mailhub=mailcatcher:1025\nUseTLS=NO\nFromLineOverride=YES" > /etc/ssmtp/ssmtp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo  "syntax on \nautocmd FileType php set omnifunc=phpcomplete#CompletePHP
      \nset number \n:set encoding=utf-8 \n:set fileencoding=utf-8"  >> /root/.vimrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install cron
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /etc/cron.d/crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0644 /etc/cron.d/crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - service cron start
    Name: run
    PrependShell: true
  From:
    Image: php:7.2-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm
