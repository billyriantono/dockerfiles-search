MetaArgs:
- DefaultValue: null
  Key: IMAGE_ARG_KIBANA_IMAGE_NAME
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: IMAGE_ARG_KIBANA_IMAGE_VERSION
  ProvidedValue: null
  Value: null
Stages:
- As: base
  BaseName: docker.elastic.co/kibana/${IMAGE_ARG_KIBANA_IMAGE_NAME:-kibana}:${IMAGE_ARG_KIBANA_IMAGE_VERSION:-5.6.10}
  Commands: null
  From:
    Image: docker.elastic.co/kibana/${IMAGE_ARG_KIBANA_IMAGE_NAME:-kibana}:${IMAGE_ARG_KIBANA_IMAGE_VERSION:-5.6.10}
  Name: base
  Platform: ""
  SourceCode: FROM docker.elastic.co/kibana/${IMAGE_ARG_KIBANA_IMAGE_NAME:-kibana}:${IMAGE_ARG_KIBANA_IMAGE_VERSION:-5.6.10}
    as base
- BaseName: scratch
  Commands:
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /
    - /
  - Name: expose
    Ports:
    - "5601"
  - Name: workdir
    Path: /usr/share/kibana
  - Env:
    - Key: ELASTIC_CONTAINER
      Value: "true"
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/share/kibana/bin:$PATH
    Name: env
  - CmdLine:
    - set -ex   && ls -la /usr/share/kibana   && chown kibana:kibana /usr/share/kibana/   &&
      mkdir -p /usr/share/kibana/log   && chown --recursive kibana:kibana config/
      data/ log/ optimize/ plugins/
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  - CmdLine:
    - set -ex   && kibana-plugin remove x-pack
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - /usr/local/bin/kibana-docker
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
