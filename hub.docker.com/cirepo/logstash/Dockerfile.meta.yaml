MetaArgs:
- DefaultValue: null
  Key: IMAGE_ARG_LOGSTASH_IMAGE_NAME
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: IMAGE_ARG_LOGSTASH_IMAGE_VERSION
  ProvidedValue: null
  Value: null
Stages:
- As: base
  BaseName: docker.elastic.co/logstash/${IMAGE_ARG_LOGSTASH_IMAGE_NAME:-logstash}:${IMAGE_ARG_LOGSTASH_IMAGE_VERSION:-5.6.10}
  Commands: null
  From:
    Image: docker.elastic.co/logstash/${IMAGE_ARG_LOGSTASH_IMAGE_NAME:-logstash}:${IMAGE_ARG_LOGSTASH_IMAGE_VERSION:-5.6.10}
  Name: base
  Platform: ""
  SourceCode: FROM docker.elastic.co/logstash/${IMAGE_ARG_LOGSTASH_IMAGE_NAME:-logstash}:${IMAGE_ARG_LOGSTASH_IMAGE_VERSION:-5.6.10}
    as base
- BaseName: scratch
  Commands:
  - Chown: ""
    From: base
    Name: copy
    SourcesAndDest:
    - /
    - /
  - Chown: logstash:logstash
    From: ""
    Name: copy
    SourcesAndDest:
    - docker
    - /
  - Env:
    - Key: ELASTIC_CONTAINER
      Value: "true"
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/share/logstash/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: '''en_US.UTF-8'''
    - Key: LC_ALL
      Value: '''en_US.UTF-8'''
    Name: env
  - Name: workdir
    Path: /usr/share/logstash
  - CmdLine:
    - set -ex   && chown logstash:logstash /usr/share/logstash/   && mkdir -p /usr/share/logstash/log   &&
      chown --recursive logstash:logstash config/ data/ log/ pipeline/
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && /usr/share/logstash/bin/logstash-plugin remove x-pack
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && /usr/share/logstash/bin/logstash-plugin install logstash-filter-multiline   &&
      /usr/share/logstash/bin/logstash-plugin list
    Name: run
    PrependShell: true
  - Name: user
    User: logstash
  - Name: expose
    Ports:
    - "5044"
    - "9600"
  - CmdLine:
    - /usr/local/bin/docker-entrypoint
    Name: entrypoint
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
