MetaArgs: null
Stages:
- BaseName: scratch
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ubuntu-xenial-core-cloudimg-amd64-root.tar.gz
    - /
  - CmdLine:
    - "set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101'
      >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert
      --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl
      \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io'
      > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm
      -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
      || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke
      { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&&
      echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean
      \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages
      \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order::
      \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant
      \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /run/systemd && echo 'docker' > /run/systemd/container
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x;         apt-get update         && apt-get install -y --no-install-recommends         locales         fontconfig         fonts-wqy-zenhei         fonts-wqy-microhei         curl         wget         vim         python         python-pip         python3         python3-pip         python-setuptools         python3-setuptools         tree
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wheel -i https://pypi.tuna.tsinghua.edu.cn/simple
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install wheel -i https://pypi.tuna.tsinghua.edu.cn/simple
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Shanghai
    - /etc/localtime
  - CmdLine:
    - echo 'Asia/Shanghai' > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen zh_CN.UTF-8 &&   DEBIAN_FRONTEND=noninteractive dpkg-reconfigure
      locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen zh_CN.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: zh_CN.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: zh_CN:zh
    Name: env
  - Env:
    - Key: LC_ALL
      Value: zh_CN.UTF-8
    Name: env
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
