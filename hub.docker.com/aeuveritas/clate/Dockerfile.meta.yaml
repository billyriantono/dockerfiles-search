MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     build-essential     git     curl     wget     python3-dev     python3-pip     diffutils     libboost-all-dev     software-properties-common    autoconf     bison     flex     gperf     libtool-bin     texinfo     ncurses-dev     cmake     zlib1g-dev     ninja-build     xz-utils     neovim     apt-transport-https     ca-certificates     libssl-dev     unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install g++-8 -y     && rm /usr/bin/g++     && ln -s /usr/bin/g++-8
      /usr/bin/g++
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/Z3Prover/z3.git     && cd z3     && git checkout
      -b z3-4.8.4 z3-4.8.4     && python scripts/mk_make.py     && cd build     &&
      make -j15     && make install     && cd ../..     && rm -rf z3
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -c http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz     &&
      tar xvf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz     && rm -rf
      clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz     && mv clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04
      /llvm     && git clone --depth=1 --recursive https://github.com/MaskRay/ccls     &&
      cd ccls     && cmake -H. -BRelease -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=lld
      -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/llvm     && ninja -C Release
      install && cd ..     && rm -rf ccls
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /llvm/bin:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /llvm/lib:$LD_LIBRARY_PATH
    Name: env
  - CmdLine:
    - apt-get install virtualenv -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pep8
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 10.16.0
    Name: env
  - CmdLine:
    - mkdir -p $NVM_DIR &&     curl https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh
      | bash &&     . $NVM_DIR/nvm.sh &&     nvm install $NODE_VERSION &&     nvm
      alias default $NODE_VERSION &&     nvm use default
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get install -y     sshpass     openssh-server
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - CmdLine:
    - echo "* hard nofile 773280" >> /etc/security/limits.conf     && echo "* soft
      nofile 773280" >> /etc/security/limits.conf     && echo "fs.inotify.max_user_watches=524288"
      >> /etc/sysctl.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PATH=\"$PATH\"" > /etc/environment
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
