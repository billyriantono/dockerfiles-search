MetaArgs:
- DefaultValue: bionic
  Key: os_version
  ProvidedValue: null
  Value: bionic
Stages:
- BaseName: ubuntu:${os_version}
  Commands:
  - Maintainer: Mijail Molina Lavrishcheva <mijail@edutin.com>
    Name: maintainer
  - Labels:
    - Key: maintainer
      Value: '"Mijail Molina Lavrishcheva <mijail@edutin.com>"'
    Name: label
  - Labels:
    - Key: '"com.edutin"'
      Value: '"Edutin Inc."'
    Name: label
  - Labels:
    - Key: version
      Value: '"1.1"'
    Name: label
  - Labels:
    - Key: description
      Value: '" Docker image with a set of tools to create and maintain a EKS Kubernetes
        cluster."'
    Name: label
  - Key: CONFIGS_DIR
    Name: arg
    Value: ${HOME}/.edutin/configs
  - Key: PYTHON_REQ_FILE
    Name: arg
    Value: ${CONFIGS_DIR}/python-requeriments.txt
  - Key: AWS_IAM_AUTH_VERSION
    Name: arg
    Value: 1.12.7/2019-03-27
  - Key: AWS_IAM_AUTH_URL
    Name: arg
    Value: '"https://amazon-eks.s3-us-west-2.amazonaws.com/${AWS_IAM_AUTH_VERSION}/bin/linux/amd64/aws-iam-authenticator"'
  - Key: EKSCTL_VERSION
    Name: arg
    Value: latest_release
  - Key: EKSCTL_URL
    Name: arg
    Value: '"https://github.com/weaveworks/eksctl/releases/download/${EKSCTL_VERSION}/eksctl_linux_amd64.tar.gz"'
  - Key: KUBECTL_VERSION
    Name: arg
    Value: 1.12.7/2019-03-27
  - Key: KUBECTL_URL
    Name: arg
    Value: '"https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"'
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/python-requeriments.txt
    - ${CONFIGS_DIR}/
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends                        python3                        python3-distutils                        ca-certificates                        openssh-client                        curl                        nano                        groff                        less                        unzip                        make                        git                        gpg                        jq                        bash-completion
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py --output - | python
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir --upgrade -r ${PYTHON_REQ_FILE}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/lists/* &&     rm -rf /var/log/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${HOME}/bin &&     echo 'export PATH=${HOME}/bin:${PATH}' >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/update-kubeconfig
    - /root/bin/
  - CmdLine:
    - echo '\nset fill -4 \nset linenumbers \nset mouse \nset nonewlines \nset smooth
      \nset tabstospaces \nset titlecolor black,blue \nset statuscolor black,blue
      \nset selectedcolor black,yellow \nset numbercolor brightyellow \nset keycolor
      cyan \nset functioncolor blue' >> /etc/nanorc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'PS1="${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\u@\h:\[\033[00m\]\W\[\033[01;34m\]\\\\\$
      \[\033[00m\]"' >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o kubectl -L ${KUBECTL_URL} &&     chmod +x kubectl &&     mv kubectl
      ${HOME}/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o aws-iam-authenticator -L ${AWS_IAM_AUTH_URL} &&     chmod +x aws-iam-authenticator
      &&     mv aws-iam-authenticator ${HOME}/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L ${EKSCTL_URL} | tar xz -C ${HOME}/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://git.io/get_helm.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/^#force_color/force_color/g" ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '\nsource /etc/bash_completion \nsource <(kubectl completion bash) \nsource
      <(eksctl completion bash) \nsource <(helm completion bash) \ncomplete -C "/usr/local/bin/aws_completer"
      aws'  >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: /root
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:${os_version}
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:${os_version}
