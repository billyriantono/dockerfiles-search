MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Key: CERTBOT_VERSION
    Name: arg
    Value: '"0.26.1"'
  - Key: CERTBOT_DNS_PLUGIN_VERSION
    Name: arg
    Value: '"0.26.1"'
  - Key: GCLOUD_VERSION
    Name: arg
    Value: '"210.0.0"'
  - Key: COMPRESSED
    Name: arg
    Value: "false"
  - Env:
    - Key: CERTBOT_DNS_PLUGIN_VERSION
      Value: '"${CERTBOT_VERSION}"'
    - Key: CERTBOT_VERSION
      Value: '"${CERTBOT_DNS_PLUGIN_VERSION}"'
    - Key: GCLOUD_VERSION
      Value: '"${GCLOUD_VERSION}"'
    Name: env
  - CmdLine:
    - apk --no-cache add python2 py2-pip openssl &&     apk --no-cache add --virtual
      .build-deps musl-dev gcc python2-dev libffi-dev openssl-dev wget &&     pip
      install --no-cache-dir certbot==${CERTBOT_VERSION} certbot-dns-cloudflare==${CERTBOT_DNS_PLUGIN_VERSION}
      PyYAML &&     mkdir /opt &&     if [ "$COMPRESSED" = true ]; then         wget
      https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz
      -O /tmp/google-cloud-sdk.tar.gz;     else         wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz
      -O- | tar -xzf - -C /tmp &&         mv /tmp/google-cloud-sdk /opt/google;     fi
      &&     apk --no-cache del .build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.py
    - deploy_providers.py
    - deploy_hook.py
    - /opt/
  - CmdLine:
    - /opt/init.py
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
