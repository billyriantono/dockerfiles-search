MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: actanble <actanble@gmail.com>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e '/mirrors.cloud.aliyuncs.com/d' -e '/mirrors.aliyuncs.com/d' /etc/yum.repos.d/CentOS-Base.repo
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
    Name: run
    PrependShell: true
  - CmdLine:
    - yum makecache
    Name: run
    PrependShell: true
  - Env:
    - Key: TENGINE_VERSION
      Value: 2.3.2
    Name: env
  - Env:
    - Key: DEPLOY_PATH
      Value: /usr/local/src/nginx_waf
    Name: env
  - CmdLine:
    - mkdir -p ${DEPLOY_PATH}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${DEPLOY_PATH}
  - Name: workdir
    Path: ${DEPLOY_PATH}
  - CmdLine:
    - yum -y install wget curl git
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install autoconf automake bzip2          flex httpd-devel libaio-devel yajl
      yajl-devel          libass-devel libjpeg-turbo-devel libpng12-devel          libtheora-devel
      libtool libva-devel libvdpau-devel          libvorbis-devel libxml2-devel libxslt-devel          perl
      texi2html unzip zip openssl lua lua-devel lmdb lmdb-devel          openssl-devel
      geoip geoip-devel ssdeep ssdeep-devel gcc-c++          gd-devel GeoIP GeoIP-devel
      GeoIP-data doxygen libxml2 libxml2-dev zlib-devel          perl perl-devel perl-ExtUtils-Embed
      redhat-rpm-config -y
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/gperftools/gperftools && cd gperftools && sh autogen.sh
      && ./configure && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/openresty/luajit2 && cd luajit2 &&  make && make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/alibaba/tengine/archive/${TENGINE_VERSION}.zip  && unzip
      ${TENGINE_VERSION}.zip -d ${DEPLOY_PATH}
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/SpiderLabs/ModSecurity.git         &&  cd ModSecurity          &&  /bin/bash
      build.sh          && yum install -y https://archives.fedoraproject.org/pub/archive/fedora/linux/updates/23/x86_64/b/bison-3.0.4-3.fc23.x86_64.rpm         &&  git
      submodule init          &&  git submodule update          &&  ./configure         &&
      make && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: MODSECURITY_INC
      Value: ${DEPLOY_PATH}/ModSecurity/headers/
    Name: env
  - Env:
    - Key: MODSECURITY_LIB
      Value: ${DEPLOY_PATH}/ModSecurity/src/.libs/
    Name: env
  - CmdLine:
    - git clone https://github.com/SpiderLabs/ModSecurity-nginx.git ;
    Name: run
    PrependShell: true
  - CmdLine:
    - cd tengine-${TENGINE_VERSION} &&     ./configure --prefix=/usr/share/nginx        --with-http_lua_module        --with-luajit-lib=/usr/local/lib/        --with-luajit-inc=/usr/local/include/luajit-2.1/        --with-lua-inc=/usr/local/include/luajit-2.1/
      --sbin-path=/usr/sbin/nginx         --modules-path=/usr/lib64/nginx/modules         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --http-client-body-temp-path=/var/lib/nginx/tmp/client_body         --http-proxy-temp-path=/var/lib/nginx/tmp/proxy         --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi         --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi         --http-scgi-temp-path=/var/lib/nginx/tmp/scgi         --pid-path=/var/run/nginx.pid         --lock-path=/run/lock/subsys/nginx         --user=nginx         --group=nginx         --with-file-aio         --with-ipv6         --with-http_auth_request_module         --with-http_ssl_module         --with-http_v2_module         --with-http_realip_module         --with-http_addition_module         --with-http_xslt_module=dynamic         --with-http_image_filter_module=dynamic         --with-http_geoip_module=dynamic         --with-http_sub_module         --with-http_dav_module         --with-http_flv_module         --with-http_mp4_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_random_index_module         --with-http_secure_link_module         --with-http_degradation_module         --with-http_slice_module         --with-http_stub_status_module         --with-http_perl_module=dynamic         --with-mail=dynamic         --with-mail_ssl_module         --with-pcre
      --with-pcre-jit         --with-stream=dynamic         --with-stream_ssl_module         --with-stream_geoip_module=dynamic         --with-google_perftools_module         --with-debug         --with-cc-opt="-O2
      -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong
      --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1
      -m64 -mtune=generic "         --with-ld-opt="-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld
      -Wl,-E"         --add-module=../ModSecurity-nginx && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.1.0.zip
      && unzip v3.1.0.zip -d /opt/ && mv /opt/owasp-modsecurity-crs-3.1.0 /opt/owasp-modsecurity-crs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "\033[46;30m *****Link some Libs****** \033[0m"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/lib/nginx/tmp/ /spool/log/nginx;
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ${DEPLOY_PATH}/ModSecurity/unicode.mapping /etc/nginx ;
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sv `find / -type f -name "libprofiler.so*" | grep /usr/local/lib` /lib64/libprofiler.so.0
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sv `find / -type f -name "libluajit-5.1.so*" | grep /usr/local/lib` /lib64/libluajit-5.1.so.2
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sv /usr/local/modsecurity/lib/libmodsecurity.so.3 /lib64/libmodsecurity.so.3
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -s /sbin/nologin -M nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -R ./nginx.conf.d/*  /etc/nginx/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/
  - CmdLine:
    - yum -y install supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisor_ngx.conf
    - /etc/supervisord.conf
  - CmdLine:
    - rm -rf ${DEPLOY_PATH}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/
  - Name: user
    User: root
  - CmdLine:
    - '["/usr/bin/supervisord", ''-c'', ''/etc/supervisord.conf'']'
    Name: cmd
    PrependShell: true
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: From centos:7
