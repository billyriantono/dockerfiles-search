MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.12.4
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.4.6
    Name: env
  - Env:
    - Key: TERRATEST_LOG_PARSER_VERSION
      Value: 0.17.5
    Name: env
  - Env:
    - Key: TERRAFORM_DOCS_VERSION
      Value: v0.6.0
    Name: env
  - Env:
    - Key: TF_TEST_PATH
      Value: /terraform-test
    Name: env
  - CmdLine:
    - mkdir -p ${TF_TEST_PATH}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin
    - ${TF_TEST_PATH}/bin
  - CmdLine:
    - chmod +x ${TF_TEST_PATH}/bin/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${TF_TEST_PATH}/bin:$PATH
    Name: env
  - CmdLine:
    - apk update  && apk upgrade  && apk add curl gnupg go git unzip bash libssl1.1
      libcrypto1.1 libffi-dev build-base linux-headers zlib-dev openssl-dev readline-dev
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pgp_keys.asc
    - .
  - CmdLine:
    - curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip  &&
      curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_SHA256SUMS  &&
      cat pgp_keys.asc | gpg --import  && curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_SHA256SUMS.sig  &&
      gpg --verify terraform_${TERRAFORM_VERSION}_SHA256SUMS.sig terraform_${TERRAFORM_VERSION}_SHA256SUMS  &&
      sha256sum -c terraform_${TERRAFORM_VERSION}_SHA256SUMS 2>&1 | grep "${TERRAFORM_VERSION}_linux_amd64.zip:\sOK"  &&
      unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin  && rm
      -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Os https://github.com/segmentio/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64  &&
      mv terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64 /usr/local/bin/terraform-docs
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: $HOME/go
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH
    Name: env
  - Env:
    - Key: RBENV_ROOT
      Value: /usr/local/rbenv
    Name: env
  - Env:
    - Key: RUBY_CONFIGURE_OPTS
      Value: --disable-install-doc
    Name: env
  - CmdLine:
    - git clone https://github.com/rbenv/rbenv.git /usr/local/rbenv  && echo 'eval
      "$(rbenv init -)"' >> /etc/profile.d/rbenv.sh  && mkdir -p "$(rbenv root)"/plugins  &&
      git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv install ${RUBY_VERSION}  && rbenv rehash  && rbenv global ${RUBY_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - gem update --system && gem install --force bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --location --silent --fail --show-error -o terratest_log_parser https://github.com/gruntwork-io/terratest/releases  &&
      chmod +x terratest_log_parser  && mv terratest_log_parser /usr/local/bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /work
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
