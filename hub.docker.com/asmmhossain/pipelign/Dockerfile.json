{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.19",
      "SourceCode": "FROM phusion/baseimage:0.9.19",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.19"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo en_US.UTF-8 \u003e /etc/container_environment/LANGUAGE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo en_US.UTF-8 \u003e /etc/container_environment/LANG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo en_US.UTF-8 \u003e /etc/container_environment/LC_ALL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo UTF-8 \u003e /etc/container_environment/PYTHONIOENCODING"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Maintainer": "Simon Frost \u003csdwfrost@gmail.com\u003e and Mukarram Hossain \u003cmukarram819@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "useradd docker \t\u0026\u0026 mkdir /home/docker \t\u0026\u0026 chown docker:docker /home/docker \t\u0026\u0026 mkdir /home/docker/programs \t\u0026\u0026 addgroup docker staff"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends  \tbuild-essential  \tpython3-dev \tgit \twget \tcmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://ftp.gnu.org/gnu/parallel/parallel-20170122.tar.bz2 \u0026\u0026   bzip2 -d parallel-20170122.tar.bz2 \u0026\u0026   tar -xvf parallel-20170122.tar \u0026\u0026   cd parallel-20170122 \u0026\u0026   ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   cd ../ \u0026\u0026   rm -r parallel-20170122.tar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/ncbi-blast-2.6.0+-x64-linux.tar.gz \u0026\u0026   tar -xvzf ncbi-blast-2.6.0+-x64-linux.tar.gz \u0026\u0026   cp ../ncbi-blast-2.6.0+/bin/* ../bin/ \u0026\u0026   rm ../ncbi-blast-2.6.0+-x64-linux.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026 \tpython3 get-pip.py \u0026\u0026 \trm get-pip.py\t\u0026\u0026 \tpip3 install numpy \u0026\u0026 \tpip3 install biopython \u0026\u0026 \tpip3 install joblib \u0026\u0026 \tpip3 install --upgrade ete3 \u0026\u0026 \tpip3 install scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/docker/programs \u0026\u0026 \tgit clone https://github.com/weizhongli/cdhit \u0026\u0026 \tcd cdhit \u0026\u0026 \tmake \u0026\u0026 \tcp cd-hit-est /usr/local/bin \u0026\u0026 \tcp cd-hit /usr/local/bin \u0026\u0026 \trm -rf /home/docker/programs/cdhit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/docker/programs \u0026\u0026 \tgit clone https://github.com/Cibiv/IQ-TREE.git \u0026\u0026 \tcd IQ-TREE \u0026\u0026 \tmkdir build \u0026\u0026 \tcd build \u0026\u0026 \tcmake -DIQTREE_FLAGS=omp .. \u0026\u0026 \tmake \u0026\u0026 \tcp iqtree-omp /usr/local/bin \u0026\u0026 \trm -rf /home/docker/programs/IQ-TREE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/docker/programs \u0026\u0026 \twget http://mafft.cbrc.jp/alignment/software/mafft-7.294-without-extensions-src.tgz \u0026\u0026 \ttar zxvf mafft-7.294-without-extensions-src.tgz \u0026\u0026 \tcd mafft-7.294-without-extensions/core \u0026\u0026 \tmake clean \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \trm /home/docker/programs/mafft-7.294-without-extensions-src.tgz \u0026\u0026 \trm -rf /home/docker/programs/mafft-7.294-without-extensions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/docker/programs \u0026\u0026 \twget http://eddylab.org/software/hmmer3/3.1b2/hmmer-3.1b2.tar.gz \u0026\u0026 \ttar zxvf ./hmmer-3.1b2.tar.gz \u0026\u0026 \tcd hmmer-3.1b2 \u0026\u0026 \t./configure \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \trm /home/docker/programs/hmmer-3.1b2.tar.gz \u0026\u0026 \trm -rf /home/docker/programs/hmmer-3.1b2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/docker/programs \u0026\u0026 \tgit clone http://github.com/asmmhossain/pipelign.git \u0026\u0026 \tcd pipelign \u0026\u0026 \tchmod +x ./Pipelign.py \u0026\u0026 \tcp ./Pipelign.py /usr/local/bin \u0026\u0026 \trm -rf /home/docker/programs/pipelign"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}