{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "google/cloud-sdk:272.0.0-alpine",
      "SourceCode": "FROM google/cloud-sdk:272.0.0-alpine",
      "Platform": "",
      "From": {
        "Image": "google/cloud-sdk:272.0.0-alpine"
      },
      "Commands": [
        {
          "Key": "DOCKER_VERSION",
          "Name": "arg",
          "Value": "18.09.6"
        },
        {
          "Key": "HELM_VERSION",
          "Name": "arg",
          "Value": "v2.14.0"
        },
        {
          "Env": [
            {
              "Key": "HELM_FILENAME",
              "Value": "helm-${HELM_VERSION}-linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add openssl gettext jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl     \u0026\u0026 chmod +x ./kubectl     \u0026\u0026 mv ./kubectl /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://storage.googleapis.com/kubernetes-helm/${HELM_FILENAME} | tar xz     \u0026\u0026 mv linux-amd64/helm /bin/helm     \u0026\u0026 rm -rf linux-amd64     \u0026\u0026 helm init --client-only"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz     \u0026\u0026 tar -xz -C /tmp -f /tmp/docker-$VER.tgz     \u0026\u0026 mv /tmp/docker/* /usr/local/bin/ \u0026\u0026 docker version || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fLSs https://circle.ci/cli | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update     'nodejs=10.16.3-r0'     'npm=10.16.3-r0'     'yarn=1.16.0-r0'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gcloud components install beta cloud_sql_proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add mysql-client postgresql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}