{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "eromoe|mithril",
          "Name": "maintainer"
        },
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": "\"3.6\""
        },
        {
          "Key": "DARK_THEME",
          "Name": "arg",
          "Value": "0"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y build-essential libcurl4-openssl-dev libxml2-dev libxslt1-dev libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y locales \u0026\u0026 locale-gen \"en_US.UTF-8\" \u0026\u0026 dpkg-reconfigure -f noninteractive locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo     \u0026\u0026 echo 'LANG=en_US.UTF-8' \u003e\u003e /etc/environment     \u0026\u0026 echo 'LANGUAGE=en_US:en' \u003e\u003e /etc/environment     \u0026\u0026 echo 'LC_ALL=en_US.UTF-8' \u003e\u003e /etc/environment     \u0026\u0026 echo 'PYTHONIOENCODING=utf-8' \u003e\u003e /etc/environment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common \u0026\u0026     add-apt-repository -y ppa:deadsnakes/ppa \u0026\u0026     apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python${PYTHON_VERSION}-dev wget git vim curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "get-pip.py",
            "/tmp/get-pip.py"
          ]
        },
        {
          "CmdLine": [
            "python /tmp/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     ipython     jupyter     jupyterthemes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.jupyter/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/run_jupyter.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "update_source.sh",
            "/tmp/update_source.sh"
          ]
        },
        {
          "CmdLine": [
            "bash /tmp/update_source.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo   \u0026\u0026 echo '[global]' \u003e\u003e /etc/pip.conf   \u0026\u0026 echo 'index-url = https://mirrors.aliyun.com/pypi/simple' \u003e\u003e /etc/pip.conf   \u0026\u0026 echo \"registry = https://registry.npm.taobao.org\" \u003e\u003e /etc/npmrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PIP_INDEX_URL",
              "Value": "\"https://mirrors.aliyun.com/pypi/simple\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}