{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dimdm/node:6.11.5",
      "SourceCode": "FROM dimdm/node:6.11.5",
      "Platform": "",
      "From": {
        "Image": "dimdm/node:6.11.5"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./node_modules",
            "/root/.c9/node_modules"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./plugins",
            "/root/.c9/plugins"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./local",
            "/root/.c9/local"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.js*",
            "/root/.c9/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./settings",
            "/root/.c9/settings"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./configs",
            "/root/.c9/configs"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./user-plugins",
            "/root/.c9/user-plugins"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/.c9"
        },
        {
          "CmdLine": [
            "apk --no-cache update \u0026\u0026 apk --no-cache upgrade \u0026\u0026 apk --no-cache add       git       docker       build-base       openssl       gnupg       gcc       gdb       python       py-pip       python-dev       bash       wget       curl       tar       htop       iotop       tmux \u0026\u0026    pip install -U       pip       ikpdb       virtualenv       docker-compose \u0026\u0026    npm install -g        typescript       less       sass       stylus       nodemon       bower       http-server       npm-check-updates       nsp       underscore-cli       express-generator       mocha       eslint       jshint       grunt-cli       gulp       yarn       yo \u0026\u0026   find -path node_modules -prune -type d -print0 | xargs -t -I {} cd {} \u0026\u0026 npm install \u0026\u0026    cd /root/.c9 \u0026\u0026    npm install \u0026\u0026    mkdir -p /root/.c9/node/bin/ \u0026\u0026    ln -s `which node` /root/.c9/node/bin/node \u0026\u0026    ln -s `which npm` /root/.c9/node/bin/npm \u0026\u0026    echo \"#!/usr/bin/env bash\" \u003e /root/.c9/start \u0026\u0026    echo \"node /root/.c9/server.js -p 8181 -a : $*\" \u003e\u003e /root/.c9/start \u0026\u0026    chmod +x /root/.c9/start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IP",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "8181"
          ]
        },
        {
          "CmdLine": [
            "/root/.c9/start"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}