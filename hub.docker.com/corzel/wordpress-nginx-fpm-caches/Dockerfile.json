{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitnami/minideb:jessie",
      "SourceCode": "FROM bitnami/minideb:jessie",
      "Platform": "",
      "From": {
        "Image": "bitnami/minideb:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Mario Monroy \u003csoporte@culturaenlinea.net\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "install_packages apt-transport-https ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_packages \t\t\t\t\t\tprocps \t\t\t\t\t\tcurl \t\t\t\t\t\tgit \t\t\t\t\t\tiproute2 \t\t\t\t\t\tcron \t\t\t\t\t\tsupervisor \t\t\t\t\t\tunattended-upgrades \t\t\t\t\t\tfail2ban \t\t\t\t\t\tmysql-client \t\t\t\t\t\tufw \t\t\t\t\t\trsyslog \t\t\t\t\t\tlogrotate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /etc/apt/trusted.gpg.d/php.gpg -fsSL https://packages.sury.org/php/apt.gpg \t\u0026\u0026 echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" | tee /etc/apt/sources.list.d/php.list \t\u0026\u0026 install_packages php$PHP_VERSION \t\t\t\t\t\tphp$PHP_VERSION-fpm \t\t\t\t\t\tphp$PHP_VERSION-cli \t\t\t\t\t\tphp$PHP_VERSION-mysql \t\t\t\t\t\tphp$PHP_VERSION-gd \t\t\t\t\t\tphp$PHP_VERSION-intl \t\t\t\t\t\tphp$PHP_VERSION-imagick \t\t\t\t\t\tphp$PHP_VERSION-imap \t\t\t\t\t\tphp$PHP_VERSION-mcrypt \t\t\t\t\t\tphp$PHP_VERSION-pspell \t\t\t\t\t\tphp$PHP_VERSION-recode \t\t\t\t\t\tphp$PHP_VERSION-tidy \t\t\t\t\t\tphp$PHP_VERSION-xml \t\t\t\t\t\tphp$PHP_VERSION-json \t\t\t\t\t\tphp$PHP_VERSION-opcache \t\t\t\t\t\tphp$PHP_VERSION-mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_packages build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev nginx-common \t\t\u0026\u0026 GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t\t\u0026\u0026 cd /tmp \t\t\u0026\u0026 curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \t\t\u0026\u0026 curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc \t\t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\t\u0026\u0026 found=''; \t\tfor server in \t\t\tha.pool.sks-keyservers.net \t\t\thkp://keyserver.ubuntu.com:80 \t\t\thkp://p80.pool.sks-keyservers.net:80 \t\t\tpgp.mit.edu \t\t; do \t\t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \u0026\u0026 found=yes \u0026\u0026 break; \t\tdone; \t\ttest -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $GPG_KEYS\" \u0026\u0026 exit 1; \t\tgpg --batch --verify nginx-$NGINX_VERSION.tar.gz.asc nginx-$NGINX_VERSION.tar.gz \t\t\u0026\u0026 rm -r \"$GNUPGHOME\" nginx-$NGINX_VERSION.tar.gz.asc \t\t\u0026\u0026 tar xzvf nginx-$NGINX_VERSION.tar.gz \t\t\u0026\u0026 curl -o ngx_cache_purge-2.3.tar.gz -fsSL https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz \t\t\u0026\u0026 tar xzvf ngx_cache_purge-2.3.tar.gz \t\t\u0026\u0026 cd /tmp/nginx-$NGINX_VERSION \t\t\u0026\u0026 ./configure --prefix=/usr/share/nginx \t\t--with-cc-opt='-g -O2 -fPIE -fstack-protector-strong -Wformat \t\t-Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' \t\t--with-ld-opt='-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now' \t\t--conf-path=/etc/nginx/nginx.conf \t\t--http-log-path=/var/log/nginx/access.log \t\t--error-log-path=/var/log/nginx/error.log \t\t--lock-path=/var/lock/nginx.lock \t\t--pid-path=/run/nginx.pid \t\t--http-client-body-temp-path=/var/lib/nginx/body \t\t--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \t\t--http-proxy-temp-path=/var/lib/nginx/proxy  \t\t--with-pcre-jit \t\t--with-ipv6 \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-http_auth_request_module \t\t--with-http_geoip_module \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_v2_module \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-threads  \t\t--add-module=/tmp/ngx_cache_purge-2.3 \t\t\u0026\u0026 make \u0026\u0026 make install \t\t\u0026\u0026 ln -fs /usr/share/nginx/sbin/nginx /usr/sbin/nginx \t\t\u0026\u0026 rm -r /tmp/nginx-$NGINX_VERSION \t\t\u0026\u0026 rm -r /tmp/ngx_cache_purge-2.3 \t\t\u0026\u0026 adduser --system --no-create-home --shell /bin/false --group --disabled-login www-front \t\t\u0026\u0026 openssl dhparam -out /etc/nginx/dhparam.pem 2048 \t\t\u0026\u0026 dpkg --remove build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev \t\u0026\u0026 echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/php.list \t\u0026\u0026 apt-get update \u0026\u0026 apt-get -t jessie-backports install -y certbot \t\u0026\u0026 mkdir -p /tmp/le \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 curl -o /usr/local/bin/gosu -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 curl -o /usr/local/bin/gosu.asc -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 found=''; \tfor server in \t       ha.pool.sks-keyservers.net \t       hkp://keyserver.ubuntu.com:80 \t       hkp://p80.pool.sks-keyservers.net:80 \t       pgp.mit.edu \t; do \t       echo \"Fetching GPG key $GPG_KEYS from $server\"; \t       gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \u0026\u0026 found=yes \u0026\u0026 break; \tdone; \ttest -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $GPG_KEYS\" \u0026\u0026 exit 1; \tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-configs/*",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-configs/sites-available/nginx-site.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "misc-configs/*",
            "/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "schedulers-configs/*",
            "/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*",
            "/"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e\"s/^;opcache.enable=0/opcache.enable=1/\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e\"s/^;opcache.max_accelerated_files=2000/opcache.max_accelerated_files=4000/\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/expose_php = On/expose_php = Off/g\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/;session.cookie_secure\\s*=\\s*/session.cookie_secure = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/session.cookie_httponly\\s*=\\s*/session.cookie_httponly = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \t\u0026\u0026 sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/$PHP_VERSION/fpm/php-fpm.conf \t\u0026\u0026 sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \t\u0026\u0026 sed -i -e \"s/listen\\s*=\\s*\\/run\\/php\\/php$PHP_VERSION-fpm.sock/listen = 127.0.0.1:9000/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \t\u0026\u0026 sed -i -e \"s/;listen.allowed_clients\\s*=\\s*127.0.0.1/listen.allowed_clients = 127.0.0.1/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \t\u0026\u0026 sed -i -e \"s/;access.log\\s*=\\s*log\\/\\$pool.access.log/access.log = \\/var\\/log\\/\\$pool.access.log/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \t\u0026\u0026 mkdir -p /var/run/php \u0026\u0026 chown www-data:www-data /var/run/php \t\u0026\u0026 touch /run/php/php$PHP_VERSION-fpm.pid \u0026\u0026 chown www-data:www-data /run/php/php$PHP_VERSION-fpm.pid \t\u0026\u0026 touch /var/log/php$PHP_VERSION-fpm.log \u0026\u0026 chown www-data:www-data /var/log/php$PHP_VERSION-fpm.log \t\u0026\u0026 mkdir -p /var/log/nginx \t\u0026\u0026 chown -R www-front:www-front /var/log/nginx \t\u0026\u0026 touch /var/log/nginx/error.log \u0026\u0026 chown www-front:www-front /var/log/nginx/error.log \t\u0026\u0026 touch /var/log/nginx/access.log \u0026\u0026 chown www-front:www-front /var/log/nginx/access.log \t\u0026\u0026 mv /etc/supervisord.conf /etc/supervisor/supervisord.conf \t\u0026\u0026 /usr/bin/easy_install supervisor-stdout \t\u0026\u0026 mkdir -p /var/log/supervisor \t\u0026\u0026 mkdir -p /var/run/supervisor \t\u0026\u0026 chmod 700 /etc/supervisor/supervisord.conf \t\u0026\u0026 mkdir -p /root/.ssh \t\u0026\u0026 mv /etc/ssh_config /root/.ssh/config \t\u0026\u0026 chmod 700 /root/.ssh/config \t\u0026\u0026 crontab /etc/wordpress.cron \t\u0026\u0026 touch /var/log/certs.log \t\u0026\u0026 touch /var/log/db-backup.log \t\u0026\u0026 touch /var/log/wp-cron.log \t\u0026\u0026  mv /etc/02periodic /etc/apt/apt.conf.d/02periodic \t\u0026\u0026  mv /etc/50unattended-upgrades /etc/apt/apt.conf.d/50unattended-upgrades \t\u0026\u0026 mv /etc/apt-preferences /etc/apt/preferences.d/my_preferences \t\u0026\u0026 touch /var/log/auth.log \t\u0026\u0026 cp /etc/wordpress.conf /etc/fail2ban/jail.d/wordpress.conf \t\u0026\u0026 cp /etc/nginx-forbidden.conf /etc/fail2ban/filter.d/nginx-forbidden.conf \t\u0026\u0026 cp /etc/nginx-noproxy.conf /etc/fail2ban/filter.d/nginx-noproxy.conf \t\u0026\u0026 mkdir -p /var/run/fail2ban \t\u0026\u0026 chmod 700 /bootstrap_container \t\u0026\u0026 chmod 700 /install_wordpress \t\u0026\u0026 chmod 700 /setup_web_cert"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GIT_SSH_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "GIT_SSH_URL",
              "Value": "${GIT_SSH_URL:-\"https://github.com/WordPress/WordPress.git\"}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Wordpress (Nginx/php-fpm) Docker Container\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Wordpress container running PHP $PHP_VERSION served by Nginx/php-fpm with caching, TLS encryption, HTTP/2\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/corzel/wordpress-nginx-fpm-caches\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/corzel/wordpress-nginx-fpm-caches\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Mario Monroy\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}