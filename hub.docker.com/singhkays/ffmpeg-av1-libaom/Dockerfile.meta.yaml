MetaArgs: null
Stages:
- As: build
  BaseName: ubuntu:bionic
  Commands:
  - Key: nasm_version
    Name: arg
    Value: 2.14.02
  - Key: x264_version
    Name: arg
    Value: master
  - Key: x265_version
    Name: arg
    Value: 3.1.1
  - Key: libvpx_version
    Name: arg
    Value: v1.8.1
  - Key: fdk_aac_version
    Name: arg
    Value: v2.0.0
  - Key: lame_version
    Name: arg
    Value: "3.100"
  - Key: opus_version
    Name: arg
    Value: v1.3.1
  - Key: libaom_version
    Name: arg
    Value: master
  - Key: vmaf_version
    Name: arg
    Value: v1.3.15
  - Key: ffmpeg_version
    Name: arg
    Value: 4.2.1
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -qq &&     apt-get upgrade -y &&     apt-get -y install --no-install-recommends
      software-properties-common &&     add-apt-repository ppa:ubuntu-toolchain-r/test
      &&     apt-get -y install --no-install-recommends     autoconf     automake     build-essential     cmake     git-core     libfreetype6-dev     libtool     openssl     libssl-dev     pkg-config     texinfo     wget     zlib1g-dev     yasm     curl     git     mercurial     libnuma-dev     gcc-8     g++-8     gcc-9     g++-9     ca-certificates     asciidoc     xmlto
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: UTC
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/ffmpeg/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/ffmpeg/bin:$PATH"'
    Name: env
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: '"/opt/ffmpeg/lib/pkgconfig"'
    Name: env
  - CmdLine:
    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++
      g++ /usr/bin/g++-7 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8
      800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 && update-alternatives --install
      /usr/bin/gcc gcc /usr/bin/gcc-9 900 --slave /usr/bin/g++ g++ /usr/bin/g++-9
      --slave /usr/bin/gcov gcov /usr/bin/gcov-9
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources
  - CmdLine:
    - curl -sS -O https://ftp.osuosl.org/pub/blfs/conglomeration/nasm/nasm-${nasm_version}.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xf nasm-${nasm_version}.tar.xz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/nasm-${nasm_version}
  - CmdLine:
    - ./autogen.sh && ./configure --prefix="/opt/ffmpeg" --bindir="/opt/ffmpeg/bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/x264
  - CmdLine:
    - git clone --branch ${x264_version} --depth 1 https://git.videolan.org/git/x264
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure --prefix="/opt/ffmpeg" --bindir="/opt/ffmpeg/bin" --enable-static
      --enable-pic
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources
  - CmdLine:
    - curl -O http://ftp.videolan.org/pub/videolan/x265/x265_${x265_version}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxvf x265_${x265_version}.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: x265_${x265_version}/build/linux
  - CmdLine:
    - cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/opt/ffmpeg" -DENABLE_SHARED=off
      ../../source
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/libvpx
  - CmdLine:
    - git clone --branch ${libvpx_version} --depth 1 https://chromium.googlesource.com/webm/libvpx.git
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure --prefix="/opt/ffmpeg" --disable-examples --disable-unit-tests --enable-vp9-highbitdepth
      --as=yasm
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/fdk-aac
  - CmdLine:
    - git clone --branch ${fdk_aac_version} --depth 1 https://github.com/mstorsjo/fdk-aac
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - autoreconf -fiv && ./configure --prefix="/opt/ffmpeg" --disable-shared
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources
  - CmdLine:
    - curl -sS -L -O https://downloads.sourceforge.net/project/lame/lame/${lame_version}/lame-${lame_version}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xzf lame-${lame_version}.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: lame-${lame_version}
  - CmdLine:
    - ./configure --prefix="/opt/ffmpeg" --bindir="/opt/ffmpeg/bin" --disable-shared
      --enable-nasm
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/opus
  - CmdLine:
    - git clone --branch ${opus_version} --depth 1 https://github.com/xiph/opus.git
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure --prefix="/opt/ffmpeg" --disable-shared
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/aom
  - CmdLine:
    - git -C aom pull 2> /dev/null || git clone --branch ${libaom_version} --depth
      1 https://aomedia.googlesource.com/aom .
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/aom_build
  - CmdLine:
    - cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/opt/ffmpeg" -DBUILD_SHARED_LIBS=off
      -DENABLE_TOOLS=off -DENABLE_DOCS=off -DENABLE_EXAMPLES=off -DENABLE_TESTS=off
      -DENABLE_NASM=on ../aom
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources/vmaf
  - CmdLine:
    - git clone --branch ${vmaf_version} --depth 1 https://github.com/Netflix/vmaf.git
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's|/usr/local|/opt/ffmpeg|g' wrapper/libvmaf.pc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: wrapper
  - CmdLine:
    - make install INSTALL_PREFIX=/opt/ffmpeg
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sources
  - CmdLine:
    - curl -sS -O https://ffmpeg.org/releases/ffmpeg-${ffmpeg_version}.tar.bz2
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ffmpeg-${ffmpeg_version}
  - CmdLine:
    - tar xjf ../ffmpeg-${ffmpeg_version}.tar.bz2 --strip-components 1
    Name: run
    PrependShell: true
  - CmdLine:
    - "./configure         --prefix=\"/opt/ffmpeg\"         --pkg-config-flags=\"--static\"
      \t--extra-cflags=\"-I/opt/ffmpeg/include\" \t--extra-ldflags=\"-L/opt/ffmpeg/lib\"
      \        --extra-ldexeflags=\"-Bstatic\" \t--extra-libs=\"-lpthread -lm\" \t--bindir=\"/opt/ffmpeg/bin\"
      \        --disable-shared         --enable-static         --disable-ffplay \t--enable-gpl
      \t--enable-nonfree \t--enable-version3 \t--enable-libaom \t--enable-libfdk-aac
      \t--enable-libfreetype \t--enable-libmp3lame \t--enable-libopus \t--enable-libvpx
      \t--enable-libx264 \t--enable-libx265         --enable-libvmaf \t--enable-openssl"
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: build
  Platform: ""
  SourceCode: FROM ubuntu:bionic as build
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Kay Singh https://twitter.com/singhkays"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get upgrade -y &&     apt-get -y install --no-install-recommends     libnuma1     libssl1.1     libfreetype6     &&
      apt-get -y clean && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: UTC
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/ffmpeg
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /opt/ffmpeg
    - .
  - CmdLine:
    - ln -s /opt/ffmpeg/share/model /usr/local/share/
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/ffmpeg/bin:$PATH"'
    Name: env
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: '"/opt/ffmpeg/lib/pkgconfig"'
    Name: env
  - Name: workdir
    Path: /root
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
