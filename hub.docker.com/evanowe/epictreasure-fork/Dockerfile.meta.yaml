MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Maintainer Cory Duplantis
    Name: maintainer
  - CmdLine:
    - 'apt-get update && apt-get install -y software-properties-common # feb 16 2016'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     build-essential     curl     gdb     gdb-multiarch     gdbserver     git     libc6-arm64-cross     libc6-armhf-cross     libc6-dev-i386     libc6-i386     libffi-dev     libncurses5-dev     libncursesw5-dev     python-dev     python-dev     python-pip     python2.7     python3-pip     tmux     tree     virtualenvwrapper     wget     vim
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/radare/radare2     && cd radare2     && ./sys/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install angr --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade ipython
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install python2.7 python-pip python-dev git     && pip install --upgrade
      git+https://github.com/binjitsu/binjitsu.git
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/aquynh/capstone \t&& cd capstone \t&& git checkout
      -t origin/next \t&& sudo ./make.sh install \t&& cd bindings/python \t&& python2
      setup.py install \t&& python3 setup.py install"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pycparser
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pycparser
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install --upgrade git+https://github.com/binjitsu/binjitsu.git # 2016-2-15'
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/zachriggle/pwndbg /root/tools/pwndbg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /root/tools/pwndbg/gdbinit.py" > /root/.gdbinit
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -Ur /root/tools/pwndbg/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libglib2.0-dev     && cd /root/tools     && git clone https://github.com/unicorn-engine/unicorn     &&
      cd unicorn     && ./make.sh install     && cd bindings/python     && python3
      setup.py install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - emdebian.list
    - /etc/apt/sources.list.d/emdebian.list
  - CmdLine:
    - apt-get -y install qemu qemu-user qemu-user-static
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install 'binfmt*'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libc6-armhf-armel-cross
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install debian-keyring
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install debian-archive-keyring
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install emdebian-archive-keyring
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get -m update; echo 0 # Always success from update'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libc6-mipsel-cross
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libc6-armel-cross libc6-dev-armel-cross
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libc6-armhf-cross libc6-dev-armhf-cross
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install binutils-arm-linux-gnueabi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libncurses5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/qemu-binfmt
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/mipsel-linux-gnu /etc/qemu-binfmt/mipsel
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/arm-linux-gnueabihf /etc/qemu-binfmt/arm
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/apt/sources.list.d/emdebian.list
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/tools     && git clone https://github.com/devttys0/binwalk     && cd
      binwalk     && python setup.py install     && apt-get -y install squashfs-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install git build-essential zlib1g-dev liblzma-dev python-magic     &&
      cd /root/tools     && wget https://firmware-mod-kit.googlecode.com/files/fmk_099.tar.gz     &&
      tar zxvf fmk_099.tar.gz     && rm fmk_099.tar.gz     && cd fmk/src     && ./configure     &&
      make
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install clang llvm
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/tools     && wget --quiet http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz     &&
      tar -xzvf afl-latest.tgz     && rm afl-latest.tgz     && wget --quiet http://llvm.org/releases/3.8.0/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz     &&
      xz -d clang*     && tar xvf clang*     && cd clang*     && cd bin     && export
      PATH=$PWD:$PATH     && cd ../..     && cd afl-*     && make     && cd llvm_mode     &&
      make     && cd ..     && sudo make install     && sudo apt-get -y install libtool
      automake bison libglib2.0-dev     && cd qemu*     && ./build_qemu_support.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y default-jre     && wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool     &&
      wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.0.2.jar     &&
      sudo mv apktool_2.0.2.jar /bin/apktool.jar     && sudo mv apktool /bin/     &&
      sudo chmod 755 /bin/apktool     && sudo chmod 755 /bin/apktool.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y build-dep python-imaging     && apt-get -y install libjpeg8 libjpeg62-dev
      libfreetype6 libfreetype6-dev     && pip install Pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install r2pipe
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/tools     && git clone https://github.com/JonathanSalwan/ROPgadget     &&
      cd ROPgadget     && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install stow     && cd /root     && rm .bashrc     && git clone --recursive
      https://github.com/ctfhacker/dotfiles     && cd dotfiles     && ./install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/tools     && git clone --depth 1 https://github.com/junegunn/fzf.git
      /root/.fzf     && /root/.fzf/install --all --key-bindings --completion
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/tools     && git clone https://github.com/cloudburst/libheap     &&
      cd libheap     && cp libheap.py /usr/lib/python3.4     && echo "python from
      libheap import *" >> /root/.gdbinit
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root/tools     && git clone https://github.com/BinaryAnalysisPlatform/qira.git     &&
      cd qira/     && ./install.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - decompile
    - /usr/bin/decompile
  - CmdLine:
    - chmod +x /usr/bin/decompile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install silversearcher-ag
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
