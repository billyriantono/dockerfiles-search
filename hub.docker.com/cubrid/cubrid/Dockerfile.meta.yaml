MetaArgs: null
Stages:
- BaseName: centos
  Commands:
  - CmdLine:
    - groupadd -r cubrid && useradd -r -g cubrid -d /home/cubrid -m cubrid
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -x \t&& yum -y install epel-release \t&& yum -y install wget dpkg \t&&
      dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \t&& wget
      -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"
      \t&& wget -O /tmp/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver hkp://ha.pool.sks-keyservers.net:80
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t&& gpg --batch --verify
      /tmp/gosu.asc /usr/bin/gosu \t&& rm -r \"$GNUPGHOME\" /tmp/gosu.asc \t&& chmod
      +x /usr/bin/gosu \t&& gosu nobody true \t&& yum -y remove dpkg"
    Name: run
    PrependShell: true
  - Env:
    - Key: CUBRID_VERSION
      Value: latest
    Name: env
  - Env:
    - Key: CUBRID
      Value: /home/cubrid/CUBRID
    Name: env
  - Env:
    - Key: CUBRID_DATABASES
      Value: /var/lib/cubrid
    Name: env
  - Env:
    - Key: CUBRID_DB
      Value: cubdb
    Name: env
  - Env:
    - Key: CUBRID_VOLUME_SIZE
      Value: 100M
    Name: env
  - Env:
    - Key: CUBRID_LOCALE
      Value: en_US
    Name: env
  - Env:
    - Key: CUBRID_COMPONENTS
      Value: ALL
    Name: env
  - Env:
    - Key: PATH
      Value: $CUBRID/bin:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $CUBRID/lib
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O cubrid.tar.gz ftp://ftp.cubrid.org/CUBRID_Engine/nightly/develop/CUBRID-$CUBRID_VERSION-Linux.x86_64.tar.gz
      \t&& tar -xzf cubrid.tar.gz -C /home/cubrid && rm cubrid.tar.gz \t&& mkdir -p
      $CUBRID_DATABASES \t&& chown -R cubrid:cubrid $CUBRID $CUBRID_DATABASES \t&&
      yum -y remove wget \t&& yum clean all"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $CUBRID_DATABASES
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "33000"
  From:
    Image: centos
  Name: ""
  Platform: ""
  SourceCode: FROM centos
