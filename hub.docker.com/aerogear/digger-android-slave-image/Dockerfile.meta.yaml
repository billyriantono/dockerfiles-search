MetaArgs: null
Stages:
- BaseName: openshift/jenkins-slave-base-centos7
  Commands:
  - Maintainer: AeroGear Team <https://aerogear.org/>
    Name: maintainer
  - Env:
    - Key: ANDROID_SLAVE_SDK_BUILDER
      Value: 1.0.0
    - Key: NODEJS_DEFAULT_VERSION
      Value: 6.9.1
    - Key: CORDOVA_DEFAULT_VERSION
      Value: 7.0.1
    - Key: IONIC_DEFAULT_VERSION
      Value: 3.20.0
    - Key: GRUNT_DEFAULT_VERSION
      Value: 1.0.1
    - Key: FASTLANE_DEFAULT_VERSION
      Value: 2.60.1
    - Key: GRADLE_VERSION
      Value: "3.5"
    - Key: ANDROID_HOME
      Value: /opt/android-sdk-linux
    - Key: NVM_DIR
      Value: /opt/nvm
    - Key: PROFILE
      Value: /etc/profile
    - Key: CI
      Value: "Y"
    - Key: BASH_ENV
      Value: /etc/profile
    - Key: JAVA_HOME
      Value: /etc/alternatives/java_sdk_1.8.0
    - Key: RUBY_VERSION
      Value: 2.4.2
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$NVM_DIR:/opt/gradle/gradle-$GRADLE_VERSION/bin:$JAVA_HOME/bin
    Name: env
  - Labels:
    - Key: io.k8s.description
      Value: '"Platform for building slave android sdk image"'
    - Key: io.k8s.display-name
      Value: '"jenkins android sdk slave builder"'
    - Key: io.openshift.tags
      Value: '"jenkins-android-slave builder"'
    Name: label
  - CmdLine:
    - yum install -y   zlib.i686   ncurses-libs.i686   bzip2-libs.i686   java-1.8.0-openjdk-devel   java-1.8.0-openjdk   nodejs   rubygems   gcc-c++   make   ant   which  wget   expect   yum
      groupinstall -y "Development Tools" &&   yum clean all &&   rm -rf /var/cache/yum
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://rvm.io/binaries/centos/7/x86_64/ruby-${RUBY_VERSION}.tar.bz2 &&
      bunzip2 -dk ruby-${RUBY_VERSION}.tar.bz2 && tar -xvpf ruby-${RUBY_VERSION}.tar
      && (cd ruby-${RUBY_VERSION}; cp -R * /usr/local) && gem install fastlane -v
      ${FASTLANE_DEFAULT_VERSION} --no-rdoc --no-ri && rm -rf ruby-${RUBY_VERSION}.tar.bz2
      ruby-${RUBY_VERSION}.tar ruby-${RUBY_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh
      | bash &&     [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" &&     echo 'export
      NVM_DIR=${NVM_DIR}' >> ${HOME}/.bashrc &&     echo '[ -s "$NVM_DIR/nvm.sh" ]
      && . "$NVM_DIR/nvm.sh"' >> ${HOME}/.bashrc &&     echo 'CI=Y' >> ${HOME}/.bashrc
      &&     nvm install ${NODEJS_DEFAULT_VERSION} &&     chmod -R 777 ${NVM_DIR}
      &&     npm install -g cordova@${CORDOVA_DEFAULT_VERSION} &&     npm install
      -g ionic@${IONIC_DEFAULT_VERSION} &&     npm install -g grunt@${GRUNT_DEFAULT_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/gradle &&     wget https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
      &&     unzip -d /opt/gradle gradle-${GRADLE_VERSION}-bin.zip &&     rm gradle-${GRADLE_VERSION}-bin.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O jq  https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
      &&     chmod +x ./jq &&    cp jq /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.android &&     touch $HOME/.android/analytics.settings &&     touch
      $HOME/.android/reposiories.cfg &&     chown -R 1001:0 $HOME &&     chmod -R
      g+rw $HOME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/run-jnlp.sh
    - /usr/local/bin/run-jnlp.sh
  - Name: user
    User: "1001"
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - /usr/local/bin/run-jnlp.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: openshift/jenkins-slave-base-centos7
  Name: ""
  Platform: ""
  SourceCode: FROM openshift/jenkins-slave-base-centos7
