MetaArgs: null
Stages:
- BaseName: docker.io/python:3-alpine
  Commands:
  - CmdLine:
    - "echo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
      && \tapk update && \tapk add \tbash \ttzdata \tlibass \tlibstdc++ \tlibpng \tlibjpeg
      \txvidcore \tx264-libs \tx265 \tlibvpx \tlibvorbis \topus \tlame \tfdk-aac \tfreetype
      && \tapk add --virtual build-deps \tcoreutils \tfdk-aac-dev \tfreetype-dev \tx264-dev
      \tx265-dev \tyasm \tyasm-dev \tlibogg-dev \tlibvorbis-dev \topus-dev \tlibvpx-dev
      \tlame-dev \txvidcore-dev \tlibass-dev \topenssl-dev \tmusl-dev \tmake \tcmake
      \tgcc \tg++ \tbuild-base \tlibjpeg-turbo-dev \tlibpng-dev \tlibjasper \tclang-dev
      \tclang \tlinux-headers \tgit \tcurl && \texport SRC=/usr \texport FFMPEG_VERSION=3.4.1
      \tDIR=$(mktemp -d) && cd ${DIR} && \tcurl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz
      && \ttar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz && \tcd ffmpeg-${FFMPEG_VERSION}
      && \t./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\"
      --bindir=\"${SRC}/bin\" \t\t--extra-libs=-ldl --enable-version3 --enable-libmp3lame
      --enable-pthreads --enable-libx264 --enable-libxvid --enable-gpl \t\t--enable-postproc
      --enable-nonfree --enable-avresample --enable-libfdk-aac --disable-debug --enable-small
      --enable-openssl \t\t--enable-libx265 --enable-libopus --enable-libvorbis --enable-libvpx
      --enable-libfreetype --enable-libass \t\t--enable-shared --enable-pic && \tmake
      -j8 && \tmake install && \tmake distclean && \thash -r && \tcd /tmp && \trm
      -rf ${DIR} && \tpip install --no-cache-dir \tCython==0.27.3 \tnumpy==1.14.0
      \tPillow==5.0.0 \tav==0.3.3 && \texport OPENCV_VERSION=3.4.0 \texport CC=/usr/bin/clang
      \texport CXX=/usr/bin/clang++ \texport PYTHON_VERSION=`python -c 'import platform;
      print(\".\".join(platform.python_version_tuple()[:2]))'` && \tDIR=$(mktemp -d)
      && cd ${DIR} && \tcurl -sSL -Os https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz
      && \ttar xzvf ${OPENCV_VERSION}.tar.gz && \tcd opencv-${OPENCV_VERSION} && \tmkdir
      build && \tcd build && \tcmake -D CMAKE_BUILD_TYPE=RELEASE \t\t-D INSTALL_C_EXAMPLES=OFF
      \t\t-D INSTALL_PYTHON_EXAMPLES=OFF \t\t-D CMAKE_INSTALL_PREFIX=/usr/local \t\t-D
      BUILD_EXAMPLES=OFF \t\t-D BUILD_opencv_python3=ON \t\t-D PYTHON_DEFAULT_EXECUTABLE=/usr/local/bin/python3
      \t\t-D PYTHON_INCLUDE_DIRS=/usr/local/include/python${PYTHON_VERSION}m \t\t-D
      PYTHON_EXECUTABLE=/usr/local/bin/python${PYTHON_VERSION} \t\t-D PYTHON_LIBRARY=/usr/local/lib/libpython${PYTHON_VERSION}m.so
      \t\t.. && \tmake -j8 && \tmake install && \tcd /tmp && \trm -rf ${DIR} && \tapk
      del build-deps && \trm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  From:
    Image: docker.io/python:3-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM docker.io/python:3-alpine
