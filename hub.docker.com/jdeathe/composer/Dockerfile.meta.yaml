MetaArgs:
- DefaultValue: '"5.6.32"'
  Key: PHP_VERSION
  ProvidedValue: null
  Value: '"5.6.32"'
Stages:
- BaseName: php:${PHP_VERSION}-cli-alpine
  Commands:
  - Key: COMPOSER_FILENAME
    Name: arg
    Value: '"composer.phar"'
  - Key: COMPOSER_INSTALL_PATH
    Name: arg
    Value: '"/opt/getcomposer.org"'
  - Key: COMPOSER_VERSION
    Name: arg
    Value: '"1.5.6"'
  - Key: COMPOSER_WORKSPACE
    Name: arg
    Value: '"/workspace"'
  - Key: PHP_PACKAGE_PREFIX
    Name: arg
    Value: '"php56"'
  - Key: PHP_VERSION
    Name: arg
    Value: null
  - Key: RUN_WRAPPER_DIST_PATH
    Name: arg
    Value: '"/opt/deathe.org-run-wrapper"'
  - Key: RUN_WRAPPER_NAME
    Name: arg
    Value: '"composer"'
  - Key: COMPOSER_CACHE_DIR
    Name: arg
    Value: '"${COMPOSER_INSTALL_PATH}/var/cache"'
  - Key: COMPOSER_HOME
    Name: arg
    Value: '"${COMPOSER_INSTALL_PATH}/etc"'
  - Key: COMPOSER_RELEASE_URI
    Name: arg
    Value: '"https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/${COMPOSER_FILENAME}"'
  - Key: RELEASE_VERSION
    Name: arg
    Value: '"${COMPOSER_VERSION}-${PHP_PACKAGE_PREFIX}"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - /tmp/src/
  - CmdLine:
    - "apk add \t\t--update \t\t--no-cache \t\tca-certificates \t\tcurl \t\tfreetype
      \t\tgit \t\tlibjpeg-turbo \t\tlibmcrypt \t\tlibpng \t\topenssh \t\topenssl \t&&
      update-ca-certificates \t&& apk add \t\t--no-cache \t\t--virtual .build-deps
      \t\tautoconf \t\tautomake \t\tbash \t\tcurl-dev \t\tfreetype-dev \t\tgcc \t\tg++
      \t\tlibjpeg-turbo-dev \t\tlibmcrypt-dev \t\tlibpng-dev \t\tmake \t\tpcre-dev
      \t\tpkgconfig \t\tre2c \t\tzlib-dev \t&& if [[ ${PHP_VERSION%%.*} == 5 ]]; \t\tthen
      \t\t\tpecl install apcu-4.0.11; \t\telse \t\t\tpecl install apcu-5.1.8; \t\tfi
      \t&& docker-php-ext-enable \t\tapcu \t&& if [[ ${PHP_VERSION%.*} != 7.2 ]];
      \t\tthen \t\t\tdocker-php-ext-install \t\t\t\tmcrypt; \t\tfi \t&& docker-php-ext-configure
      \t\tgd \t\t\t--with-gd \t\t\t--with-freetype-dir=/usr/include/ \t\t\t--with-png-dir=/usr/include/
      \t\t\t--with-jpeg-dir=/usr/include/ \t&& docker-php-ext-install \t\tbcmath \t\tgd
      \t\topcache \t\tzip \t&& mkdir -p \t\t\"${COMPOSER_WORKSPACE}\" \t&& mkdir -p
      \t\t\"${COMPOSER_INSTALL_PATH}\"/bin \t&& mkdir -p \t\t\"${COMPOSER_CACHE_DIR}\"
      \t&& mkdir -p \t\t\"${COMPOSER_HOME}\" \t&& curl \t\t-o \"${COMPOSER_INSTALL_PATH}\"/\"${COMPOSER_FILENAME}\"
      \t\t-sfLO \t\t\"${COMPOSER_RELEASE_URI}\" \t&& install \t\t\"${COMPOSER_INSTALL_PATH}\"/\"${COMPOSER_FILENAME}\"
      \t\t\"${COMPOSER_INSTALL_PATH}\"/bin/composer \t&& ln -sf \t\t\"${COMPOSER_INSTALL_PATH}\"/bin/composer
      \t\t/usr/local/bin/composer \t&& printf -- \t\t'date.timezone=%s\\n' \t\t\"${PHP_TIMEZONE:-UTC}\"
      \t\t> \"${PHP_INI_DIR}/conf.d/date.ini\" \t&& printf -- \t\t'memory_limit=-1\\n'
      \t\t> \"${PHP_INI_DIR}/conf.d/resource-limits.ini\" \t&& printf -- \t\t'%s\\n%s\\n%s\\n'
      \t\t\"opcache.enable_cli=1\" \t\t\"opcache.max_accelerated_files=32531\" \t\t>
      ${PHP_INI_DIR}/conf.d/opcache.ini \t&& mkdir -p \t\t\"${RUN_WRAPPER_DIST_PATH}\"
      \t&& cd /tmp/src \t&& DIST_PATH=\"${RUN_WRAPPER_DIST_PATH}\" \t\tWRAPPER_NAME=\"${RUN_WRAPPER_NAME}\"
      \t\tmake build-wrapper \t&& apk del \t\t.build-deps \t&& rm -rf \t\t/tmp/* \t\t/var/cache/apk/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: '"1"'
    - Key: COMPOSER_AUTH
      Value: '""'
    - Key: COMPOSER_BIN_DIR
      Value: '"vendor/bin"'
    - Key: COMPOSER_CACHE_DIR
      Value: '"${COMPOSER_CACHE_DIR}"'
    - Key: COMPOSER_DISCARD_CHANGES
      Value: '"false"'
    - Key: COMPOSER_HOME
      Value: '"${COMPOSER_HOME}"'
    - Key: COMPOSER_HTACCESS_PROTECT
      Value: '"0"'
    - Key: COMPOSER_INSTALL_PATH
      Value: '"${COMPOSER_INSTALL_PATH}"'
    - Key: COMPOSER_MIRROR_PATH_REPOS
      Value: '"0"'
    - Key: COMPOSER_NO_INTERACTION
      Value: '"0"'
    - Key: COMPOSER_PROCESS_TIMEOUT
      Value: '"300"'
    - Key: COMPOSER_VENDOR_DIR
      Value: '"vendor"'
    - Key: COMPOSER_VERSION
      Value: '"${COMPOSER_VERSION}"'
    - Key: HTTP_PROXY_REQUEST_FULLURI
      Value: '"0"'
    - Key: HTTPS_PROXY_REQUEST_FULLURI
      Value: '"0"'
    - Key: http_proxy
      Value: '""'
    - Key: no_proxy
      Value: '""'
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"James Deathe <james.deathe@gmail.com>"'
    - Key: run
      Value: '"docker run --rm --interactive --tty --volume \${PWD}:/workspace --volume
        composer-etc:/opt/getcomposer.org/etc --volume composer-${PHP_PACKAGE_PREFIX}-cache:/opt/getcomposer.org/var/cache
        jdeathe/composer:${RELEASE_VERSION}"'
    - Key: install
      Value: '"docker run --rm --entrypoint /bin/cat jdeathe/composer:${RELEASE_VERSION}
        ${RUN_WRAPPER_DIST_PATH}/${RUN_WRAPPER_NAME} > /usr/local/bin/${RUN_WRAPPER_NAME}
        && chmod 766 /usr/local/bin/${RUN_WRAPPER_NAME}"'
    - Key: uninstall
      Value: '"rm -f /usr/local/bin/${RUN_WRAPPER_NAME}"'
    - Key: org.deathe.name
      Value: '"composer"'
    - Key: org.deathe.version
      Value: '"${RELEASE_VERSION}"'
    - Key: org.deathe.release
      Value: '"jdeathe/composer:${RELEASE_VERSION}"'
    - Key: org.deathe.license
      Value: '"MIT"'
    - Key: org.deathe.vendor
      Value: '"jdeathe"'
    - Key: org.deathe.url
      Value: '"https://github.com/jdeathe/image-composer"'
    - Key: org.deathe.description
      Value: '"Alpine - PHP CLI ${PHP_VERSION} / Composer ${COMPOSER_VERSION}."'
    Name: label
  - Name: workdir
    Path: '"${COMPOSER_WORKSPACE}"'
  - CmdLine:
    - php
    - /usr/local/bin/composer
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: php:${PHP_VERSION}-cli-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION}-cli-alpine
