{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Key": "apionly",
          "Name": "arg",
          "Value": "false"
        },
        {
          "CmdLine": [
            "apk add --update git dep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /go/src/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/go/src/build"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/go/src/build"
        },
        {
          "CmdLine": [
            "if [ \"$apionly\" = \"false\" ] ; then apk add --update nodejs npm python build-base \u0026\u0026 \tgit clone --single-branch --branch preact/buildalt https://github.com/LegumeFederation/cvitjs.git \u0026\u0026 \tcp -r ui/cvit_assets/src cvitjs \u0026\u0026  \tcd cvitjs  \u0026\u0026 \tnpm install  \u0026\u0026 \tnpm run build \u0026\u0026 \tcp -r build ../ui/public/cvitjs \u0026\u0026 \techo Built cvitjs ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"$apionly\" = \"false\" ] ; then cd ui \u0026\u0026 \tnpm install \u0026\u0026 \tcp -r cvit_assets/* public/cvitjs \u0026\u0026 \trm -rf public/cvitjs/src \u0026\u0026 \tnpm run build \u0026\u0026 \techo Built UI components ; else echo Skipping UI components ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dep ensure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go build -o server ."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -S -D -H -h /app appuser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "appuser"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/build/server",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/build/ui/build",
            "/app/ui/build/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/config",
            "/app/assets"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "./server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}