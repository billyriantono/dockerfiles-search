MetaArgs: null
Stages:
- BaseName: gcr.io/google-appengine/debian9
  Commands:
  - Env:
    - Key: DART_VERSION
      Value: 1.21.1
    Name: env
  - CmdLine:
    - apt-get -q update && apt-get install --no-install-recommends -y -q gnupg2 curl
      git ca-certificates apt-transport-https openssh-client
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://storage.googleapis.com/download.dartlang.org/linux/debian/pool/main/d/dart/dart_1.21.1-1_amd64.deb
      > dart_1.21.1-1_amd64.deb && dpkg -i ./dart_1.21.1-1_amd64.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: DART_SDK
      Value: /usr/lib/dart
    Name: env
  - Env:
    - Key: PATH
      Value: $DART_SDK/bin:$PATH
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dart_run.sh
    - /dart_runtime/
  - CmdLine:
    - chmod 755 /dart_runtime/dart_run.sh &&   chown root:root /dart_runtime/dart_run.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - Name: expose
    Ports:
    - $PORT
    - "5858"
    - "8181"
  - CmdLine: []
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /dart_runtime/dart_run.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pubspec.*
    - /app/
  - CmdLine:
    - pub get
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app/
  - CmdLine:
    - pub get --offline
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update && apt-get install -q -y aapt && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Image: gcr.io/google-appengine/debian9
  Name: ""
  Platform: ""
  SourceCode: FROM gcr.io/google-appengine/debian9
