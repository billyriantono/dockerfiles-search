{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/bitcoin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_ID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP_ID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g ${GROUP_ID} bitcoin   \u0026\u0026 useradd -u ${USER_ID} -g bitcoin -s /bin/bash -m -d /bitcoin bitcoin \u0026\u0026   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C70EF1F0305A1ADB9986DBD8D46F45428842CE5E \u0026\u0026   echo \"deb http://ppa.launchpad.net/bitcoin/bitcoin/ubuntu xenial main\" \u003e /etc/apt/sources.list.d/bitcoin.list \u0026\u0026   apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   bitcoind   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   ca-certificates   wget   \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"   \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4   \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu   \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc   \u0026\u0026 chmod +x /usr/local/bin/gosu   \u0026\u0026 gosu nobody true   \u0026\u0026 apt-get purge -y   ca-certificates   wget   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./bin",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/btc_oneshot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/bitcoin"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8332",
            "8333"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/bitcoin"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "btc_oneshot"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}