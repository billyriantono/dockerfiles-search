{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "whyzdev/pythondev:alpinebase",
      "SourceCode": "FROM whyzdev/pythondev:alpinebase",
      "Platform": "",
      "From": {
        "Image": "whyzdev/pythondev:alpinebase"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "9.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/opt/python26/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "A74B06BF"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.6.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python26 \t\u0026\u0026 tar -xJC /usr/src/python26 --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz         \u0026\u0026 sed -i -e 's/posix_close/posix_closex/g' /usr/src/python26/Modules/posixmodule.c     \t\u0026\u0026 cd /usr/src/python26 \t\u0026\u0026 ./configure         --prefix=/opt/python26 \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\t\t\u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t\u0026\u0026 /opt/python26/bin/python /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t\u0026\u0026 rm /tmp/get-pip.py \t\u0026\u0026 /opt/python26/bin/pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t\u0026\u0026 [ \"$(/opt/python26/bin/pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t\u0026\u0026 find /opt/python26 -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /opt/python26 \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .python-rundeps $runDeps \t\u0026\u0026 rm -rf /usr/src/python26 ~/.cache     \u0026\u0026 echo ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/opt/python27/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.13"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python27 \t\u0026\u0026 tar -xJC /usr/src/python27 --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\t\u0026\u0026 cd /usr/src/python27 \t\u0026\u0026 ./configure         --prefix=/opt/python27 \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\t\t\u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t\u0026\u0026 /opt/python27/bin/python /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t\u0026\u0026 rm /tmp/get-pip.py \t\u0026\u0026 /opt/python27/bin/pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t\u0026\u0026 [ \"$(/opt/python27/bin/pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t\u0026\u0026 find /opt/python27 -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /opt/python27 \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .python-rundeps $runDeps \t\u0026\u0026 rm -rf /usr/src/python27 ~/.cache     \u0026\u0026 echo ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/opt/python35/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "97FC712E4C024BBEA48A61ED3A5CA953F73C700D"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python35 \t\u0026\u0026 tar -xJC /usr/src/python35 --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\t\u0026\u0026 cd /usr/src/python35 \t\u0026\u0026 ./configure         --prefix=/opt/python35 \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\t\t\u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t\u0026\u0026 /opt/python35/bin/python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t\u0026\u0026 rm /tmp/get-pip.py \t\u0026\u0026 /opt/python35/bin/pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t\u0026\u0026 [ \"$(/opt/python35/bin/pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t\u0026\u0026 find /opt/python35 -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /opt/python35 \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .python-rundeps $runDeps \t\u0026\u0026 rm -rf /usr/src/python35 ~/.cache     \u0026\u0026 echo ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/opt/python36/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python36 \t\u0026\u0026 tar -xJC /usr/src/python36 --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\t\u0026\u0026 cd /usr/src/python36 \t\u0026\u0026 ./configure         --prefix=/opt/python36 \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\t\t\u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t\u0026\u0026 /opt/python36/bin/python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t\u0026\u0026 rm /tmp/get-pip.py \t\u0026\u0026 /opt/python36/bin/python3 -m pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t\u0026\u0026 [ \"$(/opt/python36/bin/pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t\u0026\u0026 find /opt/python36 -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /opt/python36 \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .python-rundeps $runDeps \t\u0026\u0026 rm -rf /usr/src/python36 ~/.cache     \u0026\u0026 echo ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache libxml2-dev libxslt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}