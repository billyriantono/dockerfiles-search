{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:latest",
      "SourceCode": "FROM  buildpack-deps:latest",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install unzip python-dev jq gettext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.03.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}-ce.tgz -o docker.tgz     \u0026\u0026 tar zxf docker.tgz -C /tmp     \u0026\u0026 rm docker.tgz     \u0026\u0026 mv /tmp/docker/* /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSE_VERSION",
              "Value": "1.21.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -ssL https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "K8S_VERSION",
              "Value": "1.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://storage.googleapis.com/kubernetes-release/release/v${K8S_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl     \u0026\u0026 chmod +x /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}