MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - echo "Update the base image security and install dependencies"   && export DEBIAN_FRONTEND=noninteractive   &&
      apt-get update -qq   && apt-get install -y -qq --no-install-recommends apt-utils
      apt-transport-https ca-certificates software-properties-common bash curl   &&
      apt-get upgrade -y -qq   && apt-get clean   && rm -rf /var/lib/apt/lists/*   &&
      true
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install Docker"   && export DEBIAN_FRONTEND=noninteractive   && apt-get
      update -qq   && apt-get install -y -qq --no-install-recommends gpg-agent   &&
      apt-get remove -y docker docker-engine docker.io containerd runc   && curl -fsSL
      https://download.docker.com/linux/ubuntu/gpg | apt-key add -   && add-apt-repository
      "deb [arch=amd64,trusted=yes,allow-insecure=yes] https://download.docker.com/linux/ubuntu
      bionic stable"   && apt-get install -y -qq --no-install-recommends docker-ce
      docker-ce-cli   && apt-get clean   && rm -rf /var/lib/apt/lists/*   && true
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERCOMPOSE_VERSION
      Value: '"1.24.1"'
    Name: env
  - CmdLine:
    - echo "Install docker-compose"   && curl -L https://github.com/docker/compose/releases/download/${DOCKERCOMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` -o ./docker-compose   && chmod +x ./docker-compose   && mv ./docker-compose
      /usr/local/bin/docker-compose   && true
    Name: run
    PrependShell: true
  - Chown: root:root
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/jpetazzo/dind/master/wrapdocker
    - /usr/local/sbin/wrapdocker
  - CmdLine:
    - echo "Install docker-in-docker"   && apt-get update   && apt-get install -y
      --no-install-recommends dmsetup   && chmod +x /usr/local/sbin/wrapdocker   &&
      apt-get clean   && rm -rf /var/lib/apt/lists/*   && chmod +x /usr/local/bin/*   &&
      true
    Name: run
    PrependShell: true
  - Env:
    - Key: AWSCLI_VERSION
      Value: '"1.14.10"'
    Name: env
  - CmdLine:
    - echo "Install awscli"   && export DEBIAN_FRONTEND=noninteractive   && apt-get
      update -qq   && apt-get install -y -qq --no-install-recommends python python-dev
      python-setuptools python-pip python-yaml   groff less   && pip install awscli==$AWSCLI_VERSION
      --upgrade   && apt-get clean   && rm -rf /var/lib/apt/lists/*   && true
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBECTL_VERSION
      Value: '"v1.16.3"'
    Name: env
  - CmdLine:
    - echo "Install kubectl"   && curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl   &&
      chmod +x ./kubectl   && mv ./kubectl /usr/local/bin/kubectl   && true
    Name: run
    PrependShell: true
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - aws-ecr-login.sh
    - /usr/local/bin/aws-ecr-login
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - checksum.sh
    - /usr/local/bin/checksum
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - epoch.sh
    - /usr/local/bin/epoch
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-ensure-image.sh
    - /usr/local/bin/docker-ensure-image
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - kubectl-login.sh
    - /usr/local/bin/kubectl-login
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - github-login.sh
    - /usr/local/bin/github-login
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - ssh-debug-session.sh
    - /usr/local/bin/ssh-debug-session
  - CmdLine:
    - echo "Install helper scripts and tools"   && apt-get update   && apt-get install
      -y --no-install-recommends iputils-ping dnsutils net-tools unzip openssh-server   git
      wget jq gettext   ruby rubygems   && curl -O https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack   &&
      chmod +x slack   && mv slack /usr/local/bin/   && gem install ghi -v 1.2.0   &&
      (cd /tmp; wget https://github.com/github/hub/releases/download/v2.13.0/hub-linux-386-2.13.0.tgz)   &&
      (cd /tmp; tar zxf hub-linux-386-2.13.0.tgz)   && (cd /tmp/hub-linux-386-2.13.0/bin;
      chown root:root hub; mv hub /usr/local/bin/hub)   && (cd /tmp; rm hub-linux-386-2.13.0.tgz;
      rm -r hub-linux-386-2.13.0)   && (cd /tmp; wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip)   &&
      (cd /tmp; unzip ngrok-stable-linux-amd64.zip)   && (cd /tmp; chown root:root
      ngrok; mv ngrok /usr/local/bin/ngrok)   && (cd /tmp; rm ngrok-stable-linux-amd64.zip)   &&
      apt-get clean   && rm -rf /var/lib/apt/lists/*   && chmod +x /usr/local/bin/*   &&
      rm -rf /tmp/*   && true
    Name: run
    PrependShell: true
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - tsh
    - /bin/tsh
  - CmdLine:
    - echo "Hijack /bin/sh"   && mv /bin/sh /bin/old.sh   && cp /bin/tsh /bin/sh   &&
      true
    Name: run
    PrependShell: true
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-init.sh
    - /docker-init.sh
  - CmdLine:
    - /bin/sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
