{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"deadphoenix8091\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk upgrade --no-cache \u0026\u0026     apk --no-cache add         tzdata supervisor nginx php7 php7-fpm php7-pear         php7-xml php7-redis php7-bcmath         php7-pdo php7-pdo_mysql php7-mysqli php7-mbstring php7-gd php7-mcrypt         php7-openssl php7-apcu php7-gmagick php7-xsl php7-zip php7-sockets         php7-ldap php7-phar php7-iconv php7-json php7-intl php7-memcached         php7-oauth php7-imap php7-gmp         g++ make autoconf \u0026\u0026     cp /usr/share/zoneinfo/UTC /etc/localtime \u0026\u0026     echo \"UTC\" \u003e /etc/timezone \u0026\u0026     mkdir -p /run/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/sites-enabled"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/nginx.site.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "sed -e 's/;clear_env = no/clear_env = no/' -i /etc/php7/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /app \u0026\u0026     php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php -r \"if (hash_file('sha384', 'composer-setup.php') === 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \u0026\u0026     php composer-setup.php \u0026\u0026     php -r \"unlink('composer-setup.php');\" \u0026\u0026     php composer.phar install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-n",
            "-c",
            "/etc/supervisord.conf"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}