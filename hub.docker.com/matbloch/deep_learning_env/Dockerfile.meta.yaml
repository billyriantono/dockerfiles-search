MetaArgs: null
Stages:
- BaseName: kaixhin/caffe
  Commands:
  - Maintainer: Matthias Bloch <matbloch@ethz.ch>
    Name: maintainer
  - CmdLine:
    - "apt-get update && apt-get install -y     build-essential     cmake     curl
      \    gfortran     git     graphicsmagick     libgraphicsmagick1-dev \tlibatlas-base-dev
      \tlibatlas-dev     libavcodec-dev     libavformat-dev     libboost-all-dev     libgtk2.0-dev
      \    libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config \tlibopencv-dev
      \    python-dev     python-pip     python-numpy     python-nose     python-scipy
      \    python-pandas     python-protobuf    python-setuptools \tlibprotobuf-dev
      \tlibgoogle-glog-dev \tlibgflags-dev \tprotobuf-compiler \tlibhdf5-dev \tlibleveldb-dev
      \tliblmdb-dev \tlibsnappy-dev \tbc \tgfortran > /dev/null     software-properties-common
      \    wget     zip \tpython-matplotlib \tpython-pil \tbuild-essential \tcython
      \tpython-skimage     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps
      | bash -e
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/torch/distro.git ~/torch --recursive
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/torch && ./install.sh &&     cd install/bin &&     ./luarocks install nn
      &&     ./luarocks install dpnn &&     ./luarocks install image &&     ./luarocks
      install optim &&     ./luarocks install csvigo &&     ./luarocks install torchx
      &&     ./luarocks install tds
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /root/torch/install/bin/* /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ &&     mkdir -p ocv-tmp &&     cd ocv-tmp &&     curl -L https://github.com/Itseez/opencv/archive/2.4.11.zip
      -o ocv.zip &&     unzip ocv.zip &&     cd opencv-2.4.11 &&     mkdir release
      &&     cd release &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D
      BUILD_PYTHON_SUPPORT=ON           .. &&     make -j8 &&     make install &&     rm
      -rf ~/ocv-tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ &&     mkdir -p dlib-tmp &&     cd dlib-tmp &&     curl -L          https://github.com/davisking/dlib/archive/v19.0.tar.gz          -o
      dlib.tar.bz2 &&     tar xf dlib.tar.bz2 &&     cd dlib-19.0/python_examples
      &&     mkdir build &&     cd build &&     cmake ../../tools/python &&     cmake
      --build . --config Release &&     cp dlib.so /usr/local/lib/python2.7/dist-packages
      && rm -rf ~/dlib-tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && git clone https://github.com/cmusatyalab/openface.git && cd openface
      && ./models/get-models.sh && pip2 install -r requirements.txt && python2 setup.py
      install && pip2 install -r demos/web/requirements.txt && pip2 install -r training/requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: /root/openface:$PYTHONPATH
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /root/deep_learning_utils
  - CmdLine:
    - cd /root/deep_learning_utils &&     pip2 install -r requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: /root/deep_learning_utils:$PYTHONPATH
    Name: env
  - Name: expose
    Ports:
    - "8000"
    - "9000"
  - Name: workdir
    Path: /root/deep_learning_utils
  From:
    Image: kaixhin/caffe
  Name: ""
  Platform: ""
  SourceCode: FROM kaixhin/caffe
