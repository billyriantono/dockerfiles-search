MetaArgs:
- DefaultValue: '""'
  Key: ARCH
  ProvidedValue: null
  Value: '""'
Stages:
- BaseName: ${ARCH}python:3.6-alpine3.10
  Commands:
  - Env:
    - Key: WORK_DIR
      Value: workdir
    - Key: DATA_PATH
      Value: /data
    - Key: PAI_CONFIG_PATH
      Value: /etc/pai
    - Key: PAI_LOGGING_PATH
      Value: /var/log/pai
    - Key: PAI_MQTT_BIND_PORT
      Value: "18839"
    - Key: PAI_MQTT_BIND_ADDRESS
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: PAI_CONFIG_FILE
      Value: ${PAI_CONFIG_PATH}/pai.conf
    - Key: PAI_LOGGING_FILE
      Value: ${PAI_LOGGING_PATH}/paradox.log
    - Key: OPTIONS_FILE
      Value: ${DATA_PATH}/options.json
    Name: env
  - Env:
    - Key: PAI_CONNECTION_TYPE
      Value: '"$(jq --raw-output ''.connection_type'' $OPTIONS_FILE)"'
    Name: env
  - CmdLine:
    - mkdir -p ${PAI_CONFIG_PATH} ${WORK_DIR} ${PAI_LOGGING_PATH}
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup pai && adduser -S pai -G pai
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R pai ${WORK_DIR} ${PAI_LOGGING_PATH} ${PAI_CONFIG_PATH}
    Name: run
    PrependShell: true
  - Chown: pai
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${WORK_DIR}
  - Chown: pai
    From: ""
    Name: copy
    SourcesAndDest:
    - config/pai.conf.example
    - ${PAI_CONFIG_FILE}
  - CmdLine:
    - cd ${WORK_DIR}   && pip install --no-cache-dir -r requirements.txt   && pip
      install .   && rm -fr ${WORK_DIR}
    Name: run
    PrependShell: true
  - Name: user
    User: pai
  - Name: volume
    Volumes:
    - ${PAI_CONFIG_PATH}
  - Name: volume
    Volumes:
    - ${PAI_LOGGING_PATH}
  - Name: volume
    Volumes:
    - ${DATA_PATH}
  - Name: expose
    Ports:
    - ${PAI_MQTT_BIND_PORT}/tcp
  - Name: expose
    Ports:
    - 10000/tcp
  - CmdLine:
    - pai-service -c ${PAI_CONFIG_PATH}/pai.conf
    Name: cmd
    PrependShell: true
  From:
    Image: ${ARCH}python:3.6-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM ${ARCH}python:3.6-alpine3.10
