{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "solc",
      "BaseName": "ethereum/solc:stable",
      "SourceCode": "FROM ethereum/solc:stable as solc",
      "Platform": "",
      "As": "solc",
      "From": {
        "Image": "ethereum/solc:stable"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "python:3.6-alpine",
      "SourceCode": "FROM python:3.6-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.6-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"nicolas.maurice.valera@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "solc",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/solc",
            "/usr/bin"
          ]
        },
        {
          "CmdLine": [
            "echo -e \"http://mirrors.aliyun.com/alpine/edge/testing\\nhttp://mirrors.aliyun.com/alpine/v3.6/main\\nhttp://mirrors.aliyun.com/alpine/v3.6/community\\n\" \u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk --no-cache --update add gcc g++ make musl-dev gmp-dev openssl-dev libffi-dev leveldb-dev \u0026\u0026     pip install mythril \u0026\u0026     apk del g++ make musl-dev gmp-dev openssl-dev libffi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/contracts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src"
        },
        {
          "CmdLine": [
            "myth"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}