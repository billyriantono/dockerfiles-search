{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "d2cio/php-fpm:7.2-base",
      "SourceCode": "FROM d2cio/php-fpm:7.2-base",
      "Platform": "",
      "From": {
        "Image": "d2cio/php-fpm:7.2-base"
      },
      "Commands": [
        {
          "Key": "MAGENTO_VERSION",
          "Name": "arg",
          "Value": "2.3.0"
        },
        {
          "Env": [
            {
              "Key": "SERVICE",
              "Value": "magento2"
            },
            {
              "Key": "SERVICE_VERSION",
              "Value": "$MAGENTO_VERSION"
            },
            {
              "Key": "MAGENTO_VERSION",
              "Value": "$MAGENTO_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tapt update \u0026\u0026 \tapt-mark showmanual \u003e /tmp/savedAptMark \u0026\u0026 \tdocker-php-source extract \u0026\u0026 \tdocker-php-ext-install bcmath \u0026\u0026 \tapt-get install -y --no-install-recommends libjpeg-dev libpng-dev libfreetype6-dev libwebp-dev libgif-dev \u0026\u0026 \tdocker-php-ext-configure gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-webp-dir --with-gd \u0026\u0026 \tdocker-php-ext-install gd \u0026\u0026 \tapt-get install -y --no-install-recommends libicu-dev \u0026\u0026 \tdocker-php-ext-install intl \u0026\u0026 \tdocker-php-ext-install mysqli \u0026\u0026 \tdocker-php-ext-install opcache \u0026\u0026 \tdocker-php-ext-install pdo_mysql \u0026\u0026 \tapt-get install -y --no-install-recommends libxml2-dev \u0026\u0026 \tdocker-php-ext-install soap \u0026\u0026 \tapt-get install -y --no-install-recommends libxslt1-dev \u0026\u0026 \tdocker-php-ext-install xsl \u0026\u0026 \tapt-get install -y --no-install-recommends zlib1g-dev libzip-dev \u0026\u0026 \tdocker-php-ext-configure zip --with-libzip \u0026\u0026 \tdocker-php-ext-install zip \u0026\u0026 \tpecl install -f redis \u0026\u0026 \tdocker-php-ext-enable redis \u0026\u0026 \tdocker-php-source delete \u0026\u0026 \tapt-mark auto '.*' \u003e /dev/null \u0026\u0026 \t[ -z \"$(cat /tmp/savedAptMark)\" ] || apt-mark manual $(cat /tmp/savedAptMark) \u0026\u0026 \tfind /usr/local -type f -name '*.so*' -exec ldd '{}' ';' | awk '/=\u003e/ { print $(NF-1) }' | sort -u | \t\txargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual \u0026\u0026 \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \u0026\u0026 \trm -rf /tmp/* ~/.pearrc /var/lib/apt/lists/* \u0026\u0026 \tmkdir -p /var/www/$SERVICE \u0026\u0026 \tcurl -sL https://codeload.github.com/magento/$SERVICE/tar.gz/$MAGENTO_VERSION | tar xz -C /var/www/$SERVICE --strip-components=1 \u0026\u0026 \tchown -R www-data:www-data /var/www/$SERVICE \u0026\u0026 \tsu -l www-data -s /bin/bash -c \"cd /var/www/$SERVICE \u0026\u0026 composer install\" \u0026\u0026 \ttar cJf /usr/src/$SERVICE-$SERVICE_VERSION.tar.xz -C /var/www $SERVICE \u0026\u0026 \trm -rf /var/www/$SERVICE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "*.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tchmod +x /*.sh \u0026\u0026 \tln -s /docker-entrypoint.sh /usr/local/bin/cmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}