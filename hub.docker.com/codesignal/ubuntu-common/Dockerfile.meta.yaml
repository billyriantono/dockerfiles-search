MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get clean && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '''en_US.UTF-8'''
    - Key: LANGUAGE
      Value: '''en_US:en'''
    - Key: LC_ALL
      Value: '''en_US.UTF-8'''
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -f install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -fy xvfb
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - xvfb_init
    - /etc/init.d/xvfb
  - CmdLine:
    - chmod a+x /etc/init.d/xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d xvfb defaults
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - xvfb-daemon-run
    - /usr/bin/xvfb-daemon-run
  - CmdLine:
    - chmod a+x /usr/bin/xvfb-daemon-run
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gcc g++ libjson-perl perl python
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-dev python-numpy python3-numpy python-numpy-dev python3-numpy-dev
      python-setuptools python-scipy python3-scipy libatlas-dev python-pip python-pandas
      python3-pandas python3-pip python3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://download.mono-project.com/repo/ubuntu xenial main" | tee /etc/apt/sources.list.d/mono-official.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mono-mcs mono-devel mono-xsp4 mono-xsp4-base mono-complete
      ca-certificates-mono fsharp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y haskell-platform
    Name: run
    PrependShell: true
  - CmdLine:
    - cabal update && cabal install JSON
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mono-vbnc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl libcurl4-openssl-dev wget
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y maven
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g sequelize underscore crypto-js lodash request shelljs http sys
      jquery async connect mysql mysql2 validator  ws co when forever  debug && export
      NODE_PATH=/usr/lib/node_modules/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:longsleep/golang-backports && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y golang-go
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:linuxuprising/java     && apt-get update     && echo
      oracle-java11-installer shared/accepted-oracle-license-v1-2 select true | /usr/bin/debconf-set-selections     &&
      apt-get install -y --no-install-recommends         oracle-java11-installer         oracle-java11-set-default         libjackson2-core-java         libjackson2-databind-java         libmysql-java         maven     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CLASSPATH
      Value: /usr/share/java/*:$CLASSPATH
    Name: env
  - CmdLine:
    - wget http://www.scala-lang.org/files/archive/scala-2.12.5.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i scala-2.12.5.deb && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y scala
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted universe
      multiverse" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mysql-server mysql-server/root_password password root" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mysql-server mysql-server/root_password_again password root" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get -y install mysql-server-5.7 &&   mkdir -p /var/lib/mysql
      &&   mkdir -p /var/run/mysqld &&   mkdir -p /var/log/mysql &&   chown -R mysql:mysql
      /var/lib/mysql &&   chown -R mysql:mysql /var/run/mysqld &&   chown -R mysql:mysql
      /var/log/mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "$ a [client]\n\n[mysql]\n\n[mysqld]"  /etc/mysql/my.cnf &&   sed
      -i -e "s/\(\[client\]\)/\1\ndefault-character-set = utf8/g" /etc/mysql/my.cnf
      &&   sed -i -e "s/\(\[mysql\]\)/\1\ndefault-character-set = utf8/g" /etc/mysql/my.cnf
      &&   sed -i -e "s/\(\[mysqld\]\)/\1\ninit_connect='SET NAMES utf8'\ncharacter-set-server
      = utf8\ncollation-server=utf8_unicode_ci\nbind-address = 0.0.0.0/g" /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y bc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "mysql ALL = NOPASSWD: /usr/sbin/service mysql start" | cat >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y jq dbus-x11 unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://codefightsuserpics.s3.amazonaws.com/galen-ide.zip -P /tmp/
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /tmp/galen-ide.zip -d /tmp && cd /tmp/galen-ide && . /tmp/galen-ide/assembleAndInstall.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:brightbox/ruby-ng && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby2.5
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ondrej/php && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y php7.2
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local && wget http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/46.0.1/linux-x86_64/en-US/firefox-46.0.1.tar.bz2
      && tar xvjf firefox-46.0.1.tar.bz2 && ln -s /usr/local/firefox/firefox /usr/bin/firefox
    Name: run
    PrependShell: true
  - Env:
    - Key: DISPLAY
      Value: :99
    Name: env
  - CmdLine:
    - apt-get install -y clang
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:marutter/rrutter
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:marutter/c2d4u
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y r-base
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y r-cran-stringr r-cran-jsonlite r-cran-httr
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://downloads.dlang.org/releases/2.x/2.079.1/dmd_2.079.1-0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i dmd_2.079.1-0_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libsigsegv2 libffcall1 libreadline5
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ftp.debian.org/debian/pool/main///c/clisp/clisp_2.49-8.1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i clisp_2.49-8.1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://beta.quicklisp.org/quicklisp.lisp -P /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "(quicklisp-quickstart:install)\n(ql:add-to-init-file)\n" >> /tmp/quicklisp.lisp
    Name: run
    PrependShell: true
  - CmdLine:
    - printf '\n' | clisp /tmp/quicklisp.lisp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y make libreadline-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -R -O http://www.lua.org/ftp/lua-5.3.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zxf lua-5.3.4.tar.gz && cd lua-5.3.4 && make linux install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://luajit.org/download/LuaJIT-2.0.5.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvzf LuaJIT-2.0.5.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd LuaJIT-2.0.5 && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g coffeescript@next
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:jonathonf/lisp && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y clojure
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ocaml ocaml-batteries-included
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes erlang
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y erlang-base-hipe
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y elixir
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/rust &&     curl https://sh.rustup.rs -sSf | HOME=/opt/rust sh
      -s -- --no-modify-path -y &&     chmod -R 777 /opt/rust
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zip
    Name: run
    PrependShell: true
  - Env:
    - Key: KOTLIN_VERSION
      Value: 1.2.40
    Name: env
  - Env:
    - Key: KOTLIN_COMPILER_URL
      Value: https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip
    Name: env
  - CmdLine:
    - wget $KOTLIN_COMPILER_URL -O /tmp/a.zip &&     unzip /tmp/a.zip -d /opt &&     rm
      /tmp/a.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/kotlinc/bin
    Name: env
  - CmdLine:
    - add-apt-repository -y ppa:jonathonf/nimlang && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nim
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PATH
      Value: /usr/local/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.6.2
    Name: env
  - CmdLine:
    - mkdir $JULIA_PATH   && apt-get update && apt-get install -y curl   && curl -sSL
      "https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz"
      -o julia.tar.gz   && curl -sSL "https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz.asc"
      -o julia.tar.gz.asc   && export GNUPGHOME="$(mktemp -d)"   && gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys 3673DF529D9049477F76B37566E3C7DC03D6E495   &&
      gpg --batch --verify julia.tar.gz.asc julia.tar.gz   && rm -r "$GNUPGHOME" julia.tar.gz.asc   &&
      tar -xzf julia.tar.gz -C $JULIA_PATH --strip-components 1   && rm -rf /var/lib/apt/lists/*
      julia.tar.gz*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $JULIA_PATH/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y fpc
    Name: run
    PrependShell: true
  - Env:
    - Key: GROOVY_VERSION
      Value: 2.4.15
    Name: env
  - CmdLine:
    - cd /tmp &&     wget http://dl.bintray.com/groovy/maven/apache-groovy-binary-${GROOVY_VERSION}.zip
      &&     unzip apache-groovy-binary-${GROOVY_VERSION}.zip &&     mv groovy-${GROOVY_VERSION}
      /opt/groovy &&     rm apache-groovy-binary-${GROOVY_VERSION}.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: GROOVY_HOME
      Value: /opt/groovy
    Name: env
  - Env:
    - Key: PATH
      Value: $GROOVY_HOME/bin/:$PATH
    Name: env
  - CmdLine:
    - npm install -g typescript @types/node@9.6.7
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tcl8.6 tcllib
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list
      > /etc/apt/sources.list.d/dart_stable.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y dart=1.24.2-1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gnu-smalltalk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y octave
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libmysqlclient-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requests configparser mysql-connector MySql-Python SQLAlchemy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install requests mysql-connector PyMySQL SQLAlchemy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y php-curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y php-mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://dev.mysql.com/get/Downloads/Connector-Net/mysql-connector-net-8.0.11-noinstall.zip
      -P /tmp/
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /tmp/mysql-connector-net-8.0.11-noinstall.zip -d /tmp && cd /tmp/v4.5.2
      && cp MySql.Data.dll /usr/lib/mono/ && cd /usr/lib/mono/ && gacutil -i MySql.Data.dll
      -package MySql.Data
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/JamesNK/Newtonsoft.Json/releases/download/11.0.2/Json110r2.zip
      -P /tmp/
    Name: run
    PrependShell: true
  - CmdLine:
    - 'rm -rf /tmp/Newtonsoft && unzip /tmp/Json110r2.zip -d /tmp/Newtonsoft || :
      && cd /tmp/Newtonsoft/Bin/net45 && cp Newtonsoft.Json.dll /usr/lib/mono/ &&
      cd /usr/lib/mono/ && gacutil -i Newtonsoft.Json.dll -package Newtonsoft.Json'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libmysql-java libssl-dev libdbi-perl libdbd-mysql-perl postgresql
      postgresql-contrib postgresql-client libpq5 libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby`ruby -e 'puts RUBY_VERSION[/\d+\.\d+/]'`-dev libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install rspec pg mysql2 activemodel activerecord activesupport json faker
      pry
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
