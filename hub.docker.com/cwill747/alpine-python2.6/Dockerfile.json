{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:3.4",
      "SourceCode": "FROM gliderlabs/alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Cameron Will \u003ccameron@thewills.email\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Alpine Linux 3.4\""
            },
            {
              "Key": "Version",
              "Value": "\"1.0\""
            },
            {
              "Key": "Tags",
              "Value": "\"python,2.6,alpine\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "8417157EDBE73D9EAC1E539B126EB563A74B06BF"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.6.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "9.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "python-2.6-internal-expat.patch",
            "/python-2.6-internal-expat.patch"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "python-2.6-posix-module.patch",
            "/python-2.6-posix-module.patch"
          ]
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .fetch-deps         openssl         gnupg         tar         xz         \u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"     \u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\"     \u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz     \u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc     \u0026\u0026 mkdir -p /usr/src/python     \u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz     \u0026\u0026 rm python.tar.xz         \u0026\u0026 apk add --no-cache --virtual .build-deps          gcc         libc-dev         linux-headers         make         openssl         readline-dev         tcl-dev         tk         tk-dev         expat-dev         openssl-dev         zlib-dev         ncurses-dev         bzip2-dev         gdbm-dev         sqlite-dev         libffi-dev     \u0026\u0026 apk del .fetch-deps         \u0026\u0026 cd /usr/src/python     \u0026\u0026 mv /python-2.6-internal-expat.patch python-2.6-internal-expat.patch     \u0026\u0026 mv /python-2.6-posix-module.patch python-2.6-posix-module.patch     \u0026\u0026 ls -la     \u0026\u0026 patch -p1 \u003c python-2.6-internal-expat.patch     \u0026\u0026 patch -p1 \u003c python-2.6-posix-module.patch     \u0026\u0026 ./configure --prefix=/usr     --enable-shared     --with-threads     --with-system-ffi     --enable-unicode=ucs4     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)     \u0026\u0026 make install     \u0026\u0026 ln -s /usr/bin/python2.6 /usr/bin/python2             \u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py'         \u0026\u0026 python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\"         \u0026\u0026 rm /tmp/get-pip.py     \u0026\u0026 pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\"     \u0026\u0026 [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ]         \u0026\u0026 find /usr/local -depth         \\(             \\( -type d -a -name test -o -name tests \\)             -o             \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\)         \\) -exec rm -rf '{}' +     \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner --recursive /usr/local             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --virtual .python-rundeps $runDeps     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /usr/src/python ~/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python2"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}