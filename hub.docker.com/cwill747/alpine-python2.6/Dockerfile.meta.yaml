MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine:3.4
  Commands:
  - Maintainer: Cameron Will <cameron@thewills.email>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"Alpine Linux 3.4"'
    - Key: Version
      Value: '"1.0"'
    - Key: Tags
      Value: '"python,2.6,alpine"'
    Name: label
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 8417157EDBE73D9EAC1E539B126EB563A74B06BF
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 2.6.9
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 9.0.1
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - python-2.6-internal-expat.patch
    - /python-2.6-internal-expat.patch
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - python-2.6-posix-module.patch
    - /python-2.6-posix-module.patch
  - CmdLine:
    - set -ex     && apk add --no-cache --virtual .fetch-deps         openssl         gnupg         tar         xz         &&
      wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"     &&
      wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$GPG_KEY"     && gpg --batch --verify python.tar.xz.asc python.tar.xz     &&
      rm -r "$GNUPGHOME" python.tar.xz.asc     && mkdir -p /usr/src/python     &&
      tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz     && rm python.tar.xz         &&
      apk add --no-cache --virtual .build-deps          gcc         libc-dev         linux-headers         make         openssl         readline-dev         tcl-dev         tk         tk-dev         expat-dev         openssl-dev         zlib-dev         ncurses-dev         bzip2-dev         gdbm-dev         sqlite-dev         libffi-dev     &&
      apk del .fetch-deps         && cd /usr/src/python     && mv /python-2.6-internal-expat.patch
      python-2.6-internal-expat.patch     && mv /python-2.6-posix-module.patch python-2.6-posix-module.patch     &&
      ls -la     && patch -p1 < python-2.6-internal-expat.patch     && patch -p1 <
      python-2.6-posix-module.patch     && ./configure --prefix=/usr     --enable-shared     --with-threads     --with-system-ffi     --enable-unicode=ucs4     &&
      make -j$(getconf _NPROCESSORS_ONLN)     && make install     && ln -s /usr/bin/python2.6
      /usr/bin/python2             && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py'         &&
      python2 /tmp/get-pip.py "pip==$PYTHON_PIP_VERSION"         && rm /tmp/get-pip.py     &&
      pip install --no-cache-dir --upgrade --force-reinstall "pip==$PYTHON_PIP_VERSION"     &&
      [ "$(pip list |tac|tac| awk -F '[ ()]+' '$1 == "pip" { print $2; exit }')" =
      "$PYTHON_PIP_VERSION" ]         && find /usr/local -depth         \(             \(
      -type d -a -name test -o -name tests \)             -o             \( -type
      f -a -name '*.pyc' -o -name '*.pyo' \)         \) -exec rm -rf '{}' +     &&
      runDeps="$(         scanelf --needed --nobanner --recursive /usr/local             |
      awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'             | sort -u             |
      xargs -r apk info --installed             | sort -u     )"     && apk add --virtual
      .python-rundeps $runDeps     && apk del .build-deps     && rm -rf /usr/src/python
      ~/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - python2
    Name: cmd
    PrependShell: false
  From:
    Image: gliderlabs/alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine:3.4
