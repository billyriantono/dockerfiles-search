MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Radu Racariu <radu.racariu@gmail.com>"'
    Name: label
  - Key: LDC_VER
    Name: arg
    Value: 1.17.0
  - Env:
    - Key: COMPILER
      Value: ldc
    - Key: COMPILER_VERSION
      Value: $LDC_VER
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y libssl1.0-dev gpg gosu xz-utils curl gcc-arm-linux-gnueabihf
      g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsS -o /tmp/install.sh https://dlang.org/install.sh  && bash /tmp/install.sh
      -p /dlang install "${COMPILER}-${COMPILER_VERSION}"  && rm /tmp/install.sh  &&
      rm -rf /dlang/${COMPILER}-*/lib32
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /dlang/${COMPILER}-${COMPILER_VERSION}/bin:${PATH}
    - Key: LD_LIBRARY_PATH
      Value: /dlang/${COMPILER}-${COMPILER_VERSION}/lib
    - Key: LIBRARY_PATH
      Value: /dlang/${COMPILER}-${COMPILER_VERSION}/lib
    - Key: CC
      Value: arm-linux-gnueabihf-gcc
    - Key: LD
      Value: arm-linux-gnueabihf-ld
    - Key: AR
      Value: arm-linux-gnueabihf-ar
    - Key: PS1
      Value: '"(${COMPILER}-${COMPILER_VERSION}) \\u@\\h:\\w\$"'
    Name: env
  - CmdLine:
    - echo 'ldc2 -mtriple=armv6-linux-gnueabihf -gcc=arm-linux-gnueabihf-gcc "$@"'
      > /dlang/${COMPILER}-${COMPILER_VERSION}/bin/ldc-armhf  && chmod +x /dlang/${COMPILER}-${COMPILER_VERSION}/bin/ldc-armhf
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && rm -R "/dlang/${COMPILER}-${COMPILER_VERSION}/lib" && "/dlang/${COMPILER}-${COMPILER_VERSION}/bin/ldc-build-runtime"
      --dFlags="-w;-mtriple=armv6-linux-gnueabihf" --cFlags="-fPIC" --targetSystem="Linux;UNIX"
      && mkdir "/dlang/${COMPILER}-${COMPILER_VERSION}/lib" && cp ldc-build-runtime.tmp/lib/*.a
      "/dlang/${COMPILER}-${COMPILER_VERSION}/lib" && cp ldc-build-runtime.tmp/lib/*.so
      "/dlang/${COMPILER}-${COMPILER_VERSION}/lib" && rm -R ldc-build-runtime.tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y gpg   && apt-get remove -y cmake cmake-data   && rm -rf
      /var/cache/apt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp  && echo 'void main() {import std.stdio; stdout.writeln("it works");}'
      > test.d  && ldc-armhf test.d  && readelf -h /tmp/test| grep 'Machine:' | sed
      's/:/\n/g' | tail -n 1 | grep ARM > /dev/null  && rm test*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - gosu nobody true  && rm -rf /var/lib/apt/lists/*  && chmod 755 -R /dlang
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ldc-armhf
    - --version
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
