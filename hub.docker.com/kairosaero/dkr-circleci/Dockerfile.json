{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:xenial-scm",
      "SourceCode": "FROM buildpack-deps:xenial-scm",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:xenial-scm"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-e",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y software-properties-common python-software-properties     apt-transport-https unzip vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerproject.gpg",
            "/root/dockerproject.gpg"
          ]
        },
        {
          "CmdLine": [
            "apt-key add /root/dockerproject.gpg   \u0026\u0026 apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y docker-engine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://releases.hashicorp.com/packer/1.0.4/packer_1.0.4_linux_amd64.zip -O packer.zip   \u0026\u0026 unzip packer.zip   \u0026\u0026 mv packer /usr/bin   \u0026\u0026 rm packer.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libgdal1-dev     nginx-full     python3     python3-cairo-dev     python3.5     ipython3-notebook     liblas-dev     libgfortran3     liblapack-dev     gdal-bin     python-gdal     python3-gdal     exiftool     python-pip     python3-pip     python3-numpy     python3-tk     python-numpy     virtualenv     iftop     emacs     libfreetype6-dev     htop     ethstatus     python-tk     postgresql-client     libffi-dev     daemon     file     sudo     jq     less     manpages     man     vim     zip     screen     strace     lsof     net-tools     rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     openjdk-8-doc     openjdk-8-jdk     openjdk-8-jdk-headless     openjdk-8-jre     openjdk-8-jre-headless     scala=2.11.6-6     scala-doc     scala-library     scala-mode-el     scala-parser-combinators     scala-xml     scalapack-doc     scalapack-mpi-test     scalapack-pvm-test     scalapack-test-common     maven     libnetlib-java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/kairos   \u0026\u0026 mkdir -p /opt/kairos/etc   \u0026\u0026 mkdir -p /opt/kairos/log   \u0026\u0026 mkdir -p /opt/kairos/sbin   \u0026\u0026 mkdir -p /opt/kairos/bin   \u0026\u0026 mkdir -p /opt/kairos/config   \u0026\u0026 mkdir -p /opt/kairos/lib   \u0026\u0026 mkdir -p /opt/kairos/build-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_DIST",
              "Value": "spark-2.0.2-bin-hadoop2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_ARCHIVE",
              "Value": "${SPARK_DIST}.tgz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_DOWNLOAD_URL",
              "Value": "https://d3kbcqa49mib13.cloudfront.net/${SPARK_ARCHIVE}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/kairos/lib/spark"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q $SPARK_DOWNLOAD_URL -O $SPARK_ARCHIVE \u0026\u0026     cat $SPARK_ARCHIVE | (cd /opt/kairos/lib ; tar xzf -) \u0026\u0026     mv /opt/kairos/lib/${SPARK_DIST} /opt/kairos/lib/spark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "${SPARK_HOME}/python/lib/py4j-0.10.3-src.zip:${SPARK_HOME}/python/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y remove virtualenv \u0026\u0026 pip2 install virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "virtualenv -p `which python3` --prompt=\"(kairos-python3)\" /opt/kairos/venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". /opt/kairos/venv/bin/activate   \u0026\u0026 pip install --upgrade \"pip\u003c10\" setuptools twine wheel coverage credstash   \u0026\u0026 deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". /opt/kairos/venv/bin/activate   \u0026\u0026 pip install awscli   \u0026\u0026 aws configure set default.s3.signature_version s3v4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build_bin/",
            "/opt/kairos/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod -R 755 /opt/kairos/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/kairos/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KAIROS_VENV",
              "Value": "/opt/kairos/venv"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "shell_init/empty.bashrc",
            "/opt/kairos/config/bashenv"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "shell_init/root.bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Env": [
            {
              "Key": "BASH_ENV",
              "Value": "/opt/kairos/config/bashenv"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chmod -R 755 /opt/kairos/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.ssh \u0026\u0026 chmod 700 /root/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/ssh_config",
            "/root/.ssh/config"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 /root/.ssh/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/python-constraints.txt",
            "/opt/kairos/etc"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/kairos/build-home"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}