{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:1.12.2-alpine",
      "SourceCode": "FROM nginx:1.12.2-alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:1.12.2-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Volkan Kucukcakar\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NGINX_V",
              "Value": "1.12.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NAXSI_V",
              "Value": "0.55.3"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/configurations"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/nginx/conf.d/default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update         pcre-dev         build-base         openssl-dev         zlib-dev         wget         openssl     \u0026\u0026 wget --no-check-certificate https://nginx.org/download/nginx-${NGINX_V}.tar.gz     \u0026\u0026 tar -xzvf nginx-${NGINX_V}.tar.gz     \u0026\u0026 wget --no-check-certificate https://github.com/nbs-system/naxsi/archive/${NAXSI_V}.tar.gz     \u0026\u0026 tar -xzvf ${NAXSI_V}.tar.gz     \u0026\u0026 cd nginx-${NGINX_V}     \u0026\u0026 ./configure --with-compat --add-dynamic-module=../naxsi-${NAXSI_V}/naxsi_src     \u0026\u0026 make modules     \u0026\u0026 cp objs/ngx_http_naxsi_module.so /etc/nginx/modules/     \u0026\u0026 mkdir /etc/nginx/naxsi     \u0026\u0026 cp -rf ../naxsi-${NAXSI_V}/naxsi_config/* /etc/nginx/naxsi/     \u0026\u0026 cd ..     \u0026\u0026 rm -r ${NAXSI_V}.tar.gz  naxsi-${NAXSI_V}     \u0026\u0026 rm -r nginx-${NGINX_V}  nginx-${NGINX_V}.tar.gz     \u0026\u0026 wget --no-check-certificate https://github.com/nbs-system/naxsi-rules/archive/master.tar.gz     \u0026\u0026 tar -xzvf master.tar.gz     \u0026\u0026 mv -f naxsi-rules-master /etc/nginx/naxsi-rules     \u0026\u0026 rm -r master.tar.gz     \u0026\u0026 apk del build-base wget     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update bash     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/nginx/ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/nginx/cache     \u0026\u0026 chown -R nginx:nginx /data/nginx     \u0026\u0026 chmod -R 774 /data/nginx/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "common/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}