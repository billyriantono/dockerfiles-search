{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "radanalyticsio/openshift-spark:2.2-latest",
      "SourceCode": "FROM radanalyticsio/openshift-spark:2.2-latest",
      "Platform": "",
      "From": {
        "Image": "radanalyticsio/openshift-spark:2.2-latest"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            },
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            },
            {
              "Key": "NB_USER",
              "Value": "nbuser"
            },
            {
              "Key": "NB_UID",
              "Value": "1011"
            },
            {
              "Key": "NB_PYTHON_VER",
              "Value": "3.5"
            },
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            },
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/spark"
            },
            {
              "Key": "MINICONDA_VERSION",
              "Value": "4.3.21"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"PySpark Jupyter Notebook.\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"PySpark Jupyter Notebook.\""
            },
            {
              "Key": "io.openshift.expose-services",
              "Value": "\"8888:http\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo 'PS1=\"\\u@\\h:\\w\\\\$ \\[$(tput sgr0)\\]\"' \u003e\u003e /root/.bashrc     \u0026\u0026 chgrp root /etc/passwd     \u0026\u0026 chgrp -R root /opt     \u0026\u0026 chmod -R ug+rwx /opt     \u0026\u0026 useradd -m -s /bin/bash -N -u $NB_UID $NB_USER     \u0026\u0026 usermod -g root $NB_USER     \u0026\u0026 yum install -y curl wget curl tree java-headless bzip2 gnupg2 sqlite3 gcc gcc-c++ glibc-devel git mesa-libGL mesa-libGL-devel ca-certificates vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-permissions.sh",
            "/usr/local/bin/fix-permissions.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $HOME/.jupyter     \u0026\u0026 cd /tmp     \u0026\u0026 curl -s -o Miniconda3.sh https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh     \u0026\u0026 echo c1c15d3baba15bf50293ae963abef853 Miniconda3.sh | md5sum -c -     \u0026\u0026 bash Miniconda3.sh -b -p $CONDA_DIR     \u0026\u0026 rm Miniconda3.sh     \u0026\u0026 export PATH=$CONDA_DIR/bin:$PATH     \u0026\u0026 $CONDA_DIR/bin/conda config --system --prepend channels conda-forge      \u0026\u0026 $CONDA_DIR/bin/conda config --system --set auto_update_conda false      \u0026\u0026 $CONDA_DIR/bin/conda config --system --set show_channel_urls true      \u0026\u0026 $CONDA_DIR/bin/conda update --all --quiet --yes      \u0026\u0026 $CONDA_DIR/bin/conda install --quiet --yes 'nomkl' jupyter 'notebook=5.4.*'         'jupyterlab=0.32*'         'ipywidgets=7.0*'         'pandas=0.19*'         'matplotlib=2.0*'         'scipy=0.19*'         'seaborn=0.7*'         'scikit-learn=0.18*'         'protobuf=3.*'     \u0026\u0026 $CONDA_DIR/bin/conda clean -tipsy     \u0026\u0026 $CONDA_DIR/bin/conda remove --quiet --yes --force qt pyqt     \u0026\u0026 jupyter nbextension enable --py widgetsnbextension --sys-prefix     \u0026\u0026 fix-permissions.sh $CONDA_DIR     \u0026\u0026 fix-permissions.sh $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "mkdir /notebooks      \u0026\u0026 mkdir -p $HOME/.jupyter     \u0026\u0026 echo \"c.NotebookApp.ip = '*'\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py     \u0026\u0026 echo \"c.NotebookApp.open_browser = False\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py     \u0026\u0026 echo \"c.NotebookApp.notebook_dir = '/notebooks'\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py     \u0026\u0026 yum erase -y gcc gcc-c++ glibc-devel     \u0026\u0026 yum clean all -y     \u0026\u0026 rm -rf /root/.npm     \u0026\u0026 rm -rf /root/.cache     \u0026\u0026 rm -rf /root/.config     \u0026\u0026 rm -rf /root/.local     \u0026\u0026 rm -rf /root/tmp     \u0026\u0026 fix-permissions.sh /opt     \u0026\u0026 fix-permissions.sh $CONDA_DIR     \u0026\u0026 fix-permissions.sh /notebooks     \u0026\u0026 fix-permissions.sh $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export PATH=$CONDA_DIR/bin:$PATH     \u0026\u0026 MPLBACKEND=Agg python -c \"import matplotlib.pyplot\"     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/usr/local/bin/start.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/entrypoint",
            "start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        }
      ]
    }
  ]
}