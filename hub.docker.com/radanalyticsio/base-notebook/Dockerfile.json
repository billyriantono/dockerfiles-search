{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "radanalyticsio/openshift-spark:2.3-latest",
      "SourceCode": "FROM radanalyticsio/openshift-spark:2.3-latest",
      "Platform": "",
      "From": {
        "Image": "radanalyticsio/openshift-spark:2.3-latest"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "nbuser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1011"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_PYTHON_VER",
              "Value": "2.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y curl wget java-headless bzip2 gnupg2 sqlite3     \u0026\u0026 yum clean all -y     \u0026\u0026 cd /tmp     \u0026\u0026 wget -q https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh     \u0026\u0026 echo d0c7c71cc5659e54ab51f2005a8d96f3 Miniconda3-4.2.12-Linux-x86_64.sh | md5sum -c -     \u0026\u0026 bash Miniconda3-4.2.12-Linux-x86_64.sh -b -p $CONDA_DIR     \u0026\u0026 rm Miniconda3-4.2.12-Linux-x86_64.sh     \u0026\u0026 export PATH=/opt/conda/bin:$PATH     \u0026\u0026 yum install -y gcc gcc-c++ glibc-devel     \u0026\u0026 /opt/conda/bin/conda install --quiet --yes python=$NB_PYTHON_VER 'nomkl' \t\t\t    'ipywidgets=5.2*' \t\t\t    'matplotlib=1.5*' \t\t\t    'scipy=0.17*' \t\t\t    'seaborn=0.7*' \t\t\t    'cloudpickle=0.1*' \t\t\t    statsmodels \t\t\t    pandas \t\t\t    'dill=0.2*' \t\t\t    notebook \t\t\t    jupyter     \u0026\u0026 pip install widgetsnbextension     \u0026\u0026 yum erase -y gcc gcc-c++ glibc-devel     \u0026\u0026 yum clean all -y     \u0026\u0026 rm -rf /root/.npm     \u0026\u0026 rm -rf /root/.cache     \u0026\u0026 rm -rf /root/.config     \u0026\u0026 rm -rf /root/.local     \u0026\u0026 rm -rf /root/tmp     \u0026\u0026 useradd -m -s /bin/bash -N -u $NB_UID $NB_USER     \u0026\u0026 usermod -g root $NB_USER     \u0026\u0026 chown -R $NB_USER $CONDA_DIR     \u0026\u0026 conda remove --quiet --yes --force qt pyqt     \u0026\u0026 conda remove --quiet --yes --force --feature mkl ; conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/spark"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /notebooks \u0026\u0026 chown $NB_UID:root /notebooks \u0026\u0026 chmod 1777 /notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p -m 700 /home/$NB_USER/.jupyter/ \u0026\u0026     echo \"c.NotebookApp.ip = '*'\" \u003e\u003e /home/$NB_USER/.jupyter/jupyter_notebook_config.py \u0026\u0026     echo \"c.NotebookApp.open_browser = False\" \u003e\u003e /home/$NB_USER/.jupyter/jupyter_notebook_config.py \u0026\u0026     echo \"c.NotebookApp.notebook_dir = '/notebooks'\" \u003e\u003e /home/$NB_USER/.jupyter/jupyter_notebook_config.py \u0026\u0026     chown -R $NB_UID:root /home/$NB_USER \u0026\u0026     chmod g+rwX,o+rX -R /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"PySpark Jupyter Notebook.\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"PySpark Jupyter Notebook.\""
            },
            {
              "Key": "io.openshift.expose-services",
              "Value": "\"8888:http\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc",
            "/tini.asc"
          ]
        },
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 0527A9B7 \u0026\u0026 gpg --verify /tini.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/entrypoint",
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}