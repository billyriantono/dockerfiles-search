{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:latest",
      "SourceCode": "FROM centos:latest",
      "Platform": "",
      "From": {
        "Image": "centos:latest"
      },
      "Commands": [
        {
          "Maintainer": "Subin Modeel \u003csmodeel@redhat.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "nbuser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1011"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_PYTHON_VER",
              "Value": "2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_BIN_PATH",
              "Value": "/opt/conda/bin/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_LIB_PATH",
              "Value": "/opt/conda/lib/python2.7/site-packages"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TENSORBOARD_LOG_DIR",
              "Value": "/workspace"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'PS1=\"\\u@\\h:\\w\\\\$ \\[$(tput sgr0)\\]\"' \u003e\u003e /root/.bashrc     \u0026\u0026 chgrp -R root /opt     \u0026\u0026 chmod -R ug+rwx /opt     \u0026\u0026 chgrp root /etc/passwd     \u0026\u0026 chmod ug+rw /etc/passwd     \u0026\u0026 useradd -m -s /bin/bash -N -u $NB_UID $NB_USER     \u0026\u0026 usermod -g root $NB_USER     \u0026\u0026 yum install -y curl wget bzip2 gnupg2 sqlite3 epel-release tar git gcc gcc-c++ glibc-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-permissions.sh",
            "/usr/local/bin/fix-permissions.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir $HOME/workspace     \u0026\u0026 cd /tmp     \u0026\u0026 wget -q https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh     \u0026\u0026 echo d0c7c71cc5659e54ab51f2005a8d96f3 Miniconda3-4.2.12-Linux-x86_64.sh | md5sum -c -     \u0026\u0026 bash Miniconda3-4.2.12-Linux-x86_64.sh -b -p $CONDA_DIR     \u0026\u0026 rm Miniconda3-4.2.12-Linux-x86_64.sh     \u0026\u0026 export PATH=/opt/conda/bin:$PATH     \u0026\u0026 $CONDA_DIR/bin/conda install --quiet --yes python=$NB_PYTHON_VER 'nomkl'                 'ipywidgets=5.2*'                 'matplotlib=1.5*'                 'scipy=0.17*'                 'seaborn=0.7*'                 'cloudpickle=0.1*'                 statsmodels                 pandas                 'dill=0.2*'                 numpy                 jupyter                 notebook                 scikit-learn                 tensorflow                 psutil                 pillow                 nltk                 gitpython                 requests     \u0026\u0026 $CONDA_DIR/bin/conda remove --quiet --yes --force qt pyqt     \u0026\u0026 $CONDA_DIR/bin/conda clean -tipsy     \u0026\u0026 fix-permissions.sh $CONDA_DIR     \u0026\u0026 fix-permissions.sh $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini -P /tmp     \u0026\u0026 wget -q https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc -P /tmp     \u0026\u0026 cd /tmp      \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 0527A9B7 \u0026\u0026 gpg --verify /tmp/tini.asc     \u0026\u0026 mv /tmp/tini /usr/local/bin/tini     \u0026\u0026 chmod +x /usr/local/bin/tini     \u0026\u0026 mkdir /workspace \u0026\u0026 chown $NB_UID:root /workspace     \u0026\u0026 mkdir -p $HOME/.jupyter     \u0026\u0026 echo \"c.NotebookApp.ip = '*'\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py     \u0026\u0026 echo \"c.NotebookApp.open_browser = False\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py     \u0026\u0026 echo \"c.NotebookApp.notebook_dir = '/workspace'\" \u003e\u003e $HOME/.jupyter/jupyter_notebook_config.py     \u0026\u0026 fix-permissions.sh $CONDA_DIR     \u0026\u0026 fix-permissions.sh /workspace     \u0026\u0026 fix-permissions.sh $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"Tensorflow Jupyter Notebook.\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"Tensorflow Jupyter Notebook.\""
            },
            {
              "Key": "io.openshift.expose-services",
              "Value": "\"8888:http,6006:http\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/usr/local/bin/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "tensorflow_model_server",
            "/usr/local/bin/tensorflow_model_server"
          ]
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        }
      ]
    }
  ]
}