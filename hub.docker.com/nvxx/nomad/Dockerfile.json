{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Maintainer": "NV \u003cneovortex@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NOMAD_VERSION",
              "Value": "0.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.29-r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HASHICORP_RELEASES",
              "Value": "https://releases.hashicorp.com"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026   apk add --no-cache curl gnupg dumb-init openssl ca-certificates \u0026\u0026   for keyserver in $(shuf -e     ha.pool.sks-keyservers.net     hkp://p80.pool.sks-keyservers.net:80     keyserver.ubuntu.com     hkp://keyserver.ubuntu.com:80);     do gpg --keyserver $keyserver --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C \u0026\u0026 break || true ;   done \u0026\u0026   mkdir -p /tmp/build \u0026\u0026   cd /tmp/build \u0026\u0026   curl -L -o /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \u0026\u0026   curl -L -o glibc-${GLIBC_VERSION}.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \u0026\u0026   apk add glibc-${GLIBC_VERSION}.apk \u0026\u0026   curl -L -o nomad_${NOMAD_VERSION}_linux_amd64.zip ${HASHICORP_RELEASES}/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_amd64.zip \u0026\u0026   curl -L -o nomad_${NOMAD_VERSION}_SHA256SUMS      ${HASHICORP_RELEASES}/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_SHA256SUMS \u0026\u0026   curl -L -o nomad_${NOMAD_VERSION}_SHA256SUMS.sig  ${HASHICORP_RELEASES}/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_SHA256SUMS.sig \u0026\u0026   gpg --batch --verify nomad_${NOMAD_VERSION}_SHA256SUMS.sig nomad_${NOMAD_VERSION}_SHA256SUMS \u0026\u0026   grep nomad_${NOMAD_VERSION}_linux_amd64.zip nomad_${NOMAD_VERSION}_SHA256SUMS | sha256sum -c \u0026\u0026   unzip -d /bin nomad_${NOMAD_VERSION}_linux_amd64.zip \u0026\u0026   chmod +x /bin/nomad \u0026\u0026   cd /tmp \u0026\u0026   rm -rf /tmp/build \u0026\u0026   apk del curl gnupg \u0026\u0026   sleep 1 \u0026\u0026 rm -rf /root/.gnupg \u0026\u0026   nomad version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /nomad/data \u0026\u0026     mkdir -p /etc/nomad"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4646",
            "4647",
            "4648",
            "4648/udp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "agent"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}