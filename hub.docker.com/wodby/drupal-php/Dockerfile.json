{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Wodby \u003cadmin@wodby.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'http://alpine.gliderlabs.com/alpine/edge/main' \u003e /etc/apk/repositories \u0026\u0026     echo 'http://alpine.gliderlabs.com/alpine/edge/community' \u003e\u003e /etc/apk/repositories \u0026\u0026     echo 'http://alpine.gliderlabs.com/alpine/edge/testing' \u003e\u003e /etc/apk/repositories \u0026\u0026     apk add --update         libressl         ca-certificates         openssh-client         rsync         git         curl         wget         gzip         tar         patch         perl         pcre         imap         imagemagick         mariadb-client         build-base         autoconf         libtool         php7-dev         pcre-dev         imagemagick-dev         php7         php7-fpm         php7-opcache         php7-session         php7-dom         php7-xml         php7-xmlreader         php7-ctype         php7-ftp         php7-gd         php7-json         php7-posix         php7-curl         php7-pdo         php7-pdo_mysql         php7-sockets         php7-zlib         php7-mcrypt         php7-mysqli         php7-sqlite3         php7-bz2         php7-phar         php7-openssl         php7-posix         php7-zip         php7-calendar         php7-iconv         php7-imap         php7-soap         php7-dev         php7-pear         php7-redis         php7-mbstring         php7-xdebug         php7-exif         php7-xsl         php7-ldap         php7-bcmath         php7-memcached         php7-oauth         php7-apcu         \u0026\u0026     ln -sf /usr/bin/php7 /usr/bin/php \u0026\u0026     ln -sf /usr/sbin/php-fpm7 /usr/bin/php-fpm \u0026\u0026     sed -ie 's/-n//g' /usr/bin/pecl \u0026\u0026     yes | pecl install imagick \u0026\u0026     echo 'extension=imagick.so' \u003e /etc/php7/conf.d/imagick.ini \u0026\u0026     cd /tmp/ \u0026\u0026 wget https://github.com/Jan-E/uploadprogress/archive/master.zip \u0026\u0026     unzip master.zip \u0026\u0026     cd uploadprogress-master/ \u0026\u0026     phpize7 \u0026\u0026 ./configure --with-php-config=/usr/bin/php-config7 \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     echo 'extension=uploadprogress.so' \u003e /etc/php7/conf.d/20_uploadprogress.ini \u0026\u0026     cd .. \u0026\u0026 rm -rf ./master.zip ./uploadprogress-master \u0026\u0026     rm /etc/php7/conf.d/xdebug.ini \u0026\u0026     curl -sS https://getcomposer.org/installer | php7 -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     curl -sSL https://phar.phpunit.de/phpunit.phar -o phpunit.phar \u0026\u0026         chmod +x phpunit.phar \u0026\u0026         mv phpunit.phar /usr/local/bin/phpunit \u0026\u0026     php -r \"readfile('https://s3.amazonaws.com/files.drush.org/drush.phar');\" \u003e /usr/local/bin/drush \u0026\u0026     chmod +x /usr/local/bin/drush \u0026\u0026     curl https://drupalconsole.com/installer -o /usr/local/bin/drupal \u0026\u0026     chmod +x /usr/local/bin/drupal \u0026\u0026     apk del --purge         *-dev         build-base         autoconf         libtool         \u0026\u0026     rm -rf         /usr/include/php         /usr/lib/php/build         /var/cache/apk/*         /tmp/*         /root/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i         -e \"s/^expose_php.*/expose_php = Off/\"         -e \"s/^;date.timezone.*/date.timezone = UTC/\"         -e \"s/^memory_limit.*/memory_limit = -1/\"         -e \"s/^max_execution_time.*/max_execution_time = 300/\"         -e \"s/^; max_input_vars.*/max_input_vars = 2000/\"         -e \"s/^post_max_size.*/post_max_size = 512M/\"         -e \"s/^upload_max_filesize.*/upload_max_filesize = 512M/\"         -e \"s/^error_reporting.*/error_reporting = E_ALL/\"         -e \"s/^display_errors.*/display_errors = On/\"         -e \"s/^display_startup_errors.*/display_startup_errors = On/\"         -e \"s/^track_errors.*/track_errors = On/\"         -e \"s/^mysqlnd.collect  _memory_statistics.*/mysqlnd.collect_memory_statistics = On/\"         /etc/php7/php.ini \u0026\u0026     echo \"error_log = \\\"/proc/self/fd/2\\\"\" | tee -a /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "00_opcache.ini",
            "/etc/php7/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "00_xdebug.ini",
            "/etc/php7/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/etc/php7/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/drush/site-aliases"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default.aliases.drushrc.php",
            "/etc/drush/site-aliases/"
          ]
        },
        {
          "CmdLine": [
            "addgroup -g 82 -S www-data \u0026\u0026 \tadduser -u 82 -D -S -G www-data www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html \u0026\u0026     chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo:^0.3 --optimize-autoloader \u0026\u0026     rm -rf ~/.composer/.cache \u0026\u0026     drupal init --override"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}