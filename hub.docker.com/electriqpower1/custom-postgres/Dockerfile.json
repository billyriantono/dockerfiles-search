{
  "MetaArgs": [
    {
      "Key": "PG_VERSION",
      "DefaultValue": "10",
      "ProvidedValue": null,
      "Value": "10"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:${PG_VERSION}",
      "SourceCode": "FROM postgres:${PG_VERSION}",
      "Platform": "",
      "From": {
        "Image": "postgres:${PG_VERSION}"
      },
      "Commands": [
        {
          "Maintainer": "Elctriq Power https://electriqpower.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION",
              "Value": "${PG_VERSION:-10}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMESCALEDB_VERSION",
              "Value": "${TIMESCALEDB_VERSION:-1.0.0}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_VERSION",
              "Value": "${POSTGIS_VERSION:-2.4}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -yq     \u0026\u0026 apt-get install -yy postgresql-10-postgis-${POSTGIS_VERSION} postgresql-10-postgis-${POSTGIS_VERSION}-scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yy curl wget apt-transport-https apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c \"echo 'deb https://packagecloud.io/timescale/timescaledb/debian/ `lsb_release -c -s` main' \u003e /etc/apt/sources.list.d/timescaledb.list\"     \u0026\u0026 wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | apt-key add -     \u0026\u0026 apt-get update -yq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yy timescaledb-postgresql-10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PIPELINEDB_VERSION",
              "Value": "${PIPELINEDB_VERSION:-1.0.0-6}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "export PG_MAJOR_VERSION=$(echo \"${PG_VERSION}\" | cut -d'.' -f1-1)     \u0026\u0026 PIPELINEDB_PACKAGE=\"pipelinedb-postgresql-${PG_MAJOR_VERSION}_${PIPELINEDB_VERSION}.debian9_amd64.deb\"     \u0026\u0026 wget https://github.com/pipelinedb/pipelinedb/releases/download/${PIPELINEDB_VERSION}/${PIPELINEDB_PACKAGE}     \u0026\u0026 dpkg -i ${PIPELINEDB_PACKAGE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yy ruby ruby-dev gcc build-essential git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install pgbundle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -r -i \"s/[#]*\\s*(shared_preload_libraries)\\s*=\\s*'(.*)'/\\1 = 'pg_stat_statements,pipelinedb,timescaledb,\\2'/;s/,'/'/\"     /usr/share/postgresql/postgresql.conf.sample     \u0026\u0026 service postgresql restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yy flex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yy mysql-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yy mysql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yq libmariadbclient-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/Pgfile",
            "/config/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/config"
        },
        {
          "CmdLine": [
            "$(nohup /docker-entrypoint.sh postgres \u003e /dev/null \u0026)     \u0026\u0026 echo \"Waiting for postgres to start...\"     \u0026\u0026 sleep 20     \u0026\u0026 pgbundle install Pgfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh",
            "postgres"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}