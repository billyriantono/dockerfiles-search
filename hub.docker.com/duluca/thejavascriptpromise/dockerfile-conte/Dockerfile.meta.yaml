MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - CmdLine:
    - apt-get -y update &&            apt-get -y install wget python-pip  python-setuptools
      build-essential python-dev libatlas-dev libatlas3gf-base liblapack-dev gfortran                               libfreetype6
      libpng12-0 libfreetype6-dev libxft-dev libfreetype6-dev pkg-config
    Name: run
    PrependShell: true
  - Env:
    - Key: WHEEL_DIR
      Value: /opt/python/wheelhouse
    - Key: TMP_WHEEL_DIR
      Value: /tmp/wheelhouse/
    Name: env
  - CmdLine:
    - mkdir -p "$WHEEL_DIR"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt/python/wheelhouse
  - CmdLine:
    - mkdir -p /opt/scripts/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - modelica_files/*.sh
    - uwsgi_files/*.sh
    - python_files/*.sh
    - python_files/requirements-*.txt
    - /opt/scripts/
  - CmdLine:
    - chmod u+x /opt/scripts/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --find-links "$WHEEL_DIR" -U 'pip==1.5.4' 'wheel==0.24.0'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --find-links "$WHEEL_DIR" -U -r /opt/scripts/requirements-science.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --find-links "$WHEEL_DIR" -U -r /opt/scripts/requirements-web.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - uwsgi_files/wsgi_custom.conf
    - /httpd/conf.d/wsgi_custom.conf
  - CmdLine:
    - /opt/scripts/update_modelica_194.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: UWSGI_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: UWSGI_UID
      Value: uwsgi
    - Key: UWSGI_GID
      Value: uwsgi
    - Key: UWSGI_LOG_FILE
      Value: /var/log/uwsgi/uwsgi.log
    Name: env
  - CmdLine:
    - echo "Adding user '${UWSGI_UID}' with group '${UWSGI_GID}'for uwsgi and logging
      to '${UWSGI_LOG_FILE}' . " &&            groupadd "${UWSGI_GID}" && useradd
      "${UWSGI_UID}" -g "${UWSGI_GID}" -s /bin/false &&            export UWSGI_LOG_DIR=$(dirname
      "${UWSGI_LOG_FILE}") &&            if [ '!' -d "$UWSGI_LOG_DIR" ] ; then mkdir
      -p "$UWSGI_LOG_DIR" && chown -R ${UWSGI_UID}:${UWSGI_GID} "$UWSGI_LOG_DIR" ;
      fi &&            touch "${UWSGI_LOG_FILE}" && chown -R ${UWSGI_UID}:${UWSGI_GID}
      "$UWSGI_LOG_FILE"
    Name: run
    PrependShell: true
  - Env:
    - Key: APP_DIR
      Value: /var/app
    Name: env
  - Expression: COPY       . $APP_DIR
    Name: onbuild
  - Expression: RUN        chmod a+x  "$APP_DIR"/scripts/*.py && chown -R uwsgi:uwsgi  $APP_DIR
    Name: onbuild
  - Name: workdir
    Path: $APP_DIR
  - Expression: RUN        pip install --find-links $WHEEL_DIR -r $APP_DIR/requirements.txt
    Name: onbuild
  - Env:
    - Key: PYTHONPATH
      Value: /usr/lib/python2.7/dist-packages/:$APP_DIR
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - CmdLine: []
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /opt/scripts/uwsgi-start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM       ubuntu:14.04
