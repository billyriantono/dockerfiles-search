{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "tsalvia \u003ctsaliva.ctf@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y          software-properties-common         vim                     curl                    wget                    netcat                  socat                   unzip                   bzip2                   strace                  ltrace                  binutils                bsdmainutils            valgrind                qemu-user-static        git                     make                    gcc                     g++                     bison                   flex                    pkg-config              liblzo2-dev             lib32z1                 libc6-dev-i386          libffi-dev              libssl-dev              libreadline-dev         zlib1g-dev              libncurses5-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:ubuntu-toolchain-r/test -y \u0026\u0026     apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y gcc-9-multilib g++-9-multilib \u0026\u0026     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 30 \u0026\u0026     update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 30 \u0026\u0026     update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 30 \u0026\u0026     update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 30"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O - https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3.tar.gz | tar xvzf - -C /opt \u0026\u0026     cd /opt/cmake-3.15.3 \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gdb \u0026\u0026     git clone https://github.com/longld/peda.git /opt/peda \u0026\u0026     echo \"source /opt/peda/peda.py\" \u003e /root/.gdbinit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3.5 python3.5-dev \u0026\u0026     update-alternatives --install /usr/bin/python python /usr/bin/python3.5 30 \u0026\u0026     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 30 \u0026\u0026     curl -kL https://bootstrap.pypa.io/get-pip.py | python \u0026\u0026     pip3 install --upgrade git+https://github.com/arthaud/python3-pwntools.git \u0026\u0026     pip3 install --upgrade angr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/sstephenson/rbenv.git /root/.rbenv \u0026\u0026     git clone https://github.com/sstephenson/ruby-build.git /root/.rbenv/plugins/ruby-build \u0026\u0026     /root/.rbenv/bin/rbenv install 2.6.3 \u0026\u0026     /root/.rbenv/bin/rbenv global 2.6.3 \u0026\u0026     echo 'export PATH=\"/root/.rbenv/bin:$PATH\"' \u003e\u003e /root/.bashrc \u0026\u0026     echo 'eval \"$(rbenv init -)\"' \u003e\u003e /root/.bashrc \u0026\u0026     /root/.rbenv/versions/2.6.3/bin/gem install one_gadget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/radare/radare2.git /opt/radare2 \u0026\u0026     /opt/radare2/sys/install.sh \u0026\u0026     r2pm init \u0026\u0026     r2pm -i r2ghidra-dec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/akiym/akitools /opt/akitools \u0026\u0026     echo 'export PATH=\"/opt/akitools:$PATH\"' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y g++ \u0026\u0026     wget -O - http://sourceforge.net/projects/hte/files/ht-source/ht-2.1.0.tar.bz2 | tar xvfj - -C /opt \u0026\u0026     cd /opt/ht-2.1.0/ \u0026\u0026     ./configure CXX=g++-4.8 \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/niklasb/libc-database.git /opt/libc-database"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ulimit -c unlimited\" \u003e\u003e /root/.bashrc \u0026\u0026     echo \"echo 0 \u003e /proc/sys/kernel/randomize_va_space\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/workdir"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}