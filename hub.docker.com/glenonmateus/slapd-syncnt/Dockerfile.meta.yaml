MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Labels:
    - Key: version
      Value: '"1.2"'
    - Key: maintainer
      Value: '"Jos√© Luis Salvador Rufo <salvador.joseluis@gmail.com>"'
    Name: label
  - Env:
    - Key: MAKEFLAGS
      Value: '"-j$(nproc)"'
    - Key: PATH
      Value: '"/home/elasticsearch/elasticsearch-5.3.3/bin:${PATH}"'
    - Key: CONTAINER_ES_HOST
      Value: '"0.0.0.0"'
    - Key: CONTAINER_ES_PORT
      Value: '"9200"'
    Name: env
  - Name: workdir
    Path: /home/elasticsearch/elasticsearch-5.3.3/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.3.3.tar.gz
    - /tmp/
  - CmdLine:
    - 'apk add --no-cache openjdk8-jre su-exec bash npm gnupg py-pip     && adduser
      -D elasticsearch     && tar xf /tmp/elasticsearch-5.3.3.tar.gz -C /home/elasticsearch/     &&
      sed -i ''s/#network.host: 192.168.0.1/network.host: ${CONTAINER_ES_HOST}\nnode.max_local_storage_nodes:
      2/g'' /home/elasticsearch/elasticsearch-5.3.3/config/elasticsearch.yml     &&
      sed -i ''s/#http.port: 9200/http.port: ${CONTAINER_ES_PORT}/g'' /home/elasticsearch/elasticsearch-5.3.3/config/elasticsearch.yml     &&
      npm config set unsafe-perm true     && npm install --production -g elasticdump@6.10.1     &&
      pip install awscli     && rm -rf /var/cache/apk/* /tmp/*'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/elasticsearch/elasticsearch-5.3.3/data
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
