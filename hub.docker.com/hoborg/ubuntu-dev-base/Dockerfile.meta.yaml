MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Key: PROXY
    Name: arg
    Value: ''''''
  - Env:
    - Key: http_proxy
      Value: $PROXY
    Name: env
  - Env:
    - Key: https_proxy
      Value: $PROXY
    Name: env
  - Env:
    - Key: TERM
      Value: screen-256color
    Name: env
  - Env:
    - Key: USER
      Value: devbox
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$USER
    Name: env
  - Env:
    - Key: XDG_CONFIG_HOME
      Value: $HOME/.config
    Name: env
  - Name: workdir
    Path: /home/$USER
  - CmdLine:
    - echo 'Acquire::http::No-Cache true;\nAcquire::http::Pipeline-Depth 0;'     >>
      /etc/apt/apt.conf.d/no-pipeline
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install sudo locales -y &&     adduser --disabled-password
      --gecos '' $USER &&     adduser $USER sudo &&     echo '%sudo ALL=(ALL) NOPASSWD:ALL'
      >> /etc/sudoers &&     apt-get autoremove -y &&     apt-get clean &&     rm
      -rf /var/lib/apt/lists
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:git-core/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:neovim-ppa/stable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends mc bash zsh automake pkg-config libpcre3-dev     tmux
      rubygems build-essential make tree curl man-db sudo software-properties-common     zlib1g-dev
      liblzma-dev libssl-dev xsel ctags     python libpython2.7-dev python-setuptools
      python-pip     python3 libpython3.5-dev python3-setuptools python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git neovim
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install neovim
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install neovim virtualenvwrapper trash-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install homesick rouge
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R "$USER":"$USER" /home/$USER
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s /usr/bin/zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s /usr/bin/zsh $USER
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - CmdLine:
    - git clone https://github.com/pyenv/pyenv.git ~/.pyenv
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/pyenv/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./build.sh
    - /tmp/build.sh
  - CmdLine:
    - bash /tmp/build.sh && sudo rm /tmp/build.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - tput reset
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/zsh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
