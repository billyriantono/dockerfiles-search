{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "veitveit/protprotocols_template",
      "SourceCode": "FROM veitveit/protprotocols_template",
      "Platform": "",
      "From": {
        "Image": "veitveit/protprotocols_template"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y mono-complete libxml2-dev libnetcdf-dev  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "DockerSetup/install_packages.R",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "Rscript /tmp/install_packages.R \u0026\u0026 rm /tmp/install_packages.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install psutil \u0026\u0026     pip3 install pandas \u0026\u0026     pip3 install tzlocal \u0026\u0026     pip3 install button-execute"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "misc/tree.html",
            "/usr/local/lib/python3.5/dist-packages/notebook/templates/"
          ]
        },
        {
          "Name": "user",
          "User": "biodocker"
        },
        {
          "CmdLine": [
            "mkdir /home/biodocker/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PVersion=1.16.27 \u0026\u0026 ZIP=PeptideShaker-${PVersion}.zip \u0026\u0026     wget -q http://genesis.ugent.be/maven2/eu/isas/peptideshaker/PeptideShaker/${PVersion}/$ZIP -O /tmp/$ZIP \u0026\u0026     unzip /tmp/$ZIP -d /home/biodocker/bin/ \u0026\u0026 rm /tmp/$ZIP \u0026\u0026     bash -c 'echo -e \"#!/bin/bash\\njava -jar /home/biodocker/bin/PeptideShaker-${PVersion}/PeptideShaker-${PVersion}.jar $@\"' \u003e /home/biodocker/bin/PeptideShaker \u0026\u0026     chmod +x /home/biodocker/bin/PeptideShaker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "SVersion=3.3.3 \u0026\u0026 ZIP=SearchGUI-${SVersion}-mac_and_linux.tar.gz \u0026\u0026     wget -q http://genesis.ugent.be/maven2/eu/isas/searchgui/SearchGUI/${SVersion}/$ZIP -O /tmp/$ZIP \u0026\u0026     tar -xzf /tmp/$ZIP -C /home/biodocker/bin/ \u0026\u0026     rm /tmp/$ZIP \u0026\u0026     bash -c 'echo -e \"#!/bin/bash\\njava -jar /home/biodocker/bin/SearchGUI-$SVersion/SearchGUI-$SVersion.jar $@\"' \u003e /home/biodocker/bin/SearchGUI \u0026\u0026     chmod +x /home/biodocker/bin/SearchGUI"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/biodocker/bin/SearchGUI:/home/biodocker/bin/PeptideShaker:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/biodocker/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Isobaric_Workflow.ipynb",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Description.ipynb",
            "."
          ]
        },
        {
          "CmdLine": [
            "mkdir Scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Scripts/",
            "Scripts/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Test/iTRAQCancer.mgf",
            "IN"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Test/sp_human.fasta",
            "IN"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Test/exp_design_example.tsv",
            "IN"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "chown -R biodocker ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rmdir /home/biodocker/LOG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "misc/ShortWorkflow.svg",
            "misc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "misc/ExperimentalDesigns.svg",
            "misc"
          ]
        },
        {
          "CmdLine": [
            "ln -s /data data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py --sys-prefix button_execute"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "biodocker"
        },
        {
          "CmdLine": [
            "jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace Isobaric_Workflow.ipynb \u0026\u0026     jupyter trust Isobaric_Workflow.ipynb"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}