{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "biocontainers/biocontainers:latest",
      "SourceCode": "FROM biocontainers/biocontainers:latest",
      "Platform": "",
      "From": {
        "Image": "biocontainers/biocontainers:latest"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "biodocker"
        },
        {
          "CmdLine": [
            "mkdir -p /home/biodocker/.local/share/jupyter/kernels  \u0026\u0026 mkdir -p /home/biodocker/.local/share/jupyter/runtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9  \u0026\u0026 echo \"deb http://cran.wu.ac.at/bin/linux/ubuntu xenial/\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y libnetcdf11 libnetcdf-dev libcurl3-dev libxml2-dev libssl-dev r-base  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y pandoc texlive-xetex \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install -y python3 python3-pip python3-pandas wkhtmltopdf \u0026\u0026 apt-get clean \u0026\u0026  python3 -m pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/python python /usr/bin/python3.5 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install jupyter \u0026\u0026 pip3 --no-cache-dir install rpy2 --upgrade \u0026\u0026 pip3 --no-cache-dir install jupyterlab \u0026\u0026   jupyter serverextension enable --py jupyterlab --sys-prefix \u0026\u0026  pip3 --no-cache-dir install bokeh \u0026\u0026 pip3 --no-cache-dir install ipywidgets \u0026\u0026 pip3 --no-cache-dir install jupyterhub \u0026\u0026 pip3 --no-cache-dir install pandas --upgrade \u0026\u0026 rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install jupyter_contrib_nbextensions \u0026\u0026 jupyter contrib nbextension install --user  \u0026\u0026 pip3 --no-cache-dir install jupyter_nbextensions_configurator \u0026\u0026 jupyter nbextensions_configurator enable --sys-prefix  \u0026\u0026 rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install ipywidgets \u0026\u0026 jupyter nbextension enable --py widgetsnbextension --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ipython  kernel install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('devtools', repos='http://cran.rstudio.com/')\"  -e \"devtools::install_github('IRkernel/IRkernel')\" -e \"IRkernel::installspec()\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install hide_code \u0026\u0026  jupyter nbextension install --py hide_code --sys-prefix \u0026\u0026 jupyter nbextension enable --py hide_code --sys-prefix \u0026\u0026 jupyter serverextension enable --py hide_code --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/biodocker"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter",
            "/home/biodocker/.jupyter"
          ]
        },
        {
          "CmdLine": [
            "mkdir IN  OUT LOG misc \u0026\u0026 rmdir bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "page.html",
            "/usr/local/lib/python3.5/dist-packages/notebook/templates/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tree.html",
            "/usr/local/lib/python3.5/dist-packages/notebook/templates/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Eubic_logo.png",
            "/home/biodocker/misc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "notebook.json",
            "/home/biodocker/.jupyter/nbconfig/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Example.ipynb",
            "."
          ]
        },
        {
          "CmdLine": [
            "chown -R biodocker:biodocker /home/biodocker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "biodocker"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter notebook --ip=0.0.0.0 --no-browser"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}