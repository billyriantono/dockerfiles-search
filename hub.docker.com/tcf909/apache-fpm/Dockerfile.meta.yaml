MetaArgs: null
Stages:
- BaseName: tcf909/ubuntu-slim
  Commands:
  - Maintainer: tcf909@gmail.com
    Name: maintainer
  - Env:
    - Key: APACHE_CONFDIR
      Value: /etc/apache2
    Name: env
  - Env:
    - Key: APACHE_ENVVARS
      Value: $APACHE_CONFDIR/envvars
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.9
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-7.2.9.tar.xz/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"3585c1222e00494efee4f5a65a8e03a1e6eca3dfb834814236ee7f02c5248ae0"'
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: '"/etc/php"'
    Name: env
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - "set -ex;     apt-get update;     apt-get install --no-install-recommends -y
      \        apache2;     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \    apt-get clean;     rm -rf /var/lib/apt/lists/* /tmp/*;     a2enmod proxy
      proxy_fcgi rewrite; \tsed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport
      \\1/' \"$APACHE_ENVVARS\"; \t. \"$APACHE_ENVVARS\"; \tfor dir in \t\t\"$APACHE_LOCK_DIR\"
      \t\t\"$APACHE_RUN_DIR\" \t\t\"$APACHE_LOG_DIR\" \t\t/var/www/html \t; do \t\trm
      -rvf \"$dir\"; \t\tmkdir -p \"$dir\"; \t    chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\"
      \"$dir\"; \tdone; \tln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\";     ln
      -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\";     ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/usr/local/bin/docker-php*
    - /usr/local/bin/
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - CmdLine:
    - "set -ex; \t{ \t\techo 'Package: php*'; \t\techo 'Pin: release *'; \t\techo
      'Pin-Priority: -1'; \t} > /etc/apt/preferences.d/no-debian-php;     apt-get
      update;     apt-get install --no-install-recommends -y \t\tautoconf         dpkg-dev
      \        file         g++         gcc         libc-dev         make         pkg-config
      \        re2c \t\tca-certificates \t\tcurl \t\txz-utils \t\tlibfreetype6-dev
      \        libicu-dev         libjpeg-dev         libmcrypt-dev         libpng12-dev
      \        libpq-dev;     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \    apt-get clean;     rm -rf /var/lib/apt/lists/* /tmp/*;"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get
      install -y --no-install-recommends \t\tlibcurl4-openssl-dev \t\tlibedit-dev
      \t\tlibsodium-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tzlib1g-dev
      \t\tlibbz2-dev \t\tlibmysqlclient-dev;     sed -e \"s/$(lsb_release -cs)/cosmic/g\"
      /etc/apt/sources.list > /etc/apt/sources.list.d/cosmic.list;     {         echo
      'Package: *';         echo 'Pin: release n=cosmic';         echo 'Pin-Priority:
      -10';         echo;         echo 'Package: libargon2*';         echo 'Pin: release
      n=cosmic';         echo 'Pin-Priority: 990';     } > /etc/apt/preferences.d/argon2-cosmic;
      \    apt-get update;     apt-get install -y --no-install-recommends         libargon2-dev;
      \trm -rf /var/lib/apt/lists/*; \t\tmkdir -p /usr/src/php; \tcd /usr/src; \twget
      -O php.tar.xz \"$PHP_URL\";     echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -;     docker-php-source extract; \tcd /usr/src/php; \t   export    \t\tCFLAGS=\"$PHP_CFLAGS\"
      \   \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"    \t\tLDFLAGS=\"$PHP_LDFLAGS\";     \tgnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"; \tdebMultiarch=\"$(dpkg-architecture --query
      DEB_BUILD_MULTIARCH)\"; \tif [ ! -d /usr/include/curl ]; then \t\tln -sT \"/usr/include/$debMultiarch/curl\"
      /usr/local/include/curl; \tfi; \tmkdir -p \"${PHP_INI_DIR}/conf.d\"; \t./configure
      \t\t--build=\"$gnuArch\" \t\t--sysconfdir=\"${PHP_INI_DIR}\" \t\t--with-config-file-path=\"${PHP_INI_DIR}\"
      \t\t--with-config-file-scan-dir=\"${PHP_INI_DIR}/conf.d\" \t\t--enable-option-checking=fatal
      \t\t--with-mhash \t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t--with-password-argon2 \t\t--with-sodium \t\t--with-curl \t\t--with-libedit
      \t\t--with-openssl \t\t--with-zlib \t\t$(test \"$gnuArch\" = 's390x-linux-gnu'
      && echo '--without-pcre-jit') \t\t--with-libdir=\"lib/$debMultiarch\" \t\t--enable-fpm
      \t\t--with-fpm-user=www-data \t\t--with-fpm-group=www-data \t\t--disable-cgi;
      \tmake -j \"$(nproc)\"; \tmake install; \tdocker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/ --with-png-dir=/usr;     docker-php-ext-install
      gd opcache bz2 calendar iconv intl mbstring mysqli pdo_mysql pdo_pgsql pgsql
      zip;     pecl install mcrypt-1.0.1;     docker-php-ext-enable mcrypt; \tfind
      /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}'
      + || true; \tmake clean; \tcd /; \tdocker-php-source delete \tapt-mark auto
      '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;
      \tfind /usr/local -type f -executable -exec ldd '{}' ';' \t\t| awk '/=>/ { print
      $(NF-1) }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1
      \t\t| sort -u \t\t| xargs -r apt-mark manual; \tapt-get purge -y --auto-remove
      -o APT::AutoRemove::RecommendsImportant=false;     apt-get clean;     rm -rf
      /var/lib/apt/lists/* /tmp/*; \t\tphp --version; \t\tpecl update-channels; \trm
      -rf /tmp/pear ~/.pearrc;     cd \"${PHP_INI_DIR}\";     sed \"s!=NONE!=!g\"
      php-fpm.conf.default | tee php-fpm.conf > /dev/null;     rm php-fpm.conf.default;
      \    rm php-fpm.d/www.conf.default;"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  From:
    Image: tcf909/ubuntu-slim
  Name: ""
  Platform: ""
  SourceCode: FROM tcf909/ubuntu-slim
