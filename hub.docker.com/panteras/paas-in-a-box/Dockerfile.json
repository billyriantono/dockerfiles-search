{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Wojciech Sielski \"wsielski@team.mobile.de\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update --no-install-recommends     \u0026\u0026 apt-get install -y       locales       apt-transport-https       python3-minimal       python3-setuptools       wget       curl       unzip       vim-tiny       lolcat       toilet       jshon     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "${HOME}/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SUPERVISORD_APP_VERSION",
              "Value": "4.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_APP_VERSION",
              "Value": "5:19.03.5~3-0~ubuntu-xenial"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONSUL_APP_VERSION",
              "Value": "1.6.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MESOS_APP_VERSION",
              "Value": "1.9.0-2.0.1.ubuntu1604"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MARATHON_APP_VERSION",
              "Value": "1.7.216-9e2a9b579"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REGISTRATOR_APP_VERSION",
              "Value": "v7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FABIO_APP_VERSION",
              "Value": "1.5.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FABIO_GO_APP_VERSION",
              "Value": "go1.13.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NETDATA_APP_VERSION",
              "Value": "1.19.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TRAEFIK_APP_VERSION",
              "Value": "v1.7.19"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "unix:///tmp/docker.sock"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/Supervisor/supervisor/archive/${SUPERVISORD_APP_VERSION}.zip     \u0026\u0026 unzip ${SUPERVISORD_APP_VERSION}.zip     \u0026\u0026 cd supervisor-${SUPERVISORD_APP_VERSION}     \u0026\u0026 python3 setup.py install     \u0026\u0026 cd -     \u0026\u0026 rm -rf ${SUPERVISORD_APP_VERSION}.zip supervisor-${SUPERVISORD_APP_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repos.mesosphere.com/ubuntu/ xenial main\" \u003e /etc/apt/sources.list.d/mesosphere.list     \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv DF7D54CBE56151BF     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install --no-install-recommends        openjdk-8-jre        mesos=${MESOS_APP_VERSION}         zookeeper     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm /etc/mesos/zk     \u0026\u0026 chown -R zookeeper /etc/zookeeper     \u0026\u0026 REAL_JAVA_PATH=$(readlink -f $(which java))     \u0026\u0026 JAVA_DIR=${REAL_JAVA_PATH%/bin/java}     \u0026\u0026 mkdir -p ${JAVA_DIR}/conf/management/     \u0026\u0026 touch ${JAVA_DIR}/conf/management/management.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://downloads.mesosphere.io/marathon/builds/${MARATHON_APP_VERSION}/marathon-${MARATHON_APP_VERSION}.tgz     \u0026\u0026 mkdir /opt/marathon     \u0026\u0026 tar -C /opt/marathon --strip 1 -zxf marathon-${MARATHON_APP_VERSION}.tgz     \u0026\u0026 rm marathon-${MARATHON_APP_VERSION}.tgz     \u0026\u0026 ln -s /opt/marathon/bin/marathon /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "zkStart.sh",
            "/opt/zkStart.sh"
          ]
        },
        {
          "CmdLine": [
            "echo 'deb https://download.docker.com/linux/ubuntu xenial stable' \u003e /etc/apt/sources.list.d/docker.list     \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0EBFCD88     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y docker-ce-cli=${DOCKER_APP_VERSION}     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/registrator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/registrator"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/registrator"
        },
        {
          "CmdLine": [
            "wget https://github.com/eBayClassifiedsGroup/registrator/releases/download/${REGISTRATOR_APP_VERSION}/registrator.tgz     \u0026\u0026 tar zxf registrator.tgz     \u0026\u0026 rm registrator.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/consul/data /etc/consul.d     \u0026\u0026 groupadd -g 3000 consul     \u0026\u0026 useradd  -g 3000 -u 3000 -d /opt/consul -s /bin/false consul"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/consul"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/consul"
        },
        {
          "CmdLine": [
            "wget https://releases.hashicorp.com/consul/${CONSUL_APP_VERSION}/consul_${CONSUL_APP_VERSION}_linux_amd64.zip     \u0026\u0026 unzip consul_${CONSUL_APP_VERSION}_linux_amd64.zip     \u0026\u0026 rm consul_*.zip     \u0026\u0026 chown -R consul:consul /opt/consul"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/fabio     \u0026\u0026 groupadd -g 3001 fabio     \u0026\u0026 useradd  -g 3001 -u 3001 -d /opt/fabio -s /bin/false fabio"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/fabio"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/fabio"
        },
        {
          "CmdLine": [
            "wget https://github.com/eBay/fabio/releases/download/v${FABIO_APP_VERSION}/fabio-${FABIO_APP_VERSION}-${FABIO_GO_APP_VERSION}-linux_amd64 -O fabio     \u0026\u0026 chmod a+x fabio     \u0026\u0026 chown -R fabio:fabio /opt/fabio     \u0026\u0026 setcap 'cap_net_bind_service=+ep' ./fabio"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/traefik     \u0026\u0026 groupadd -g 3002 traefik     \u0026\u0026 useradd  -g 3002 -u 3002 -d /opt/traefik -s /bin/false traefik"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/traefik"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/traefik"
        },
        {
          "CmdLine": [
            "wget https://github.com/containous/traefik/releases/download/${TRAEFIK_APP_VERSION}/traefik_linux-amd64 -O traefik     \u0026\u0026 chmod a+x traefik     \u0026\u0026 chown -R traefik:traefik /opt/traefik     \u0026\u0026 setcap 'cap_net_bind_service=+ep' ./traefik"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "traefik.toml",
            "/opt/traefik"
          ]
        },
        {
          "CmdLine": [
            "savedAptMark=\"$(apt-mark showmanual)\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install        zlib1g-dev        gcc        make        autoconf        autogen        automake        pkg-config        uuid-dev        libmnl-dev        git     \u0026\u0026 git clone -b v${NETDATA_APP_VERSION} --single-branch https://github.com/netdata/netdata.git /tmp/netdata.git --depth=1     \u0026\u0026 cd /tmp/netdata.git     \u0026\u0026 ./netdata-installer.sh --dont-wait --install /opt     \u0026\u0026 cd /opt     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 ln -sf /dev/stdout /opt/netdata/var/log/netdata/access.log     \u0026\u0026 ln -sf /dev/stderr /opt/netdata/var/log/netdata/error.log     \u0026\u0026 apt-mark auto '.*' \u003e /dev/null     \u0026\u0026 apt-mark manual $savedAptMark     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false      \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install panteras_api marathon_deploy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/patorjk/figlet.js/master/fonts/Elite.flf -O /usr/share/figlet/Elite.flf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisord.sh",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "panteras.http",
            "/etc/fabio/errors/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fabio.properties",
            "/opt/fabio/fabio.properties"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "logo.sh",
            "/etc/profile.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "paas.sh",
            "/etc/profile.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bashrc",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "version",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "groupadd -g 31337 ecgapp \u0026\u0026     useradd  -g 31337 -u 31337 -d /app -s /bin/false ecgapp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 3003 marathon     \u0026\u0026 useradd  -g 3003 -u 3003 -d /opt/marathon -s /bin/false marathon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /tmp/bashrc \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "/opt/supervisord.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}