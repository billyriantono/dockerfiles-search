MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - DISTRIB_CODENAME=$(cat /etc/*release* | grep DISTRIB_CODENAME | cut -f2 -d'=')     &&
      echo "deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME} main universe\n"
      > /etc/apt/sources.list     && echo "deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-updates
      main universe\n" >> /etc/apt/sources.list     && echo "deb http://security.ubuntu.com/ubuntu
      ${DISTRIB_CODENAME}-security main universe\n" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy --no-install-recommends install software-properties-common   &&
      add-apt-repository -y ppa:git-core/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy --no-install-recommends install     iproute     openssh-client
      ssh-askpass    ca-certificates     openjdk-8-jdk     tar zip unzip     wget
      curl     git     build-essential     less nano tree     python python-pip groff     rlwrap   &&
      rm -rf /var/lib/apt/lists/*   && sed -i 's/securerandom\.source=file:\/dev\/random/securerandom\.source=file:\/dev\/urandom/'
      ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ -f "/etc/ssl/certs/java/cacerts" ] || /var/lib/dpkg/info/ca-certificates-java.postinst
      configure'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip setuptools
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.9
    Name: env
  - CmdLine:
    - curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
      | tar xzf - -C /usr/share   && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven   &&
      ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: SELENIUM_MAJOR_VERSION
      Value: "3.0"
    Name: env
  - Env:
    - Key: SELENIUM_VERSION
      Value: 3.0.1
    Name: env
  - CmdLine:
    - mkdir -p /opt/selenium   && wget --no-verbose http://selenium-release.storage.googleapis.com/$SELENIUM_MAJOR_VERSION/selenium-server-standalone-$SELENIUM_VERSION.jar
      -O /opt/selenium/selenium-server-standalone.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U selenium
    Name: run
    PrependShell: true
  - Env:
    - Key: SCREEN_WIDTH
      Value: "1360"
    Name: env
  - Env:
    - Key: SCREEN_HEIGHT
      Value: "1020"
    Name: env
  - Env:
    - Key: SCREEN_DEPTH
      Value: "24"
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :99.0
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entry_point.sh
    - /opt/bin/entry_point.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - functions.sh
    - /opt/bin/functions.sh
  - CmdLine:
    - chmod +x /opt/bin/entry_point.sh   && chmod +x /opt/bin/functions.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - 'useradd jenkins --shell /bin/bash --create-home   && usermod -a -G sudo jenkins   &&
      echo ''ALL ALL = (ALL) NOPASSWD: ALL'' >> /etc/sudoers   && echo ''jenkins:secret''
      | chpasswd'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy --no-install-recommends install     xvfb   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: FIREFOX_VERSION
    Name: arg
    Value: 50.1.0
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy --no-install-recommends install firefox
      dbus   && rm -rf /var/lib/apt/lists/* /var/cache/apt/*   && wget --no-verbose
      -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2   &&
      apt-get -y purge firefox   && rm -rf /opt/firefox   && tar -C /opt -xjf /tmp/firefox.tar.bz2   &&
      rm /tmp/firefox.tar.bz2   && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION   &&
      ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox
    Name: run
    PrependShell: true
  - CmdLine:
    - dbus-uuidgen > /var/lib/dbus/machine-id
    Name: run
    PrependShell: true
  - Key: GECKO_DRIVER_VERSION
    Name: arg
    Value: v0.13.0
  - CmdLine:
    - wget -O - "https://github.com/mozilla/geckodriver/releases/download/$GECKO_DRIVER_VERSION/geckodriver-$GECKO_DRIVER_VERSION-linux64.tar.gz"       |
      tar -xz -C /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sL https://deb.nodesource.com/setup_6.x | bash \t&& apt-get install -y
      nodejs"
    Name: run
    PrependShell: true
  - Key: JENKINS_REMOTING_VERSION
    Name: arg
    Value: "3.5"
  - CmdLine:
    - curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/$JENKINS_REMOTING_VERSION/remoting-$JENKINS_REMOTING_VERSION.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/slave.jar
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave
    - /usr/local/bin/jenkins-slave
  - CmdLine:
    - chmod +x /usr/local/bin/jenkins-slave ; mkdir -p /home/jenkins/.m2/repository
      ; chown -R jenkins:jenkins /home/jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/bin/entry_point.sh
    - /usr/local/bin/jenkins-slave
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "4444"
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
