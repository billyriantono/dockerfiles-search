{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.10.0",
      "SourceCode": "FROM phusion/baseimage:0.10.0",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.10.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Konstantin Myakshin \u003ckod-dp@yandex.ru\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "rm -f /etc/service/sshd/down"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends   bzr   cvs   git   mercurial   subversion   \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     redis-tools     mysql-client     postgresql-client     curl     wget     mc     htop     screen     iputils-ping     sudo     vim  \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_$NODEJS_VERSION.x | bash - \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends nodejs build-essential  \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_VERSION",
              "Value": "latest"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install npm@$NPM_VERSION -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.17.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -  \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list  \u0026\u0026 apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends yarn  \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.1"
            },
            {
              "Key": "PHP_VERSION_FULL",
              "Value": "7.1.31"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/etc/php/$PHP_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:ondrej/php  \u0026\u0026 apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     apache2     apache2-utils     libapache2-mod-php$PHP_VERSION     php$PHP_VERSION     php$PHP_VERSION-cli     php$PHP_VERSION-common     php$PHP_VERSION-dev     php$PHP_VERSION-gd     php$PHP_VERSION-imagick     php$PHP_VERSION-mysql     php$PHP_VERSION-pgsql     php$PHP_VERSION-sqlite     php$PHP_VERSION-mcrypt     php$PHP_VERSION-curl     php$PHP_VERSION-intl     php$PHP_VERSION-xsl     php$PHP_VERSION-xml     php$PHP_VERSION-mbstring     php$PHP_VERSION-zip     php$PHP_VERSION-bcmath     php$PHP_VERSION-iconv     php$PHP_VERSION-imap     php$PHP_VERSION-apcu     php$PHP_VERSION-soap     php$PHP_VERSION-redis     php$PHP_VERSION-ldap     php$PHP_VERSION-mailparse     php$PHP_VERSION-xdebug     php$PHP_VERSION-amqp  \u0026\u0026 a2enmod ssl rewrite headers include proxy proxy_http alias  \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\")  \u0026\u0026 curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version  \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp  \u0026\u0026 mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so  \u0026\u0026 mkdir -p /tmp/blackfire  \u0026\u0026 curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire  \u0026\u0026 mv /tmp/blackfire/blackfire /usr/bin/blackfire  \u0026\u0026 rm -Rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar -o /usr/local/bin/phpcs \u0026\u0026 chmod +x /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar -o /usr/local/bin/phpcbf \u0026\u0026 chmod +x /usr/local/bin/phpcbf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.8.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://getcomposer.org/download/$COMPOSER_VERSION/composer.phar -o /usr/local/bin/composer \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPUNIT_VERSION",
              "Value": "6.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://phar.phpunit.de/phpunit-$PHPUNIT_VERSION.phar -o /usr/local/bin/phpunit \u0026\u0026 chmod +x /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/my_init.d/01_start_sshd.sh",
            "/etc/my_init.d/01_start_sshd.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/my_init.d/01_start_sshd.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_USER",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_GROUP",
              "Value": "$CONTAINER_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$CONTAINER_USER"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd $CONTAINER_GROUP -g 1000  \u0026\u0026 useradd -u 1000 --home $HOME --create-home --shell /bin/bash -g $CONTAINER_GROUP $CONTAINER_USER  \u0026\u0026 echo \"$CONTAINER_USER ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/$CONTAINER_USER  \u0026\u0026 chmod 0440 /etc/sudoers.d/$CONTAINER_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "$CONTAINER_USER"
            },
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "$CONTAINER_GROUP"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html \u0026\u0026 chown $CONTAINER_USER:$CONTAINER_GROUP -R /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_AUTH",
              "Value": "\"\""
            },
            {
              "Key": "GITHUB_OAUTH_TOKEN",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CONFIG",
              "Value": "\"\""
            },
            {
              "Key": "PHP_CONFIG_CLI",
              "Value": "\"\""
            },
            {
              "Key": "PHP_CONFIG_WEB",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/php/*",
            "/etc/php/$PHP_VERSION/apache2/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/php/*",
            "/etc/php/$PHP_VERSION/cli/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/run-apache.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www",
            "/var/log/apache2"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/sbin/my_init",
            "--",
            "setuser",
            "dev",
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "run-apache.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}