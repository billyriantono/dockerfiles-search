{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUSH_VERSION",
              "Value": "8.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         git         openssl         supervisor         wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 777 /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget http://nginx.org/keys/nginx_signing.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key add nginx_signing.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/nginx.list",
            "."
          ]
        },
        {
          "CmdLine": [
            "cat /tmp/nginx.list \u003e\u003e /etc/apt/sources.list \u0026\u0026 rm /tmp/nginx.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install         nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/nginx"
        },
        {
          "CmdLine": [
            "rm -Rf conf.d/default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./templates/default.nginx.cnf",
            "conf.d/default.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure locales \t\u0026\u0026 locale-gen C.UTF-8 \t\u0026\u0026 /usr/sbin/update-locale LANG=C.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'en_US.UTF-8 UTF-8' \u003e\u003e /etc/locale.gen \t\u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y     bzip2     curl     imagemagick     libbz2-dev     libc-client2007e-dev     libjpeg-dev     libkrb5-dev     libldap2-dev     libmagickwand-dev     libmcrypt-dev     libpng12-dev     libpq-dev     libxml2-dev     mysql-client     openssh-client     rsync     xfonts-base     xfonts-75dpi     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 docker-php-ext-install         bcmath         bz2         calendar         dom         gd         json         mcrypt         mbstring         mysqli         opcache         pdo         pdo_mysql         soap         xml         zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y \t  libmemcached-dev \t  libmemcached11"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "git clone -b php7 https://github.com/php-memcached-dev/php-memcached     \u0026\u0026 cd php-memcached     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 cp /tmp/php-memcached/modules/memcached.so /usr/local/lib/php/extensions/no-debug-non-zts-20160303/memcached.so     \u0026\u0026 docker-php-ext-enable memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \t\u0026\u0026 mv composer.phar /usr/local/bin/ \t\u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drush/drush:\"$DRUSH_VERSION\" --prefer-dist     \u0026\u0026 rm -f /usr/local/bin/drush     \u0026\u0026 ln -s ~/.composer/vendor/bin/drush /usr/local/bin/drush     \u0026\u0026 drush core-status -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/supervisor"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/supervisord.conf",
            "conf.d/super.conf"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-n",
            "-c",
            "/etc/supervisor/conf.d/super.conf"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates/index.php",
            "/var/www/web/index.php"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/web"
        },
        {
          "CmdLine": [
            "apt-get -y clean     \u0026\u0026 apt-get -y autoclean     \u0026\u0026 apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}