{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm",
      "SourceCode": "FROM php:7.3-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"nilosoares@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_VERSION",
              "Value": "0.33.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "11.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/bin/versions/node/v${NODE_VERSION}/bin/:/bin/versions/node/v${NODE_VERSION}/lib/node_modules/npm/bin/:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     apt-utils     build-essential     git     unzip     vim     zip     libjpeg-dev     libpng-dev     libfreetype6-dev     libicu-dev     libzip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-configure intl \u0026\u0026     docker-php-ext-install -j$(nproc) gd intl pdo_mysql mysqli zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install ds \u0026\u0026     pecl install xdebug-2.7.0beta1 \u0026\u0026     docker-php-ext-enable ds xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://get.sensiolabs.org/sami.phar \u0026\u0026     mv sami.phar /usr/local/bin/sami \u0026\u0026     chmod 755 /usr/local/bin/sami"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". ~/.nvm/nvm.sh \u0026\u0026 nvm install ${NODE_VERSION} \u0026\u0026 nvm alias default ${NODE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/.composer \u0026\u0026     mkdir -p /var/www/.config \u0026\u0026     mkdir -p /var/www/.npm \u0026\u0026     mkdir -p /var/www/.ssh \u0026\u0026     chown -R www-data:www-data /var/www/.composer \u0026\u0026     chown -R www-data:www-data /var/www/.config \u0026\u0026     chown -R www-data:www-data /var/www/.npm \u0026\u0026     chown -R www-data:www-data /var/www/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}