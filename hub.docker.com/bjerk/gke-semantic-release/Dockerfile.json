{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "google/cloud-sdk:alpine",
      "SourceCode": "FROM google/cloud-sdk:alpine",
      "Platform": "",
      "From": {
        "Image": "google/cloud-sdk:alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./src",
            "/builder"
          ]
        },
        {
          "Env": [
            {
              "Key": "RELEASE_BRANCH",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LATEST_TAG",
              "Value": "latest"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_PUSH",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add curl bash nodejs nodejs-npm yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \u0026\u0026     chmod +x ./kubectl \u0026\u0026     mv ./kubectl /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /builder/ \u0026\u0026 npm install \u0026\u0026 chmod +x /builder/release.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/builder/node_modules/.bin/:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gcloud --version \u0026\u0026     kubectl version --client \u0026\u0026     node -v \u0026\u0026     npm -v \u0026\u0026     semantic-release -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "--branch ${RELEASE_BRANCH}",
            "--extends /builder/releaserc.json"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "semantic-release"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}