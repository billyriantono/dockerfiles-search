MetaArgs: null
Stages:
- BaseName: php:7.3.11-fpm-alpine
  Commands:
  - Maintainer: JohnWang <wangjiajun@vchangyi.com>
    Name: maintainer
  - Env:
    - Key: php_conf
      Value: /usr/local/etc/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /usr/local/etc/php-fpm.d/www.conf
    Name: env
  - Env:
    - Key: php_vars
      Value: /usr/local/etc/php/conf.d/docker-vars.ini
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.17.5
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 0.3.6
    Name: env
  - Env:
    - Key: PKG_RELEASE
      Value: "1"
    Name: env
  - CmdLine:
    - set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx
      -s /sbin/nologin -G nginx -g nginx nginx     && apkArch="$(cat /etc/apk/arch)"     &&
      nginxPackages="         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     "     &&
      case "$apkArch" in         x86_64)             set -x             && KEY_SHA512="e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a
      *stdin"             && apk add --no-cache --virtual .cert-deps                 openssl             &&
      wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             &&
      if [ "$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl
      sha512 -r)" = "$KEY_SHA512" ]; then                 echo "key verification succeeded!";                 mv
      /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo
      "key verification failed!";                 exit 1;             fi             &&
      printf "%s%s%s\n"                 "https://nginx.org/packages/mainline/alpine/v"                 `egrep
      -o '^[0-9]+\.[0-9]+' /etc/alpine-release`                 "/main"             |
      tee -a /etc/apk/repositories             && apk del .cert-deps             ;;         *)             set
      -x             && tempDir="$(mktemp -d)"             && chown nobody:nobody
      $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             &&
      su nobody -s /bin/sh -c "                 export HOME=${tempDir}                 &&
      cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 &&
      cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 &&
      cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz
      ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k
      ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 "             &&
      echo "${tempDir}/packages/alpine/" >> /etc/apk/repositories             && cp
      ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del
      .build-deps             ;;     esac     && apk add --no-cache $nginxPackages     &&
      if [ -n "$tempDir" ]; then rm -rf "$tempDir"; fi     && if [ -n "/etc/apk/keys/abuild-key.rsa.pub"
      ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n "/etc/apk/keys/nginx_signing.rsa.pub"
      ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && sed -i '$ d' /etc/apk/repositories     &&
      apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         &&
      runDeps="$(         scanelf --needed --nobanner /tmp/envsubst             |
      awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'             | sort -u             |
      xargs -r apk info --installed             | sort -u     )"     && apk add --no-cache
      $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     &&
      apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     &&
      ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/conf/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - "mkdir -p /etc/nginx/sites-available/ && \tmkdir -p /etc/nginx/sites-enabled/
      && \trm -Rf /var/www/* && \trm -Rf /data/www/* && \tmkdir -p /data/www/ && \tmkdir
      -p /var/www/"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/conf/nginx-site.conf
    - /etc/nginx/sites-available/default.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
      &&     echo /etc/apk/respositories &&     apk update &&     apk add --no-cache
      bash     openssh-client     openssl     wget     supervisor     curl     libcurl     git     python     python-dev     py-pip     augeas-dev     openssl-dev     ca-certificates     dialog     gcc     musl-dev     linux-headers     libmcrypt-dev     libpng-dev     icu-dev     libpq     libxslt-dev     libffi-dev     freetype-dev     sqlite-dev     libzip-dev     libjpeg-turbo-dev
      &&     docker-php-ext-configure gd       --with-gd       --with-freetype-dir=/usr/include/       --with-png-dir=/usr/include/       --with-jpeg-dir=/usr/include/
      &&     apk add --no-cache --update --virtual buildDeps autoconf &&     pecl
      install -f grpc &&     docker-php-ext-enable grpc &&     pecl install -f mcrypt-1.0.2
      &&     echo "extension=mcrypt.so" > /usr/local/etc/php/conf.d/docker-php-ext-mcrypt.ini
      &&     docker-php-ext-install pdo_mysql pdo_sqlite mysqli gd exif intl xsl json
      soap dom zip opcache bcmath &&     docker-php-source delete &&     mkdir -p
      /etc/nginx &&     mkdir -p /var/www/app &&     mkdir -p /run/nginx &&     mkdir
      -p /var/log/supervisor &&     EXPECTED_COMPOSER_SIGNATURE=$(wget -q -O - https://composer.github.io/installer.sig)
      &&     php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      &&     php -r "if (hash_file('SHA384', 'composer-setup.php') === '${EXPECTED_COMPOSER_SIGNATURE}')
      { echo 'Composer.phar Installer verified'; } else { echo 'Composer.phar Installer
      corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" &&     php composer-setup.php
      --install-dir=/usr/bin --filename=composer &&     php -r "unlink('composer-setup.php');"  &&     composer
      global require "hirak/prestissimo:^0.3" &&     apk del gcc musl-dev linux-headers
      libffi-dev augeas-dev python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/
      gnu-libiconv
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so php
    Name: env
  - CmdLine:
    - mkdir -p /etc/supervisor/conf.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisor/supervisord.conf
    - /etc/supervisord.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisor/conf.d/
    - /etc/supervisor/conf.d/
  - CmdLine:
    - "mkdir -p /var/log/php-fpm &&\techo \"cgi.fix_pathinfo=0\" > ${php_vars} &&
      \   echo \"upload_max_filesize = 100M\"  >> ${php_vars} &&    echo \"post_max_size
      = 100M\"  >> ${php_vars} &&    echo \"variables_order = \\\"EGPCS\\\"\"  >>
      ${php_vars} &&     echo \"memory_limit = 128M\"  >> ${php_vars} &&     echo
      \"[global]\"  >> ${fpm_conf} &&     echo \"error_log = /var/log/php-fpm/error.log\"
      \ >> ${fpm_conf} &&     echo \"log_level = warning\"  >> ${fpm_conf} &&     sed
      -i         -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\"
      \        -e \"s/pm.max_children = 5/pm.max_children = 10/g\"         -e \"s/pm.start_servers
      = 2/pm.start_servers = 5/g\"         -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 1/g\"         -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 9/g\"
      \        -e \"s/;pm.max_requests = 500/pm.max_requests = 200/g\"         -e
      \"s/user = www-data/user = nginx/g\"         -e \"s/group = www-data/group =
      nginx/g\"         -e \"s/;listen.mode = 0660/listen.mode = 0666/g\"         -e
      \"s/;listen.owner = www-data/listen.owner = nginx/g\"         -e \"s/;listen.group
      = www-data/listen.group = nginx/g\"         -e \"s/listen = 127.0.0.1:9000/listen
      = \\/var\\/run\\/php-fpm.sock/g\"         -e \"s/^;clear_env = no$/clear_env
      = no/\"         ${fpm_conf}"
    Name: run
    PrependShell: true
  - Env:
    - Key: FILEBEAT_VERSION
      Value: 5.2.2
    - Key: FILEBEAT_SHA1
      Value: 0f8e2f5f1145051435352b0e6a8b776040ea36e4
    Name: env
  - CmdLine:
    - wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-${FILEBEAT_VERSION}-linux-x86_64.tar.gz
      -O /tmp/filebeat.tar.gz &&     cd /tmp &&     echo "${FILEBEAT_SHA1}  filebeat.tar.gz"
      | sha1sum -c - &&     tar xzvf filebeat.tar.gz &&     cd filebeat-* &&     cp
      filebeat /bin &&     cd /tmp &&     rm -rf filebeat &&     mkdir /var/log/filebeat
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - filebeat/filebeat.yml
    - /etc/filebeat/filebeat.yml
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - CmdLine:
    - apk add --no-cache tzdata &&     cp /usr/share/zoneinfo/$TZ /etc/localtime &&
      echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache vim &&     rm -f /usr/bin/vi &&     cp /usr/bin/vim /usr/bin/vi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/schedule.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cron/nginx
    - /etc/cron.d/
  - CmdLine:
    - chown nginx.nginx /schedule.sh &&     chmod +x /schedule.sh &&     crontab /etc/cron.d/nginx
      &&     mkdir -p /var/log/cron &&     touch /var/log/cron/cron.log &&     touch
      /var/log/cron.log &&     touch /tmp/cron.log &&     chown nginx.nginx /tmp/cron.log
      /var/log/cron/cron.log
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bash/.bashrc
    - /root/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bash/.inputrc
    - /root/.inputrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src/
    - /data/www/
  - Name: workdir
    Path: /data/www
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.3.11-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3.11-fpm-alpine
