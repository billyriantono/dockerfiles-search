MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Env:
    - Key: MYSQL_ADMIM
      Value: '""'
    Name: env
  - Env:
    - Key: MYSQL_ADMINPASS
      Value: '""'
    Name: env
  - Env:
    - Key: MYSQL_HOST
      Value: '""'
    Name: env
  - Env:
    - Key: MYSQL_DBNAME
      Value: '""'
    Name: env
  - Env:
    - Key: MYSQL_PASSWORD
      Value: '""'
    Name: env
  - Env:
    - Key: MYSQL_USER
      Value: '""'
    Name: env
  - Env:
    - Key: INSTALLDB
      Value: '"false"'
    Name: env
  - Env:
    - Key: DELETEDB
      Value: '"false"'
    Name: env
  - Env:
    - Key: RESETDB
      Value: '"false"'
    Name: env
  - Env:
    - Key: ADD_DBUSER
      Value: '"false"'
    Name: env
  - Name: workdir
    Path: /opt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jinja-snorby-conf.py
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - database.yml.template
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /opt/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - snorby_config.yml
    - .
  - CmdLine:
    - apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install mysql-client ruby-dev ruby-bcrypt ruby-redcloth postgresql-server-dev-all
      bundler build-essential vim git wget libtool automake gcc flex bison libnet1
      libnet1-dev libpcre3 libpcre3-dev autoconf libcrypt-ssleay-perl libwww-perl
      git zlib1g zlib1g-dev libmysqlclient-dev apache2 imagemagick wkhtmltopdf ruby
      libyaml-dev libxml2-dev libxslt1-dev openssl libreadline6-dev unzip libapache2-mod-passenger
      libapr1-dev libaprutil1-dev tzdata python-jinja2 libcurl4-openssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O snorby.zip --no-check-certificate https://github.com/Snorby/snorby/archive/master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip snorby.zip && mv snorby-master/ /var/www/html/snorby
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html/snorby
  - CmdLine:
    - apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby-nokogiri ruby-libxml libxml2-dev libxml2 libxslt1.1
      libxslt1-dev  liblzma5 liblzma-dev build-essential patch ruby-dev zlib1g-dev
      liblzma-dev pkg-config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - envvars
    - /etc/apache2/envvars
  - CmdLine:
    - bundle config build.nokogiri --use-system-libraries  --with-xml2-dir=/usr/lib/x86_64-linux-gnu/
    Name: run
    PrependShell: true
  - CmdLine:
    - bundle install
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "<virtualhost *:80> \n     DocumentRoot /var/www/html/snorby/public\n     <directory
      '/var/www/html/snorby/public'>\n          AllowOverride all\n          Order
      deny,allow\n          Allow from all\n          Options -MultiViews\n          </directory>\n        ErrorLog
      ${APACHE_LOG_DIR}/snorby-error.log\n        CustomLog ${APACHE_LOG_DIR}/snorby-access.log
      combined\n</virtualhost>" > /etc/apache2/sites-enabled/000-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -f /opt/snorby_config.yml config/snorby_config.yml
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - chmod +x /opt/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
