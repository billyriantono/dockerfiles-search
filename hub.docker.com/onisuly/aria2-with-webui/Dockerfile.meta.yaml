MetaArgs: null
Stages:
- As: base
  BaseName: alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"onisuly <onisuly@gmail.com>"'
    Name: label
  - CmdLine:
    - mkdir -p /conf     && mkdir -p /data     && mkdir -p /preset-conf     && apk
      add --no-cache tzdata bash darkhttpd s6 ca-certificates gnutls expat sqlite-libs
      c-ares zlib nettle libssh2 libgcc libstdc++
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: base
  Platform: ""
  SourceCode: FROM alpine AS base
- As: build
  BaseName: base
  Commands:
  - CmdLine:
    - apk add --no-cache --virtual .install-deps curl unzip build-base automake autoconf
      gettext-dev git libtool gnutls-dev expat-dev sqlite-dev c-ares-dev zlib-dev
      nettle-dev libssh2-dev     && tag_name=$(curl -sX GET "https://api.github.com/repos/aria2/aria2/releases/latest"
      | awk '/tag_name/{print $4;exit}' FS='[""]')     && file_name="${tag_name/release/aria2}"     &&
      cd /tmp     && curl -O -L https://github.com/aria2/aria2/releases/download/${tag_name}/${file_name}.tar.gz     &&
      tar -zxvf ${file_name}.tar.gz     && cd ${file_name}     && autoreconf -i     &&
      ./configure CXXFLAGS="-Os -s" --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man
      --infodir=/usr/share/info --localstatedir=/var --disable-nls --with-ca-bundle=/etc/ssl/certs/ca-certificates.crt     &&
      make -j $(getconf _NPROCESSORS_ONLN)     && make install     && rm -rf /tmp/${file_name}*     &&
      mkdir -p /aria2-ng     && ng_tag=$(curl -sX GET "https://api.github.com/repos/mayswind/AriaNg/releases/latest"
      | awk '/tag_name/{print $4;exit}' FS='[""]')     && curl -o /aria2-ng.zip -L
      https://github.com/mayswind/AriaNg/releases/download/${ng_tag}/AriaNg-${ng_tag}.zip     &&
      unzip /aria2-ng.zip -d /aria2-ng     && rm /aria2-ng.zip     && apk del .install-deps
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: base
  Name: build
  Platform: ""
  SourceCode: FROM base AS build
- As: release
  BaseName: base
  Commands:
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/bin
    - /usr/bin
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /bin
    - /bin
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /aria2-ng
    - /aria2-ng
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/start.sh
    - /preset-conf/start.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/aria2.conf
    - /preset-conf/aria2.conf
  - CmdLine:
    - chmod +x /preset-conf/start.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /conf
  - Name: expose
    Ports:
    - "6800"
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /preset-conf/start.sh
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 5000000000
      Test:
      - CMD-SHELL
      - ps | grep darkhttpd | grep -v grep || exit 1
      Timeout: 1000000000
    Name: healthcheck
  From:
    Stage:
      Index: 0
      Named: base
  Name: release
  Platform: ""
  SourceCode: FROM base AS release
