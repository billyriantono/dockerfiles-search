MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Ho Minh Chung <hmchung@tma.com.vn>
    Name: maintainer
  - CmdLine:
    - apt-get update -q
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yqq wget aptitude htop vim git traceroute dnsutils curl ssh
      sudo tree tcpdump nano psmisc gcc make build-essential libfreetype6 libfontconfig
      libkrb5-dev
    Name: run
    PrependShell: true
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"e.g. https://github.com/microscaling/microscaling"'
    Name: label
  - Key: VERSION
    Name: arg
    Value: null
  - Key: VCS_URL
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vendor
      Value: '"Microscaling Systems"'
    - Key: org.label-schema.license
      Value: '"Apache-2.0"'
    - Key: org.label-schema.url
      Value: '"https://bitbucket.org/webclubtma/overtime-management-tool"'
    - Key: org.label-schema.vcs-type
      Value: '"git"'
    - Key: org.label-schema.vcs-url
      Value: $VCS_URL
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.docker.dockerfile
      Value: '"/Dockerfile"'
    Name: label
  - CmdLine:
    - apt-get install -y ruby
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install sass
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -yq nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --quiet -g grunt-cli gulp bower yo mocha karma-cli pm2
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/omt
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/omt/public/lib
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/omt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - package.json
    - /opt/omt/package.json
  - CmdLine:
    - npm install --quiet --F
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bower.json
    - /opt/omt/bower.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .bowerrc
    - /opt/omt/.bowerrc
  - CmdLine:
    - bower install --quiet --allow-root --config.interactive=false -F
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /opt/omt
  - CmdLine:
    - npm cache clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: development
    Name: env
  - Name: expose
    Ports:
    - 80:80
  - Name: expose
    Ports:
    - 443:443
  - Name: expose
    Ports:
    - 3000:3000
  - Name: expose
    Ports:
    - 5858:5858
  - Name: expose
    Ports:
    - 35729:35729
  - CmdLine:
    - grunt
    - serve
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
