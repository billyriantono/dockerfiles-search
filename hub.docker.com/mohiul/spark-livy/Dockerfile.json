{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster",
      "SourceCode": "FROM debian:buster",
      "Platform": "",
      "From": {
        "Image": "debian:buster"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y locales  \u0026\u0026 dpkg-reconfigure -f noninteractive locales  \u0026\u0026 locale-gen C.UTF-8  \u0026\u0026 /usr/sbin/update-locale LANG=C.UTF-8  \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen  \u0026\u0026 locale-gen  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y curl unzip procps     python3 python3-setuptools r-base libcurl4-openssl-dev  \u0026\u0026 ln -s /usr/bin/python3 /usr/bin/python  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONHASHSEED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_DISABLE_PIP_VERSION_CHECK",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.us.debian.org/debian sid main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y openjdk-8-jre  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_VERSION",
              "Value": "2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_PACKAGE",
              "Value": "spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/spark-${SPARK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_DIST_CLASSPATH",
              "Value": "\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${SPARK_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3   \"https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\"   | gunzip   | tar x -C /usr/  \u0026\u0026 mv /usr/$SPARK_PACKAGE $SPARK_HOME  \u0026\u0026 chown -R root:root $SPARK_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL --retry 3   \"https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.47.tar.gz\"   | gunzip   | tar x -C /usr/  \u0026\u0026 mv /usr/mysql-connector-java-5.1.47/mysql-connector-java-5.1.47.jar $SPARK_HOME/jars/mysql-connector-java-5.1.47.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LIVY_VERSION",
              "Value": "0.6.0-incubating"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIVY_HOME",
              "Value": "/usr/apache-livy-${LIVY_VERSION}-bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3   \"http://apache.mirror.globo.tech/incubator/livy/0.6.0-incubating/apache-livy-${LIVY_VERSION}-bin.zip\" --output apache-livy-${LIVY_VERSION}-bin.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip apache-livy-${LIVY_VERSION}-bin.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv apache-livy-${LIVY_VERSION}-bin /usr/apache-livy-${LIVY_VERSION}-bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/apache-livy-${LIVY_VERSION}-bin/conf/livy.conf.template /usr/apache-livy-${LIVY_VERSION}-bin/conf/livy.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "firstStr",
              "Value": "\".*livy\\.server\\.session\\.timeout-check = true\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "secondStr",
              "Value": "\"livy\\.server\\.session\\.timeout-check = false\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i \"s/${firstStr}/${secondStr}/g\" /usr/apache-livy-${LIVY_VERSION}-bin/conf/livy.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e 'install.packages(\"forecast\", dependencies = TRUE)'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SPARK_HOME"
        },
        {
          "CmdLine": [
            "bin/spark-class",
            "org.apache.spark.deploy.master.Master"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}