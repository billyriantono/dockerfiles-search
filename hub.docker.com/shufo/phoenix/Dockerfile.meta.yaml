MetaArgs: null
Stages:
- BaseName: erlang:21-alpine
  Commands:
  - Env:
    - Key: ELIXIR_VERSION
      Value: '"v1.8.1"'
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk -U upgrade &&     apk --update --no-cache add ncurses-libs git make g++
      wget python ca-certificates openssl curl &&     update-ca-certificates --fresh
      &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe \t&& ELIXIR_DOWNLOAD_URL=\"https://github.com/elixir-lang/elixir/archive/${ELIXIR_VERSION}.tar.gz\"
      \t&& ELIXIR_DOWNLOAD_SHA256=\"de8c636ea999392496ccd9a204ccccbc8cb7f417d948fd12692cda2bd02d9822\"
      \t&& curl -fSL -o elixir-src.tar.gz $ELIXIR_DOWNLOAD_URL \t&& echo \"$ELIXIR_DOWNLOAD_SHA256
      \ elixir-src.tar.gz\" | sha256sum -c - \t&& mkdir -p /usr/local/src/elixir \t&&
      tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz \t&&
      rm elixir-src.tar.gz \t&& cd /usr/local/src/elixir \t&& make install clean"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:node_modules/.bin:/usr/local/bin
    Name: env
  - CmdLine:
    - mix local.hex --force &&     mix local.rebar --force &&     mix hex.info
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4000"
  - CmdLine:
    - sh
    - -c
    - mix deps.get && mix phoenix.server
    Name: cmd
    PrependShell: false
  From:
    Image: erlang:21-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM erlang:21-alpine
