MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.9-alpine
  Commands:
  - CmdLine:
    - apk add -U bash git make
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/Shopify/ejson     && (cd /go/src/github.com/Shopify/ejson;
      make binaries)
    Name: run
    PrependShell: true
  From:
    Image: golang:1.9-alpine
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.9-alpine as build
- BaseName: debian:stretch
  Commands:
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: RUBY_MAJOR
      Value: "2.5"
    - Key: RUBY_VERSION
      Value: 2.5.1
    - Key: RUBY_DOWNLOAD_SHA256
      Value: 886ac5eed41e3b5fc699be837b0087a6a5a3d10f464087560d2d21b3e71b754d
    - Key: RUBYGEMS_VERSION
      Value: 2.7.7
    - Key: BUNDLER_VERSION
      Value: 1.16.3
    - Key: GEM_HOME
      Value: /usr/local/bundle
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    - Key: PATH
      Value: $GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH
    - Key: OTP_VERSION
      Value: "21.1"
    - Key: OTP_DOWNLOAD_SHA256
      Value: 7212f895ae317fa7a086fa2946070de5b910df5d41263e357d44b0f1f410af0f
    - Key: ELIXIR_VERSION
      Value: v1.7.3
    - Key: ELIXIR_DOWNLOAD_SHA256
      Value: 2ea1eef6751c54b475225f20caaad20702c198fbddff1cb1513b03aee25a5f90
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "set -ex \t        && runtimeDeps='libpq5 ca-certificates jq imagemagick'         &&
      rubyRuntimeDeps=' \t\tbzip2 \t\tca-certificates \t\tlibffi-dev \t\tlibgdbm3
      \t\tlibssl-dev \t\tlibyaml-dev \t\tprocps \t\tzlib1g-dev         ' \t&& rubyBuildDeps='
      \t\tautoconf \t\tbison \t\tdpkg-dev \t\tgcc \t\tlibbz2-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev
      \t\tlibncurses-dev \t\tlibreadline-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tmake
      \t\truby \t\twget \t\txz-utils \t' \t&& erlangRuntimeDeps=' \t\tlibodbc1 \t\tlibssl1.1
      \t\tlibsctp1 \t' \t&& erlangBuildDeps=' \t\tautoconf \t\tdpkg-dev \t\tgcc \t\tg++
      \t\tmake \t\tlibncurses-dev \t\tunixodbc-dev \t\tlibssl-dev \t\tlibsctp-dev
      \t' \t&& erlangFetchDeps=' \t\tcurl \t\tca-certificates' \t&& elixirBuildDeps='
      \t\tca-certificates \t\tcurl \t\tunzip \t' \t&& apt-get update \t&& apt-get
      install -y --no-install-recommends $erlangFetchDeps \t&& apt-get install -y
      --no-install-recommends $runtimeDeps $rubyRuntimeDeps $erlangRuntimeDeps \t&&
      apt-get install -y --no-install-recommends $rubyBuildDeps $erlangBuildDeps $elixirBuildDeps
      \      && mkdir -p /usr/local/etc \t&& { \t\techo 'install: --no-document';
      \t\techo 'update: --no-document'; \t} >> /usr/local/etc/gemrc \t\t&& wget -O
      ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\"
      \t&& echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \t\t&& mkdir
      -p /usr/src/ruby \t&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1
      \t&& rm ruby.tar.xz \t\t&& cd /usr/src/ruby \t\t&& { \t\techo '#define ENABLE_PATH_CHECK
      0'; \t\techo; \t\tcat file.c; \t} > file.c.new \t&& mv file.c.new file.c \t\t&&
      autoconf \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&&
      ./configure \t\t--build=\"$gnuArch\" \t\t--disable-install-doc \t\t--enable-shared
      \t&& make -j \"$(nproc)\" \t&& make install \t\t&& dpkg-query --show --showformat
      '${package}\\n' \t\t| grep -P '^libreadline\\d+$' \t\t| xargs apt-mark manual
      \t&& cd / \t&& rm -r /usr/src/ruby \t\t&& gem update --system \"$RUBYGEMS_VERSION\"
      \t&& gem install bundler --version \"$BUNDLER_VERSION\" --force \t&& rm -r /root/.gem/
      \        && mkdir -p \"$GEM_HOME\" && chmod 777 \"$GEM_HOME\" \t&& OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/OTP-${OTP_VERSION}.tar.gz\"
      \t&& curl -fSL -o otp-src.tar.gz \"$OTP_DOWNLOAD_URL\" \t&& echo \"$OTP_DOWNLOAD_SHA256
      \ otp-src.tar.gz\" | sha256sum -c - \t&& export ERL_TOP=\"/usr/src/otp_src_${OTP_VERSION%%@*}\"
      \t&& mkdir -vp $ERL_TOP \t&& tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1
      \t&& rm otp-src.tar.gz \t&& ( cd $ERL_TOP \t  && ./otp_build autoconf \t  &&
      gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t  && ./configure
      --build=\"$gnuArch\" \t  && make -j$(nproc) \t  && make install ) \t&& find
      /usr/local -name examples | xargs rm -rf         && ELIXIR_DOWNLOAD_URL=\"https://repo.hex.pm/builds/elixir/$ELIXIR_VERSION-otp-$(echo
      $OTP_VERSION | cut -d. -f1).zip\" \t&& curl -fSL -o elixir-precompiled.zip $ELIXIR_DOWNLOAD_URL
      \t&& echo \"$ELIXIR_DOWNLOAD_SHA256  elixir-precompiled.zip\" | sha256sum -c
      - \t&& unzip -d /usr/local elixir-precompiled.zip \t&& rm elixir-precompiled.zip
      \t&& apt-get purge -y --auto-remove $rubyBuildDeps $erlangBuildDeps $erlangFetchDeps
      $elixirBuildDeps \t&& apt-get install -y --no-install-recommends $runtimeDeps
      $rubyRuntimeDeps $erlangRuntimeDeps \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/Shopify/ejson/build/bin/linux-amd64
    - /usr/local/bin/ejson
  - CmdLine:
    - mix local.hex --force     && mix local.rebar --force
    Name: run
    PrependShell: true
  - CmdLine:
    - iex
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
