MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"sysadmins@cs50.harvard.edu"'
    Name: label
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update && apt-get install -y apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y locales &&     locale-gen "en_US.UTF-8"
      && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: '"C.UTF-8"'
    Name: env
  - CmdLine:
    - 'apt-get update &&     apt-get install -y apt-utils &&     apt-get install -y         apt-transport-https         astyle         clang-6.0         curl         git         php         ruby         ruby-dev
      `# Avoid "can''t find header files for ruby" for gem`         software-properties-common
      `# Avoids "add-apt-repository: not found"`         sqlite3         unzip         valgrind         wget
      &&     update-alternatives --install /usr/bin/clang clang $(which clang-6.0)
      1'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent https://packagecloud.io/install/repositories/cs50/repo/script.deb.sh
      | bash &&     apt-get install -y         libcs50         libcs50-java         php-cs50
    Name: run
    PrependShell: true
  - Env:
    - Key: CLASSPATH
      Value: '".:/usr/share/java/cs50.jar"'
    Name: env
  - CmdLine:
    - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | bash &&     apt-get install -y git-lfs
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget https://download.java.net/java/GA/jdk12.0.1/69cfe15208a647278a19ef0990eea691/12/GPL/openjdk-12.0.1_linux-x64_bin.tar.gz
      &&     tar xzf openjdk-12.0.1_linux-x64_bin.tar.gz &&     rm -f openjdk-12.0.1_linux-x64_bin.tar.gz
      &&     mv jdk-12.0.1 /opt/ &&     mkdir -p /opt/bin &&     ln -s /opt/jdk-12.0.1/bin/*
      /opt/bin/ &&     chmod a+rx /opt/bin/*
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: '"/opt/jdk-12.0.1"'
    Name: env
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_12.x | bash - &&     apt-get install
      -y nodejs &&     npm install -g npm `# Upgrades npm to latest`
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: '"dev"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y         build-essential         libbz2-dev         libc6-dev         libgdbm-dev         libncursesw5-dev         libreadline-gplv2-dev         libsqlite3-dev         libssl-dev         tk-dev         zlib1g-dev
      &&     cd /tmp &&     wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz
      &&     tar xzf Python-3.7.3.tgz &&     rm -f Python-3.7.3.tgz &&     cd Python-3.7.3
      &&     ./configure &&     make &&     make install &&     cd .. &&     rm -rf
      Python-3.7.3 &&     pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONDONTWRITEBYTECODE
      Value: '"1"'
    Name: env
  - CmdLine:
    - pip3 install         cs50         check50         Flask         Flask-Session         style50         submit50
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --show-error https://getcomposer.org/installer |         php --
      --install-dir=/usr/local/bin --filename=composer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./etc/profile.d/baseimage.sh
    - /etc/profile.d/
  - Env:
    - Key: PATH
      Value: /opt/cs50/bin:/opt/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - sed -i "s|^PATH=.*|PATH=$PATH|" /etc/environment
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/bin /opt/cs50/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --home-dir /home/ubuntu --shell /bin/bash ubuntu &&     umask 0077 &&     mkdir
      -p /home/ubuntu &&     chown -R ubuntu:ubuntu /home/ubuntu
    Name: run
    PrependShell: true
  - Name: user
    User: ubuntu
  - Name: workdir
    Path: /home/ubuntu
  - CmdLine:
    - bash
    - -l
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
