MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpkgconf \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz \t\topenssl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \taddgroup -g 82 -S www-data; \tadduser -u 82 -D -S -G www-data www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - "set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; \t[ ! -d /var/www/html ]; \tmkdir
      -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.23
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://www.php.net/get/php-7.2.23.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://www.php.net/get/php-7.2.23.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"74e045ec8ff26290db6a3688826dcdf43b87bc509e508e9cb76dab742804ca14"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .fetch-deps gnupg; \t\tmkdir -p
      /usr/src; \tcd /usr/src; \t\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \t\tif [
      -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fsSL -o
      php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor
      key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz;
      \t\tgpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network
      .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-*
    - /usr/local/bin/
  - CmdLine:
    - "set -eux;     chmod +x /usr/local/bin/docker-php-*; \tapk add --no-cache --virtual
      .build-deps \t\t$PHPIZE_DEPS \t\targon2-dev \t\tcoreutils \t\tcurl-dev \t\tlibedit-dev
      \t\tlibsodium-dev \t\tlibxml2-dev \t\topenssl-dev \t\tlibjpeg \t\tlibjpeg-turbo-dev
      \t\tlibpng-dev \t\tfreetype \t\tfreetype-dev \t; \t\texport CFLAGS=\"$PHP_CFLAGS\"
      \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source
      extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\";
      \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--enable-option-checking=fatal
      \t\t\t\t--with-mhash \t\t\t\t--enable-mbstring \t\t--enable-mysqlnd \t\t--with-password-argon2
      \t\t--with-sodium=shared \t\t\t\t--with-pdo-mysql \t\t--enable-sockets \t\t--enable-bcmath
      \t\t--enable-zip \t\t--enable-sysvmsg \t\t--enable-sysvsem \t\t--enable-sysvshm
      \t\t--with-curl \t\t--with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/
      \        --with-jpeg-dir=/usr/include/ \t\t--enable-pcntl \t\t\t\t--with-curl
      \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$(test \"$gnuArch\"
      = 's390x-linux-musl' && echo '--without-pcre-jit') \t\t\t\t${PHP_EXTRA_CONFIGURE_ARGS:-}
      \t; \tmake -j \"$(nproc)\"; \tfind -type f -name '*.a' -delete; \tmake install;
      \tfind /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all
      '{}' + || true; \tmake clean; \t\tcp -v php.ini-* \"$PHP_INI_DIR/\"; \t\tpecl
      install igbinary-3.0.1     && docker-php-ext-enable igbinary;     pecl install
      redis-5.0.2     && docker-php-ext-enable redis; \t\tcd /; \tdocker-php-source
      delete; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive
      /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps;
      \t\tapk del --no-network .build-deps; \t\tpecl update-channels; \trm -rf /tmp/pear
      ~/.pearrc; \tphp --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "docker-php-ext-enable sodium;     apk add --no-cache tzdata \t&& ln -sf /usr/share/zoneinfo/Asia/Shanghai
      /etc/localtime \t&& echo \"Asia/Shanghai\" > /etc/timezone \t&& echo \"date.timezone=Asia/Shanghai\"
      > ${PHP_INI_DIR}/conf.d/zzz-overrides-timezone.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php
    - -a
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
