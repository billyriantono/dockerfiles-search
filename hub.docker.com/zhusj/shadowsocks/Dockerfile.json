{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "Shengjing Zhu \u003ci@zhsj.me\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 export SS_GIT=https://github.com/shadowsocks/shadowsocks-libev     \u0026\u0026 export SS_DIR=shadowsocks-libev     \u0026\u0026 apk upgrade --update     \u0026\u0026 apk add --virtual .ss-builddeps git cmake build-base        linux-headers libressl-dev libsodium-dev libsodium-static c-ares-dev        mbedtls-dev mbedtls-static libev-dev pcre-dev zlib-dev     \u0026\u0026 git clone --recursive $SS_GIT $SS_DIR     \u0026\u0026 cd $SS_DIR/build         \u0026\u0026 cmake -DWITH_STATIC=ON -DWITH_DOC_MAN=OFF -DWITH_DOC_HTML=OFF -DCMAKE_BUILD_TYPE=Release ..         \u0026\u0026 make         \u0026\u0026 strip bin/ss-server         \u0026\u0026 install -m755 bin/ss-server /usr/local/bin/ss-server         \u0026\u0026 cd ../..         \u0026\u0026 rm -rf $SS_DIR     \u0026\u0026 apk del --purge .ss-builddeps     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "443/udp"
          ]
        },
        {
          "CmdLine": [
            "ss-server -s ${SERVER_ADDR:-0.0.0.0}               -p ${SERVER_PORT:-443}               -k ${PASSWORD:-$(hostname)}               -m ${METHOD:-chacha20-ietf-poly1305}               -t ${TIMEOUT:-300}               -d ${DNS_ADDR:-8.8.8.8}               --fast-open -u"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}