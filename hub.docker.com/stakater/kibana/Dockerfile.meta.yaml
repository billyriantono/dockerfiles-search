MetaArgs: null
Stages:
- BaseName: stakater/base-alpine:3.7
  Commands:
  - Labels:
    - Key: authors
      Value: '"Stakater"'
    Name: label
  - CmdLine:
    - apk add --no-cache --progress nodejs=8.9.3-r0
    Name: run
    PrependShell: true
  - Key: KIBANA_VERSION
    Name: arg
    Value: 6.1.0
  - Key: KIBANA_HOME
    Name: arg
    Value: /opt/kibana
  - Key: UID
    Name: arg
    Value: "1000"
  - Key: GID
    Name: arg
    Value: "1000"
  - Env:
    - Key: KIBANA_TARBALL
      Value: '"https://artifacts.elastic.co/downloads/kibana/kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz"'
    - Key: KIBANA_TARBALL_ASC
      Value: '"https://artifacts.elastic.co/downloads/kibana/kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz.asc"'
    - Key: KIBANA_TARBALL_SHA1
      Value: '"ec075b0073ea380879a112b70df68bd4178e3b1e"'
    - Key: GPG_KEY
      Value: 46095ACC8548582C1A2699A9D27D666CD88E42B4
    - Key: KIBANA_HOME
      Value: ${KIBANA_HOME}
    - Key: PATH
      Value: ${KIBANA_HOME}/bin:$PATH
    Name: env
  - CmdLine:
    - "addgroup -g ${GID} kibana &&     \tadduser -D -u ${UID} -G kibana kibana &&
      \t\tmkdir -p ${KIBANA_HOME} && chown kibana:kibana ${KIBANA_HOME}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${KIBANA_HOME}
  - Env:
    - Key: KIBANA_HOST
      Value: 0.0.0.0
    - Key: ELASTICSEARCH_HOST
      Value: '""'
    - Key: ELASTICSEARCH_PORT
      Value: "9200"
    - Key: ELASTICSEARCH_PROTOCOL
      Value: http
    Name: env
  - CmdLine:
    - "set -ex; \t\t\t\tapk add --no-cache --virtual .fetch-deps \t\t\tca-certificates
      \t\t\tgnupg \t\t\topenssl \t\t\ttar \t\t; \t\t\t\twget -O kibana.tar.gz \"$KIBANA_TARBALL\";
      \t\t\t\tif [ \"$KIBANA_TARBALL_SHA1\" ]; then \t\t\techo \"$KIBANA_TARBALL_SHA1
      *kibana.tar.gz\" | sha1sum -c -; \t\tfi; \t\t\t\tif [ \"$KIBANA_TARBALL_ASC\"
      ]; then \t\t\twget -O kibana.tar.gz.asc \"$KIBANA_TARBALL_ASC\"; \t\t\texport
      GNUPGHOME=\"$(mktemp -d)\"; \t\t\tgpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\"   \t\t\t\t|| gpg --keyserver pgp.mit.edu --recv-keys
      \"$GPG_KEY\"   \t\t\t\t|| gpg --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEY\";
      \t\t\tgpg --batch --verify kibana.tar.gz.asc kibana.tar.gz; \t\t\trm -r \"$GNUPGHOME\"
      kibana.tar.gz.asc || true; \t\tfi; \t\t\t\ttar -xf kibana.tar.gz --strip-components=1;
      \t\trm kibana.tar.gz; \t\t\t\tapk del .fetch-deps; \t\t\t\tmkdir -p ./plugins;
      \t\tfor path in \t\t\t./data \t\t\t./logs \t\t\t./config \t\t\t./config/scripts
      \t\t; do \t\t\tmkdir -p \"$path\"; \t\t\tchown -R kibana:kibana \"$path\"; \t\tdone;
      \t\trm -rf ${KIBANA_HOME}-linux-x86_64/node && \t\tmkdir -p ${KIBANA_HOME}/node/bin
      &&\t\tln -sf /usr/bin/node ${KIBANA_HOME}/node/bin/node"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/kibana.yml
    - ${KIBANA_HOME}/config/kibana.yml
  - Env:
    - Key: COMMAND
      Value: '"kibana"'
    Name: env
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - mkdir -p /etc/service/kibana
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /etc/service/kibana/run
  From:
    Image: stakater/base-alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: "FROM\tstakater/base-alpine:3.7"
