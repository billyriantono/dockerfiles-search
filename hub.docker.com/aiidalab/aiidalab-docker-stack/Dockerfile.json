{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.11",
      "SourceCode": "FROM phusion/baseimage:0.11",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.11"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Materials Cloud Team \u003caiidalab@materialscloud.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "NB_USER",
          "Name": "arg",
          "Value": "\"scientist\""
        },
        {
          "Key": "NB_UID",
          "Name": "arg",
          "Value": "\"1000\""
        },
        {
          "Key": "NB_GID",
          "Name": "arg",
          "Value": "\"1000\""
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "echo \"deb http://mirror.switch.ch/ftp/mirror/ubuntu/ bionic main \\ndeb-src http://mirror.switch.ch/ftp/mirror/ubuntu/ bionic main \\n\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends      bzip2                     build-essential           ca-certificates           cp2k                      file                      git                       gir1.2-gtk-3.0            gnupg                     graphviz                  locales                   less                      libssl-dev                libffi-dev                postgresql                psmisc                    python-dev                python-pip                python-setuptools         python-wheel              python3-dev               python3-gi                python3-gi-cairo          python3-pip               python3-psycopg2          python3-setuptools        python3-tk                python3-wheel             python-tk                 quantum-espresso          rabbitmq-server           rsync                     ssh                       unzip                     vim                       wget                      zip                     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     nodejs                    npm                     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/pseudos"
        },
        {
          "CmdLine": [
            "base_url=http://archive.materialscloud.org/file/2018.0001/v2;      for name in SSSP_efficiency_pseudos SSSP_precision_pseudos; do        wget ${base_url}/${name}.tar.gz;                                   tar -zxvf ${name}.tar.gz;                                       done;                                                              chown -R root:root /opt/pseudos/;                                  chmod -R +r /opt/pseudos/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install ipykernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade             'fastentrypoints'                  'tornado==5.1.1'                   'jupyterhub==0.9.4'                'notebook==5.7.4'                  'nbserverproxy==0.8.8'             'jupyterlab==0.35.4'               'appmode-aiidalab==0.5.0.1'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter serverextension enable --sys-prefix --py nbserverproxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install numpy==1.15.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install aiidalab==v19.11.0a2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python2 -m ipykernel install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m ipykernel install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/python python /usr/bin/python3 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension install --sys-prefix --py fileupload"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter serverextension enable --sys-prefix --py nbserverproxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @jupyterlab/hub-extension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/jupyterlab-theme"
        },
        {
          "CmdLine": [
            "git clone https://github.com/aiidalab/jupyterlab-theme \u0026\u0026     cd jupyterlab-theme \u0026\u0026      npm install \u0026\u0026      npm run build \u0026\u0026      npm run build:webpack \u0026\u0026      npm pack ./ \u0026\u0026      jupyter labextension install *.tgz \u0026\u0026     cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "git clone https://github.com/oschuett/molview-ipywidget.git  \u0026\u0026     ln -s /opt/molview-ipywidget/molview_ipywidget /usr/local/lib/python2.7/dist-packages/molview_ipywidget  \u0026\u0026     ln -s /opt/molview-ipywidget/molview_ipywidget /usr/local/lib/python3.6/dist-packages/molview_ipywidget  \u0026\u0026     jupyter nbextension     install --sys-prefix --py --symlink molview_ipywidget  \u0026\u0026     jupyter nbextension     enable  --sys-prefix --py           molview_ipywidget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "reentry scan"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-permissions",
            "/usr/local/bin/fix-permissions"
          ]
        },
        {
          "CmdLine": [
            "mkdir /project                                                 \u0026\u0026     useradd --home /project --uid $NB_UID --shell /bin/bash $NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "fix-permissions /project"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opt/postgres.sh",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "my_init.d/start-postgres.sh",
            "/etc/my_init.d/20_start-postgres.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opt/start-singleuser.sh",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "my_init.d/start-singleuser.sh",
            "/etc/my_init.d/30_start-singleuser.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/service/rabbitmq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "service/rabbitmq",
            "/etc/service/rabbitmq/run"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opt/aiidalab-jupyterhub-singleuser",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opt/start-jupytehub-singleuser.sh",
            "/opt/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "service/jupyterhub-singleuser",
            "/etc/service/jupyterhub-singleuser/run"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/service/aiida"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "service/aiida",
            "/etc/service/aiida/run"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "my_my_init",
            "/sbin/my_my_init"
          ]
        },
        {
          "CmdLine": [
            "/sbin/my_my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}