MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: '"Marc Andr√© Freiheit <marcandre@freiheit.software>"'
    Name: label
  - Key: KUBE_LATEST_VERSION
    Name: arg
    Value: '"v1.15.2"'
  - Key: HELM_VERSION
    Name: arg
    Value: '"v2.14.3"'
  - Key: GHC_BUILD_TYPE
    Name: arg
    Value: gmp
  - Key: GHC_VERSION
    Name: arg
    Value: 8.6.5
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - Env:
    - Key: TMUX_PLUGIN_MANAGER_PATH
      Value: /home/me/.tmux/plugins
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/zsh
    Name: env
  - CmdLine:
    - adduser -Ds /bin/zsh me
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/me
  - Env:
    - Key: HOME
      Value: /home/me
    Name: env
  - CmdLine:
    - apk add --no-cache bash git zsh tmux vim curl python3 nodejs clang-libs docker
      openjdk8-jre-base cmake python3-dev make g++ npm su-exec which python-dev libffi-dev
      openssl-dev gcc libc-dev py-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install docker-compose
    Name: run
    PrependShell: true
  - Env:
    - Key: GHCUP_INSTALL_BASE_PREFIX
      Value: /
    Name: env
  - Env:
    - Key: PATH
      Value: /.ghcup/bin:$PATH
    Name: env
  - Chown: ""
    From: marcfreiheit/ghcup:latest
    Name: copy
    SourcesAndDest:
    - /.ghcup
    - /.ghcup
  - Chown: ""
    From: marcfreiheit/haskell-stack:latest
    Name: copy
    SourcesAndDest:
    - /usr/bin/stack
    - /usr/bin/stack
  - Key: GHC_BUILD_TYPE
    Name: arg
    Value: null
  - Key: GHC_VERSION
    Name: arg
    Value: 8.6.5
  - Env:
    - Key: GHCUP_INSTALL_BASE_PREFIX
      Value: /
    Name: env
  - Env:
    - Key: PATH
      Value: /.ghcup/bin:$PATH
    Name: env
  - Env:
    - Key: GHCUP_VERSION
      Value: 0.0.7
    Name: env
  - Env:
    - Key: GHCUP_SHA256
      Value: '"b4b200d896eb45b56c89d0cfadfcf544a24759a6ffac029982821cc96b2faedb  ghcup"'
    Name: env
  - CmdLine:
    - apk upgrade --no-cache &&    apk add --no-cache         curl         git         xz
      &&    if [ "${GHC_BUILD_TYPE}" = "gmp" ]; then         echo "Installing 'libgmp'"
      &&        apk add --no-cache gmp-dev;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading and installing ghcup" &&    cd /tmp &&    wget -P /tmp/ "https://gitlab.haskell.org/haskell/ghcup/raw/${GHCUP_VERSION}/ghcup"
      &&    if ! echo -n "${GHCUP_SHA256}" | sha256sum -c -; then         echo "ghcup-${GHCUP_VERSION}
      checksum failed" >&2 &&        exit 1 ;    fi ;    mv /tmp/ghcup /usr/bin/ghcup
      &&    chmod +x /usr/bin/ghcup
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir -p /home/me/.stack && echo " allow-different-user: true" >> /home/me/.stack/config.yaml'
    Name: run
    PrependShell: true
  - CmdLine:
    - ghcup set ${GHC_VERSION} &&     stack config set system-ghc --global true
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps ca-certificates openssh     && wget
      -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -O /usr/local/bin/kubectl     && chmod +x /usr/local/bin/kubectl     && wget
      -q https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm     && chmod +x /usr/local/bin/helm     &&
      apk del --no-cache .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - 'curl https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
      &&     mkdir -p /usr/local/gcloud &&     tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz
      &&     /usr/local/gcloud/google-cloud-sdk/install.sh &&     chown -R me: /usr/local/gcloud'
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/gcloud/google-cloud-sdk/bin
    Name: env
  - CmdLine:
    - git clone https://github.com/powerline/fonts.git --depth=1 &&     cd fonts &&     ./install.sh
      &&     cd .. &&     rm -rf fonts
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache gmp-dev
    Name: run
    PrependShell: true
  - Name: user
    User: me
  - CmdLine:
    - git clone https://github.com/tmux-plugins/tpm .tmux/plugins/tpm && .tmux/plugins/tpm/bin/install_plugins
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - git clone https://github.com/olivierverdier/zsh-git-prompt.git zsh/git-prompt
      &&     stack init &&     stack setup &&     stack build && stack install &&     touch
      /home/me/zsh/git-prompt/src/.bin/gitstatus &&     chmod 777 /home/me/zsh/git-prompt/src/.bin/gitstatus
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.vim/autoload ~/.vim/bundle &&     curl -LSso ~/.vim/autoload/pathogen.vim
      https://tpo.pe/pathogen.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ycm-core/YouCompleteMe.git .vim/bundle/ycm &&     cd
      .vim/bundle/ycm &&     git submodule update --init --recursive &&     python3
      install.py --clang-completer --ts-completer --java-completer
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/vim-airline/vim-airline.git .vim/bundle/vim-airline
      &&     git clone https://github.com/kien/ctrlp.vim.git .vim/bundle/ctrlp.vim
      &&     git clone https://github.com/christoomey/vim-tmux-navigator.git .vim/bundle/vim-tmux-navigator
      &&     git clone https://github.com/luochen1990/rainbow.git .vim/bundle/rainbow
      &&     git clone https://github.com/tpope/vim-fugitive.git .vim/bundle/vim-fugitive
      &&     git clone https://github.com/itchyny/vim-haskell-indent.git .vim/bundle/vim-haskell-indent
    Name: run
    PrependShell: true
  - Chown: me:me
    From: ""
    Name: copy
    SourcesAndDest:
    - zsh/
    - zsh
  - Chown: me:me
    From: ""
    Name: copy
    SourcesAndDest:
    - zsh/.zshrc
    - .zshrc
  - Chown: me:me
    From: ""
    Name: copy
    SourcesAndDest:
    - vim/.vimrc
    - .vimrc
  - Chown: me:me
    From: ""
    Name: copy
    SourcesAndDest:
    - vim/colors
    - .vim/colors
  - Chown: me:me
    From: ""
    Name: copy
    SourcesAndDest:
    - tmux/.tmux.conf
    - .tmux.conf
  - Chown: me:me
    From: ""
    Name: copy
    SourcesAndDest:
    - tmux/.remote.tmux.conf
    - .remote.tmux.conf
  - CmdLine:
    - ln -sf zsh/.zshrc .zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openssh-client
    Name: run
    PrependShell: true
  - CmdLine:
    - 'chown me: /home/me/.tmux'
    Name: run
    PrependShell: true
  - Name: user
    User: me
  - CmdLine:
    - /home/me/.tmux/plugins/tpm/bin/install_plugins
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - .
  - CmdLine:
    - apk add --no-cache shadow grep
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/me/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
