MetaArgs: null
Stages:
- BaseName: quantumobject/docker-baseimage:15.04
  Commands:
  - Maintainer: Angel Rodriguez "angel@quantumobject.com"
    Name: maintainer
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y perl pwgen --no-install-recommends && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='A4A9406876FCBD3C456770C88C718D3B5072E1F5'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg
      --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \trm -r \"$GNUPGHOME\";
      \tapt-key list > /dev/null"
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "5.6"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 5.6.35-1debian8
    Name: env
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mysql-community-server mysql-community-server/data-dir select '';
      \t\techo mysql-community-server mysql-community-server/root-pass password '';
      \t\techo mysql-community-server mysql-community-server/re-root-pass password
      ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select
      false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y
      mysql-server=\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* \t&& rm -rf
      /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \t&& chown -R mysql:mysql
      /var/lib/mysql /var/run/mysqld \t&& chmod 777 /var/run/mysqld"
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \t&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve'
      > /etc/mysql/conf.d/docker.cnf"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y -q apache2                                             php5                                             libapache2-mod-php5                                             libdate-calc-perl                                             libdbd-mysql-perl                                             libhtml-parser-perl                                             libdbi-perl                                             libwww-mechanize-perl                                             libxml-parser-perl                                             libtiff-tools                                             php5-mysql                                             php5-cli                                             php5-gd                                             php5-xsl                                             php5-curl                                             php5-mcrypt                                             php-soap                                             imagemagick                                             php5-json                                       &&
      apt-get clean                                       && rm -rf /tmp/* /var/tmp/*                                       &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /etc/php5/apache2/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.conf
    - /etc/apache2/apache2.conf
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /etc/my_init.d/startup.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/service/apache2  /var/log/apache2 ; sync
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2.sh
    - /etc/service/apache2/run
  - CmdLine:
    - chmod +x /etc/service/apache2/run     && cp /var/log/cron/config /var/log/apache2/     &&
      chown -R www-data /var/log/apache2
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pre-conf.sh
    - /sbin/pre-conf
  - CmdLine:
    - chmod +x /sbin/pre-conf ; sync  && /bin/bash -c /sbin/pre-conf RUN mkdir /sbin/backup
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - backup.sh
    - /sbin/backup
  - CmdLine:
    - chmod +x /sbin/backup
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/backups
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - after_install.sh
    - /sbin/after_install
  - CmdLine:
    - chmod +x /sbin/after_install
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: quantumobject/docker-baseimage:15.04
  Name: ""
  Platform: ""
  SourceCode: FROM quantumobject/docker-baseimage:15.04
