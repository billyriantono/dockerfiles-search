{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim",
      "SourceCode": "FROM python:3.6-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim"
      },
      "Commands": [
        {
          "Key": "REQFILE",
          "Name": "arg",
          "Value": "requirements-prod.txt"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            },
            {
              "Key": "WORK_DIR",
              "Value": "/opt/lcct"
            },
            {
              "Key": "GRUNT_TASK",
              "Value": "prod"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1     \u0026\u0026 mkdir -p /usr/share/man/man7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runDeps=\"curl gnupg build-essential libpoppler-cpp-dev pkg-config postgresql-client python3-dev python3-cffi libcairo2 libpango1.0-0 libpangocairo-1.0.0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info libpq-dev git npm\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends $runDeps     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_8.x | bash -     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 rm -vrf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $WORK_DIR     \u0026\u0026 mkdir -p /media/uploadfiles     \u0026\u0026 mkdir -p /var/www/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/entrypoint.sh",
            "/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements*",
            "package.json",
            "Gruntfile.js",
            "$WORK_DIR/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$WORK_DIR"
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r $REQFILE     \u0026\u0026 npm install -g grunt-cli     \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "$WORK_DIR"
          ]
        },
        {
          "CmdLine": [
            "grunt $GRUNT_TASK"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}