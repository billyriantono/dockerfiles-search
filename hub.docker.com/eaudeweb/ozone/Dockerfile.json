{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim",
      "SourceCode": "FROM python:3.6-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim"
      },
      "Commands": [
        {
          "Key": "REQUIREMENTS_FILE",
          "Name": "arg",
          "Value": "requirements/local.txt"
        },
        {
          "CmdLine": [
            "runDeps=\"netcat libpq-dev gettext\"     \u0026\u0026 apt-get update -y     \u0026\u0026 apt-get install -y --no-install-recommends $runDeps     \u0026\u0026 apt-get clean     \u0026\u0026 rm -vrf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildDeps=\"build-essential gcc\"     \u0026\u0026 apt-get update -y     \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APP_HOME",
              "Value": "/var/local/ozone"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $APP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements",
            "$APP_HOME/requirements"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$APP_HOME"
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r $REQUIREMENTS_FILE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "$APP_HOME"
          ]
        },
        {
          "CmdLine": [
            "env DJANGO_SETTINGS_MODULE=config.settings.test python manage.py compilemessages"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}