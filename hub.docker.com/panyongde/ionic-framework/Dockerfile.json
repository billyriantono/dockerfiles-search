{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Yongde Pan \"panyongde@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "buildDeps='software-properties-common';     set -x \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     apt-get update -y \u0026\u0026     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     apt-get install -y oracle-java8-set-default \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get purge -y --auto-remove $buildDeps \u0026\u0026     apt-get autoremove -y \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y libc6:i386 zlib1g:i386 libncurses5:i386 libstdc++6:i386 lib32z1 wget unzip \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HASH",
              "Value": "3014f027ae08bf3d9f7360e4e4352e80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q \"https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026     echo \"${GRADLE_HASH} gradle-${GRADLE_VERSION}-bin.zip\" \u003e gradle-${GRADLE_VERSION}-bin.zip.md5 \u0026\u0026     md5sum -c gradle-${GRADLE_VERSION}-bin.zip.md5 \u0026\u0026     unzip -q \"gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026     ln -s \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}\" \u0026\u0026     rm \"gradle-${GRADLE_VERSION}-bin.zip\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get update \u0026\u0026     apt-get install -yq build-essential libssl-dev ruby ruby-dev --no-install-recommends \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/android-sdk-linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/android/repository/tools_r25.2.3-linux.zip -O tools.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip tools.zip -d /usr/local/android-sdk-linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm tools.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/usr/local/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${ANDROID_HOME}/tools:$ANDROID_HOME/platform-tools:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $ANDROID_HOME/licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 8933bad161af4178b1185d1a37fbf41ea5269c55 \u003e $ANDROID_HOME/licenses/android-sdk-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo d56f5187479451eabf01fb78af6dfcb131a6481e \u003e\u003e $ANDROID_HOME/licenses/android-sdk-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 84831b9409646a918e30573bab4c9c91346d8abd \u003e $ANDROID_HOME/licenses/android-sdk-preview-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"tools\" \"platform-tools\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"build-tools;26.0.2\" \"build-tools;25.0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"extras;android;m2repository\" \"extras;google;m2repository\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "8.9.3"
            },
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/node/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/opt/node\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y curl ca-certificates --no-install-recommends \u0026\u0026     curl -sL https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz | tar xz --strip-components=1 \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g cnpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CORDOVA_VERSION",
              "Value": "7.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/tmp\""
        },
        {
          "CmdLine": [
            "npm i -g --unsafe-perm cordova@${CORDOVA_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IONIC_VERSION",
              "Value": "3.19.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     npm i -g --unsafe-perm ionic@${IONIC_VERSION} \u0026\u0026     ionic --no-interactive config set -g daemon.updates false \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git vim \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install fir-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cnpm install android-versions --save"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}