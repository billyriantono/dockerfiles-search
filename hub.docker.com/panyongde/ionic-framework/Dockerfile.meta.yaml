MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Yongde Pan "panyongde@gmail.com"
    Name: maintainer
  - CmdLine:
    - buildDeps='software-properties-common';     set -x &&     apt-get update &&
      apt-get install -y $buildDeps --no-install-recommends &&     add-apt-repository
      ppa:webupd8team/java -y &&     apt-get update -y &&     echo oracle-java8-installer
      shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      &&     apt-get install -y oracle-java8-installer &&     apt-get install -y oracle-java8-set-default
      &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     apt-get purge -y
      --auto-remove $buildDeps &&     apt-get autoremove -y && apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - dpkg --add-architecture i386 &&     apt-get update -y &&     apt-get install
      -y libc6:i386 zlib1g:i386 libncurses5:i386 libstdc++6:i386 lib32z1 wget unzip
      &&     rm -rf /var/lib/apt/lists/* &&     apt-get autoremove -y &&     apt-get
      clean
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle
    Name: env
  - Env:
    - Key: GRADLE_VERSION
      Value: "4.1"
    Name: env
  - Env:
    - Key: GRADLE_HASH
      Value: 3014f027ae08bf3d9f7360e4e4352e80
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GRADLE_HOME/bin
    Name: env
  - CmdLine:
    - wget -q "https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
      &&     echo "${GRADLE_HASH} gradle-${GRADLE_VERSION}-bin.zip" > gradle-${GRADLE_VERSION}-bin.zip.md5
      &&     md5sum -c gradle-${GRADLE_VERSION}-bin.zip.md5 &&     unzip -q "gradle-${GRADLE_VERSION}-bin.zip"
      &&     ln -s "gradle-${GRADLE_VERSION}" "${GRADLE_HOME}" &&     rm "gradle-${GRADLE_VERSION}-bin.zip"*
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386 &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
      &&     apt-get update &&     apt-get install -yq build-essential libssl-dev
      ruby ruby-dev --no-install-recommends &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/android-sdk-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://dl.google.com/android/repository/tools_r25.2.3-linux.zip -O tools.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip tools.zip -d /usr/local/android-sdk-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - rm tools.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /usr/local/android-sdk-linux
    Name: env
  - Env:
    - Key: PATH
      Value: ${ANDROID_HOME}/tools:$ANDROID_HOME/platform-tools:$PATH
    Name: env
  - CmdLine:
    - mkdir $ANDROID_HOME/licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 8933bad161af4178b1185d1a37fbf41ea5269c55 > $ANDROID_HOME/licenses/android-sdk-license
    Name: run
    PrependShell: true
  - CmdLine:
    - echo d56f5187479451eabf01fb78af6dfcb131a6481e >> $ANDROID_HOME/licenses/android-sdk-license
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 84831b9409646a918e30573bab4c9c91346d8abd > $ANDROID_HOME/licenses/android-sdk-preview-license
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "tools" "platform-tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "build-tools;26.0.2" "build-tools;25.0.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-26" "platforms;android-25"
      "platforms;android-24" "platforms;android-23"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;android;m2repository" "extras;google;m2repository"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2"
    Name: run
    PrependShell: true
  - CmdLine:
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2"
    Name: run
    PrependShell: true
  - Env:
    - Key: NODEJS_VERSION
      Value: 8.9.3
    - Key: PATH
      Value: $PATH:/opt/node/bin
    Name: env
  - Name: workdir
    Path: '"/opt/node"'
  - CmdLine:
    - apt-get update && apt-get install -y curl ca-certificates --no-install-recommends
      &&     curl -sL https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz
      | tar xz --strip-components=1 &&     rm -rf /var/lib/apt/lists/* &&     apt-get
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g cnpm
    Name: run
    PrependShell: true
  - Env:
    - Key: CORDOVA_VERSION
      Value: 7.1.0
    Name: env
  - Name: workdir
    Path: '"/tmp"'
  - CmdLine:
    - npm i -g --unsafe-perm cordova@${CORDOVA_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: IONIC_VERSION
      Value: 3.19.0
    Name: env
  - CmdLine:
    - apt-get update &&     npm i -g --unsafe-perm ionic@${IONIC_VERSION} &&     ionic
      --no-interactive config set -g daemon.updates false &&     rm -rf /var/lib/apt/lists/*
      && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y git vim && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install fir-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - cnpm install android-versions --save
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
