{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Yongde Pan \u003cpanyongde@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps='software-properties-common';     set -x \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     apt-get update -y \u0026\u0026     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     apt-get install -y oracle-java8-set-default \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get purge -y --auto-remove $buildDeps \u0026\u0026     apt-get autoremove -y \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "\"https://dl.google.com/android/repository/tools_r25.2.5-linux.zip\""
            },
            {
              "Key": "ANDROID_BUILD_TOOLS_VERSION",
              "Value": "27.0.0"
            },
            {
              "Key": "ANDROID_APIS",
              "Value": "\"android-10,android-15,android-16,android-17,android-18,android-19,android-20,android-21,android-22,android-23,android-24,android-25,android-26\""
            },
            {
              "Key": "ANT_HOME",
              "Value": "\"/usr/share/ant\""
            },
            {
              "Key": "MAVEN_HOME",
              "Value": "\"/usr/share/maven\""
            },
            {
              "Key": "GRADLE_HOME",
              "Value": "\"/usr/share/gradle\""
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/opt/android\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/$ANDROID_BUILD_TOOLS_VERSION:$ANT_HOME/bin:$MAVEN_HOME/bin:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get -qq install -y wget curl maven ant gradle libncurses5:i386 libstdc++6:i386 zlib1g:i386 \u0026\u0026     mkdir android \u0026\u0026 cd android \u0026\u0026     wget -O tools.zip ${ANDROID_SDK_URL} \u0026\u0026     unzip tools.zip \u0026\u0026 rm tools.zip \u0026\u0026     echo y | android update sdk -a -u -t platform-tools,${ANDROID_APIS},build-tools-${ANDROID_BUILD_TOOLS_VERSION} \u0026\u0026     chmod a+x -R $ANDROID_HOME \u0026\u0026     chown -R root:root $ANDROID_HOME \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "8.9.1"
            },
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/node/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/opt/node\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y curl ca-certificates --no-install-recommends \u0026\u0026     curl -sL https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz | tar xz --strip-components=1 \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g cnpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CORDOVA_VERSION",
              "Value": "7.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/tmp\""
        },
        {
          "CmdLine": [
            "npm i -g --unsafe-perm cordova@${CORDOVA_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IONIC_VERSION",
              "Value": "3.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git vim \u0026\u0026     npm i -g --unsafe-perm ionic@${IONIC_VERSION} \u0026\u0026     ionic --no-interactive config set -g daemon.updates false \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq build-essential libssl-dev ruby ruby-dev --no-install-recommends \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install fir-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cnpm install android-versions --save"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}