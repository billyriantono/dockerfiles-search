{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y openssl openssh-client tar xz-utils wget git curl zip bzip2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"\" | add-apt-repository ppa:webupd8team/java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y oracle-java8-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SLAVE_AGENT_PORT",
              "Value": "50000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -c \"jenkins\" jenkins -u 1000 -s /bin/bash -d \"/home/jenkins\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/echo -e \"jenkins\\njenkins\" | passwd jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser jenkins sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"JAVA_HOME=/usr/lib/jvm/java-8-oracle/bin\" \u003e\u003e /home/jenkins/.bsharc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export JAVA_HOME\" \u003e\u003e /home/jenkins/.bsharc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'PATH=$PATH:$JAVA_HOME' \u003e\u003e /home/jenkins/.bsharc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export PATH\" \u003e\u003e /home/jenkins/.bsharc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown jenkins -Rf /home/jenkins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "2.89.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fL http://mirrors.jenkins-ci.org/war-stable/$JENKINS_VERSION/jenkins.war -o /usr/share/jenkins/jenkins.war"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins-ci.org"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chown -Rf jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/jenkins.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf jenkins /home/jenkins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -Rf 777 /home/jenkins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/jenkins/.ssh/ \u0026\u0026     cd /home/jenkins/.ssh/ \u0026\u0026     ssh-keygen -t rsa -b 4096 -C '' -f /home/jenkins/.ssh/id_rsa \u0026\u0026     echo \"StrictHostKeyChecking no\" \u003e\u003e  /home/jenkins/.ssh/config \u0026\u0026     echo \"UserKnownHostsFile /dev/null\" \u003e\u003e  /home/jenkins/.ssh/config \u0026\u0026    chown -Rf jenkins:jenkins /home/jenkins/ \u0026\u0026     ssh-agent /bin/bash \u0026\u0026 eval \"$(ssh-agent -s)\" \u0026\u0026     ssh-add /home/jenkins/.ssh/id_rsa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.9.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --verify SHASUMS256.txt.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt.asc | sha256sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/nodejs /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf jenkins /usr/local/lib/node_modules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y language-pack-en-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get -y upgrade \u0026\u0026 apt-get -y install snmp php7.1     php7.1-bz2      php7.1-mbstring     php7.1-cli      php7.1-common      php7.1-curl      php7.1-dev      php7.1-gd      php7.1-imap      php7.1-interbase      php7.1-intl      php7.1-json      php7.1-ldap      php7.1-mcrypt      php7.1-mysql      php7.1-odbc      php7.1-opcache      php7.1-pgsql      php7.1-pspell      php7.1-readline      php7.1-recode      php7.1-snmp      php7.1-sqlite3      php7.1-sybase      php7.1-tidy      php7.1-xmlrpc     php7.1-zip     php-mongodb     php-redis     php-apcu     php-amqp     php-memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y libc6:i386 zlib1g:i386 libncurses5:i386 libstdc++6:i386 lib32z1 wget unzip \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     apt-get update \u0026\u0026     apt-get install -yq build-essential libssl-dev ruby ruby-dev --no-install-recommends \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/android-sdk-linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/android/repository/tools_r25.2.3-linux.zip -O tools.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip tools.zip -d /usr/local/android-sdk-linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm tools.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/usr/local/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${ANDROID_HOME}/tools:$ANDROID_HOME/platform-tools:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $ANDROID_HOME/licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 8933bad161af4178b1185d1a37fbf41ea5269c55 \u003e $ANDROID_HOME/licenses/android-sdk-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo d56f5187479451eabf01fb78af6dfcb131a6481e \u003e\u003e $ANDROID_HOME/licenses/android-sdk-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 84831b9409646a918e30573bab4c9c91346d8abd \u003e $ANDROID_HOME/licenses/android-sdk-preview-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"tools\" \"platform-tools\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"build-tools;26.0.2\" \"build-tools;25.0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"extras;android;m2repository\" \"extras;google;m2repository\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$ANDROID_HOME/tools/bin/sdkmanager \"extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CORDOVA_VERSION",
              "Value": "7.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/tmp\""
        },
        {
          "CmdLine": [
            "npm i -g --unsafe-perm cordova@${CORDOVA_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IONIC_VERSION",
              "Value": "3.19.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     npm i -g --unsafe-perm ionic@${IONIC_VERSION} \u0026\u0026     ionic --no-interactive config set -g daemon.updates false \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git vim \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install fir-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install android-versions --save"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install apt-transport-https       ca-certificates       curl       gnupg2       software-properties-common \u0026\u0026     curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg \u003e /tmp/dkey; apt-key add /tmp/dkey \u0026\u0026     add-apt-repository       \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")       $(lsb_release -cs)       stable\" \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install docker-ce \u0026\u0026     curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y expect"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}