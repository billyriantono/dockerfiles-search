MetaArgs: null
Stages:
- BaseName: panyongde/ionic-framework:latest
  Commands:
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Key: http_port
    Name: arg
    Value: "8080"
  - Key: agent_port
    Name: arg
    Value: "50000"
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: ${agent_port}
    Name: env
  - CmdLine:
    - groupadd -g ${gid} ${group}     && useradd -d "$JENKINS_HOME" -u ${uid} -g ${gid}
      -m -s /bin/bash ${user}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/jenkins_home
  - CmdLine:
    - mkdir -p /usr/share/jenkins/ref/init.groovy.d
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: 0.14.0
    Name: env
  - Env:
    - Key: TINI_SHA
      Value: 6c41ec7d33e857d4779f14d9c74924cab0c7973485d2972419a3b7c7620ff5fd
    Name: env
  - CmdLine:
    - curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64
      -o /bin/tini && chmod +x /bin/tini   && echo "$TINI_SHA  /bin/tini" | sha256sum
      -c -
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - Key: JENKINS_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: JENKINS_VERSION
      Value: ${JENKINS_VERSION:-2.89.2}
    Name: env
  - Key: JENKINS_SHA
    Name: arg
    Value: 014f669f32bc6e925e926e260503670b32662f006799b133a031a70a794c8a14
  - Key: JENKINS_URL
    Name: arg
    Value: https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war
  - CmdLine:
    - curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war   && echo "${JENKINS_SHA}  /usr/share/jenkins/jenkins.war"
      | sha256sum -c -
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_UC
      Value: https://updates.jenkins.io
    Name: env
  - Env:
    - Key: JENKINS_UC_EXPERIMENTAL
      Value: https://updates.jenkins.io/experimental
    Name: env
  - CmdLine:
    - chown -R ${user} "$JENKINS_HOME" /usr/share/jenkins/ref
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${http_port}
  - Name: expose
    Ports:
    - ${agent_port}
  - Env:
    - Key: COPY_REFERENCE_FILE_LOG
      Value: $JENKINS_HOME/copy_reference_file.log
    Name: env
  - CmdLine:
    - echo "${user}:${user}" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${user}   ALL=(ALL)       ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: ${user}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-support
    - /usr/local/bin/jenkins-support
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins.sh
    - /usr/local/bin/jenkins.sh
  - CmdLine:
    - /bin/tini
    - --
    - /usr/local/bin/jenkins.sh
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.sh
    - /usr/local/bin/plugins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-plugins.sh
    - /usr/local/bin/install-plugins.sh
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get -y install apt-transport-https       ca-certificates       curl       gnupg2       software-properties-common
      &&     curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo
      "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey &&     add-apt-repository       "deb
      [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")       $(lsb_release
      -cs)       stable" &&     apt-get update &&     apt-get -y install docker-ce
      &&     curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y language-pack-en-base
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update && apt-get -y upgrade && apt-get -y install snmp php7.1     php7.1-bz2      php7.1-mbstring     php7.1-cli      php7.1-common      php7.1-curl      php7.1-dev      php7.1-gd      php7.1-imap      php7.1-interbase      php7.1-intl      php7.1-json      php7.1-ldap      php7.1-mcrypt      php7.1-mysql      php7.1-odbc      php7.1-opcache      php7.1-pgsql      php7.1-pspell      php7.1-readline      php7.1-recode      php7.1-snmp      php7.1-sqlite3      php7.1-sybase      php7.1-tidy      php7.1-xmlrpc     php7.1-zip     php-mongodb     php-redis     php-apcu     php-amqp     php-memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y expect
    Name: run
    PrependShell: true
  From:
    Image: panyongde/ionic-framework:latest
  Name: ""
  Platform: ""
  SourceCode: FROM panyongde/ionic-framework:latest
