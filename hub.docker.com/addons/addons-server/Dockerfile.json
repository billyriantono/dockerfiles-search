{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim-stretch",
      "SourceCode": "FROM python:3.6-slim-stretch",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim-stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHONDONTWRITEBYTECODE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION_MAJOR",
              "Value": "3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "touch /addons-server-docker-container"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/nodesource.gpg.key",
            "/etc/pki/gpg/GPG-KEY-nodesource"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         apt-transport-https                      gnupg2                               \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /etc/pki/gpg/GPG-KEY-nodesource | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/debian-stretch-nodesource-repo",
            "/etc/apt/sources.list.d/nodesource.list"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/debian-stretch-backports-repo",
            "/etc/apt/sources.list.d/backports.list"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         bash-completion         build-essential         curl         libjpeg-dev         libsasl2-dev         libxml2-dev         libxslt-dev         locales         zlib1g-dev         libffi-dev         libssl-dev         libmagic-dev         nodejs         git         mysql-client         default-libmysqlclient-dev         swig         gettext         librsvg2-bin         pngcrush         uuid         libmaxminddb0                            libmaxminddb-dev                     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -t stretch-backports install -y         libgit2-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/share/GeoIP  \u0026\u0026 gunzip -c /tmp/GeoLite2-Country.mmdb.gz \u003e /usr/local/share/GeoIP/GeoLite2-Country.mmdb  \u0026\u0026 rm -f /tmp/GeoLite2-Country.mmdb.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -i en_US -f UTF-8 en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/code"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "Env": [
            {
              "Key": "PIP_BUILD",
              "Value": "/deps/build/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_CACHE_DIR",
              "Value": "/deps/cache/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_SRC",
              "Value": "/deps/src/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_PREFIX",
              "Value": "/deps/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWIG_FEATURES",
              "Value": "\"-D__x86_64__\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /deps/{build,cache,src}/ \u0026\u0026     ln -s /code/package.json /deps/package.json \u0026\u0026     make update_deps \u0026\u0026     rm -rf /deps/build/ /deps/cache/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HISTFILE",
              "Value": "/code/docker/artifacts/bash_history"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HISTSIZE",
              "Value": "50000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HISTIGNORE",
              "Value": "ls:exit:\"cd ..\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HISTCONTROL",
              "Value": "erasedups"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLEANCSS_BIN",
              "Value": "/deps/node_modules/.bin/cleancss"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LESS_BIN",
              "Value": "/deps/node_modules/.bin/lessc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UGLIFY_BIN",
              "Value": "/deps/node_modules/.bin/uglifyjs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ADDONS_LINTER_BIN",
              "Value": "/deps/node_modules/.bin/addons-linter"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}