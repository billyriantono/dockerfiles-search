MetaArgs:
- DefaultValue: docker.io
  Key: FROM_IMG_REGISTRY
  ProvidedValue: null
  Value: docker.io
- DefaultValue: qnib
  Key: FROM_IMG_REPO
  ProvidedValue: null
  Value: qnib
- DefaultValue: uplain-jupyter-cuda-notebook
  Key: FROM_IMG_NAME
  ProvidedValue: null
  Value: uplain-jupyter-cuda-notebook
- DefaultValue: 2018-11-14.2
  Key: FROM_IMG_TAG
  ProvidedValue: null
  Value: 2018-11-14.2
- DefaultValue: ''''''
  Key: FROM_IMG_HASH
  ProvidedValue: null
  Value: ''''''
Stages:
- BaseName: ${FROM_IMG_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}
  Commands:
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip   &&
      apt-get clean   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py    && python get-pip.py    && rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install          Pillow          h5py          ipykernel          jupyter          matplotlib          numpy          pandas          scipy          sklearn  &&
      python -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install tensorflow-gpu
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.jupyter/  && wget -qO /root/.jupyter/jupyter_notebook_config.py
      https://github.com/tensorflow/tensorflow/raw/r1.4/tensorflow/tools/docker/jupyter_notebook_config.py
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "startup --batch" >>/etc/bazel.bazelrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "build --spawn_strategy=standalone --genrule_strategy=standalone"      >>/etc/bazel.bazelrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends git-core
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/tensorflow/tensorflow.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd tensorflow   && git checkout r1.10
    Name: run
    PrependShell: true
  - Env:
    - Key: CI_BUILD_PYTHON
      Value: python
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: TF_NEED_CUDA
      Value: "1"
    Name: env
  - Env:
    - Key: TF_CUDA_COMPUTE_CAPABILITIES
      Value: 3.0,3.5,5.2,6.0,6.1
    Name: env
  - CmdLine:
    - apt-get install -y --allow-unauthenticated cuda-cublas-dev-9-2
    Name: run
    PrependShell: true
  - Env:
    - Key: BAZEL_VERSION
      Value: 0.19.1
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - 'mkdir /bazel &&     cd /bazel &&     curl -H "User-Agent: Mozilla/5.0 (X11;
      Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"
      -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
      &&     curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36
      (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -o /bazel/LICENSE.txt
      https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod
      +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd
      / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh'
    Name: run
    PrependShell: true
  From:
    Image: ${FROM_IMG_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}
  Name: ""
  Platform: ""
  SourceCode: FROM ${FROM_IMG_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}
