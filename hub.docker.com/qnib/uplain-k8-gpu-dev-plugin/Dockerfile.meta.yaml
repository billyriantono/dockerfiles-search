MetaArgs:
- DefaultValue: docker.io
  Key: FROM_IMG_REGISTRY
  ProvidedValue: null
  Value: docker.io
- DefaultValue: qnib
  Key: FROM_IMG_REPO
  ProvidedValue: null
  Value: qnib
- DefaultValue: '"uplain-cuda8-nvml"'
  Key: FROM_IMG_NAME
  ProvidedValue: null
  Value: '"uplain-cuda8-nvml"'
- DefaultValue: '"8.0.61-1"'
  Key: FROM_IMG_TAG
  ProvidedValue: null
  Value: '"8.0.61-1"'
- DefaultValue: '""'
  Key: FROM_IMG_HASH
  ProvidedValue: null
  Value: '""'
Stages:
- BaseName: ${FROM_IMG_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         g++         ca-certificates         wget         cuda-cudart-dev-8-0         cuda-misc-headers-8-0         cuda-nvml-dev-8-0         git  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.4
    Name: env
  - CmdLine:
    - wget -nv -O - https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz     |
      tar -C /usr/local -xz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: CGO_CFLAGS
      Value: '"-I /usr/local/cuda-8.0/include"'
    Name: env
  - Env:
    - Key: CGO_LDFLAGS
      Value: '"-L /usr/local/cuda-8.0/lib64"'
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/nvidia/bin:/usr/local/cuda/bin
    Name: env
  - Name: workdir
    Path: /go/src/github.com/NVIDIA/
  - CmdLine:
    - git clone https://github.com/NVIDIA/k8s-device-plugin.git nvidia-device-plugin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/NVIDIA/nvidia-device-plugin
  - CmdLine:
    - git checkout -b v1.8 remotes/origin/v1.8
    Name: run
    PrependShell: true
  - CmdLine:
    - export CGO_LDFLAGS_ALLOW='-Wl,--unresolved-symbols=ignore-in-object-files'  &&
      go install -ldflags="-s -w"
    Name: run
    PrependShell: true
  - Labels:
    - Key: houdini.user.keep
      Value: "true"
    Name: label
  - CmdLine:
    - nvidia-device-plugin
    Name: cmd
    PrependShell: false
  From:
    Image: ${FROM_IMG_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}
  Name: ""
  Platform: ""
  SourceCode: FROM ${FROM_IMG_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}
