MetaArgs: null
Stages:
- BaseName: qnib/dplain-init
  Commands:
  - CmdLine:
    - groupadd -r kibana && useradd -r -m -g kibana kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tapt-transport-https \t\tca-certificates
      \t\twget \t\tlibfontconfig \t\tlibfreetype6 \t--no-install-recommends && rm
      -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='46095ACC8548582C1A2699A9D27D666CD88E42B4'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg
      --export \"$key\" > /etc/apt/trusted.gpg.d/elastic.gpg; \trm -r \"$GNUPGHOME\";
      \tapt-key list"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb https://artifacts.elastic.co/packages/5.x/apt stable main' > /etc/apt/sources.list.d/kibana.list
    Name: run
    PrependShell: true
  - Env:
    - Key: KIBANA_VERSION
      Value: 5.5.1
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends
      kibana=$KIBANA_VERSION \t&& rm -rf /var/lib/apt/lists/* \t\t&& sed -ri \"s!^(\\#\\s*)?(server\\.host:).*!\\2
      '0.0.0.0'!\" /etc/kibana/kibana.yml \t&& grep -q \"^server\\.host: '0.0.0.0'\\$\"
      /etc/kibana/kibana.yml \t\t&& sed -ri \"s!^(\\#\\s*)?(elasticsearch\\.url:).*!\\2
      'http://elasticsearch:9200'!\" /etc/kibana/kibana.yml \t&& grep -q \"^elasticsearch\\.url:
      'http://elasticsearch:9200'\\$\" /etc/kibana/kibana.yml"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/kibana/bin:$PATH
    - Key: ENTRYPOINTS_DIR
      Value: /opt/qnib/entry
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install -y curl  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - opt/healthchecks/20-kibana.sh
    - /opt/healthchecks/
  - Health:
      Interval: 5000000000
      Retries: 15
      Test:
      - CMD-SHELL
      - /usr/local/bin/healthcheck.sh
      Timeout: 1000000000
    Name: healthcheck
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - opt/qnib/entry/*
    - /opt/qnib/entry/
  From:
    Image: qnib/dplain-init
  Name: ""
  Platform: ""
  SourceCode: FROM qnib/dplain-init
