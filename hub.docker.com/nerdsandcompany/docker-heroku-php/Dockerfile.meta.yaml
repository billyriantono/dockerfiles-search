MetaArgs: null
Stages:
- BaseName: heroku/heroku:18
  Commands:
  - Maintainer: Nerds & Company
    Name: maintainer
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Env:
    - Key: HEROKU_CEDAR_VERSION
      Value: "18"
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.3.0
    Name: env
  - Env:
    - Key: REDIS_EXT_VERSION
      Value: 4.2.0
    Name: env
  - Env:
    - Key: IMAGICK_EXT_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: HTTPD_VERSION
      Value: 2.4.37
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.8.1
    Name: env
  - Env:
    - Key: NODE_ENGINE
      Value: 8.14.0
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.8.0
    Name: env
  - CmdLine:
    - mkdir -p /app/.heroku/php /app/.heroku/node /app/.profile.d
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/user
  - Env:
    - Key: PATH
      Value: /app/.heroku/php/bin:/app/.heroku/php/sbin:/app/.heroku/node/bin/:/app/user/node_modules/.bin:/app/user/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-$HEROKU_CEDAR_VERSION-stable/apache-$HTTPD_VERSION.tar.gz
      | tar xz -C /app/.heroku/php
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/apache2/httpd.conf.default
      > /app/.heroku/php/etc/apache2/httpd.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\nGroup root\n" >> /app/.heroku/php/etc/apache2/httpd.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-$HEROKU_CEDAR_VERSION-stable/nginx-$NGINX_VERSION.tar.gz
      | tar xz -C /app/.heroku/php
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default
      > /app/.heroku/php/etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\nuser nobody root;\n" >> /app/.heroku/php/etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`  &&
      mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION  && curl -sS -o /tmp/chromedriver_linux64.zip
      http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip  &&
      unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION  &&
      rm /tmp/chromedriver_linux64.zip  && chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver  &&
      ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-$HEROKU_CEDAR_VERSION-stable/php-$PHP_VERSION.tar.gz
      | tar xz -C /app/.heroku/php
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app/.heroku/php/etc/php/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/php/php.ini
      > /app/.heroku/php/etc/php/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-$HEROKU_CEDAR_VERSION-stable/extensions/no-debug-non-zts-20180731/redis-$REDIS_EXT_VERSION.tar.gz
      | tar xz -C /app/.heroku/php
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-$HEROKU_CEDAR_VERSION-stable/extensions/no-debug-non-zts-20180731/imagick-$IMAGICK_EXT_VERSION.tar.gz
      | tar xz -C /app/.heroku/php
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\nuser_ini.cache_ttl = 30 \nopcache.enable = 0 \nextension=bcmath.so \nextension=calendar.so
      \nextension=exif.so \nextension=ftp.so \nextension=gd.so\nextension=gettext.so
      \nextension=intl.so \nextension=mbstring.so \nextension=pcntl.so \nextension=redis.so
      \nextension=imagick.so \nextension=shmop.so \nextension=soap.so \nextension=sqlite3.so
      \nextension=pdo_sqlite.so \nextension=xmlrpc.so \nextension=xsl.so\n" >> /app/.heroku/php/etc/php/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://s3pository.heroku.com/node/v$NODE_ENGINE/node-v$NODE_ENGINE-linux-x64.tar.gz
      | tar --strip-components=1 -xz -C /app/.heroku/node
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y mysql-client yarn libpng-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-$HEROKU_CEDAR_VERSION-stable/composer-$COMPOSER_VERSION.tar.gz
      | tar xz -C /app/.heroku/php
    Name: run
    PrependShell: true
  - Expression: ADD composer.lock /app/user/
    Name: onbuild
  - Expression: ADD composer.json /app/user/
    Name: onbuild
  - Expression: RUN composer install --prefer-dist --no-scripts --no-suggest
    Name: onbuild
  - Expression: RUN composer show heroku/heroku-buildpack-php || { echo 'Your composer.json
      must have "heroku/heroku-buildpack-php" as a "require-dev" dependency.'; exit
      1; }
    Name: onbuild
  - Expression: ADD package*.json yarn.* /app/user/
    Name: onbuild
  - Expression: RUN [ -f yarn.lock ] && yarn install --no-progress || npm install
    Name: onbuild
  - Expression: ADD . /app/user/
    Name: onbuild
  - Expression: RUN cat composer.json | python -c 'import sys,json; sys.exit("post-install-cmd"
      not in json.load(sys.stdin).get("scripts", {}));' && composer run-script post-install-cmd
      || true
    Name: onbuild
  - Expression: RUN cat composer.json | python -c 'import sys,json; sys.exit("post-autoload-dump"
      not in json.load(sys.stdin).get("scripts", {}));' && composer run-script post-autoload-dump
      || true
    Name: onbuild
  From:
    Image: heroku/heroku:18
  Name: ""
  Platform: ""
  SourceCode: FROM heroku/heroku:18
