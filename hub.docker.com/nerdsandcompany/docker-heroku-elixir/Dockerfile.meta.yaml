MetaArgs: null
Stages:
- BaseName: heroku/heroku:16
  Commands:
  - Maintainer: Bob Olde Hampsink <b.oldehampsink@nerds.company>
    Name: maintainer
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Env:
    - Key: ERLANG_MAJOR_VERSION
      Value: "20"
    Name: env
  - Env:
    - Key: ERLANG_VERSION
      Value: 20.2.4
    Name: env
  - Env:
    - Key: ELIXIR_VERSION
      Value: 1.6.3
    Name: env
  - Env:
    - Key: NODE_ENGINE
      Value: 8.10.0
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: SECRET_KEY_BASE
      Value: $(openssl rand -base64 32)
    Name: env
  - CmdLine:
    - mkdir -p /app/.heroku/erlang /app/.heroku/elixir /app/.heroku/node /app/.profile.d
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/user
  - Env:
    - Key: PATH
      Value: /app/.heroku/erlang/bin:/app/.heroku/elixir/bin:/app/.heroku/node/bin/:/app/user/node_modules/.bin:$PATH
    Name: env
  - CmdLine:
    - curl --silent --location https://s3.amazonaws.com/heroku-buildpack-elixir/erlang/cedar-14/OTP-$ERLANG_VERSION.tar.gz
      | tar xz -C /app/.heroku/erlang --strip=1
    Name: run
    PrependShell: true
  - CmdLine:
    - /app/.heroku/erlang/Install -minimal /app/.heroku/erlang
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://repo.hex.pm/builds/elixir/v$ELIXIR_VERSION-otp-$ERLANG_MAJOR_VERSION.zip
      -o /tmp/elixir.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip -q /tmp/elixir.zip -d /app/.heroku/elixir
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/elixir.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.rebar --force
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://s3pository.heroku.com/node/v$NODE_ENGINE/node-v$NODE_ENGINE-linux-x64.tar.gz
      | tar --strip-components=1 -xz -C /app/.heroku/node
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y yarn
    Name: run
    PrependShell: true
  - Expression: COPY mix.lock /app/user/
    Name: onbuild
  - Expression: COPY mix.exs /app/user/
    Name: onbuild
  - Expression: RUN mix deps.get
    Name: onbuild
  - Expression: COPY package*.json yarn.* /app/user/
    Name: onbuild
  - Expression: RUN [ -f yarn.lock ] && yarn install --no-progress || npm install
    Name: onbuild
  - Expression: COPY . /app/user/
    Name: onbuild
  From:
    Image: heroku/heroku:16
  Name: ""
  Platform: ""
  SourceCode: FROM heroku/heroku:16
