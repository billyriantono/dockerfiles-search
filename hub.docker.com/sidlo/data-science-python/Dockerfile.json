{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/pyspark-notebook:latest",
      "SourceCode": "FROM jupyter/pyspark-notebook:latest",
      "Platform": "",
      "From": {
        "Image": "jupyter/pyspark-notebook:latest"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026 apt-get install -y telnet iputils-ping"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y libblas3 liblapack3 libstdc++6 python-setuptools graphviz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "pip install -U pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install sparkmonitor  \u0026\u0026     jupyter nbextension install sparkmonitor --py --user --symlink  \u0026\u0026     jupyter nbextension enable sparkmonitor --py --user  \u0026\u0026     jupyter serverextension enable --py --user sparkmonitor \u0026\u0026     ipython profile create \u0026\u0026 echo \"c.InteractiveShellApp.extensions.append('sparkmonitor.kernelextension')\" \u003e\u003e  $(ipython profile locate default)/ipython_kernel_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/conda install --quiet --yes -c conda-forge ipywidgets \u0026\u0026     jupyter labextension install @jupyterlab/git \u0026\u0026     pip install jupyterlab-git \u0026\u0026     jupyter serverextension enable --py --sys-prefix jupyterlab_git \u0026\u0026     pip install jupyterlab_latex \u0026\u0026     jupyter serverextension enable --sys-prefix jupyterlab_latex \u0026\u0026     jupyter labextension install @jupyterlab/latex \u0026\u0026     jupyter labextension install @jupyterlab/geojson-extension \u0026\u0026     jupyter labextension install @jupyterlab/github \u0026\u0026     jupyter labextension install @jupyterlab/plotly-extension \u0026\u0026     jupyter labextension install @jupyterlab/vega2-extension \u0026\u0026     jupyter labextension install beakerx-jupyterlab \u0026\u0026     jupyter labextension install @jupyterlab/toc \u0026\u0026     jupyter labextension install jupyterlab-kernelspy \u0026\u0026     jupyter labextension install qgrid \u0026\u0026     jupyter labextension install jupyterlab-drawio \u0026\u0026     jupyter labextension install @krassowski/jupyterlab_go_to_definition \u0026\u0026     jupyter labextension install @mflevine/jupyterlab_html \u0026\u0026     jupyter labextension install jupyterlab_bokeh \u0026\u0026     jupyter labextension install bqplot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install psycopg2-binary \u0026\u0026     pip install --upgrade google-cloud-bigquery \u0026\u0026     pip install -e git+https://github.com/SohierDane/BigQuery_Helper#egg=bq_helper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install findspark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install twython \u0026\u0026     pip install pymongo \u0026\u0026     pip install scrapy \u0026\u0026     pip install elasticsearch \u0026\u0026     pip install nltk \u0026\u0026     pip install xmltodict \u0026\u0026     pip install folium \u0026\u0026     pip install geopandas \u0026\u0026     pip install geopy \u0026\u0026     pip install graphviz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install xgboost"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/conda install --yes --quiet -c conda-forge alpenglow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/conda install --yes --quiet tensorflow keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm cache clean --force \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}