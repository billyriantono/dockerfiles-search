{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_VERSION",
              "Value": "201.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "1.9.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets",
            "/opt/resource"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/resource/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add         curl         python         py-crcmod         bash         libc6-compat         openssh-client         git         openssl         tar         jq         ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz         \u0026\u0026 tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz         \u0026\u0026 rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz         \u0026\u0026 ln -s /lib /lib64         \u0026\u0026 gcloud config set core/disable_usage_reporting true         \u0026\u0026 gcloud config set component_manager/disable_update_check true         \u0026\u0026 gcloud config set metrics/environment github_docker_image         \u0026\u0026 gcloud --version         \u0026\u0026 gcloud components install alpha beta         \u0026\u0026 gcloud components update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o kubectl         https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl         \u0026\u0026 chmod 0700 kubectl         \u0026\u0026 mv kubectl /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o helm.tar.gz         https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz         \u0026\u0026 tar -xvzf helm.tar.gz         \u0026\u0026 rm -rf helm.tar.gz         \u0026\u0026 chmod 0700 linux-amd64/helm         \u0026\u0026 mv linux-amd64/helm /usr/bin         \u0026\u0026 rm -rf linux-amd64         \u0026\u0026 helm init --client-only         \u0026\u0026 helm plugin install https://github.com/viglesiasce/helm-gcs.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}