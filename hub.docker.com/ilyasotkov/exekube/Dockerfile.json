{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_VERSION",
              "Value": "196.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.11.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRAGRUNT_VERSION",
              "Value": "0.14.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_PROVIDER_HELM_VERSION",
              "Value": "0.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:/exekube-modules/scripts:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "modules",
            "/exekube-modules/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add         curl         python         py-crcmod         bash         libc6-compat         openssh-client         git         openssl         tar         ca-certificates         apache2-utils         jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz         \u0026\u0026 tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz         \u0026\u0026 rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz         \u0026\u0026 ln -s /lib /lib64         \u0026\u0026 gcloud config set core/disable_usage_reporting true         \u0026\u0026 gcloud config set component_manager/disable_update_check true         \u0026\u0026 gcloud config set metrics/environment github_docker_image         \u0026\u0026 gcloud --version         \u0026\u0026 gcloud components install alpha beta kubectl         \u0026\u0026 gcloud components update         \u0026\u0026 gcloud config set component_manager/disable_update_check true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o helm.tar.gz         https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz         \u0026\u0026 tar -xvzf helm.tar.gz         \u0026\u0026 rm -rf helm.tar.gz         \u0026\u0026 chmod 0700 linux-amd64/helm         \u0026\u0026 mv linux-amd64/helm /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip         \u0026\u0026 unzip terraform.zip         \u0026\u0026 mv terraform /usr/bin         \u0026\u0026 rm -rf terraform.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o ./terragrunt         https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64         \u0026\u0026 chmod 0700 terragrunt         \u0026\u0026 mv terragrunt /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o ./tph.tar.gz         https://github.com/mcuadros/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz         \u0026\u0026 tar -xvzf tph.tar.gz         \u0026\u0026 rm -rf tph.tar.gz         \u0026\u0026 cd terraform-provider-helm_linux_amd64         \u0026\u0026 mv terraform-provider-helm terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}         \u0026\u0026 chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}         \u0026\u0026 mkdir -p /root/.terraform.d/plugins/         \u0026\u0026 mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}