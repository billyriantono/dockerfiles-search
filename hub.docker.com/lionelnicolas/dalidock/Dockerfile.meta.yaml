MetaArgs: null
Stages:
- As: python-build
  BaseName: ubuntu:bionic-20190612
  Commands:
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    - Key: LANG
      Value: C.UTF-8
    - Key: LANGUAGE
      Value: C.UTF-8
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "echo \"deb http://archive.ubuntu.com/ubuntu/ bionic main restricted universe
      multiverse\"           >/etc/apt/sources.list && \techo \"deb http://security.ubuntu.com/ubuntu
      bionic-security main restricted universe multiverse\" >>/etc/apt/sources.list
      && \techo \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted
      universe multiverse\"  >>/etc/apt/sources.list && \tapt-get update && \tapt-get
      install -y --no-install-recommends \t\tbuild-essential \t\tpython3 \t\tpython3-dev
      \t\tpython3-venv \t\tpython3-wheel \t\ttwine \t\tvirtualenv \t\twget \t\t&&
      \tapt-get clean && \trm -rf /var/lib/apt/lists"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp && \twget http://bootstrap.pypa.io/get-pip.py && \tpython3 ./get-pip.py
      && \trm -rfv *"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/requirements.txt
  - CmdLine:
    - "pip3 install \t\t--requirement /tmp/requirements.txt \t\t--ignore-installed
      \t\t--target /tmp/packages"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic-20190612
  Name: python-build
  Platform: ""
  SourceCode: FROM ubuntu:bionic-20190612 as python-build
- As: base
  BaseName: ubuntu:bionic-20190612
  Commands:
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    - Key: LANG
      Value: C.UTF-8
    - Key: LANGUAGE
      Value: C.UTF-8
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "echo \"deb http://archive.ubuntu.com/ubuntu/ bionic main restricted universe
      multiverse\"           >/etc/apt/sources.list && \techo \"deb http://security.ubuntu.com/ubuntu
      bionic-security main restricted universe multiverse\" >>/etc/apt/sources.list
      && \techo \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted
      universe multiverse\"  >>/etc/apt/sources.list && \tapt-get update && \tapt-get
      install -y --no-install-recommends \t\tbind9-host \t\tca-certificates \t\tdirmngr
      \t\tdnsmasq \t\tdnsutils \t\ted \t\tgpg \t\tgpg-agent \t\tinotify-tools \t\tiproute2
      \t\tnet-tools \t\tpython3 \t\tpython3-distutils \t\trunit \t\twget \t\t&& \techo
      \"deb http://ppa.launchpad.net/vbernat/haproxy-1.9/ubuntu bionic main\"  >>/etc/apt/sources.list.d/haproxy.list
      && \thttp_proxy='' apt-key adv --keyserver ipv4.pool.sks-keyservers.net --recv-keys
      CFFB779AADC995E4F350A060505D97A41C61B9CD && \tapt-get update && \tapt-get install
      -y --no-install-recommends haproxy && \tapt-get clean && \trm -rf /var/lib/apt/lists
      && \trm -vf /etc/ssh/ssh_host_*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "TINI_VERSION=v0.18.0 && \thttp_proxy='' gpg --keyserver ipv4.pool.sks-keyservers.net
      --recv-keys 0527A9B7 && \twget -O/usr/bin/tini     \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\"
      && \twget -O/usr/bin/tini.asc \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc\"
      && \tgpg --verify /usr/bin/tini.asc && \trm -f /usr/bin/tini.asc && \tchmod
      a+x /usr/bin/tini"
    Name: run
    PrependShell: true
  - Chown: ""
    From: python-build
    Name: copy
    SourcesAndDest:
    - /tmp/packages
    - /usr/lib/python3/dist-packages
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint
    - dalidock
    - haproxy-start
    - /usr/sbin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc
    - /etc/
  - CmdLine:
    - /usr/sbin/entrypoint
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:bionic-20190612
  Name: base
  Platform: ""
  SourceCode: FROM ubuntu:bionic-20190612 as base
