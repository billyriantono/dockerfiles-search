MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:2.101
  Commands:
  - Key: HTTP_PROXY
    Name: arg
    Value: null
  - Key: http_proxy
    Name: arg
    Value: ${http_proxy:-${HTTP_PROXY}}
  - Key: HTTPS_PROXY
    Name: arg
    Value: ${HTTPS_PROXY:-${HTTP_PROXY}}
  - Key: https_proxy
    Name: arg
    Value: ${https_proxy:-${HTTPS_PROXY}}
  - Key: FTP_PROXY
    Name: arg
    Value: ${FTP_PROXY:-${HTTP_PROXY}}
  - Key: ftp_proxy
    Name: arg
    Value: ${ftp_proxy:-${FTP_PROXY}}
  - Key: NO_PROXY
    Name: arg
    Value: null
  - Key: no_proxy
    Name: arg
    Value: ${no_proxy:-${NO_PROXY}}
  - CmdLine:
    - echo "  HTTP_PROXY=${HTTP_PROXY}\n  HTTPS_PROXY=${HTTPS_PROXY}\n  FTP_PROXY=${FTP_PROXY}\n  NO_PROXY=${NO_PROXY}\n  http_proxy=${http_proxy}\n  https_proxy=${https_proxy}\n  ftp_proxy=${ftp_proxy}\n  no_proxy=${no_proxy}"
    Name: run
    PrependShell: true
  - Key: HJ_BUILD_DATE
    Name: arg
    Value: ""
  - Key: HJ_IMAGE
    Name: arg
    Value: ""
  - Key: HJ_VERSION
    Name: arg
    Value: ""
  - CmdLine:
    - 'echo "BUILD DATE: ${HJ_BUILD_DATE}, IMAGE: ${HJ_IMAGE}, VERSION: ${HJ_VERSION}"
      >> /tmp/version.txt'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_OPTS
      Value: '"${JAVA_OPTS} -Djenkins.install.runSetupWizard=false"'
    Name: env
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - certs/
    - /hj/certs
  - CmdLine:
    - cp /hj/certs/* /usr/local/share/ca-certificates && update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get update   && apt-get install -y sudo   && echo "jenkins ALL=(ALL) NOPASSWD:
      ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_VERSION
      Value: '"17.12.0-ce"'
    Name: env
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: '"1.18.0"'
    Name: env
  - CmdLine:
    - set -x   && curl -kfSL https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz
      -o docker.tgz   && tar -xzvf docker.tgz   && mv docker/* /usr/local/bin/   &&
      rmdir docker   && rm docker.tgz   && docker -v   && curl -kL https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64
      > /usr/local/bin/docker-compose   && chmod +x /usr/local/bin/docker-compose   &&
      docker-compose --version
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins/plugins.txt
    - /usr/share/jenkins/plugins.txt
  - CmdLine:
    - /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mkdir -p /hj   && sudo chown -R jenkins:jenkins /hj
    Name: run
    PrependShell: true
  - Env:
    - Key: FLYWAY_HOME
      Value: '"/hj/flyway"'
    Name: env
  - Env:
    - Key: FLYWAY_VERSION
      Value: 5.0.3
    Name: env
  - CmdLine:
    - curl -ko /hj/flyway.tar.gz https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}.tar.gz   &&
      tar -xvf /hj/flyway.tar.gz -C /hj   && mv /hj/flyway-${FLYWAY_VERSION} ${FLYWAY_HOME}   &&
      rm /hj/flyway.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${FLYWAY_HOME}:${PATH}"'
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: '"/hj/maven"'
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.5.0
    Name: env
  - CmdLine:
    - curl -ko /hj/apache-maven-bin.tar.gz https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz   &&
      tar -xvf /hj/apache-maven-bin.tar.gz -C /hj   && mv /hj/apache-maven-${MAVEN_VERSION}
      /hj/maven   && rm /hj/apache-maven-bin.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${MAVEN_HOME}/bin:${PATH}"'
    Name: env
  - Env:
    - Key: SCRIPTS_HOME
      Value: '"/hj/scripts"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/
    - ${SCRIPTS_HOME}
  - CmdLine:
    - sudo chown -R jenkins:jenkins ${SCRIPTS_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: SSH_HOME
      Value: '"/hj/ssh"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssh/
    - ${SSH_HOME}
  - CmdLine:
    - sudo chown -R jenkins:jenkins ${SSH_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: TEMPLATES_HOME
      Value: '"/hj/templates"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates/
    - ${TEMPLATES_HOME}
  - CmdLine:
    - sudo chown -R jenkins:jenkins ${TEMPLATES_HOME}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/scriptApproval.xml
    - /usr/share/jenkins/ref/scriptApproval.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/settings.xml
    - ${MAVEN_HOME}/conf/settings.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.groovy.d/
    - /usr/share/jenkins/ref/init.groovy.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jobs/
    - /usr/share/jenkins/ref/jobs
  From:
    Image: jenkins/jenkins:2.101
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:2.101
