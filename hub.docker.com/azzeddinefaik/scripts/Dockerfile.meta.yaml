MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Anmol Nagpal <anmol.nagpal@tajawal.com>
    Name: maintainer
  - CmdLine:
    - dpkg-divert --local --rename --add /sbin/initctl
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /bin/true /sbin/initctl
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - export LANG=C.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install  software-properties-common python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository ppa:nginx/stable
    Name: run
    PrependShell: true
  - CmdLine:
    - export LANG=C.UTF-8 && sudo add-apt-repository ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -y install  pwgen python-setuptools curl git unzip vim             openssl
      git git-core htop rsyslog zip vim-common multitail sysvbanner figlet python-pip
      zsh wget telnet libpcre3 libpcre3-dev ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ;
      do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 7.2.1
    Name: env
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$"
      SHASUMS256.txt | sha256sum -c -   && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g pm2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo useradd ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - passwd -d ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - passwd -d root
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PermitEmptyPasswords yes" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "ubuntu ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ChallengeResponseAuthentication no" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s `which bash` ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -d /home/ubuntu ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -t rsa1 -f /etc/ssh/ssh_host_rsa_key -y
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -t dsa  -f /etc/ssh/ssh_host_dsa_key -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/ubuntu/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /home/ubuntu/.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./id_rsa
    - /home/ubuntu/.ssh/authorized_keys
  - CmdLine:
    - chmod 600 /home/ubuntu/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ubuntu:ubuntu /home/ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /home/ubuntu
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/install-zsh.sh
    - /root/install-zsh.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/install-zsh.sh
    - /home/ubuntu/install-zsh.sh
  - CmdLine:
    - chmod +x /root/install-zsh.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /home/ubuntu/install-zsh.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sh /root/install-zsh.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - su - ubuntu -c "sh /home/ubuntu/install-zsh.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - rm  /root/.zshrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/zshrc
    - /root/.zshrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/zshrc
    - /home/ubuntu/.zshrc
  - CmdLine:
    - chsh -s `which zsh` ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s `which zsh`
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 755 /usr/local/share/zsh/site-functions
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install         php7.1-fpm           php7.1           php7.1-common           php7.1-cli           php7.1-curl           php7.1-gd           php7.1-gmp           php7.1-imap           php7.1-interbase           php7.1-intl           php7.1-mcrypt           php7.1-readline           php7.1-tidy           php7.1-xmlrpc           php7.1-xsl           php7.1-json           php7.1-mysql           php7.1-opcache           php7.1-xdebug            php-apcu           php-redis            php-apcu-bc           php-amqp           php7.1-bz2           php7.1-bcmath            php7.1-mbstring            php7.1-soap           php7.1-xml           php7.1-zip           php-pear           php-mongodb         php7.1-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /home/ubuntu/.composer
    Name: env
  - Env:
    - Key: PATH
      Value: /home/ubuntu/.composer/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer self-update
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require phpunit/phpunit         phpunit/phpunit-mock-objects         phpmetrics/phpmetrics         squizlabs/php_codesniffer         pdepend/pdepend         phpmd/phpmd         jakub-onderka/php-parallel-lint
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:webupd8team/java
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/xdebug.ini
    - /etc/php/7.1/mods-available/xdebug.ini
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install oracle-java8-installer && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --display java
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Name: expose
    Ports:
    - "22"
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
