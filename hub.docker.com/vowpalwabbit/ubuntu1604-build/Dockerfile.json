{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt install -y --no-install-recommends     build-essential g++ gcc git make wget     python-setuptools python-dev     maven default-jdk     software-properties-common     netcat-openbsd     libboost-dev     libboost-math-dev     libboost-program-options-dev     libboost-python-dev     libboost-system-dev     libboost-test-dev     libboost-thread-dev     libssl-dev     zlib1g-dev  \u0026\u0026 apt-get clean autoclean  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "version=3.13 \u0026\u0026 build=5  \u0026\u0026 mkdir ~/temp-cmake  \u0026\u0026 cd ~/temp-cmake  \u0026\u0026 wget https://cmake.org/files/v$version/cmake-$version.$build-Linux-x86_64.sh  \u0026\u0026 mkdir /opt/cmake  \u0026\u0026 sh cmake-$version.$build-Linux-x86_64.sh --prefix=/opt/cmake --skip-license  \u0026\u0026 for filename in /opt/cmake/bin/*; do echo Registering $filename; ln -fs $filename /usr/local/bin/`basename $filename`; done  \u0026\u0026 rm cmake-$version.$build-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install pip  \u0026\u0026 pip install cpp-coveralls wheel virtualenv pytest readme_renderer  \u0026\u0026 wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh  \u0026\u0026 bash miniconda.sh -b -p /usr/local/miniconda  \u0026\u0026 hash -r  \u0026\u0026 /usr/local/miniconda/bin/conda config --set always_yes yes --set changeps1 no  \u0026\u0026 /usr/local/miniconda/bin/conda update -q conda  \u0026\u0026 /usr/local/miniconda/bin/conda create -q -n test-python27 python=2.7 wheel virtualenv pytest readme_renderer pandas cmake nomkl numpy boost py-boost scipy scikit-learn six joblib  \u0026\u0026 /usr/local/miniconda/bin/conda create -q -n test-python36 python=3.6 wheel virtualenv pytest readme_renderer pandas cmake nomkl numpy boost py-boost scipy scikit-learn six joblib  \u0026\u0026 /usr/local/miniconda/bin/conda clean -a  \u0026\u0026 /usr/local/miniconda/bin/conda init  \u0026\u0026 rm miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/VowpalWabbit/vowpal_wabbit/master/java/pom.xml.in  \u0026\u0026 mvn dependency:resolve -f pom.xml.in  \u0026\u0026 rm pom.xml.in"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean autoclean  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz  \u0026\u0026 tar xvf clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz  \u0026\u0026 mv clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/bin/clang-format /usr/local/bin  \u0026\u0026 rm -rf clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/ clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/miniconda/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"${LD_LIBRARY_PATH}:/usr/local/lib\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64/\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}