{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3",
      "SourceCode": "FROM php:7.3",
      "Platform": "",
      "From": {
        "Image": "php:7.3"
      },
      "Commands": [
        {
          "Maintainer": "Krzysztof Kawalec \u003ckf.kawalec@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y         openssh-client         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libcurl4-openssl-dev         libldap2-dev         libicu-dev         libc-client-dev         libkrb5-dev         libmagickwand-dev --no-install-recommends         curl         libtidy*         libzip-dev         mysql-client         gnupg         git         rsync         unzip     \u0026\u0026 apt-get clean     \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install         mbstring         curl         json         pdo_mysql         exif         tidy         zip         bcmath         opcache     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu     \u0026\u0026 docker-php-ext-install ldap     \u0026\u0026 docker-php-ext-configure intl     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-install imap     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e $PHP_INI_DIR/conf.d/memory-limit.ini     \u0026\u0026 echo \"date.timezone=Europe/Warsaw\" \u003e $PHP_INI_DIR/conf.d/date_timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install yarn     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/composer"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer selfupdate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "composer require \"phpunit/phpunit=7.*\" --prefer-source --no-interaction     \u0026\u0026 ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer require \"squizlabs/php_codesniffer=*\" --prefer-source --no-interaction     \u0026\u0026 ln -s /tmp/vendor/bin/phpcs /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php --version     \u0026\u0026 composer --version     \u0026\u0026 phpunit --version     \u0026\u0026 phpcs --version     \u0026\u0026 yarn --version"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}