{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jnlp-slave:3.29-1-alpine",
      "SourceCode": "FROM jenkins/jnlp-slave:3.29-1-alpine",
      "Platform": "",
      "From": {
        "Image": "jenkins/jnlp-slave:3.29-1-alpine"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "android_api",
          "Name": "arg",
          "Value": "26"
        },
        {
          "Key": "android_build_tools",
          "Name": "arg",
          "Value": "26.0.0"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_ROOT",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "$ANDROID_SDK_ROOT"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC",
              "Value": "2.25-r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_SDK_ROOT/tools/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=.build-dependencies         bash         file         git         git-lfs         openssl         wget         unzip     \u0026\u0026 wget --quiet https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -O /etc/apk/keys/sgerrand.rsa.pub     \u0026\u0026 wget --quiet https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC}/glibc-${GLIBC}.apk -O /tmp/glibc.apk     \u0026\u0026 wget --quiet https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC}/glibc-bin-${GLIBC}.apk -O /tmp/glibc-bin.apk     \u0026\u0026 apk add --no-cache /tmp/glibc.apk /tmp/glibc-bin.apk     \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*     \u0026\u0026 openssl version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O /tmp/tools.zip     \u0026\u0026 mkdir -p $ANDROID_SDK_ROOT     \u0026\u0026 unzip -q /tmp/tools.zip -d $ANDROID_SDK_ROOT     \u0026\u0026 rm -v /tmp/tools.zip     \u0026\u0026 mkdir -p /root/.android/     \u0026\u0026 touch /root/.android/repositories.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | sdkmanager         \"build-tools;${android_build_tools}\"         \"platforms;android-${android_api}\" \u003e/dev/null     \u0026\u0026 rm -rf          $ANDROID_SDK_ROOT/tools/proguard/examples         $ANDROID_SDK_ROOT/tools/proguard/docs     \u0026\u0026 sdkmanager --list | sed -e '/Available Packages/q'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 777 $ANDROID_SDK_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        }
      ]
    }
  ]
}