MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"DefaltSimon"'
    Name: label
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: BUILD_DEPS
      Value: '"zlibc libxml2 libxml2-dev libssl-dev libxslt1-dev libjpeg8-dev zlib1g-dev
        libfreetype6-dev libssl-dev tk-dev libc6-dev build-essential libreadline-gplv2-dev
        libncursesw5-dev libsqlite3-dev libgdbm-dev libbz2-dev"'
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install wget python3-dev git $BUILD_DEPS -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: '"3.6.6"'
    Name: env
  - Env:
    - Key: PYTHON_SOURCE
      Value: '"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz"'
    Name: env
  - CmdLine:
    - wget $PYTHON_SOURCE     && tar xzf "Python-${PYTHON_VERSION}.tgz"     && rm
      "Python-${PYTHON_VERSION}.tgz"     && cd "Python-${PYTHON_VERSION}" && ./configure
      --enable-optimizations     && make && make install     && cd .. && rm -r "Python-${PYTHON_VERSION}/"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -O get-pip.py \"https://bootstrap.pypa.io/get-pip.py\" \t&& python3.6
      get-pip.py \t&& rm get-pip.py"
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home
    Name: env
  - Env:
    - Key: NANO
      Value: /home/Nano
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $HOME/Nano
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/directories.json
    - $NANO/core/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/dockerautorun.sh
    - $HOME
  - CmdLine:
    - chmod +x $HOME/dockerautorun.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r $NANO/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get remove $BUILD_DEPS -y \t&& apt-get purge -y --autoremove"
    Name: run
    PrependShell: true
  - Key: VERSION
    Name: arg
    Value: unknown
  - Labels:
    - Key: version
      Value: $VERSION
    Name: label
  - CmdLine:
    - /home/dockerautorun.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
