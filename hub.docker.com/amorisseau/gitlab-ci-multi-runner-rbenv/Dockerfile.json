{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gitlab/gitlab-runner:v10.2.0",
      "SourceCode": "FROM gitlab/gitlab-runner:v10.2.0",
      "Platform": "",
      "From": {
        "Image": "gitlab/gitlab-runner:v10.2.0"
      },
      "Commands": [
        {
          "Maintainer": "Antoine Morisseau \u003cantoine@morisseau.me\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_RUNNER_VERSION",
              "Value": "10.2.0"
            },
            {
              "Key": "GITLAB_RUNNER_USER",
              "Value": "gitlab_runner"
            },
            {
              "Key": "GITLAB_RUNNER_HOME_DIR",
              "Value": "\"/home/gitlab_runner\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITLAB_RUNNER_DATA_DIR",
              "Value": "\"${GITLAB_RUNNER_HOME_DIR}/data\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24  \u0026\u0026 echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 apt-get update  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y       git-core openssh-client curl libapparmor1  \u0026\u0026 adduser --disabled-login --gecos 'GitLab CI Runner' ${GITLAB_RUNNER_USER}  \u0026\u0026 sudo -HEu ${GITLAB_RUNNER_USER} ln -sf ${GITLAB_RUNNER_DATA_DIR}/.ssh ${GITLAB_RUNNER_HOME_DIR}/.ssh  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends         git-core         curl \t\tautoconf \t\tautomake \t\tbzip2 \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmysqlclient-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tnodejs \t\tpatch \t\txz-utils \t\tzlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rbenv/rbenv.git ${GITLAB_RUNNER_HOME_DIR}/.rbenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rbenv/ruby-build.git ${GITLAB_RUNNER_HOME_DIR}/.rbenv/plugins/ruby-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"\\neval \"$(rbenv init -)\"' \u003e ${GITLAB_RUNNER_HOME_DIR}/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R ${GITLAB_RUNNER_USER}:${GITLAB_RUNNER_USER} ${GITLAB_RUNNER_HOME_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REGISTER_NON_INTERACTIVE",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REGISTRATION_TOKEN",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CI_SERVER_URL",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUNNER_NAME",
              "Value": "ruby"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUNNER_EXECUTOR",
              "Value": "shell"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUNNER_TAG_LIST",
              "Value": "ruby"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUNNER_LIMIT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${GITLAB_RUNNER_DATA_DIR}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"${GITLAB_RUNNER_HOME_DIR}\""
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}