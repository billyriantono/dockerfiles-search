{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "go-deps",
      "BaseName": "golang:1-alpine",
      "SourceCode": "FROM golang:1-alpine AS go-deps",
      "Platform": "",
      "As": "go-deps",
      "From": {
        "Image": "golang:1-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --update add --no-cache bash git make ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/repos"
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "on"
            },
            {
              "Key": "GOOS",
              "Value": "linux"
            },
            {
              "Key": "GOARCH",
              "Value": "amd64"
            },
            {
              "Key": "CGO_ENABLED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /output"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/direnv/direnv.git \u0026\u0026 cd direnv \u0026\u0026 go build \u0026\u0026 mv ./direnv /output/direnv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/wagoodman/dive.git \u0026\u0026 cd dive \u0026\u0026 go build \u0026\u0026 mv ./dive /output/dive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/moncho/dry.git \u0026\u0026 cd dry \u0026\u0026 go build \u0026\u0026 mv ./dry /output/dry"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "docker:stable",
      "SourceCode": "FROM docker:stable",
      "Platform": "",
      "From": {
        "Image": "docker:stable"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --update add --no-cache bash git curl nano vim python3 figlet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SANDBOX",
              "Value": "\"true\""
            },
            {
              "Key": "SANDCRATE",
              "Value": "\"true\""
            },
            {
              "Key": "PATH",
              "Value": "\"$PATH:/usr/sandcrate/bin/:/usr/sandcrate/vendor\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/sandcrate/"
        },
        {
          "CmdLine": [
            "if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi \u0026\u0026     python -m ensurepip \u0026\u0026     rm -r /usr/lib/python*/ensurepip \u0026\u0026     pip3 install --no-cache --upgrade pip setuptools wheel pipenv \u0026\u0026     if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/sandcrate/include \u0026\u0026     curl -L -o /usr/sandcrate/include/argsf https://raw.githubusercontent.com/WoLfulus/argsf/master/src/argsf.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./rootfs/",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "go-deps",
          "Name": "copy",
          "SourcesAndDest": [
            "/output/",
            "/usr/sandcrate/bin/"
          ]
        },
        {
          "CmdLine": [
            "find /usr/sandcrate/bin/ -type f -exec chmod +x {} \\; \u0026\u0026     chmod +x /usr/bin/entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}