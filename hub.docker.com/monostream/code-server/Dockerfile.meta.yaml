MetaArgs: null
Stages:
- BaseName: ubuntu:18.10
  Commands:
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     gpg     curl     wget     lsb-release     add-apt-key     ca-certificates     dumb-init     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS -o - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key
      | apt-key add
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     cf-cli     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://raw.githubusercontent.com/helm/helm/master/scripts/get" | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL "https://storage.googleapis.com/kubernetes-release/release/$(curl -s
      https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      -o /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor |
      tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release
      -cs) main" | tee /etc/apt/sources.list.d/azure-cli.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     azure-cli     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     git     sudo     gdb     build-essential     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_11.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     nodejs     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: '"1.12.4"'
    Name: env
  - CmdLine:
    - curl -sL https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar -xz
      -C /usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     python3     python-dev     python3-pip     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade setuptools     && python3 -m pip install wheel     &&
      python3 -m pip install -U pylint
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     default-jre-headless     default-jdk-headless     maven     gradle     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     chromium-browser     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y     bsdtar     openssl     locales     net-tools     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Env:
    - Key: CODE_VERSION
      Value: '"1.939-vsc1.33.1"'
    Name: env
  - CmdLine:
    - curl -sL https://github.com/codercom/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-linux-x64.tar.gz
      | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-linux-x64/code-server
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r coder     && useradd -m -r coder -g coder -s /bin/bash     && echo
      "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd
    Name: run
    PrependShell: true
  - Name: user
    User: coder
  - CmdLine:
    - mkdir /home/coder/go
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: '"/home/coder/go"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/local/go/bin:/home/coder/go/bin"'
    Name: env
  - Env:
    - Key: VSCODE_EXTENSIONS
      Value: '"/home/coder/.local/share/code-server/extensions"'
    Name: env
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/go     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/Go/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/go extension
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u     github.com/mdempsky/gocode     github.com/uudashr/gopkgs/cmd/gopkgs     github.com/ramya-rao-a/go-outline     github.com/acroca/go-symbols     golang.org/x/tools/cmd/guru     golang.org/x/tools/cmd/gorename     github.com/go-delve/delve/cmd/dlv     github.com/stamblerre/gocode     github.com/rogpeppe/godef     github.com/sqs/goreturns     golang.org/x/lint/golint     &&
      rm -rf $GOPATH/src     && rm -rf $GOPATH/pkg
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u     github.com/stamblerre/gocode     github.com/uudashr/gopkgs/cmd/gopkgs     &&
      rm -rf $GOPATH/src     && rm -rf $GOPATH/pkg
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/python     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-python/vsextensions/python/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/python extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/java     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/java/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/java-debugger     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-debug/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-debugger extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/java-test     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-test/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-test extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/maven     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-maven/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/maven extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/yaml     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/vscode-yaml/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/yaml extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/kubernetes     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-kubernetes-tools/vsextensions/vscode-kubernetes-tools/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/kubernetes extension
    Name: run
    PrependShell: true
  - CmdLine:
    - helm init --client-only
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/chrome-debugger     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/msjsdiag/vsextensions/debugger-for-chrome/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/chrome-debugger
      extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/chrome-preview     && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/auchenberg/vsextensions/vscode-browser-preview/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/chrome-preview extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/coder/project
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/coder/project
  - CmdLine:
    - dumb-init
    - code-server
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.10
