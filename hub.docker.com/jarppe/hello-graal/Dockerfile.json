{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "oracle/graalvm-ce:latest",
      "SourceCode": "FROM oracle/graalvm-ce:latest AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "oracle/graalvm-ce:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "gu install native-image"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://download.clojure.org/install/linux-install-1.10.1.469.sh \u0026\u0026     chmod +x linux-install-1.10.1.469.sh \u0026\u0026     ./linux-install-1.10.1.469.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "deps.edn",
            "/app/deps.edn"
          ]
        },
        {
          "CmdLine": [
            "clojure -Spath \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/app/src/"
          ]
        },
        {
          "CmdLine": [
            "mkdir classes \u0026\u0026     clojure       -J-Dclojure.compiler.direct-linking=true       -J-Dclojure.spec.skip-macros=true       -e \"(compile 'hello-graal.server)\" \u0026\u0026     native-image       -J-Dclojure.compiler.direct-linking=true       -J-Dclojure.spec.skip-macros=true       --initialize-at-build-time       --initialize-at-run-time=java.lang.Math\\$RandomNumberGeneratorHolder       --no-fallback       --static       --enable-http       --no-server       -H:+ReportUnsupportedElementsAtRuntime       -H:+ReportExceptionStackTraces       -cp ./classes:$(clojure -Spath)       hello_graal.server"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/tini",
            "/tini"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/hello_graal.server",
            "/hello_graal_server"
          ]
        },
        {
          "CmdLine": [
            "/tini",
            "-g",
            "-e",
            "143",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/hello_graal_server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}