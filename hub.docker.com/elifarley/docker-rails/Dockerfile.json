{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "elifarley/docker-rails:ruby-2.3.0",
      "SourceCode": "FROM elifarley/docker-rails:ruby-2.3.0",
      "Platform": "",
      "From": {
        "Image": "elifarley/docker-rails:ruby-2.3.0"
      },
      "Commands": [
        {
          "Maintainer": "Elifarley Cruz \u003celifarley@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "RAILS_VERSION",
              "Value": "4.2.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem --config-file .gemrc install rails --version \"$RAILS_VERSION\" \u0026\u0026 gem --config-file .gemrc install puma --version 3.1.0 \u0026\u0026   rm -rf \"$GEM_HOME\"/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "puma.rb",
            "/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "$_USER-service.sh",
            "$_USER.sh",
            "$HOME/"
          ]
        },
        {
          "CmdLine": [
            "chmod -R 700 /etc/my_init.d \u0026\u0026 echo \"$HOME\" \u003e /etc/container_environment/HOME \u0026\u0026   printf '#!/bin/bash\\ntar -jxf vendor.tbz -C \"$HOME\"/vendor' \u003e /etc/my_init.d/01-vendor-cache.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "COPY Gemfile* ./",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY vendor /app/vendor",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN bundle install --no-cache --jobs 4 --retry 3 --local \u0026\u0026   rm -rf \"./gem-home\"/cache \u0026\u0026   tar -cjf vendor.tbz -C vendor --exclude=*.gem . \u0026\u0026   du -hs vendor.tbz",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN mkdir -p /etc/service/app \u0026\u0026 mv /app/app-service.sh /etc/service/app/run \u0026\u0026 chmod +x /etc/service/app/run",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY . /app/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN chown -R nobody:nogroup /app ; chmod -f +x app.sh; if test -f crontab; then   chown app:crontab crontab \u0026\u0026 chmod 600 crontab \u0026\u0026   mv crontab /var/spool/cron/crontabs/app; fi; if test -f db-migrate.sh; then   chown root:root db-migrate.sh \u0026\u0026 chmod 700 db-migrate.sh \u0026\u0026   mv db-migrate.sh /etc/my_init.d/90-db-migrate.sh; fi",
          "Name": "onbuild"
        },
        {
          "Expression": "EXPOSE 8080",
          "Name": "onbuild"
        }
      ]
    }
  ]
}