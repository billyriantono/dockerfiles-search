MetaArgs: null
Stages:
- BaseName: elifarley/docker-rails:ruby-2.3.0
  Commands:
  - Maintainer: Elifarley Cruz <elifarley@gmail.com>
    Name: maintainer
  - Env:
    - Key: RAILS_VERSION
      Value: 4.2.5.1
    Name: env
  - CmdLine:
    - gem --config-file .gemrc install rails --version "$RAILS_VERSION" && gem --config-file
      .gemrc install puma --version 3.1.0 &&   rm -rf "$GEM_HOME"/cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - puma.rb
    - /etc/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - $_USER-service.sh
    - $_USER.sh
    - $HOME/
  - CmdLine:
    - chmod -R 700 /etc/my_init.d && echo "$HOME" > /etc/container_environment/HOME
      &&   printf '#!/bin/bash\ntar -jxf vendor.tbz -C "$HOME"/vendor' > /etc/my_init.d/01-vendor-cache.sh
    Name: run
    PrependShell: true
  - Expression: COPY Gemfile* ./
    Name: onbuild
  - Expression: COPY vendor /app/vendor
    Name: onbuild
  - Expression: RUN bundle install --no-cache --jobs 4 --retry 3 --local &&   rm -rf
      "./gem-home"/cache &&   tar -cjf vendor.tbz -C vendor --exclude=*.gem . &&   du
      -hs vendor.tbz
    Name: onbuild
  - Expression: RUN mkdir -p /etc/service/app && mv /app/app-service.sh /etc/service/app/run
      && chmod +x /etc/service/app/run
    Name: onbuild
  - Expression: COPY . /app/
    Name: onbuild
  - Expression: RUN chown -R nobody:nogroup /app ; chmod -f +x app.sh; if test -f
      crontab; then   chown app:crontab crontab && chmod 600 crontab &&   mv crontab
      /var/spool/cron/crontabs/app; fi; if test -f db-migrate.sh; then   chown root:root
      db-migrate.sh && chmod 700 db-migrate.sh &&   mv db-migrate.sh /etc/my_init.d/90-db-migrate.sh;
      fi
    Name: onbuild
  - Expression: EXPOSE 8080
    Name: onbuild
  From:
    Image: elifarley/docker-rails:ruby-2.3.0
  Name: ""
  Platform: ""
  SourceCode: FROM elifarley/docker-rails:ruby-2.3.0
