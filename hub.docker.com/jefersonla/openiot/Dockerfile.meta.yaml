MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Jeferson Lima <jefersonlimaa@dcc.ufba.br>
    Name: maintainer
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-7-oracle
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven3
    Name: env
  - Env:
    - Key: VIRTUOSO_HOME
      Value: /usr/local/virtuoso-opensource
    Name: env
  - Env:
    - Key: JBOSS_HOME
      Value: /opt/jboss
    Name: env
  - Env:
    - Key: OPENIOT_HOME
      Value: /opt/openiot
    Name: env
  - Env:
    - Key: VIRTUOSO_DBA_PASS
      Value: wiser2014
    Name: env
  - Env:
    - Key: JBOSS_SSL_KEY
      Value: '"wiser2014"'
    Name: env
  - Env:
    - Key: JBOSS_SSL_ADDRESS
      Value: '"localhost"'
    Name: env
  - Env:
    - Key: JBOSS_SSL_ORGANIZATION
      Value: '"WiserUFBA"'
    Name: env
  - Env:
    - Key: JBOSS_SSL_ORGANIZATION_UNITY
      Value: '"SmartUFBA"'
    Name: env
  - Env:
    - Key: JBOSS_SSL_CITY
      Value: '"Salvador"'
    Name: env
  - Env:
    - Key: JBOSS_SSL_STATE
      Value: '"Bahia"'
    Name: env
  - Env:
    - Key: JBOSS_SSL_COUNTRY
      Value: '"BR"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install -y  software-properties-common
      &&     apt-add-repository -y ppa:webupd8team/java &&     apt-add-repository
      -y ppa:andrei-pozolotin/maven3 &&     apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "oracle-java7-installer shared/accepted-oracle-license-v1-1 "          "select
      true" | /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y oracle-java7-installer &&     apt-get install -y oracle-java7-set-default
      &&     apt-get install -y maven3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential debhelper autotools-dev &&     apt-get install
      -y autoconf automake unzip wget net-tools &&     apt-get install -y git libtool
      flex bison gperf gawk m4 &&     apt-get install -y libssl-dev libreadline-dev
      libreadline-dev &&     apt-get install -y openssl python-pip &&     pip install
      crudini
    Name: run
    PrependShell: true
  - Env:
    - Key: VIRTUOSO_VERSION
      Value: '"7.2.4.2"'
    Name: env
  - Env:
    - Key: VIRTUOSO_RELEASE_LINK
      Value: '"https://github.com/openlink/virtuoso-opensource/releases/download/v7.2.4.2/virtuoso-opensource-7.2.4.2.tar.gz"'
    Name: env
  - CmdLine:
    - cd /tmp &&     mkdir virtuoso_install &&     cd virtuoso_install &&     wget
      -O virtuoso_release.tar.gz $VIRTUOSO_RELEASE_LINK &&     tar -zxvf virtuoso_release.tar.gz
      &&     cd virtuoso-opensource-$VIRTUOSO_VERSION &&     ./autogen.sh &&     CFLAGS="-O2
      -m64" &&     export CFLAGS &&     ./configure &&     make &&     make install
      &&     rm -r /tmp/virtuoso_install
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $VIRTUOSO_HOME/bin/:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - virtuoso-service
    - /etc/init.d/virtuoso-service
  - CmdLine:
    - chmod 755 /etc/init.d/virtuoso-service &&     chown root:root /etc/init.d/virtuoso-service
      &&     update-rc.d virtuoso-service defaults &&     printf "RUN=yes\n" > /etc/default/virtuoso
      &&     useradd virtuoso --home $VIRTUOSO_HOME &&     chown -R virtuoso:virtuoso
      $VIRTUOSO_HOME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - virtuoso_config.sh
    - /tmp/virtuoso_config.sh
  - CmdLine:
    - mkdir /usr/local/virtuoso-opensource/var/log &&     until service virtuoso-service
      start; do echo "Failed to start... Trying again."; done &&     sleep 15 &&     until
      bash /tmp/virtuoso_config.sh; do echo "Failed to connect... trying again in
      10 seconds..."; sleep 10; done &&     rm /tmp/virtuoso_config.sh &&     service
      virtuoso-service stop || service virtuoso-service stop
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8890"
  - Name: expose
    Ports:
    - "1111"
  - Env:
    - Key: JBOSS_DOWNLOAD_LINK
      Value: '"http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip"'
    Name: env
  - CmdLine:
    - apt-get install -y xmlstarlet &&     apt-get install -y libsaxon-java libsaxonb-java
      libsaxonhe-java &&     apt-get install -y libaugeas0 &&     apt-get install
      -y unzip bsdtar &&     mkdir /tmp/jboss_install &&     cd /tmp/jboss_install
      &&     wget -O jboss-install.zip $JBOSS_DOWNLOAD_LINK &&     unzip jboss-install.zip
      &&     mv jboss-as-7.1.1.Final $JBOSS_HOME &&     rm -r /tmp/jboss_install &&     mkdir
      /etc/jboss-as &&     mkdir /var/log/jboss-as/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jboss-service
    - /etc/init.d/jboss-service
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jboss-as.conf
    - /etc/jboss-as/jboss-as.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - welcome-content.tar.gz
    - /tmp/
  - CmdLine:
    - chmod 755 /etc/init.d/jboss-service &&     chown root:root /etc/init.d/jboss-service
      &&     update-rc.d jboss-service defaults &&     useradd jboss --home $JBOSS_HOME
      &&     chown -R jboss:jboss $JBOSS_HOME &&     rm -r $JBOSS_HOME/welcome-content
      &&     mv /tmp/welcome-content "$JBOSS_HOME/welcome-content"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8443"
  - CmdLine:
    - mkdir $JBOSS_HOME/standalone/configuration/ssl &&     JBOSS_SSL_CONFIG="CN=$JBOSS_SSL_ADDRESS,"
      &&     JBOSS_SSL_CONFIG="$JBOSS_SSL_CONFIG OU=$JBOSS_SSL_ORGANIZATION_UNITY,"
      &&     JBOSS_SSL_CONFIG="$JBOSS_SSL_CONFIG O=$JBOSS_SSL_ORGANIZATION," &&     JBOSS_SSL_CONFIG="$JBOSS_SSL_CONFIG
      L=$JBOSS_SSL_CITY," &&     JBOSS_SSL_CONFIG="$JBOSS_SSL_CONFIG S=$JBOSS_SSL_STATE,"
      &&     JBOSS_SSL_CONFIG="$JBOSS_SSL_CONFIG C=$JBOSS_SSL_COUNTRY" &&     export
      JBOSS_SSL_CONFIG &&     cd $JBOSS_HOME/standalone/configuration/ssl &&     keytool
      -genkey             -noprompt             -alias jbosskey             -dname
      "$JBOSS_SSL_CONFIG"             -keyalg RSA             -keystore server.keystore             -storepass
      "$JBOSS_SSL_KEY"             -keypass "$JBOSS_SSL_KEY" &&     keytool -export             -noprompt             -alias
      jbosskey             -file server.crt             -keypass "$JBOSS_SSL_KEY"             -storepass
      "$JBOSS_SSL_KEY"             -keystore server.keystore &&     keytool -import             -noprompt             -alias
      jbosscert             -file server.crt             -storepass "$JBOSS_SSL_KEY"             -keypass
      "$JBOSS_SSL_KEY"             -keystore server.keystore &&     keytool -import             -noprompt             -keystore
      "$JAVA_HOME/jre/lib/security/cacerts"             -file server.crt             -alias
      incommon             -storepass changeit &&     xmlstarlet ed             -L             -N
      serverns="urn:jboss:domain:1.2"             -N subsystemns="urn:jboss:domain:web:1.1"             --subnode
      "/serverns:server/_:profile/subsystemns:subsystem"                 --type elem                 -n
      connector             --insert "//subsystemns:subsystem/connector[not(@name)]"                 --type
      attr                 -n name                 -v "https"             --insert
      "//connector[@name='https']"                 --type attr                 -n
      protocol                 -v "HTTP/1.1"             --insert "//connector[@name='https']"                 --type
      attr                 -n scheme                 -v "https"             --insert
      "//connector[@name='https']"                 --type attr                 -n
      "socket-binding"                 -v "https"             --insert "//connector[@name='https']"                 --type
      attr                 -n "secure"                 -v "true"             --subnode
      "//connector[@name='https']"                 --type elem                 -n
      ssl             --insert "//connector[@name='https']/ssl"                 --type
      attr                 -n name                 -v "https"             --insert
      "//ssl"                 --type attr                 -n "key-alias"                 -v
      "jbosskey"             --insert "//ssl"                 --type attr                 -n
      "password"                 -v "$JBOSS_SSL_KEY"             --insert "//ssl"                 --type
      attr                 -n "certificate-key-file"                 -v "$JBOSS_HOME/standalone/configuration/ssl/server.keystore"             "$JBOSS_HOME/standalone/configuration/standalone.xml"
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENIOT_LINK
      Value: https://github.com/OpenIotOrg/openiot.git
    Name: env
  - Env:
    - Key: OPENIOT_BRANCH
      Value: develop
    Name: env
  - CmdLine:
    - "mkdir /tmp/openiot &&     cd /tmp/openiot &&     git clone --branch $OPENIOT_BRANCH
      $OPENIOT_LINK &&     cd /tmp/openiot/openiot &&     xmlstarlet ed             -L
      \            -N pomns=\"http://maven.apache.org/POM/4.0.0\"             --subnode
      \"/pomns:project\"                 --type elem                 -n repositories
      \            --subnode \"/pomns:project/repositories\"                 --type
      elem                 -n repository             --subnode \"//repositories/repository\"
      \                --type elem                 -n id                 -v \"wiser-releases\"
      \            --subnode \"//repository\"                 --type elem                 -n
      url                 -v \"https://github.com/WiserUFBA/wiser-mvn-repo/raw/master/releases\"
      ./pom.xml &&     export MAVEN_OPTS=\"-Xmx512m -XX:MaxPermSize=128m\" &&     mvn
      -X clean install &&     JBOSS_CONFIGURATION=\"$JBOSS_HOME/standalone/configuration\"
      &&     cp ./utils/utils.commons/src/main/resources/security-config.ini \"$JBOSS_CONFIGURATION\"
      &&     cp ./utils/utils.commons/src/main/resources/properties/openiot.properties
      \"$JBOSS_CONFIGURATION\" &&     sed --in-place \t    -e \"s/scheduler\\.core\\.lsm\\.openiotMetaGraph=.*$/scheduler\\.core\\.lsm\\.openiotMetaGraph=http\\:\\/\\/openiot\\.eu\\/OpenIoT\\/sensormeta\\#/g\"
      \t    -e \"s/scheduler\\.core\\.lsm\\.openiotDataGraph=.*$/scheduler\\.core\\.lsm\\.openiotDataGraph=http\\:\\/\\/openiot\\.eu\\/OpenIoT\\/sensordata#/g\"
      \t    -e \"s/scheduler\\.core\\.lsm\\.openiotFunctionalGraph=.*$/scheduler\\.core\\.lsm\\.openiotFunctionalGraph=http\\:\\/\\/openiot.eu\\/OpenIoT\\/functionaldata#/g\"
      \t    -e \"s/scheduler\\.core\\.lsm\\.sparql\\.endpoint=.*/scheduler\\.core\\.lsm\\.sparql\\.endpoint=http\\:\\/\\/localhost\\:8890\\/sparql/g\"
      \t    -e \"s/scheduler\\.core\\.lsm\\.remote\\.server=.*$/scheduler\\.core\\.lsm\\.remote\\.server=http\\:\\/\\/localhost\\:8080\\/lsm-light\\.server\\//g\"
      \t    -e \"s/sdum\\.core\\.lsm\\.openiotFunctionalGraph=.*$/sdum\\.core\\.lsm\\.openiotFunctionalGraph=http\\:\\/\\/openiot\\.eu\\/OpenIoT\\/functionaldata#/g\"
      \t    -e \"s/sdum\\.core\\.lsm\\.sparql\\.endpoint=.*$/sdum\\.core\\.lsm\\.sparql\\.endpoint=http\\:\\/\\/localhost\\:8890\\/sparql/g\"
      \t    -e \"s/sdum\\.core\\.lsm\\.remote\\.server=.*$/sdum\\.core\\.lsm\\.remote\\.server=http\\:\\/\\/localhost\\:8080\\/lsm-light.server\\//g\"
      \t    -e \"s/lsm-light\\.server\\.connection\\.url=.*$/lsm-light\\.server\\.connection\\.url=jdbc\\:virtuoso\\:\\/\\/localhost\\:1111\\/log_enable=2/g\"
      \t    -e \"s/lsm-light\\.server\\.connection\\.username=.*$/lsm-light\\.server\\.connection\\.username=dba/g\"
      \t    -e \"s/lsm-light\\.server\\.connection\\.password=.*$/lsm-light\\.server\\.connection\\.password=$VIRTUOSO_DBA_PASS/g\"
      \t    -e \"s/lsm-light\\.server\\.localMetaGraph.*$/lsm-light\\.server\\.localMetaGraph\\
      =\\ http\\:\\/\\/openiot.eu\\/OpenIoT\\/sensormeta#/g\" \t    -e \"s/lsm-light\\.server\\.localDataGraph.*$/lsm-light\\.server\\.localDataGraph\\
      =\\ http\\:\\/\\/openiot.eu\\/OpenIoT\\/sensordata#/g\" \t    -e \"s/lsm\\.deri\\.ie/localhost\\:8080/g\"
      \t\t\"$JBOSS_CONFIGURATION/openiot.properties\" &&     cd / &&     mv /tmp/openiot/openiot
      $OPENIOT_HOME"
    Name: run
    PrependShell: true
  - CmdLine:
    - until service virtuoso-service start; do echo "Failed to start... Trying again.";
      done &&     sleep 30 &&     until service jboss-service status ; do service
      jboss-service start; echo "Started..."; done &&     sleep 30 &&     cd "$OPENIOT_HOME/modules/lsm-light/lsm-light.server/"
      &&     until mvn -X jboss-as:deploy ; do echo "Failed deploying LSM... trying
      again."; done &&     cd "$OPENIOT_HOME/modules/security/security-server/" &&     until
      mvn -X jboss-as:deploy ; do echo "Failed deploying Security Server... trying
      again."; done &&     cd "$OPENIOT_HOME/modules/security/security-management/"
      &&     until mvn -X jboss-as:deploy ; do echo "Failed deploying Security Management...
      trying again."; done &&     cd "$OPENIOT_HOME/modules/scheduler/scheduler.core/"
      &&     until mvn -X jboss-as:deploy ; do echo "Failed deploying Scheduler Core...
      trying again."; done &&     cd "$OPENIOT_HOME/modules/sdum/sdum.core/" &&     until
      mvn -X jboss-as:deploy ; do echo "Failed deploying SDUM Core... trying again.";
      done &&     cd "$OPENIOT_HOME/ui/ui.requestDefinition/" &&     until mvn -X
      clean package jboss-as:deploy ; do echo "Failed deploying requestDefinition...
      trying again."; done &&     cd "$OPENIOT_HOME/ui/ui.requestPresentation/" &&     until
      mvn -X clean package jboss-as:deploy ; do echo "Failed deploying requestPresentation...
      trying again."; done &&     cd "$OPENIOT_HOME/ui/ui.schemaeditor/" &&     until
      mvn -X clean package jboss-as:deploy ; do echo "Failed deploying schemaeditor...
      trying again."; done &&     cd "$OPENIOT_HOME/ui/ide/ide.core/" &&     until
      mvn -X clean package jboss-as:deploy ; do echo "Failed deploying IDE Core...
      trying again."; done &&     rm -r /tmp/openiot &&     service jboss-service
      stop &&     ( service virtuoso-service stop || service virtuoso-service stop
      )
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     rm
      -rf $JBOSS_HOME/standalone/configuration/standalone_xml_history &&     rm -rf
      $JBOSS_HOME/standalone/log/* /var/log/* &&     echo "Finished compilation..."
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - openiot.sh
    - /openiot.sh
  - CmdLine:
    - /openiot.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
