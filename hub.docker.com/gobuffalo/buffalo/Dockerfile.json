{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:latest",
      "SourceCode": "FROM golang:latest",
      "Platform": "",
      "From": {
        "Image": "golang:latest"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Env": [
            {
              "Key": "BP",
              "Value": "$GOPATH/src/github.com/gobuffalo/buffalo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPROXY",
              "Value": "https://proxy.golang.org"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash \u0026\u0026 sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" \u003e\u003e /etc/apt/sources.list.d/pgdg.list' \u0026\u0026 wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y -q build-essential nodejs sqlite3 libsqlite3-dev postgresql postgresql-contrib libpq-dev vim \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026     su -c \"psql -c \\\"ALTER USER postgres  WITH PASSWORD 'postgres';\\\"\" - postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -tags sqlite -v -u github.com/gobuffalo/pop \u0026\u0026 go get -tags sqlite -v -u github.com/gobuffalo/packr/v2/packr2 \u0026\u0026 go get -tags sqlite -v -u github.com/gobuffalo/buffalo-pop \u0026\u0026 rm -rf $GOPATH/src \u0026\u0026 mkdir -p $BP"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$BP"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "go.mod",
            "."
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "go.sum",
            "."
          ]
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "on"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go mod tidy -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --no-progress yarn \u0026\u0026 yarn config set yarn-offline-mirror /npm-packages-offline-cache \u0026\u0026 yarn config set yarn-offline-mirror-pruning true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "packr2 \u0026\u0026 go install -v -tags sqlite ./buffalo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buffalo version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $GOPATH/src/github.com/markbates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/github.com/markbates"
        },
        {
          "CmdLine": [
            "buffalo new coke"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf coke"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "off"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src"
        }
      ]
    }
  ]
}