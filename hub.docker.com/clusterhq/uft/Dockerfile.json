{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.3",
      "SourceCode": "FROM        ubuntu:14.04.3",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "security_updates_as_of",
              "Value": "2015-08-14"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qy update \u0026\u0026             apt-get -y install apt-transport-https software-properties-common wget zip \u0026\u0026             wget -qO /tmp/terraform.zip https://dl.bintray.com/mitchellh/terraform/terraform_0.6.3_linux_amd64.zip \u0026\u0026             cd /tmp \u0026\u0026 unzip terraform.zip \u0026\u0026 rm terraform.zip \u0026\u0026 mv terraform terraform-provider-aws terraform-provider-template terraform-provisioner-local-exec terraform-provisioner-remote-exec /usr/local/bin/ \u0026\u0026 rm * \u0026\u0026             add-apt-repository -y \"deb https://clusterhq-archive.s3.amazonaws.com/ubuntu/$(lsb_release --release --short)/\\$(ARCH) /\" \u0026\u0026             apt-get -qy update \u0026\u0026             apt-get -qy upgrade \u0026\u0026             apt-get -y --force-yes install clusterhq-flocker-cli \u0026\u0026             apt-get remove --purge -y $(apt-mark showauto) python3.4 \u0026\u0026             apt-get -y install apt-transport-https software-properties-common \u0026\u0026             apt-get -y --force-yes install clusterhq-flocker-cli \u0026\u0026             rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "cd /app \u0026\u0026 /opt/flocker/bin/pip install --no-cache-dir . \u0026\u0026             rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/flocker/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/pwd"
        }
      ]
    }
  ]
}