{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jwilder/nginx-proxy:latest",
      "SourceCode": "FROM jwilder/nginx-proxy:latest",
      "Platform": "",
      "From": {
        "Image": "jwilder/nginx-proxy:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian stretch-backports main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026     apt-get update \u0026\u0026     apt-get -t stretch-backports install -y --no-install-recommends -o Dpkg::Options::=\"--force-confold\" nginx-extras lua-cjson git ca-certificates \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     git clone -c transfer.fsckobjects=true https://github.com/pintsized/lua-resty-http.git /tmp/lua-resty-http \u0026\u0026     cd /tmp/lua-resty-http \u0026\u0026     git checkout v0.12 \u0026\u0026     mkdir -p /etc/nginx/lua \u0026\u0026     cp -aR /tmp/lua-resty-http/lib/resty /etc/nginx/lua/resty \u0026\u0026     rm -rf /tmp/lua-resty-http"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"1s#^#load_module /usr/lib/nginx/modules/ndk_http_module.so;\\nload_module /usr/lib/nginx/modules/ngx_http_lua_module.so;\\n#\" /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "lua.conf",
            "/etc/nginx/conf.d/lua.conf"
          ]
        },
        {
          "CmdLine": [
            "git clone -c transfer.fsckobjects=true https://github.com/cloudflare/nginx-google-oauth.git /tmp/nginx-google-oauth \u0026\u0026     cd /tmp/nginx-google-oauth \u0026\u0026     mkdir -p /etc/nginx/lua/nginx-google-oauth \u0026\u0026     mv access.lua /etc/nginx/lua/nginx-google-oauth/access.lua"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "location.conf",
            "/etc/nginx/vhost.d/default_location"
          ]
        },
        {
          "CmdLine": [
            "sed -i 's/resolver {{ $.Env.RESOLVERS }};/resolver {{ $.Env.RESOLVERS }} ipv6=off;/' /app/nginx.tmpl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/app/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "forego",
            "start",
            "-r"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}