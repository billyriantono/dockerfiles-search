{
  "MetaArgs": [
    {
      "Key": "CUDA_VERSION",
      "DefaultValue": "10.1",
      "ProvidedValue": null,
      "Value": "10.1"
    },
    {
      "Key": "BUILD_FLAVOUR",
      "DefaultValue": "devel",
      "ProvidedValue": null,
      "Value": "devel"
    },
    {
      "Key": "RUN_FLAVOUR",
      "DefaultValue": "runtime",
      "ProvidedValue": null,
      "Value": "runtime"
    },
    {
      "Key": "DISTRO_NAME",
      "DefaultValue": "ubuntu",
      "ProvidedValue": null,
      "Value": "ubuntu"
    },
    {
      "Key": "DISTRO_VERSION",
      "DefaultValue": "18.04",
      "ProvidedValue": null,
      "Value": "18.04"
    }
  ],
  "Stages": [
    {
      "Name": "build",
      "BaseName": "nvidia/cuda:${CUDA_VERSION}-${BUILD_FLAVOUR}-${DISTRO_NAME}${DISTRO_VERSION}",
      "SourceCode": "FROM nvidia/cuda:${CUDA_VERSION}-${BUILD_FLAVOUR}-${DISTRO_NAME}${DISTRO_VERSION} as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "nvidia/cuda:${CUDA_VERSION}-${BUILD_FLAVOUR}-${DISTRO_NAME}${DISTRO_VERSION}"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GIT_REPOSITORY",
              "Value": "https://github.com/fireice-uk/xmr-stak.git"
            },
            {
              "Key": "GIT_BRANCH",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CMAKE_FLAGS",
              "Value": "-DXMR-STAK_COMPILE=generic -DCUDA_ENABLE=ON -DOpenCL_ENABLE=ON"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "donate-level.patch",
            "/tmp"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libhwloc-dev libmicrohttpd-dev libssl-dev ocl-icd-opencl-dev   \u0026\u0026 git clone --single-branch --depth 1 --branch $GIT_BRANCH $GIT_REPOSITORY xmr-stak   \u0026\u0026 git -C xmr-stak apply /tmp/donate-level.patch   \u0026\u0026 cd xmr-stak   \u0026\u0026 cmake ${CMAKE_FLAGS} .   \u0026\u0026 make   \u0026\u0026 apt-get purge -y -qq build-essential cmake libhwloc-dev libmicrohttpd-dev libssl-dev ocl-icd-opencl-dev   \u0026\u0026 apt-get clean -qq"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "nvidia/cuda:${CUDA_VERSION}-${RUN_FLAVOUR}-${DISTRO_NAME}${DISTRO_VERSION}",
      "SourceCode": "FROM nvidia/cuda:${CUDA_VERSION}-${RUN_FLAVOUR}-${DISTRO_NAME}${DISTRO_VERSION}",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:${CUDA_VERSION}-${RUN_FLAVOUR}-${DISTRO_NAME}${DISTRO_VERSION}"
      },
      "Commands": [
        {
          "Key": "DISTRO_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DISTRO_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "AMDGPU_VERSION",
              "Value": "18.50-725072"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AMDGPU_DRIVER_NAME",
              "Value": "amdgpu-pro-${AMDGPU_VERSION}-${DISTRO_NAME}-${DISTRO_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AMDGPU_DRIVER_URI",
              "Value": "https://drivers.amd.com/drivers/linux/${AMDGPU_DRIVER_NAME}.tar.xz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 adduser --system --disabled-password --home /config miner   \u0026\u0026 dpkg --add-architecture i386   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -qq --no-install-recommends -y ca-certificates libhwloc5 libmicrohttpd12 libssl1.0.0 libuv1 wget xz-utils   \u0026\u0026 wget -q --show-progress --progress=bar:force:noscroll --referer https://support.amd.com ${AMDGPU_DRIVER_URI}   \u0026\u0026 tar -xvf ${AMDGPU_DRIVER_NAME}.tar.xz   \u0026\u0026 SUDO_FORCE_REMOVE=yes apt-get -y remove --purge wget xz-utils   \u0026\u0026 rm -f ${AMDGPU_DRIVER_NAME}.tar.xz   \u0026\u0026 chmod +x ./${AMDGPU_DRIVER_NAME}/amdgpu-pro-install   \u0026\u0026 ./${AMDGPU_DRIVER_NAME}/amdgpu-pro-install -y --headless --opencl=pal,legacy   \u0026\u0026 rm -rf ${AMDGPU_DRIVER_NAME}   \u0026\u0026 rm -rf /var/opt/amdgpu-pro-local   \u0026\u0026 apt-get -y autoremove   \u0026\u0026 apt-get clean autoclean   \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/xmr-stak/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "user",
          "User": "miner"
        },
        {
          "Name": "workdir",
          "Path": "/config"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/xmr-stak"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}