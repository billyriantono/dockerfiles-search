MetaArgs: null
Stages:
- BaseName: python:3-alpine3.6
  Commands:
  - Env:
    - Key: PGADMIN4_VERSION
      Value: "1.6"
    Name: env
  - Labels:
    - Key: org.label-schema.name
      Value: '"pgAdmin4"'
    - Key: org.label-schema.version
      Value: '"$PGADMIN4_VERSION"'
    - Key: org.label-schema.license
      Value: '"PostgreSQL"'
    - Key: org.label-schema.url
      Value: '"https://www.pgadmin.org"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/fenglc/dockercloud-pgAdmin4"'
    Name: label
  - CmdLine:
    - "set -ex \t&& apk add --no-cache --virtual .run-deps \t\tbash \t\tpostgresql-libs
      \t&& apk add --no-cache --virtual .build-deps \t\topenssl \t\tgcc \t\tpostgresql
      \t\tpostgresql-dev \t\tmusl-dev \t&& apk add --no-cache \t\tpostgresql \t&&
      wget \"https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v$PGADMIN4_VERSION/pip/pgadmin4-$PGADMIN4_VERSION-py2.py3-none-any.whl\"
      \t&& pip install pgadmin4-$PGADMIN4_VERSION-py2.py3-none-any.whl \t&& apk del
      .build-deps \t&& rm pgadmin4-$PGADMIN4_VERSION-py2.py3-none-any.whl \t&& rm
      -rf /root/.cache"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/pgadmin4
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5050"
  - CmdLine:
    - pgadmin4
    Name: cmd
    PrependShell: false
  From:
    Image: python:3-alpine3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-alpine3.6
