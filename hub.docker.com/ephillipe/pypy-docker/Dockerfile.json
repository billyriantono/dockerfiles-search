{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:xenial",
      "SourceCode": "FROM buildpack-deps:xenial",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:xenial"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get purge -y python.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y curl build-essential     \u0026\u0026 apt-get clean -y \t\u0026\u0026 apt-get autoclean -y \t\u0026\u0026 apt-get autoremove -y \t\u0026\u0026 rm -rf /usr/share/locale/* \t\u0026\u0026 rm -rf /var/cache/debconf/*-old \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 rm -rf /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYPY_VERSION",
              "Value": "5.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 curl -SL \"https://bitbucket.org/pypy/pypy/downloads/pypy-${PYPY_VERSION}-linux64.tar.bz2\" \t\t| tar -xjC /usr/local --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "8.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL 'https://bootstrap.pypa.io/get-pip.py' | pypy \t\u0026\u0026 pip install --upgrade pip==$PYTHON_PIP_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y        cron enchant libffi-dev libc-ares-dev nscd     \u0026\u0026 apt-get clean -y \t\u0026\u0026 apt-get autoclean -y \t\u0026\u0026 apt-get autoremove -y \t\u0026\u0026 rm -rf /usr/share/locale/* \t\u0026\u0026 rm -rf /var/cache/debconf/*-old \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 rm -rf /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -q -L https://raw.github.com/kvz/cronlock/master/cronlock -o /usr/bin/cronlock \t\u0026\u0026 chmod +x /usr/bin/cronlock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/src/app"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/myspell.tar.gz",
            "/usr/share/enchant/myspell"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/usr/src/app/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \t\u0026\u0026 pip install -r /usr/src/app/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/var/tmp/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/var/tmp/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "pypy"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}