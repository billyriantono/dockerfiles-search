{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Erick Almeida \u003cephillipe@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y ca-certificates        build-essential make libpcre3-dev libssl-dev wget        iputils-arping libexpat1-dev unzip curl libncurses5-dev libreadline-dev        perl htop     \u0026\u0026 apt-get -q -y clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "America/Sao_Paulo"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -vf /etc/localtime     \u0026\u0026 ln -snf /usr/share/zoneinfo/$TZ /etc/localtime      \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.9.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_STICKY_VERSION",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_ECHO_VERSION",
              "Value": "0.57"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_MISC_VERSION",
              "Value": "0.28"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_VERSION",
              "Value": "2.0.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_NGINX_VERSION",
              "Value": "0.9.16"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.0.2d"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PCRE2_VERSION",
              "Value": "10.00"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.12.34.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/nginx-goodies-nginx-sticky-module-ng-${NGINX_STICKY_VERSION}.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/echo-nginx-module-${NGINX_ECHO_VERSION}.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/set-misc-nginx-module-${NGINX_MISC_VERSION}.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/ngx_devel_kit.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/luajit-${LUA_VERSION}.tar.gz",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/lua-nginx-module-${LUA_NGINX_VERSION}.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/nps-v${NPS_VERSION}-beta.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/pcre2-${PCRE2_VERSION}.zip",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/openssl-${OPENSSL_VERSION}.tar.gz",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/GeoIP.tar.gz",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/GeoIP.dat.gz",
            "/usr/local/share/GeoIP/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "assets/GeoLiteCity.dat.gz",
            "/usr/local/share/GeoIP/"
          ]
        },
        {
          "CmdLine": [
            "echo \"Descompactando pacotes extras\"  \u0026\u0026 cd /tmp/  \u0026\u0026 unzip -o /tmp/nginx-goodies-nginx-sticky-module-ng-${NGINX_STICKY_VERSION}.zip  \u0026\u0026 unzip -o /tmp/echo-nginx-module-${NGINX_ECHO_VERSION}.zip  \u0026\u0026 unzip -o /tmp/set-misc-nginx-module-${NGINX_MISC_VERSION}.zip  \u0026\u0026 unzip -o /tmp/ngx_devel_kit.zip  \u0026\u0026 unzip -o /tmp/lua-nginx-module-${LUA_NGINX_VERSION}.zip  \u0026\u0026 unzip -o /tmp/nps-v${NPS_VERSION}-beta.zip  \u0026\u0026 gunzip -f /usr/local/share/GeoIP/GeoLiteCity.dat.gz  \u0026\u0026 gunzip -f /usr/local/share/GeoIP/GeoIP.dat.gz  \u0026\u0026 echo \"Listando diretório temporário\"  \u0026\u0026 ls -lh /tmp/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"NPS script Download\"     \u0026\u0026 cd /tmp/ngx_pagespeed-${NPS_VERSION}-beta/     \u0026\u0026 psol_url=https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz     [ -e scripts/format_binary_url.sh ] \u0026\u0026 psol_url=$(scripts/format_binary_url.sh PSOL_BINARY_URL)     \u0026\u0026 wget ${psol_url}     \u0026\u0026 tar -xzvf $(basename ${psol_url})  # extracts to psol/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Building GeoIP Library\"     \u0026\u0026 cd /tmp/GeoIP-1.4.8/     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo '/usr/local/lib' \u003e /etc/ld.so.conf.d/geoip.conf     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Building LuaJit Library\"     \u0026\u0026 cd /tmp/LuaJIT-${LUA_VERSION}     \u0026\u0026 make     \u0026\u0026 make PREFIX=/opt/luajit2 install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gcc --version  \u0026\u0026 echo \"Telling to nginx's build system where to find LuaJIT 2.0\"  \u0026\u0026 export LUAJIT_LIB=/opt/luajit2/lib  \u0026\u0026 export LUAJIT_INC=/opt/luajit2/include/luajit-2.0  \u0026\u0026 echo \"Iniciando compilação do NGINX\"  \u0026\u0026 curl http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -xvz -C /tmp/  \u0026\u0026 cd /tmp/nginx-${NGINX_VERSION}  \u0026\u0026 ./configure --prefix=/etc/nginx \t\t\t\t--with-pcre-jit \t\t\t\t--error-log-path=/var/log/nginx/error.log                 --http-log-path=/var/log/nginx/access.log                 --sbin-path=/usr/sbin/nginx                 --conf-path=/etc/nginx/nginx.conf                 --pid-path=/var/run/nginx.pid                 --with-ipv6                 --with-poll_module                 --with-http_stub_status_module                 --with-http_geoip_module                 --with-http_realip_module                 --with-http_ssl_module                 --with-http_v2_module                 --with-http_gzip_static_module                 --with-openssl=/tmp/openssl-${OPENSSL_VERSION}                 --with-ld-opt='-Wl,-rpath,/opt/luajit2/lib/'                 --add-module=/tmp/nginx-goodies-nginx-sticky-module-ng-${NGINX_STICKY_VERSION}                 --add-module=/tmp/echo-nginx-module-${NGINX_ECHO_VERSION}                 --add-module=/tmp/ngx_devel_kit-master                 --add-module=/tmp/lua-nginx-module-${LUA_NGINX_VERSION}                 --add-module=/tmp/set-misc-nginx-module-${NGINX_MISC_VERSION}                 --add-module=/tmp/ngx_pagespeed-${NPS_VERSION}-beta  \u0026\u0026 echo \"Configuração do NGINX concluída\"  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 echo \"Instalação do NGINX concluída\"  \u0026\u0026 rm -rf /tmp/nginx*  \u0026\u0026 rm -rf /tmp/lua-nginx-module*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}