MetaArgs:
- DefaultValue: null
  Key: NODEJS_VERSION
  ProvidedValue: null
  Value: null
Stages:
- As: node
  BaseName: mhart/alpine-node:${NODEJS_VERSION}
  Commands: null
  From:
    Image: mhart/alpine-node:${NODEJS_VERSION}
  Name: node
  Platform: ""
  SourceCode: FROM mhart/alpine-node:${NODEJS_VERSION} as node
- BaseName: library/docker:stable
  Commands:
  - Key: CONTAINER_ARCHITECTURE
    Name: arg
    Value: linux-amd64
  - Key: AWS_CLI_VERSION
    Name: arg
    Value: null
  - Key: ECS_CLI_VERSION
    Name: arg
    Value: null
  - Key: S3_CMD_VERSION
    Name: arg
    Value: null
  - Key: DOCKER_COMPOSE_VERSION
    Name: arg
    Value: null
  - Key: CHAMBER_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: PAGER
      Value: more
    Name: env
  - CmdLine:
    - apk add --no-cache -v --virtual .build-deps     py-pip     && apk add -v         bash         curl         git         groff         jq         make         mysql-client         python         python-dev         python3         python3-dev         py-setuptools         musl-dev         zip         gettext         gcc     &&
      pip3 install --upgrade         awscli==${AWS_CLI_VERSION}         s3cmd==${S3_CMD_VERSION}         docker-compose==${DOCKER_COMPOSE_VERSION}         python-magic         pipenv         pre-commit     &&
      curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-${CONTAINER_ARCHITECTURE}-v${ECS_CLI_VERSION}     &&
      chmod +x /usr/local/bin/ecs-cli     && curl -Lo /usr/local/bin/chamber https://github.com/segmentio/chamber/releases/download/v${CHAMBER_VERSION}/chamber-v${CHAMBER_VERSION}-linux-amd64     &&
      chmod +x /usr/local/bin/chamber && rm -r /root/.cache && apk del -v .build-deps
      && rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi &&     if [[ ! -e
      /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/lib/libgcc*
    - /usr/lib/libstdc*
    - /usr/lib/
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/lib/node_modules
    - /usr/lib/node_modules
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/bin/node
    - /usr/bin/
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/share/yarn
    - /usr/local/share/yarn
  - CmdLine:
    - ln -s /usr/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm && ln -s /usr/local/share/yarn/bin/yarn
      /usr/local/bin/ && ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/
    Name: run
    PrependShell: true
  From:
    Image: library/docker:stable
  Name: ""
  Platform: ""
  SourceCode: FROM library/docker:stable
