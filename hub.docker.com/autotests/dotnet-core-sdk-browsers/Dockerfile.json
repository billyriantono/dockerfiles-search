{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mcr.microsoft.com/dotnet/core/sdk:2.1",
      "SourceCode": "FROM mcr.microsoft.com/dotnet/core/sdk:2.1",
      "Platform": "",
      "From": {
        "Image": "mcr.microsoft.com/dotnet/core/sdk:2.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "if grep -q Debian /etc/os-release \u0026\u0026 grep -q stretch /etc/os-release; then \t\t  echo 'deb http://deb.debian.org/debian stretch-backports main' | tee -a /etc/apt/sources.list.d/stretch-backports.list; \t  elif grep -q Ubuntu /etc/os-release \u0026\u0026 grep -q xenial /etc/os-release; then \t\t  apt-get update \u0026\u0026 apt-get install -y software-properties-common \u0026\u0026 \t\t  add-apt-repository -y ppa:openjdk-r/ppa; \t  fi \u0026\u0026 \t    apt-get update \u0026\u0026 apt-get install -y openjdk-11-jre openjdk-11-jre-headless openjdk-11-jdk openjdk-11-jdk-headless \u0026\u0026 \t    apt-get install -y bzip2 libgconf-2-4 # for extracting firefox and running chrome, respectively"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "FIREFOX_URL=\"https://download.mozilla.org/?product=firefox-latest-ssl\u0026os=linux64\u0026lang=en-US\"     \u0026\u0026 ACTUAL_URL=$(curl -Ls -o /dev/null -w %{url_effective} $FIREFOX_URL)     \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.tar.bz2 $ACTUAL_URL     \u0026\u0026 tar -xvjf /tmp/firefox.tar.bz2 -C /opt     \u0026\u0026 ln -s /opt/firefox/firefox /usr/local/bin/firefox     \u0026\u0026 apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3     \u0026\u0026 rm -rf /tmp/firefox.*     \u0026\u0026 firefox --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb     \u0026\u0026 (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install)      \u0026\u0026 rm -rf /tmp/google-chrome-stable_current_amd64.deb     \u0026\u0026 sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g'         \"/opt/google/chrome/google-chrome\"     \u0026\u0026 google-chrome --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 \u0026\\nexec \"$@\"\\n' \u003e /tmp/entrypoint     \u0026\u0026 chmod +x /tmp/entrypoint     \u0026\u0026 mv /tmp/entrypoint /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}