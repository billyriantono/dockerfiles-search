{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LANGUAGE",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "TERM",
              "Value": "\"xterm\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"http://dl-4.alpinelinux.org/alpine/edge/main\" \u003e /etc/apk/repositories \u0026\u0026     echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk --update add         git         curl         nodejs         php7         php7-amqp         php7-bcmath         php7-curl         php7-ctype         php7-dom         php7-gd         php7-iconv         php7-intl         php7-json         php7-mbstring         php7-mcrypt         php7-pdo_mysql         php7-openssl         php7-pcntl         php7-pdo         php7-pdo_pgsql         php7-pdo_sqlite         php7-phar         php7-session         php7-xml         php7-zip     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 ln -s /usr/bin/php7 /usr/bin/php     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer     \u0026\u0026 composer global require phpunit/phpunit     \u0026\u0026 composer global require symfony/symfony     \u0026\u0026 composer global require symfony/monolog-bundle     \u0026\u0026 composer global require doctrine/doctrine-bundle     \u0026\u0026 composer global require sentry/sentry-symfony     \u0026\u0026 ln -s /root/.composer/vendor/bin/phpunit /usr/local/bin/phpunit     \u0026\u0026 mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/etc/php7/conf.d/50-setting.ini"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}