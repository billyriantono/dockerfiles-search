MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - Maintainer: markoos <sergey.semenyuk@gen.tech>
    Name: maintainer
  - Env:
    - Key: NR_INSTALL_SILENT
      Value: "1"
    Name: env
  - Env:
    - Key: NR_INSTALL_KEY
      Value: e78318736324bb6aaeefc03ef325e825e23d5b3b
    Name: env
  - Env:
    - Key: NR_APP_NAME
      Value: '""'
    Name: env
  - Env:
    - Key: NEWRELIC_VERSION
      Value: 6.8.0.177
    Name: env
  - Env:
    - Key: APP_ENV
      Value: prod
    Name: env
  - CmdLine:
    - apt-get update && apt-get install procps rsyslog net-tools htop vim telnet wget
      git-core zip unzip         libpcre3 libpcre3-dev libssl-dev libgeoip-dev autoconf
      make build-essential         nasm autogen automake autotools-dev libtool         libfreetype6-dev
      libjbig-dev libpng-dev libjpeg62-turbo-dev libjpeg-dev         libexif-dev         gnupg         gnupg2         gnupg-agent         ffmpeg
      graphicsmagick -y           python-pip python-dev python-setuptools &&         pip
      install -U --force-reinstall pillow-simd &&         php -r "readfile('http://getcomposer.org/installer');"
      | php -- --install-dir=/usr/bin/ --filename=composer &&         docker-php-ext-install
      exif
    Name: run
    PrependShell: true
  - Key: NGINX_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: NGINX_VERSION
      Value: ${NGINX_VERSION:-1.12.2}
    Name: env
  - CmdLine:
    - mkdir -p /tmp/nginx     && git clone git://github.com/mailru/graphite-nginx-module
      /tmp/graphite-nginx-module     && wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
      -O - | tar -zxf - -C /tmp/nginx --strip=1     && cd /tmp/nginx     && patch
      -p1 < /tmp/graphite-nginx-module/graphite_module_v1_7_7.patch && ./configure
      --prefix=/usr/share/nginx --sbin-path=/usr/sbin --conf-path=/etc/nginx/nginx.conf
      --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --error-log-path=/var/log/nginx/error.log
      --http-log-path=/var/log/nginx/access.log --add-module=/tmp/graphite-nginx-module
      --with-http_ssl_module --with-http_addition_module --with-http_auth_request_module
      --with-http_geoip_module --with-http_realip_module --with-http_v2_module --with-http_mp4_module
      --with-http_slice_module --with-http_sub_module --with-http_gzip_static_module
      --with-http_stub_status_module && make && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: SUPERVISOR_VERSION
      Value: 3.3.3
    Name: env
  - CmdLine:
    - apt-get install --force-yes python-pip -y     && pip install supervisor==$SUPERVISOR_VERSION     &&
      mkdir -p /etc/supervisor/conf.d     && mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/
  - Name: workdir
    Path: /tmp/
  - Env:
    - Key: mozjpeg
      Value: "3.2"
    Name: env
  - CmdLine:
    - wget https://github.com/mozilla/mozjpeg/releases/download/v$mozjpeg/mozjpeg-$mozjpeg-release-source.tar.gz     &&
      tar zxvf mozjpeg-$mozjpeg-release-source.tar.gz     && cd /tmp/mozjpeg; autoreconf
      -fiv; ./configure     && make && make install     && cp /opt/mozjpeg/bin/cjpeg
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Env:
    - Key: libwebp
      Value: 0.6.0
    Name: env
  - CmdLine:
    - wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-$libwebp.tar.gz     &&
      tar -xvf libwebp-$libwebp.tar.gz     && cd /tmp/libwebp-$libwebp     && ./configure     &&
      make && make install     && ranlib /usr/local/lib/libwebp.a && ldconfig /usr/local/lib
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/pornel/pngquant.git     && cd /tmp/pngquant     &&
      make && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: GM
      Value: 1.3.26
    Name: env
  - CmdLine:
    - wget https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/$GM/GraphicsMagick-$GM.tar.gz     &&
      tar zxvf GraphicsMagick-$GM.tar.gz     && cd /tmp/GraphicsMagick-$GM     &&
      ./configure     && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/cache/apt/archives/* /var/www/html/* /usr/local/src/*
      /var/lib/apt/lists/* /tmp/* /var/tmp/*     && apt-get purge -y exim4 exim4-base
      exim4-config exim4-daemon-light     && apt-get autoremove -y     && rm -rf /usr/local/etc/php-fpm.d/*
      && mkdir -p /var/www/pic     && echo Europe/Kiev >/etc/timezone &&  dpkg-reconfigure
      -f noninteractive tzdata
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/pic
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf.d/services
    - /etc/supervisor/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/
    - /etc/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm/php-fpm.conf
    - /usr/local/etc/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm/www.conf
    - /usr/local/etc/php-fpm.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php-fpm/php.ini
    - /usr/local/etc/php/php.ini
  - CmdLine:
    - mkdir /var/log/php
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rsyslog.d/rsyslog.conf
    - /etc/rsyslog.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rsyslog.d/02-phtsio.conf
    - /etc/rsyslog.d/
  - CmdLine:
    - wget -O - https://download.newrelic.com/548C16BF.gpg | apt-key add -     &&
      echo "deb http://apt.newrelic.com/debian/ newrelic non-free" > /etc/apt/sources.list.d/newrelic.list     &&
      apt-get update && apt-get -yq install newrelic-php5 newrelic-php5-common newrelic-daemon     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && unlink
      /etc/localtime     && ln -s /usr/share/zoneinfo/Europe/Kiev /etc/localtime     &&
      dpkg-reconfigure -f noninteractive tzdata     && useradd -m -s /bin/bash -u
      1033 wdata && mkdir -p /var/www/app
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - ""
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
