MetaArgs: null
Stages:
- BaseName: php:7.3.10-fpm-alpine
  Commands:
  - Env:
    - Key: PHP_SESSION_SAVE_HANDLER
      Value: files
    Name: env
  - Env:
    - Key: PHP_SESSION_SAVE_PATH
      Value: /tmp
    Name: env
  - Env:
    - Key: PHP_SESSION_NAME
      Value: PHPSESSID
    Name: env
  - Env:
    - Key: PHP_OP_CACHE_ENABLE
      Value: "0"
    Name: env
  - Env:
    - Key: PHP_OP_CACHE_REVALIDATE_FREQ
      Value: "600"
    Name: env
  - Env:
    - Key: PHP_OP_CACHE_SAVE_COMMENTS
      Value: "1"
    Name: env
  - Env:
    - Key: PHP_TIMEZONE
      Value: UTC
    Name: env
  - Env:
    - Key: MAX_INPUT_VARS
      Value: "1000"
    Name: env
  - Env:
    - Key: PHP_CLEAR_ENV
      Value: "no"
    Name: env
  - Env:
    - Key: PHPREDIS_VERSION
      Value: 4.2.0
    Name: env
  - Env:
    - Key: PHPXDEBUG_VERSION
      Value: 2.7.2
    Name: env
  - CmdLine:
    - apk upgrade --update && apk add --no-cache --virtual .build-deps    freetype-dev    libjpeg-turbo-dev    libpng-dev    libmcrypt-dev    icu-dev    krb5-dev    curl-dev    imap-dev    libzip-dev    $PHPIZE_DEPS
      && pecl install xdebug-$PHPXDEBUG_VERSION && pecl install redis-$PHPREDIS_VERSION
      && docker-php-ext-enable xdebug redis && echo "xdebug.idekey = IDEKEY" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.default_enable = 0" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.remote_enable = 1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.remote_autostart = 0" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.remote_connect_back = 0" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.profiler_enable = 0" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      && docker-php-ext-install    iconv mbstring mysqli pdo_mysql curl session zip
      intl opcache && docker-php-ext-configure    gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/ && docker-php-ext-install    gd && docker-php-ext-configure    imap
      --with-imap-ssl --with-kerberos && curl -sS https://getcomposer.org/installer
      | php -- --install-dir=/usr/local/bin --filename=composer && runDeps="$(         scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local             | tr
      ',' '\n'             | sort -u             | awk 'system("[ -e /usr/local/lib/"
      $1 " ]") == 0 { next } { print "so:" $1 }'     )" && apk add --no-cache --virtual
      .php-rundeps $runDeps && apk del .phpize-deps-configure .build-deps && find
      / -type f -iname \*.apk-new -delete && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php.ini
    - /usr/local/etc/php/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php-cli.ini
    - /usr/local/etc/php/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/php-fpm.conf
    - /usr/local/etc/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/www.conf
    - /usr/local/etc/php-fpm.d/
  - CmdLine:
    - sed -i "s|clear_env\s*=\s*no|clear_env = $PHP_CLEAR_ENV|g" /usr/local/etc/php-fpm.d/docker.conf
      && sed -i "s|clear_env\s*=\s*yes|clear_env = $PHP_CLEAR_ENV|g" /usr/local/etc/php-fpm.d/www.conf
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  From:
    Image: php:7.3.10-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3.10-fpm-alpine
