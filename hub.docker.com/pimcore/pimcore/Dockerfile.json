{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-apache-buster",
      "SourceCode": "FROM php:7.3-apache-buster",
      "Platform": "",
      "From": {
        "Image": "php:7.3-apache-buster"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"dominik@pfaffenbauer.at\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -eux     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y lsb-release     \u0026\u0026 echo \"deb http://deb.debian.org/debian $(lsb_release -sc)-backports main\" \u003e /etc/apt/sources.list.d/backports.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         autoconf automake libtool nasm make pkg-config libz-dev build-essential openssl g++         zlib1g-dev libicu-dev libbz2-dev libc-client-dev         libkrb5-dev libxml2-dev libxslt1.1 libxslt1-dev locales locales-all         ffmpeg html2text ghostscript libreoffice pngcrush jpegoptim exiftool poppler-utils git wget         libx11-dev python3-pip opencv-data webp graphviz cmake unzip cron         liblcms2-dev liblqr-1-0-dev libopenjp2-7-dev libtiff-dev         libfontconfig1-dev libfftw3-dev libltdl-dev liblzma-dev libopenexr-dev         libwmf-dev libdjvulibre-dev libpango1.0-dev libxext-dev libxt-dev librsvg2-dev libzip-dev         libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libwebp-dev libjpeg62-turbo-dev libonig-dev         \u0026\u0026 docker-php-ext-configure gd         --with-freetype-dir=/usr/include/         --with-jpeg-dir=/usr/include/         --with-xpm-dir=/usr/include         --with-webp-dir=/usr/include/     \u0026\u0026 docker-php-ext-install intl mbstring mysqli bcmath gd bz2 soap xmlrpc xsl pdo pdo_mysql fileinfo exif zip opcache         \u0026\u0026 wget http://www.imagemagick.org/download/ImageMagick.tar.gz         \u0026\u0026 tar -xvf ImageMagick.tar.gz         \u0026\u0026 cd ImageMagick-7.*         \u0026\u0026 ./configure         \u0026\u0026 make         \u0026\u0026 make install         \u0026\u0026 ldconfig /usr/local/lib         \u0026\u0026 pecl install imagick         \u0026\u0026 pecl install apcu         \u0026\u0026 cd ..         \u0026\u0026 rm -rf ImageMagick*         \u0026\u0026 pecl install redis     \u0026\u0026 docker-php-ext-enable redis imagick apcu     \u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-install imap     \u0026\u0026 docker-php-ext-enable imap         \u0026\u0026 cd ~         \u0026\u0026 wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz         \u0026\u0026 tar xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz         \u0026\u0026 mv wkhtmltox/bin/wkhtmlto* /usr/bin/         \u0026\u0026 rm -rf wkhtmltox         \u0026\u0026 git clone https://github.com/mozilla/mozjpeg.git          \u0026\u0026 cd mozjpeg         \u0026\u0026 cmake -G\"Unix Makefiles\"         \u0026\u0026 make         \u0026\u0026 make install         \u0026\u0026 ln -s /opt/mozjpeg/bin/cjpeg /usr/bin/cjpeg         \u0026\u0026 cd ..         \u0026\u0026 rm -rf mozjpeg         \u0026\u0026 git clone https://github.com/wavexx/facedetect         \u0026\u0026 pip3 install numpy opencv-python         \u0026\u0026 cd facedetect         \u0026\u0026 cp facedetect /usr/local/bin         \u0026\u0026 cd ..         \u0026\u0026 rm -rf facedetect         \u0026\u0026 git clone https://github.com/google/zopfli.git         \u0026\u0026 cd zopfli         \u0026\u0026 make         \u0026\u0026 cp zopfli /usr/bin/zopflipng         \u0026\u0026 cd ..         \u0026\u0026 rm -rf zopfli         \u0026\u0026 wget http://static.jonof.id.au/dl/kenutils/pngout-20150319-linux.tar.gz         \u0026\u0026 tar -xf pngout-20150319-linux.tar.gz         \u0026\u0026 rm pngout-20150319-linux.tar.gz         \u0026\u0026 cp pngout-20150319-linux/x86_64/pngout /bin/pngout         \u0026\u0026 cd ..         \u0026\u0026 rm -rf pngout-20150319-linux         \u0026\u0026 wget http://prdownloads.sourceforge.net/advancemame/advancecomp-1.17.tar.gz         \u0026\u0026 tar zxvf advancecomp-1.17.tar.gz         \u0026\u0026 cd advancecomp-1.17         \u0026\u0026 ./configure         \u0026\u0026 make         \u0026\u0026 make install         \u0026\u0026 cd ..         \u0026\u0026 rm -rf advancecomp-1.17         \u0026\u0026 apt-get autoremove -y         \u0026\u0026 apt-get remove -y autoconf automake libtool nasm make pkg-config libz-dev build-essential g++         \u0026\u0026 apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* ~/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_MEMORY_LIMIT",
              "Value": "-1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "composer:latest",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "set -eux;     composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative;     composer clear-cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:/root/.composer/vendor/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOCUMENT_ROOT",
              "Value": "/var/www/html/web"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "a2enmod rewrite       \u0026\u0026 a2enmod ssl       \u0026\u0026 mkdir /etc/apache2/ssl       \u0026\u0026 touch /etc/apache2/ssl/localhost.key       \u0026\u0026 touch /etc/apache2/ssl/localhost.crt       \u0026\u0026 openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/localhost.key         -subj '/C=UK/ST=London/L=London/O=Digital Web Ltd./CN=localhost/' -out /etc/apache2/ssl/localhost.crt         \u0026\u0026 chmod 600 /etc/apache2/ssl/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data         \u0026\u0026 usermod -G staff www-data         \u0026\u0026 sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf         \u0026\u0026 sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "001-ssl.conf",
            "/etc/apache2/sites-enabled"
          ]
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}