MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: David Tannenbaum <david@api.pinionate.com>
    Name: maintainer
  - Env:
    - Key: APP_NAME
      Value: pinionate-cms
    Name: env
  - Env:
    - Key: APP_EMAIL
      Value: app@pinionate.com
    Name: env
  - Env:
    - Key: APP_DOMAIN
      Value: cms.pinionate.com
    Name: env
  - Env:
    - Key: APP_PATH
      Value: /var/www/html/app
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common curl build-essential     dos2unix
      gcc git libmcrypt4 libpcre3-dev memcached make python2.7-dev     python-pip
      re2c unattended-upgrades whois vim libnotify-bin nano wget     debconf-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install software-properties-common -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y language-pack-en-base
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php -y
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=en_US.UTF-8 apt-add-repository ppa:chris-lea/redis-server -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:nginx/stable -y &&     apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LC_ALL=en_US.UTF-8" >> /etc/default/locale  &&     locale-gen en_US.UTF-8  &&     ln
      -sf /usr/share/zoneinfo/UTC /etc/localtime
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .bash_aliases
    - /root
  - CmdLine:
    - apt-get install -y --force-yes nginx
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx-site-conf
    - /etc/nginx/sites-available/
  - CmdLine:
    - rm -rf /etc/nginx/sites-available/default &&     rm -rf /etc/nginx/sites-enabled/default
      &&     ln -fs "/etc/nginx/sites-available/nginx-site-conf" "/etc/nginx/sites-enabled/nginx-site-conf"
      &&     sed -i -e"s/keepalive_timeout\s*65/keepalive_timeout 2/" /etc/nginx/nginx.conf
      &&     sed -i -e"s/keepalive_timeout 2/keepalive_timeout 2;\n\tclient_max_body_size
      100m/" /etc/nginx/nginx.conf &&     echo "daemon off;" >> /etc/nginx/nginx.conf
      &&     usermod -u 1000 www-data &&     chown -Rf www-data.www-data /var/www/html/
      &&     sed -i -e"s/worker_processes  1/worker_processes 5/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/cache/nginx
  - Name: volume
    Volumes:
    - /var/log/nginx
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/npm install -g gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/npm install -g bower
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y supervisor &&     mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Name: volume
    Volumes:
    - /var/log/supervisor
  - CmdLine:
    - apt-get remove --purge -y software-properties-common &&     apt-get autoremove
      -y &&     apt-get clean &&     apt-get autoclean &&     echo -n > /var/lib/apt/extended_states
      &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /usr/share/man/?? &&     rm
      -rf /usr/share/man/??_*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APP_PATH
  - Name: workdir
    Path: $APP_PATH
  - CmdLine:
    - npm install -g @angular/cli
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run pug-it
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run ng build --prod
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_PATH
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /var/www/html/app
  - CmdLine:
    - /bin/bash
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ./run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
