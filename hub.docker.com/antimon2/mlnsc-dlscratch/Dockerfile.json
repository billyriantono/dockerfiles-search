{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "continuumio/miniconda3:4.3.14",
      "SourceCode": "FROM continuumio/miniconda3:4.3.14",
      "Platform": "",
      "From": {
        "Image": "continuumio/miniconda3:4.3.14"
      },
      "Commands": [
        {
          "Maintainer": "antimon2 \u003cantimon2.me@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "/opt/conda/bin/conda install numpy matplotlib jupyter -y --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get upgrade -y -o Dpkg::Options::=\"--force-confdef\" -o DPkg::Options::=\"--force-confold\"     \u0026\u0026 apt-get install -y     libzmq3-dev     libzmq3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/julia-0.6.0 \u0026\u0026     curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.6/julia-0.6.0-linux-x86_64.tar.gz | tar -C /opt/julia-0.6.0 -x -z --strip-components=1 -f -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /opt/julia-0.6.0 /opt/julia-0.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /opt/julia-0.6.0 /opt/julia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/julia/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "CONDA_JL_HOME=/opt/conda /opt/julia/bin/julia -e 'Pkg.add(\"IJulia\");Pkg.build(\"IJulia\");using IJulia'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PYTHON=/opt/conda/bin/python /opt/julia/bin/julia -e 'Pkg.add(\"PyPlot\");using PyPlot'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     gawk g++ gcc libssl-dev make libc6-dev zlib1g-dev libyaml-dev libsqlite3-dev sqlite3     autoconf libgmp-dev libgdbm-dev libncurses5-dev automake libtool bison pkg-config     libffi-dev libgmp-dev libreadline6-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026 curl -o ruby-2.4.1.tar.gz http://cache.ruby-lang.org/pub/ruby/2.4/ruby-2.4.1.tar.gz \u0026\u0026     tar zxvf ruby-2.4.1.tar.gz \u0026\u0026     cd ruby-2.4.1 \u0026\u0026     ./configure --prefix=/usr/local --disable-install-doc \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     cd ~ \u0026\u0026 rm -rf ruby-2.4.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install cztop --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026 git clone https://github.com/zeromq/czmq \u0026\u0026     cd czmq \u0026\u0026     ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     cd ~ \u0026\u0026 rm -rf czmq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install iruby --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "IPYTHONDIR=/opt/conda/share/jupyter iruby register --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gnuplot \u0026\u0026     gem install pry pry-doc numo-narray numo-gnuplot --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/notebooks"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}