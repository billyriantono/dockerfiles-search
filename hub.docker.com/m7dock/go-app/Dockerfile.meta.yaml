MetaArgs: null
Stages:
- BaseName: golang:1.7-alpine
  Commands:
  - Env:
    - Key: SRC_DIR
      Value: /go/src/github.com/ajarv/go-app
    Name: env
  - CmdLine:
    - mkdir -p ${SRC_DIR}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${SRC_DIR}
  - Name: workdir
    Path: ${SRC_DIR}
  - CmdLine:
    - apk update && apk upgrade &&     apk add --no-cache bash git openssh &&     go
      get -d -v      github.com/gorilla/mux     gopkg.in/yaml.v2     github.com/thedevsaddam/gojsonq     github.com/yalp/jsonpath
    Name: run
    PrependShell: true
  - CmdLine:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.7-alpine
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: SRC_DIR
      Value: /go/src/github.com/ajarv/go-app
    Name: env
  - Env:
    - Key: LISTEN_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: LISTEN_SSL
      Value: f
    Name: env
  - CmdLine:
    - apk update && apk upgrade &&     apk --no-cache add ca-certificates curl bash
      &&     mkdir -p /work
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /work
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - ${SRC_DIR}/main
    - .
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./static
    - /work/static
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./templates
    - /work/templates
  - Name: user
    User: "1012"
  - Name: expose
    Ports:
    - ${LISTEN_PORT}
  - CmdLine:
    - ./main -port ${LISTEN_PORT}  -secure=${LISTEN_SSL}
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
