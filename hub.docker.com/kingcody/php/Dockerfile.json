{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:fpm",
      "SourceCode": "FROM php:fpm",
      "Platform": "",
      "From": {
        "Image": "php:fpm"
      },
      "Commands": [
        {
          "Maintainer": "Cody Mize \u003cdocker@codymize.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "curl -sSL http://nginx.org/keys/nginx_signing.key | apt-key add - \u0026\u0026     echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.9.5-1~jessie"
            },
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "0.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_UPLOAD",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_EXECUTION_TIME",
              "Value": "60"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_INPUT_TIME",
              "Value": "60"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y       nginx=${NGINX_VERSION}       supervisor       zip \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /usr/share/man/{??,??_*}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     curl -sSL \"https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\" |     tar -xzC /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -r -e 's/^(\\s*)(user) .*$/\\1\\2 www-data;/'         -e 's/^(\\s*)(worker_processes) .*$/\\1\\2 {{ .Env.NGINX_WORKERS }};/'         -e 's/^(\\s*)(keepalive_timeout) .*$/\\1\\2 2;/'         -e 's/^(\\s*)(keepalive_timeout .*)$/\\1\\2\\n\\1client_max_body_size {{ .Env.MAX_UPLOAD }};/'         -i /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/usr/local/etc/"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026     ln -sf /dev/stdout /var/log/php5-fpm.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-site.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "CmdLine": [
            "echo '\u003c?php phpinfo(); ?\u003e' \u003e /var/www/html/index.php \u0026\u0026     chown -Rf www-data:www-data /var/www/html/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisor",
            "/etc/supervisor"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}