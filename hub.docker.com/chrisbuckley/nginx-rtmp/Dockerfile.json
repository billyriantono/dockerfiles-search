{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Chris Buckley \u003ccbuckleysa@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VER",
              "Value": "1.15.2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Name": "expose",
          "Ports": [
            "80/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "1935/tcp"
          ]
        },
        {
          "CmdLine": [
            "echo \"deb http://www.deb-multimedia.org stretch main non-free\" | tee -a /etc/apt/sources.list   \u0026\u0026 echo \"deb-src http://deb-multimedia.org stretch main non-free\" | tee -a /etc/apt/sources.list   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get update   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y --allow-unauthenticated install deb-multimedia-keyring   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get update   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y install     apt-utils     build-essential     wget     xz-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Env": [
            {
              "Key": "FFMPEG_VER",
              "Value": "ffmpeg-git-amd64-static"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://johnvansickle.com/ffmpeg/builds/${FFMPEG_VER}.tar.xz   \u0026\u0026 tar xf ${FFMPEG_VER}.tar.xz   \u0026\u0026 rm ${FFMPEG_VER}.tar.xz   \u0026\u0026 mv $(ls . | grep ffmpeg) ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y   git   libpcre3-dev   libssl-dev   \u0026\u0026 wget -q https://nginx.org/download/nginx-${NGINX_VER}.tar.gz   \u0026\u0026 tar -xzf nginx-${NGINX_VER}.tar.gz   \u0026\u0026 git clone https://github.com/sergey-dryabzhinsky/nginx-rtmp-module.git   \u0026\u0026 mkdir /tmp/hls   \u0026\u0026 mkdir /tmp/dash   \u0026\u0026 cd /tmp/nginx-${NGINX_VER}   \u0026\u0026 ./configure     --prefix=/opt/nginx     --without-http_gzip_module     --add-module=../nginx-rtmp-module     --with-http_stub_status_module     --with-debug   \u0026\u0026 make -j4   \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y install   net-tools   procps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get remove -y   build-essential   git   pkg-config   wget   xz-utils   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get autoclean -y   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./utils",
            "/utils"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx.conf",
            "/opt/nginx/conf/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "/opt/nginx/sbin/nginx"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}