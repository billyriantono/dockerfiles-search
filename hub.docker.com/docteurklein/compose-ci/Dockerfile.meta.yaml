MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Name: workdir
    Path: /ci
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - apk add --no-cache     docker     python3     git     curl     parallel     &&
      pip3 install -r requirements.txt     && rm -rf /tmp/* /root/.cache /var/cache/apk
      $(find / -regex '.*\.py[co]')
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: DOCKER_HOST
      Value: unix:///var/run/docker.sock
    Name: env
  - Env:
    - Key: BUILD_IMAGE
      Value: docteurklein/compose-ci
    Name: env
  - Env:
    - Key: BUILD_CMD
      Value: '''python3 -m compose_ci.ci'''
    Name: env
  - Env:
    - Key: GARBAGE_COLLECT
      Value: "1"
    Name: env
  - CmdLine:
    - python3
    - -m
    - compose_ci.httpd
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /ci
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
