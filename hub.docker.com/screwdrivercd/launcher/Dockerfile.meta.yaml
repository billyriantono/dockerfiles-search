MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Maintainer: The Screwdrivers <screwdriver.cd>
    Name: maintainer
  - Name: workdir
    Path: /opt/sd
  - CmdLine:
    - 'set -x    && mkdir /lib64    && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2    &&
      apk add --no-cache --update ca-certificates    && apk add --virtual .build-dependencies
      wget    && apk add --virtual .build-dependencies gpgme    && wget -q -O - https://github.com/screwdriver-cd/launcher/releases/latest       |
      egrep -o ''/screwdriver-cd/launcher/releases/download/v[0-9.]*/launcher_linux_amd64''       |
      wget --base=http://github.com/ -i - -O launch    && chmod +x launch    && wget
      -q -O - https://github.com/screwdriver-cd/log-service/releases/latest       |
      egrep -o ''/screwdriver-cd/log-service/releases/download/v[0-9.]*/log-service_linux_amd64''       |
      wget --base=http://github.com/ -i - -O logservice    && chmod +x logservice    &&
      wget -q -O - https://github.com/screwdriver-cd/meta-cli/releases/latest       |
      egrep -o ''/screwdriver-cd/meta-cli/releases/download/v[0-9.]*/meta-cli_linux_amd64''       |
      wget --base=http://github.com/ -i - -O meta    && chmod +x meta    && wget -q
      -O - https://github.com/screwdriver-cd/sd-step/releases/latest       | egrep
      -o ''/screwdriver-cd/sd-step/releases/download/v[0-9.]*/sd-step_linux_amd64''       |
      wget --base=http://github.com/ -i - -O sd-step    && chmod +x sd-step    &&
      wget -q -O - https://github.com/screwdriver-cd/sd-cmd/releases/latest       |
      egrep -o ''/screwdriver-cd/sd-cmd/releases/download/v[0-9.]*/sd-cmd_linux_amd64''       |
      wget --base=http://github.com/ -i - -O sd-cmd    && chmod +x sd-cmd    && wget
      -q -O - https://github.com/screwdriver-cd/store-cli/releases/latest       |
      egrep -o ''/screwdriver-cd/store-cli/releases/download/v[0-9.]*/store-cli_linux_amd64''       |
      wget --base=http://github.com/ -i - -O store-cli    && chmod +x store-cli    &&
      wget -q -O - https://github.com/krallin/tini/releases/latest       | egrep -o
      ''/krallin/tini/releases/download/v[0-9.]*/tini-static''       | head -1       |
      wget --base=http://github.com/ -i - -O tini-static    && wget -q -O - https://github.com/krallin/tini/releases/latest       |
      egrep -o ''/krallin/tini/releases/download/v[0-9.]*/tini-static.asc''       |
      wget --base=http://github.com/ -i - -O tini-static.asc    && found='''';       (       gpg
      --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7
      ||       gpg --no-tty --keyserver pgp.mit.edu --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7
      ||       gpg --no-tty --keyserver keyserver.pgp.com --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7
      ||       gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 ||       gpg --no-tty --keyserver ha.pool.sks-keyservers.net
      --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7       )    && found=yes
      && break;      test -z "$found" && echo >&2 "error: failed to fetch GPG key
      595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7" && exit 1;      gpg --verify tini-static.asc     &&
      rm tini-static.asc    && mv tini-static tini    && chmod +x tini    && mkdir
      -p /hab/bin /opt/sd/bin    && wget -O hab.tar.gz ''https://api.bintray.com/content/habitat/stable/linux/x86_64/hab-0.79.1-20190410220617-x86_64-linux.tar.gz?bt_package=hab-x86_64-linux''    &&
      tar -C . -ozxvf hab.tar.gz    && mv hab-*/hab /hab/bin/hab    && chmod +x /hab/bin/hab    &&
      cp /hab/bin/hab /opt/sd/bin/hab    && /hab/bin/hab pkg install core/bash core/git
      core/zip core/unzip core/kmod core/iptables core/docker/18.03.0 core/wget core/sed    &&
      /hab/bin/hab pkg install core/curl/7.54.1    && rm -rf /hab/cache /opt/sd/hab.tar.gz
      /opt/sd/hab-*    && find /hab -name doc -exec rm -r {} +    && find /hab -name
      docs -exec rm -r {} +    && find /hab -name man -exec rm -r {} +    && apk del
      --purge .build-dependencies'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Docker/launcher_entrypoint.sh
    - /opt/sd/launcher_entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Docker/run.sh
    - /opt/sd/run.sh
  - Name: volume
    Volumes:
    - /opt/sd
  - Name: volume
    Volumes:
    - /hab
  - CmdLine:
    - /opt/sd/launcher_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
