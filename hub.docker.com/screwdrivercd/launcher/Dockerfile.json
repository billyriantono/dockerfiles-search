{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Maintainer": "The Screwdrivers \u003cscrewdriver.cd\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/opt/sd"
        },
        {
          "CmdLine": [
            "set -x    \u0026\u0026 mkdir /lib64    \u0026\u0026 ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2    \u0026\u0026 apk add --no-cache --update ca-certificates    \u0026\u0026 apk add --virtual .build-dependencies wget    \u0026\u0026 apk add --virtual .build-dependencies gpgme    \u0026\u0026 wget -q -O - https://github.com/screwdriver-cd/launcher/releases/latest       | egrep -o '/screwdriver-cd/launcher/releases/download/v[0-9.]*/launcher_linux_amd64'       | wget --base=http://github.com/ -i - -O launch    \u0026\u0026 chmod +x launch    \u0026\u0026 wget -q -O - https://github.com/screwdriver-cd/log-service/releases/latest       | egrep -o '/screwdriver-cd/log-service/releases/download/v[0-9.]*/log-service_linux_amd64'       | wget --base=http://github.com/ -i - -O logservice    \u0026\u0026 chmod +x logservice    \u0026\u0026 wget -q -O - https://github.com/screwdriver-cd/meta-cli/releases/latest       | egrep -o '/screwdriver-cd/meta-cli/releases/download/v[0-9.]*/meta-cli_linux_amd64'       | wget --base=http://github.com/ -i - -O meta    \u0026\u0026 chmod +x meta    \u0026\u0026 wget -q -O - https://github.com/screwdriver-cd/sd-step/releases/latest       | egrep -o '/screwdriver-cd/sd-step/releases/download/v[0-9.]*/sd-step_linux_amd64'       | wget --base=http://github.com/ -i - -O sd-step    \u0026\u0026 chmod +x sd-step    \u0026\u0026 wget -q -O - https://github.com/screwdriver-cd/sd-cmd/releases/latest       | egrep -o '/screwdriver-cd/sd-cmd/releases/download/v[0-9.]*/sd-cmd_linux_amd64'       | wget --base=http://github.com/ -i - -O sd-cmd    \u0026\u0026 chmod +x sd-cmd    \u0026\u0026 wget -q -O - https://github.com/screwdriver-cd/store-cli/releases/latest       | egrep -o '/screwdriver-cd/store-cli/releases/download/v[0-9.]*/store-cli_linux_amd64'       | wget --base=http://github.com/ -i - -O store-cli    \u0026\u0026 chmod +x store-cli    \u0026\u0026 wget -q -O - https://github.com/krallin/tini/releases/latest       | egrep -o '/krallin/tini/releases/download/v[0-9.]*/tini-static'       | head -1       | wget --base=http://github.com/ -i - -O tini-static    \u0026\u0026 wget -q -O - https://github.com/krallin/tini/releases/latest       | egrep -o '/krallin/tini/releases/download/v[0-9.]*/tini-static.asc'       | wget --base=http://github.com/ -i - -O tini-static.asc    \u0026\u0026 found='';       (       gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 ||       gpg --no-tty --keyserver pgp.mit.edu --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 ||       gpg --no-tty --keyserver keyserver.pgp.com --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 ||       gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 ||       gpg --no-tty --keyserver ha.pool.sks-keyservers.net --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7       )    \u0026\u0026 found=yes \u0026\u0026 break;      test -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7\" \u0026\u0026 exit 1;      gpg --verify tini-static.asc     \u0026\u0026 rm tini-static.asc    \u0026\u0026 mv tini-static tini    \u0026\u0026 chmod +x tini    \u0026\u0026 mkdir -p /hab/bin /opt/sd/bin    \u0026\u0026 wget -O hab.tar.gz 'https://api.bintray.com/content/habitat/stable/linux/x86_64/hab-0.79.1-20190410220617-x86_64-linux.tar.gz?bt_package=hab-x86_64-linux'    \u0026\u0026 tar -C . -ozxvf hab.tar.gz    \u0026\u0026 mv hab-*/hab /hab/bin/hab    \u0026\u0026 chmod +x /hab/bin/hab    \u0026\u0026 cp /hab/bin/hab /opt/sd/bin/hab    \u0026\u0026 /hab/bin/hab pkg install core/bash core/git core/zip core/unzip core/kmod core/iptables core/docker/18.03.0 core/wget core/sed    \u0026\u0026 /hab/bin/hab pkg install core/curl/7.54.1    \u0026\u0026 rm -rf /hab/cache /opt/sd/hab.tar.gz /opt/sd/hab-*    \u0026\u0026 find /hab -name doc -exec rm -r {} +    \u0026\u0026 find /hab -name docs -exec rm -r {} +    \u0026\u0026 find /hab -name man -exec rm -r {} +    \u0026\u0026 apk del --purge .build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Docker/launcher_entrypoint.sh",
            "/opt/sd/launcher_entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Docker/run.sh",
            "/opt/sd/run.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/sd"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/hab"
          ]
        },
        {
          "CmdLine": [
            "/opt/sd/launcher_entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}