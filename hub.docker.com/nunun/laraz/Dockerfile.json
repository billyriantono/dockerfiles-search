{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nunun/alpine-nginx-php71:opcache",
      "SourceCode": "FROM nunun/alpine-nginx-php71:opcache",
      "Platform": "",
      "From": {
        "Image": "nunun/alpine-nginx-php71:opcache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk upgrade -U  \u0026\u0026 apk add --no-cache     bash git curl openssh outils-md5     make g++     python     mysql-client     nodejs nodejs-npm     php7-pdo_mysql php7-curl php7-session php7-phar     php7-tokenizer php7-xmlwriter php7-simplexml     tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GROOVY_HOME",
              "Value": "/opt/groovy"
            },
            {
              "Key": "GROOVY_VERSION",
              "Value": "2.4.11"
            },
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "131"
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "11"
            },
            {
              "Key": "JAVA_PATH",
              "Value": "d54c1d3a095b4ff2b6607d096fa80163"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/default-jvm\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Installing Groovy Dependencies\"  \u0026\u0026 apk add --no-cache     ca-certificates gnupg openssl unzip  \u0026\u0026 apk add --no-cache --virtual     .build-deps openjdk7-jre  \u0026\u0026 echo \"Downloading Groovy\"  \u0026\u0026 wget -O groovy.zip \"https://dist.apache.org/repos/dist/release/groovy/${GROOVY_VERSION}/distribution/apache-groovy-binary-${GROOVY_VERSION}.zip\"  \u0026\u0026 echo \"Importing keys listed in http://www.apache.org/dist/groovy/KEYS from key server\"  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 for key in \"7FAA0F2206DE228F0DB01AD741321490758AAD6F\"                \"331224E1D7BE883D16E8A685825C06C827AF6B66\"                \"34441E504A937F43EB0DAEF96A65176A0FB1CD0B\"                \"9A810E3B766E089FFB27C70F11B595CEDC4AEBB5\"; do         for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do             echo \"Trying ${server}\";             if gpg --keyserver \"${server}\" --recv-keys \"${key}\"; then break; fi;         done;     done  \u0026\u0026 if [ $(gpg --list-keys | grep -c \"pub \") -ne 4 ]; then         echo \"ERROR: Failed to fetch GPG keys\" \u003e\u00262; exit 1;     fi  \u0026\u0026 echo \"Checking download signature\"  \u0026\u0026 wget -O groovy.zip.asc \"https://dist.apache.org/repos/dist/release/groovy/${GROOVY_VERSION}/distribution/apache-groovy-binary-${GROOVY_VERSION}.zip.asc\"  \u0026\u0026 gpg --batch --verify groovy.zip.asc groovy.zip  \u0026\u0026 rm -rf \"${GNUPGHOME}\"  \u0026\u0026 rm groovy.zip.asc  \u0026\u0026 echo \"Installing Groovy\"  \u0026\u0026 unzip groovy.zip  \u0026\u0026 rm groovy.zip  \u0026\u0026 mkdir /opt  \u0026\u0026 mv \"groovy-${GROOVY_VERSION}\" \"${GROOVY_HOME}/\"  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/grape\"         /usr/bin/grape  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovy\"        /usr/bin/groovy  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovyc\"       /usr/bin/groovyc  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovyConsole\" /usr/bin/groovyConsole  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovydoc\"     /usr/bin/groovydoc  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/groovysh\"      /usr/bin/groovysh  \u0026\u0026 ln -s \"${GROOVY_HOME}/bin/java2groovy\"   /usr/bin/java2groovy  \u0026\u0026 echo \"Applying workaround for https://issues.apache.org/jira/browse/GROOVY-7906\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/grape\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/groovy\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/groovyc\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/groovyConsole\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/groovydoc\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/groovysh\"  \u0026\u0026 sed -i \"s|#!/bin/sh|#!/bin/bash|\" \"${GROOVY_HOME}/bin/java2groovy\"  \u0026\u0026 echo \"Adding groovy user and group\"  \u0026\u0026 addgroup -S -g 1000 groovy  \u0026\u0026 adduser -D -S -G groovy -u 1000 -s /bin/ash groovy  \u0026\u0026 mkdir -p /home/groovy/.groovy/grapes  \u0026\u0026 chown -R groovy:groovy /home/groovy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grape install io.swagger swagger-codegen-cli 2.2.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://phar.phpunit.de/phpunit.phar -o phpunit.phar \u0026\u0026     chmod +x phpunit.phar \u0026\u0026     mv phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/supervisord.*.conf",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /var/www/html/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src",
            "/var/www/html/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "sh /start.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}