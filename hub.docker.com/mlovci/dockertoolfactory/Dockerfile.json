{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Michael T Lovci michaeltlovci@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends -y autoconf automake build-essential gfortran cmake git-core libatlas-base-dev libblas-dev liblapack-dev mercurial subversion python-dev pkg-config openjdk-7-jre python-setuptools adduser zlib1g-dev ghostscript r-base-core  graphicsmagick-imagemagick-compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-virtualenv libfreetype6-dev exonerate bedtools wget curl libcurl4-openssl-dev libssl-dev libreadline-dev libxml2-dev samtools liblzma-dev libpcre3-dev libbz2-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade numpy pysam tornado matplotlib pip pandas ipython rpy2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'source(\"http://bioconductor.org/biocLite.R\"); biocLite(c(\"DESeq\", \"DESeq2\", \"edgeR\", \"EDASeq\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Rscript -e 'install.packages(c(\"latticeExtra\", \"ggplot2\", \"reshape\", \"gridExtra\"), dependencies=TRUE, repos=\"http://cran.us.r-project.org\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install bc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install intermine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/YeoLab/clipper.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install HTSeq pybedtools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd clipper \u0026\u0026 git checkout clip_analysis_fixes \u0026\u0026 easy_install ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/YeoLab/flotilla.git \u0026\u0026 cd flotilla \u0026\u0026 pip install ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/YeoLab/gscripts.git \u0026\u0026 cd gscripts \u0026\u0026 easy_install ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/samtools/htslib \u0026\u0026 cd htslib \u0026\u0026 autoconf \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/blat/blat -O /usr/bin/blat \u0026\u0026 chmod a+x /usr/bin/blat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://weblogo.berkeley.edu/release/weblogo.2.8.2.tar.gz -O weblogo.2.8.2.tar.gz \u0026\u0026 tar zxvf weblogo.2.8.2.tar.gz \u0026\u0026 cp weblogo/seqlogo /usr/bin/."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://homer.salk.edu/homer/configureHomer.pl -O configureHomer.pl \u0026\u0026 perl configureHomer.pl -install homer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser galaxy -u 451"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade git+https://github.com/matplotlib/matplotlib.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y emacs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y emboss emboss-lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y mysql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install bx-python gffutils biopython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "install_bionode.sh",
            "/install_bionode.sh"
          ]
        },
        {
          "CmdLine": [
            "bash /install_bionode.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/weblogo:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "usermod -aG staff galaxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/galaxy/job_working_directory"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/galaxy/job_working_directory"
        },
        {
          "Name": "user",
          "User": "galaxy"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}