{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"jeseon@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Docker Container for the Apple's Swift, Java and Python\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "sed -i 's/archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q update \u0026\u0026     apt-get -q install -y     gcc     make     curl     wget     htop     vim     zip     unzip     tzdata     git     git-flow     rsync     clang-3.8     build-essential     pkg-config     xz-utils     libbz2-dev     libc6-dev     libncurses5-dev     libncursesw5-dev     libedit-dev     libicu-dev     libssl-dev     libreadline-dev     libsqlite3-dev     libpython2.7     libicu-dev     libssl-dev     libxml2     libcurl4-openssl-dev     zlib1g-dev  \u0026\u0026 update-alternatives --quiet --install /usr/bin/clang clang /usr/bin/clang-3.8 100  \u0026\u0026 update-alternatives --quiet --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.8 100  \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SWIFT_PLATFORM",
          "Name": "arg",
          "Value": "ubuntu16.04"
        },
        {
          "Key": "SWIFT_BRANCH",
          "Name": "arg",
          "Value": "swift-4.1.1-release"
        },
        {
          "Key": "SWIFT_VERSION",
          "Name": "arg",
          "Value": "swift-4.1.1-RELEASE"
        },
        {
          "Env": [
            {
              "Key": "SWIFT_PLATFORM",
              "Value": "$SWIFT_PLATFORM"
            },
            {
              "Key": "SWIFT_BRANCH",
              "Value": "$SWIFT_BRANCH"
            },
            {
              "Key": "SWIFT_VERSION",
              "Value": "$SWIFT_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "SWIFT_URL=https://swift.org/builds/$SWIFT_BRANCH/$(echo \"$SWIFT_PLATFORM\" | tr -d .)/$SWIFT_VERSION/$SWIFT_VERSION-$SWIFT_PLATFORM.tar.gz  \u0026\u0026 curl -fSsL $SWIFT_URL -o swift.tar.gz  \u0026\u0026 curl -fSsL $SWIFT_URL.sig -o swift.tar.gz.sig  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 set -e;         for key in           8513444E2DA36B7C1659AF4D7638F1FB2B2B08C4           A3BAFD3556A59079C06894BD63BC1CFE91D306C6           5E4DF843FB065D7F7E24FBA2EF5430F071E1B235         ; do           gpg --quiet --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";         done  \u0026\u0026 gpg --batch --verify --quiet swift.tar.gz.sig swift.tar.gz  \u0026\u0026 tar -xzf swift.tar.gz --directory / --strip-components=1  \u0026\u0026 rm -r \"$GNUPGHOME\" swift.tar.gz.sig swift.tar.gz  \u0026\u0026 chmod -R o+r /usr/lib/swift"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "swift --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash  \u0026\u0026 echo '' \u003e\u003e \"$HOME/.bashrc\"  \u0026\u0026 echo '# PyEnv Environment' \u003e\u003e \"$HOME/.bashrc\"  \u0026\u0026 echo 'export PATH=\"$PATH:$HOME/.pyenv/bin\"' \u003e\u003e \"$HOME/.bashrc\"  \u0026\u0026 echo 'eval \"$(pyenv init -)\"' \u003e\u003e \"$HOME/.bashrc\"  \u0026\u0026 echo 'eval \"$(pyenv virtualenv-init -)\"' \u003e\u003e \"$HOME/.bashrc\"  \u0026\u0026 source $HOME/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$HOME/.pyenv/bin/pyenv install 3.6.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://get.sdkman.io | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source $HOME/.sdkman/bin/sdkman-init.sh \u0026\u0026 sdk install java"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}