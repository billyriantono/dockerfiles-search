{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker.io/resolwebio/base:ubuntu-18.04",
      "SourceCode": "FROM docker.io/resolwebio/base:ubuntu-18.04",
      "Platform": "",
      "From": {
        "Image": "docker.io/resolwebio/base:ubuntu-18.04"
      },
      "Commands": [
        {
          "Maintainer": "Resolwe Bioinformatics authors https://github.com/genialis/resolwe-bio",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MPLBACKEND",
              "Value": "Agg"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/",
            "/opt/resolwebio/assets/"
          ]
        },
        {
          "Expression": "RUN find /var/cache/build/ ! -type d ! -name 'common.sh' -delete",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD packages-*.txt /var/cache/build/",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD packages-manual /var/cache/build/packages-manual/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN export DEBIAN_FRONTEND=noninteractive \u0026\u0026     apt-get update \u0026\u0026     if [ -f /var/cache/build/packages-debian.txt ]; then         echo \"Installing distribution packages (runtime requirements)...\" \u0026\u0026         sed -e 's/^#.*$//g' -e '/^$/d' /var/cache/build/packages-debian.txt |             xargs apt-get --no-install-recommends -y install         ;     fi \u0026\u0026     if [ -f /var/cache/build/packages-debian-buildreq.txt ]; then         echo \"Installing distribution packages (build requirements)...\" \u0026\u0026         sed -e 's/^#.*$//g' -e '/^$/d' /var/cache/build/packages-debian-buildreq.txt |             xargs apt-get --no-install-recommends -y install         ;     fi \u0026\u0026     if [ -f /var/cache/build/packages-python2.txt ]; then         echo \"Installing Python 2 packages...\" \u0026\u0026         pip install --require-hashes --requirement /var/cache/build/packages-python2.txt         ;     fi \u0026\u0026     if [ -f /var/cache/build/packages-python2-stage2.txt ]; then         echo \"Installing stage 2 Python 2 packages...\" \u0026\u0026         pip install --require-hashes --requirement /var/cache/build/packages-python2-stage2.txt         ;     fi \u0026\u0026     if [ -f /var/cache/build/packages-python3.txt ]; then         echo \"Installing Python 3 packages...\" \u0026\u0026         pip3 install --require-hashes --requirement /var/cache/build/packages-python3.txt         ;     fi \u0026\u0026     if [ -f /var/cache/build/packages-python3-stage2.txt ]; then         echo \"Installing stage 2 Python 3 packages...\" \u0026\u0026         pip3 install --require-hashes --requirement /var/cache/build/packages-python3-stage2.txt         ;     fi \u0026\u0026     if [ -f /var/cache/build/packages-manual.txt ]; then         echo \"Building manual packages...\" \u0026\u0026         sed -e 's/^#.*$//g' -e '/^$/d' /var/cache/build/packages-manual.txt |             xargs --max-args 1 -I '{}' bash -c 'bash /var/cache/build/packages-manual/{}.sh || exit 255'         ;     fi \u0026\u0026     echo \"Cleaning up packages...\" \u0026\u0026     if [ -f /var/cache/build/packages-debian-buildreq.txt ]; then         sed -e 's/^#.*$//g' -e '/^$/d' /var/cache/build/packages-debian-buildreq.txt |             xargs apt-get -y purge         ;     fi \u0026\u0026     apt-get autoremove --purge -y \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /root/.cache/pip \u0026\u0026     rm -rf /tmp/*",
          "Name": "onbuild"
        }
      ]
    }
  ]
}