{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Maintainer": "Jesus M. Gonzalez-Barahona \u003cjgb@bitergia.com\u003e, Alvaro del Castillo \u003cacs@bitergia.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_USER",
              "Value": "bitergia"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_USER_DIR",
              "Value": "/home/${DEPLOY_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONF_DIR",
              "Value": "${DEPLOY_USER_DIR}/conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCRIPTS_DIR",
              "Value": "${DEPLOY_USER_DIR}/scripts"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRIMOIRELAB_RELEASE",
              "Value": "\"18.07-11\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd ${DEPLOY_USER} --create-home --shell /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install --no-install-recommends         bash locales         gcc         git git-core         python3         python3-pip         python3-venv         python3-dev         python3-gdbm         mariadb-client         unzip curl wget sudo ssh         \u0026\u0026     apt-get clean \u0026\u0026     find /var/lib/apt/lists -type f -delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${DEPLOY_USER} ALL=NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${DEPLOY_USER_DIR}/logs ; chown -R ${DEPLOY_USER}:${DEPLOY_USER} ${DEPLOY_USER_DIR}/logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/grimoirelog/logs"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     echo 'LANG=\"en_US.UTF-8\"'\u003e/etc/default/locale \u0026\u0026     dpkg-reconfigure --frontend=noninteractive locales \u0026\u0026     update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "stage",
            "${DEPLOY_USER_DIR}/stage"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 ${DEPLOY_USER_DIR}/stage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${DEPLOY_USER}"
        },
        {
          "Name": "workdir",
          "Path": "${DEPLOY_USER_DIR}"
        },
        {
          "CmdLine": [
            "mkdir -p ${CONF_DIR} \u0026\u0026     wget https://raw.githubusercontent.com/chaoss/grimoirelab/master/releases/${GRIMOIRELAB_RELEASE} -O ${CONF_DIR}/requirements.cfg \u0026\u0026     echo ${GRIMOIRELAB_RELEASE} \u003e ${DEPLOY_USER_DIR}/release \u0026\u0026     git clone https://github.com/grimoirelab/grimoirelab.git --depth 1 \u0026\u0026     echo \"Installing and checking GrimoireLab Release\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo grimoirelab/utils/build_grimoirelab --build --install --check --install_system --relfile ${CONF_DIR}/requirements.cfg -l debug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${DEPLOY_USER_DIR}/stage"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}