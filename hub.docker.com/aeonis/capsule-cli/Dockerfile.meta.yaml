MetaArgs: null
Stages:
- BaseName: php:7.3.11-fpm
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE
    Name: arg
    Value: "1"
  - CmdLine:
    - "set -xe; \techo '#!/bin/sh\\nexit 101' > /usr/sbin/policy-rc.d && chmod +x
      /usr/sbin/policy-rc.d"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe; \tapt-get update >/dev/null; \tapt-get -y --no-install-recommends
      install >/dev/null \t\tapt-transport-https \t\tgnupg \t\tlocales \t\twget \t;\tapt-get
      clean; rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias
      en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - "set -xe; \tsed -i 's/main/main contrib non-free/' /etc/apt/sources.list; \tcurl
      -fsSL https://packages.blackfire.io/gpg.key | apt-key add -; \techo \"deb https://packages.blackfire.io/debian
      any main\" | tee /etc/apt/sources.list.d/blackfire.list;     curl -fsSL https://packagecloud.io/github/git-lfs/gpgkey
      | apt-key add -;     echo 'deb https://packagecloud.io/github/git-lfs/debian
      buster main' | tee /etc/apt/sources.list.d/github_git-lfs.list;     echo 'deb-src
      https://packagecloud.io/github/git-lfs/debian buster main' | tee -a /etc/apt/sources.list.d/github_git-lfs.list;
      \tcurl -fsSL https://packages.microsoft.com/keys/microsoft.asc | apt-key add
      -; \techo 'deb https://packages.microsoft.com/debian/10/prod buster main' |
      tee /etc/apt/sources.list.d/mssql.list;"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe; \tmkdir -p /usr/share/man/man1 /usr/share/man/man7; \tapt-get update
      >/dev/null; \tapt-get -y --no-install-recommends install >/dev/null \t    cron
      \t\tdnsutils \t\tgit \t\tgit-lfs \t\tghostscript \t\thtml2text \t\timagemagick
      \t\tiputils-ping \t\tless \t\tlibfcgi-bin \t\tmc \t\tmsmtp \t\tdefault-mysql-client
      \t\tnano \t\topenssh-client \t\topenssh-server \t\tpostgresql-client \t\tprocps
      \t\tpv \t\trsync \t\tsudo \t\tsupervisor \t\tunzip \t\twebp         zip \t;\tapt-get
      clean; rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe; \tgroupadd docker -g 1000; \tuseradd -m -s /bin/bash -u 1000 -g 1000
      -G sudo -p docker docker;     usermod -a -G sudo docker; \techo 'docker ALL=(ALL)
      NOPASSWD:ALL' >> /etc/sudoers"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    - Key: GOMPLATE_VERSION
      Value: 3.0.0
    Name: env
  - CmdLine:
    - "set -xe; \tcurl -fsSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg
      --print-architecture)\" -o /usr/local/bin/gosu; \tchown root:\"$(id -gn docker)\"
      /usr/local/bin/gosu; \tchmod +sx /usr/local/bin/gosu; \tcurl -fsSL https://github.com/hairyhenderson/gomplate/releases/download/v${GOMPLATE_VERSION}/gomplate_linux-amd64-slim
      -o /usr/local/bin/gomplate; \tchmod +x /usr/local/bin/gomplate"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe; \tmkdir /var/run/sshd; \techo 'docker:docker' | chpasswd; \tsed -i
      's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config;
      \tsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd; \techo \"export VISIBLE=now\" >> /etc/profile"
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - "set -xe; \tbuildDeps=\" \t\tlibc-client2007e-dev \t\tlibfreetype6-dev \t\tlibgpgme11-dev
      \t\tlibicu-dev \t\tlibjpeg62-turbo-dev \t\tlibkrb5-dev \t\tlibldap2-dev \t\tlibmagickcore-dev
      \t\tlibmagickwand-dev \t\tlibmemcached-dev \t\tlibmhash-dev \t\tlibpng-dev \t\tlibpq-dev
      \t\tlibwebp-dev \t\tlibssh2-1-dev \t\tlibxpm-dev \t\tlibxslt1-dev \t\tlibzip-dev
      \t\tlibcurl4-openssl-dev \t\"; \tapt-get update >/dev/null; \tACCEPT_EULA=Y
      \tapt-get -y --no-install-recommends install >/dev/null \t    $buildDeps \t\tblackfire-php
      \t\tlibc-client2007e \t\tlibfreetype6 \t\tlibgpgme11 \t\tlibicu63 \t\tlibjpeg62-turbo
      \t\tlibldap-2.4-2 \t\tlibmagickcore-6.q16-6 \t\tlibmagickwand-6.q16-6 \t\tlibmemcached11
      \t\tlibmemcachedutil2 \t\tlibmhash2 \t\tlibpng16-16 \t\tlibpq5 \t\tlibssh2-1
      \t\tlibxpm4 \t\tlibxslt1.1 \t\tlibzip4 \t\tmsodbcsql17 \t\tlibz-dev         zlibc
      \t;\tgit clone https://github.com/php/pecl-networking-ssh2.git /usr/src/php/ext/ssh2
      && rm -rf /usr/src/php/ext/ssh2/.git; \t    docker-php-ext-configure >/dev/null
      gd         --with-freetype-dir=/usr/include/         --with-jpeg-dir=/usr/include/
      \        --with-webp-dir=/usr/include/         --with-png-dir=/usr/include/
      \        --with-xpm-dir=/usr/include/;     \tdocker-php-ext-configure >/dev/null
      imap --with-kerberos --with-imap-ssl; \tdocker-php-ext-configure >/dev/null
      ldap --with-libdir=lib/x86_64-linux-gnu/; \tdocker-php-ext-configure >/dev/null
      pgsql --with-pgsql=/usr/local/pgsql/; \tdocker-php-ext-configure >/dev/null
      zip --with-libzip; \t\tdocker-php-ext-install >/dev/null -j$(nproc) \t    bcmath
      \t\tbz2 \t\tcalendar\t\texif \t\tgd \t\tgettext \t\timap \t\tintl \t\tldap \t\tmysqli
      \t\topcache \t\tpcntl \t\tpdo_mysql \t\tpdo_pgsql \t\tpgsql \t\tsoap \t\tsockets
      \t\tssh2 \t\txsl         zip \t;\tpecl update-channels; \tpecl install >/dev/null
      </dev/null \t\tapcu         gnupg \t\traphf         propro         imagick \t\tmemcached
      \t\tredis \t\txdebug \t;\tdocker-php-ext-enable \t    apcu \t\tgnupg \t\timagick
      \t\tmemcached \t\traphf \t\tpropro \t\tredis \t;\tpecl install pecl_http; \tdocker-php-ext-enable
      \t\thttp \t;\tdocker-php-source delete; \trm -rf /tmp/pear ~/.pearrc; \tapt-get
      purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps
      >/dev/null; \tapt-get clean; rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.9.1
    - Key: WPCLI_VERSION
      Value: 2.3.0
    - Key: BLACKFIRE_VERSION
      Value: 1.28.0
    Name: env
  - CmdLine:
    - "set -xe; \tcurl -fsSL \"https://github.com/wp-cli/wp-cli/releases/download/v${WPCLI_VERSION}/wp-cli-${WPCLI_VERSION}.phar\"
      -o /usr/local/bin/wp; \tcurl -fsSL \"https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar\"
      -o /usr/local/bin/composer; \tcurl -fsSL \"https://packages.blackfire.io/binaries/blackfire-agent/${BLACKFIRE_VERSION}/blackfire-cli-linux_static_amd64\"
      -o /usr/local/bin/blackfire; \t(cd /usr/local/bin && chmod +x blackfire composer
      wp);"
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 12.13.0
    - Key: YARN_VERSION
      Value: 1.19.1
    Name: env
  - CmdLine:
    - "buildDeps='xz-utils'     && ARCH= && dpkgArch=\"$(dpkg --print-architecture)\"
      \    && case \"${dpkgArch##*-}\" in       amd64) ARCH='x64';;       ppc64el)
      ARCH='ppc64le';;       s390x) ARCH='s390x';;       arm64) ARCH='arm64';;       armhf)
      ARCH='armv7l';;       i386) ARCH='x86';;       *) echo \"unsupported architecture\";
      exit 1 ;;     esac     && set -ex     && apt-get update && apt-get install -y
      ca-certificates curl wget gnupg dirmngr $buildDeps --no-install-recommends     &&
      rm -rf /var/lib/apt/lists/*     && for key in       94AE36675C464D64BAFA68DD7434390BDBE9B9C5
      \      FD3A5288F042B6850C66B31F09FE44734EB7990E       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
      \      DD8F2338BAE7501E3DD5AC78C273792F7D83545D       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
      \      B9AE9905FFD7803F25714661B63B535A4C206CA9       77984A986EBC2AA786BC0F66B01FBB92821C587A
      \      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       4ED778F539E3634C779C87C6D7062848A1AB005C
      \      A48C2BEE680E841632CD4E44F07496B3EB3C1762       B9E2F5981AA6E0CD28160D9FF13993A75599653C
      \    ; do       gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys \"$key\" ||       gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net
      --recv-keys \"$key\" ||       gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys
      \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"
      \    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"
      \    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     &&
      grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum
      -c -     && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local
      --strip-components=1 --no-same-owner     && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\"
      SHASUMS256.txt.asc SHASUMS256.txt     && apt-get purge -y --auto-remove $buildDeps
      \t&& ln -s /usr/local/bin/node /usr/local/bin/nodejs"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& for key in \t\t6A010C5166006599AA17F08146C2130DFD2497F5 \t; do
      \t\tgpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      \"$key\" || \t\tgpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      \"$key\" || \t\tgpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"
      ; \tdone \t&& curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"
      \t&& curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"
      \t&& gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz
      \t&& mkdir -p /opt \t&& tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \t&& ln
      -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \t&& ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg
      /usr/local/bin/yarnpkg \t&& rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz"
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - "set -xe;     echo -e \"\\n\"'export PATH=\"$PATH:$HOME/.composer/vendor/bin\"'
      >> $HOME/.profile; \t. $HOME/.profile; \tcomposer global require consolidation/cgr
      >/dev/null; \tcomposer global require hirak/prestissimo >/dev/null; \tcomposer
      clear-cache;"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: shell
    Shell:
    - /bin/sh
    - -c
  - Chown: docker:docker
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.ssh
    - /home/docker/.ssh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /opt/startup.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - healthcheck.sh
    - /opt/healthcheck.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/php/php-src/PHP-${PHP_VERSION}/php.ini-development
    - /usr/local/etc/php/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/zz-php.ini
    - /usr/local/etc/php/conf.d/zz-php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/xdebug.ini
    - /opt/docker-php-ext-xdebug.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/zz-php-fpm.conf
    - /usr/local/etc/php-fpm.d/zz-php-fpm.conf
  - Env:
    - Key: TERM
      Value: xterm
    - Key: PROJECT_ROOT
      Value: /var/www
    - Key: HOST_UID
      Value: "1000"
    - Key: HOST_GID
      Value: "1000"
    - Key: XDEBUG_ENABLED
      Value: "0"
    Name: env
  - Name: expose
    Ports:
    - "9000"
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "3000"
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - /opt/startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 5000000000
      Retries: 12
      Test:
      - CMD
      - /opt/healthcheck.sh
      Timeout: 1000000000
    Name: healthcheck
  From:
    Image: php:7.3.11-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3.11-fpm
