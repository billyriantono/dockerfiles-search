MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: '"Gregory D. Horne" horne@member.fsf.org'
    Name: maintainer
  - Env:
    - Key: ARCH
      Value: amd64
    Name: env
  - Env:
    - Key: BIOPYTHON_VERSION
      Value: "1.66"
    Name: env
  - Env:
    - Key: RSTUDIO_VERSION
      Value: 0.99.892
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Env:
    - Key: LOCALE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - "dpkg-reconfigure locales \t\t&& locale-gen ${LOCALE} \t\t&& /usr/sbin/update-locale
      LANG=${LOCALE}"
    Name: run
    PrependShell: true
  - Env:
    - Key: GDST_USER
      Value: gdst
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${GDST_USER}
    Name: env
  - CmdLine:
    - "useradd --create-home --shell /bin/bash ${GDST_USER} \t\t&& echo \"${GDST_USER}:science\"
      | chpasswd \t\t&& mkdir ${HOME}/bin \t\t&& mkdir ${HOME}/tmp"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install --yes --no-install-recommends         libssl-dev         libcurl4-gnutls-dev
      \t\tcurl         wget         ca-certificates \t\tman"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes xvfb xauth xfonts-base
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install --yes git git-doc \t\t&& git config --system push.default simple"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y --no-install-recommends \t\tpython \t\tpython-dev \t\tpython-pip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install --yes --no-install-recommends \t\tbuild-essential \t\tpython3
      python3-dev \t\tgfortran \t\tpython3-numpy \t\tpython3-pip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip3 install jupyter \t\t&& python2 -m pip install ipykernel \t\t&& python2
      -m ipykernel install --user"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp \t\t&& wget -c -nv http://biopython.org/DIST/biopython-${BIOPYTHON_VERSION}.tar.gz
      \        && tar -xzf biopython-${BIOPYTHON_VERSION}.tar.gz \t\t&& cd biopython*
      \        && python3 setup.py build         && python3 setup.py install         &&
      cd /         && rm -rf /tmp/biopython-${BIOPYTHON_VERSION}.tar.gz /tmp/biopython*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GALAXY_ACCOUNT
      Value: galaxy
    Name: env
  - Env:
    - Key: GALAXY_HOME
      Value: /home/${GALAXY_ACCOUNT}
    Name: env
  - CmdLine:
    - useradd --groups staff --create-home --shell /bin/bash ${GALAXY_ACCOUNT}         &&
      echo "galaxy:science" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${GALAXY_HOME}         && git clone https://github.com/galaxyproject/galaxy/         &&
      chown -R ${GALAXY_ACCOUNT}:${GALAXY_ACCOUNT} ./galaxy         && cd galaxy         &&
      git checkout -b master origin/master         && sed -i 's/export GALAXY_CONFIG_FILE/export
      GALAXY_CONFIG_FILE\n    exit 0/' run.sh         && ./run.sh         && sed -i
      's/exit 0/#exit 0/' run.sh         && cp config/galaxy.ini.sample config/galaxy.ini         &&
      sed -i 's/#host = 127.0.0.1/host = 0.0.0.0/' config/galaxy.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/#admin_users = None/admin_users = gdst@domain.tld/' ${GALAXY_HOME}/galaxy/config/galaxy.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\"         >> /etc/apt/sources.list
      \        && apt-key adv --keyserver keyserver.ubuntu.com --recv-key 51716619E084DAB9
      \        && apt-get update         && apt-get install --yes --force-yes --no-install-recommends
      \        r-base r-base-dev r-doc-info r-recommended         libxml2-dev \t\tpoppler-utils
      \        texlive texlive-xetex texlive-latex-extra lmodern         && mkdir
      -p /etc/R/ \t\t&& echo \"options(repos = list(CRAN = 'https://cran.rstudio.com/'),
      \t\tdownload.file.method = 'libcurl')\" /etc/R/Rprofile.site \t\t&& sed -i 's/^R_LIBS_USER/#R_LIBS_USER/'
      /etc/R/Renviron \t\t&& echo \"R_LIBS_USER=~/R/packages\" >> /etc/R/Renviron
      \t\t&& echo \"R_LIBS=~/R/packages\" >> /etc/R/Renviron.site"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install --yes psmisc libapparmor1 \t\t&& wget -c -nv http://download2.rstudio.org/rstudio-server-${RSTUDIO_VERSION}-${ARCH}.deb
      \t\t&& dpkg -i rstudio-server-${RSTUDIO_VERSION}-${ARCH}.deb \t\t&& rm rstudio-server-${RSTUDIO_VERSION}-${ARCH}.deb"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "r-libs-user=~/R/packages" >> /etc/rstudio/rsession.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -c -nv https://github.com/jgm/pandoc/releases/download/1.16.0.2/pandoc-1.16.0.2-1-amd64.deb
      \t\t&& dpkg -i pandoc-1.16.0.2-1-amd64.deb \t\t&& rm pandoc-1.16.0.2-1-amd64.deb"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd ${HOME} \t\t&& jupyter notebook --generate-config \t\t&& sed -i \"s/# c.NotebookApp.ip
      = 'localhost'/c.NotebookApp.ip = '0.0.0.0'/\"\t\t\t  ${HOME}/.jupyter/jupyter_notebook_config.py"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bioconductor_installation.r
    - /tmp/bioconductor_installation.r
  - CmdLine:
    - "Rscript /tmp/bioconductor_installation.r \t\t&& rm /tmp/bioconductor_installation.r"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install --yes screen vim nano \t\t&& echo \"alias vi=vim\" >> ${HOME}/.bashrc
      \t\t&& curl -fLo ${HOME}/.vim/autoload/plug.vim --create-dirs                 https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      \t\t&& mkdir ${HOME}/data"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vimrc
    - ${HOME}/.vimrc
  - CmdLine:
    - "apt-get install --yes nodejs-legacy npm \t\t&& cd /tmp \t\t&& git clone https://github.com/krishnasrinivas/wetty
      \t\t&& cd wetty \t\t&& npm install \t\t&& mkdir /opt/wetty \t\t&& cp app.js
      /opt/wetty/app.js \t\t&& cp bin/wetty.js /opt/wetty/wetty.js \t\t&& sed -i 's/\\.\\.\\/app/\\/opt\\/wetty\\/app\\.js/'
      /opt/wetty/wetty.js \t\t&& chmod +x /opt/wetty/wetty.js \t\t&& cp -r node_modules
      /opt/wetty \t\t&& cp -r public /opt/wetty \t\t&& ln -s /opt/wetty/wetty.js /usr/local/bin/wetty.js
      \t\t&& rm -r /tmp/wetty"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - "mkdir -p /var/log/supervisor \t\t&& chgrp staff /var/log/supervisor \t\t&&
      chmod g+w /var/log/supervisor \t\t&& chgrp staff /etc/supervisor/conf.d/supervisord.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ${HOME}/.python-eggs
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${GDST_USER}:${GDST_USER} ${HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get autoclean
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${HOME}
  - Name: workdir
    Path: ${HOME}
  - Name: expose
    Ports:
    - "8000"
    - "8080"
    - "8787"
    - "8888"
  - CmdLine:
    - /usr/bin/supervisord
    - -c
    - /etc/supervisor/conf.d/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: "FROM\tubuntu:latest"
