MetaArgs: null
Stages:
- BaseName: amazonlinux:2017.09
  Commands:
  - CmdLine:
    - yum update -y &&     yum install -y atlas-devel                    atlas-sse3-devel                    blas-devel                    gcc                    gcc-c++                    lapack-devel                    python36-devel                    python36-virtualenv                    findutils                    git                    vi                    which                    zip
    Name: run
    PrependShell: true
  - Env:
    - Key: VIRTUAL_ENV
      Value: /venv
    Name: env
  - CmdLine:
    - /usr/bin/virtualenv-3.6     --python /usr/bin/python3.6 ${VIRTUAL_ENV}     --always-copy     --no-site-packages
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/libexec/gcc/x86_64-amazon-linux/4.8.5/"'
    Name: env
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     pip install --upgrade setuptools &&     pip
      install wheel &&     pip install numpy &&     pip install scipy &&     pip install
      matplotlib &&     pip install astropy &&     pip install pyyaml &&     pip install
      drizzlepac &&     pip install peakutils &&     pip install extinction &&     pip
      install descartes &&     pip install shapely &&     pip install pyregion
    Name: run
    PrependShell: true
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     python -c "import matplotlib"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/matplotlibrc
    - /root/.config/matplotlib/matplotlibrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/matplotlibrc
    - ${VIRTUAL_ENV}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/matplotlibrc
    - /venv/lib64/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
  - CmdLine:
    - 'date # Force rebuild from here'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "2019-09-12e" # Force rebuild from here'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ &&     source ${VIRTUAL_ENV}/bin/activate &&     git clone https://github.com/gbrammer/grizli.git
      &&     cd grizli &&     pip install . &&     cd ../ &&     rm -rf grizli
    Name: run
    PrependShell: true
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     GRIZLI_PATH=`python -c "import grizli;
      print(grizli.GRIZLI_PATH)" | tail -1`  &&     echo $GRIZLI_PATH &&     cp ${VIRTUAL_ENV}/matplotlibrc
      ${GRIZLI_PATH}/matplotlibrc &&     mkdir $GRIZLI_PATH/CONF/ &&     ln -s $GRIZLI_PATH/CONF
      /tmp/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/setup_grizli.py
    - /tmp/
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     cd /tmp/ &&     python setup_grizli.py
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ &&     source ${VIRTUAL_ENV}/bin/activate &&     git clone https://github.com/gbrammer/eazy-py.git
      &&     cd eazy-py &&     python setup.py install &&     cd ../ &&     rm -rf
      eazy-py
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ &&     source ${VIRTUAL_ENV}/bin/activate &&     git clone https://github.com/bd-j/prospector.git
      &&     cd prospector &&     python setup.py install &&     cd ../ &&     rm
      -rf prospector
    Name: run
    PrependShell: true
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     pip install setuptools &&     pip
      install pandas &&     pip install sqlalchemy &&     cd /tmp/ &&     git clone
      https://github.com/jkehler/awslambda-psycopg2.git &&     mkdir /venv/lib/python3.6/site-packages/psycopg2
      &&     cp awslambda-psycopg2/psycopg2-3.6/* /venv/lib/python3.6/site-packages/psycopg2/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /venv/lib/python3.6/site-packages/stsci/skypac /venv/lib64/python3.6/site-packages/stsci/
      &&     mv /venv/lib/python3.6/site-packages/stsci/tools /venv/lib64/python3.6/site-packages/stsci/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/process.py
    - ${VIRTUAL_ENV}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/aws_drizzler.py
    - ${VIRTUAL_ENV}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/db.yml
    - ${VIRTUAL_ENV}/lib64/python3.6/site-packages/grizli/data/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/package_venv.sh
    - /tmp/
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     cd /tmp/ &&     bash /tmp/package_venv.sh
      ${VIRTUAL_ENV}
    Name: run
    PrependShell: true
  - CmdLine:
    - source ${VIRTUAL_ENV}/bin/activate &&     pip install boto3 &&     mkdir ~/.aws/
      &&     echo "Put AWS credentials in ~/.aws/credentials"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/aws_credentials
    - ~/.aws/credentials
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Install/add_workdir_python
    - /usr/local/bin/add_workdir_python
  - CmdLine:
    - mkdir /tmp/iref &&     mkdir /tmp/uref &&     mkdir /tmp/jref
    Name: run
    PrependShell: true
  - Env:
    - Key: iref
      Value: /tmp/iref/
    Name: env
  - Env:
    - Key: jref
      Value: /tmp/jref/
    Name: env
  - Env:
    - Key: uref
      Value: /tmp/uref/
    Name: env
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: amazonlinux:2017.09
  Name: ""
  Platform: ""
  SourceCode: FROM amazonlinux:2017.09
