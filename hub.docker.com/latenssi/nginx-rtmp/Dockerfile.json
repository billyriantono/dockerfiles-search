{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Goran Stefkovski \u003cgorans@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get -q -y update     \u0026\u0026 apt-get -q -y install cron logrotate make build-essential libssl-dev         zlib1g-dev libpcre3 libpcre3-dev curl pgp yasm     \u0026\u0026 apt-get -q -y build-dep nginx     \u0026\u0026 apt-get -q -y clean \u0026\u0026 rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 curl -L http://downloads.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.4.tar.gz \u003e fdk-aac.tgz     \u0026\u0026 mkdir fdk-aac \u0026\u0026 tar xzf fdk-aac.tgz -C fdk-aac --strip 1 \u0026\u0026 cd fdk-aac     \u0026\u0026 ./configure \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 curl -L -O ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2     \u0026\u0026 mkdir x264 \u0026\u0026 tar xjf last_x264.tar.bz2 -C x264 --strip 1 \u0026\u0026 cd x264     \u0026\u0026 ./configure --enable-static \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 curl -L -O https://libav.org/releases/libav-11.4.tar.gz     \u0026\u0026 mkdir libav \u0026\u0026 tar xzf libav-11.4.tar.gz -C libav --strip 1 \u0026\u0026 cd libav     \u0026\u0026 ./configure --enable-gpl --enable-nonfree         --enable-libfdk-aac --enable-libx264     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -g nginx nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/nginx /var/cache/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 curl -L https://github.com/arut/nginx-rtmp-module/archive/v1.1.7.tar.gz \u003e nginx-rtmp.tgz     \u0026\u0026 mkdir nginx-rtmp \u0026\u0026 tar xzf nginx-rtmp.tgz -C nginx-rtmp --strip 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /www \u0026\u0026 cp /root/nginx-rtmp/stat.xsl /www/info.xsl \u0026\u0026 chown -R nginx:nginx /www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 curl -L -O http://nginx.org/download/nginx-1.9.4.tar.gz     \u0026\u0026 curl -L -O http://nginx.org/download/nginx-1.9.4.tar.gz.asc     \u0026\u0026 gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-key A1C052F8     \u0026\u0026 gpg nginx-1.9.4.tar.gz.asc     \u0026\u0026 tar xzf nginx-1.9.4.tar.gz \u0026\u0026 cd nginx-1.9.4     \u0026\u0026 ./configure         --prefix=/etc/nginx         --sbin-path=/usr/sbin/nginx         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --pid-path=/var/run/nginx.pid         --lock-path=/var/run/nginx.lock         --http-client-body-temp-path=/var/cache/nginx/client_temp         --http-proxy-temp-path=/var/cache/nginx/proxy_temp         --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp         --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp         --http-scgi-temp-path=/var/cache/nginx/scgi_temp         --user=nginx         --group=nginx         --with-http_ssl_module         --with-http_realip_module         --with-http_addition_module         --with-http_sub_module         --with-http_dav_module         --with-http_flv_module         --with-http_mp4_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_random_index_module         --with-http_secure_link_module         --with-http_stub_status_module         --with-http_auth_request_module         --with-mail         --with-mail_ssl_module         --with-file-aio         --add-module=/root/nginx-rtmp         --with-ipv6         --with-threads         --with-stream         --with-stream_ssl_module    \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "1935"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/templates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sbin/substitute-env-vars.sh",
            "/usr/sbin/substitute-env-vars.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sbin/render-templates.sh",
            "/usr/sbin/render-templates.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sbin/entrypoint.sh",
            "/usr/sbin/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates/nginx.conf.tmpl",
            "/etc/nginx/templates/nginx.conf.tmpl"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx",
            "-c",
            "/etc/nginx/nginx.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}