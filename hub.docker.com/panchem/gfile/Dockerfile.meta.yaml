MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10.3-stretch
  Commands:
  - CmdLine:
    - mkdir -p /src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/app
  - Env:
    - Key: GOPATH
      Value: /
    - Key: GOBIN
      Value: /go/bin
    Name: env
  - CmdLine:
    - go get -u github.com/golang/dep/...
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.lock
    - Gopkg.toml
    - ./
  - CmdLine:
    - dep ensure -vendor-only
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - export GOOS=linux GOARCH=amd64 CGO_ENABLED=1 && go build -o gfile
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10.3-stretch
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10.3-stretch as build
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /src/app/gfile
    - /app/gfile
  - Env:
    - Key: GIN_MODE
      Value: release
    Name: env
  - CmdLine:
    - /app/gfile
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
