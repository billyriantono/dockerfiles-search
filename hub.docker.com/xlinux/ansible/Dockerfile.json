{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"===\u003e Adding Ansible's prerequisites...\"   \u0026\u0026     apt-get update -y            \u0026\u0026     apt-get upgrade -y            \u0026\u0026         apt-get install --no-install-recommends -y -q                  build-essential                                        python python-pip python-dev                           libffi-dev libssl-dev                                  libxml2-dev libxslt1-dev zlib1g-dev                    git \u0026\u0026     python -m pip install --upgrade pip \u0026\u0026     pip2 install --upgrade setuptools pip wheel      \u0026\u0026     pip2 install --upgrade pyyaml jinja2 pycrypto    \u0026\u0026     pip2 install --upgrade pywinrm                   \u0026\u0026     pip2 install --upgrade pyvmomi                   \u0026\u0026     pip2 install --upgrade ansible                   \u0026\u0026     pip2 install --upgrade openstacksdk              \u0026\u0026         echo \"===\u003e Installing handy tools (not absolutely required)...\"  \u0026\u0026     apt-get install -y sshpass openssh-client  \u0026\u0026         echo \"===\u003e Clean up...\"                                         \u0026\u0026     apt-get remove -y --auto-remove             build-essential python-pip python-dev git libffi-dev libssl-dev  \u0026\u0026     apt-get clean                                                   \u0026\u0026     rm -rf /var/lib/apt/lists/*                                     \u0026\u0026         echo \"===\u003e Adding hosts for convenience...\"  \u0026\u0026     mkdir -p /etc/ansible                        \u0026\u0026     echo 'localhost' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "ansible-playbook",
            "--version"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}