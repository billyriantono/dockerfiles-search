{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins",
      "SourceCode": "FROM jenkins/jenkins",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SDKMAN_DIR",
              "Value": "/usr/share/sdkman/dir"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "jenkins-gradle.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "jenkins-gradle.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y zip \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 mkdir -p \"$(dirname \"$SDKMAN_DIR\")\"     \u0026\u0026 chown -R jenkins: \"$(dirname \"$SDKMAN_DIR\")\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "curl -s \"https://get.sdkman.io\" | bash     \u0026\u0026 source \"$SDKMAN_DIR/bin/sdkman-init.sh\"     \u0026\u0026 sdk install gradle 4.10.2    \u0026\u0026 sdk install maven    \u0026\u0026 /usr/local/bin/install-plugins.sh git gradle workflow-aggregator pipeline-utility-steps active-directory maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "curl -O https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz     \u0026\u0026 tar zxvf docker-latest.tgz     \u0026\u0026 cp docker/docker /usr/local/bin/     \u0026\u0026 rm -rf docker docker-latest.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins ALL=NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://nodejs.org/dist/v10.14.1/node-v10.14.1-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvzf node-v10.14.1-linux-x64.tar.gz -C /nodejs --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/nodejs/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g cnpm --registry=https://registry.npm.taobao.org"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}