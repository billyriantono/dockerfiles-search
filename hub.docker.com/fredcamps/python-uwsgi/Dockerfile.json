{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "fredcamps",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VER",
              "Value": "3.4.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y -q   \u0026\u0026 apt-get install -y -q --no-install-recommends   autoconf   build-essential   locales   libssl-dev   libbz2-dev   libsasl2-dev   libmemcached-dev   ca-certificates   supervisor   libpq-dev   curl   libmysqlclient-dev   libmongo-client-dev   openssh-client   software-properties-common   libsqlite3-dev   libncurses5-dev   libxml2-dev   libxslt1-dev   procps   pkg-config   libcurl4-gnutls-dev   libpcre3-dev   cron   phantomjs   \u0026\u0026 apt-get autoremove -y   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -O https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz   \u0026\u0026 tar -zxf Python-${PYTHON_VER}.tgz \u0026\u0026 cd Python-${PYTHON_VER}   \u0026\u0026 ./configure --prefix=/opt/python \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd .. \u0026\u0026 rm -rf Python-${PYTHON_VER}.tgz \u0026\u0026 mv Python-${PYTHON_VER} /opt/   \u0026\u0026 v=$(echo $PYTHON_VER | cut -d '.' -f 1 )   \u0026\u0026 ln -sf $(which python) /opt/python/bin/python   \u0026\u0026 /opt/python/bin/pip${v} install --upgrade pip virtualenvwrapper setuptools uwsgi   \u0026\u0026 mkdir -p /var/log/uwsgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos '' python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./virtualenv",
            "/home/python/.virtualenv"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./bashrc",
            "/home/python/.bashrc"
          ]
        },
        {
          "CmdLine": [
            "chown python:python /home/python/.virtualenv     \u0026\u0026 chown python:python /home/python/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R python:python /var/log/uwsgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9001"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord -nc /etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}