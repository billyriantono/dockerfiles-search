{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive     \u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/02apt-speedup     \u0026\u0026 echo \"deb http://http.debian.net/debian/ wheezy-backports main\" \u003e /etc/apt/sources.list.d/backports.list     \u0026\u0026 echo \"deb-src http://http.debian.net/debian/ wheezy main\" \u003e /etc/apt/sources.list.d/src.list     \u0026\u0026 echo \"deb-src http://http.debian.net/debian/ wheezy-backports main\" \u003e\u003e /etc/apt/sources.list.d/src.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install --no-install-recommends build-essential curl ca-certificates     \u0026\u0026 apt-get -y -t wheezy-backports build-dep nginx     \u0026\u0026 apt-get -q -y clean     \u0026\u0026 rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*     \u0026\u0026 rm -rf /usr/share/man/?? /usr/share/man/??_*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ngx_modules",
            "/root/ngx_modules"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ngx_source",
            "/root/ngx_source"
          ]
        },
        {
          "CmdLine": [
            "cd /root/ngx_source     \u0026\u0026 ./auto/configure       --with-cc-opt=\"$(dpkg-buildflags --get CFLAGS) $(dpkg-buildflags --get CPPFLAGS)\"       --with-ld-opt=\"$(dpkg-buildflags --get LDFLAGS)\"       --prefix=/usr/local       --sbin-path=/usr/local/sbin       --conf-path=/etc/nginx/nginx.conf       --http-log-path=/var/log/nginx/access.log       --error-log-path=/var/log/nginx/error.log       --lock-path=/var/lock/nginx.lock       --pid-path=/run/nginx.pid       --http-client-body-temp-path=/var/lib/nginx/body       --http-fastcgi-temp-path=/var/lib/nginx/fastcgi       --http-proxy-temp-path=/var/lib/nginx/proxy       --http-scgi-temp-path=/var/lib/nginx/scgi       --http-uwsgi-temp-path=/var/lib/nginx/uwsgi       --with-debug       --with-pcre-jit       --with-ipv6       --with-http_ssl_module       --with-http_stub_status_module       --with-http_realip_module       --with-http_auth_request_module       --with-http_addition_module       --with-http_geoip_module       --with-http_gzip_static_module       --with-http_image_filter_module       --with-http_sub_module       --with-http_xslt_module       --add-module=/root/ngx_modules/ngx_devel_kit       --add-module=/root/ngx_modules/lua-nginx-module       --add-module=/root/ngx_modules/ngx_aws_auth     \u0026\u0026 make -j2     \u0026\u0026 make install     \u0026\u0026 rm -rf /root/ngx_modules /root/ngx_source     \u0026\u0026 mkdir --parents /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sLo /usr/local/bin/ep https://github.com/kreuzwerker/envplate/releases/download/1.0.0-RC1/ep-linux \u0026\u0026 chmod +x /usr/local/bin/ep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/mime.types",
            "/etc/nginx/mime.types"
          ]
        },
        {
          "CmdLine": [
            "useradd www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "ep",
            "-v",
            "/etc/nginx/nginx.conf",
            "--",
            "/usr/bin/env",
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}