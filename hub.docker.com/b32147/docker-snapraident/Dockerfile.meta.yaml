MetaArgs: null
Stages:
- BaseName: nginx:1.12-alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx_azuracast.conf
    - /etc/nginx/conf.d/azuracast.conf
  - Name: volume
    Volumes:
    - /etc/nginx/conf.d/
  - CmdLine:
    - apk add --no-cache openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/nginx/ssl/
    Name: run
    PrependShell: true
  - CmdLine:
    - "openssl req -new -nodes -x509 -subj \"/C=US/ST=Texas/L=Austin/O=IT/CN=localhost\"
      \t-days 365 -extensions v3_ca \t-keyout /etc/nginx/ssl/ssl.key \t-out /etc/nginx/ssl/ssl.crt"
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl dhparam -dsaparam -out /etc/nginx/dhparam.pem 4096
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www/letsencrypt
  - Name: volume
    Volumes:
    - /etc/nginx/ssl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/letsencrypt_connect
    - /usr/bin/letsencrypt_connect
  - CmdLine:
    - chmod a+x /usr/bin/letsencrypt_connect
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.1
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - dockerize
    - -wait
    - tcp://web:9000
    - -timeout
    - 10s
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:1.12-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:1.12-alpine
