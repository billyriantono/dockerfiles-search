MetaArgs: null
Stages:
- BaseName: ubuntu:12.04
  Commands:
  - Maintainer: Jumbune-Dev <dev@collaborate.jumbune.org>
    Name: maintainer
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y curl supervisor openssh-server net-tools
      iputils-ping nano zip maven git
    Name: run
    PrependShell: true
  - Env:
    - Key: JDK_URL
      Value: http://download.oracle.com/otn-pub/java/jdk
    Name: env
  - Env:
    - Key: JDK_VER
      Value: 7u79-b15
    Name: env
  - Env:
    - Key: JDK_VER2
      Value: jdk-7u79
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/local/jdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin
    Name: env
  - CmdLine:
    - 'cd $SRC_DIR && curl -LO "$JDK_URL/$JDK_VER/$JDK_VER2-linux-x64.tar.gz" -H ''Cookie:
      oraclelicense=accept-securebackup-cookie''  && tar xzf $JDK_VER2-linux-x64.tar.gz
      && mv jdk1* $JAVA_HOME && rm -f $JDK_VER2-linux-x64.tar.gz  && echo '''' >>
      /etc/profile  && echo ''# JDK'' >> /etc/profile  && echo "export JAVA_HOME=$JAVA_HOME"
      >> /etc/profile  && echo ''export PATH="$PATH:$JAVA_HOME/bin"'' >> /etc/profile  &&
      echo '''' >> /etc/profile  && update-alternatives --install "/usr/bin/java"
      "java" "/usr/local/jdk/bin/java" 5000'
    Name: run
    PrependShell: true
  - Env:
    - Key: SRC_DIR
      Value: /opt
    Name: env
  - Env:
    - Key: HADOOP_URL
      Value: https://archive.apache.org/dist/hadoop/core/
    Name: env
  - Env:
    - Key: HADOOP_VERSION
      Value: hadoop-2.4.1
    Name: env
  - CmdLine:
    - cd $SRC_DIR &&  wget --no-check-certificate "$HADOOP_URL/$HADOOP_VERSION/$HADOOP_VERSION.tar.gz"  &&
      tar xzf $HADOOP_VERSION.tar.gz ; rm -f $HADOOP_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: HADOOP_PREFIX
      Value: $SRC_DIR/$HADOOP_VERSION
    Name: env
  - Env:
    - Key: HADOOP_HOME
      Value: $HADOOP_PREFIX
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$HADOOP_PREFIX/bin:$HADOOP_PREFIX/sbin
    Name: env
  - Env:
    - Key: HADOOP_MAPRED_HOME
      Value: $HADOOP_PREFIX
    Name: env
  - Env:
    - Key: HADOOP_COMMON_HOME
      Value: $HADOOP_PREFIX
    Name: env
  - Env:
    - Key: HADOOP_HDFS_HOME
      Value: $HADOOP_PREFIX
    Name: env
  - Env:
    - Key: YARN_HOME
      Value: $HADOOP_PREFIX
    Name: env
  - CmdLine:
    - echo '# Hadoop' >> /etc/profile  && echo "export HADOOP_PREFIX=$HADOOP_PREFIX"
      >> /etc/profile  && echo 'export HADOOP_HOME=$HADOOP_PREFIX' >> /etc/profile  &&
      echo 'export PATH=$PATH:$HADOOP_PREFIX/bin:$HADOOP_PREFIX/sbin' >> /etc/profile  &&
      echo 'export HADOOP_MAPRED_HOME=$HADOOP_PREFIX' >> /etc/profile  && echo 'export
      HADOOP_COMMON_HOME=$HADOOP_PREFIX' >> /etc/profile  && echo 'export HADOOP_HDFS_HOME=$HADOOP_PREFIX'
      >> /etc/profile  && echo 'export YARN_HOME=$HADOOP_PREFIX' >> /etc/profile
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/core-site.xml
    - $HADOOP_PREFIX/etc/hadoop/core-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/hdfs-site.xml
    - $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/yarn-site.xml
    - $HADOOP_PREFIX/etc/hadoop/yarn-site.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/mapred-site.xml
    - $HADOOP_PREFIX/etc/hadoop/mapred-site.xml
  - CmdLine:
    - rm /opt/$HADOOP_VERSION/bin/hadoop.cmd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/local/jdk:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export HADOOP_NAMENODE_OPTS="-Dcom.sun.management.jmxremote.ssl=false
      -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5677"'
      >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export HADOOP_DATANODE_OPTS="-Dcom.sun.management.jmxremote.ssl=false
      -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5679"'
      >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export YARN_NODEMANAGER_OPTS="-Dcom.sun.management.jmxremote.ssl=false
      -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5678"'
      >> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export YARN_RESOURCEMANAGER_OPTS="-Dcom.sun.management.jmxremote.ssl=false
      -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5680"'>>
      $HADOOP_PREFIX/etc/hadoop/yarn-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_PREFIX/lib/native' >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh  &&
      echo 'export HADOOP_OPTS=-Djava.library.path=$HADOOP_PREFIX/lib' >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh  &&
      echo 'export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_PREFIX/lib/native' >> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh  &&
      echo 'export HADOOP_OPTS=-Djava.library.path=$HADOOP_PREFIX/lib' >> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && ssh-keygen -t dsa -P '' -f "/root/.ssh/id_dsa"  && cat /root/.ssh/id_dsa.pub
      >> /root/.ssh/authorized_keys && chmod 644 /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - $HADOOP_PREFIX/bin/hdfs namenode -format
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/without-password/yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''SSHD: ALL'' >> /etc/hosts.allow'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "NoHostAuthenticationForLocalhost yes" >>~/.ssh/config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "StrictHostKeyChecking no" >>~/.ssh/config
    Name: run
    PrependShell: true
  - Env:
    - Key: JUMBUNE_HOME
      Value: /root/jumbune
    Name: env
  - Env:
    - Key: AGENT_HOME
      Value: /root/agent
    Name: env
  - CmdLine:
    - mkdir $JUMBUNE_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir $AGENT_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '#Jumbune' >> /etc/profile  && echo "export JUMBUNE_HOME=$JUMBUNE_HOME"
      >> /etc/profile  && echo "export AGENT_HOME=$AGENT_HOME" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/impetus-opensource/jumbune.git jumbune_code/ -b
      master  && cd jumbune_code/  && export MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=350m"  &&
      mvn clean install -P yarn
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/deploynRun.sh
    - /root/deploynRun.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/sampleJson.json
    - /root/sampleJson.json
  - CmdLine:
    - chmod +x /root/deploynRun.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-conf/cluster-configuration.properties
    - /root/agent/cluster-configuration.properties
  - CmdLine:
    - echo 'root:hadoop' |chpasswd
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "50070"
    - 8080:8080
    - "8088"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:12.04
  Name: ""
  Platform: ""
  SourceCode: FROM     ubuntu:12.04
