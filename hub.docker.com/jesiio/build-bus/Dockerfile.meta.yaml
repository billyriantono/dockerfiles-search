MetaArgs: null
Stages:
- BaseName: node:12-alpine
  Commands:
  - Env:
    - Key: AWS_CLI_VERSION
      Value: 1.16.266
    Name: env
  - Env:
    - Key: CLJOG_VERSION
      Value: 0.2.0
    Name: env
  - Env:
    - Key: CLJ_TOOLS_VERSION
      Value: 1.10.1.469
    Name: env
  - Env:
    - Key: LEIN_VERSION
      Value: 2.9.1
    Name: env
  - Env:
    - Key: LEIN_INSTALL
      Value: /usr/local/bin/
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.5.4
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/lib/mvn
    Name: env
  - Env:
    - Key: BOOT_VERSION
      Value: 2.8.3
    Name: env
  - Env:
    - Key: BOOT_INSTALL
      Value: /usr/local/bin/
    Name: env
  - Env:
    - Key: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
      Value: "true"
    Name: env
  - Env:
    - Key: LEIN_ROOT
      Value: "1"
    Name: env
  - Env:
    - Key: DEBUG
      Value: "1"
    Name: env
  - Env:
    - Key: _JAVA_OPTIONS
      Value: '"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=3g"'
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories   &&
      echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories   &&
      echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories   &&
      apk --no-cache  update   && apk --no-cache  upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --verbose --no-cache --upgrade --virtual \t.build-deps \tbash \tbuild-base
      \tca-certificates \tchromium \tchromium-chromedriver \tcoreutils \tcurl \tdocker
      \tfile \tfontconfig \tgifsicle \tgit \tgnupg \tjq \tlibjpeg-turbo-utils \tmaven
      \tncurses \topenjdk8 \topenssh \topenssl \toptipng \tpngquant \tpostgresql \tpy3-pip
      \tpython3 \trsync \ttar \tthe_silver_searcher \tudev \tttf-opensans \tutil-linux
      \twget \tzip \t&& rm -rf /var/cache/apk"
    Name: run
    PrependShell: true
  - CmdLine:
    - chromedriver --version && chromium-browser --version
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $LEIN_INSTALL       && wget -q https://raw.githubusercontent.com/technomancy/leiningen/$LEIN_VERSION/bin/lein-pkg       &&
      echo "Comparing lein-pkg checksum ..."       && sha1sum lein-pkg       && echo
      "93be2c23ab4ff2fc4fcf531d7510ca4069b8d24a *lein-pkg" | sha1sum -c -       &&
      mv lein-pkg $LEIN_INSTALL/lein       && chmod 0755 $LEIN_INSTALL/lein       &&
      wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip       &&
      wget -q https://github.com/technomancy/leiningen/releases/download/$LEIN_VERSION/leiningen-$LEIN_VERSION-standalone.zip.asc       &&
      gpg --batch --keyserver pool.sks-keyservers.net --recv-key 2B72BF956E23DE5E830D50F6002AF007D1A7CC18       &&
      echo "Verifying Jar file signature ..."       && gpg --verify leiningen-$LEIN_VERSION-standalone.zip.asc       &&
      rm leiningen-$LEIN_VERSION-standalone.zip.asc       && mkdir -p /usr/share/java       &&
      mv leiningen-$LEIN_VERSION-standalone.zip /usr/share/java/leiningen-$LEIN_VERSION-standalone.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '(defproject dummy "" :dependencies [[org.clojure/clojure "1.10.0"]])'
      > project.clj && lein deps && rm project.clj
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $BOOT_INSTALL   && wget -q https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh   &&
      echo "Comparing installer checksum..."   && echo "f717ef381f2863a4cad47bf0dcc61e923b3d2afb
      *boot.sh" | sha1sum -c -   && mv boot.sh $BOOT_INSTALL/boot   && chmod 0755
      $BOOT_INSTALL/boot
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$BOOT_INSTALL
    Name: env
  - Env:
    - Key: BOOT_AS_ROOT
      Value: "yes"
    Name: env
  - CmdLine:
    - boot --update && boot --version | sed 's/BOOT_CLOJURE_VERSION.*/BOOT_CLOJURE_VERSION=1.10.1/'
      > ~/.boot/boot.properties
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -O https://download.clojure.org/install/linux-install-${CLJ_TOOLS_VERSION}.sh
      \t&& chmod +x linux-install-${CLJ_TOOLS_VERSION}.sh \t&& ./linux-install-${CLJ_TOOLS_VERSION}.sh
      \t&& clojure -e '(println \"IT WORKS!\")'"
    Name: run
    PrependShell: true
  - CmdLine:
    - "npm install --global --unsafe-perm \tdry-dry \tgulp-cli \tlocal-web-server
      \tlumo-cljs \tprogress \twait-on"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python3 /usr/bin/python   && ln -s /usr/bin/pip3 /usr/bin/pip
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip3 install --upgrade pip setuptools && pip3 --no-cache-dir install \t'PyYAML<=3.13,>=3.10'
      \t'botocore<1.13,>=1.12.29' \t'colorama<0.4.0,>=0.3.9' \t'urllib3<1.25,>=1.24.1'
      \tawscli==${AWS_CLI_VERSION} \tawsebcli"
    Name: run
    PrependShell: true
  - CmdLine:
    - aws --version && eb --version
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone -b master https://github.com/jesims/circleci-tools.git \t&& cd circleci-tools
      \t&& git pull \t&& chmod +x ./cancel-redundant-builds.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/tmp/circleci-tools/
    Name: env
  - CmdLine:
    - node -v > .node_version
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://raw.githubusercontent.com/axrs/cljog/${CLJOG_VERSION}/cljog   &&
      chmod u+x cljog   && mv cljog /usr/local/bin/   && wget https://raw.githubusercontent.com/axrs/cljog/${CLJOG_VERSION}/example-scripts/echo.clj   &&
      chmod u+x echo.clj   && ./echo.clj && rm echo.clj
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set unsafe-perm true
    Name: cmd
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: node:12-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:12-alpine
