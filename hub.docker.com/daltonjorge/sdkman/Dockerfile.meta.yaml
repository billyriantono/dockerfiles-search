MetaArgs: null
Stages:
- BaseName: openjdk:8
  Commands:
  - Maintainer: Dalton Jorge <daltonjorge@gmail.com>
    Name: maintainer
  - Env:
    - Key: SDKMAN_DIR
      Value: /usr/local/sdkman
    Name: env
  - Env:
    - Key: SDKMAN_URL
      Value: https://get.sdkman.io
    Name: env
  - Env:
    - Key: SONAR_VERSION
      Value: 4.0.0.1744-linux
    Name: env
  - Env:
    - Key: SONAR_ZIP
      Value: sonar-scanner-cli-${SONAR_VERSION}.zip
    Name: env
  - Env:
    - Key: SONAR_APP
      Value: sonar-scanner-${SONAR_VERSION}
    Name: env
  - Env:
    - Key: SONAR_DIR
      Value: /opt/sonarscanner
    Name: env
  - Env:
    - Key: SONAR_URL
      Value: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli
    Name: env
  - Env:
    - Key: CERTIFICATE_DIR
      Value: /usr/local/share/ca-certificates
    Name: env
  - Env:
    - Key: CERTIFICATE_URL
      Value: https://letsencrypt.org/certs/letsencryptauthorityx3.pem.txt
    Name: env
  - Env:
    - Key: CERTIFICATE_FILE
      Value: letsencryptauthorityx3.crt
    Name: env
  - CmdLine:
    - set -x &&     apt-get update && apt-get install -y       ca-certificates       zip       unzip       curl       sshpass
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CERTIFICATE_DIR
  - CmdLine:
    - mkdir letsencrypt.org &&     cd letsencrypt.org/ &&     wget -O $CERTIFICATE_FILE
      $CERTIFICATE_URL &&     update-ca-certificates
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - mkdir $SONAR_DIR &&     cd $SONAR_DIR &&     curl -O ${SONAR_URL}/${SONAR_ZIP}
      &&     unzip $SONAR_ZIP &&     rm $SONAR_ZIP &&     chmod +x ${SONAR_APP}/bin/sonar-scanner
      &&     ln -s ${SONAR_DIR}/${SONAR_APP}/bin/sonar-scanner /usr/local/bin/sonar-scanner
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s $SDKMAN_URL | bash &&     echo "sdkman_auto_answer=true" > ${SDKMAN_DIR}/etc/config
      &&     echo "sdkman_auto_selfupdate=false" >> ${SDKMAN_DIR}/etc/config &&     echo
      "sdkman_insecure_ssl=false" >> ${SDKMAN_DIR}/etc/config
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SDKMAN_DIR
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8
