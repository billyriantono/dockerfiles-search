MetaArgs: null
Stages:
- BaseName: azul/zulu-openjdk:8u72
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends                     ca-certificates                     curl                     mysql-server                     xz-utils                     keychain                     unzip                     openssh-client                     iptables                     git     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/lib/jvm/zulu-8-amd64/jre/lib/security/US_export_policy.jar /usr/lib/jvm/zulu-8-amd64/jre/lib/security/local_policy.jar
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/*
    - /usr/bin/
  - Env:
    - Key: CATTLE_HOME
      Value: /var/lib/cattle
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_API_UI_INDEX
      Value: //github.com/Cerfoglg/ui/raw/master/dist/static/1.6.4
    Name: env
  - Env:
    - Key: CATTLE_API_UI_URL
      Value: //releases.rancher.com/api-ui/1.0.8
    Name: env
  - Env:
    - Key: CATTLE_DB_CATTLE_DATABASE
      Value: mysql
    Name: env
  - Env:
    - Key: CATTLE_USE_LOCAL_ARTIFACTS
      Value: "true"
    Name: env
  - Env:
    - Key: no_proxy
      Value: localhost,127.0.0.1,localaddress,.localdomain.com
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - artifacts
    - /usr/share/cattle
  - Chown: ""
    Name: add
    SourcesAndDest:
    - service
    - /service
  - Env:
    - Key: S6_SERVICE_DIR
      Value: /service
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - target/*static.tar.gz
    - /s6-statics/
  - Name: expose
    Ports:
    - "8080"
  - Env:
    - Key: CATTLE_HOST_API_PROXY_MODE
      Value: embedded
    Name: env
  - Env:
    - Key: CATTLE_RANCHER_SERVER_VERSION
      Value: fiware
    Name: env
  - Env:
    - Key: CATTLE_RANCHER_COMPOSE_VERSION
      Value: v0.12.3
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_RANCHER_COMPOSE_LINUX_URL
      Value: https://releases.rancher.com/compose/${CATTLE_RANCHER_COMPOSE_VERSION}/rancher-compose-linux-amd64-${CATTLE_RANCHER_COMPOSE_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_RANCHER_COMPOSE_DARWIN_URL
      Value: https://releases.rancher.com/compose/${CATTLE_RANCHER_COMPOSE_VERSION}/rancher-compose-darwin-amd64-${CATTLE_RANCHER_COMPOSE_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_RANCHER_COMPOSE_WINDOWS_URL
      Value: https://releases.rancher.com/compose/${CATTLE_RANCHER_COMPOSE_VERSION}/rancher-compose-windows-386-${CATTLE_RANCHER_COMPOSE_VERSION}.zip
    Name: env
  - Env:
    - Key: CATTLE_RANCHER_CLI_VERSION
      Value: v0.5.0
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_RANCHER_CLI_LINUX_URL
      Value: https://releases.rancher.com/cli/${CATTLE_RANCHER_CLI_VERSION}/rancher-linux-amd64-${CATTLE_RANCHER_CLI_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_RANCHER_CLI_DARWIN_URL
      Value: https://releases.rancher.com/cli/${CATTLE_RANCHER_CLI_VERSION}/rancher-darwin-amd64-${CATTLE_RANCHER_CLI_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_RANCHER_CLI_WINDOWS_URL
      Value: https://releases.rancher.com/cli/${CATTLE_RANCHER_CLI_VERSION}/rancher-windows-386-${CATTLE_RANCHER_CLI_VERSION}.zip
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_CATALOG_URL
      Value: '''{"catalogs":{"community":{"url":"https://git.rancher.io/community-catalog.git","branch":"master"},"library":{"url":"https://git.rancher.io/rancher-catalog.git","branch":"master"}}}'''
    Name: env
  - Name: expose
    Ports:
    - "3306"
  - Env:
    - Key: CATTLE_CATTLE_VERSION
      Value: v0.177.8
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/Cerfoglg/cattle/releases/download/fiware-1.0/cattle.jar
    - /usr/share/cattle/
  - CmdLine:
    - cd / && for i in $(ls /s6-statics/*static.tar.gz);do tar -zxvf $i;done && rm
      -rf /s6-statics/*static.tar.gz &&     mkdir -p $CATTLE_HOME &&     /usr/share/cattle/cattle.sh
      extract &&     curl -sL https:${DEFAULT_CATTLE_API_UI_INDEX}.tar.gz | tar xvzf
      - -C /usr/share/cattle/war --strip-components=1 &&     mkdir -p /usr/share/cattle/war/api-ui
      &&     curl -sL https:${CATTLE_API_UI_URL}.tar.gz | tar xvzf - -C /usr/share/cattle/war/api-ui
      --strip-components=1 &&     /usr/share/cattle/install_cattle_binaries &&     cd
      $CATTLE_HOME && export IFS="," &&     echo "$DEFAULT_CATTLE_CATALOG_URL" > repo.json
      &&     cat repo.json &&     rancher-catalog-service --sqlite --validate --config
      repo.json &&     for i in cache/*/*; do [ -d $i ] && touch $i/.nopurge; done
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
    - /var/log/mysql
    - /var/lib/cattle
  - Env:
    - Key: DEFAULT_CATTLE_API_UI_JS_URL
      Value: /api-ui/ui.min.js
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_API_UI_CSS_URL
      Value: /api-ui/ui.min.css
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_MACHINE_EXECUTE
      Value: "true"
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_COMPOSE_EXECUTOR_EXECUTE
      Value: "true"
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_CATALOG_EXECUTE
      Value: "true"
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_AUTH_SERVICE_EXECUTE
      Value: "true"
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_WEBHOOK_SERVICE_EXECUTE
      Value: "true"
    Name: env
  - Env:
    - Key: DEFAULT_CATTLE_SECRETS_API_EXECUTE
      Value: "true"
    Name: env
  - Env:
    - Key: CATTLE_RANCHER_SERVER_IMAGE
      Value: rancher/server
    Name: env
  - CmdLine:
    - /usr/bin/entry
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/s6-svscan
    - /service
    Name: cmd
    PrependShell: false
  From:
    Image: azul/zulu-openjdk:8u72
  Name: ""
  Platform: ""
  SourceCode: FROM azul/zulu-openjdk:8u72
