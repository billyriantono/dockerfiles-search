MetaArgs: null
Stages:
- BaseName: php:5.6-fpm-alpine
  Commands:
  - Maintainer: dishuostecli "dishuostecli@zhen22.com"
    Name: maintainer
  - Key: ALPINE_REPO
    Name: arg
    Value: http://mirrors.ustc.edu.cn
  - Key: URL_PREFIX
    Name: arg
    Value: ""
  - Env:
    - Key: PHP_PHAR_DIR
      Value: '"${PHP_INI_DIR}/phar"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:${PHP_PHAR_DIR}"'
    Name: env
  - Env:
    - Key: TIMEZONE
      Value: '"Asia/Shanghai"'
    - Key: IMAGICK_VERSION
      Value: '"3.4.3"'
    - Key: IMAGICK_SHA1
      Value: '"810ec3e932efb3298e285158c72312134b6f8279"'
    - Key: GEARAMN_ID
      Value: '"cb67bb8f7551de280593ceb561bd4faf2d60ebe3"'
    - Key: GEARMAN_SHA1
      Value: '"78bc039c168c680b2c5fa4a1441bca6bd81f771c"'
    - Key: SWOOLE_VERSION
      Value: '"1.9.5"'
    - Key: SWOOLE_SHA1
      Value: '"7f3cefd1991cc5514bbba19db7358346b82aeeb3"'
    - Key: REDIS_VERSION
      Value: '"2.2.8"'
    - Key: REDIS_SHA1
      Value: '"909e04a0770006b7a407d06245af8d9d18268507"'
    - Key: MONGO_VERSION
      Value: '"1.6.14"'
    - Key: MONGO_SHA1
      Value: '"ceb59e08ee2e71dda23ba5c0989fd5172dea107d"'
    - Key: XDEBUG_VERSION
      Value: '"2.5.1"'
    - Key: XDEBUG_SHA1
      Value: '"0efb4fd7b2c3f6b3130db0145492a56df41f7c55"'
    Name: env
  - CmdLine:
    - "ver=$(cat /etc/alpine-release | awk -F '.' '{printf \"%s.%s\", $1, $2;}') \t&&
      repos=/etc/apk/repositories         && mv -f ${repos} ${repos}_bk \t&& echo
      \"${URL_PREFIX}${ALPINE_REPO}/alpine/v${ver}/main\" > ${repos} \t&& echo \"${URL_PREFIX}${ALPINE_REPO}/alpine/v${ver}/community\"
      >> ${repos} \t&& echo \"@edge ${URL_PREFIX}${ALPINE_REPO}/alpine/edge/main\"
      >> ${repos} \t&& echo \"@testing ${URL_PREFIX}${ALPINE_REPO}/alpine/edge/testing\"
      >> ${repos}         \t&& apk add --no-cache tzdata \t&& ln -sf /usr/share/zoneinfo/${TIMEZONE}
      /etc/localtime \t&& echo \"${TIMEZONE}\" > /etc/timezone                 &&
      set -xe \t&& NPROC=$(getconf _NPROCESSORS_ONLN)         && mkdir ${PHP_PHAR_DIR}
      \        && EXPECTED_SIGNATURE=$(curl -fsSL ${URL_PREFIX}https://composer.github.io/installer.sig)
      \        && php -r \"copy('${URL_PREFIX}https://getcomposer.org/installer',
      'composer-setup.php');\"         && ACTUAL_SIGNATURE=$(php -r \"echo hash_file('SHA384',
      'composer-setup.php');\")         && if [ \"${EXPECTED_SIGNATURE}\" != \"${ACTUAL_SIGNATURE}\"
      ]; then                 >&2 echo 'ERROR: Invalid installer signature';                 exit
      1;         fi         && php composer-setup.php --install-dir=${PHP_PHAR_DIR}
      --filename=composer         && rm composer-setup.php         && chmod +x ${PHP_PHAR_DIR}/composer
      \        \t&& docker-php-ext-install -j${NPROC} \t\tbcmath \t\texif \t\topcache
      \t\tpcntl \t\tsockets \t\t&& apk add --no-cache --virtual .build-deps \t\tgettext-dev
      \t&& apk add --no-cache \t\tlibintl \t&& docker-php-ext-install -j${NPROC} gettext
      \t\t&& apk add --no-cache --virtual .build-deps \t\tzlib-dev \t&& docker-php-ext-install
      -j${NPROC} zip \t\t&& apk add --no-cache --virtual .build-deps \t\tlibpng-dev
      \t\tfreetype-dev \t\tlibjpeg-turbo-dev \t&& apk add --no-cache \t\tlibpng \t\tlibjpeg-turbo
      \t\tfreetype \t&& docker-php-ext-configure gd \t\t--with-freetype-dir=/usr/include/
      \t\t--with-png-dir=/usr/include/ \t\t--with-jpeg-dir=/usr/include/ \t&& docker-php-ext-install
      -j${NPROC} gd \t\t&& apk add --no-cache --virtual .build-deps \t\tlibmcrypt-dev
      \t&& apk add --no-cache \t\tlibmcrypt \t&& docker-php-ext-install -j${NPROC}
      mcrypt \t\t&& docker-php-ext-configure mysqli \t\t--with-mysql=/usr/bin/mysql_config
      \ \t\t--with-mysqli=mysqlnd \t\t--with-pdo-mysql=mysqlnd \t&& docker-php-ext-install
      -j${NPROC} mysqli \t&& docker-php-ext-install -j${NPROC} mysql \t\t&& docker-php-ext-install
      -j${NPROC} pdo \t\t&& docker-php-ext-install -j${NPROC} pdo_mysql \t\t&& apk
      add --no-cache --virtual .build-deps \t\tlibtool \t\timagemagick-dev \t&& apk
      add --no-cache                 imagemagick         && curl -fsSL \"${URL_PREFIX}https://github.com/mkoppanen/imagick/archive/${IMAGICK_VERSION}.tar.gz\"
      -o imagick.tar.gz \t&& echo \"${IMAGICK_SHA1} *imagick.tar.gz\" | sha1sum -c
      -         && mkdir -p /tmp/imagick         && tar -xf imagick.tar.gz -C /tmp/imagick
      --strip-components=1         && rm imagick.tar.gz         && docker-php-ext-install
      /tmp/imagick         && rm -r /tmp/imagick \t        && apk add --no-cache --virtual
      .build-deps                 linux-headers                 zlib-dev                 &&
      curl -fsSL \"${URL_PREFIX}https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz\"
      -o swoole.tar.gz         && echo \"${SWOOLE_SHA1} *swoole.tar.gz\" | sha1sum
      -c -         && mkdir -p /tmp/swoole         && tar -xf swoole.tar.gz -C /tmp/swoole
      --strip-components=1         && rm swoole.tar.gz         && docker-php-ext-configure
      /tmp/swoole --enable-swoole         && docker-php-ext-install -j${NPROC} /tmp/swoole
      \        && rm -r /tmp/swoole         && curl -fsSL \"${URL_PREFIX}https://github.com/phpredis/phpredis/archive/${REDIS_VERSION}.tar.gz\"
      -o redis.tar.gz \t&& echo \"${REDIS_SHA1} *redis.tar.gz\" | sha1sum -c -         &&
      mkdir -p /tmp/redis         && tar -xf redis.tar.gz -C /tmp/redis --strip-components=1
      \        && rm redis.tar.gz         && docker-php-ext-install -j${NPROC} /tmp/redis
      \        && rm -r /tmp/redis \t&&  apk add --no-cache --virtual .build-deps
      gearman-dev gearman-libs gcc autoconf g++ zlib-dev make            --repository
      ${URL_PREFIX}${ALPINE_REPO}/alpine/edge/community          --repository ${URL_PREFIX}${ALPINE_REPO}/alpine/edge/main
      \         --repository ${URL_PREFIX}${ALPINE_REPO}/alpine/edge/testing         &&
      pecl install gearman && docker-php-ext-enable gearman         && apk del --force
      gearman-dev gcc autoconf g++ zlib-dev make         && apk add --update                 libressl-dev@edge
      \        && curl -fsSL \"${URL_PREFIX}https://github.com/mongodb/mongo-php-driver-legacy/archive/${MONGO_VERSION}.tar.gz\"
      -o mongo.tar.gz \t&& echo \"${MONGO_SHA1} *mongo.tar.gz\" | sha1sum -c -         &&
      mkdir -p /tmp/mongo         && tar -xf mongo.tar.gz -C /tmp/mongo --strip-components=1
      \        && rm mongo.tar.gz         && docker-php-ext-install -j${NPROC} /tmp/mongo
      \t&& apk del --force libressl-dev         && rm -r /tmp/mongo \t&& apk --update
      add git openssh     && rm -rf /var/lib/apt/lists/*     && rm /var/cache/apk/*
      \    && mv -f ${repos}_bk ${repos}"
    Name: run
    PrependShell: true
  From:
    Image: php:5.6-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:5.6-fpm-alpine
