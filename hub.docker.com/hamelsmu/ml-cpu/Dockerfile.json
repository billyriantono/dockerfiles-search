{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "continuumio/anaconda3",
      "SourceCode": "FROM continuumio/anaconda3",
      "Platform": "",
      "From": {
        "Image": "continuumio/anaconda3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026 apt-get install -y wget bzip2 ca-certificates     build-essential     byobu     gcc     git-core git     htop     libglib2.0-0     libxext6     libsm6     libxrender1     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda update -n base conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y -c conda-forge bcolz keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install pytorch-cpu torchvision-cpu -c pytorch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y dask"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install --upgrade         astor         altair         fastai         gensim         graphviz         h5py         hdfs         isoweek         jsonpath_rw_ext         jupyter_contrib_nbextensions         ktext         more_itertools         nmslib         opencv-python         pandas_summary         pyhive         spacy         sklearn_pandas         tensorflow-hub         tqdm         wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7654"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "mkdir ds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/ds"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/ds"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/ds"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/ds/run_jupyter.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /ds/run_jupyter.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}