{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM    ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ChubbyCat\""
            },
            {
              "Key": "git",
              "Value": "\"https://github.com/raffi-ismail/lampodbc\""
            },
            {
              "Key": "dockerhub",
              "Value": "\"https://hub.docker.com/r/chubbycat/lampodbc\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d  \u0026\u0026     echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d  \u0026\u0026     chmod +x /usr/sbin/policy-rc.d            \u0026\u0026     dpkg-divert --local --rename --add /sbin/initctl  \u0026\u0026     cp -a /usr/sbin/policy-rc.d /sbin/initctl         \u0026\u0026     sed -i 's/^exit.*/exit 0/' /sbin/initctl          \u0026\u0026     echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup   \u0026\u0026     echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean  \u0026\u0026     echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \u0026\u0026     echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean   \u0026\u0026     echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages   \u0026\u0026     echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes   \u0026\u0026     echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \u003e /etc/apt/apt.conf.d/docker-autoremove-suggests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026     mkdir -p /run/systemd \u0026\u0026 echo 'docker' \u003e /run/systemd/container \u0026\u0026     echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get upgrade -qqy \u0026\u0026     apt-get install -qq -y apt-utils curl git             software-properties-common gcc make autoconf libc-dev pkg-config libmcrypt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -qqy nano apt-transport-https bash zip unzip jq apache2  php7.2 libapache2-mod-php7.2             php-xml php-pear php7.2-dev php-zip php-curl php-gd             php-zip php-mysql php-mbstring php-gmp \u0026\u0026     apt-get update -qqy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mcrypt-1.0.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \u0026\u0026     curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list \u003e /etc/apt/sources.list.d/mssql-release.list \u0026\u0026     curl https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -o /tmp/packages-microsoft-prod.deb \u0026\u0026     dpkg -i /tmp/packages-microsoft-prod.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qqy \u0026\u0026 ACCEPT_EULA=Y apt-get install -qqy msodbcsql17 mssql-tools unixodbc-dev powershell"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo extension=sqlsrv.so \u003e /etc/php/7.2/mods-available/sqlsrv.ini \u0026\u0026     echo extension=pdo_sqlsrv.so \u003e /etc/php/7.2/mods-available/pdo_sqlsrv.ini \u0026\u0026     ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/apache2/conf.d/30-sqlsrv.ini \u0026\u0026     ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/apache2/conf.d/30-pdo_sqlsrv.ini \u0026\u0026     curl -sLo /tmp/tmp.deb http://mirrors.kernel.org/ubuntu/pool/multiverse/liba/libapache-mod-fastcgi/libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb \u0026\u0026     dpkg -i /tmp/tmp.deb; apt-get install -f \u0026\u0026     a2enmod actions fastcgi alias proxy_fcgi \u0026\u0026     pecl install sqlsrv pdo_sqlsrv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends openssh-server  \u0026\u0026 echo \"root:Docker!\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/apache2.conf",
            "/etc/apache2/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/000-default.conf",
            "/etc/apache2/sites-available/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/php.ini",
            "/etc/php/7.2/apache2/"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/composer.json",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sh/setup-composer.sh",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tmp/setup-composer.sh \u0026\u0026 /tmp/setup-composer.sh \u0026\u0026 ./composer.phar install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startup.sh",
            "/var/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /var/startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_LISTEN_PORT_HTTP",
              "Value": "80"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$PORT",
            "2222"
          ]
        },
        {
          "CmdLine": [
            "/var/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}