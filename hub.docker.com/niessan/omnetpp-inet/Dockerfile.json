{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -qq -y install build-essential gcc g++ bison flex perl-base python python3 tcl-dev     libxml2-dev libxml2-utils zlib1g-dev default-jre wget cmake python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "wget https://github.com/omnetpp/omnetpp/releases/download/omnetpp-5.4.1/omnetpp-5.4.1-src-linux.tgz     \u0026\u0026 tar -xzf omnetpp-5.4.1-src-linux.tgz     \u0026\u0026 rm omnetpp-5.4.1-src-linux.tgz     \u0026\u0026 mv omnetpp-5.4.1 /root/omnetpp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/omnetpp"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/omnetpp/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "./configure WITH_TKENV=no WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no WITH_PARSIM=no     \u0026\u0026 make -j$(grep -c proc /proc/cpuinfo)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/models"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/models"
        },
        {
          "CmdLine": [
            "wget https://github.com/inet-framework/inet/releases/download/v4.1.0/inet-4.1.0-src.tgz     \u0026\u0026 tar -xzf inet-4.1.0-src.tgz \u0026\u0026 rm inet-4.1.0-src.tgz \u0026\u0026 mv inet4 inet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/models/inet"
        },
        {
          "CmdLine": [
            "make makefiles \u0026\u0026 make -j$(grep -c proc /proc/cpuinfo) \u0026\u0026 make MODE=debug -j$(grep -c proc /proc/cpuinfo)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "wget https://github.com/danmar/cppcheck/archive/1.89.tar.gz     \u0026\u0026 tar -xzf 1.89.tar.gz \u0026\u0026 rm 1.89.tar.gz \u0026\u0026 mv cppcheck-1.89 cppcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/cppcheck"
        },
        {
          "CmdLine": [
            "cmake . \u0026\u0026 make -j$(grep -c proc /proc/cpuinfo) FILESDIR=/root/cppcheck HAVE_RULES=yes CXXFLAGS=\"-O2 -DNDEBUG -Wall -Wno-sign-compare -Wno-unused-function\"     \u0026\u0026 ln -s /root/cppcheck /usr/local/share/Cppcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/cppcheck/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root/models"
        }
      ]
    }
  ]
}