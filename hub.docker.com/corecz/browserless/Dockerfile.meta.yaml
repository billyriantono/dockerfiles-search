MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Env:
    - Key: PORT
      Value: "80"
    Name: env
  - Env:
    - Key: application_directory
      Value: /usr/src/app
    Name: env
  - Env:
    - Key: font_directory
      Value: /usr/share/fonts/noto
    Name: env
  - Env:
    - Key: CONNECTION_TIMEOUT
      Value: "60000"
    Name: env
  - Env:
    - Key: CHROME_PATH
      Value: /usr/bin/google-chrome
    Name: env
  - CmdLine:
    - mkdir -p $application_directory
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $font_directory
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $application_directory
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tsconfig.json
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - apt-get update && apt-get install -y   wget   unzip   fontconfig   locales   gconf-service   libasound2   libatk1.0-0   libc6   libcairo2   libcups2   libdbus-1-3   libexpat1   libfontconfig1   libgcc1   libgconf-2-4   libgdk-pixbuf2.0-0   libglib2.0-0   libgtk-3-0   libnspr4   libpango-1.0-0   libpangocairo-1.0-0   libstdc++6   libx11-6   libx11-xcb1   libxcb1   libxcomposite1   libxcursor1   libxdamage1   libxext6   libxfixes3   libxi6   libxrandr2   libxrender1   libxss1   libxtst6   ca-certificates   fonts-liberation   libappindicator1   libnss3   lsb-release   xdg-utils   wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes curl &&  curl --silent --location https://deb.nodesource.com/setup_8.x
      | bash - &&  apt-get install --yes nodejs &&  apt-get install --yes build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $font_directory &&  wget https://github.com/emojione/emojione-assets/releases/download/3.1.2/emojione-android.ttf
      &&   fc-cache -f -v
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g typescript @types/node &&  npm install &&  npm run build
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - npm
    - start
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
