{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "uwinart/base:latest",
      "SourceCode": "FROM uwinart/base:latest",
      "Platform": "",
      "From": {
        "Image": "uwinart/base:latest"
      },
      "Commands": [
        {
          "Maintainer": "Yurii Khmelevskii \u003cy@uwinart.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.dotdeb.org jessie all\" \u003e\u003e /etc/apt/sources.list.d/dotdeb.list \u0026\u0026   echo \"deb-src http://packages.dotdeb.org jessie all\" \u003e\u003e /etc/apt/sources.list.d/dotdeb.list \u0026\u0026   wget http://www.dotdeb.org/dotdeb.gpg -O- |apt-key add - \u0026\u0026   apt-get update -q \u0026\u0026   apt-get install -yq php5-dev php5-cli php5-fpm php5-pgsql php5-memcached php5-imagick php5-mongo php5-curl libpcre3-dev \u0026\u0026   apt-get clean \u0026\u0026   cd /usr/local/src \u0026\u0026   git clone https://github.com/alexeyrybak/blitz \u0026\u0026   cd blitz \u0026\u0026   phpize \u0026\u0026   ./configure \u0026\u0026   make \u0026\u0026   make install clean \u0026\u0026   cd /etc/php5/mods-available \u0026\u0026   touch blitz.ini \u0026\u0026   echo \"extension=blitz.so\" | tee -a blitz.ini \u0026\u0026   php5enmod blitz \u0026\u0026   usermod -u 1000 www-data \u0026\u0026   mkdir /var/log/php-fpm \u0026\u0026   sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf \u0026\u0026   sed -i -e \"s/error_log\\s*=.*/error_log = \\/var\\/log\\/php-fpm\\/php5-fpm.log/g\" /etc/php5/fpm/php-fpm.conf \u0026\u0026   sed -i -e \"s/listen\\s*=.*/listen = 0.0.0.0:9000/g\" /etc/php5/fpm/pool.d/www.conf \u0026\u0026   sed -i -e \"s/upload_max_filesize\\s*=.*/upload_max_filesize = 2000M/g\" /etc/php5/fpm/php.ini \u0026\u0026   sed -i -e \"s/max_input_time\\s*=.*/max_input_time = 900/g\" /etc/php5/fpm/php.ini \u0026\u0026   sed -i -e \"s/max_execution_time\\s*=.*/max_execution_time = 900/g\" /etc/php5/fpm/php.ini \u0026\u0026   sed -i -e \"s/memory_limit\\s*=.*/memory_limit = 1024M/g\" /etc/php5/fpm/php.ini \u0026\u0026   sed -i -e \"s/;date.timezone\\s*=.*/date.timezone = Europe\\/Kiev/g\" /etc/php5/cli/php.ini \u0026\u0026   sed -i -e \"s/pm\\.max_children\\s*=.*/pm\\.max_children = 12/g\" /etc/php5/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes \"\" | pecl install raphf-1.1.2 propro-1.0.2 \u0026\u0026   cd /etc/php5/mods-available \u0026\u0026   touch propro.ini \u0026\u0026   echo \"extension=raphf.so\\nextension=propro.so\" | tee -a propro.ini \u0026\u0026   php5enmod propro \u0026\u0026   yes \"\" | pecl install pecl_http-2.5.6 \u0026\u0026   php5dismod propro \u0026\u0026   rm -rf propro.ini \u0026\u0026   touch http.ini \u0026\u0026   echo \"extension=raphf.so\\nextension=propro.so\\nextension=http.so\" | tee -a http.ini \u0026\u0026   php5enmod http"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/ \u0026\u0026   wget http://sphinxsearch.com/files/sphinx-2.2.6-release.tar.gz \u0026\u0026   tar -xvf sphinx-2.2.6-release.tar.gz \u0026\u0026   rm sphinx-2.2.6-release.tar.gz \u0026\u0026   cd sphinx-2.2.6-release/api/libsphinxclient \u0026\u0026   ./configure \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   yes \"\" | pecl install sphinx \u0026\u0026   cd /etc/php5/mods-available \u0026\u0026   touch sphinx.ini \u0026\u0026   echo \"extension=sphinx.so\" | tee -a sphinx.ini \u0026\u0026   php5enmod sphinx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/ \u0026\u0026   git clone https://github.com/tarantool/tarantool-php \u0026\u0026   cd tarantool-php \u0026\u0026   phpize \u0026\u0026   ./configure \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   cd /etc/php5/mods-available \u0026\u0026   touch tarantool.ini \u0026\u0026   echo \"extension=/usr/local/tarantool-php/modules/tarantool.so\" | tee -a tarantool.ini \u0026\u0026   php5enmod tarantool"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026   apt-get install -yq nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -yq php5-gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/php-fpm"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/php5-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}