{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "uwinart/base:latest",
      "SourceCode": "FROM uwinart/base:latest",
      "Platform": "",
      "From": {
        "Image": "uwinart/base:latest"
      },
      "Commands": [
        {
          "Maintainer": "Yurii Khmelevskii \u003cy@uwinart.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "cd /usr/local/src \u0026\u0026   wget http://nginx.org/keys/nginx_signing.key \u0026\u0026   apt-key add nginx_signing.key \u0026\u0026   rm -f nginx_signing.key \u0026\u0026   echo \"deb http://nginx.org/packages/debian/ wheezy nginx\" \u003e\u003e /etc/apt/sources.list.d/nginx.list \u0026\u0026   echo \"deb-src http://nginx.org/packages/debian/ wheezy nginx\" \u003e\u003e /etc/apt/sources.list.d/nginx.list \u0026\u0026   apt-get -q update \u0026\u0026   apt-get build-dep -y nginx \u0026\u0026   apt-get source nginx \u0026\u0026   git clone https://github.com/openresty/echo-nginx-module \u0026\u0026   cd /usr/local/src/nginx-* \u0026\u0026   mkdir debian/modules \u0026\u0026   cd debian/modules \u0026\u0026   ln -s /usr/local/src/echo-nginx-module \u0026\u0026   apt-get install -yq libgeoip-dev geoip-database libgeoip1 \u0026\u0026   cd /usr/local/src/nginx-* \u0026\u0026   sed -i '/WITH_SPDY/a --add-module=$(CURDIR)/debian/modules/echo-nginx-module --with-http_geoip_module \\\\' debian/rules \u0026\u0026   dpkg-buildpackage -uc -b -j2 \u0026\u0026   dpkg -i ../nginx_*\\~wheezy_amd64.deb \u0026\u0026   aptitude hold nginx \u0026\u0026   rm -f /usr/local/src/nginx_* \u0026\u0026   rm -f /usr/local/src/nginx-debug* \u0026\u0026   echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026   mkdir -p /var/spool/nginx/tmp \u0026\u0026   chown nginx:nginx /var/spool/nginx/tmp \u0026\u0026   apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/share/geoip \u0026\u0026   cd /usr/local/share/geoip \u0026\u0026   wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz \u0026\u0026   gunzip GeoIP.dat.gz \u0026\u0026   wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz \u0026\u0026   gunzip GeoLiteCity.dat.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/worker_processes.*\\;/worker_processes 8;/g\" /etc/nginx/nginx.conf \u0026\u0026   sed -i -e \"s/sendfile.*\\;/sendfile off;/g\" /etc/nginx/nginx.conf \u0026\u0026   sed -i -e \"s/worker_connections.*\\;/worker_connections 10000;/g\" /etc/nginx/nginx.conf \u0026\u0026   sed -i -e \"/worker_connections/a multi_accept on;\\nuse epoll;\" /etc/nginx/nginx.conf \u0026\u0026   sed -i \"/http {/a geoip_country /usr/local/share/geoip/GeoIP.dat;\\ngeoip_city /usr/local/share/geoip/GeoLiteCity.dat;\" /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/nginx"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}