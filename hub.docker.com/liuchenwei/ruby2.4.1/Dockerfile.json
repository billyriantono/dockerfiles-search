{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "passenger_ruby",
      "BaseName": "ruby:2.4.1",
      "SourceCode": "FROM ruby:2.4.1 AS passenger_ruby",
      "Platform": "",
      "As": "passenger_ruby",
      "From": {
        "Image": "ruby:2.4.1"
      },
      "Commands": [
        {
          "Maintainer": "white \u003ca500667337@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.12.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSENGER_VERSION",
              "Value": "6.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "printf \"deb http://archive.debian.org/debian/ jessie main\\ndeb-src http://archive.debian.org/debian/ jessie main\\ndeb http://security.debian.org jessie/updates main\\ndeb-src http://security.debian.org jessie/updates main\" \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libmagick++-dev libmariadb-client-lgpl-dev libpcap-dev libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y curl apt-transport-https wget \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     apt-get install nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y xfonts-wqy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ttf-wqy-zenhei"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y fonts-arphic-ukai"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install passenger -v $PASSENGER_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd `passenger-config about root` \u0026\u0026 rake nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \u0026\u0026 tar -zxvf nginx-$NGINX_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/nginx-$NGINX_VERSION \u0026\u0026 ./configure --with-http_v2_module --with-http_ssl_module --add-module=\"`passenger-config about root`/src/nginx_module\" --with-http_gzip_static_module \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "passenger_ruby",
      "SourceCode": "FROM passenger_ruby",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "passenger_ruby",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Taipei"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APP_HOME",
              "Value": "/usr/src/app"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $APP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RAKE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_JOBS",
              "Value": "30"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}