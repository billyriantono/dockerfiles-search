{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "eclipse/stack-base:ubuntu",
      "SourceCode": "FROM eclipse/stack-base:ubuntu",
      "Platform": "",
      "From": {
        "Image": "eclipse/stack-base:ubuntu"
      },
      "Commands": [
        {
          "CmdLine": [
            "sudo apt-get purge -y python.* \u0026\u0026   sudo apt-get update \u0026\u0026   sudo apt-get install -y --no-install-recommends     autoconf     automake     bzip2     file     g++     gcc     imagemagick     libbz2-dev     libc6-dev     libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev     libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev     libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "97FC712E4C024BBEA48A61ED3A5CA953F73C700D"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "9.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026 sudo curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \u0026\u0026 sudo curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \u0026\u0026 sudo rm -r \"$GNUPGHOME\" python.tar.xz.asc \u0026\u0026 sudo mkdir -p /usr/src/python \u0026\u0026 sudo tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \u0026\u0026 sudo rm python.tar.xz \u0026\u0026 cd /usr/src/python \u0026\u0026 sudo ./configure --enable-shared --enable-unicode=ucs4 \u0026\u0026 sudo make -j$(nproc) \u0026\u0026 sudo make install \u0026\u0026 sudo ldconfig \u0026\u0026 sudo pip3 install --upgrade --ignore-installed pip==$PYTHON_PIP_VERSION \u0026\u0026 sudo find /usr/local \\( -type d -a -name test -o -name tests \\) -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' + \u0026\u0026 sudo rm -rf /usr/src/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026 sudo ln -s easy_install-3.5 easy_install \u0026\u0026 sudo ln -s idle3 idle \u0026\u0026 sudo ln -s pydoc3 pydoc \u0026\u0026 sudo ln -s python3 python \u0026\u0026 sudo ln -s python-config3 python-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo pip install --upgrade pip \u0026\u0026     sudo pip install --no-cache-dir virtualenv \u0026\u0026     sudo pip install --upgrade setuptools \u0026\u0026     sudo pip install 'python-language-server[all]'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        }
      ]
    }
  ]
}