{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8u111-jre-alpine",
      "SourceCode": "FROM openjdk:8u111-jre-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8u111-jre-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "1.6.0"
            },
            {
              "Key": "DOCKER_BUCKET",
              "Value": "get.docker.com"
            },
            {
              "Key": "CHE_IN_CONTAINER",
              "Value": "true"
            },
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/usr/lib/apache-maven-$MAVEN_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${M2_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk add --update sudo curl ca-certificates bash openssh unzip openssl shadow \u0026\u0026     curl -sSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-${DOCKER_VERSION}\" -o /usr/bin/docker \u0026\u0026     chmod +x /usr/bin/docker \u0026\u0026     cd /tmp \u0026\u0026     wget -q \"http://apache.ip-connect.vn.ua/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" \u0026\u0026     tar -xzf \"apache-maven-$MAVEN_VERSION-bin.tar.gz\" \u0026\u0026     mv \"/tmp/apache-maven-$MAVEN_VERSION\" \"/usr/lib\" \u0026\u0026     echo \"%root ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     rm -rf /tmp/* /var/cache/apk/* \u0026\u0026     adduser -S user -h /home/user -s /bin/bash -G root -u 1000 \u0026\u0026     echo \"%root ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     usermod -p \"*\" user \u0026\u0026     sudo chown -R user /home/user/ \u0026\u0026     sudo mkdir -p /home/user/.m2 \u0026\u0026     sudo mkdir -p /home/user/jdtls/data \u0026\u0026     sudo chgrp -R 0 ${HOME} \u0026\u0026     sudo chmod -R g+rwX ${HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "8000",
            "8080"
          ]
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Name": "workdir",
          "Path": "/projects"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "open-jdk-source-file-location",
            "/open-jdk-source-file-location"
          ]
        },
        {
          "CmdLine": [
            "sudo /usr/bin/ssh-keygen -A \u0026\u0026     sudo /usr/sbin/sshd -D \u0026\u0026     sudo su - \u0026\u0026     tail -f /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}