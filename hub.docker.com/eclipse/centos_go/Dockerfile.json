{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "registry.centos.org/che-stacks/centos-nodejs",
      "SourceCode": "FROM registry.centos.org/che-stacks/centos-nodejs",
      "Platform": "",
      "From": {
        "Image": "registry.centos.org/che-stacks/centos-nodejs"
      },
      "Commands": [
        {
          "CmdLine": [
            "sudo yum -y update \u0026\u0026     sudo yum -y install gcc-c++            gcc            glibc-devel            make            golang \u0026\u0026     sudo yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/projects/.che"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo mkdir -p /projects/.che \u0026\u0026     sudo chmod -R 777 /projects \u0026\u0026     export GOPATH=/tmp/gopath \u0026\u0026     go get -v github.com/nsf/gocode \u0026\u0026     go get -v github.com/uudashr/gopkgs/cmd/gopkgs \u0026\u0026     go get -v github.com/ramya-rao-a/go-outline \u0026\u0026     go get -v github.com/acroca/go-symbols \u0026\u0026     go get -v golang.org/x/tools/cmd/guru \u0026\u0026     go get -v golang.org/x/tools/cmd/gorename \u0026\u0026     go get -v github.com/fatih/gomodifytags \u0026\u0026     go get -v github.com/haya14busa/goplay/cmd/goplay \u0026\u0026     go get -v github.com/josharian/impl \u0026\u0026     go get -v github.com/tylerb/gotype-live \u0026\u0026     go get -v github.com/rogpeppe/godef \u0026\u0026     go get -v golang.org/x/tools/cmd/godoc \u0026\u0026     go get -v github.com/zmb3/gogetdoc \u0026\u0026     go get -v golang.org/x/tools/cmd/goimports \u0026\u0026     go get -v sourcegraph.com/sqs/goreturns \u0026\u0026     go get -v github.com/golang/lint/golint \u0026\u0026     go get -v github.com/cweill/gotests/... \u0026\u0026     go get -v github.com/alecthomas/gometalinter \u0026\u0026     go get -v honnef.co/go/tools/... \u0026\u0026     go get -v github.com/sourcegraph/go-langserver \u0026\u0026     go get -v github.com/derekparker/delve/cmd/dlv \u0026\u0026     mkdir -p ${HOME}/che/ls-golang \u0026\u0026     echo -e \"unset SUDO\\nif sudo -n true \u003e /dev/null 2\u003e\u00261; then\\nexport SUDO=\"sudo\"\\nfi\\n if [ ! -d \"/projects/.che/src\" ]; then\\necho \"Copying GO LS Deps\"\\n\\${SUDO} mkdir -p /projects/.che\\n \\${SUDO} cp -R /tmp/gopath/* /projects/.che/\\nfi\" \u003e ${HOME}/gopath.sh \u0026\u0026     chmod +x ${HOME}/gopath.sh \u0026\u0026     cd ${HOME}/che/ls-golang \u0026\u0026     npm i go-language-server@${GOLANG_LS_VERSION} \u0026\u0026     for f in \"${HOME}/che\"; do         sudo chgrp -R 0 ${f} \u0026\u0026         sudo chmod -R g+rwX ${f};     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "${HOME}/gopath.sh \u0026 tail -f /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}