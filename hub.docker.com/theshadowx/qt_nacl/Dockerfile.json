{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Ali Diouri \u003calidiouri@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq update                                   \u0026\u0026      DEBIAN_FRONTEND=noninteractive apt-get -qq upgrade \u003e _tmp   \u0026\u0026           DEBIAN_FRONTEND=noninteractive apt-get -qq install                           git                                                                      make                                                                     build-essential                                                          g++                                                                      lib32gcc1                                                                nano                                                                     libc6-i386                                                               python                                                                   python2.7                                                                unzip                                                                    wget                                                                     \"^libxcb.*\"                                                              libx11-xcb-dev                                                           libglu1-mesa-dev                                                         libxrender-dev                                                           libxi-dev                                                                libssl-dev                                                               libxcursor-dev                                                           libxcomposite-dev                                                        libxdamage-dev                                                           libxrandr-dev                                                            libfontconfig1-dev                                                       libcap-dev                                                               libbz2-dev                                                               libgcrypt11-dev                                                          libpci-dev                                                               libnss3-dev                                                              libxcursor-dev                                                           libxcomposite-dev                                                        libxdamage-dev                                                           libxrandr-dev                                                            libdrm-dev                                                               libfontconfig1-dev                                                       libxtst-dev                                                              libasound2-dev                                                           gperf                                                                    libcups2-dev                                                             libpulse-dev                                                             libudev-dev                                                              libssl-dev                                                               flex                                                                     bison                                                                    ruby                                                                     libicu-dev                                                               libxslt-dev                                                              zlib1g-dev \u003e _tmp \u0026\u0026                                                 apt clean \u0026\u0026 rm _tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget http://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/nacl_sdk.zip  \u0026\u0026     unzip ./nacl_sdk.zip \u0026\u0026     rm nacl_sdk.zip \u0026\u0026     nacl_sdk/naclsdk update pepper_47"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NACL_SDK_ROOT",
              "Value": "/opt/nacl_sdk/pepper_47"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "qtxmlpatterns.patch",
            "/opt"
          ]
        },
        {
          "CmdLine": [
            "git clone git://code.qt.io/qt/qt5.git Qt5.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/Qt5.6"
        },
        {
          "CmdLine": [
            "git checkout 5.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --remote qtbase \u0026\u0026 cd /opt/Qt5.6/qtbase \u0026\u0026 git checkout wip/nacl \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --remote qtdeclarative \u0026\u0026 cd /opt/Qt5.6/qtdeclarative \u0026\u0026 git checkout wip/nacl \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --remote qtxmlpatterns \u0026\u0026 cd /opt/Qt5.6/qtxmlpatterns \u0026\u0026 git checkout 5.6 \u0026\u0026 git apply ../../qtxmlpatterns.patch \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --remote qtsvg \u0026\u0026 cd /opt/Qt5.6/qtsvg \u0026\u0026 git checkout 5.6 \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --remote qtgraphicaleffects \u0026\u0026 cd /opt/Qt5.6/qtgraphicaleffects \u0026\u0026 git checkout 5.6 \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule update --remote qtquickcontrols \u0026\u0026 cd /opt/Qt5.6/qtquickcontrols \u0026\u0026 git checkout 5.6 \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "mkdir /opt/QtNaCl_56"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/QtNaCl_56"
        },
        {
          "CmdLine": [
            "bash -c \" NACL_SDK_ROOT=/opt/nacl_sdk/$(find /opt/nacl_sdk -maxdepth 1 -type d -printf \"%f\\n\" | grep 'pepper')  /opt/Qt5.6/qtbase/nacl-configure linux_x86_newlib release 64 -v -release -nomake examples -nomake tests -nomake tools\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make module-qtbase -j6 \u003e /root/module-qtbase.compile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make module-qtdeclarative -j6 \u003e /root/module-qtdeclarative.compile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make module-qtquickcontrols -j6 \u003e /root/module-qtquickcontrols.compile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/QtNaCl_56/qtbase/bin:/opt/QtNaCl_56/qtbase/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/"
        },
        {
          "CmdLine": [
            "rm /opt/qtxmlpatterns.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/root"
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}