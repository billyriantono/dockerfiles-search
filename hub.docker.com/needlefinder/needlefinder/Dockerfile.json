{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn5-runtime-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn5-runtime-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn5-runtime-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "Guillaume Pernelle \u003cgpernelle@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026 apt-get install -y wget bzip2 ca-certificates     libhdf5-dev g++ graphviz libglib2.0-0 libxext6 libsm6 libxrender1     git mercurial subversion curl libcurl3 libcurl3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m deepinfer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/deepinfer"
        },
        {
          "Name": "user",
          "User": "deepinfer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/deepinfer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "$HOME/.pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash \u0026\u0026     pyenv init - \u0026\u0026     pyenv virtualenv-init - \u0026\u0026     pyenv update \u0026\u0026     pyenv install anaconda3-4.4.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv global anaconda3-4.4.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/deepinfer/github \u0026\u0026     mkdir /home/deepinfer/data \u0026\u0026     cd /home/deepinfer/github/ \u0026\u0026     git clone https://github.com/needlefinder/needlefinder-3d-unet \u0026\u0026     cd needlefinder-3d-unet \u0026\u0026     git checkout gpu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv global anaconda3-4.4.0 \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install -r /home/deepinfer/github/needlefinder-3d-unet/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "ln -s /usr/local/nvidia/lib64/libcuda.so.1 /usr/lib/x86_64-linux-gnu/libcuda.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/deepinfer/github/needlefinder-3d-unet \u0026\u0026     git pull origin gpu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "python",
            "/home/deepinfer/github/needlefinder-3d-unet/fit.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}