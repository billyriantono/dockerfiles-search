{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7.3-alpine3.9",
      "SourceCode": "FROM python:3.7.3-alpine3.9",
      "Platform": "",
      "From": {
        "Image": "python:3.7.3-alpine3.9"
      },
      "Commands": [
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Ymage\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"${VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "ln -s /lib /lib64 \u0026\u0026     apk add --upgrade --no-cache       ca-certificates       curl       git       openssh-client       openssl       rsync       zip \u0026\u0026     apk add --upgrade --no-cache --virtual build-dependencies       build-base       libffi-dev       openssl-dev       python3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "python3 -m pip install --no-cache-dir --upgrade pip setuptools \u0026\u0026     python3 -m pip install --no-cache-dir --upgrade --requirement /opt/requirements.txt \u0026\u0026     apk del build-dependencies \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     mkdir -p ~/.ssh \u0026\u0026     echo $'Host *\\nStrictHostKeyChecking no' \u003e ~/.ssh/config \u0026\u0026     chmod 400 ~/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/local/lib/python3.7/site-packages:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ansible/",
            "/etc/ansible/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tests/",
            "/opt/resource/tests/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets/",
            "/opt/resource/"
          ]
        },
        {
          "CmdLine": [
            "ansible-playbook",
            "--version"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}