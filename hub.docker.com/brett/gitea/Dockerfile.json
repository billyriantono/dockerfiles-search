{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Brett Vickers \u003cgithub.com/beevik\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 groupadd -r gitea --gid=1000 \t\u0026\u0026 adduser --disabled-password --gecos 'Gitea' --uid 1000 --ingroup gitea gitea"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 sed -i 's/main/main contrib non-free/g' /etc/apt/sources.list \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends ca-certificates git wget locales sudo git openssh-server \t\u0026\u0026 wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y postgresql-common \t\u0026\u0026 sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \t\u0026\u0026 apt-get install -y \t\tpostgresql-$PG_MAJOR \t\tpostgresql-contrib-$PG_MAJOR \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \t\u0026\u0026 ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \t\u0026\u0026 sed -ri \"s@^#?(listen_addresses)\\s*=\\s*\\S+.*@#\\1 = '*'@\" /usr/share/postgresql/postgresql.conf.sample"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mkdir -p /var/run/postgresql \t\u0026\u0026 chown -R gitea:gitea /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/postgresql/$PG_MAJOR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mkdir -p /var/run/sshd \t\u0026\u0026 chmod 700 /var/run/sshd \t\u0026\u0026 sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config \t\u0026\u0026 sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GITEA_VERSION",
              "Value": "1.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 cd /tmp     \u0026\u0026 wget -q -O gitea https://github.com/go-gitea/gitea/releases/download/v$GITEA_VERSION/gitea-$GITEA_VERSION-linux-amd64 \t\u0026\u0026 mkdir -p /usr/local/gitea /var/lib/gitea /var/log/gitea \t\u0026\u0026 mv /tmp/gitea /usr/local/gitea \t\u0026\u0026 chown -R gitea:gitea /usr/local/gitea /var/lib/gitea /var/log/gitea \t\u0026\u0026 chmod 770 /usr/local/gitea/gitea"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/launch.sh",
            "/usr/local/gitea/launch.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 chmod 700 /docker-entrypoint.sh \t\u0026\u0026 chown gitea:gitea /usr/local/gitea/launch.sh \t\u0026\u0026 chmod 775 /usr/local/gitea/launch.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/gitea"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/gitea"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/gitea"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "3000"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}