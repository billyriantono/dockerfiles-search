MetaArgs: null
Stages:
- BaseName: debian
  Commands:
  - Maintainer: Benjamin Akhras "b@akhras.at"
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.13.0
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssl.patch
    - /usr/ssl.patch
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ngx_token_binding
    - /usr/ngx_token_binding
  - CmdLine:
    - "addgroup --system nginx \t&& adduser --disabled-password --system --home /var/cache/nginx
      --shell /sbin/nologin --ingroup nginx nginx \t&& apt-get update    && apt-get
      install -y build-essential zlib1g-dev libpcre3 libpcre3-dev libbz2-dev libssl-dev
      curl gnupg libperl-dev libc6-dev gcc \t\tmake \t\tlibxslt1-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module               --with-openssl=/usr/src/openssl-1.1.0e
      \                 --add-module=/usr/src/ngx_token_binding    \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-threads
      \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-http_slice_module \t\t--with-compat
      \t\t--with-file-aio \t\t--with-http_v2_module \t\" \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
      -o nginx.tar.gz \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc
      \ -o nginx.tar.gz.asc \t&& curl -fSL https://www.openssl.org/source/openssl-1.1.0e.tar.gz
      -o openssl.tar.gz \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor
      server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80
      \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\";
      \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\"
      && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed
      to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc
      nginx.tar.gz \t&& rm -r \"$GNUPGHOME\" nginx.tar.gz.asc    && mkdir -p /usr/src
      \   && mv /usr/ngx_token_binding /usr/src/ngx_token_binding    && tar -zxC /usr/src
      -f openssl.tar.gz    && patch /usr/src/openssl-1.1.0e/ssl/t1_lib.c < /usr/ssl.patch
      \t&& tar -zxC /usr/src -f nginx.tar.gz    && rm openssl.tar.gz \t&& rm nginx.tar.gz
      \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug
      \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug
      \t&& ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make
      install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/
      \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644
      html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      || true\t&& strip /usr/lib/nginx/modules/*.so || true \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssl
    - /etc/nginx/ssl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - chmod 700 /etc/nginx/ssl && chmod 400 /etc/nginx/ssl/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - Name: stopsignal
    Signal: SIGQUIT
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: debian
  Name: ""
  Platform: ""
  SourceCode: FROM debian
