{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:zesty-20170411",
      "SourceCode": "FROM ubuntu:zesty-20170411",
      "Platform": "",
      "From": {
        "Image": "ubuntu:zesty-20170411"
      },
      "Commands": [
        {
          "Maintainer": "Shane Starcher \u003cshanestarcher@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SENSU_VERSION",
              "Value": "1.0.0-1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get install -y curl ca-certificates apt-transport-https \u0026\u0026    curl -s https://sensu.global.ssl.fastly.net/apt/pubkey.gpg | apt-key add - \u0026\u0026    echo \"deb     https://sensu.global.ssl.fastly.net/apt xenial main\" \u003e /etc/apt/sources.list.d/sensu.list \u0026\u0026    apt-get update \u0026\u0026    apt-get install -y sensu=${SENSU_VERSION} \u0026\u0026    rm -rf /opt/sensu/embedded/lib/ruby/gems/2.4.0/{cache,doc}/* \u0026\u0026     find /opt/sensu/embedded/lib/ruby/gems/ -name \"*.o\" -delete \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/sensu/embedded/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install --no-document yaml2json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_VERSION",
              "Value": "1.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -Ls https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_amd64.deb \u003e dumb-init.deb \u0026\u0026    dpkg -i dumb-init.deb \u0026\u0026    rm dumb-init.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ENVTPL_VERSION",
              "Value": "0.2.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -Ls https://github.com/arschles/envtpl/releases/download/${ENVTPL_VERSION}/envtpl_linux_amd64 \u003e /usr/local/bin/envtpl \u0026\u0026    chmod +x /usr/local/bin/envtpl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "/etc/sensu/templates"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin",
            "/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_PLUGINS_REPO",
              "Value": "sensu-plugins"
            },
            {
              "Key": "DEFAULT_PLUGINS_VERSION",
              "Value": "master"
            },
            {
              "Key": "CLIENT_SUBSCRIPTIONS",
              "Value": "all,default"
            },
            {
              "Key": "CLIENT_BIND",
              "Value": "127.0.0.1"
            },
            {
              "Key": "CLIENT_DEREGISTER",
              "Value": "true"
            },
            {
              "Key": "TRANSPORT_NAME",
              "Value": "redis"
            },
            {
              "Key": "RABBITMQ_PORT",
              "Value": "5672"
            },
            {
              "Key": "RABBITMQ_HOST",
              "Value": "rabbitmq"
            },
            {
              "Key": "RABBITMQ_USER",
              "Value": "guest"
            },
            {
              "Key": "RABBITMQ_PASSWORD",
              "Value": "guest"
            },
            {
              "Key": "RABBITMQ_VHOST",
              "Value": "/"
            },
            {
              "Key": "RABBITMQ_PREFETCH",
              "Value": "1"
            },
            {
              "Key": "RABBITMQ_SSL_SUPPORT",
              "Value": "false"
            },
            {
              "Key": "RABBITMQ_SSL_CERT",
              "Value": "''"
            },
            {
              "Key": "RABBITMQ_SSL_KEY",
              "Value": "''"
            },
            {
              "Key": "REDIS_HOST",
              "Value": "redis"
            },
            {
              "Key": "REDIS_PORT",
              "Value": "6379"
            },
            {
              "Key": "REDIS_DB",
              "Value": "0"
            },
            {
              "Key": "REDIS_AUTO_RECONNECT",
              "Value": "true"
            },
            {
              "Key": "REDIS_RECONNECT_ON_ERROR",
              "Value": "false"
            },
            {
              "Key": "RUNTIME_INSTALL",
              "Value": "''"
            },
            {
              "Key": "LOG_LEVEL",
              "Value": "warn"
            },
            {
              "Key": "CONFIG_FILE",
              "Value": "/etc/sensu/config.json"
            },
            {
              "Key": "CONFIG_DIR",
              "Value": "/etc/sensu/conf.d"
            },
            {
              "Key": "CHECK_DIR",
              "Value": "/etc/sensu/check.d"
            },
            {
              "Key": "EXTENSION_DIR",
              "Value": "/etc/sensu/extensions"
            },
            {
              "Key": "PLUGINS_DIR",
              "Value": "/etc/sensu/plugins"
            },
            {
              "Key": "HANDLERS_DIR",
              "Value": "/etc/sensu/handlers"
            },
            {
              "Key": "HOST_DEV_DIR",
              "Value": "/dev"
            },
            {
              "Key": "HOST_PROC_DIR",
              "Value": "/proc"
            },
            {
              "Key": "HOST_SYS_DIR",
              "Value": "/sys"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $CONFIG_DIR $CHECK_DIR $EXTENSION_DIR $PLUGINS_DIR $HANDLERS_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install build-essential -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p disk-checks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p load-checks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p http"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p memory-checks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p haproxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p slack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p pingdom"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p mailer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p sensu-plugins-pagerduty"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/sensu/bin/sensu-install -p elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4567"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/sensu/conf.d"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/dumb-init",
            "--",
            "/bin/start"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}