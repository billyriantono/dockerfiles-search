MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Key: DOCKER_VERSION
    Name: arg
    Value: 1.11.1
  - CmdLine:
    - apk --no-cache add bash curl tzdata &&   cd /tmp/ &&   curl -sSL -O https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz
      &&   tar zxf docker-${DOCKER_VERSION}.tgz &&   mkdir -p /usr/local/bin/ &&   mv
      /tmp/docker/docker /usr/local/bin/ &&   curl -sSL https://raw.githubusercontent.com/spotify/docker-gc/master/docker-gc
      > /usr/bin/docker-gc &&   chmod +x /usr/local/bin/docker /usr/bin/docker-gc
      &&   apk del curl &&   rm -rf /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default-docker-gc-exclude
    - /etc/docker-gc-exclude
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - executed-by-cron.sh
    - /executed-by-cron.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - generate-crontab.sh
    - /generate-crontab.sh
  - CmdLine:
    - chmod 0755 /generate-crontab.sh &&   chmod 0755 /executed-by-cron.sh &&   chmod
      0644 /etc/docker-gc-exclude
    Name: run
    PrependShell: true
  - CmdLine:
    - /generate-crontab.sh > /var/log/cron.log 2>&1 &&   crontab crontab.tmp &&   /usr/sbin/crond
      &&   tail -f /var/log/cron.log
    Name: cmd
    PrependShell: true
  - Env:
    - Key: CLEAN_UP_VOLUMES
      Value: "1"
    Name: env
  - Labels:
    - Key: name
      Value: docker-gc-cron
    - Key: version
      Value: dev
    - Key: maintainer
      Value: '"Simone Esposito <simone@kiwi.com>"'
    Name: label
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
