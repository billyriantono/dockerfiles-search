{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkinsci/jnlp-slave",
      "SourceCode": "FROM jenkinsci/jnlp-slave",
      "Platform": "",
      "From": {
        "Image": "jenkinsci/jnlp-slave"
      },
      "Commands": [
        {
          "Maintainer": "Vishwas Sharma vishwas@suryodya.com",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y -qq --no-install-recommends wget unzip python openssh-client python-openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\topenssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://get.docker.com/ | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_API_VERSION",
              "Value": "1.23"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tgit \t\topenssh-client \t\tprocps \t\tautoconf \t\tautomake \t\tbzip2 \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibgeoip-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmysqlclient-dev \t\tlibncurses-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\txz-utils \t\tzlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends \t\ttcl \t\ttk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "9.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 buildDeps=' \t\ttcl-dev \t\ttk-dev \t' \t\u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \t\t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python \t\u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\t\u0026\u0026 cd /usr/src/python \t\u0026\u0026 ./configure \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\u0026\u0026 make -j$(nproc) \t\u0026\u0026 make install \t\u0026\u0026 ldconfig \t\t\t\u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t\u0026\u0026 python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t\u0026\u0026 rm /tmp/get-pip.py \t\u0026\u0026 pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t\u0026\u0026 [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t\u0026\u0026 find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps \t\u0026\u0026 rm -rf /usr/src/python ~/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r node \u0026\u0026 useradd -r -g node node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y -qq --no-install-recommends wget unzip python openssh-client python-openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON_SITEPACKAGES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \u0026\u0026 unzip google-cloud-sdk.zip \u0026\u0026 rm google-cloud-sdk.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --additional-components kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "google-cloud-sdk/bin/gcloud config set --installation component_manager/disable_update_check true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -- 's/\\\"disable_updater\\\": false/\\\"disable_updater\\\": true/g' /google-cloud-sdk/lib/googlecloudsdk/core/config.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /.ssh \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g bower@1.8.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli@1.2.0"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}