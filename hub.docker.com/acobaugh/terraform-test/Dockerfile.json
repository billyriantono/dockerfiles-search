{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.12.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.4.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRATEST_LOG_PARSER_VERSION",
              "Value": "0.17.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_DOCS_VERSION",
              "Value": "v0.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TF_TEST_PATH",
              "Value": "/terraform-test"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${TF_TEST_PATH}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin",
            "${TF_TEST_PATH}/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod +x ${TF_TEST_PATH}/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${TF_TEST_PATH}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update  \u0026\u0026 apk upgrade  \u0026\u0026 apk add curl gnupg go git unzip bash libssl1.1 libcrypto1.1 libffi-dev build-base linux-headers zlib-dev openssl-dev readline-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pgp_keys.asc",
            "."
          ]
        },
        {
          "CmdLine": [
            "curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip  \u0026\u0026 curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_SHA256SUMS  \u0026\u0026 cat pgp_keys.asc | gpg --import  \u0026\u0026 curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_SHA256SUMS.sig  \u0026\u0026 gpg --verify terraform_${TERRAFORM_VERSION}_SHA256SUMS.sig terraform_${TERRAFORM_VERSION}_SHA256SUMS  \u0026\u0026 sha256sum -c terraform_${TERRAFORM_VERSION}_SHA256SUMS 2\u003e\u00261 | grep \"${TERRAFORM_VERSION}_linux_amd64.zip:\\sOK\"  \u0026\u0026 unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin  \u0026\u0026 rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Os https://github.com/segmentio/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64  \u0026\u0026 mv terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64 /usr/local/bin/terraform-docs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "$HOME/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RBENV_ROOT",
              "Value": "/usr/local/rbenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_CONFIGURE_OPTS",
              "Value": "--disable-install-doc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/rbenv/rbenv.git /usr/local/rbenv  \u0026\u0026 echo 'eval \"$(rbenv init -)\"' \u003e\u003e /etc/profile.d/rbenv.sh  \u0026\u0026 mkdir -p \"$(rbenv root)\"/plugins  \u0026\u0026 git clone https://github.com/rbenv/ruby-build.git \"$(rbenv root)\"/plugins/ruby-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rbenv install ${RUBY_VERSION}  \u0026\u0026 rbenv rehash  \u0026\u0026 rbenv global ${RUBY_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem update --system \u0026\u0026 gem install --force bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --location --silent --fail --show-error -o terratest_log_parser https://github.com/gruntwork-io/terratest/releases  \u0026\u0026 chmod +x terratest_log_parser  \u0026\u0026 mv terratest_log_parser /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        }
      ]
    }
  ]
}