{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "midvalestudent/jupyter-scipy:latest",
      "SourceCode": "FROM midvalestudent/jupyter-scipy:latest",
      "Platform": "",
      "From": {
        "Image": "midvalestudent/jupyter-scipy:latest"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/usr/local/share/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 pip install -r /usr/local/share/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "OPENCV_VERSION",
              "Value": "${OPENCV_VERSION:-\"3.2.0\"}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     \u0026\u0026 REPO=http://cdn-fastly.deb.debian.org     \u0026\u0026 echo \"deb $REPO/debian jessie main\\ndeb $REPO/debian-security jessie/updates main\" \u003e /etc/apt/sources.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get -yq dist-upgrade     \u0026\u0026 apt-get install -yq --no-install-recommends         build-essential         cmake         git-core         pkg-config         libjpeg62-turbo-dev         libtiff5-dev         libjasper-dev         libpng12-dev         libavcodec-dev         libavformat-dev         libswscale-dev         libv4l-dev         libatlas-base-dev         gfortran         tesseract-ocr         tesseract-ocr-eng         libtesseract-dev         libleptonica-dev     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 mkdir -p /usr/src/build \u0026\u0026 cd /usr/src/build     \u0026\u0026 git clone -b $OPENCV_VERSION --depth 1 --recursive https://github.com/opencv/opencv.git     \u0026\u0026 git clone -b $OPENCV_VERSION --depth 1 --recursive https://github.com/opencv/opencv_contrib.git     \u0026\u0026 cd opencv \u0026\u0026 mkdir build \u0026\u0026 cd build     \u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE         -D CMAKE_INSTALL_PREFIX=/usr/local         -D INSTALL_C_EXAMPLES=OFF         -D INSTALL_PYTHON_EXAMPLES=OFF         -D OPENCV_EXTRA_MODULES_PATH=/usr/src/build/opencv_contrib/modules         -D BUILD_EXAMPLES=OFF ..     \u0026\u0026 make -j4 install \u0026\u0026 ldconfig     \u0026\u0026 cd /usr/src/build \u0026\u0026 rm -rf opencv \u0026\u0026 rm -rf opencv_contrib     \u0026\u0026 apt-get purge -y cmake \u0026\u0026 apt-get autoremove -y --purge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}