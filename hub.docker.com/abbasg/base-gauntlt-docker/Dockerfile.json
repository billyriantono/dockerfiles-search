{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DIRB_WORDLISTS",
              "Value": "/opt/dirb/wordlists"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSLYZE_PATH",
              "Value": "/usr/local/bin/sslyze"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/arachni/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y --no-install-recommends   build-essential   ca-certificates \tgit   curl   libcurl4   libcurl4-openssl-dev   wget   zlib1g-dev   libxml2-dev   libxslt1-dev   ruby   ruby-dev   ruby-bundler \tchrpath libssl-dev libxft-dev \tlibfreetype6 libfreetype6-dev \tlibfontconfig1 libfontconfig1-dev \tpython2.7 python2.7-dev python-pip python-setuptools   nmap \tsqlmap \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/phantomjs     \u0026\u0026 curl -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2            | tar -xj --strip-components=1 -C /tmp/phantomjs     \u0026\u0026 cd /tmp/phantomjs     \u0026\u0026 mv bin/phantomjs /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install wheel \u0026\u0026 \tpip install sslyze \u0026\u0026 \tpip install typing \u0026\u0026 \tpip install requests \u0026\u0026 \tpip install BeautifulSoup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q http://downloads.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz \u0026\u0026   tar -C /opt -xzf dirb222.tar.gz \u0026\u0026   rm -rf dirb222.tar.gz \u0026\u0026   mv /opt/dirb222 /opt/dirb \u0026\u0026   chmod -R +x /opt/dirb \u0026\u0026   cd /opt/dirb \u0026\u0026   bash ./configure \u0026\u0026   make \u0026\u0026   ln -s `pwd`/dirb /usr/local/bin/dirb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://github.com/Arachni/arachni/releases/download/v1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz \u0026\u0026  tar -xzf arachni-1.5.1-0.5.12-linux-x86_64.tar.gz \u0026\u0026  rm -rf arachni-1.5.1-0.5.12-linux-x86_64.tar.gz \u0026\u0026  mv arachni-* arachni"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026   git clone https://github.com/freddyb/Garmr.git \u0026\u0026   cd Garmr \u0026\u0026   python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install gauntlt --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}