MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"Kiagus Arief Adriansyah <kadriansyah@gmail.com>"'
    Name: label
  - Env:
    - Key: APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE
      Value: DontWarn
    Name: env
  - CmdLine:
    - groupadd -r mongodb && useradd -r -g mongodb mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates
      \t\tjq \t\tnumactl \t; \tif ! command -v ps > /dev/null; then \t\tapt-get install
      -y --no-install-recommends procps; \tfi; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - Env:
    - Key: JSYAML_VERSION
      Value: 3.13.1
    Name: env
  - CmdLine:
    - "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends wget;
      \tif ! command -v gpg > /dev/null; then \t\tapt-get install -y --no-install-recommends
      gnupg dirmngr; \tfi; \trm -rf /var/lib/apt/lists/*; \t\tdpkgArch=\"$(dpkg --print-architecture
      | awk -F- '{ print $NF }')\"; \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
      \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \tgpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu; \tcommand -v gpgconf && gpgconf
      --kill all || :; \trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \tchmod +x
      /usr/local/bin/gosu; \tgosu nobody true; \t\twget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\";
      \t\tapt-get purge -y --auto-remove wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Key: MONGO_PACKAGE
    Name: arg
    Value: mongodb-org
  - Key: MONGO_REPO
    Name: arg
    Value: repo.mongodb.org
  - Env:
    - Key: MONGO_PACKAGE
      Value: ${MONGO_PACKAGE}
    - Key: MONGO_REPO
      Value: ${MONGO_REPO}
    Name: env
  - Env:
    - Key: MONGO_MAJOR
      Value: "4.2"
    Name: env
  - Env:
    - Key: MONGO_VERSION
      Value: 4.2.1
    Name: env
  - CmdLine:
    - "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends wget;
      \twget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add
      -; \tapt-get install gnupg; \tapt-get purge -y --auto-remove wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [ arch=amd64,arm64 ] http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%}/$MONGO_MAJOR
      multiverse" | tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%}-${MONGO_MAJOR%}.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --allow-unauthenticated\t\t${MONGO_PACKAGE}=$MONGO_VERSION
      \t\t${MONGO_PACKAGE}-server=$MONGO_VERSION \t\t${MONGO_PACKAGE}-shell=$MONGO_VERSION
      \t\t${MONGO_PACKAGE}-mongos=$MONGO_VERSION \t\t${MONGO_PACKAGE}-tools=$MONGO_VERSION
      \t&& rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mongodb \t&& mv /etc/mongod.conf
      /etc/mongod.conf.orig"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/db /data/configdb && chown -R mongodb:mongodb /data/db /data/configdb
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data/db
    - /data/configdb
  - CmdLine:
    - ln -sf /dev/stdout /var/log/mongodb/mongod.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "27017"
  - CmdLine:
    - mongod
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM  ubuntu:18.04
