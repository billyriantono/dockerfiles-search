MetaArgs: null
Stages:
- BaseName: ubuntu:17.04
  Commands:
  - Maintainer: James Ward <james@notjam.es>
    Name: maintainer
  - Env:
    - Key: HOME
      Value: '"/root"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"~/.yarn/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"'
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /root/composer
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get install -y locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y --purge php5 php5-common
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \t\tphp7.0-common \t\tphp7.0-cli \t\tphp7.0-fpm \t\tphp7.0-dev
      \t\tphp7.0-opcache \t\tphp7.0-pgsql \t\tphp7.0-readline \t\tphp7.0-mcrypt \t\tphp7.0-zip
      \t\tphp7.0-xml \t\tphp7.0-mbstring \t\tphp7.0-curl \t\tphp7.0-json \t\tphp7.0-sqlite3
      \t\tphp7.0-tokenizer \t\tphp7.0-imap \t\tphp-msgpack \t\tphp-xdebug \t\tphp7.0-gd"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install build-essential php-pear php7.0-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libzookeeper-mt2 libzookeeper-mt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install zookeeper-0.4.0
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=zookeeper.so" >> `php --ini | grep "Loaded Configuration" |
      sed -e "s|.*:\s*||"`
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libssl-dev pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mongodb-1.2.9
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=mongodb.so" >> `php --ini | grep "Loaded Configuration" | sed
      -e "s|.*:\s*||"`
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/composer
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer selfupdate
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require hirak/prestissimo --prefer-dist --no-interaction
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/libpng12.deb http://mirrors.kernel.org/ubuntu/pool/main/libp/libpng/libpng12-0_1.2.54-1ubuntu1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --install /tmp/libpng12.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/libpng12.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nasm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g grunt
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g webpack
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:17.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.04
