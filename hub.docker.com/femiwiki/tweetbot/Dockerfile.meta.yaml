MetaArgs: null
Stages:
- BaseName: python:3-slim
  Commands:
  - Name: workdir
    Path: /a
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup.py
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tweetbot
    - tweetbot
  - CmdLine:
    - python setup.py bdist_wheel
    Name: run
    PrependShell: true
  From:
    Image: python:3-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-slim
- BaseName: python:3-slim
  Commands:
  - Env:
    - Key: TZ
      Value: Asia/Seoul
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get -y install cron
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - crontab
    - .
  - CmdLine:
    - crontab crontab && rm crontab
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /a
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt && rm requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /a/dist/*.whl
    - .
  - CmdLine:
    - pip install --no-cache-dir tweetbot-*.whl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-cmd
    - .
  - CmdLine:
    - /a/docker-cmd
    Name: cmd
    PrependShell: false
  - Name: volume
    Volumes:
    - /var/tweetbot
  From:
    Image: python:3-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-slim
