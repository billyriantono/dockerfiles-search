MetaArgs: null
Stages:
- As: builder
  BaseName: alpine:3.10
  Commands:
  - CmdLine:
    - "apk add --no-cache bash git build-base go \tmusl-dev openssl jq curl bind-tools
      whois \tdnscrypt-proxy autoconf automake \tca-certificates \t&& update-ca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && git clone https://github.com/jech/polipo && cd polipo && make
    Name: run
    PrependShell: true
  - CmdLine:
    - GOPATH=/go go get -u v2ray.com/core/...
    Name: run
    PrependShell: true
  - CmdLine:
    - GOPATH=/go go build -o /usr/bin/v2ray/v2ray v2ray.com/core/main
    Name: run
    PrependShell: true
  - CmdLine:
    - GOPATH=/go go build -o /usr/bin/v2ray/v2ctl v2ray.com/core/infra/control/main
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /go/src/v2ray.com/core/release/config/* /usr/bin/v2ray/
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: builder
  Platform: ""
  SourceCode: FROM alpine:3.10 as builder
- BaseName: alpine:3.10
  Commands:
  - CmdLine:
    - apk update
    Name: run
    PrependShell: true
  - CmdLine:
    - apk upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add bash openssl jq curl bind-tools whois dnscrypt-proxy ca-certificates
      && update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/v2ray/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/log/v2ray/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/bin/v2ray/
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/bin/v2ray
    - /usr/bin/v2ray
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /root/polipo
    - /root/polipo
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run.sh
    - /run.sh
  - CmdLine:
    - chmod 755 /*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LSTNADDR
      Value: '"0.0.0.0"'
    Name: env
  - Env:
    - Key: SOCKSPORT
      Value: '"1080"'
    Name: env
  - Env:
    - Key: HTTPPORT
      Value: '"8123"'
    Name: env
  - Env:
    - Key: DNSPORT
      Value: '"53"'
    Name: env
  - CmdLine:
    - sed -i "s/^listen_addresses = .*/listen_addresses = \[\'0.0.0.0:$DNSPORT\'\]/g"
      /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/^dnscrypt_servers = .*/dnscrypt_servers = false/g" /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/^doh_servers = .*/doh_servers = true/g" /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "socksParentProxy=localhost:$SOCKSPORT" >>/root/polipo/config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "proxyAddress=$LSTNADDR" >>/root/polipo/config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "proxyPort=$HTTPPORT" >>/root/polipo/config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "daemonise=true" >>/root/polipo/config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "diskCacheRoot=" >>/root/polipo/config
    Name: run
    PrependShell: true
  - CmdLine:
    - /run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
