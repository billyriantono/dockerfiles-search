{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-apache",
      "SourceCode": "FROM php:5.6-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.6-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get -y update     \u0026\u0026 apt-get -y install       automake       git       libicu-dev       libldap2-dev       libmagickcore-dev       libmagickwand-dev       libmcrypt-dev       libmemcached-dev       libpng-dev       libssh2-1-dev       libxslt1-dev       nodejs       unixodbc-dev       uuid-dev       vim     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install       bcmath       calendar       exif       gettext       gd       ldap       mysql       mysqli       mcrypt       pdo       pdo_mysql       shmop       soap       sockets       sysvmsg       wddx       xmlrpc       xsl       zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 docker-php-source extract odbc     \u0026\u0026 cd /usr/src/php/ext/odbc     \u0026\u0026 phpize     \u0026\u0026 sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *\u0026\u0026 *PHP_.*=yes *$@#\u0026@g' configure     \u0026\u0026 ./configure --with-unixODBC=shared,/usr     \u0026\u0026 docker-php-ext-install odbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install       igbinary       imagick       memcached       memcache       oauth-1.2.3       ssh2       xdebug       uuid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit = 512M\" \u003e $PHP_INI_DIR/conf.d/wf-memlimit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=igbinary.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=imagick.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=memcache.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=memcached.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=oauth.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=ssh2.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini     \u0026\u0026 echo \"extension=uuid.so\" \u003e\u003e /usr/local/etc/php/conf.d/thirdparty.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://getcomposer.org/installer",
            "/tmp/installer"
          ]
        },
        {
          "CmdLine": [
            "php /tmp/installer --install-dir=/usr/local/bin \u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /etc/apache2/ -type f -name \\*.conf | while read FN; do sed -i 's/Listen\\(.*\\)80/Listen\\18080/g;s/Listen\\(.*\\)443/Listen\\18443/g' \"$FN\"; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 496 jenkins \u0026\u0026 useradd -g jenkins -u 498 jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./root_5",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /home/www-data \u0026\u0026     usermod -d /home/www-data www-data \u0026\u0026     chown -R www-data:www-data /home/www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}